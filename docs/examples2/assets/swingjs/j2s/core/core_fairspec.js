(function(Clazz,Clazz_setTVer,Clazz_toLong,Clazz_incrAN,Clazz_array,Clazz_assert,Clazz_clone,Clazz_exceptionOf,Clazz_forName,Clazz_getClass,Clazz_instanceOf,Clazz_load,Clazz_new_,Clazz_newClass,Clazz_newEnumConst,Clazz_newInstance,Clazz_newInterface,Clazz_newMeth,Clazz_newPackage,Clazz_super_){(function(){var P$=Clazz_newPackage("com.actelion.research.chem"),I$=[[0,'java.text.DecimalFormat','java.text.NumberFormat','java.util.Random']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Coordinates", null, null, ['java.io.Serializable', 'Comparable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['x','y','z']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$com_actelion_research_chem_Coordinates',  function (c) {
C$.c$$D$D$D.apply(this, [c.x, c.y, c.z]);
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D',  function (x, y, z) {
;C$.$init$.apply(this);
this.x=x;
this.y=y;
this.z=z;
}, 1);

Clazz_newMeth(C$, 'set$com_actelion_research_chem_Coordinates',  function (c) {
this.set$D$D$D(c.x, c.y, c.z);
return this;
});

Clazz_newMeth(C$, 'set$D$D$D',  function (x, y, z) {
this.x=x;
this.y=y;
this.z=z;
});

Clazz_newMeth(C$, 'getLength$',  function () {
return this.dist$();
});

Clazz_newMeth(C$, 'dist$',  function () {
return Math.sqrt(this.distSq$());
});

Clazz_newMeth(C$, 'distSq$',  function () {
return this.x * this.x + this.y * this.y + this.z * this.z;
});

Clazz_newMeth(C$, 'distanceSquared$com_actelion_research_chem_Coordinates',  function (c) {
return (c.x - this.x) * (c.x - this.x) + (c.y - this.y) * (c.y - this.y) + (c.z - this.z) * (c.z - this.z);
});

Clazz_newMeth(C$, 'distSquareTo$com_actelion_research_chem_Coordinates',  function (c) {
return this.distanceSquared$com_actelion_research_chem_Coordinates(c);
});

Clazz_newMeth(C$, 'distance$com_actelion_research_chem_Coordinates',  function (c) {
return Math.sqrt(this.distanceSquared$com_actelion_research_chem_Coordinates(c));
});

Clazz_newMeth(C$, 'dot$com_actelion_research_chem_Coordinates',  function (c) {
return this.x * c.x + this.y * c.y + this.z * c.z;
});

Clazz_newMeth(C$, 'cross$com_actelion_research_chem_Coordinates',  function (c) {
return Clazz_new_(C$.c$$D$D$D,[this.y * c.z - this.z * c.y, -(this.x * c.z - this.z * c.x), this.x * c.y - this.y * c.x]);
});

Clazz_newMeth(C$, 'getAngle$com_actelion_research_chem_Coordinates',  function (c) {
var d1=this.distSq$();
var d2=c.distSq$();
if (d1 == 0  || d2 == 0  ) return 0;
var d=this.dot$com_actelion_research_chem_Coordinates(c) / Math.sqrt(d1 * d2);
if (d >= 1 ) return 0;
if (d <= -1 ) return 3.141592653589793;
return Math.acos(d);
});

Clazz_newMeth(C$, 'getAngleXY$com_actelion_research_chem_Coordinates',  function (c) {
var dx=c.x - this.x;
var dy=c.y - this.y;
if (dy == 0.0 ) return (dx > 0.0 ) ? 1.5707963267948966 : -1.5707963267948966;
var angle=Math.atan(dx / dy);
if (dy < 0.0 ) return (dx < 0.0 ) ? angle - 3.141592653589793 : angle + 3.141592653589793;
return angle;
});

Clazz_newMeth(C$, 'getDihedral$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates',  function (c2, c3, c4) {
return C$.getDihedral$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates(this, c2, c3, c4);
});

Clazz_newMeth(C$, 'subC$com_actelion_research_chem_Coordinates',  function (c) {
return Clazz_new_(C$.c$$D$D$D,[this.x - c.x, this.y - c.y, this.z - c.z]);
});

Clazz_newMeth(C$, 'addC$com_actelion_research_chem_Coordinates',  function (c) {
return Clazz_new_(C$.c$$D$D$D,[this.x + c.x, this.y + c.y, this.z + c.z]);
});

Clazz_newMeth(C$, 'scaleC$D',  function (scale) {
return Clazz_new_(C$.c$$D$D$D,[this.x * scale, this.y * scale, this.z * scale]);
});

Clazz_newMeth(C$, 'sub$com_actelion_research_chem_Coordinates',  function (c) {
this.x-=c.x;
this.y-=c.y;
this.z-=c.z;
return this;
});

Clazz_newMeth(C$, 'add$com_actelion_research_chem_Coordinates',  function (c) {
this.x+=c.x;
this.y+=c.y;
this.z+=c.z;
return this;
});

Clazz_newMeth(C$, 'add$D$D$D',  function (dx, dy, dz) {
this.x+=dx;
this.y+=dy;
this.z+=dz;
});

Clazz_newMeth(C$, 'scale$D',  function (scale) {
this.x*=scale;
this.y*=scale;
this.z*=scale;
return this;
});

Clazz_newMeth(C$, 'negate$',  function () {
this.x=-this.x;
this.y=-this.y;
this.z=-this.z;
});

Clazz_newMeth(C$, 'rotate$DAA',  function (m) {
var x0=this.x;
var y0=this.y;
var z0=this.z;
this.x=x0 * m[0][0] + y0 * m[1][0] + z0 * m[2][0];
this.y=x0 * m[0][1] + y0 * m[1][1] + z0 * m[2][1];
this.z=x0 * m[0][2] + y0 * m[1][2] + z0 * m[2][2];
return this;
});

Clazz_newMeth(C$, 'rotateC$DAA',  function (m) {
return Clazz_new_(C$.c$$D$D$D,[this.x * m[0][0] + this.y * m[1][0] + this.z * m[2][0], this.x * m[0][1] + this.y * m[1][1] + this.z * m[2][1], this.x * m[0][2] + this.y * m[1][2] + this.z * m[2][2]]);
});

Clazz_newMeth(C$, 'rotate$com_actelion_research_chem_Coordinates$D',  function (normal, theta) {
if (Math.abs(normal.x * normal.x + normal.y * normal.y + normal.z * normal.z - 1) > 1.0E-6 ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["normal needs to a unit vector: " + normal]);
var x=normal.x;
var y=normal.y;
var z=normal.z;
var c=Math.cos(theta);
var s=Math.sin(theta);
var t=1 - c;
var opp=Clazz_new_(C$.c$$D$D$D,[(t * x * x  + c) * this.x + (t * x * y  + s * z) * this.y + (t * x * z  - s * y) * this.z, (t * x * y  - s * z) * this.x + (t * y * y  + c) * this.y + (t * y * z  + s * x) * this.z, (t * x * z  + s * y) * this.x + (t * z * y  - s * x) * this.y + (t * z * z  + c) * this.z]);
return opp;
});

Clazz_newMeth(C$, 'unitC$',  function () {
var d=this.dist$();
if (d == 0 ) {
System.err.println$S("Cannot call unitC() on a null vector");
return Clazz_new_(C$.c$$D$D$D,[1, 0, 0]);
}return Clazz_new_(C$.c$$D$D$D,[this.x / d, this.y / d, this.z / d]);
});

Clazz_newMeth(C$, 'unit$',  function () {
var d=this.dist$();
if (d == 0 ) {
System.out.println$S("Cannot call unit() on a null vector. Returned (1,0,0)");
this.x=1;
this.y=0;
this.z=0;
return this;
}this.x/=d;
this.y/=d;
this.z/=d;
return this;
});

Clazz_newMeth(C$, 'center$com_actelion_research_chem_Coordinates',  function (c) {
this.x=(this.x + c.x) / 2.0;
this.y=(this.y + c.y) / 2.0;
this.z=(this.z + c.z) / 2.0;
return this;
});

Clazz_newMeth(C$, 'center$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates',  function (c1, c2) {
this.x=(c1.x + c2.x) / 2.0;
this.y=(c1.y + c2.y) / 2.0;
this.z=(c1.z + c2.z) / 2.0;
});

Clazz_newMeth(C$, 'between$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$D',  function (c1, c2, f) {
this.x=c1.x + f * (c2.x - c1.x);
this.y=c1.y + f * (c2.y - c1.y);
this.z=c1.z + f * (c2.z - c1.z);
return this;
});

Clazz_newMeth(C$, 'insideBounds$com_actelion_research_chem_CoordinatesA',  function (bounds) {
return bounds != null  && bounds[0].x <= this.x   && this.x <= bounds[1].x   && bounds[0].y <= this.y   && this.y <= bounds[1].y   && bounds[0].z <= this.z   && this.z <= bounds[1].z  ;
});

Clazz_newMeth(C$, 'toString',  function () {
var df=Clazz_new_($I$(1,1).c$$S,["0.00"]);
return "[" + df.format$D(this.x) + ", " + df.format$D(this.y) + ", " + df.format$D(this.z) + "]" ;
});

Clazz_newMeth(C$, 'toStringSpaceDelimited$',  function () {
var df=Clazz_new_($I$(1,1).c$$S,["0.00"]);
return df.format$D(this.x) + " " + df.format$D(this.y) + " " + df.format$D(this.z) ;
});

Clazz_newMeth(C$, 'toStringSpaceDelimited$java_util_Locale',  function (locale) {
var nf=$I$(2).getNumberInstance$java_util_Locale(locale);
var df=nf;
df.applyPattern$S("0.00");
return df.format$D(this.x) + " " + df.format$D(this.y) + " " + df.format$D(this.z) ;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o == null  || !(Clazz_instanceOf(o, "com.actelion.research.chem.Coordinates")) ) return false;
var c=o;
return Math.abs(c.x - this.x) + Math.abs(c.y - this.y) + Math.abs(c.z - this.z)  < 1.0E-6 ;
});

Clazz_newMeth(C$, 'isNaN$',  function () {
return Double.isNaN$D(this.x) || Double.isNaN$D(this.y) || Double.isNaN$D(this.z)  ;
});

Clazz_newMeth(C$, 'min$com_actelion_research_chem_Coordinates',  function (c) {
return Clazz_new_(C$.c$$D$D$D,[Math.min(this.x, c.x), Math.min(this.y, c.y), Math.min(this.z, c.z)]);
});

Clazz_newMeth(C$, 'max$com_actelion_research_chem_Coordinates',  function (c) {
return Clazz_new_(C$.c$$D$D$D,[Math.max(this.x, c.x), Math.max(this.y, c.y), Math.max(this.z, c.z)]);
});

Clazz_newMeth(C$, 'cosAngle$com_actelion_research_chem_Coordinates',  function (c) {
var d=this.dist$() * c.dist$();
if (d <= 0 ) return 0;
return this.dot$com_actelion_research_chem_Coordinates(c) / d;
});

Clazz_newMeth(C$, 'min$com_actelion_research_chem_CoordinatesA',  function (c) {
var min=Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[c[0]]);
for (var i=1; i < c.length; i++) {
min.x=Math.min(c[i].x, min.x);
min.y=Math.min(c[i].y, min.y);
min.z=Math.min(c[i].z, min.z);
}
return min;
}, 1);

Clazz_newMeth(C$, 'max$com_actelion_research_chem_CoordinatesA',  function (c) {
var max=Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[c[0]]);
for (var i=1; i < c.length; i++) {
max.x=Math.max(c[i].x, max.x);
max.y=Math.max(c[i].y, max.y);
max.z=Math.max(c[i].z, max.z);
}
return max;
}, 1);

Clazz_newMeth(C$, 'createBarycenter$com_actelion_research_chem_CoordinatesA',  function (coords) {
if (coords == null ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["The coordinates are null"]);
var res=Clazz_new_(C$);
for (var i=0; i < coords.length; i++) {
res.x+=coords[i].x;
res.y+=coords[i].y;
res.z+=coords[i].z;
}
res.x/=coords.length;
res.y/=coords.length;
res.z/=coords.length;
return res;
}, 1);

Clazz_newMeth(C$, 'getMirror$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates',  function (p, c1, c2, c3) {
var r31=Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[c3]);
r31.sub$com_actelion_research_chem_Coordinates(c1);
var r21=Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[c2]);
r21.sub$com_actelion_research_chem_Coordinates(c1);
var c=r31.cross$com_actelion_research_chem_Coordinates(r21);
if (c.distSq$() < 0.05 ) return Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[p]);
var n=c.unitC$();
var pc1=Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[c1]);
pc1.sub$com_actelion_research_chem_Coordinates(p);
var l=pc1.dot$com_actelion_research_chem_Coordinates(n);
n.scale$D(2 * l);
var pp=Clazz_new_(C$.c$$com_actelion_research_chem_Coordinates,[p]);
pp.add$com_actelion_research_chem_Coordinates(n);
return pp;
}, 1);

Clazz_newMeth(C$, 'getDihedral$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates$com_actelion_research_chem_Coordinates',  function (c1, c2, c3, c4) {
var v1=c2.subC$com_actelion_research_chem_Coordinates(c1);
var v2=c3.subC$com_actelion_research_chem_Coordinates(c2);
var v3=c4.subC$com_actelion_research_chem_Coordinates(c3);
var n1=v1.cross$com_actelion_research_chem_Coordinates(v2);
var n2=v2.cross$com_actelion_research_chem_Coordinates(v3);
return -Math.atan2(v2.getLength$() * v1.dot$com_actelion_research_chem_Coordinates(n2), n1.dot$com_actelion_research_chem_Coordinates(n2));
}, 1);

Clazz_newMeth(C$, ['compareTo$com_actelion_research_chem_Coordinates','compareTo$O'],  function (o) {
if (this.x != o.x ) return this.x < o.x  ? -1 : 1;
if (this.y != o.y ) return this.y < o.y  ? -1 : 1;
if (this.z != o.z ) return this.z < o.z  ? -1 : 1;
return 0;
});

Clazz_newMeth(C$, 'random$',  function () {
var random=Clazz_new_($I$(3,1));
return Clazz_new_(C$.c$$D$D$D,[random.nextDouble$() * 2 - 1, random.nextDouble$() * 2 - 1, random.nextDouble$() * 2 - 1]);
}, 1);

Clazz_newMeth(C$, 'getRmsd$com_actelion_research_chem_CoordinatesA$com_actelion_research_chem_CoordinatesA',  function (c1, c2) {
return C$.getRmsd$com_actelion_research_chem_CoordinatesA$com_actelion_research_chem_CoordinatesA$I(c1, c2, Math.min(c1.length, c2.length));
}, 1);

Clazz_newMeth(C$, 'getRmsd$com_actelion_research_chem_CoordinatesA$com_actelion_research_chem_CoordinatesA$I',  function (c1, c2, l) {
var sum=0;
for (var i=0; i < l; i++) {
sum+=c1[i].distanceSquared$com_actelion_research_chem_Coordinates(c2[i]);
}
return l > 0 ? Math.sqrt(sum / l) : 0;
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 11:49:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("com.actelion.research.chem"),p$1={},I$=[[0,'java.util.Arrays','com.actelion.research.chem.AromaticityResolver','com.actelion.research.chem.Molecule','com.actelion.research.util.Angle','com.actelion.research.chem.RingCollection']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ExtendedMolecule", null, 'com.actelion.research.chem.Molecule', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['mAtoms','mBonds'],'O',['mRingSet','com.actelion.research.chem.RingCollection','mPi','int[]','+mConnAtoms','+mAllConnAtoms','mConnAtom','int[][]','+mConnBond','+mConnBondOrder','mReallySimpleHydrogens','boolean[]']]
,['O',['up_down','int[][]']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (maxAtoms, maxBonds) {
;C$.superclazz.c$$I$I.apply(this,[maxAtoms, maxBonds]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$com_actelion_research_chem_Molecule',  function (mol) {
;C$.superclazz.c$$I$I.apply(this,[mol == null  ? 256 : mol.getMaxAtoms$(), mol == null  ? 256 : mol.getMaxBonds$()]);C$.$init$.apply(this);
if (mol != null ) mol.copyMolecule$com_actelion_research_chem_Molecule(this);
}, 1);

Clazz_newMeth(C$, 'copyMoleculeByAtoms$com_actelion_research_chem_ExtendedMolecule$ZA$Z$IA',  function (destMol, includeAtom, recognizeDelocalizedBonds, atomMap) {
this.ensureHelperArrays$I(recognizeDelocalizedBonds ? 7 : 1);
destMol.mAtomList=null;
if (this.mIsFragment) destMol.setFragment$Z(true);
var atomCount=includeAtom.length;
if (atomMap == null ) atomMap=Clazz_array(Integer.TYPE, [atomCount]);
destMol.mAllAtoms=0;
for (var atom=0; atom < atomCount; atom++) {
if (includeAtom[atom]) {
atomMap[atom]=this.copyAtom$com_actelion_research_chem_Molecule$I$I$I(destMol, atom, 0, 0);
if (this.mAtomicNo[atom] == 1) {
var valence=this.getOccupiedValence$I(atom);
if (valence > 1) {
for (var i=0; i < this.mAllConnAtoms[atom]; i++) {
if (!includeAtom[this.mConnAtom[atom][i]]) {
destMol.setAtomAbnormalValence$I$I(atomMap[atom], valence);
break;
}}
}}} else {
atomMap[atom]=-1;
}}
var bondMap=Clazz_array(Integer.TYPE, [this.mAllBonds]);
$I$(1).fill$IA$I(bondMap, -1);
destMol.mAllBonds=0;
for (var bond=0; bond < this.mAllBonds; bond++) {
var atom1=this.mBondAtom[0][bond];
var atom2=this.mBondAtom[1][bond];
if (atom1 < atomCount && atom2 < atomCount ) {
if (includeAtom[atom1] && includeAtom[atom2] ) bondMap[bond]=this.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(destMol, bond, 0, 0, atomMap, recognizeDelocalizedBonds);
 else if (this.mAtomCharge[atom1] != 0 && this.mAtomCharge[atom2] != 0  && (!!(this.mAtomCharge[atom1] < 0 ^ this.mAtomCharge[atom2] < 0)) ) {
if (includeAtom[atom1]) destMol.mAtomCharge[atomMap[atom1]]+=(this.mAtomCharge[atom1] < 0) ? 1 : -1;
if (includeAtom[atom2]) destMol.mAtomCharge[atomMap[atom2]]+=(this.mAtomCharge[atom2] < 0) ? 1 : -1;
}}}
this.copyMoleculeProperties$com_actelion_research_chem_Molecule(destMol);
destMol.mValidHelperArrays=0;
destMol.renumberESRGroups$I(1);
destMol.renumberESRGroups$I(2);
if (destMol.mAllAtoms != atomCount) destMol.setFragment$Z(true);
p$1.rescueStereoBonds$com_actelion_research_chem_ExtendedMolecule$I$IA$IA.apply(this, [destMol, atomCount, atomMap, bondMap]);
p$1.rescueImplicitHigherValences$com_actelion_research_chem_ExtendedMolecule$I$IA.apply(this, [destMol, atomCount, atomMap]);
if (recognizeDelocalizedBonds) Clazz_new_($I$(2,1).c$$com_actelion_research_chem_ExtendedMolecule,[destMol]).locateDelocalizedDoubleBonds$ZA(null);
});

Clazz_newMeth(C$, 'copyMoleculeByBonds$com_actelion_research_chem_ExtendedMolecule$ZA$Z$IA',  function (destMol, includeBond, recognizeDelocalizedBonds, atomMap) {
this.ensureHelperArrays$I(recognizeDelocalizedBonds ? 7 : 1);
destMol.mAtomList=null;
if (this.mIsFragment) destMol.setFragment$Z(true);
if (atomMap == null ) atomMap=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
destMol.mAllAtoms=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
atomMap[atom]=-1;
for (var i=0; i < this.mConnAtoms[atom]; i++) {
if (includeBond[this.mConnBond[atom][i]]) {
atomMap[atom]=this.copyAtom$com_actelion_research_chem_Molecule$I$I$I(destMol, atom, 0, 0);
if (this.mAtomicNo[atom] == 1) {
var valence=this.getOccupiedValence$I(atom);
if (valence > 1) {
for (var j=0; j < this.mAllConnAtoms[atom]; j++) {
if (!includeBond[this.mConnBond[atom][j]]) {
destMol.setAtomAbnormalValence$I$I(atomMap[atom], valence);
break;
}}
}}break;
}}
}
var bondMap=Clazz_array(Integer.TYPE, [this.mAllBonds]);
destMol.mAllBonds=0;
for (var bond=0; bond < this.mAllBonds; bond++) if (includeBond[bond]) {
bondMap[bond]=this.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(destMol, bond, 0, 0, atomMap, recognizeDelocalizedBonds);
} else {
bondMap[bond]=-1;
var atom1=this.mBondAtom[0][bond];
var atom2=this.mBondAtom[1][bond];
if (!!(atomMap[atom1] == -1 ^ atomMap[atom2] == -1)) {
if (this.mAtomCharge[atom1] != 0 && this.mAtomCharge[atom2] != 0  && (!!((this.mAtomCharge[atom1] < 0) ^ (this.mAtomCharge[atom2] < 0))) ) {
if (atomMap[atom1] != -1) destMol.mAtomCharge[atomMap[atom1]]+=(this.mAtomCharge[atom1] < 0) ? 1 : -1;
if (atomMap[atom2] != -1) destMol.mAtomCharge[atomMap[atom2]]+=(this.mAtomCharge[atom2] < 0) ? 1 : -1;
}}}
this.copyMoleculeProperties$com_actelion_research_chem_Molecule(destMol);
destMol.mValidHelperArrays=0;
destMol.renumberESRGroups$I(1);
destMol.renumberESRGroups$I(2);
if (destMol.mAllAtoms != this.mAllAtoms) destMol.setFragment$Z(true);
p$1.rescueStereoBonds$com_actelion_research_chem_ExtendedMolecule$I$IA$IA.apply(this, [destMol, this.mAllAtoms, atomMap, bondMap]);
p$1.rescueImplicitHigherValences$com_actelion_research_chem_ExtendedMolecule$I$IA.apply(this, [destMol, this.mAllAtoms, atomMap]);
if (recognizeDelocalizedBonds) Clazz_new_($I$(2,1).c$$com_actelion_research_chem_ExtendedMolecule,[destMol]).locateDelocalizedDoubleBonds$ZA(null);
return atomMap;
});

Clazz_newMeth(C$, 'rescueStereoBonds$com_actelion_research_chem_ExtendedMolecule$I$IA$IA',  function (destMol, sourceAtomCount, atomMap, bondMap) {
for (var atom=0; atom < sourceAtomCount; atom++) {
if (atomMap[atom] != -1 && this.mAllConnAtoms[atom] > 3  && this.isAtomStereoCenter$I(atom) ) {
var remainingNeighbours=0;
var lostStereoBond=-1;
var lostAtom=-1;
for (var i=0; i < this.mAllConnAtoms[atom]; i++) {
if (bondMap[this.mConnBond[atom][i]] != -1) ++remainingNeighbours;
 else if (this.mConnBondOrder[atom][i] == 1 && this.isStereoBond$I(this.mConnBond[atom][i])  && this.mBondAtom[0][this.mConnBond[atom][i]] == atom ) {
lostStereoBond=this.mConnBond[atom][i];
lostAtom=this.mConnAtom[atom][i];
}}
if (lostStereoBond != -1 && remainingNeighbours >= 3 ) {
var angle=this.getBondAngle$I$I(atom, lostAtom);
var minAngleDif=10.0;
var minConnBond=-1;
for (var i=0; i < this.mAllConnAtoms[atom]; i++) {
if (this.mConnBondOrder[atom][i] == 1 && (!this.isStereoBond$I(this.mConnBond[atom][i]) || this.mBondAtom[0][this.mConnBond[atom][i]] == atom )  && bondMap[this.mConnBond[atom][i]] != -1 ) {
var angleDif=Math.abs($I$(3,"getAngleDif$D$D",[angle, this.getBondAngle$I$I(atom, this.mConnAtom[atom][i])]));
if (minAngleDif > angleDif ) {
minAngleDif=angleDif;
minConnBond=this.mConnBond[atom][i];
}}}
if (minConnBond != -1) {
var destBond=bondMap[minConnBond];
destMol.setBondType$I$I(destBond, this.mBondType[minConnBond] == 257 ? 129 : 257);
if (this.mBondAtom[0][minConnBond] != atom) {
destMol.setBondAtom$I$I$I(1, destBond, atomMap[this.mBondAtom[0][minConnBond]]);
destMol.setBondAtom$I$I$I(0, destBond, atomMap[atom]);
}}}}}
}, p$1);

Clazz_newMeth(C$, 'rescueImplicitHigherValences$com_actelion_research_chem_ExtendedMolecule$I$IA',  function (destMol, sourceAtomCount, atomMap) {
destMol.ensureHelperArrays$I(1);
for (var atom=0; atom < sourceAtomCount; atom++) {
if (atomMap[atom] != -1 && this.mAtomicNo[atom] != 1  && this.mAllConnAtoms[atom] != destMol.getAllConnAtoms$I(atomMap[atom]) ) {
var abnormalValence=this.getImplicitHigherValence$I$Z(atom, false);
if (abnormalValence != -1) {
var newAbnormalValence=destMol.getImplicitHigherValence$I$Z(atomMap[atom], false);
if (abnormalValence != newAbnormalValence) {
var explicitAbnormalValence=destMol.getAtomAbnormalValence$I(atomMap[atom]);
if (explicitAbnormalValence == -1 || explicitAbnormalValence < abnormalValence ) destMol.setAtomAbnormalValence$I$I(atomMap[atom], abnormalValence);
}}}}
}, p$1);

Clazz_newMeth(C$, 'getAllConnAtoms$I',  function (atom) {
return this.mAllConnAtoms[atom];
});

Clazz_newMeth(C$, 'getPlainHydrogens$I',  function (atom) {
return this.getExplicitHydrogens$I(atom) + this.getImplicitHydrogens$I(atom);
});

Clazz_newMeth(C$, 'getAllHydrogens$I',  function (atom) {
return this.mAllConnAtoms[atom] - this.getNonHydrogenNeighbourCount$I(atom) + this.getImplicitHydrogens$I(atom);
});

Clazz_newMeth(C$, 'getAtoms$',  function () {
return this.mAtoms;
});

Clazz_newMeth(C$, 'getMetalBondedConnAtoms$I',  function (atom) {
return this.mConnAtom[atom].length - this.mAllConnAtoms[atom];
});

Clazz_newMeth(C$, 'isReallySimpleHydrogen$I',  function (atom) {
return this.mReallySimpleHydrogens != null  && this.mReallySimpleHydrogens[atom] ;
});

Clazz_newMeth(C$, 'getAtomPi$I',  function (atom) {
return this.mPi[atom];
});

Clazz_newMeth(C$, 'getAtomElectronegativeNeighbours$I',  function (atom) {
var e=0;
for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.isElectronegative$I(this.mConnAtom[atom][i]) && !this.isBondBridge$I(this.mConnBond[atom][i]) ) ++e;

return e;
});

Clazz_newMeth(C$, 'getAtomZValue$I',  function (atom) {
var z=0;
var arom=0;
for (var i=0; i < this.mConnAtoms[atom]; i++) {
if (this.isElectronegative$I(this.mConnAtom[atom][i])) {
if (this.isDelocalizedBond$I(this.mConnBond[atom][i])) {
++z;
++arom;
} else {
z+=this.mConnBondOrder[atom][i];
}}}
return z + (arom/2|0);
});

Clazz_newMeth(C$, 'getAtomRingSize$I',  function (atom) {
return (this.mRingSet != null  && atom < this.mAtoms ) ? this.mRingSet.getAtomRingSize$I(atom) : 0;
});

Clazz_newMeth(C$, 'getBondRingSize$I',  function (bond) {
return (this.mRingSet != null  && bond < this.mBonds ) ? this.mRingSet.getBondRingSize$I(bond) : 0;
});

Clazz_newMeth(C$, 'getBonds$',  function () {
return this.mBonds;
});

Clazz_newMeth(C$, 'getBond$I$I',  function (atom1, atom2) {
for (var i=this.getAllConnAtomsPlusMetalBonds$I(atom1); --i >= 0; ) if (this.mConnAtom[atom1][i] == atom2) return this.mConnBond[atom1][i];

return -1;
});

Clazz_newMeth(C$, 'getCompactCopy$',  function () {
var theCopy=Clazz_new_(C$.c$$I$I,[this.mAllAtoms, this.mAllBonds]);
this.copyMolecule$com_actelion_research_chem_Molecule(theCopy);
return theCopy;
});

Clazz_newMeth(C$, 'getConnAtom$I$I',  function (atom, i) {
return this.mConnAtom[atom][i];
});

Clazz_newMeth(C$, 'getNotExcludedConnAtoms$I',  function (atom) {
return this.mConnAtoms[atom] - this.getExcludedNeighbourCount$I(atom);
});

Clazz_newMeth(C$, 'getConnAtoms$I',  function (atom) {
return this.mConnAtoms[atom];
});

Clazz_newMeth(C$, 'getAllConnAtomsPlusMetalBonds$I',  function (atom) {
return this.mConnAtom[atom].length;
});

Clazz_newMeth(C$, 'getConnBond$I$I',  function (atom, i) {
return this.mConnBond[atom][i];
});

Clazz_newMeth(C$, 'getConnBondOrder$I$I',  function (atom, i) {
return this.mConnBondOrder[atom][i];
});

Clazz_newMeth(C$, 'getNonHydrogenNeighbourCount$I',  function (atom) {
var count=this.mConnAtoms[atom];
for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.mAtomicNo[this.mConnAtom[atom][i]] == 1) --count;

return count;
});

Clazz_newMeth(C$, 'getExcludedNeighbourCount$I',  function (atom) {
var count=0;
if (this.mIsFragment) for (var i=0; i < this.mConnAtoms[atom]; i++) if ((this.mAtomQueryFeatures[this.mConnAtom[atom][i]] & 536870912) != 0) ++count;

return count;
});

Clazz_newMeth(C$, 'getAverageBondLength$Z',  function (nonHydrogenBondsOnly) {
if (nonHydrogenBondsOnly) {
this.ensureHelperArrays$I(1);
return this.getAverageBondLength$I$I(this.mAtoms, this.mBonds);
} else {
return this.getAverageBondLength$I$I(this.mAllAtoms, this.mAllBonds);
}});

Clazz_newMeth(C$, 'getSortedConnMap$I',  function (atom) {
var connAtoms=this.mAllConnAtoms[atom];
var indexMap=Clazz_array(Integer.TYPE, [connAtoms]);
for (var i=0; i < connAtoms; i++) indexMap[i]=(this.mConnAtom[atom][i] << 16) + i;

$I$(1).sort$IA(indexMap);
for (var i=0; i < connAtoms; i++) indexMap[i]&=65535;

return indexMap;
}, p$1);

Clazz_newMeth(C$, 'getOccupiedValence$I',  function (atom) {
this.ensureHelperArrays$I(1);
var piElectronsFound=false;
var delocalizedBondFound=false;
var valence=0;
for (var i=0; i < this.mAllConnAtoms[atom]; i++) {
if (!this.mIsFragment || (this.mAtomQueryFeatures[this.mConnAtom[atom][i]] & 536870912) == 0 ) {
var order=this.mConnBondOrder[atom][i];
valence+=order;
if (order > 1) piElectronsFound=true;
var bond=this.mConnBond[atom][i];
if (this.mBondType[bond] == 8) delocalizedBondFound=true;
}}
if (delocalizedBondFound && !piElectronsFound ) ++valence;
return valence;
});

Clazz_newMeth(C$, 'getFreeValence$I',  function (atom) {
return this.getMaxValence$I(atom) - this.getOccupiedValence$I(atom);
});

Clazz_newMeth(C$, 'getLowestFreeValence$I',  function (atom) {
if (!this.mIsFragment || this.mAtomList == null   || this.mAtomList[atom] == null  ) return this.getLowestFreeValence$I$I(atom, this.mAtomicNo[atom]);
var valence=0;
for (var atomicNo, $atomicNo = 0, $$atomicNo = this.mAtomList[atom]; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) valence=Math.max(valence, this.getLowestFreeValence$I$I(atom, atomicNo));

return valence;
});

Clazz_newMeth(C$, 'getLowestFreeValence$I$I',  function (atom, atomicNo) {
var occupiedValence=this.getOccupiedValence$I(atom);
var correction=this.getElectronValenceCorrection$I$I$I(atom, occupiedValence, atomicNo);
var valence=this.getAtomAbnormalValence$I(atom);
if (valence == -1) {
var valenceList=$I$(3).getAllowedValences$I(this.mAtomicNo[atom]);
var i=0;
while ((occupiedValence > valenceList[i] + correction) && (i < valenceList.length - 1) )++i;

valence=valenceList[i];
}return valence + correction - occupiedValence;
});

Clazz_newMeth(C$, 'getImplicitHigherValence$I$Z',  function (atom, neglectExplicitHydrogen) {
var occupiedValence=this.getOccupiedValence$I(atom);
occupiedValence-=this.getElectronValenceCorrection$I$I(atom, occupiedValence);
if (neglectExplicitHydrogen) occupiedValence-=this.mAllConnAtoms[atom] - this.mConnAtoms[atom];
var valences=$I$(3).getAllowedValences$I(this.mAtomicNo[atom]);
if (occupiedValence <= valences[0]) return -1;
for (var i=1; i < valences.length; i++) if (valences[i] >= occupiedValence) return valences[i];

return occupiedValence;
});

Clazz_newMeth(C$, 'getAverageTopologicalAtomDistance$',  function () {
this.ensureHelperArrays$I(1);
var meanDistance=Clazz_array(Float.TYPE, [this.mAtoms]);
var graphAtom=Clazz_array(Integer.TYPE, [this.mAtoms]);
for (var startAtom=0; startAtom < this.mAtoms; startAtom++) {
graphAtom[0]=startAtom;
var graphLevel=Clazz_array(Integer.TYPE, [this.mAtoms]);
graphLevel[startAtom]=1;
var current=0;
var highest=0;
while (current <= highest){
for (var i=0; i < this.mConnAtoms[graphAtom[current]]; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (graphLevel[candidate] == 0) {
graphLevel[candidate]=graphLevel[graphAtom[current]] + 1;
graphAtom[++highest]=candidate;
meanDistance[startAtom]+=(graphLevel[candidate] - 1);
}}
++current;
}
meanDistance[startAtom]/=highest;
}
return meanDistance;
});

Clazz_newMeth(C$, 'getPathLength$I$I',  function (atom1, atom2) {
if (atom1 == atom2) return 0;
this.ensureHelperArrays$I(1);
var graphLevel=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
graphAtom[0]=atom1;
graphLevel[atom1]=1;
var current=0;
var highest=0;
while (current <= highest){
for (var i=0; i < this.mAllConnAtoms[graphAtom[current]]; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (candidate == atom2) return graphLevel[graphAtom[current]];
if (graphLevel[candidate] == 0) {
graphAtom[++highest]=candidate;
graphLevel[candidate]=graphLevel[graphAtom[current]] + 1;
}}
++current;
}
return -1;
});

Clazz_newMeth(C$, 'getPathLength$I$I$I$ZA',  function (atom1, atom2, maxLength, neglectAtom) {
if (atom1 == atom2) return 0;
this.ensureHelperArrays$I(1);
var graphLevel=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
graphAtom[0]=atom1;
graphLevel[atom1]=1;
var current=0;
var highest=0;
while (current <= highest && graphLevel[graphAtom[current]] <= maxLength ){
for (var i=0; i < this.mAllConnAtoms[graphAtom[current]]; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (candidate == atom2) return graphLevel[graphAtom[current]];
if (graphLevel[candidate] == 0 && (neglectAtom == null  || neglectAtom.length <= candidate  || !neglectAtom[candidate] ) ) {
graphAtom[++highest]=candidate;
graphLevel[candidate]=graphLevel[graphAtom[current]] + 1;
}}
++current;
}
return -1;
});

Clazz_newMeth(C$, 'getPath$IA$I$I$I$ZA',  function (pathAtom, atom1, atom2, maxLength, neglectBond) {
return this.getPath$IA$I$I$I$ZA$ZA(pathAtom, atom1, atom2, maxLength, null, neglectBond);
});

Clazz_newMeth(C$, 'getPath$IA$I$I$I$ZA$ZA',  function (pathAtom, atom1, atom2, maxLength, neglectAtom, neglectBond) {
if (atom1 == atom2) {
pathAtom[0]=atom1;
return 0;
}this.ensureHelperArrays$I(1);
var graphLevel=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var parentAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
graphAtom[0]=atom1;
graphLevel[atom1]=1;
var current=0;
var highest=0;
while (current <= highest && graphLevel[graphAtom[current]] <= maxLength ){
var parent=graphAtom[current];
for (var i=0; i < this.mAllConnAtoms[parent]; i++) {
if (neglectBond == null  || neglectBond.length <= this.mConnBond[parent][i]  || !neglectBond[this.mConnBond[parent][i]] ) {
var candidate=this.mConnAtom[parent][i];
if (candidate == atom2) {
var index=graphLevel[parent];
pathAtom[index]=candidate;
pathAtom[--index]=parent;
while (index > 0){
pathAtom[index - 1]=parentAtom[pathAtom[index]];
--index;
}
return graphLevel[parent];
}if (graphLevel[candidate] == 0 && (neglectAtom == null  || neglectAtom.length <= candidate  || !neglectAtom[candidate] ) ) {
graphAtom[++highest]=candidate;
graphLevel[candidate]=graphLevel[parent] + 1;
parentAtom[candidate]=parent;
}}}
++current;
}
return -1;
});

Clazz_newMeth(C$, 'getPathBonds$IA$IA$I',  function (pathAtom, pathBond, pathLength) {
this.ensureHelperArrays$I(1);
for (var i=0; i < pathLength; i++) {
for (var j=0; j < this.mAllConnAtoms[pathAtom[i]]; j++) {
if (this.mConnAtom[pathAtom[i]][j] == pathAtom[i + 1]) {
pathBond[i]=this.mConnBond[pathAtom[i]][j];
break;
}}
}
});

Clazz_newMeth(C$, 'shareSameFragment$I$I',  function (atom1, atom2) {
return (this.getPathLength$I$I(atom1, atom2) != -1);
});

Clazz_newMeth(C$, 'addFragment$com_actelion_research_chem_ExtendedMolecule$I$IA',  function (sourceMol, rootAtom, atomMap) {
sourceMol.ensureHelperArrays$I(1);
if (atomMap == null ) atomMap=Clazz_array(Integer.TYPE, [sourceMol.mAllAtoms]);
var esrGroupCountAND=this.renumberESRGroups$I(1);
var esrGroupCountOR=this.renumberESRGroups$I(2);
var isFragmentMember=Clazz_array(Boolean.TYPE, [sourceMol.mAllAtoms]);
var graphAtom=Clazz_array(Integer.TYPE, [sourceMol.mAllAtoms]);
graphAtom[0]=rootAtom;
isFragmentMember[rootAtom]=true;
atomMap[rootAtom]=sourceMol.copyAtom$com_actelion_research_chem_Molecule$I$I$I(this, rootAtom, esrGroupCountAND, esrGroupCountOR);
var current=0;
var highest=0;
while (current <= highest){
for (var i=0; i < sourceMol.getAllConnAtoms$I(graphAtom[current]); i++) {
var candidate=sourceMol.mConnAtom[graphAtom[current]][i];
if (!isFragmentMember[candidate]) {
graphAtom[++highest]=candidate;
isFragmentMember[candidate]=true;
atomMap[candidate]=sourceMol.copyAtom$com_actelion_research_chem_Molecule$I$I$I(this, candidate, esrGroupCountAND, esrGroupCountOR);
}}
++current;
}
for (var bond=0; bond < sourceMol.mAllBonds; bond++) if (isFragmentMember[sourceMol.mBondAtom[0][bond]]) sourceMol.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(this, bond, esrGroupCountAND, esrGroupCountOR, atomMap, false);

this.renumberESRGroups$I(1);
this.renumberESRGroups$I(2);
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'getFragmentAtoms$I',  function (rootAtom) {
return this.getFragmentAtoms$I$Z(rootAtom, false);
});

Clazz_newMeth(C$, 'getFragmentAtoms$I$Z',  function (rootAtom, considerMetalBonds) {
var isFragmentMember=isFragmentMember=Clazz_array(Boolean.TYPE, [this.mAllAtoms]);
var fragmentMembers=this.getFragmentAtoms$I$Z$ZA(rootAtom, considerMetalBonds, isFragmentMember);
var fragmentMember=Clazz_array(Integer.TYPE, [fragmentMembers]);
fragmentMembers=0;
for (var atom=0; atom < this.mAllAtoms; atom++) if (isFragmentMember[atom]) fragmentMember[fragmentMembers++]=atom;

return fragmentMember;
});

Clazz_newMeth(C$, 'getFragmentAtoms$I$Z$ZA',  function (rootAtom, considerMetalBonds, isFragmentMember) {
this.ensureHelperArrays$I(1);
if (isFragmentMember == null ) isFragmentMember=Clazz_array(Boolean.TYPE, [this.mAllAtoms]);
var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
graphAtom[0]=rootAtom;
isFragmentMember[rootAtom]=true;
var current=0;
var highest=0;
var fragmentMembers=1;
while (current <= highest){
var connAtoms=considerMetalBonds ? this.getAllConnAtomsPlusMetalBonds$I(graphAtom[current]) : this.mAllConnAtoms[graphAtom[current]];
for (var i=0; i < connAtoms; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (candidate < isFragmentMember.length && !isFragmentMember[candidate] ) {
graphAtom[++highest]=candidate;
isFragmentMember[candidate]=true;
++fragmentMembers;
}}
++current;
}
return fragmentMembers;
});

Clazz_newMeth(C$, 'getFragmentNumbers$IA$ZA$Z',  function (fragmentNo, neglectBond, considerMetalBonds) {
this.ensureHelperArrays$I(1);
for (var atom=0; atom < this.mAllAtoms; atom++) fragmentNo[atom]=-1;

var fragments=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (fragmentNo[atom] == -1) {
fragmentNo[atom]=fragments;
var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
graphAtom[0]=atom;
var current=0;
var highest=0;
while (current <= highest){
var connAtoms=considerMetalBonds ? this.getAllConnAtomsPlusMetalBonds$I(graphAtom[current]) : this.mAllConnAtoms[graphAtom[current]];
for (var i=0; i < connAtoms; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (fragmentNo[candidate] == -1 && !neglectBond[this.mConnBond[graphAtom[current]][i]] ) {
graphAtom[++highest]=candidate;
fragmentNo[candidate]=fragments;
}}
++current;
}
++fragments;
}}
return fragments;
});

Clazz_newMeth(C$, 'getFragmentNumbers$IA$Z$Z',  function (fragmentNo, markedAtomsOnly, considerMetalBonds) {
this.ensureHelperArrays$I(1);
for (var atom=0; atom < this.mAllAtoms; atom++) fragmentNo[atom]=-1;

var fragments=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (fragmentNo[atom] == -1 && (!markedAtomsOnly || this.isMarkedAtom$I(atom) ) ) {
fragmentNo[atom]=fragments;
var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
graphAtom[0]=atom;
var current=0;
var highest=0;
while (current <= highest){
var connAtoms=considerMetalBonds ? this.getAllConnAtomsPlusMetalBonds$I(graphAtom[current]) : this.mAllConnAtoms[graphAtom[current]];
for (var i=0; i < connAtoms; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (fragmentNo[candidate] == -1 && (!markedAtomsOnly || this.isMarkedAtom$I(candidate) ) ) {
graphAtom[++highest]=candidate;
fragmentNo[candidate]=fragments;
}}
++current;
}
++fragments;
}}
return fragments;
});

Clazz_newMeth(C$, 'stripSmallFragments$',  function () {
return this.stripSmallFragments$Z(false);
});

Clazz_newMeth(C$, 'stripSmallFragments$Z',  function (considerMetalBonds) {
var fragmentNo=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var fragmentCount=this.getFragmentNumbers$IA$Z$Z(fragmentNo, false, considerMetalBonds);
if (fragmentCount <= 1) return null;
var fragmentSize=Clazz_array(Integer.TYPE, [fragmentCount]);
for (var atom=0; atom < this.mAtoms; atom++) ++fragmentSize[fragmentNo[atom]];

var largestFragment=0;
var largestSize=fragmentSize[0];
for (var i=1; i < fragmentCount; i++) {
if (largestSize < fragmentSize[i]) {
largestSize=fragmentSize[i];
largestFragment=i;
}}
for (var atom=0; atom < this.mAllAtoms; atom++) if (fragmentNo[atom] != largestFragment) this.mAtomicNo[atom]=-1;

for (var bond=0; bond < this.mAllBonds; bond++) if ((!considerMetalBonds && this.mBondType[bond] == 16 ) || fragmentNo[this.mBondAtom[0][bond]] != largestFragment ) this.mBondType[bond]=512;

var atomMap=this.compressMolTable$();
this.mValidHelperArrays=0;
try {
this.canonizeCharge$Z$Z(true, true);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
return atomMap;
});

Clazz_newMeth(C$, 'findRingSystem$I$Z$ZA$ZA',  function (startAtom, aromaticOnly, isMemberAtom, isMemberBond) {
this.ensureHelperArrays$I(7);
if (!this.isRingAtom$I(startAtom) || (aromaticOnly && !this.isAromaticAtom$I(startAtom) ) ) return;
var graphAtom=Clazz_array(Integer.TYPE, [this.mAtoms]);
graphAtom[0]=startAtom;
isMemberAtom[startAtom]=true;
var current=0;
var highest=0;
while (current <= highest){
for (var i=0; i < this.mConnAtoms[graphAtom[current]]; i++) {
var candidateBond=this.mConnBond[graphAtom[current]][i];
if (!isMemberBond[candidateBond] && this.isRingBond$I(candidateBond) && (!aromaticOnly || this.isAromaticBond$I(candidateBond) )  ) {
isMemberBond[candidateBond]=true;
var candidateAtom=this.mConnAtom[graphAtom[current]][i];
if (!isMemberAtom[candidateAtom]) {
isMemberAtom[candidateAtom]=true;
graphAtom[++highest]=candidateAtom;
}}}
++current;
}
});

Clazz_newMeth(C$, 'getSubstituent$I$I$ZA$com_actelion_research_chem_ExtendedMolecule$IA',  function (coreAtom, firstAtom, isMemberAtom, substituent, atomMap) {
this.ensureHelperArrays$I(1);
if (substituent != null ) {
substituent.clear$();
substituent.mIsFragment=false;
}var graphAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
if (isMemberAtom == null ) isMemberAtom=Clazz_array(Boolean.TYPE, [this.mAllAtoms]);
 else $I$(1).fill$ZA$Z(isMemberAtom, false);
graphAtom[0]=coreAtom;
graphAtom[1]=firstAtom;
isMemberAtom[coreAtom]=true;
isMemberAtom[firstAtom]=true;
var current=1;
var highest=1;
while (current <= highest){
for (var i=0; i < this.mAllConnAtoms[graphAtom[current]]; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (candidate == coreAtom) {
if (current != 1) return -1;
}if (!isMemberAtom[candidate]) {
isMemberAtom[candidate]=true;
graphAtom[++highest]=candidate;
}}
++current;
}
if (substituent != null ) {
if (atomMap == null ) atomMap=Clazz_array(Integer.TYPE, [isMemberAtom.length]);
this.copyMoleculeByAtoms$com_actelion_research_chem_ExtendedMolecule$ZA$Z$IA(substituent, isMemberAtom, false, atomMap);
substituent.changeAtom$I$I$I$I$I(atomMap[coreAtom], 0, 0, -1, 0);
}isMemberAtom[coreAtom]=false;
return highest;
});

Clazz_newMeth(C$, 'getSubstituentSize$I$I',  function (coreAtom, firstAtom) {
this.ensureHelperArrays$I(1);
var graphAtom=Clazz_array(Integer.TYPE, [this.mAtoms]);
var isMember=Clazz_array(Boolean.TYPE, [this.mAtoms]);
graphAtom[0]=coreAtom;
graphAtom[1]=firstAtom;
isMember[coreAtom]=true;
isMember[firstAtom]=true;
var current=1;
var highest=1;
while (current <= highest){
for (var i=0; i < this.mConnAtoms[graphAtom[current]]; i++) {
var candidate=this.mConnAtom[graphAtom[current]][i];
if (candidate == coreAtom) {
if (current != 1) return -1;
}if (!isMember[candidate]) {
isMember[candidate]=true;
graphAtom[++highest]=candidate;
}}
++current;
}
return highest;
});

Clazz_newMeth(C$, 'supportsImplicitHydrogen$I',  function (atom) {
if ((this.mAtomFlags[atom] & 2013265920) != 0) return true;
if (this.mAtomicNo[atom] <= 1) return false;
return this.isOrganicAtom$I(atom) || this.mAtomicNo[atom] == 13  || this.mAtomicNo[atom] >= 171 ;
});

Clazz_newMeth(C$, 'getImplicitHydrogens$',  function () {
if (this.mIsFragment) return 0;
this.ensureHelperArrays$I(1);
var implicitHydrogens=0;
for (var atom=0; atom < this.mAtoms; atom++) implicitHydrogens+=this.getImplicitHydrogens$I(atom);

return implicitHydrogens;
});

Clazz_newMeth(C$, 'getImplicitHydrogens$I',  function (atom) {
if (this.mIsFragment && (this.mAtomQueryFeatures[atom] & 2048) == 0 ) return 0;
if (!this.supportsImplicitHydrogen$I(atom)) return 0;
if (this.mAtomicNo[atom] == 0 || "*".equals$O(this.getAtomCustomLabel$I(atom)) ) return this.mAllConnAtoms[atom] == 0 ? 1 : 0;
this.ensureHelperArrays$I(1);
var occupiedValence=0;
for (var i=0; i < this.mAllConnAtoms[atom]; i++) occupiedValence+=this.mConnBondOrder[atom][i];

if (this.mIsFragment) {
var delocalizedBonds=1;
for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.mBondType[this.mConnBond[atom][i]] == 8) ++delocalizedBonds;

occupiedValence+=delocalizedBonds >> 1;
}occupiedValence-=this.getElectronValenceCorrection$I$I(atom, occupiedValence);
var maxValence=this.getAtomAbnormalValence$I(atom);
if (maxValence == -1) {
var valenceList=$I$(3).getAllowedValences$I(this.mAtomicNo[atom]);
maxValence=valenceList[0];
for (var i=1; (maxValence < occupiedValence) && (i < valenceList.length) ; i++) maxValence=valenceList[i];

}return Math.max(0, maxValence - occupiedValence);
});

Clazz_newMeth(C$, 'getExplicitHydrogens$I',  function (atom) {
return this.mAllConnAtoms[atom] - this.mConnAtoms[atom];
});

Clazz_newMeth(C$, 'getMolweight$',  function () {
this.ensureHelperArrays$I(1);
var molweight=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
var mass=this.mAtomMass[atom] != 0 ? this.mAtomMass[atom] : $I$(3).cRoundedMass[this.mAtomicNo[atom]];
molweight+=mass + this.getImplicitHydrogens$I(atom) * $I$(3).cRoundedMass[1];
if (this.mAtomicNo[atom] >= 171 && this.mAtomicNo[atom] <= 190 ) {
var connAtoms=this.mAllConnAtoms[atom];
if (connAtoms > 2) molweight-=(connAtoms - 2) * $I$(3).cRoundedMass[1];
}}
return molweight;
});

Clazz_newMeth(C$, 'getRotatableBondCount$',  function () {
var rCount=0;
this.ensureHelperArrays$I(7);
for (var bond=0; bond < this.mBonds; bond++) {
if (this.getBondOrder$I(bond) == 1 && !this.isRingBond$I(bond) ) {
var isRotatable=true;
for (var i=0; i < 2; i++) {
var atom1=this.mBondAtom[i][bond];
if (this.mConnAtoms[atom1] == 1) {
isRotatable=false;
break;
}if (this.mAtomicNo[atom1] == 7 && !this.isAromaticAtom$I(atom1) ) {
var atom2=this.mBondAtom[1 - i][bond];
for (var j=0; j < this.mConnAtoms[atom2]; j++) {
var connAtom=this.mConnAtom[atom2][j];
var connBond=this.mConnBond[atom2][j];
if (connBond != bond && this.getBondOrder$I(connBond) > 1  && !this.isAromaticAtom$I(connAtom)  && this.isElectronegative$I(connAtom) ) {
isRotatable=false;
break;
}}
}}
if (isRotatable && !this.isPseudoRotatableBond$I(bond) ) ++rCount;
}}
return rCount;
});

Clazz_newMeth(C$, 'isPseudoRotatableBond$I',  function (bond) {
if (this.getBondOrder$I(bond) != 1) return false;
for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bond];
var rearAtom=this.mBondAtom[1 - i][bond];
while (this.mPi[atom] == 2 && this.mConnAtoms[atom] == 2  && this.mAtomicNo[atom] < 10 ){
for (var j=0; j < 2; j++) {
var connAtom=this.mConnAtom[atom][j];
if (connAtom != rearAtom) {
if (this.mConnAtoms[connAtom] == 1) return true;
var connBond=this.mConnBond[atom][j];
if (this.getBondOrder$I(connBond) == 1 && connBond < bond ) return true;
rearAtom=atom;
atom=connAtom;
break;
}}
}
if (this.mConnAtoms[atom] == 1) return true;
}
return false;
});

Clazz_newMeth(C$, 'getAromaticRingCount$',  function () {
this.ensureHelperArrays$I(7);
var count=0;
for (var i=0; i < this.mRingSet.getSize$(); i++) if (this.mRingSet.isAromatic$I(i)) ++count;

return count;
});

Clazz_newMeth(C$, 'getAtomRingCount$I$I',  function (atom, maxRingSize) {
this.ensureHelperArrays$I(7);
var bondTouched=Clazz_array(Boolean.TYPE, [this.mBonds]);
var neglectBond=Clazz_array(Boolean.TYPE, [this.mBonds]);
var ringAtom=Clazz_array(Integer.TYPE, [this.mAtoms]);
var count=0;
for (var i=1; i < this.mConnAtoms[atom]; i++) {
var bond1=this.mConnBond[atom][i];
if (this.isRingBond$I(bond1)) {
for (var j=0; j < i; j++) {
var bond2=this.mConnBond[atom][j];
if (this.isRingBond$I(bond2)) {
neglectBond[bond1]=true;
neglectBond[bond2]=true;
var pathLength=this.getPath$IA$I$I$I$ZA(ringAtom, this.mConnAtom[atom][i], this.mConnAtom[atom][j], maxRingSize - 2, neglectBond);
neglectBond[bond1]=false;
neglectBond[bond2]=false;
if (pathLength != -1) {
var isIndependentRing=false;
var pathBond=Clazz_array(Integer.TYPE, [pathLength]);
this.getPathBonds$IA$IA$I(ringAtom, pathBond, pathLength);
for (var k=0; k < pathLength; k++) {
if (!bondTouched[pathBond[k]]) {
bondTouched[pathBond[k]]=true;
isIndependentRing=true;
}}
if (isIndependentRing) ++count;
}}}
}}
return count;
});

Clazz_newMeth(C$, 'getRingSet$',  function () {
this.ensureHelperArrays$I(7);
return this.mRingSet;
});

Clazz_newMeth(C$, 'getRingSetSimple$',  function () {
this.ensureHelperArrays$I(3);
return this.mRingSet;
});

Clazz_newMeth(C$, 'getAtomPreferredStereoBond$I',  function (atom) {
this.ensureHelperArrays$I(7);
if (this.mPi[atom] == 2 && this.mConnAtoms[atom] == 2 ) return p$1.preferredAlleneStereoBond$I$Z.apply(this, [atom, false]);
 else return p$1.preferredTHStereoBond$I$Z.apply(this, [atom, false]);
});

Clazz_newMeth(C$, 'getBondPreferredStereoBond$I',  function (bond) {
return p$1.preferredBinapStereoBond$I.apply(this, [bond]);
});

Clazz_newMeth(C$, 'getStereoBondScore$I$I',  function (bond, atom) {
if (this.getBondOrder$I(bond) != 1) return 0;
return 16 - this.mAllConnAtoms[atom] + 16 * Math.max(0, (Math.min(9, this.getBondRingSize$I(bond)) - 2)) + (((this.mBondType[bond] & 384) == 0 || this.mBondAtom[0][bond] != atom ) ? 32768 : 0) + ((this.getAtomParity$I(atom) == 0) ? 4096 : 0) + ((this.mAtomicNo[atom] == 1) ? 2048 : 0) + ((this.mAllConnAtoms[atom] == 1) ? 1024 : 0) + ((!this.isRingBond$I(bond)) ? 512 : 0) + ((this.mAtomicNo[atom] != 6) ? 256 : 0);
}, p$1);

Clazz_newMeth(C$, 'isAllylicAtom$I',  function (atom) {
return (this.mAtomFlags[atom] & 4096) != 0;
});

Clazz_newMeth(C$, 'isAromaticAtom$I',  function (atom) {
return (atom < this.mAtoms) ? this.mRingSet.isAromaticAtom$I(atom) : false;
});

Clazz_newMeth(C$, 'isHeteroAromaticAtom$I',  function (atom) {
return (atom < this.mAtoms) ? this.mRingSet.isHeteroAromaticAtom$I(atom) : false;
});

Clazz_newMeth(C$, 'isDelocalizedAtom$I',  function (atom) {
return atom < this.mAtoms && this.mRingSet.isDelocalizedAtom$I(atom) ;
});

Clazz_newMeth(C$, 'isAromaticBond$I',  function (bond) {
return bond < this.mBonds && this.mRingSet.isAromaticBond$I(bond) ;
});

Clazz_newMeth(C$, 'isHeteroAromaticBond$I',  function (bond) {
return bond < this.mBonds && this.mRingSet.isHeteroAromaticBond$I(bond) ;
});

Clazz_newMeth(C$, 'isDelocalizedBond$I',  function (bond) {
return (bond < this.mBonds) ? this.mRingSet.isDelocalizedBond$I(bond) || this.mBondType[bond] == 8  : false;
});

Clazz_newMeth(C$, 'isRingAtom$I',  function (atom) {
return (this.mAtomFlags[atom] & 3072) != 0;
});

Clazz_newMeth(C$, 'isRingBond$I',  function (bnd) {
return (this.mBondFlags[bnd] & 64) != 0;
});

Clazz_newMeth(C$, 'isSmallRingAtom$I',  function (atom) {
return (this.mAtomFlags[atom] & 8) != 0;
});

Clazz_newMeth(C$, 'isSmallRingBond$I',  function (bond) {
return (this.mBondFlags[bond] & 128) != 0;
});

Clazz_newMeth(C$, 'isStabilizedAtom$I',  function (atom) {
return (this.mAtomFlags[atom] & 8192) != 0;
});

Clazz_newMeth(C$, 'getAtomRingBondCount$I',  function (atom) {
var flags=(this.mAtomFlags[atom] & 3072);
return (flags == 0) ? 0 : (flags == 1024) ? 2 : (flags == 2048) ? 3 : 4;
});

Clazz_newMeth(C$, 'getChiralText$',  function () {
return null;
});

Clazz_newMeth(C$, 'getStereoBond$I',  function (atom) {
this.ensureHelperArrays$I(1);
if (this.mConnAtoms[atom] == 2 && this.mConnBondOrder[atom][0] == 2  && this.mConnBondOrder[atom][1] == 2 ) {
for (var i=0; i < 2; i++) for (var j=0; j < this.mAllConnAtoms[this.mConnAtom[atom][i]]; j++) if (this.isStereoBond$I$I(this.mConnBond[this.mConnAtom[atom][i]][j], this.mConnAtom[atom][i])) return this.mConnBond[this.mConnAtom[atom][i]][j];


} else {
for (var i=0; i < this.mAllConnAtoms[atom]; i++) if (this.isStereoBond$I$I(this.mConnBond[atom][i], atom)) return this.mConnBond[atom][i];

}return -1;
});

Clazz_newMeth(C$, 'setParitiesValid$I',  function (helperStereoBits) {
this.mValidHelperArrays|=(248 & (8 | helperStereoBits));
});

Clazz_newMeth(C$, 'setStereoBondsFromParity$',  function () {
Clazz_assert(C$, this, function(){return ((this.mValidHelperArrays & 8) != 0)});
this.ensureHelperArrays$I(7);
for (var bond=0; bond < this.mBonds; bond++) if (this.isStereoBond$I(bond)) this.mBondType[bond]=1;

for (var atom=0; atom < this.mAtoms; atom++) this.setStereoBondFromAtomParity$I(atom);

for (var bond=0; bond < this.mBonds; bond++) this.setStereoBondFromBondParity$I(bond);

for (var bond=0; bond < this.mBonds; bond++) if (this.mBondType[bond] == 2 && this.getBondParity$I(bond) == 3 ) this.mBondType[bond]=386;

Clazz_assert(C$, this, function(){return ((this.mValidHelperArrays & 8) != 0)});
});

Clazz_newMeth(C$, 'convertStereoBondsToSingleBonds$I',  function (atom) {
if (this.mPi[atom] == 2 && this.mConnAtoms[atom] == 2  && this.mConnBondOrder[atom][0] == 2 ) {
for (var i=0; i < 2; i++) {
var alleneEnd=this.findAlleneEndAtom$I$I(atom, this.mConnAtom[atom][i]);
if (alleneEnd != -1) {
for (var j=0; j < this.mConnAtoms[alleneEnd]; j++) {
var connBond=this.mConnBond[alleneEnd][j];
if (this.isStereoBond$I(connBond) && this.mBondAtom[0][connBond] == alleneEnd ) this.mBondType[this.mConnBond[alleneEnd][j]]=1;
}
}}
return;
}if (this.mPi[atom] == 0 || this.mAtomicNo[atom] >= 15 ) {
for (var i=0; i < this.mAllConnAtoms[atom]; i++) {
var connBond=this.mConnBond[atom][i];
if (this.isStereoBond$I$I(connBond, atom) && this.mBondAtom[0][connBond] == atom ) this.mBondType[connBond]=1;
}
}});

Clazz_newMeth(C$, 'setStereoBondFromAtomParity$I',  function (atom) {
this.convertStereoBondsToSingleBonds$I(atom);
if (this.getAtomParity$I(atom) == 0 || this.getAtomParity$I(atom) == 3 ) return;
if (this.mPi[atom] == 2 && this.mConnAtoms[atom] == 2 ) {
p$1.setAlleneStereoBondFromParity$I.apply(this, [atom]);
return;
}if (this.mConnAtoms[atom] < 3 || this.mConnAtoms[atom] > 4 ) {
this.setAtomParity$I$I$Z(atom, 0, false);
return;
}var allConnAtoms=this.mAllConnAtoms[atom];
var singleBondFound=false;
for (var i=0; i < allConnAtoms; i++) {
if (this.getBondOrder$I(this.mConnBond[atom][i]) == 1) {
singleBondFound=true;
break;
}}
if (!singleBondFound) return;
var sortedConnMap=p$1.getSortedConnMap$I.apply(this, [atom]);
for (var i=0; i < allConnAtoms; i++) if (this.mBondAtom[0][this.mConnBond[atom][i]] == atom && this.getBondOrder$I(this.mConnBond[atom][i]) == 1 ) this.mBondType[this.mConnBond[atom][i]]=1;

var angle=Clazz_array(Double.TYPE, [allConnAtoms]);
var catoms=Clazz_array(Integer.TYPE, [allConnAtoms]);
for (var i=0; i < allConnAtoms; i++) {
var atom2=this.mConnAtom[atom][sortedConnMap[i]];
angle[i]=this.getBondAngle$I$I(atom2, atom);
catoms[i]=atom2;
}
for (var i=1; i < allConnAtoms; i++) if (angle[i] < angle[0] ) angle[i]+=6.283185307179586;

var dangles=Clazz_array(Double.TYPE, [angle.length]);
for (var i=0; i < allConnAtoms; i++) {
dangles[i]=angle[i] / 3.141592653589793 * 180;
}
if (this.getAtomRingSize$I(atom) <= 24.0  && p$1.setFisherProjectionStereoBondsFromParity$I$IA$DA.apply(this, [atom, sortedConnMap, angle]) ) return;
var preferredBond=p$1.preferredTHStereoBond$I$Z.apply(this, [atom, true]);
if (preferredBond == -1) return;
if (this.mBondAtom[0][preferredBond] != atom) {
this.mBondAtom[1][preferredBond]=this.mBondAtom[0][preferredBond];
this.mBondAtom[0][preferredBond]=atom;
}var preferredBondIndex=-1;
for (var i=0; i < allConnAtoms; i++) {
if (preferredBond == this.mConnBond[atom][sortedConnMap[i]]) {
preferredBondIndex=i;
break;
}}
var bondType;
var order=0;
if (allConnAtoms == 3) {
var inverted=false;
switch (preferredBondIndex) {
case 0:
inverted=(((angle[1] < angle[2] ) && (angle[2] - angle[1] < 3.141592653589793 ) ) || ((angle[1] > angle[2] ) && (angle[1] - angle[2] > 3.141592653589793 ) ) );
break;
case 1:
inverted=(angle[2] - angle[0] > 3.141592653589793 );
break;
case 2:
inverted=(angle[1] - angle[0] < 3.141592653589793 );
break;
}
bondType=(!!((this.getAtomParity$I(atom) == 1) ^ inverted)) ? 257 : 129;
} else {
if (angle[1] <= angle[2]  && angle[2] <= angle[3]  ) order=0;
 else if (angle[1] <= angle[3]  && angle[3] <= angle[2]  ) order=1;
 else if (angle[2] <= angle[1]  && angle[1] <= angle[3]  ) order=2;
 else if (angle[2] <= angle[3]  && angle[3] <= angle[1]  ) order=3;
 else if (angle[3] <= angle[1]  && angle[1] <= angle[2]  ) order=4;
 else if (angle[3] <= angle[2]  && angle[2] <= angle[1]  ) order=5;
bondType=(!!((this.getAtomParity$I(atom) == 1) ^ (C$.up_down[order][preferredBondIndex] == 1))) ? 129 : 257;
}this.mBondType[preferredBond]=bondType;
});

Clazz_newMeth(C$, 'setFisherProjectionStereoBondsFromParity$I$IA$DA',  function (atom, sortedConnMap, angle) {
var allConnAtoms=this.mAllConnAtoms[atom];
var direction=Clazz_array(Integer.TYPE, [allConnAtoms]);
var parity=this.getFisherProjectionParity$I$IA$DA$IA(atom, sortedConnMap, angle, direction);
if (parity == 3) return false;
var bondType=(this.getAtomParity$I(atom) == parity) ? 257 : 129;
for (var i=0; i < allConnAtoms; i++) {
if ((direction[i] & 1) == 1) {
var bond=this.mConnBond[atom][sortedConnMap[i]];
this.mBondType[bond]=bondType;
if (this.mBondAtom[0][bond] != atom) {
this.mBondAtom[1][bond]=this.mBondAtom[0][bond];
this.mBondAtom[0][bond]=atom;
}}}
return true;
}, p$1);

Clazz_newMeth(C$, 'getFisherProjectionParity$I$IA$DA$IA',  function (atom, sortedConnMap, angle, direction) {
if (this.getAtomRingSize$I(atom) > 24.0 ) return 3;
var allConnAtoms=this.mAllConnAtoms[atom];
if (direction == null ) direction=Clazz_array(Integer.TYPE, [allConnAtoms]);
if (!p$1.getFisherProjectionBondDirections$I$IA$DA$IA.apply(this, [atom, sortedConnMap, angle, direction])) return 3;
var horizontalBondType=-1;
for (var i=0; i < allConnAtoms; i++) {
if ((direction[i] & 1) == 1) {
var bondType=this.mBondType[this.mConnBond[atom][sortedConnMap[i]]];
if (horizontalBondType != -1 && horizontalBondType != bondType ) return 3;
horizontalBondType=bondType;
}}
var index=(Math.abs(direction[0] - direction[1]) == 2) ? 1 : 0;
var dif=direction[index] - direction[index + 1];
var isClockwise=!!((Math.abs(dif) == 3) ^ (direction[index] < direction[index + 1]));
var is4thConnHorizontal=(allConnAtoms == 3 || ((direction[3] & 1) == 1) );
return !!((!!(isClockwise ^ is4thConnHorizontal)) ^ (horizontalBondType == 129)) ? 1 : 2;
});

Clazz_newMeth(C$, 'getFisherProjectionBondDirections$I$IA$DA$IA',  function (atom, sortedConnMap, angle, direction) {
var allConnAtoms=this.mAllConnAtoms[atom];
if (this.mPi[atom] != 0 || this.isAromaticAtom$I(atom)  || this.mConnAtoms[atom] < 3  || allConnAtoms > 4 ) return false;
var isUsed=Clazz_array(Boolean.TYPE, [4]);
for (var i=0; i < allConnAtoms; i++) {
var a=3.9269908169872414 - angle[i];
if (Math.abs(0.7853981633974483 - (a % (1.5707963267948966))) > 0.08726647 ) return false;
direction[i]=3 & ((a / (1.5707963267948966))|0);
if (isUsed[direction[i]]) return false;
isUsed[direction[i]]=true;
if ((direction[i] & 1) == 0) {
if (this.mBondType[this.mConnBond[atom][sortedConnMap[i]]] != 1) return false;
} else {
if (!this.isStereoBond$I$I(this.mConnBond[atom][sortedConnMap[i]], atom)) return false;
}}
return isUsed[0] && isUsed[2] ;
}, p$1);

Clazz_newMeth(C$, 'setAlleneStereoBondFromParity$I',  function (atom) {
if (this.mConnAtoms[atom] != 2 || this.mConnBondOrder[atom][0] != 2  || this.mConnBondOrder[atom][1] != 2  || this.mConnAtoms[this.mConnAtom[atom][0]] < 2  || this.mConnAtoms[this.mConnAtom[atom][1]] < 2  || this.mPi[this.mConnAtom[atom][0]] != 1  || this.mPi[this.mConnAtom[atom][1]] != 1 ) {
this.setAtomParity$I$I$Z(atom, 0, false);
return;
}var preferredBond=-1;
var preferredAtom=-1;
var preferredAlleneAtom=-1;
var oppositeAlleneAtom=-1;
var bestScore=0;
for (var i=0; i < 2; i++) {
var alleneAtom=this.mConnAtom[atom][i];
var nTerm=0;
var n=this.mAllConnAtoms[alleneAtom];
var connBond=-1;
var connAtom=-1;
for (var j=0; j < n; j++) {
var a=this.mConnAtom[alleneAtom][j];
if (a == atom) continue;
if (this.mConnAtom[a].length == 1) ++nTerm;
connAtom=a;
connBond=this.mConnBond[alleneAtom][j];
var score=p$1.getStereoBondScore$I$I.apply(this, [connBond, connAtom]);
if (bestScore < score) {
bestScore=score;
preferredAtom=connAtom;
preferredBond=connBond;
preferredAlleneAtom=alleneAtom;
oppositeAlleneAtom=this.mConnAtom[atom][1 - i];
}}
if (connBond >= 0 && nTerm == n - 1 ) {
preferredAtom=connAtom;
preferredBond=connBond;
preferredAlleneAtom=alleneAtom;
oppositeAlleneAtom=this.mConnAtom[atom][1 - i];
break;
}}
if (preferredAtom == -1) return;
for (var i=0; i < 2; i++) {
var alleneAtom=this.mConnAtom[atom][i];
for (var j=0; j < this.mAllConnAtoms[alleneAtom]; j++) {
var connAtom=this.mConnAtom[alleneAtom][j];
var connBond=this.mConnBond[alleneAtom][j];
if (connAtom != atom && this.mBondAtom[0][connBond] == alleneAtom ) this.mBondType[connBond]=1;
}
}
if (this.mBondAtom[1][preferredBond] != preferredAtom) {
this.mBondAtom[0][preferredBond]=this.mBondAtom[1][preferredBond];
this.mBondAtom[1][preferredBond]=preferredAtom;
}var highPriorityAtom=2147483647;
var otherAtom=-1;
for (var i=0; i < this.mConnAtoms[preferredAlleneAtom]; i++) {
var connAtom=this.mConnAtom[preferredAlleneAtom][i];
if (connAtom != atom) {
if (connAtom != preferredAtom) otherAtom=connAtom;
if (highPriorityAtom > connAtom) highPriorityAtom=connAtom;
}}
var oppositeAtom=Clazz_array(Integer.TYPE, [2]);
var oppositeAtoms=0;
for (var i=0; i < this.mConnAtoms[oppositeAlleneAtom]; i++) {
var connAtom=this.mConnAtom[oppositeAlleneAtom][i];
if (connAtom != atom) {
oppositeAtom[oppositeAtoms++]=connAtom;
}}
var alleneAngle=this.getBondAngle$I$I(atom, oppositeAlleneAtom);
var angleDif=0.0;
if (oppositeAtoms == 2) {
if (oppositeAtom[0] > oppositeAtom[1]) {
var temp=oppositeAtom[0];
oppositeAtom[0]=oppositeAtom[1];
oppositeAtom[1]=temp;
}var hpAngleDif=$I$(3,"getAngleDif$D$D",[alleneAngle, this.getBondAngle$I$I(oppositeAlleneAtom, oppositeAtom[0])]);
var lpAngleDif=$I$(3,"getAngleDif$D$D",[alleneAngle, this.getBondAngle$I$I(oppositeAlleneAtom, oppositeAtom[1])]);
angleDif=hpAngleDif - lpAngleDif;
} else {
angleDif=$I$(3,"getAngleDif$D$D",[alleneAngle, this.getBondAngle$I$I(oppositeAlleneAtom, oppositeAtom[0])]);
}var isUp=(!!((angleDif < 0.0 ) ^ (this.getAtomParity$I(atom) == 1) ^((highPriorityAtom == preferredAtom))));
this.mBondType[preferredBond]=(isUp ? 257 : 129);
if (otherAtom >= 0) {
var bond=this.getBond$I$I(preferredAlleneAtom, otherAtom);
if (this.getBondType$I(bond) == 1) {
this.mBondType[bond]=(isUp ? 129 : 257);
if (this.getBondAtom$I$I(0, bond) == otherAtom) {
p$1.switchBondAtoms$I.apply(this, [bond]);
}}}}, p$1);

Clazz_newMeth(C$, 'switchBondAtoms$I',  function (bond) {
var a=this.mBondAtom[0][bond];
this.mBondAtom[0][bond]=this.mBondAtom[1][bond];
this.mBondAtom[1][bond]=a;
}, p$1);

Clazz_newMeth(C$, 'setStereoBondFromBondParity$I',  function (bond) {
if (this.getBondParity$I(bond) == 0 || this.getBondParity$I(bond) == 3  || !this.isBINAPChiralityBond$I(bond) ) return;
var preferredBond=-1;
var preferredAtom=-1;
var preferredBINAPAtom=-1;
var oppositeBINAPAtom=-1;
var bestScore=0;
for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bond];
for (var j=0; j < this.mAllConnAtoms[atom]; j++) {
var connBond=this.mConnBond[atom][j];
if (connBond != bond && this.getBondOrder$I(connBond) == 1 ) {
var connAtom=this.mConnAtom[atom][j];
var score=p$1.getStereoBondScore$I$I.apply(this, [connBond, connAtom]);
if (bestScore < score) {
bestScore=score;
preferredAtom=connAtom;
preferredBond=connBond;
preferredBINAPAtom=atom;
oppositeBINAPAtom=this.mBondAtom[1 - i][bond];
}}}
}
if (preferredAtom == -1) return;
for (var i=0; i < 2; i++) {
for (var j=0; j < this.mAllConnAtoms[this.mBondAtom[i][bond]]; j++) {
var connBond=this.mConnBond[this.mBondAtom[i][bond]][j];
if (connBond != bond && this.getBondOrder$I(connBond) == 1 ) this.mBondType[connBond]=1;
}
}
if (this.mBondAtom[1][preferredBond] != preferredAtom) {
this.mBondAtom[0][preferredBond]=this.mBondAtom[1][preferredBond];
this.mBondAtom[1][preferredBond]=preferredAtom;
}var highPriorityAtom=2147483647;
for (var i=0; i < this.mConnAtoms[preferredBINAPAtom]; i++) {
var connAtom=this.mConnAtom[preferredBINAPAtom][i];
if ((this.mConnBond[preferredBINAPAtom][i] != bond) && (highPriorityAtom > connAtom) ) highPriorityAtom=connAtom;
}
var oppositeAtom=Clazz_array(Integer.TYPE, [2]);
var oppositeAtoms=0;
for (var i=0; i < this.mConnAtoms[oppositeBINAPAtom]; i++) if (this.mConnBond[oppositeBINAPAtom][i] != bond) oppositeAtom[oppositeAtoms++]=this.mConnAtom[oppositeBINAPAtom][i];

var binapAngle=this.getBondAngle$I$I(preferredBINAPAtom, oppositeBINAPAtom);
var angleDif=0.0;
if (oppositeAtoms == 2) {
if (oppositeAtom[0] > oppositeAtom[1]) {
var temp=oppositeAtom[0];
oppositeAtom[0]=oppositeAtom[1];
oppositeAtom[1]=temp;
}var hpAngleDif=$I$(3,"getAngleDif$D$D",[binapAngle, this.getBondAngle$I$I(oppositeBINAPAtom, oppositeAtom[0])]);
var lpAngleDif=$I$(3,"getAngleDif$D$D",[binapAngle, this.getBondAngle$I$I(oppositeBINAPAtom, oppositeAtom[1])]);
angleDif=hpAngleDif - lpAngleDif;
} else {
angleDif=$I$(3,"getAngleDif$D$D",[binapAngle, this.getBondAngle$I$I(oppositeBINAPAtom, oppositeAtom[0])]);
}if (!!((angleDif < 0.0 ) ^ (this.getBondParity$I(bond) == 2) ^((highPriorityAtom == preferredAtom)))) this.mBondType[preferredBond]=257;
 else this.mBondType[preferredBond]=129;
});

Clazz_newMeth(C$, 'bondsAreParallel$D$D',  function (angle1, angle2) {
var angleDif=Math.abs($I$(3).getAngleDif$D$D(angle1, angle2));
return (angleDif < 0.08  || angleDif > 3.061592653589793  );
});

Clazz_newMeth(C$, 'getPreferredDoubleBondSide$I',  function (bond) {
var value=Clazz_array(Integer.TYPE, [16]);
var angle=Clazz_array(Double.TYPE, [16]);
var bondAngle=Clazz_array(Double.TYPE, [2]);
var angles=0;
for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bond];
for (var j=0; j < this.mConnAtoms[atom]; j++) {
var connBond=this.mConnBond[atom][j];
if (connBond == bond) continue;
if (angles == 4) return 0;
var connAtom=this.mConnAtom[atom][j];
value[angles]=16;
if (this.mPi[connAtom] != 0) value[angles]+=this.isRingAtom$I(connAtom) ? 1 : 4;
if (this.isRingBond$I(bond) && this.isRingBond$I(connBond) ) {
var sharedRing=this.mRingSet.getSharedRing$I$I(bond, connBond);
if (sharedRing != -1) value[angles]+=this.mRingSet.isAromatic$I(sharedRing) ? 64 : 6;
}angle[angles++]=this.getBondAngle$I$I(atom, connAtom);
}
}
var changed;
bondAngle[0]=this.getBondAngle$I$I(this.mBondAtom[0][bond], this.mBondAtom[1][bond]);
if (bondAngle[0] < 0 ) {
bondAngle[1]=bondAngle[0] + 3.141592653589793;
changed=false;
} else {
bondAngle[1]=bondAngle[0];
bondAngle[0]=bondAngle[1] - 3.141592653589793;
changed=true;
}var side=0;
for (var i=0; i < angles; i++) {
if ((angle[i] > bondAngle[0] ) && (angle[i] < bondAngle[1] ) ) side-=value[i];
 else side+=value[i];
}
return (changed) ? -side : side;
});

Clazz_newMeth(C$, 'preferredTHStereoBond$I$Z',  function (atom, excludeStereoBonds) {
var allConnAtoms=this.mAllConnAtoms[atom];
var angle=Clazz_array(Double.TYPE, [allConnAtoms]);
for (var i=0; i < allConnAtoms; i++) angle[i]=this.getBondAngle$I$I(atom, this.mConnAtom[atom][i]);

for (var i=1; i < allConnAtoms; i++) {
for (var j=0; j < i; j++) {
if (this.bondsAreParallel$D$D(angle[i], angle[j])) {
var angleDistanceSum1=0;
var angleDistanceSum2=0;
for (var k=0; k < allConnAtoms; k++) {
if (k != i && k != j ) {
angleDistanceSum1+=Math.abs($I$(4).difference$D$D(angle[i], angle[k]));
angleDistanceSum2+=Math.abs($I$(4).difference$D$D(angle[j], angle[k]));
}}
var bond=(angleDistanceSum1 < angleDistanceSum2 ) ? this.mConnBond[atom][i] : this.mConnBond[atom][j];
if (this.getBondOrder$I(bond) == 1 && (!excludeStereoBonds || !this.isStereoBond$I(bond) ) ) return bond;
}}
}
var preferredBond=-1;
var bestScore=0;
for (var i=0; i < allConnAtoms; i++) {
var connAtom=this.mConnAtom[atom][i];
var connBond=this.mConnBond[atom][i];
var score=p$1.getStereoBondScore$I$I.apply(this, [connBond, connAtom]);
if (bestScore < score && (!excludeStereoBonds || !this.isStereoBond$I(connBond) ) ) {
bestScore=score;
preferredBond=connBond;
}}
return preferredBond;
}, p$1);

Clazz_newMeth(C$, 'preferredAlleneStereoBond$I$Z',  function (atom, excludeStereoBonds) {
var preferredBond=-1;
var bestScore=0;
for (var i=0; i < 2; i++) {
var alleneAtom=this.mConnAtom[atom][i];
var nTerm=0;
var connBond=-1;
var connAtom=-1;
var n=this.mAllConnAtoms[alleneAtom];
for (var j=0; j < n; j++) {
var a=this.mConnAtom[alleneAtom][j];
if (a == atom) continue;
connAtom=a;
if (this.mConnAtom[connAtom].length == 1) ++nTerm;
connBond=this.mConnBond[alleneAtom][j];
var score=p$1.getStereoBondScore$I$I.apply(this, [connBond, connAtom]);
if (bestScore < score && (!excludeStereoBonds || !this.isStereoBond$I(connBond) ) ) {
bestScore=score;
preferredBond=connBond;
}}
if (connBond >= 0 && nTerm == n - 1 ) return connBond;
}
return preferredBond;
}, p$1);

Clazz_newMeth(C$, 'preferredBinapStereoBond$I',  function (bond) {
var preferredBond=-1;
var bestScore=0;
for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bond];
for (var j=0; j < this.mAllConnAtoms[atom]; j++) {
var connAtom=this.mConnAtom[atom][j];
if (connAtom != this.mBondAtom[1 - i][bond]) {
var connBond=this.mConnBond[atom][j];
var score=p$1.getStereoBondScore$I$I.apply(this, [connBond, connAtom]);
if (bestScore < score) {
bestScore=score;
preferredBond=connBond;
}}}
}
return preferredBond;
}, p$1);

Clazz_newMeth(C$, 'findAlleneCenterAtom$I',  function (atom) {
var center=-1;
if (this.mPi[atom] == 1) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
if (this.mConnBondOrder[atom][i] == 2) {
var connAtom=this.mConnAtom[atom][i];
if (this.mConnAtoms[connAtom] == 2 && this.mPi[connAtom] == 2 ) {
for (var j=0; j < 2; j++) {
var endAtom=this.mConnAtom[connAtom][j];
if (endAtom != atom && this.mPi[endAtom] == 1 ) {
center=connAtom;
break;
}}
}break;
}}
}return center;
});

Clazz_newMeth(C$, 'findAlleneEndAtom$I$I',  function (atom1, atom2) {
var startAtom=atom1;
while (this.mConnAtoms[atom2] == 2 && this.mPi[atom2] == 2  && atom2 != startAtom ){
var temp=atom2;
atom2=(this.mConnAtom[atom2][0] == atom1) ? this.mConnAtom[atom2][1] : this.mConnAtom[atom2][0];
atom1=temp;
}
return (atom2 == startAtom) ? -1 : atom2;
});

Clazz_newMeth(C$, 'findBINAPOppositeAtom$I',  function (atom) {
if (this.mConnAtoms[atom] == 3 && this.isAromaticAtom$I(atom)  && this.getAtomRingSize$I(atom) >= 6 ) for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.isBINAPChiralityBond$I(this.mConnBond[atom][i])) return this.mConnAtom[atom][i];

return -1;
}, p$1);

Clazz_newMeth(C$, 'findBINAPChiralityBond$I',  function (atom) {
if (this.mConnAtoms[atom] == 3 && this.isAromaticAtom$I(atom)  && this.getAtomRingSize$I(atom) >= 5 ) for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.isBINAPChiralityBond$I(this.mConnBond[atom][i])) return this.mConnBond[atom][i];

return -1;
});

Clazz_newMeth(C$, 'isAmideTypeBond$I',  function (bond) {
this.ensureHelperArrays$I(1);
for (var i=0; i < 2; i++) {
var atom1=this.mBondAtom[i][bond];
if (this.mAtomicNo[atom1] == 7) {
var atom2=this.mBondAtom[1 - i][bond];
for (var j=0; j < this.mConnAtoms[atom2]; j++) {
var connAtom=this.mConnAtom[atom2][j];
var connBond=this.mConnBond[atom2][j];
if ((this.mAtomicNo[connAtom] == 7 || this.mAtomicNo[connAtom] == 8  || this.mAtomicNo[connAtom] == 16 ) && this.getBondOrder$I(connBond) >= 2 ) return true;
}
}}
return false;
});

Clazz_newMeth(C$, 'isCentralAlleneAtom$I',  function (atom) {
return this.mPi[atom] == 2 && this.mConnAtoms[atom] == 2  && this.mConnBondOrder[atom][0] == 2  && this.mConnBondOrder[atom][1] == 2  && this.mAtomicNo[atom] <= 7 ;
});

Clazz_newMeth(C$, 'isFlatNitrogen$I',  function (atom) {
return p$1.isFlatNitrogen$I$Z.apply(this, [atom, true]);
});

Clazz_newMeth(C$, 'isFlatNitrogen$I$Z',  function (atom, checkForPyramidalBridgeHead) {
if (this.mAtomicNo[atom] != 7 || this.mConnAtoms[atom] == 4 ) return false;
if (this.isAromaticAtom$I(atom) || this.mPi[atom] != 0  || (this.mAtomQueryFeatures[atom] & 268435456) != 0 ) return true;
if (this.mAtomCharge[atom] == 1) return false;
for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.getBondRingSize$I(this.mConnBond[atom][i]) == 3) return false;

var heteroCount=0;
for (var i=0; i < this.mConnAtoms[atom]; i++) {
if (this.mConnBondOrder[atom][i] == 1) {
var atomicNo=this.mAtomicNo[this.mConnAtom[atom][i]];
if (atomicNo == 8 || atomicNo == 9  || atomicNo == 17 ) ++heteroCount;
}}
if (heteroCount == 0) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connAtom=this.mConnAtom[atom][i];
if (this.mPi[connAtom] != 0) {
if (this.isAromaticAtom$I(connAtom)) {
if (this.getAtomRingSize$I(connAtom) >= 5) {
var orthoSubstituentCount=0;
for (var j=0; j < this.mConnAtoms[connAtom]; j++) {
var ortho=this.mConnAtom[connAtom][j];
if (ortho != atom && this.getNonHydrogenNeighbourCount$I(ortho) >= 3 ) ++orthoSubstituentCount;
}
var nitrogenNeighbourCount=this.getNonHydrogenNeighbourCount$I(atom);
if ((orthoSubstituentCount == 2 && nitrogenNeighbourCount >= 2 ) || (orthoSubstituentCount == 1 && nitrogenNeighbourCount == 3 ) ) continue;
}return !checkForPyramidalBridgeHead || !this.isPyramidalBridgeHead$I(atom) ;
}for (var j=0; j < this.mConnAtoms[connAtom]; j++) {
if ((this.mConnBondOrder[connAtom][j] == 2 || this.isAromaticBond$I(this.mConnBond[connAtom][j]) )) return !checkForPyramidalBridgeHead || !this.isPyramidalBridgeHead$I(atom) ;
}
}}
}if (heteroCount < 2) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connAtom=this.mConnAtom[atom][i];
var isStabilized=false;
var hasCompetitor=false;
for (var j=0; j < this.mConnAtoms[connAtom]; j++) {
if (this.mConnAtom[connAtom][j] != atom) {
if (this.mConnBondOrder[connAtom][j] != 1 && (this.mAtomicNo[this.mConnAtom[connAtom][j]] == 7 || this.mAtomicNo[this.mConnAtom[connAtom][j]] == 8  || this.mAtomicNo[this.mConnAtom[connAtom][j]] == 16 ) ) isStabilized=true;
if (this.mConnBondOrder[connAtom][j] == 1 && this.mAtomicNo[this.mConnAtom[connAtom][j]] == 7 ) hasCompetitor=true;
}}
if (isStabilized && (!hasCompetitor || heteroCount == 0 ) ) return !checkForPyramidalBridgeHead || !this.isPyramidalBridgeHead$I(atom) ;
}
}return false;
}, p$1);

Clazz_newMeth(C$, 'isPyramidalBridgeHead$I',  function (atom) {
if (this.isAromaticAtom$I(atom) || this.mPi[atom] != 0  || (this.mAtomQueryFeatures[atom] & 268435456) != 0  || this.getAtomRingBondCount$I(atom) < 3 ) return false;
var smallRingSize=this.getAtomRingSize$I(atom);
if (smallRingSize > 7) return false;
var smallRingNo=0;
while (smallRingNo < this.mRingSet.getSize$()){
if (this.mRingSet.getRingSize$I(smallRingNo) == smallRingSize && this.mRingSet.isAtomMember$I$I(smallRingNo, atom) ) break;
++smallRingNo;
}
if (smallRingNo >= 1024 && smallRingNo == this.mRingSet.getSize$() ) return false;
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connBond=this.mConnBond[atom][i];
if (!this.mRingSet.isBondMember$I$I(smallRingNo, connBond) && p$1.isPyramidEnforcingBridge$I$I$I$I.apply(this, [atom, smallRingNo, this.mConnAtom[atom][i], connBond]) ) return true;
}
return false;
});

Clazz_newMeth(C$, 'isPyramidEnforcingBridge$I$I$I$I',  function (atom, ringNo, firstBridgeAtom, firstBridgeBond) {
var neglectBond=Clazz_array(Boolean.TYPE, [this.mBonds]);
neglectBond[firstBridgeBond]=true;
var pathAtom=Clazz_array(Integer.TYPE, [11]);
var pathLength=this.getPath$IA$I$I$I$ZA(pathAtom, firstBridgeAtom, atom, 10, neglectBond);
if (pathLength == -1) return false;
var bridgeAtomCount=1;
while (!this.mRingSet.isAtomMember$I$I(ringNo, pathAtom[bridgeAtomCount]))++bridgeAtomCount;

var bondCountToBridgeHead=pathLength - bridgeAtomCount;
var bridgeHead=pathAtom[bridgeAtomCount];
var smallestRingSize=this.mRingSet.getRingSize$I(ringNo);
if (smallestRingSize == 6 && bondCountToBridgeHead == 2  && bridgeAtomCount == 3 ) {
if (this.getAtomRingBondCount$I(pathAtom[1]) >= 3) {
var ringAtom=this.mRingSet.getRingAtoms$I(ringNo);
for (var i=0; i < 6; i++) {
if (atom == ringAtom[i]) {
var potentialOtherBridgeHeadIndex=this.mRingSet.validateMemberIndex$I$I(ringNo, (bridgeHead == ringAtom[this.mRingSet.validateMemberIndex$I$I(ringNo, i + 2)]) ? i - 2 : i + 2);
var potentialOtherBridgeHead=ringAtom[potentialOtherBridgeHeadIndex];
if (this.getAtomRingBondCount$I(potentialOtherBridgeHead) >= 3 && this.getPathLength$I$I$I$ZA(pathAtom[1], potentialOtherBridgeHead, 2, null) == 2 ) return true;
break;
}}
}}var bridgeHeadIsFlat=(this.getAtomPi$I(bridgeHead) == 1 || this.isAromaticAtom$I(bridgeHead)  || p$1.isFlatNitrogen$I$Z.apply(this, [bridgeHead, false]) );
var bridgeHeadMayInvert=!bridgeHeadIsFlat && this.getAtomicNo$I(bridgeHead) == 7  && this.getAtomCharge$I(bridgeHead) != 1 ;
if (bondCountToBridgeHead == 1) return !bridgeHeadIsFlat && !bridgeHeadMayInvert && smallestRingSize <= 4   && bridgeAtomCount <= 3 ;
switch (smallestRingSize) {
case 4:
if (!bridgeHeadIsFlat && !bridgeHeadMayInvert && bridgeAtomCount <= 4  ) return true;
break;
case 5:
if (bridgeHeadMayInvert) {
if (bridgeAtomCount <= 3) return true;
} else if (!bridgeHeadIsFlat) {
if (bridgeAtomCount <= 4) return true;
}break;
case 6:
if (bondCountToBridgeHead == 2) {
if (bridgeHeadIsFlat) {
if (bridgeAtomCount <= 4) return true;
} else if (!bridgeHeadMayInvert) {
if (bridgeAtomCount <= 3) return true;
}} else if (bondCountToBridgeHead == 3) {
if (bridgeHeadIsFlat) {
if (bridgeAtomCount <= 6) return true;
} else {
if (bridgeAtomCount <= 4) return true;
}}break;
case 7:
if (bondCountToBridgeHead == 3) {
if (bridgeAtomCount <= 3) return true;
}break;
}
return false;
}, p$1);

Clazz_newMeth(C$, 'isBINAPChiralityBond$I',  function (bond) {
if (this.mBondType[bond] != 1 || this.isAromaticBond$I(bond)  || (this.isRingBond$I(bond) && this.getBondRingSize$I(bond) < 7 ) ) return false;
var atom1=this.mBondAtom[0][bond];
if (!this.isAromaticAtom$I(atom1) || this.getAtomRingSize$I(atom1) < 5 ) return false;
var atom2=this.mBondAtom[1][bond];
if (!this.isAromaticAtom$I(atom2) || this.getAtomRingSize$I(atom2) < 5 ) return false;
var orthoSubstituentCount1=p$1.getOrthoSubstituentCount$I$I.apply(this, [atom1, atom2]);
var orthoSubstituentCount2=p$1.getOrthoSubstituentCount$I$I.apply(this, [atom2, atom1]);
if (this.getAtomRingSize$I(atom1) > 5 && this.getAtomRingSize$I(atom2) > 5 ) return orthoSubstituentCount1 + orthoSubstituentCount2 > 2;
var secondOrderOrthoSubstituentCount1=p$1.getSecondOrderOrthoSubstituentCount$I$I.apply(this, [atom1, atom2]);
var secondOrderOrthoSubstituentCount2=p$1.getSecondOrderOrthoSubstituentCount$I$I.apply(this, [atom2, atom1]);
if (orthoSubstituentCount1 == 2 && secondOrderOrthoSubstituentCount2 >= 1 ) return true;
if (orthoSubstituentCount2 == 2 && secondOrderOrthoSubstituentCount1 >= 1 ) return true;
if (secondOrderOrthoSubstituentCount1 == 2 && (orthoSubstituentCount2 >= 1 || secondOrderOrthoSubstituentCount2 >= 1 ) ) return true;
if (secondOrderOrthoSubstituentCount2 == 2 && (orthoSubstituentCount1 >= 1 || secondOrderOrthoSubstituentCount1 >= 1 ) ) return true;
return false;
});

Clazz_newMeth(C$, 'getOrthoSubstituentCount$I$I',  function (atom, otherBondAtom) {
var count=0;
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connAtom=this.mConnAtom[atom][i];
if (connAtom != otherBondAtom && this.mConnAtoms[connAtom] > 2 ) ++count;
}
return count;
}, p$1);

Clazz_newMeth(C$, 'getSecondOrderOrthoSubstituentCount$I$I',  function (atom, otherBondAtom) {
var count=0;
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connAtom=this.mConnAtom[atom][i];
if (connAtom != otherBondAtom) {
var innerCount=0;
for (var j=0; j < this.mConnAtoms[connAtom]; j++) {
var nextConnAtom=this.mConnAtom[connAtom][j];
if (nextConnAtom != atom && this.isAromaticBond$I(this.mConnBond[connAtom][j])  && this.mConnAtoms[nextConnAtom] > 2 ) ++innerCount;
}
if (innerCount == 2) ++count;
}}
return count;
}, p$1);

Clazz_newMeth(C$, 'validateBondType$I$I',  function (bond, type) {
var ok=C$.superclazz.prototype.validateBondType$I$I.apply(this, [bond, type]);
if (ok && type == 386 ) {
this.ensureHelperArrays$I(7);
ok=!!(ok&(!this.isSmallRingBond$I(bond)));
}return ok;
});

Clazz_newMeth(C$, 'validate$',  function () {
var avbl=this.getAverageBondLength$();
var minDistanceSquare=avbl * avbl / 16.0;
for (var atom1=1; atom1 < this.mAllAtoms; atom1++) {
for (var atom2=0; atom2 < atom1; atom2++) {
var xdif=this.mCoordinates[atom2].x - this.mCoordinates[atom1].x;
var ydif=this.mCoordinates[atom2].y - this.mCoordinates[atom1].y;
var zdif=this.mCoordinates[atom2].z - this.mCoordinates[atom1].z;
if ((xdif * xdif + ydif * ydif + zdif * zdif) < minDistanceSquare ) throw Clazz_new_(Clazz_load('Exception').c$$S,["The distance between two atoms is too close."]);
}
}
this.ensureHelperArrays$I(1);
var allCharge=0;
for (var atom=0; atom < this.mAtoms; atom++) {
if (this.getOccupiedValence$I(atom) > this.getMaxValence$I(atom)) throw Clazz_new_(Clazz_load('Exception').c$$S,["atom valence exceeded"]);
allCharge+=this.mAtomCharge[atom];
}
if (allCharge != 0) throw Clazz_new_(Clazz_load('Exception').c$$S,["unbalanced atom charge"]);
});

Clazz_newMeth(C$, 'normalizeAmbiguousBonds$',  function () {
this.ensureHelperArrays$I(1);
p$1.normalizeExplicitlyDelocalizedBonds.apply(this, []);
var found=false;
for (var atom=0; atom < this.mAtoms; atom++) {
if (this.mAtomicNo[atom] == 7 && this.mAtomCharge[atom] == 0 ) {
var valence=this.getOccupiedValence$I(atom);
if (valence == 4) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connAtom=this.mConnAtom[atom][i];
if (this.mConnBondOrder[atom][i] == 1 && this.mAtomicNo[connAtom] == 8  && this.mConnAtoms[connAtom] == 1  && this.mAtomCharge[connAtom] == 0 ) {
found=true;
++this.mAtomCharge[atom];
--this.mAtomCharge[connAtom];
break;
}}
} else if (valence == 5) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connAtom=this.mConnAtom[atom][i];
var connBond=this.mConnBond[atom][i];
if (this.mConnBondOrder[atom][i] == 2 && this.mAtomicNo[connAtom] == 8 ) {
found=true;
++this.mAtomCharge[atom];
--this.mAtomCharge[connAtom];
this.mBondType[connBond]=1;
break;
}if (this.mConnBondOrder[atom][i] == 3 && this.mAtomicNo[connAtom] == 7 ) {
found=true;
++this.mAtomCharge[atom];
--this.mAtomCharge[connAtom];
this.mBondType[connBond]=2;
break;
}}
}}}
var bondDeleted=false;
for (var bond=0; bond < this.mBonds; bond++) {
for (var i=0; i < 2; i++) {
if (this.isElectronegative$I(this.mBondAtom[i][bond])) {
var atom=this.mBondAtom[1 - i][bond];
if (this.isAlkaliMetal$I(atom) || this.isEarthAlkaliMetal$I(atom) ) {
if (this.getBondOrder$I(bond) == 1) {
++this.mAtomCharge[atom];
--this.mAtomCharge[this.mBondAtom[i][bond]];
this.mBondType[bond]=512;
bondDeleted=true;
} else if (this.mBondType[bond] == 16) {
this.mBondType[bond]=512;
bondDeleted=true;
}}break;
}}
}
if (bondDeleted) {
this.compressMolTable$();
found=true;
}if (found) this.mValidHelperArrays=0;
return found;
});

Clazz_newMeth(C$, 'normalizeExplicitlyDelocalizedBonds',  function () {
for (var bond=0; bond < this.mBonds; bond++) if (this.mBondType[bond] == 8) return Clazz_new_($I$(2,1).c$$com_actelion_research_chem_ExtendedMolecule,[this]).locateDelocalizedDoubleBonds$ZA(null);

return false;
}, p$1);

Clazz_newMeth(C$, 'isAlkaliMetal$I',  function (atom) {
var atomicNo=this.mAtomicNo[atom];
return atomicNo == 3 || atomicNo == 11  || atomicNo == 19  || atomicNo == 37  || atomicNo == 55  || atomicNo == 87 ;
});

Clazz_newMeth(C$, 'isEarthAlkaliMetal$I',  function (atom) {
var atomicNo=this.mAtomicNo[atom];
return atomicNo == 4 || atomicNo == 12  || atomicNo == 20  || atomicNo == 38  || atomicNo == 56  || atomicNo == 88 ;
});

Clazz_newMeth(C$, 'isNitrogenFamily$I',  function (atom) {
var atomicNo=this.mAtomicNo[atom];
return atomicNo == 7 || atomicNo == 15  || atomicNo == 33 ;
});

Clazz_newMeth(C$, 'isChalcogene$I',  function (atom) {
var atomicNo=this.mAtomicNo[atom];
return atomicNo == 8 || atomicNo == 16  || atomicNo == 34  || atomicNo == 52  || atomicNo == 84 ;
});

Clazz_newMeth(C$, 'isHalogene$I',  function (atom) {
var atomicNo=this.mAtomicNo[atom];
return atomicNo == 9 || atomicNo == 17  || atomicNo == 35  || atomicNo == 53  || atomicNo == 85 ;
});

Clazz_newMeth(C$, 'canonizeCharge$Z',  function (allowUnbalancedCharge) {
return this.canonizeCharge$Z$Z(allowUnbalancedCharge, false);
});

Clazz_newMeth(C$, 'canonizeCharge$Z$Z',  function (allowUnbalancedCharge, doNeutralize) {
this.ensureHelperArrays$I(1);
if (doNeutralize) allowUnbalancedCharge=true;
for (var bond=0; bond < this.mAllBonds; bond++) {
var bondOrder=this.getBondOrder$I(bond);
if (bondOrder == 1 || bondOrder == 2 ) {
var atom1;
var atom2;
if (this.mAtomCharge[this.mBondAtom[0][bond]] > 0 && this.mAtomCharge[this.mBondAtom[1][bond]] < 0 ) {
atom1=this.mBondAtom[0][bond];
atom2=this.mBondAtom[1][bond];
} else if (this.mAtomCharge[this.mBondAtom[0][bond]] < 0 && this.mAtomCharge[this.mBondAtom[1][bond]] > 0 ) {
atom1=this.mBondAtom[1][bond];
atom2=this.mBondAtom[0][bond];
} else continue;
if (this.isMetalAtom$I(atom1) || this.isMetalAtom$I(atom2) ) continue;
if ((this.mAtomicNo[atom1] < 9 && this.getOccupiedValence$I(atom1) > 3 ) || (this.mAtomicNo[atom2] < 9 && this.getOccupiedValence$I(atom2) > 3 ) ) continue;
var hasImplicitHydrogen=(this.getImplicitHydrogens$I(atom1) != 0);
this.mAtomCharge[atom1]-=1;
this.mAtomCharge[atom2]+=1;
if (!hasImplicitHydrogen) {
var oldBondType=this.mBondType[bond];
if (bondOrder == 1) this.mBondType[bond]=2;
 else this.mBondType[bond]=4;
if (oldBondType == 129 || oldBondType == 257 ) {
var stereoCenter=this.mBondAtom[0][bond];
var newStereoBond=p$1.preferredTHStereoBond$I$Z.apply(this, [stereoCenter, false]);
if (this.mBondAtom[0][newStereoBond] != stereoCenter) {
this.mBondAtom[1][newStereoBond]=this.mBondAtom[0][newStereoBond];
this.mBondAtom[1][newStereoBond]=stereoCenter;
}}}this.mValidHelperArrays=0;
}}
var overallCharge=0;
var negativeAtomCount=0;
var negativeAdjustableCharge=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
overallCharge+=this.mAtomCharge[atom];
if (this.mAtomCharge[atom] < 0 && !p$1.hasPositiveNeighbour$I.apply(this, [atom]) ) {
++negativeAtomCount;
if (this.isElectronegative$I(atom)) negativeAdjustableCharge-=this.mAtomCharge[atom];
}}
if (!allowUnbalancedCharge && overallCharge != 0 ) throw Clazz_new_(Clazz_load('Exception').c$$S,["molecule\'s overall charges are not balanced"]);
this.ensureHelperArrays$I(1);
var overallChargeChange=0;
var positiveChargeForRemoval=doNeutralize ? overallCharge + negativeAdjustableCharge : negativeAdjustableCharge;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.mAtomCharge[atom] > 0) {
if (!p$1.hasNegativeNeighbour$I.apply(this, [atom]) && this.isElectronegative$I(atom) ) {
var chargeReduction=Math.min(this.getImplicitHydrogens$I(atom), this.mAtomCharge[atom]);
if (chargeReduction != 0 && positiveChargeForRemoval >= chargeReduction ) {
overallCharge-=chargeReduction;
overallChargeChange-=chargeReduction;
positiveChargeForRemoval-=chargeReduction;
this.mAtomCharge[atom]-=chargeReduction;
this.mValidHelperArrays&=1;
}}}}
var negativeChargeForRemoval=doNeutralize ? overallCharge : overallChargeChange;
if (negativeChargeForRemoval < 0) {
var negativeAtom=Clazz_array(Integer.TYPE, [negativeAtomCount]);
negativeAtomCount=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.mAtomCharge[atom] < 0 && !p$1.hasPositiveNeighbour$I.apply(this, [atom]) ) {
negativeAtom[negativeAtomCount++]=(this.mAtomicNo[atom] << 22) + atom;
}}
$I$(1).sort$IA(negativeAtom);
for (var i=negativeAtom.length - 1; (negativeChargeForRemoval < 0) && (i >= negativeAtom.length - negativeAtomCount) ; i--) {
var atom=negativeAtom[i] & 4194303;
if (this.isElectronegative$I(atom)) {
var chargeReduction=Math.min(-negativeChargeForRemoval, -this.mAtomCharge[atom]);
overallCharge+=chargeReduction;
negativeChargeForRemoval+=chargeReduction;
this.mAtomCharge[atom]+=chargeReduction;
this.mValidHelperArrays&=1;
}}
}return overallCharge;
});

Clazz_newMeth(C$, 'hasNegativeNeighbour$I',  function (atom) {
for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.mAtomCharge[this.mConnAtom[atom][i]] < 0) return true;

return false;
}, p$1);

Clazz_newMeth(C$, 'hasPositiveNeighbour$I',  function (atom) {
for (var i=0; i < this.mConnAtoms[atom]; i++) if (this.mAtomCharge[this.mConnAtom[atom][i]] > 0) return true;

return false;
}, p$1);

Clazz_newMeth(C$, 'getZNeighbour$I$I',  function (connAtom, bond) {
if (this.getBondOrder$I(bond) != 2 && !this.isAromaticBond$I(bond) ) return -1;
var parity=this.getBondParity$I(bond);
if (parity != 1 && parity != 2 ) return -1;
for (var i=0; i < 2; i++) {
var atom1=this.mBondAtom[i][bond];
var atom2=this.mBondAtom[1 - i][bond];
var other1=-1;
var found=false;
for (var j=0; j < this.mConnAtoms[atom1]; j++) {
var conn=this.mConnAtom[atom1][j];
if (conn != atom2) {
if (conn == connAtom) found=true;
 else other1=conn;
}}
if (found) {
var lowConn=-1;
var highConn=-1;
for (var j=0; j < this.mConnAtoms[atom2]; j++) {
var conn=this.mConnAtom[atom2][j];
if (conn != atom1) {
if (lowConn == -1) lowConn=conn;
 else if (conn > lowConn) highConn=conn;
 else {
highConn=lowConn;
lowConn=conn;
}}}
if (this.mConnAtoms[atom1] == 2) {
if (this.mConnAtoms[atom2] == 2) return parity == 2 ? lowConn : -1;
return (parity == 2) ? lowConn : highConn;
} else {
if (this.mConnAtoms[atom2] == 2) return !!((parity == 2) ^ (connAtom < other1)) ? -1 : lowConn;
return !!((parity == 2) ^ (connAtom < other1)) ? highConn : lowConn;
}}}
return -1;
});

Clazz_newMeth(C$, 'getHelperArrayStatus$',  function () {
return this.mValidHelperArrays;
});

Clazz_newMeth(C$, 'ensureHelperArrays$I',  function (required) {
if ((required & ~this.mValidHelperArrays) == 0) return;
if ((this.mValidHelperArrays & 1) == 0) {
p$1.handleHydrogens.apply(this, []);
p$1.calculateNeighbours.apply(this, []);
this.mValidHelperArrays|=1;
if (this.mIsFragment && !this.is3D$() && p$1.convertHydrogenToQueryFeatures.apply(this, [])  ) {
p$1.handleHydrogens.apply(this, []);
p$1.calculateNeighbours.apply(this, []);
this.mValidHelperArrays|=1;
}}if ((required & ~this.mValidHelperArrays) == 0) return;
if ((this.mValidHelperArrays & ~(6)) != 0) {
for (var atom=0; atom < this.mAtoms; atom++) this.mAtomFlags[atom]&=~15368;

for (var bond=0; bond < this.mBonds; bond++) this.mBondFlags[bond]&=~704;

if ((required & 4) == 0) {
p$1.findRings$I.apply(this, [1]);
this.mValidHelperArrays|=2;
return;
}p$1.findRings$I.apply(this, [7]);
for (var atom=0; atom < this.mAtoms; atom++) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
var connBond=this.mConnBond[atom][i];
if (this.isAromaticBond$I(connBond)) continue;
var connAtom=this.mConnAtom[atom][i];
for (var j=0; j < this.mConnAtoms[connAtom]; j++) {
if (this.mConnBond[connAtom][j] == connBond) continue;
if (this.mConnBondOrder[connAtom][j] > 1) {
if (this.mAtomicNo[this.mConnAtom[connAtom][j]] == 6) this.mAtomFlags[atom]|=4096;
 else {
if (!this.isAromaticBond$I(this.mConnBond[connAtom][j]) && this.isElectronegative$I(this.mConnAtom[connAtom][j]) ) this.mAtomFlags[atom]|=8192;
}}}
}
}
while (true){
var found=false;
for (var atom=0; atom < this.mAtoms; atom++) {
if (this.mPi[atom] > 0 && (this.mAtomFlags[atom] & 8192) != 0  && !this.mRingSet.isAromaticAtom$I(atom) ) {
for (var i=0; i < this.mConnAtoms[atom]; i++) {
if (this.mConnBondOrder[atom][i] > 1) {
var connAtom=this.mConnAtom[atom][i];
var connBond=this.mConnBond[atom][i];
for (var j=0; j < this.mConnAtoms[connAtom]; j++) {
if (this.mConnBond[connAtom][j] != connBond) {
var candidate=this.mConnAtom[connAtom][j];
if ((this.mAtomFlags[candidate] & 8192) == 0) {
this.mAtomFlags[candidate]|=8192;
found=true;
}}}
}}
}}
if (!found) break;
}
}this.mValidHelperArrays|=(6);
});

Clazz_newMeth(C$, 'handleHydrogens',  function () {
this.mReallySimpleHydrogens=p$1.findSimpleHydrogens.apply(this, []);
var lastNonHAtom=this.mAllAtoms;
do --lastNonHAtom;
 while ((lastNonHAtom >= 0) && this.mReallySimpleHydrogens[lastNonHAtom] );
for (var atom=0; atom < lastNonHAtom; atom++) {
if (this.mReallySimpleHydrogens[atom]) {
this.swapAtoms$I$I(atom, lastNonHAtom);
var temp=this.mReallySimpleHydrogens[atom];
this.mReallySimpleHydrogens[atom]=this.mReallySimpleHydrogens[lastNonHAtom];
this.mReallySimpleHydrogens[lastNonHAtom]=temp;
do --lastNonHAtom;
 while (this.mReallySimpleHydrogens[lastNonHAtom]);
}}
this.mAtoms=lastNonHAtom + 1;
if (this.mAllAtoms == this.mAtoms) {
this.mBonds=this.mAllBonds;
return;
}var isHydrogenBond=Clazz_array(Boolean.TYPE, [this.mAllBonds]);
for (var bond=0; bond < this.mAllBonds; bond++) {
var atom1=this.mBondAtom[0][bond];
var atom2=this.mBondAtom[1][bond];
if (this.mReallySimpleHydrogens[atom1] || this.mReallySimpleHydrogens[atom2] ) isHydrogenBond[bond]=true;
}
var lastNonHBond=this.mAllBonds;
do --lastNonHBond;
 while ((lastNonHBond >= 0) && isHydrogenBond[lastNonHBond] );
for (var bond=0; bond < lastNonHBond; bond++) {
if (isHydrogenBond[bond]) {
this.swapBonds$I$I(bond, lastNonHBond);
isHydrogenBond[bond]=false;
do --lastNonHBond;
 while (isHydrogenBond[lastNonHBond]);
}}
this.mBonds=lastNonHBond + 1;
}, p$1);

Clazz_newMeth(C$, 'getHandleHydrogenMap$',  function () {
return this.getHandleHydrogenAtomMap$ZA(p$1.findSimpleHydrogens.apply(this, []));
});

Clazz_newMeth(C$, 'getHandleHydrogenAtomMap$ZA',  function (isSimpleHydrogen) {
var map=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
for (var i=0; i < this.mAllAtoms; i++) map[i]=i;

var lastNonHAtom=this.mAllAtoms;
do --lastNonHAtom;
 while ((lastNonHAtom >= 0) && isSimpleHydrogen[lastNonHAtom] );
for (var i=0; i < lastNonHAtom; i++) {
if (isSimpleHydrogen[map[i]]) {
var tempIndex=map[i];
map[i]=map[lastNonHAtom];
map[lastNonHAtom]=tempIndex;
var temp=isSimpleHydrogen[i];
isSimpleHydrogen[i]=isSimpleHydrogen[lastNonHAtom];
isSimpleHydrogen[lastNonHAtom]=temp;
do --lastNonHAtom;
 while (isSimpleHydrogen[lastNonHAtom]);
}}
return map;
});

Clazz_newMeth(C$, 'getHandleHydrogenBondMap$',  function () {
var isSimpleHydrogen=p$1.findSimpleHydrogens.apply(this, []);
var map=Clazz_array(Integer.TYPE, [this.mAllBonds]);
for (var i=0; i < this.mAllBonds; i++) map[i]=i;

var isHydrogenBond=Clazz_array(Boolean.TYPE, [this.mAllBonds]);
for (var bond=0; bond < this.mAllBonds; bond++) isHydrogenBond[bond]=isSimpleHydrogen[this.mBondAtom[0][bond]] || isSimpleHydrogen[this.mBondAtom[1][bond]] ;

var lastNonHBond=this.mAllBonds;
do --lastNonHBond;
 while ((lastNonHBond >= 0) && isHydrogenBond[lastNonHBond] );
for (var i=0; i < lastNonHBond; i++) {
if (isHydrogenBond[map[i]]) {
var tempIndex=map[i];
map[i]=map[lastNonHBond];
map[lastNonHBond]=tempIndex;
do --lastNonHBond;
 while (isHydrogenBond[map[lastNonHBond]]);
}}
return map;
});

Clazz_newMeth(C$, 'findSimpleHydrogens',  function () {
var isSimpleHydrogen=Clazz_array(Boolean.TYPE, [this.mAllAtoms]);
for (var atom=0; atom < this.mAllAtoms; atom++) isSimpleHydrogen[atom]=this.isSimpleHydrogen$I(atom);

var oneBondFound=Clazz_array(Boolean.TYPE, [this.mAllAtoms]);
for (var bond=0; bond < this.mAllBonds; bond++) {
var atom1=this.mBondAtom[0][bond];
var atom2=this.mBondAtom[1][bond];
if (this.getBondOrder$I(bond) != 1) {
isSimpleHydrogen[atom1]=false;
isSimpleHydrogen[atom2]=false;
continue;
}if (oneBondFound[atom1]) isSimpleHydrogen[atom1]=false;
if (oneBondFound[atom2]) isSimpleHydrogen[atom2]=false;
if (isSimpleHydrogen[atom1] && this.isMetalAtom$I(atom2) && this.mAtomicNo[atom2] != 13  ) isSimpleHydrogen[atom1]=false;
if (isSimpleHydrogen[atom2] && this.isMetalAtom$I(atom1) && this.mAtomicNo[atom1] != 13  ) isSimpleHydrogen[atom2]=false;
oneBondFound[atom1]=true;
oneBondFound[atom2]=true;
}
for (var bond=0; bond < this.mAllBonds; bond++) {
if (isSimpleHydrogen[this.mBondAtom[0][bond]] && isSimpleHydrogen[this.mBondAtom[1][bond]] ) {
isSimpleHydrogen[this.mBondAtom[0][bond]]=false;
isSimpleHydrogen[this.mBondAtom[1][bond]]=false;
}}
for (var atom=0; atom < this.mAllAtoms; atom++) if (!oneBondFound[atom]) isSimpleHydrogen[atom]=false;

return isSimpleHydrogen;
}, p$1);

Clazz_newMeth(C$, 'isSimpleHydrogen$I',  function (atom) {
return this.mAtomicNo[atom] == 1 && this.mAtomMass[atom] == 0  && this.mAtomCharge[atom] == 0  && (this.mAtomFlags[atom] & 2013265920) == 0  && (this.mAtomCustomLabel == null  || this.mAtomCustomLabel[atom] == null  ) ;
});

Clazz_newMeth(C$, 'removeExplicitHydrogens$',  function () {
this.removeExplicitHydrogens$Z$Z(true, false);
});

Clazz_newMeth(C$, 'removeExplicitHydrogens$Z$Z',  function (hasValid2DCoords, hasValid3DCoords) {
this.ensureHelperArrays$I(hasValid2DCoords ? 15 : 1);
this.mAllAtoms=this.mAtoms;
this.mAllBonds=this.mBonds;
for (var atom=0; atom < this.mAtoms; atom++) {
if (this.mAllConnAtoms[atom] != this.mConnAtoms[atom]) {
var abnormalValence=this.getImplicitHigherValence$I$Z(atom, false);
this.mAllConnAtoms[atom]=this.mConnAtoms[atom];
if (abnormalValence != -1) {
var newAbnormalValence=this.getImplicitHigherValence$I$Z(atom, true);
if (abnormalValence != newAbnormalValence) {
var explicitAbnormalValence=this.getAtomAbnormalValence$I(atom);
if (explicitAbnormalValence == -1 || explicitAbnormalValence < abnormalValence ) this.setAtomAbnormalValence$I$I(atom, abnormalValence);
}}}}
if (hasValid2DCoords) this.setStereoBondsFromParity$();
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'calculateNeighbours',  function () {
this.mConnAtoms=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
this.mAllConnAtoms=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
this.mConnAtom=Clazz_array(Integer.TYPE, [this.mAllAtoms, null]);
this.mConnBond=Clazz_array(Integer.TYPE, [this.mAllAtoms, null]);
this.mConnBondOrder=Clazz_array(Integer.TYPE, [this.mAllAtoms, null]);
this.mPi=Clazz_array(Integer.TYPE, [this.mAtoms]);
var connCount=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
for (var bnd=0; bnd < this.mAllBonds; bnd++) {
++connCount[this.mBondAtom[0][bnd]];
++connCount[this.mBondAtom[1][bnd]];
}
for (var atom=0; atom < this.mAllAtoms; atom++) {
this.mConnAtom[atom]=Clazz_array(Integer.TYPE, [connCount[atom]]);
this.mConnBond[atom]=Clazz_array(Integer.TYPE, [connCount[atom]]);
this.mConnBondOrder[atom]=Clazz_array(Integer.TYPE, [connCount[atom]]);
}
var metalBondFound=false;
for (var bnd=0; bnd < this.mBonds; bnd++) {
var order=this.getBondOrder$I(bnd);
if (order == 0) {
metalBondFound=true;
continue;
}for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bnd];
var allConnAtoms=this.mAllConnAtoms[atom];
this.mConnBondOrder[atom][allConnAtoms]=order;
this.mConnAtom[atom][allConnAtoms]=this.mBondAtom[1 - i][bnd];
this.mConnBond[atom][allConnAtoms]=bnd;
++this.mAllConnAtoms[atom];
++this.mConnAtoms[atom];
if (atom < this.mAtoms) {
if (order > 1) this.mPi[atom]+=order - 1;
 else if (this.mBondType[bnd] == 8) this.mPi[atom]=1;
}}
}
for (var bnd=this.mBonds; bnd < this.mAllBonds; bnd++) {
var order=this.getBondOrder$I(bnd);
if (order == 0) {
metalBondFound=true;
continue;
}for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bnd];
var allConnAtoms=this.mAllConnAtoms[atom];
this.mConnBondOrder[atom][allConnAtoms]=order;
this.mConnAtom[atom][allConnAtoms]=this.mBondAtom[1 - i][bnd];
this.mConnBond[atom][allConnAtoms]=bnd;
++this.mAllConnAtoms[atom];
if (this.mBondAtom[1 - i][bnd] < this.mAtoms) ++this.mConnAtoms[atom];
}
}
if (metalBondFound) {
var allConnAtoms=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
for (var atom=0; atom < this.mAllAtoms; atom++) allConnAtoms[atom]=this.mAllConnAtoms[atom];

for (var bnd=0; bnd < this.mAllBonds; bnd++) {
var order=this.getBondOrder$I(bnd);
if (order == 0) {
for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bnd];
this.mConnBondOrder[atom][allConnAtoms[atom]]=order;
this.mConnAtom[atom][allConnAtoms[atom]]=this.mBondAtom[1 - i][bnd];
this.mConnBond[atom][allConnAtoms[atom]]=bnd;
++allConnAtoms[atom];
}
}}
}}, p$1);

Clazz_newMeth(C$, 'findRings$I',  function (mode) {
this.mRingSet=Clazz_new_($I$(5,1).c$$com_actelion_research_chem_ExtendedMolecule$I,[this, mode]);
var atomRingBondCount=Clazz_array(Integer.TYPE, [this.mAtoms]);
for (var bond=0; bond < this.mBonds; bond++) {
if (this.mRingSet.getBondRingSize$I(bond) != 0) {
this.mBondFlags[bond]|=64;
++atomRingBondCount[this.mBondAtom[0][bond]];
++atomRingBondCount[this.mBondAtom[1][bond]];
}}
for (var atom=0; atom < this.mAtoms; atom++) {
if (atomRingBondCount[atom] == 2) this.mAtomFlags[atom]|=1024;
 else if (atomRingBondCount[atom] == 3) this.mAtomFlags[atom]|=2048;
 else if (atomRingBondCount[atom] > 3) this.mAtomFlags[atom]|=3072;
}
for (var ringNo=0; ringNo < this.mRingSet.getSize$(); ringNo++) {
var ringAtom=this.mRingSet.getRingAtoms$I(ringNo);
var ringBond=this.mRingSet.getRingBonds$I(ringNo);
var ringAtoms=ringAtom.length;
for (var i=0; i < ringAtoms; i++) {
this.mAtomFlags[ringAtom[i]]|=8;
this.mBondFlags[ringBond[i]]|=128;
if (this.mBondType[ringBond[i]] == 386) this.mBondType[ringBond[i]]=2;
}
}
}, p$1);

Clazz_newMeth(C$, 'convertHydrogenToQueryFeatures',  function () {
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.getFreeValence$I(atom) <= 0 && !(this.mAtomCharge[atom] == 0 && (this.mAtomicNo[atom] == 5 || this.isNitrogenFamily$I(atom)  || this.isChalcogene$I(atom) ) ) ) this.mAtomQueryFeatures[atom]&=~(6144);
}
if (this.mProtectHydrogen) return false;
var deleteHydrogens=false;
for (var atom=0; atom < this.mAtoms; atom++) {
var explicitHydrogens=this.getExplicitHydrogens$I(atom);
if (explicitHydrogens > 0) {
if ((this.mAtomQueryFeatures[atom] & 2048) == 0) {
var queryFeatureHydrogens=(this.mAtomQueryFeatures[atom] & 1920) == (896) ? 3 : (this.mAtomQueryFeatures[atom] & 1920) == (384) ? 2 : (this.mAtomQueryFeatures[atom] & 128) == 128 ? 1 : 0;
var freeValence=this.getFreeValence$I(atom);
if (this.mAtomCharge[atom] == 0 && (this.mAtomQueryFeatures[atom] & 234881024) == 0  && this.mAtomicNo[atom] != 6 ) ++freeValence;
var queryFeatureShift=explicitHydrogens;
if (queryFeatureShift > 3 - queryFeatureHydrogens) queryFeatureShift=3 - queryFeatureHydrogens;
if (queryFeatureShift > freeValence + explicitHydrogens - queryFeatureHydrogens) queryFeatureShift=freeValence + explicitHydrogens - queryFeatureHydrogens;
if (queryFeatureShift > 0) {
var queryFeatures=(queryFeatureHydrogens == 0) ? 0 : (this.mAtomQueryFeatures[atom] & 1920) << queryFeatureShift;
queryFeatures|=(queryFeatureShift == 3 ? 7 : explicitHydrogens == 2 ? 3 : 1) << 7;
this.mAtomQueryFeatures[atom]&=~1920;
this.mAtomQueryFeatures[atom]|=(1920 & queryFeatures);
}}for (var i=this.mConnAtoms[atom]; i < this.mAllConnAtoms[atom]; i++) {
var connBond=this.mConnBond[atom][i];
if (this.mBondType[connBond] == 1) {
this.mAtomicNo[this.mConnAtom[atom][i]]=-1;
this.mBondType[connBond]=512;
deleteHydrogens=true;
}}
}}
if (deleteHydrogens) this.compressMolTable$();
return deleteHydrogens;
}, p$1);

Clazz_newMeth(C$, 'validateAtomQueryFeatures$',  function () {
if (!this.mIsFragment) return;
this.ensureHelperArrays$I(7);
for (var atom=0; atom < this.mAtoms; atom++) {
if (this.isRingAtom$I(atom)) {
if ((this.mAtomQueryFeatures[atom] & 120) == 8) this.mAtomQueryFeatures[atom]&=~8;
this.mAtomQueryFeaturesH[atom]&=~1;
}if (this.isAromaticAtom$I(atom)) this.mAtomQueryFeatures[atom]&=~6;
 else if ((this.mAtomQueryFeatures[atom] & 2) != 0) this.mAtomQueryFeatures[atom]&=~4;
if ((this.mAtomQueryFeatures[atom] & 29360128) != 0 || ((this.mAtomQueryFeaturesH[atom] & 127) != 0) && ((this.mAtomQueryFeatures[atom] & 1) == 0)  ) {
if ((this.mAtomQueryFeatures[atom] & 120) == 8) this.mAtomQueryFeatures[atom]&=~8;
}if (this.mAtomCharge[atom] != 0) this.mAtomQueryFeatures[atom]&=~234881024;
if (this.getOccupiedValence$I(atom) == this.getMaxValence$I(atom)) {
this.mAtomQueryFeatures[atom]&=~4063232;
this.mAtomQueryFeaturesH[atom]&=~3968;
this.mAtomQueryFeatures[atom]&=~1920;
this.mAtomQueryFeatures[atom]&=~114688;
}if ((this.mAtomQueryFeatures[atom] & 536870912) != 0 && this.mAtomMapNo[atom] != 0 ) this.removeMappingNo$I(this.mAtomMapNo[atom]);
}
});

Clazz_newMeth(C$, 'validateBondQueryFeatures$',  function () {
if (!this.mIsFragment) return;
this.ensureHelperArrays$I(7);
for (var bond=0; bond < this.mBonds; bond++) {
var bondTypeQFCount=Integer.bitCount$I(this.mBondQueryFeatures[bond] & (127));
if (!!(this.isDelocalizedBond$I(bond) & (this.mBondQueryFeatures[bond] & 8) != 0)) {
this.mBondQueryFeatures[bond]&=~8;
--bondTypeQFCount;
}if (bondTypeQFCount != 0) {
var bondType=this.mBondType[bond] & 127;
if (bondType == 1) this.mBondQueryFeatures[bond]|=1;
 else if (bondType == 2) this.mBondQueryFeatures[bond]|=2;
 else if (bondType == 4) this.mBondQueryFeatures[bond]|=4;
 else if (bondType == 32) this.mBondQueryFeatures[bond]|=32;
 else if (bondType == 64) this.mBondQueryFeatures[bond]|=64;
 else if (bondType == 16) this.mBondQueryFeatures[bond]|=16;
 else if (bondType == 8) this.mBondQueryFeatures[bond]|=8;
}}
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (stream) {
}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (stream) {
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.up_down=Clazz_array(Integer.TYPE, -2, [Clazz_array(Integer.TYPE, -1, [2, 1, 2, 1]), Clazz_array(Integer.TYPE, -1, [1, 2, 2, 1]), Clazz_array(Integer.TYPE, -1, [1, 1, 2, 2]), Clazz_array(Integer.TYPE, -1, [2, 1, 1, 2]), Clazz_array(Integer.TYPE, -1, [2, 2, 1, 1]), Clazz_array(Integer.TYPE, -1, [1, 2, 1, 2])]);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 11:49:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("com.actelion.research.chem"),p$1={},I$=[[0,'com.actelion.research.chem.Coordinates','java.util.Arrays','com.actelion.research.util.StringFunctions','com.actelion.research.gui.generic.GenericRectangle']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Molecule", null, null, 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['mIsFragment','mIsRacemate','mProtectHydrogen','mParitiesPreset'],'D',['mZoomRotationX','mZoomRotationY'],'I',['mMaxAtoms','mMaxBonds','mValidHelperArrays','mAllAtoms','mAllBonds','mChirality','mMoleculeColor'],'S',['mName'],'O',['mAtomicNo','int[]','+mAtomCharge','+mAtomMapNo','+mAtomMass','+mAtomFlags','+mAtomQueryFeatures','+mAtomQueryFeaturesH','mBondAtom','int[][]','mBondType','int[]','+mBondFlags','+mBondQueryFeatures','mCoordinates','com.actelion.research.chem.Coordinates[]','mAtomList','int[][]','mAtomCustomLabel','byte[][]','mOriginalAngle','double[]','+mOriginalDistance','mUserData','java.lang.Object']]
,['D',['sDefaultAVBL'],'O',['cAtomLabel','String[]','cRoundedMass','short[]','cDefaultAtomValences','byte[]','+cAminoAcidValences','cAtomValence','byte[][]','+cCommonOxidationState']]]

Clazz_newMeth(C$, 'getAtomicNoFromLabel$S',  function (atomLabel) {
return C$.getAtomicNoFromLabel$S$I(atomLabel, 321);
}, 1);

Clazz_newMeth(C$, 'getAtomicNoFromLabel$S$I',  function (atomLabel, allowedPseudoAtomGroups) {
if (((allowedPseudoAtomGroups & 256) != 0) && atomLabel.equals$O("?") ) return 0;
for (var i=1; i <= 128; i++) if (!atomLabel.equals$O("??") && atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[i]) ) return i;

if ((allowedPseudoAtomGroups & 2) != 0) for (var i=129; i <= 144; i++) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[i])) return i;

if ((allowedPseudoAtomGroups & 4) != 0) for (var i=146; i <= 148; i++) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[i])) return i;

if ((allowedPseudoAtomGroups & 1) != 0) for (var i=151; i <= 152; i++) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[i])) return i;

if ((allowedPseudoAtomGroups & 32) != 0) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[153])) return 153;
if ((allowedPseudoAtomGroups & 8) != 0) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[154])) return 154;
if ((allowedPseudoAtomGroups & 16) != 0) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[145])) return 145;
if ((allowedPseudoAtomGroups & 128) != 0) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[159])) return 159;
if ((allowedPseudoAtomGroups & 64) != 0) for (var i=171; i <= 190; i++) if (atomLabel.equalsIgnoreCase$S(C$.cAtomLabel[i])) return i;

return 0;
}, 1);

Clazz_newMeth(C$, 'getAllowedValences$I',  function (atomicNo) {
return (atomicNo >= 0) && (atomicNo < C$.cAtomValence.length) && (C$.cAtomValence[atomicNo] != null )   ? C$.cAtomValence[atomicNo] : (atomicNo >= 171 && atomicNo <= 190 ) ? C$.cAminoAcidValences : C$.cDefaultAtomValences;
}, 1);

Clazz_newMeth(C$, 'getAngle$D$D$D$D',  function (x1, y1, x2, y2) {
var angle;
var xdiff=x2 - x1;
var ydiff=y2 - y1;
if (ydiff != 0 ) {
angle=Math.atan(xdiff / ydiff);
if (ydiff < 0 ) {
if (xdiff < 0 ) angle-=3.141592653589793;
 else angle+=3.141592653589793;
}} else angle=(xdiff > 0.0 ) ? 1.5707963267948966 : -1.5707963267948966;
return angle;
}, 1);

Clazz_newMeth(C$, 'getAngleDif$D$D',  function (angle1, angle2) {
var angleDif=angle1 - angle2;
while (angleDif < -3.141592653589793 )angleDif+=6.283185307179586;

while (angleDif > 3.141592653589793 )angleDif-=6.283185307179586;

return angleDif;
}, 1);

Clazz_newMeth(C$, 'bondTypeToOrder$I',  function (bondType) {
var simpleType=bondType & 127;
return (simpleType == 1 || simpleType == 8 ) ? 1 : simpleType == 2 ? 2 : simpleType == 4 ? 3 : simpleType == 32 ? 4 : simpleType == 64 ? 5 : 0;
}, 1);

Clazz_newMeth(C$, 'bondOrderToType$I$Z',  function (bondOrder, useCrossBond) {
return bondOrder == 0 ? 16 : bondOrder == 1 ? 1 : bondOrder == 2 ? (useCrossBond ? 386 : 2) : bondOrder == 3 ? 4 : bondOrder == 4 ? 32 : 64;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.mMaxAtoms=this.mMaxBonds=256;
p$1.init.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (maxAtoms, maxBonds) {
;C$.$init$.apply(this);
this.mMaxAtoms=Math.max(1, maxAtoms);
this.mMaxBonds=Math.max(1, maxBonds);
p$1.init.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'init',  function () {
this.mValidHelperArrays=0;
this.mAtomicNo=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mAtomCharge=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mAtomMapNo=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mCoordinates=Clazz_array($I$(1), [this.mMaxAtoms]);
for (var i=0; i < this.mMaxAtoms; i++) this.mCoordinates[i]=Clazz_new_($I$(1,1));

this.mAtomMass=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mAtomFlags=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mAtomQueryFeatures=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mAtomQueryFeaturesH=Clazz_array(Integer.TYPE, [this.mMaxAtoms]);
this.mAtomList=null;
this.mAtomCustomLabel=null;
this.mBondAtom=Clazz_array(Integer.TYPE, [2, this.mMaxBonds]);
this.mBondType=Clazz_array(Integer.TYPE, [this.mMaxBonds]);
this.mBondFlags=Clazz_array(Integer.TYPE, [this.mMaxBonds]);
this.mBondQueryFeatures=Clazz_array(Integer.TYPE, [this.mMaxBonds]);
}, p$1);

Clazz_newMeth(C$, 'addAtom$D$D',  function (x, y) {
return this.addAtom$D$D$D(x, y, 0);
});

Clazz_newMeth(C$, 'addAtom$D$D$D',  function (x, y, z) {
var atom=this.addAtom$I(6);
this.mCoordinates[atom].set$D$D$D(x, y, z);
return atom;
});

Clazz_newMeth(C$, 'addAtom$S',  function (atomLabel) {
var atomicNo=C$.getAtomicNoFromLabel$S(atomLabel);
return (atomicNo == 0) ? -1 : this.addAtom$I(atomicNo);
});

Clazz_newMeth(C$, 'addAtom$I',  function (atomicNo) {
if (this.mAllAtoms >= this.mMaxAtoms) this.setMaxAtoms$I(this.mMaxAtoms * 2);
this.mAtomicNo[this.mAllAtoms]=0;
this.setAtomicNo$I$I(this.mAllAtoms, atomicNo);
this.mAtomCharge[this.mAllAtoms]=0;
this.mAtomFlags[this.mAllAtoms]=0;
this.mAtomQueryFeatures[this.mAllAtoms]=0;
this.mAtomMapNo[this.mAllAtoms]=0;
this.mCoordinates[this.mAllAtoms].set$D$D$D(0, 0, 0);
if (this.mAtomList != null ) this.mAtomList[this.mAllAtoms]=null;
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel[this.mAllAtoms]=null;
this.mValidHelperArrays=0;
return this.mAllAtoms++;
});

Clazz_newMeth(C$, 'suggestBondType$I$I',  function (atom1, atom2) {
return this.isMetalAtom$I(atom1) || this.isMetalAtom$I(atom2)  ? 16 : 1;
});

Clazz_newMeth(C$, 'addBond$I$I',  function (atom1, atom2) {
return this.addBond$I$I$I(atom1, atom2, this.suggestBondType$I$I(atom1, atom2));
});

Clazz_newMeth(C$, 'addBond$I$I$I',  function (atom1, atom2, type) {
if (atom1 == atom2) return -1;
for (var bnd=0; bnd < this.mAllBonds; bnd++) {
if (this.mBondAtom[0][bnd] == atom1 && this.mBondAtom[1][bnd] == atom2  || this.mBondAtom[0][bnd] == atom2 && this.mBondAtom[1][bnd] == atom1  ) {
if (this.mBondType[bnd] < type) this.mBondType[bnd]=type;
return bnd;
}}
if (this.mAllBonds >= this.mMaxBonds) this.setMaxBonds$I(this.mMaxBonds * 2);
this.mBondAtom[0][this.mAllBonds]=atom1;
this.mBondAtom[1][this.mAllBonds]=atom2;
this.mBondType[this.mAllBonds]=type;
this.mBondFlags[this.mAllBonds]=0;
this.mBondQueryFeatures[this.mAllBonds]=0;
this.mValidHelperArrays=0;
return this.mAllBonds++;
});

Clazz_newMeth(C$, 'addOrChangeAtom$D$D$I$I$I$I$S',  function (x, y, atomicNo, mass, abnormalValence, radical, customLabel) {
var atom=this.findAtom$D$D(x, y);
if (atom == -1) {
if (this.mAllAtoms >= this.mMaxAtoms) this.setMaxAtoms$I(this.mMaxAtoms * 2);
atom=this.addAtom$I(atomicNo);
this.mCoordinates[atom].set$D$D$D(x, y, 0);
this.mAtomMass[atom]=mass;
this.setAtomAbnormalValence$I$I(atom, abnormalValence);
this.setAtomRadical$I$I(atom, radical);
this.setAtomCustomLabel$I$S(atom, customLabel);
return true;
}var changed=this.changeAtom$I$I$I$I$I(atom, atomicNo, mass, abnormalValence, radical);
this.setAtomCustomLabel$I$S(atom, customLabel);
return changed;
});

Clazz_newMeth(C$, 'addOrChangeBond$I$I$I',  function (atm1, atm2, type) {
for (var bnd=0; bnd < this.mAllBonds; bnd++) {
if (this.mBondAtom[0][bnd] == atm1 && this.mBondAtom[1][bnd] == atm2  || this.mBondAtom[0][bnd] == atm2 && this.mBondAtom[1][bnd] == atm1  ) {
this.changeBond$I$I(bnd, type);
this.mValidHelperArrays=0;
return bnd;
}}
if (this.mAllBonds >= this.mMaxBonds) this.setMaxBonds$I(this.mMaxBonds * 2);
this.mBondAtom[0][this.mAllBonds]=atm1;
this.mBondAtom[1][this.mAllBonds]=atm2;
this.mBondType[this.mAllBonds]=type;
this.mBondFlags[this.mAllBonds]=0;
this.mBondQueryFeatures[this.mAllBonds]=0;
this.mValidHelperArrays=0;
return this.mAllBonds++;
});

Clazz_newMeth(C$, 'addRing$D$D$I$Z$D',  function (x, y, ringSize, aromatic, bondLength) {
while (this.mAllAtoms + ringSize > this.mMaxAtoms)this.setMaxAtoms$I(this.mMaxAtoms * 2);

while (this.mAllBonds + ringSize > this.mMaxBonds)this.setMaxBonds$I(this.mMaxBonds * 2);

var atom=this.findAtom$D$D(x, y);
if (atom != -1) return this.addRingToAtom$I$I$Z$D(atom, ringSize, aromatic, bondLength);
var bond=this.findBond$D$D(x, y);
if (bond != -1) return this.addRingToBond$I$I$Z$D(bond, ringSize, aromatic, bondLength);
atom=this.addAtom$D$D(x, y);
var cornerAngle=3.141592653589793 * (ringSize - 2) / ringSize;
p$1.polygon$I$I$I$Z$D$D$D.apply(this, [atom, ringSize, atom, aromatic, 0, 3.141592653589793 - cornerAngle, bondLength]);
this.mValidHelperArrays=0;
return true;
});

Clazz_newMeth(C$, 'addRingToAtom$I$I$Z$D',  function (atom, ringSize, aromatic, bondLength) {
if ((aromatic && this.getOccupiedValence$I(atom) > 1 ) || (!aromatic && this.getOccupiedValence$I(atom) > 2 ) ) return false;
var angles=0;
var angle=Clazz_array(Double.TYPE, [4]);
for (var i=0; i < this.mAllBonds; i++) {
for (var j=0; j < 2; j++) {
if (this.mBondAtom[j][i] == atom) {
if (angles == 2) {
angles=3;
break;
}angle[angles++]=this.getBondAngle$I$I(atom, this.mBondAtom[1 - j][i]);
}}
if (angles == 3) break;
}
if (angles == 3) return false;
var newAngle=(angles == 1) ? angle[0] + 3.141592653589793 : (Math.abs(angle[0] - angle[1]) > 3.141592653589793 ) ? (angle[0] + angle[1]) / 2 : (angle[0] + angle[1]) / 2 + 3.141592653589793;
var cornerAngle=(3.141592653589793 * (ringSize - 2)) / ringSize;
p$1.polygon$I$I$I$Z$D$D$D.apply(this, [atom, ringSize, atom, aromatic, newAngle - cornerAngle / 2, 3.141592653589793 - cornerAngle, bondLength]);
this.mValidHelperArrays=0;
return true;
});

Clazz_newMeth(C$, 'addRingToBond$I$I$Z$D',  function (bond, ringSize, aromatic, bondLength) {
var bondAtom=Clazz_array(Integer.TYPE, [2]);
var bondAngle=Clazz_array(Double.TYPE, [2]);
bondAtom[0]=this.mBondAtom[0][bond];
bondAtom[1]=this.mBondAtom[1][bond];
if (this.getOccupiedValence$I(bondAtom[0]) > 3) return false;
if (this.getOccupiedValence$I(bondAtom[1]) > 3) return false;
var angles=0;
var angle=Clazz_array(Double.TYPE, [4]);
for (var i=0; i < this.mAllBonds; i++) {
if (i == bond) continue;
for (var j=0; j < 2; j++) {
for (var k=0; k < 2; k++) {
if (this.mBondAtom[j][i] == bondAtom[k]) {
if (angles == 4) {
angles=5;
break;
}angle[angles++]=this.getBondAngle$I$I(bondAtom[k], this.mBondAtom[1 - j][i]);
}}
if (angles == 5) break;
}
if (angles == 5) break;
}
if (angles == 5) return false;
bondAngle[0]=this.getBondAngle$I$I(bondAtom[0], bondAtom[1]);
var atomNo;
if (bondAngle[0] < 0 ) {
bondAngle[1]=bondAngle[0] + 3.141592653589793;
atomNo=0;
} else {
bondAngle[1]=bondAngle[0];
bondAngle[0]=bondAngle[1] - 3.141592653589793;
atomNo=1;
}var side=0;
for (var i=0; i < angles; i++) {
if ((angle[i] > bondAngle[0] ) && (angle[i] < bondAngle[1] ) ) --side;
 else ++side;
}
atomNo=(side > 0) ? 1 - atomNo : atomNo;
var cornerAngle=(3.141592653589793 * (ringSize - 2)) / ringSize;
p$1.polygon$I$I$I$Z$D$D$D.apply(this, [bondAtom[atomNo], ringSize - 1, bondAtom[1 - atomNo], aromatic, bondAngle[(side > 0) ? 0 : 1] + 3.141592653589793 - cornerAngle, 3.141592653589793 - cornerAngle, bondLength]);
this.mValidHelperArrays=0;
return true;
});

Clazz_newMeth(C$, 'changeAtom$I$I$I$I$I',  function (atom, atomicNo, mass, abnormalValence, radical) {
if ((atomicNo == 1 || atomicNo == 151  || atomicNo == 152 ) && this.getOccupiedValence$I(atom) > 1 ) return false;
this.mAtomQueryFeatures[atom]&=~1;
if (this.mAtomList != null ) this.mAtomList[atom]=null;
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel[atom]=null;
if (atomicNo == this.mAtomicNo[atom] && mass == this.mAtomMass[atom]  && abnormalValence == this.getAtomAbnormalValence$I(atom)  && radical == this.getAtomRadical$I(atom) ) return false;
if (atomicNo == 151 || atomicNo == 152 ) {
mass=atomicNo - 149;
atomicNo=1;
}this.mAtomFlags[atom]&=(960);
this.mAtomicNo[atom]=atomicNo;
this.mAtomMass[atom]=mass;
this.mAtomCharge[atom]=0;
this.mAtomQueryFeatures[atom]=0;
this.setAtomAbnormalValence$I$I(atom, abnormalValence);
this.setAtomRadical$I$I(atom, radical);
this.removeMappingNo$I(this.mAtomMapNo[atom]);
this.mValidHelperArrays=0;
return true;
});

Clazz_newMeth(C$, 'changeAtomCharge$D$D$Z',  function (x, y, positive) {
var atom=this.findAtom$D$D(x, y);
return atom != -1 && this.changeAtomCharge$I$Z(atom, positive) ;
});

Clazz_newMeth(C$, 'changeAtomCharge$I$Z',  function (atom, positive) {
if (positive) {
if (this.mAtomCharge[atom] > 8) return false;
++this.mAtomCharge[atom];
} else {
if (this.mAtomCharge[atom] < -8) return false;
--this.mAtomCharge[atom];
}this.mValidHelperArrays=0;
return true;
});

Clazz_newMeth(C$, 'changeBond$I$I',  function (bnd, type) {
var bondWasChanged=false;
var oldType=this.mBondType[bnd];
if (type == 511) {
bondWasChanged=p$1.incrementBondOrder$I.apply(this, [bnd]);
} else if (this.validateBondType$I$I(bnd, type)) {
if (type == 257 || type == 129 ) {
var bondAtAtom1Qualifies=p$1.qualifiesAsStereoBond$I$I.apply(this, [bnd, this.mBondAtom[0][bnd]]);
var bondAtAtom2Qualifies=p$1.qualifiesAsStereoBond$I$I.apply(this, [bnd, this.mBondAtom[1][bnd]]);
if (type == oldType) {
if (bondAtAtom1Qualifies == bondAtAtom2Qualifies  || bondAtAtom2Qualifies ) {
var temp=this.mBondAtom[0][bnd];
this.mBondAtom[0][bnd]=this.mBondAtom[1][bnd];
this.mBondAtom[1][bnd]=temp;
bondWasChanged=true;
}} else {
if (!bondAtAtom1Qualifies && bondAtAtom2Qualifies ) {
var temp=this.mBondAtom[0][bnd];
this.mBondAtom[0][bnd]=this.mBondAtom[1][bnd];
this.mBondAtom[1][bnd]=temp;
}this.mBondType[bnd]=type;
bondWasChanged=true;
}} else {
this.mBondType[bnd]=type;
bondWasChanged=true;
}}if (bondWasChanged) {
this.mValidHelperArrays=(oldType & 127) == (type & 127) ? this.mValidHelperArrays & 7 : 0;
this.mBondQueryFeatures[bnd]=0;
}return bondWasChanged;
});

Clazz_newMeth(C$, 'qualifiesAsStereoBond$I$I',  function (bond, atom) {
if (this.getBondOrder$I(bond) != 1) return false;
if ((this.mAtomFlags[atom] & 3) != 0) return true;
for (var i=0; i < this.mAllBonds; i++) if (i != bond && this.mBondType[i] == 2  && ((this.mBondAtom[0][i] == atom && (this.mAtomFlags[this.mBondAtom[1][i]] & 3) != 0 ) || (this.mBondAtom[1][i] == atom && (this.mAtomFlags[this.mBondAtom[0][i]] & 3) != 0 ) ) ) return true;

for (var i=0; i < this.mAllBonds; i++) if (i != bond && this.mBondType[i] == 1  && (this.mBondAtom[0][i] == atom || this.mBondAtom[1][i] == atom )  && (this.mBondFlags[i] & 3) != 0 ) return true;

return false;
}, p$1);

Clazz_newMeth(C$, 'addMolecule$com_actelion_research_chem_Molecule',  function (mol) {
return this.addMolecule$com_actelion_research_chem_Molecule$I$I(mol, mol.mAllAtoms, mol.mAllBonds);
});

Clazz_newMeth(C$, 'addMolecule$com_actelion_research_chem_Molecule$I$I',  function (mol, atoms, bonds) {
return this.addMolecule$com_actelion_research_chem_Molecule$I$I$I$I$Z(mol, 0, atoms, 0, bonds, true);
});

Clazz_newMeth(C$, 'addMolecule$com_actelion_research_chem_Molecule$I$I$Z',  function (mol, atoms, bonds, includeExcludeGroups) {
return this.addMolecule$com_actelion_research_chem_Molecule$I$I$I$I$Z(mol, 0, atoms, 0, bonds, includeExcludeGroups);
});

Clazz_newMeth(C$, 'addMolecule$com_actelion_research_chem_Molecule$I$I$I$I$Z',  function (mol, atom1, atom2, bond1, bond2, includeExcludeGroups) {
this.mIsFragment=!!(this.mIsFragment|(mol.mIsFragment));
var atomMap=Clazz_array(Integer.TYPE, [mol.mAllAtoms]);
var esrGroupCountAND=this.renumberESRGroups$I(1);
var esrGroupCountOR=this.renumberESRGroups$I(2);
for (var atom=atom1; atom < atom2; atom++) if (includeExcludeGroups || (mol.getAtomQueryFeatures$I(atom) & 536870912) == 0 ) atomMap[atom]=mol.copyAtom$com_actelion_research_chem_Molecule$I$I$I(this, atom, esrGroupCountAND, esrGroupCountOR);

for (var bond=bond1; bond < bond2; bond++) if (includeExcludeGroups || ((mol.getAtomQueryFeatures$I(mol.getBondAtom$I$I(0, bond)) & 536870912) == 0 && (mol.getAtomQueryFeatures$I(mol.getBondAtom$I$I(1, bond)) & 536870912) == 0 ) ) mol.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(this, bond, esrGroupCountAND, esrGroupCountOR, atomMap, false);

this.mIsRacemate=(this.mIsRacemate && mol.mIsRacemate );
this.mChirality=0;
this.mValidHelperArrays=0;
return atomMap;
});

Clazz_newMeth(C$, 'addSubstituent$com_actelion_research_chem_Molecule$I',  function (substituent, rootAtom) {
var atomMap=Clazz_array(Integer.TYPE, [substituent.mAllAtoms]);
var esrGroupCountAND=this.renumberESRGroups$I(1);
var esrGroupCountOR=this.renumberESRGroups$I(2);
for (var atom=0; atom < substituent.mAllAtoms; atom++) {
if (substituent.getAtomicNo$I(atom) != 0 || substituent.getAtomCustomLabel$I(atom) != null  ) {
atomMap[atom]=substituent.copyAtom$com_actelion_research_chem_Molecule$I$I$I(this, atom, esrGroupCountAND, esrGroupCountOR);
} else {
atomMap[atom]=rootAtom;
if ((substituent.mValidHelperArrays & 8) != 0) {
for (var bond=0; bond < substituent.mAllBonds; bond++) {
for (var i=0; i < 2; i++) {
if (substituent.getBondAtom$I$I(i, bond) == atom) {
var neighbor=substituent.getBondAtom$I$I(1 - i, bond);
var parity=substituent.getAtomParity$I(neighbor);
var invert=false;
if (parity == 1 || parity == 2 ) {
for (var b=0; b < substituent.mAllBonds; b++) {
if (b != bond) {
for (var j=0; j < 2; j++) {
if (substituent.getBondAtom$I$I(j, b) == neighbor && substituent.getBondAtom$I$I(1 - j, b) < atom ) {
invert=!invert;
}}
}}
}if (invert) substituent.setAtomParity$I$I$Z(neighbor, parity == 1 ? 2 : 1, substituent.isAtomParityPseudo$I(neighbor));
}}
}
}}}
for (var bond=0; bond < substituent.mAllBonds; bond++) {
substituent.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(this, bond, esrGroupCountAND, esrGroupCountOR, atomMap, false);
}
this.mIsRacemate=(this.mIsRacemate && substituent.mIsRacemate );
this.mChirality=0;
this.mValidHelperArrays=0;
return atomMap;
});

Clazz_newMeth(C$, 'addSubstituent$com_actelion_research_chem_StereoMolecule$I$D$I',  function (substituent, rootAtom, angle, bondType) {
var avbl=this.getAverageBondLength$();
var substituentAVBL=substituent.getAverageBondLength$D(avbl);
if (substituentAVBL != avbl ) substituent.scaleCoords$D(avbl / substituentAVBL);
var attachmentPoint=-1;
var firstAtom=-1;
for (var bond=0; bond < substituent.getAllBonds$() && attachmentPoint == -1 ; bond++) {
for (var i=0; i < 2; i++) {
var atom=substituent.getBondAtom$I$I(i, bond);
if (substituent.getAtomicNo$I(atom) == 0 && substituent.getAtomCustomLabel$I(atom) == null  ) {
attachmentPoint=atom;
firstAtom=substituent.getBondAtom$I$I(1 - i, bond);
break;
}}
}
if (!Double.isNaN$D(angle)) {
var rotation=C$.getAngleDif$D$D(substituent.getBondAngle$I$I(attachmentPoint, firstAtom), angle);
substituent.rotateCoords$D$D$D(substituent.getAtomX$I(firstAtom), substituent.getAtomY$I(firstAtom), rotation);
}substituent.translateCoords$D$D(this.getAtomX$I(rootAtom) - substituent.getAtomX$I(attachmentPoint), this.getAtomY$I(rootAtom) - substituent.getAtomY$I(attachmentPoint));
this.addSubstituent$com_actelion_research_chem_Molecule$I(substituent, rootAtom);
if (bondType != -1 && (bondType & 384) != 0 ) {
for (var bond=this.mAllBonds - substituent.getAllBonds$(); bond < this.mAllBonds; bond++) {
if (this.mBondAtom[0][bond] == rootAtom || this.mBondAtom[1][bond] == rootAtom ) {
this.mBondType[bond]=bondType;
if (this.mBondAtom[1][bond] == rootAtom) {
this.mBondAtom[1][bond]=this.mBondAtom[0][bond];
this.mBondAtom[0][bond]=rootAtom;
break;
}}}
}});

Clazz_newMeth(C$, 'copyMolecule$com_actelion_research_chem_Molecule',  function (destMol) {
destMol.mAtomList=null;
destMol.mAtomCustomLabel=null;
destMol.mParitiesPreset=this.mParitiesPreset;
destMol.mIsFragment=this.mIsFragment;
destMol.mAllAtoms=0;
for (var atom=0; atom < this.mAllAtoms; atom++) this.copyAtom$com_actelion_research_chem_Molecule$I$I$I(destMol, atom, 0, 0);

destMol.mAllBonds=0;
for (var bnd=0; bnd < this.mAllBonds; bnd++) this.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(destMol, bnd, 0, 0, null, false);

this.copyMoleculeProperties$com_actelion_research_chem_Molecule(destMol);
});

Clazz_newMeth(C$, 'copyAtom$com_actelion_research_chem_Molecule$I$I$I',  function (destMol, sourceAtom, esrGroupOffsetAND, esrGroupOffsetOR) {
var destAtom=destMol.mAllAtoms;
if (destAtom >= destMol.mMaxAtoms) destMol.setMaxAtoms$I(destMol.mMaxAtoms * 2);
var esrType=this.getAtomESRType$I(sourceAtom);
var esrGroup=-1;
if (esrType == 1) {
if (esrGroupOffsetAND == -1) esrGroup=destMol.renumberESRGroups$I(esrType);
 else esrGroup=Math.min(31, esrGroupOffsetAND + this.getAtomESRGroup$I(sourceAtom));
} else if (esrType == 2) {
if (esrGroupOffsetOR == -1) esrGroup=destMol.renumberESRGroups$I(esrType);
 else esrGroup=Math.min(31, esrGroupOffsetOR + this.getAtomESRGroup$I(sourceAtom));
}destMol.mAtomicNo[destAtom]=this.mAtomicNo[sourceAtom];
destMol.mAtomCharge[destAtom]=this.mAtomCharge[sourceAtom];
destMol.mAtomMass[destAtom]=this.mAtomMass[sourceAtom];
destMol.mAtomFlags[destAtom]=this.mAtomFlags[sourceAtom];
destMol.mAtomQueryFeatures[destAtom]=destMol.mIsFragment ? this.mAtomQueryFeatures[sourceAtom] : 0;
destMol.mCoordinates[destAtom].set$com_actelion_research_chem_Coordinates(this.mCoordinates[sourceAtom]);
destMol.mAtomMapNo[destAtom]=this.mAtomMapNo[sourceAtom];
if (destMol.mAtomList != null ) destMol.mAtomList[destAtom]=null;
if (this.mAtomList != null  && this.mAtomList[sourceAtom] != null   && destMol.mIsFragment ) {
if (destMol.mAtomList == null ) destMol.mAtomList=Clazz_array(Integer.TYPE, [destMol.mAtomicNo.length, null]);
destMol.mAtomList[destAtom]=$I$(2).copyOf$IA$I(this.mAtomList[sourceAtom], this.mAtomList[sourceAtom].length);
}if (destMol.mAtomCustomLabel != null ) destMol.mAtomCustomLabel[destAtom]=null;
if (this.mAtomCustomLabel != null  && this.mAtomCustomLabel[sourceAtom] != null  ) {
if (destMol.mAtomCustomLabel == null ) destMol.mAtomCustomLabel=Clazz_array(Byte.TYPE, [destMol.mAtomicNo.length, null]);
destMol.mAtomCustomLabel[destAtom]=$I$(2).copyOf$BA$I(this.mAtomCustomLabel[sourceAtom], this.mAtomCustomLabel[sourceAtom].length);
}if (esrGroup != -1) {
destMol.mAtomFlags[destAtom]&=~32505856;
destMol.mAtomFlags[destAtom]|=(esrGroup << 20);
}++destMol.mAllAtoms;
destMol.mValidHelperArrays=0;
return destAtom;
});

Clazz_newMeth(C$, 'copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z',  function (destMol, sourceBond, esrGroupOffsetAND, esrGroupOffsetOR, atomMap, useBondTypeDelocalized) {
return this.copyBond$com_actelion_research_chem_Molecule$I$I$I$I$I$Z(destMol, sourceBond, esrGroupOffsetAND, esrGroupOffsetOR, (atomMap == null ) ? this.mBondAtom[0][sourceBond] : atomMap[this.mBondAtom[0][sourceBond]], (atomMap == null ) ? this.mBondAtom[1][sourceBond] : atomMap[this.mBondAtom[1][sourceBond]], useBondTypeDelocalized);
});

Clazz_newMeth(C$, 'copyBond$com_actelion_research_chem_Molecule$I$I$I$I$I$Z',  function (destMol, sourceBond, esrGroupOffsetAND, esrGroupOffsetOR, destAtom1, destAtom2, useBondTypeDelocalized) {
var destBond=destMol.mAllBonds;
if (destBond >= destMol.mMaxBonds) destMol.setMaxBonds$I(destMol.mMaxBonds * 2);
var esrType=this.getBondESRType$I(sourceBond);
var esrGroup=-1;
if (esrType == 1) {
if (esrGroupOffsetAND == -1) esrGroup=destMol.renumberESRGroups$I(esrType);
 else esrGroup=Math.min(32, esrGroupOffsetAND + this.getBondESRGroup$I(sourceBond));
}if (esrType == 2) {
if (esrGroupOffsetOR == -1) esrGroup=destMol.renumberESRGroups$I(esrType);
 else esrGroup=Math.min(32, esrGroupOffsetOR + this.getBondESRGroup$I(sourceBond));
}destMol.mBondAtom[0][destBond]=destAtom1;
destMol.mBondAtom[1][destBond]=destAtom2;
var bondType=(useBondTypeDelocalized && this.isDelocalizedBond$I(sourceBond) ) ? 8 : this.mBondType[sourceBond];
destMol.mBondType[destBond]=bondType;
destMol.mBondFlags[destBond]=this.mBondFlags[sourceBond];
destMol.mBondQueryFeatures[destBond]=destMol.mIsFragment ? this.mBondQueryFeatures[sourceBond] : 0;
if (esrGroup != -1) {
destMol.mBondFlags[destBond]&=~31744;
destMol.mBondFlags[destBond]|=(esrGroup << 10);
}++destMol.mAllBonds;
destMol.mValidHelperArrays=0;
return destBond;
});

Clazz_newMeth(C$, 'copyMoleculeProperties$com_actelion_research_chem_Molecule',  function (destMol) {
destMol.mIsFragment=this.mIsFragment;
destMol.mIsRacemate=this.mIsRacemate;
destMol.mProtectHydrogen=this.mProtectHydrogen;
destMol.mChirality=this.mChirality;
destMol.mName=this.mName;
destMol.mValidHelperArrays=(this.mValidHelperArrays & (24));
});

Clazz_newMeth(C$, 'invalidateHelperArrays$I',  function (helperBits) {
this.mValidHelperArrays&=~helperBits;
});

Clazz_newMeth(C$, 'renumberESRGroups$I',  function (type) {
if (type == 0) return 0;
var groupUsed=null;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.getAtomESRType$I(atom) == type) {
if (groupUsed == null ) groupUsed=Clazz_array(Boolean.TYPE, [32]);
groupUsed[this.getAtomESRGroup$I(atom)]=true;
}}
for (var bond=0; bond < this.mAllBonds; bond++) {
if (this.getBondESRType$I(bond) == type) {
if (groupUsed == null ) groupUsed=Clazz_array(Boolean.TYPE, [32]);
groupUsed[this.getBondESRGroup$I(bond)]=true;
}}
var newIndex=0;
if (groupUsed != null ) {
var newGroup=Clazz_array(Integer.TYPE, [32]);
for (var i=0; i < 32; i++) if (groupUsed[i]) newGroup[i]=newIndex++;

for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.getAtomESRType$I(atom) == type) {
var group=newGroup[this.getAtomESRGroup$I(atom)];
this.mAtomFlags[atom]&=~32505856;
this.mAtomFlags[atom]|=(group << 20);
}}
for (var bond=0; bond < this.mAllBonds; bond++) {
if (this.getBondESRType$I(bond) == type) {
var group=newGroup[this.getBondESRGroup$I(bond)];
this.mBondFlags[bond]&=~31744;
this.mBondFlags[bond]|=(group << 10);
}}
}return newIndex;
});

Clazz_newMeth(C$, 'swapAtoms$I$I',  function (atom1, atom2) {
var tempInt=this.mAtomicNo[atom1];
this.mAtomicNo[atom1]=this.mAtomicNo[atom2];
this.mAtomicNo[atom2]=tempInt;
tempInt=this.mAtomCharge[atom1];
this.mAtomCharge[atom1]=this.mAtomCharge[atom2];
this.mAtomCharge[atom2]=tempInt;
tempInt=this.mAtomMass[atom1];
this.mAtomMass[atom1]=this.mAtomMass[atom2];
this.mAtomMass[atom2]=tempInt;
tempInt=this.mAtomFlags[atom1];
this.mAtomFlags[atom1]=this.mAtomFlags[atom2];
this.mAtomFlags[atom2]=tempInt;
tempInt=this.mAtomQueryFeatures[atom1];
this.mAtomQueryFeatures[atom1]=this.mAtomQueryFeatures[atom2];
this.mAtomQueryFeatures[atom2]=tempInt;
tempInt=this.mAtomQueryFeaturesH[atom1];
this.mAtomQueryFeaturesH[atom1]=this.mAtomQueryFeaturesH[atom2];
this.mAtomQueryFeaturesH[atom2]=tempInt;
tempInt=this.mAtomMapNo[atom1];
this.mAtomMapNo[atom1]=this.mAtomMapNo[atom2];
this.mAtomMapNo[atom2]=tempInt;
var tempCoords=this.mCoordinates[atom1];
this.mCoordinates[atom1]=this.mCoordinates[atom2];
this.mCoordinates[atom2]=tempCoords;
if (this.mAtomList != null ) {
var tempList=this.mAtomList[atom1];
this.mAtomList[atom1]=this.mAtomList[atom2];
this.mAtomList[atom2]=tempList;
}if (this.mAtomCustomLabel != null ) {
var tempList=this.mAtomCustomLabel[atom1];
this.mAtomCustomLabel[atom1]=this.mAtomCustomLabel[atom2];
this.mAtomCustomLabel[atom2]=tempList;
}for (var bond=0; bond < this.mAllBonds; bond++) {
for (var i=0; i < 2; i++) {
if (this.mBondAtom[i][bond] == atom1) this.mBondAtom[i][bond]=atom2;
 else if (this.mBondAtom[i][bond] == atom2) this.mBondAtom[i][bond]=atom1;
}
}
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'swapBonds$I$I',  function (bond1, bond2) {
var temp=this.mBondAtom[0][bond1];
this.mBondAtom[0][bond1]=this.mBondAtom[0][bond2];
this.mBondAtom[0][bond2]=temp;
temp=this.mBondAtom[1][bond1];
this.mBondAtom[1][bond1]=this.mBondAtom[1][bond2];
this.mBondAtom[1][bond2]=temp;
temp=this.mBondType[bond1];
this.mBondType[bond1]=this.mBondType[bond2];
this.mBondType[bond2]=temp;
temp=this.mBondFlags[bond1];
this.mBondFlags[bond1]=this.mBondFlags[bond2];
this.mBondFlags[bond2]=temp;
temp=this.mBondQueryFeatures[bond1];
this.mBondQueryFeatures[bond1]=this.mBondQueryFeatures[bond2];
this.mBondQueryFeatures[bond2]=temp;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'deleteAtom$I',  function (atom) {
for (var bnd=0; bnd < this.mAllBonds; bnd++) for (var i=0; i < 2; i++) if (this.mBondAtom[i][bnd] == atom) this.mBondType[bnd]=512;


this.removeMappingNo$I(this.mAtomMapNo[atom]);
this.mAtomicNo[atom]=-1;
if (this.mAtomList != null ) this.mAtomList[atom]=null;
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel[atom]=null;
this.compressMolTable$();
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'deleteAtomOrBond$D$D',  function (x, y) {
var atom=this.findAtom$D$D(x, y);
if (atom != -1) {
if ((this.mAtomFlags[atom] & 512) != 0) this.deleteSelectedAtoms$();
 else this.deleteAtom$I(atom);
this.mValidHelperArrays=0;
return true;
}var bnd=this.findBond$D$D(x, y);
if (bnd != -1) {
if (((this.mAtomFlags[this.mBondAtom[0][bnd]] & this.mAtomFlags[this.mBondAtom[1][bnd]]) & 512) != 0) this.deleteSelectedAtoms$();
 else this.deleteBondAndSurrounding$I(bnd);
this.mValidHelperArrays=0;
return true;
}return false;
});

Clazz_newMeth(C$, 'deleteBond$I',  function (bond) {
this.mBondType[bond]=512;
this.compressMolTable$();
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'deleteBondAndSurrounding$I',  function (bond) {
for (var i=0; i < 2; i++) {
var bonds=0;
for (var j=0; j < this.mAllBonds; j++) {
if (j == bond) continue;
if ((this.mBondAtom[0][j] == this.mBondAtom[i][bond]) || (this.mBondAtom[1][j] == this.mBondAtom[i][bond]) ) ++bonds;
}
if (bonds == 0) {
this.removeMappingNo$I(this.mAtomMapNo[this.mBondAtom[i][bond]]);
this.mAtomicNo[this.mBondAtom[i][bond]]=-1;
}}
this.mBondType[bond]=512;
this.compressMolTable$();
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'deleteAtoms$ZA',  function (deleteAtom) {
var found=false;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (deleteAtom[atom]) {
this.markAtomForDeletion$I(atom);
found=true;
}}
if (!found) return null;
return this.deleteMarkedAtomsAndBonds$();
});

Clazz_newMeth(C$, 'deleteAtoms$IA',  function (atomList) {
if (atomList.length == 0) return null;
for (var atom, $atom = 0, $$atom = atomList; $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) this.markAtomForDeletion$I(atom);

return this.deleteMarkedAtomsAndBonds$();
});

Clazz_newMeth(C$, 'getDeleteAtomsBondMap$ZA',  function (deleteAtom) {
var deleteBond=Clazz_array(Boolean.TYPE, [this.mAllBonds]);
for (var bond=0; bond < this.mAllBonds; bond++) if (deleteAtom[this.mBondAtom[0][bond]] || deleteAtom[this.mBondAtom[1][bond]] ) deleteBond[bond]=true;

var bondDest=0;
var bondMap=Clazz_array(Integer.TYPE, [this.mAllBonds]);
for (var bnd=0; bnd < this.mAllBonds; bnd++) bondMap[bnd]=deleteBond[bnd] ? -1 : bondDest++;

return bondMap;
});

Clazz_newMeth(C$, 'getDeleteAtomsBondMap$IA',  function (atomList) {
var deleteAtom=Clazz_array(Boolean.TYPE, [this.mAllAtoms]);
for (var atom, $atom = 0, $$atom = atomList; $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) deleteAtom[atom]=true;

return this.getDeleteAtomsBondMap$ZA(deleteAtom);
});

Clazz_newMeth(C$, 'deleteSelectedAtoms$',  function () {
var found=false;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if ((this.mAtomFlags[atom] & 512) != 0) {
this.markAtomForDeletion$I(atom);
found=true;
}}
return found && this.deleteMarkedAtomsAndBonds$() != null  ;
});

Clazz_newMeth(C$, 'markAtomForDeletion$I',  function (atom) {
this.mAtomicNo[atom]=-1;
});

Clazz_newMeth(C$, 'markBondForDeletion$I',  function (bond) {
this.mBondType[bond]=512;
});

Clazz_newMeth(C$, 'isAtomMarkedForDeletion$I',  function (atom) {
return (this.mAtomicNo[atom] == -1);
});

Clazz_newMeth(C$, 'isBondMarkedForDeletion$I',  function (bond) {
return (this.mBondType[bond] == 512);
});

Clazz_newMeth(C$, 'deleteMarkedAtomsAndBonds$',  function () {
var found=false;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.mAtomicNo[atom] == -1) {
found=true;
this.removeMappingNo$I(this.mAtomMapNo[atom]);
}}
for (var bond=0; bond < this.mAllBonds; bond++) {
if (this.mBondType[bond] == 512) {
found=true;
} else if (this.mAtomicNo[this.mBondAtom[0][bond]] == -1 || this.mAtomicNo[this.mBondAtom[1][bond]] == -1 ) {
this.mBondType[bond]=512;
found=true;
}}
if (found) {
this.mValidHelperArrays=0;
return this.compressMolTable$();
}return null;
});

Clazz_newMeth(C$, 'deleteMolecule$',  function () {
this.clear$();
});

Clazz_newMeth(C$, 'clear$',  function () {
this.mAllAtoms=0;
this.mAllBonds=0;
this.mIsFragment=false;
this.mIsRacemate=false;
this.mChirality=0;
this.mAtomList=null;
this.mAtomCustomLabel=null;
this.mName=null;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'removeAtomSelection$',  function () {
for (var i=0; i < this.mAllAtoms; i++) this.mAtomFlags[i]&=~512;

});

Clazz_newMeth(C$, 'removeAtomColors$',  function () {
for (var i=0; i < this.mAllAtoms; i++) this.mAtomFlags[i]&=~448;

});

Clazz_newMeth(C$, 'removeAtomCustomLabels$',  function () {
this.mAtomCustomLabel=null;
});

Clazz_newMeth(C$, 'removeAtomMarkers$',  function () {
for (var i=0; i < this.mAllAtoms; i++) this.mAtomFlags[i]&=~131072;

});

Clazz_newMeth(C$, 'removeBondHiliting$',  function () {
for (var i=0; i < this.mAllBonds; i++) this.mBondFlags[i]&=~(98304);

});

Clazz_newMeth(C$, 'findAtom$D$D',  function (pickx, picky) {
var foundAtom=-1;
var avbl=this.getAverageBondLength$();
var foundDistanceSquare=1.7976931348623157E308;
var maxDistanceSquare=avbl * avbl / 12.0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
var x=this.mCoordinates[atom].x;
var y=this.mCoordinates[atom].y;
var distanceSquare=(pickx - x) * (pickx - x) + (picky - y) * (picky - y);
if (distanceSquare < maxDistanceSquare  && distanceSquare < foundDistanceSquare  ) {
foundDistanceSquare=distanceSquare;
foundAtom=atom;
}}
return foundAtom;
});

Clazz_newMeth(C$, 'findBond$D$D',  function (pickx, picky) {
var foundBond=-1;
var maxDistance=this.getAverageBondLength$();
var foundDistance=1.7976931348623157E308;
for (var bond=0; bond < this.mAllBonds; bond++) {
var x1=this.mCoordinates[this.mBondAtom[0][bond]].x;
var y1=this.mCoordinates[this.mBondAtom[0][bond]].y;
var x2=this.mCoordinates[this.mBondAtom[1][bond]].x;
var y2=this.mCoordinates[this.mBondAtom[1][bond]].y;
var dx=x2 - x1;
var dy=y2 - y1;
var bondLength=Math.sqrt((dx * dx + dy * dy));
var centralX=(x1 + x2) / 2.0;
var centralY=(y1 + y2) / 2.0;
dx=pickx - centralX;
dy=picky - centralY;
if (Math.sqrt(dx * dx + dy * dy) > bondLength / 2.0 ) continue;
var distance;
if (x2 == x1 ) distance=Math.abs(x1 - pickx);
 else {
var constA=(y2 - y1) / (x1 - x2);
var constC=-constA * x1 - y1;
distance=Math.abs((constA * pickx + picky + constC) / Math.sqrt(constA * constA + 1));
}if (distance < maxDistance  && distance < foundDistance  ) {
foundDistance=distance;
foundBond=bond;
}}
return foundBond;
});

Clazz_newMeth(C$, 'getAllAtoms$',  function () {
return this.mAllAtoms;
});

Clazz_newMeth(C$, 'getAllBonds$',  function () {
return this.mAllBonds;
});

Clazz_newMeth(C$, 'getAtomAbnormalValence$I',  function (atom) {
return ((this.mAtomFlags[atom] & 2013265920) >>> 27) - 1;
});

Clazz_newMeth(C$, 'getAtomCharge$I',  function (atom) {
return this.mAtomCharge[atom];
});

Clazz_newMeth(C$, 'getAtomCIPParity$I',  function (atom) {
return (this.mAtomFlags[atom] & 49152) >> 14;
});

Clazz_newMeth(C$, 'getAtomColor$I',  function (atom) {
return this.mAtomFlags[atom] & 448;
});

Clazz_newMeth(C$, 'getAtomCoordinates$I',  function (atom) {
return this.mCoordinates[atom];
});

Clazz_newMeth(C$, 'getAtomCoordinates$',  function () {
return this.mCoordinates;
});

Clazz_newMeth(C$, 'getAtomESRGroup$I',  function (atom) {
if (this.getAtomESRType$I(atom) != 1 && this.getAtomESRType$I(atom) != 2 ) return -1;
 else return (this.mAtomFlags[atom] & 32505856) >> 20;
});

Clazz_newMeth(C$, 'getAtomESRType$I',  function (atom) {
return (this.mAtomFlags[atom] & 786432) >> 18;
});

Clazz_newMeth(C$, 'getAtomicNo$I',  function (atom) {
return this.mAtomicNo[atom];
});

Clazz_newMeth(C$, 'getAtomCustomLabel$I',  function (atom) {
return (this.mAtomCustomLabel == null ) ? null : (this.mAtomCustomLabel[atom] == null ) ? null : $I$(3).newString$BA(this.mAtomCustomLabel[atom]);
});

Clazz_newMeth(C$, 'getAtomCustomLabelBytes$I',  function (atom) {
return (this.mAtomCustomLabel == null ) ? null : this.mAtomCustomLabel[atom];
});

Clazz_newMeth(C$, 'getAtomLabel$I',  function (atom) {
return C$.cAtomLabel[this.mAtomicNo[atom]];
});

Clazz_newMeth(C$, 'getAtomList$I',  function (atom) {
return (this.mAtomList == null ) ? null : this.mAtomList[atom];
});

Clazz_newMeth(C$, 'getAtomListString$I',  function (atom) {
if (this.mAtomList == null  || this.mAtomList[atom] == null  ) return ((this.mAtomQueryFeatures[atom] & 1) != 0) ? "" : C$.cAtomLabel[this.mAtomicNo[atom]];
var listString="";
for (var i=0; i < this.mAtomList[atom].length; i++) {
if (i > 0) listString=listString.concat$S(",");
var atomicNo=this.mAtomList[atom][i];
listString=listString.concat$S(C$.cAtomLabel[atomicNo]);
}
return listString;
});

Clazz_newMeth(C$, 'getAtomMapNo$I',  function (atom) {
return Math.abs(this.mAtomMapNo[atom]);
});

Clazz_newMeth(C$, 'getAtomMass$I',  function (atom) {
return this.mAtomMass[atom];
});

Clazz_newMeth(C$, 'getAtomParity$I',  function (atom) {
return this.mAtomFlags[atom] & 3;
});

Clazz_newMeth(C$, 'getAtomQueryFeatures$I',  function (atom) {
return this.mAtomQueryFeatures[atom];
});

Clazz_newMeth(C$, 'getAtomQueryFeaturesEx$I',  function (atom) {
return this.mAtomQueryFeaturesH[atom];
});

Clazz_newMeth(C$, 'getAtomRadical$I',  function (atom) {
return this.mAtomFlags[atom] & 48;
});

Clazz_newMeth(C$, 'getCoordinates$I',  function (atom) {
return this.mCoordinates[atom];
});

Clazz_newMeth(C$, 'getCenterOfGravity$',  function () {
if (this.mAllAtoms == 0) return null;
var c=Clazz_new_($I$(1,1));
for (var atom=0; atom < this.mAllAtoms; atom++) c.add$com_actelion_research_chem_Coordinates(this.mCoordinates[atom]);

return c.scale$D(1.0 / this.mAllAtoms);
});

Clazz_newMeth(C$, 'getCenterOfGravity$IA',  function (atomIndex) {
if (atomIndex == null  || atomIndex.length == 0  || atomIndex.length > this.mAllAtoms ) return null;
var c=Clazz_new_($I$(1,1));
for (var atom, $atom = 0, $$atom = atomIndex; $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) c.add$com_actelion_research_chem_Coordinates(this.mCoordinates[atom]);

return c.scale$D(1.0 / atomIndex.length);
});

Clazz_newMeth(C$, 'getAtomX$I',  function (atom) {
return this.mCoordinates[atom].x;
});

Clazz_newMeth(C$, 'getAtomY$I',  function (atom) {
return this.mCoordinates[atom].y;
});

Clazz_newMeth(C$, 'getAtomZ$I',  function (atom) {
return this.mCoordinates[atom].z;
});

Clazz_newMeth(C$, 'getBounds$com_actelion_research_gui_generic_GenericRectangle',  function (r) {
if (this.mAllAtoms == 0) return null;
var x1=this.mCoordinates[0].x;
var y1=this.mCoordinates[0].y;
var x2=this.mCoordinates[0].x;
var y2=this.mCoordinates[0].y;
for (var atom=1; atom < this.mAllAtoms; atom++) {
if (x1 > this.mCoordinates[atom].x ) x1=this.mCoordinates[atom].x;
 else if (x2 < this.mCoordinates[atom].x ) x2=this.mCoordinates[atom].x;
if (y1 > this.mCoordinates[atom].y ) y1=this.mCoordinates[atom].y;
 else if (y2 < this.mCoordinates[atom].y ) y2=this.mCoordinates[atom].y;
}
if (r == null ) {
r=Clazz_new_($I$(4,1).c$$D$D$D$D,[x1, y1, x2 - x1, y2 - y1]);
} else {
r.x=x1;
r.y=y1;
r.width=x2 - x1;
r.height=y2 - y1;
}return r;
});

Clazz_newMeth(C$, 'getDefaultAverageBondLength$',  function () {
return C$.sDefaultAVBL;
}, 1);

Clazz_newMeth(C$, 'setDefaultAverageBondLength$D',  function (defaultAVBL) {
C$.sDefaultAVBL=defaultAVBL;
}, 1);

Clazz_newMeth(C$, 'getAverageBondLength$',  function () {
return this.getAverageBondLength$I$I$D(this.mAllAtoms, this.mAllBonds, C$.sDefaultAVBL);
});

Clazz_newMeth(C$, 'getAverageBondLength$D',  function (defaultBondLength) {
return this.getAverageBondLength$I$I$D(this.mAllAtoms, this.mAllBonds, defaultBondLength);
});

Clazz_newMeth(C$, 'getAverageBondLength$I$I',  function (atoms, bonds) {
return this.getAverageBondLength$I$I$D(atoms, bonds, C$.sDefaultAVBL);
});

Clazz_newMeth(C$, 'getAverageBondLength$I$I$D',  function (atoms, bonds, defaultBondLength) {
return this.getAverageBondLength$I$I$D$com_actelion_research_chem_CoordinatesA(atoms, bonds, defaultBondLength, this.mCoordinates);
});

Clazz_newMeth(C$, 'getAverageBondLength$I$I$D$com_actelion_research_chem_CoordinatesA',  function (atoms, bonds, defaultBondLength, coords) {
var considerMetalBonds=false;
var consideredBonds=0;
for (var bond=0; bond < bonds; bond++) if (this.mBondType[bond] != 16 && (this.mBondQueryFeatures[bond] & 130560) == 0 ) ++consideredBonds;

if (consideredBonds == 0) {
for (var bond=0; bond < bonds; bond++) if ((this.mBondQueryFeatures[bond] & 130560) == 0) ++consideredBonds;

considerMetalBonds=true;
}if (consideredBonds == 0) {
if (atoms < 2) return defaultBondLength;
var lowDistance=1.7976931348623157E308;
for (var atom1=1; atom1 < atoms; atom1++) {
for (var atom2=0; atom2 < atom1; atom2++) {
var distance=coords[atom1].distance$com_actelion_research_chem_Coordinates(coords[atom2]);
if (distance > 0  && distance < lowDistance  ) lowDistance=distance;
}
}
return (lowDistance != 1.7976931348623157E308 ) ? 0.6 * lowDistance : defaultBondLength;
}var avblSum=0.0;
for (var bond=0; bond < bonds; bond++) {
if ((considerMetalBonds || this.mBondType[bond] != 16 ) && (this.mBondQueryFeatures[bond] & 130560) == 0 ) avblSum+=coords[this.mBondAtom[1][bond]].distance$com_actelion_research_chem_Coordinates(coords[this.mBondAtom[0][bond]]);
}
return avblSum / consideredBonds;
});

Clazz_newMeth(C$, 'getBondAngle$I$I',  function (atom1, atom2) {
return C$.getAngle$D$D$D$D(this.mCoordinates[atom1].x, this.mCoordinates[atom1].y, this.mCoordinates[atom2].x, this.mCoordinates[atom2].y);
});

Clazz_newMeth(C$, 'calculateTorsion$IA',  function (atom) {
var c1=this.mCoordinates[atom[0]];
var c2=this.mCoordinates[atom[1]];
var c3=this.mCoordinates[atom[2]];
var c4=this.mCoordinates[atom[3]];
var v1=c2.subC$com_actelion_research_chem_Coordinates(c1);
var v2=c3.subC$com_actelion_research_chem_Coordinates(c2);
var v3=c4.subC$com_actelion_research_chem_Coordinates(c3);
var n1=v1.cross$com_actelion_research_chem_Coordinates(v2);
var n2=v2.cross$com_actelion_research_chem_Coordinates(v3);
return -Math.atan2(v2.getLength$() * v1.dot$com_actelion_research_chem_Coordinates(n2), n1.dot$com_actelion_research_chem_Coordinates(n2));
});

Clazz_newMeth(C$, 'center$',  function () {
var cog=Clazz_new_($I$(1,1));
for (var atom=0; atom < this.mAllAtoms; atom++) cog.add$com_actelion_research_chem_Coordinates(this.mCoordinates[atom]);

cog.scale$D(1.0 / this.mAllAtoms);
for (var atom=0; atom < this.mAllAtoms; atom++) this.mCoordinates[atom].sub$com_actelion_research_chem_Coordinates(cog);

});

Clazz_newMeth(C$, 'translate$D$D$D',  function (dx, dy, dz) {
for (var atom=0; atom < this.mAllAtoms; atom++) this.mCoordinates[atom].add$D$D$D(dx, dy, dz);

});

Clazz_newMeth(C$, 'getBondAtom$I$I',  function (no, bond) {
return this.mBondAtom[no][bond];
});

Clazz_newMeth(C$, 'getBondCIPParity$I',  function (bond) {
return (this.mBondFlags[bond] & 48) >> 4;
});

Clazz_newMeth(C$, 'getBondESRGroup$I',  function (bond) {
if (this.getBondESRType$I(bond) != 1 && this.getBondESRType$I(bond) != 2 ) return -1;
 else return (this.mBondFlags[bond] & 31744) >> 10;
});

Clazz_newMeth(C$, 'getBondESRType$I',  function (bond) {
return (this.mBondFlags[bond] & 768) >> 8;
});

Clazz_newMeth(C$, 'getBondLength$I',  function (bond) {
var atom1=this.mBondAtom[0][bond];
var atom2=this.mBondAtom[1][bond];
var xdif=this.mCoordinates[atom2].x - this.mCoordinates[atom1].x;
var ydif=this.mCoordinates[atom2].y - this.mCoordinates[atom1].y;
return Math.sqrt(xdif * xdif + ydif * ydif);
});

Clazz_newMeth(C$, 'getBondOrder$I',  function (bond) {
if (this.mIsFragment && (this.mBondQueryFeatures[bond] & 31) != 0 ) {
if ((this.mBondQueryFeatures[bond] & (9)) != 0) return 1;
if ((this.mBondQueryFeatures[bond] & 2) != 0) return 2;
if ((this.mBondQueryFeatures[bond] & 4) != 0) return 3;
if ((this.mBondQueryFeatures[bond] & 32) != 0) return 4;
if ((this.mBondQueryFeatures[bond] & 64) != 0) return 5;
if ((this.mBondQueryFeatures[bond] & 16) != 0) return 0;
}switch (this.mBondType[bond] & 127) {
case 1:
case 8:
return 1;
case 2:
return 2;
case 4:
return 3;
case 32:
return 4;
case 64:
return 5;
default:
return 0;
}
});

Clazz_newMeth(C$, 'getBondParity$I',  function (bnd) {
return this.mBondFlags[bnd] & 3;
});

Clazz_newMeth(C$, 'getBondQueryFeatures$I',  function (bnd) {
return this.mBondQueryFeatures[bnd];
});

Clazz_newMeth(C$, 'isBondBridge$I',  function (bond) {
return (this.mBondQueryFeatures[bond] & 130560) != 0;
});

Clazz_newMeth(C$, 'getBondBridgeMinSize$I',  function (bond) {
return (this.mBondQueryFeatures[bond] & 7680) >> 9;
});

Clazz_newMeth(C$, 'getBondBridgeMaxSize$I',  function (bond) {
return ((this.mBondQueryFeatures[bond] & 7680) >> 9) + ((this.mBondQueryFeatures[bond] & 122880) >> 13);
});

Clazz_newMeth(C$, 'getBondType$I',  function (bond) {
return this.mBondType[bond];
});

Clazz_newMeth(C$, 'getBondTypeSimple$I',  function (bond) {
return this.mBondType[bond] & 127;
});

Clazz_newMeth(C$, 'getChirality$',  function () {
return this.mChirality;
});

Clazz_newMeth(C$, 'getMaxAtoms$',  function () {
return this.mMaxAtoms;
});

Clazz_newMeth(C$, 'copyOf$com_actelion_research_chem_CoordinatesA$I',  function (original, newLength) {
var copy=Clazz_array($I$(1), [newLength]);
for (var i=0; i < original.length; i++) if (original[i] != null ) copy[i]=Clazz_new_($I$(1,1).c$$com_actelion_research_chem_Coordinates,[original[i]]);

return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$IA$I',  function (original, newLength) {
var copy=Clazz_array(Integer.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$IAA$I',  function (original, newLength) {
var copy=Clazz_array(Integer.TYPE, [newLength, null]);
for (var i=0; i < original.length; i++) {
if (original[i] != null ) {
copy[i]=Clazz_array(Integer.TYPE, [original[i].length]);
System.arraycopy$O$I$O$I$I(original[i], 0, copy[i], 0, original[i].length);
}}
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$BAA$I',  function (original, newLength) {
var copy=Clazz_array(Byte.TYPE, [newLength, null]);
for (var i=0; i < original.length; i++) {
if (original[i] != null ) {
copy[i]=Clazz_array(Byte.TYPE, [original[i].length]);
System.arraycopy$O$I$O$I$I(original[i], 0, copy[i], 0, original[i].length);
}}
return copy;
}, 1);

Clazz_newMeth(C$, 'setMaxAtoms$I',  function (v) {
this.mAtomicNo=C$.copyOf$IA$I(this.mAtomicNo, v);
this.mAtomCharge=C$.copyOf$IA$I(this.mAtomCharge, v);
this.mAtomMapNo=C$.copyOf$IA$I(this.mAtomMapNo, v);
var orig=this.mCoordinates.length;
this.mCoordinates=C$.copyOf$com_actelion_research_chem_CoordinatesA$I(this.mCoordinates, v);
for (var i=orig; i < v; i++) this.mCoordinates[i]=Clazz_new_($I$(1,1));

this.mAtomMass=C$.copyOf$IA$I(this.mAtomMass, v);
this.mAtomFlags=C$.copyOf$IA$I(this.mAtomFlags, v);
this.mAtomQueryFeatures=C$.copyOf$IA$I(this.mAtomQueryFeatures, v);
if (this.mAtomList != null ) this.mAtomList=C$.copyOf$IAA$I(this.mAtomList, v);
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel=C$.copyOf$BAA$I(this.mAtomCustomLabel, v);
this.mMaxAtoms=v;
});

Clazz_newMeth(C$, 'getMaxBonds$',  function () {
return this.mMaxBonds;
});

Clazz_newMeth(C$, 'setMaxBonds$I',  function (v) {
this.mBondAtom[0]=C$.copyOf$IA$I(this.mBondAtom[0], v);
this.mBondAtom[1]=C$.copyOf$IA$I(this.mBondAtom[1], v);
this.mBondType=C$.copyOf$IA$I(this.mBondType, v);
this.mBondFlags=C$.copyOf$IA$I(this.mBondFlags, v);
this.mBondQueryFeatures=C$.copyOf$IA$I(this.mBondQueryFeatures, v);
this.mMaxBonds=v;
});

Clazz_newMeth(C$, 'getMoleculeColor$',  function () {
return this.mMoleculeColor;
});

Clazz_newMeth(C$, 'setMoleculeColor$I',  function (color) {
this.mMoleculeColor=color;
});

Clazz_newMeth(C$, 'getName$',  function () {
return this.mName;
});

Clazz_newMeth(C$, 'getStereoProblem$I',  function (atom) {
return ((this.mAtomFlags[atom] & 65536) != 0);
});

Clazz_newMeth(C$, 'isAtomConfigurationUnknown$I',  function (atom) {
return ((this.mAtomFlags[atom] & 33554432) != 0);
});

Clazz_newMeth(C$, 'isAtomParityPseudo$I',  function (atom) {
return ((this.mAtomFlags[atom] & 4) != 0);
});

Clazz_newMeth(C$, 'isAtomStereoCenter$I',  function (atom) {
return ((this.mAtomFlags[atom] & 67108864) != 0);
});

Clazz_newMeth(C$, 'isBondParityPseudo$I',  function (bond) {
return ((this.mBondFlags[bond] & 4) != 0);
});

Clazz_newMeth(C$, 'isBondParityUnknownOrNone$I',  function (bond) {
return ((this.mBondFlags[bond] & 131072) != 0);
});

Clazz_newMeth(C$, 'isFragment$',  function () {
return this.mIsFragment;
});

Clazz_newMeth(C$, 'isDelocalizedBond$I',  function (bond) {
return this.mBondType[bond] == 8;
});

Clazz_newMeth(C$, 'is3D$',  function () {
for (var atom=0; atom < this.mAllAtoms; atom++) if (this.mCoordinates[atom].z != 0.0 ) return true;

return false;
});

Clazz_newMeth(C$, 'isNaturalAbundance$I',  function (atom) {
return (this.mAtomMass[atom] == 0);
});

Clazz_newMeth(C$, 'isPurelyOrganic$',  function () {
for (var atom=0; atom < this.mAllAtoms; atom++) {
switch (this.mAtomicNo[atom]) {
case 1:
case 5:
case 6:
case 7:
case 8:
case 9:
case 14:
case 15:
case 16:
case 17:
case 33:
case 34:
case 35:
case 52:
case 53:
continue;
default:
return false;
}
}
return true;
});

Clazz_newMeth(C$, 'isSelectedAtom$I',  function (atom) {
return (this.mAtomFlags[atom] & 512) != 0;
});

Clazz_newMeth(C$, 'isMarkedAtom$I',  function (atom) {
return (this.mAtomFlags[atom] & 131072) != 0;
});

Clazz_newMeth(C$, 'isBondBackgroundHilited$I',  function (bond) {
return (this.mBondFlags[bond] & 32768) != 0;
});

Clazz_newMeth(C$, 'isBondForegroundHilited$I',  function (bond) {
return (this.mBondFlags[bond] & 65536) != 0;
});

Clazz_newMeth(C$, 'isSelectedBond$I',  function (bond) {
return (this.mAtomFlags[this.mBondAtom[0][bond]] & this.mAtomFlags[this.mBondAtom[1][bond]] & 512 ) != 0;
});

Clazz_newMeth(C$, 'isAutoMappedAtom$I',  function (atom) {
return (this.mAtomMapNo[atom] < 0);
});

Clazz_newMeth(C$, 'isStereoBond$I',  function (bond) {
return this.mBondType[bond] == 257 || this.mBondType[bond] == 129 ;
});

Clazz_newMeth(C$, 'isStereoBond$I$I',  function (bond, atom) {
return (this.mBondType[bond] == 257 || this.mBondType[bond] == 129 ) && this.mBondAtom[0][bond] == atom ;
});

Clazz_newMeth(C$, 'setAllAtoms$I',  function (no) {
this.mAllAtoms=no;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'setAllBonds$I',  function (no) {
this.mAllBonds=no;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'setAtomAbnormalValence$I$I',  function (atom, valence) {
if (valence >= -1 && valence <= 14 ) {
this.mAtomFlags[atom]&=~2013265920;
this.mAtomFlags[atom]|=((1 + valence) << 27);
if (this.mAtomicNo[atom] == 6) {
if (valence == -1 || valence == 0  || valence == 2  || valence == 4 ) {
this.mAtomFlags[atom]&=~48;
if (valence == 2) this.mAtomFlags[atom]|=16;
}}}});

Clazz_newMeth(C$, 'setAtomCharge$I$I',  function (atom, charge) {
this.mAtomCharge[atom]=charge;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'setAtomColor$I$I',  function (atom, color) {
this.mAtomFlags[atom]&=~448;
this.mAtomFlags[atom]|=color;
});

Clazz_newMeth(C$, 'setAtomConfigurationUnknown$I$Z',  function (atom, u) {
if (u) this.mAtomFlags[atom]|=33554432;
 else this.mAtomFlags[atom]&=~33554432;
this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setAtomSelection$I$Z',  function (atom, s) {
if (s) this.mAtomFlags[atom]|=512;
 else this.mAtomFlags[atom]&=~512;
});

Clazz_newMeth(C$, 'setAtomMarker$I$Z',  function (atom, s) {
if (s) this.mAtomFlags[atom]|=131072;
 else this.mAtomFlags[atom]&=~131072;
});

Clazz_newMeth(C$, 'setAtomicNo$I$I',  function (atom, no) {
if ((no >= 0) && (no <= 190) ) {
if (no == 151 || no == 152 ) {
this.mAtomicNo[atom]=1;
this.mAtomMass[atom]=no - 149;
} else {
this.mAtomicNo[atom]=no;
this.mAtomMass[atom]=0;
}this.mAtomFlags[atom]&=~2013265920;
this.mValidHelperArrays=0;
}});

Clazz_newMeth(C$, 'setAtomList$I$IA',  function (atom, list) {
if (this.mAtomList == null ) this.mAtomList=Clazz_array(Integer.TYPE, [this.mMaxAtoms, null]);
if (list != null ) $I$(2).sort$IA(list);
this.mAtomList[atom]=list;
this.mValidHelperArrays=0;
this.mIsFragment=true;
});

Clazz_newMeth(C$, 'setAtomList$I$IA$Z',  function (atom, list, isExcludeList) {
if (list == null ) {
if (this.mAtomList != null ) this.mAtomList[atom]=null;
return;
}if (list.length == 1 && !isExcludeList ) {
var atomicNo=list[0];
if (this.mAtomicNo[atom] != atomicNo) this.changeAtom$I$I$I$I$I(atom, atomicNo, 0, -1, 0);
if (this.mAtomList != null ) this.mAtomList[atom]=null;
return;
}if (this.mAtomList == null ) this.mAtomList=Clazz_array(Integer.TYPE, [this.mMaxAtoms, null]);
this.mAtomList[atom]=list;
if (isExcludeList) this.mAtomQueryFeatures[atom]|=1;
this.mValidHelperArrays=0;
this.mIsFragment=true;
});

Clazz_newMeth(C$, 'setAtomMapNo$I$I$Z',  function (atom, mapNo, autoMapped) {
this.mAtomMapNo[atom]=(autoMapped) ? -mapNo : mapNo;
});

Clazz_newMeth(C$, 'setAtomMass$I$I',  function (atom, mass) {
this.mAtomMass[atom]=mass;
this.mValidHelperArrays&=(this.mAtomicNo[atom] == 1) ? 0 : 7;
});

Clazz_newMeth(C$, 'setAtomParity$I$I$Z',  function (atom, parity, isPseudo) {
this.mAtomFlags[atom]&=~(7);
if (parity != 3) this.mAtomFlags[atom]&=~33554432;
this.mAtomFlags[atom]|=parity;
if (isPseudo) this.mAtomFlags[atom]|=4;
});

Clazz_newMeth(C$, 'setAtomStereoCenter$I$Z',  function (atom, isStereoCenter) {
this.mAtomFlags[atom]&=~67108864;
if (isStereoCenter) this.mAtomFlags[atom]|=67108864;
});

Clazz_newMeth(C$, 'setAtomQueryFeature$I$I$Z',  function (atom, feature, value) {
if (value) this.mAtomQueryFeatures[atom]|=feature;
 else this.mAtomQueryFeatures[atom]&=~feature;
this.mValidHelperArrays=0;
this.mIsFragment=true;
});

Clazz_newMeth(C$, 'setAtomQueryFeatureEx$I$I$Z',  function (atom, feature, value) {
if (value) this.mAtomQueryFeaturesH[atom]|=feature;
 else this.mAtomQueryFeaturesH[atom]&=~feature;
this.mValidHelperArrays=0;
this.mIsFragment=true;
});

Clazz_newMeth(C$, 'setAtomRadical$I$I',  function (atom, radical) {
this.mAtomFlags[atom]&=~48;
this.mAtomFlags[atom]|=radical;
this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setAtomCIPParity$I$I',  function (atom, parity) {
this.mAtomFlags[atom]&=~49152;
this.mAtomFlags[atom]|=(parity << 14);
});

Clazz_newMeth(C$, 'setAtomX$I$D',  function (atom, x) {
this.mCoordinates[atom].x=x;
this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setAtomY$I$D',  function (atom, y) {
this.mCoordinates[atom].y=y;
this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setAtomZ$I$D',  function (atom, z) {
this.mCoordinates[atom].z=z;
this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setBondAtom$I$I$I',  function (no, bond, atom) {
this.mBondAtom[no][bond]=atom;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'setBondCIPParity$I$I',  function (bond, parity) {
this.mBondFlags[bond]&=~48;
this.mBondFlags[bond]|=(parity << 4);
});

Clazz_newMeth(C$, 'setBondBackgroundHiliting$I$Z',  function (bond, s) {
if (s) this.mBondFlags[bond]|=32768;
 else this.mBondFlags[bond]&=~32768;
});

Clazz_newMeth(C$, 'setBondForegroundHiliting$I$Z',  function (bond, s) {
if (s) this.mBondFlags[bond]|=65536;
 else this.mBondFlags[bond]&=~65536;
});

Clazz_newMeth(C$, 'setBondParity$I$I$Z',  function (bond, parity, isPseudo) {
this.mBondFlags[bond]&=~(131079);
this.mBondFlags[bond]|=parity;
if (isPseudo) this.mBondFlags[bond]|=4;
});

Clazz_newMeth(C$, 'setBondParityUnknownOrNone$I',  function (bond) {
this.mBondFlags[bond]|=131072;
});

Clazz_newMeth(C$, 'setBondQueryFeature$I$I$Z',  function (bond, feature, value) {
if (value) this.mBondQueryFeatures[bond]|=feature;
 else this.mBondQueryFeatures[bond]&=~feature;
this.mValidHelperArrays=0;
if (value && feature != 0 ) this.mIsFragment=true;
});

Clazz_newMeth(C$, 'adaptBondTypeToQueryFeatures$I',  function (bond) {
var bondType=-1;
var selectionCount=0;
if ((this.mBondQueryFeatures[bond] & 16) != 0) {
bondType=16;
++selectionCount;
}if ((this.mBondQueryFeatures[bond] & 64) != 0) {
bondType=64;
++selectionCount;
}if ((this.mBondQueryFeatures[bond] & 32) != 0) {
bondType=32;
++selectionCount;
}if ((this.mBondQueryFeatures[bond] & 4) != 0) {
bondType=4;
++selectionCount;
}if ((this.mBondQueryFeatures[bond] & 2) != 0) {
bondType=2;
++selectionCount;
}if ((this.mBondQueryFeatures[bond] & 8) != 0) {
bondType=8;
++selectionCount;
}if ((this.mBondQueryFeatures[bond] & 1) != 0) {
bondType=1;
++selectionCount;
}if (bondType != -1 && bondType != (this.mBondType[bond] & 127) ) this.mBondType[bond]=bondType;
if (selectionCount < 2) this.mBondQueryFeatures[bond]&=~(127);
});

Clazz_newMeth(C$, 'setBondOrder$I$I',  function (bond, order) {
this.mBondType[bond]=(order == 1) ? 1 : (order == 2) ? 2 : (order == 3) ? 4 : 16;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'setBondType$I$I',  function (bond, type) {
this.mBondType[bond]=type;
this.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'setChirality$I',  function (c) {
this.mChirality=c;
});

Clazz_newMeth(C$, 'setHydrogenProtection$Z',  function (protectHydrogen) {
this.mProtectHydrogen=protectHydrogen;
});

Clazz_newMeth(C$, 'setHelperValidity$I',  function (helperValidity) {
this.mValidHelperArrays=helperValidity;
});

Clazz_newMeth(C$, 'setToRacemate$',  function () {
this.mIsRacemate=true;
});

Clazz_newMeth(C$, 'setAtomCustomLabel$I$BA',  function (atom, label) {
if (label != null  && label.length == 0 ) label=null;
if (label == null ) {
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel[atom]=null;
} else {
if (this.mAtomCustomLabel == null ) this.mAtomCustomLabel=Clazz_array(Byte.TYPE, [this.mMaxAtoms, null]);
this.mAtomCustomLabel[atom]=label;
}});

Clazz_newMeth(C$, 'setAtomCustomLabel$I$S',  function (atom, label) {
if (label != null ) {
if (label.length$() == 0) label=null;
 else {
var atomicNo=C$.getAtomicNoFromLabel$S(label);
if ((atomicNo != 0 && atomicNo == this.mAtomicNo[atom] ) || label.equals$O("?") ) {
this.setAtomicNo$I$I(atom, atomicNo);
label=null;
}}}if (label == null ) {
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel[atom]=null;
} else {
if (this.mAtomCustomLabel == null ) this.mAtomCustomLabel=Clazz_array(Byte.TYPE, [this.mMaxAtoms, null]);
this.mAtomCustomLabel[atom]=$I$(3).getBytes$S(label);
}});

Clazz_newMeth(C$, 'setAtomESR$I$I$I',  function (atom, type, group) {
if (type == 0) {
this.mAtomFlags[atom]&=~33292288;
this.mAtomFlags[atom]|=(type << 18);
} else {
if (group >= 32) return;
if (group == -1) {
var maxGroup=-1;
for (var i=0; i < this.mAllAtoms; i++) if (i != atom && type == this.getAtomESRType$I(i)  && maxGroup < this.getAtomESRGroup$I(i) ) maxGroup=this.getAtomESRGroup$I(i);

for (var i=0; i < this.mAllBonds; i++) if (type == this.getBondESRType$I(i) && maxGroup < this.getBondESRGroup$I(i) ) maxGroup=this.getBondESRGroup$I(i);

group=maxGroup + 1;
if (group >= 32) return;
}this.mAtomFlags[atom]&=~33292288;
this.mAtomFlags[atom]|=((type << 18) | (group << 20));
}this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setBondESR$I$I$I',  function (bond, type, group) {
if (type == 0) {
this.mBondFlags[bond]&=~32512;
this.mBondFlags[bond]|=(type << 8);
} else {
if (group >= 32) return;
if (group == -1) {
var maxGroup=-1;
for (var i=0; i < this.mAllAtoms; i++) if (type == this.getAtomESRType$I(i) && maxGroup < this.getAtomESRGroup$I(i) ) maxGroup=this.getAtomESRGroup$I(i);

for (var i=0; i < this.mAllBonds; i++) if (i != bond && type == this.getBondESRType$I(i)  && maxGroup < this.getBondESRGroup$I(i) ) maxGroup=this.getBondESRGroup$I(i);

group=maxGroup + 1;
if (group >= 32) return;
}this.mBondFlags[bond]&=~32512;
this.mBondFlags[bond]|=((type << 8) | (group << 10));
}this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'setFragment$Z',  function (isFragment) {
if (this.mIsFragment != isFragment ) {
this.mIsFragment=isFragment;
if (!isFragment) this.removeQueryFeatures$();
this.mValidHelperArrays=0;
}});

Clazz_newMeth(C$, 'setName$S',  function (name) {
this.mName=name;
});

Clazz_newMeth(C$, 'getUserData$',  function () {
return this.mUserData;
});

Clazz_newMeth(C$, 'setUserData$O',  function (userData) {
this.mUserData=userData;
});

Clazz_newMeth(C$, 'removeQueryFeatures$',  function () {
var isChanged=false;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if ((this.mAtomQueryFeatures[atom] & 536870912) != 0) {
this.markAtomForDeletion$I(atom);
isChanged=true;
}}
if (isChanged) this.deleteMarkedAtomsAndBonds$();
if (this.mAtomList != null ) {
this.mAtomList=null;
isChanged=true;
}for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.mAtomQueryFeatures[atom] != 0) {
this.mAtomQueryFeatures[atom]=0;
isChanged=true;
}}
for (var bond=0; bond < this.mAllBonds; bond++) {
if (this.mBondQueryFeatures[bond] != 0) {
this.mBondQueryFeatures[bond]=0;
isChanged=true;
}if (this.mBondType[bond] == 8) {
this.mBondType[bond]=1;
isChanged=true;
}}
if (isChanged) this.mValidHelperArrays=0;
return isChanged;
});

Clazz_newMeth(C$, 'setStereoProblem$I',  function (atom) {
this.mAtomFlags[atom]|=65536;
});

Clazz_newMeth(C$, 'stripIsotopInfo$',  function () {
var found=false;
var hydrogenIsotopFound=false;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.mAtomMass[atom] != 0) {
this.mAtomMass[atom]=0;
found=true;
if (this.mAtomicNo[atom] == 1) hydrogenIsotopFound=true;
}}
if (hydrogenIsotopFound) this.mValidHelperArrays=0;
return found;
});

Clazz_newMeth(C$, 'translateCoords$D$D',  function (dx, dy) {
for (var i=0; i < this.mAllAtoms; i++) {
this.mCoordinates[i].x+=dx;
this.mCoordinates[i].y+=dy;
}
this.mZoomRotationX+=dx;
this.mZoomRotationY+=dy;
});

Clazz_newMeth(C$, 'scaleCoords$D',  function (f) {
for (var i=0; i < this.mAllAtoms; i++) {
this.mCoordinates[i].x*=f;
this.mCoordinates[i].y*=f;
}
});

Clazz_newMeth(C$, 'rotateCoords$D$D$D',  function (x, y, angle) {
var sin=Math.sin(angle);
var cos=Math.cos(angle);
for (var atom=0; atom < this.mAllAtoms; atom++) {
var ax=this.mCoordinates[atom].x - x;
var ay=this.mCoordinates[atom].y - y;
this.mCoordinates[atom].x=x + ax * cos - ay * sin;
this.mCoordinates[atom].y=y + ay * cos + ax * sin;
}
});

Clazz_newMeth(C$, 'flipCoordinates$D$D$D',  function (x, y, angle) {
var a=Math.cos(angle);
var b=-Math.sin(angle);
var c=-a * x - b * y;
for (var atom=0; atom < this.mAllAtoms; atom++) {
var d=a * this.mCoordinates[atom].x + b * this.mCoordinates[atom].y + c;
this.mCoordinates[atom].x-=2 * a * d ;
this.mCoordinates[atom].y-=2 * b * d ;
}
for (var bond=0; bond < this.mAllBonds; bond++) if (this.isStereoBond$I(bond)) this.mBondType[bond]=(this.mBondType[bond] == 257) ? 129 : 257;

});

Clazz_newMeth(C$, 'zoomAndRotateInit$D$D',  function (x, y) {
this.mZoomRotationX=x;
this.mZoomRotationY=y;
this.mOriginalAngle=Clazz_array(Double.TYPE, [this.mAllAtoms]);
this.mOriginalDistance=Clazz_array(Double.TYPE, [this.mAllAtoms]);
for (var atom=0; atom < this.mAllAtoms; atom++) {
var dx=x - this.mCoordinates[atom].x;
var dy=y - this.mCoordinates[atom].y;
this.mOriginalDistance[atom]=Math.sqrt(dx * dx + dy * dy);
this.mOriginalAngle[atom]=C$.getAngle$D$D$D$D(x, y, this.mCoordinates[atom].x, this.mCoordinates[atom].y);
}
});

Clazz_newMeth(C$, 'zoomAndRotate$D$D$Z',  function (zoom, angle, selected) {
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (!selected || this.isSelectedAtom$I(atom) ) {
var newDistance=this.mOriginalDistance[atom] * zoom;
var newAngle=this.mOriginalAngle[atom] - angle;
this.mCoordinates[atom].x=this.mZoomRotationX + newDistance * Math.sin(newAngle);
this.mCoordinates[atom].y=this.mZoomRotationY + newDistance * Math.cos(newAngle);
}}
if (selected) this.mValidHelperArrays&=7;
});

Clazz_newMeth(C$, 'getMaximumBondOrder$I',  function (bond) {
var maxBondOrder=(this.isTransitionMetalAtom$I(this.mBondAtom[0][bond]) || this.isTransitionMetalAtom$I(this.mBondAtom[1][bond]) ) ? 5 : 3;
for (var i=0; i < 2; i++) {
var atom=this.mBondAtom[i][bond];
var max=this.getBondOrder$I(bond) + this.getMaxValence$I(atom) - this.getOccupiedValence$I(atom);
if (maxBondOrder > max) maxBondOrder=max;
}
return maxBondOrder;
}, p$1);

Clazz_newMeth(C$, 'incrementBondOrder$I',  function (bond) {
var maxBondOrder=p$1.getMaximumBondOrder$I.apply(this, [bond]);
var hasMetal=this.isMetalAtom$I(this.mBondAtom[0][bond]) || this.isMetalAtom$I(this.mBondAtom[1][bond]) ;
var startBond=hasMetal ? 16 : 1;
if (this.mBondType[bond] == 64) {
this.mBondType[bond]=startBond;
this.mValidHelperArrays=0;
return true;
}if (this.mBondType[bond] == 32) {
this.mBondType[bond]=(maxBondOrder > 4) ? 64 : startBond;
this.mValidHelperArrays=0;
return true;
}if (this.mBondType[bond] == 4) {
this.mBondType[bond]=(maxBondOrder > 3) ? 32 : startBond;
this.mValidHelperArrays=0;
return true;
}if (this.mBondType[bond] == 2) {
this.mBondType[bond]=386;
this.mValidHelperArrays&=7;
if ((this.mBondFlags[bond] & 128) == 0) return true;
}if (this.mBondType[bond] == 386) {
if (maxBondOrder > 2) this.mBondType[bond]=4;
 else this.mBondType[bond]=startBond;
this.mValidHelperArrays=0;
return true;
}if ((384 & this.mBondType[bond]) != 0) {
this.mBondType[bond]=1;
this.mValidHelperArrays&=7;
return true;
}if (!hasMetal && maxBondOrder < 2 ) return false;
if (this.mBondType[bond] == 1) {
this.mBondType[bond]=2;
this.mValidHelperArrays=0;
return true;
}if (maxBondOrder < 1) return false;
if (this.mBondType[bond] == 16) {
this.mBondType[bond]=1;
this.mValidHelperArrays=0;
return true;
}return false;
}, p$1);

Clazz_newMeth(C$, 'validateBondType$I$I',  function (bond, type) {
var simpleType=type & 127;
var maxBondOrder=p$1.getMaximumBondOrder$I.apply(this, [bond]);
switch (simpleType) {
case 1:
case 8:
return maxBondOrder >= 1;
case 2:
return maxBondOrder >= 2;
case 4:
return maxBondOrder >= 3;
case 32:
return maxBondOrder >= 4;
case 64:
return maxBondOrder >= 5;
case 16:
return true;
default:
return false;
}
});

Clazz_newMeth(C$, 'getOccupiedValence$I',  function (atom) {
return p$1.simpleGetValence$I.apply(this, [atom]);
});

Clazz_newMeth(C$, 'simpleGetValence$I',  function (atom) {
var val=0;
for (var bnd=0; bnd < this.mAllBonds; bnd++) if (this.mBondAtom[0][bnd] == atom || this.mBondAtom[1][bnd] == atom ) val+=this.getBondOrder$I(bnd);

return val;
}, p$1);

Clazz_newMeth(C$, 'getMaxValenceUncharged$I',  function (atom) {
var valence=this.getAtomAbnormalValence$I(atom);
if (valence == -1) valence=this.getDefaultMaxValenceUncharged$I(atom);
return valence;
});

Clazz_newMeth(C$, 'getDefaultMaxValenceUncharged$I',  function (atom) {
var valenceList=(this.mAtomicNo[atom] < C$.cAtomValence.length) ? C$.cAtomValence[this.mAtomicNo[atom]] : null;
return (valenceList == null ) ? ($b$[0] = 6, $b$[0]) : valenceList[valenceList.length - 1];
});

Clazz_newMeth(C$, 'getMaxValence$I',  function (atom) {
var valence=this.getMaxValenceUncharged$I(atom);
return valence + this.getElectronValenceCorrection$I$I(atom, valence);
});

Clazz_newMeth(C$, 'getElectronValenceCorrection$I$I',  function (atom, occupiedValence) {
return this.getElectronValenceCorrection$I$I$I(atom, occupiedValence, this.mAtomicNo[atom]);
});

Clazz_newMeth(C$, 'getElectronValenceCorrection$I$I$I',  function (atom, occupiedValence, atomicNo) {
if (atomicNo >= 171 && atomicNo <= 190 ) return 0;
var correction=0;
if ((this.mAtomFlags[atom] & 48) == 32) correction-=1;
if ((this.mAtomFlags[atom] & 48) == 16 || (this.mAtomFlags[atom] & 48) == 48 ) correction-=2;
var charge=this.mAtomCharge[atom];
if (charge == 0 && this.mIsFragment ) {
if ((this.mAtomQueryFeatures[atom] & 234881024) == 201326592) charge=-1;
if ((this.mAtomQueryFeatures[atom] & 234881024) == 100663296) charge=1;
}if (atomicNo == 7 || atomicNo == 8  || atomicNo == 9 ) correction+=charge;
 else if (atomicNo == 6 || atomicNo == 14  || atomicNo == 32 ) correction-=Math.abs(charge);
 else if (atomicNo == 15 || atomicNo == 33 ) {
if (occupiedValence - correction - charge  <= 3) correction+=charge;
 else correction-=charge;
} else if (atomicNo == 16 || atomicNo == 34  || atomicNo == 52 ) {
if (occupiedValence - correction - charge  <= 4) correction+=charge;
 else correction-=Math.abs(charge);
} else if (atomicNo == 17 || atomicNo == 35  || atomicNo == 53 ) {
if (occupiedValence - correction - charge  <= 5) correction+=charge;
 else correction-=Math.abs(charge);
} else {
correction-=charge;
}return correction;
});

Clazz_newMeth(C$, 'isAtomicNoElectronegative$I',  function (atomicNo) {
switch (atomicNo) {
case 7:
case 8:
case 9:
case 15:
case 16:
case 17:
case 33:
case 34:
case 35:
case 52:
case 53:
return true;
}
return false;
}, 1);

Clazz_newMeth(C$, 'isElectronegative$I',  function (atom) {
if (this.mIsFragment) {
if ((this.mAtomQueryFeatures[atom] & 1) != 0) return false;
if (this.mAtomList != null  && this.mAtomList[atom] != null  ) for (var atomicNo, $atomicNo = 0, $$atomicNo = this.mAtomList[atom]; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (!C$.isAtomicNoElectronegative$I(atomicNo)) return false;

}return C$.isAtomicNoElectronegative$I(this.mAtomicNo[atom]);
});

Clazz_newMeth(C$, 'isAtomicNoElectropositive$I',  function (atomicNo) {
if (atomicNo == 1 || atomicNo == 6 ) return false;
if (C$.isAtomicNoElectronegative$I(atomicNo)) return false;
if (atomicNo == 2 || atomicNo == 10  || atomicNo == 18  || atomicNo == 36  || atomicNo == 54 ) return false;
if (atomicNo > 103) return false;
return true;
}, 1);

Clazz_newMeth(C$, 'isElectropositive$I',  function (atom) {
if (this.mIsFragment) {
if ((this.mAtomQueryFeatures[atom] & 1) != 0) return false;
if (this.mAtomList != null  && this.mAtomList[atom] != null  ) for (var atomicNo, $atomicNo = 0, $$atomicNo = this.mAtomList[atom]; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (!C$.isAtomicNoElectropositive$I(atomicNo)) return false;

}return C$.isAtomicNoElectropositive$I(this.mAtomicNo[atom]);
});

Clazz_newMeth(C$, 'isMetalAtom$I',  function (atom) {
if (this.mIsFragment) {
if ((this.mAtomQueryFeatures[atom] & 1) != 0) return false;
if (this.mAtomList != null  && this.mAtomList[atom] != null  ) for (var atomicNo, $atomicNo = 0, $$atomicNo = this.mAtomList[atom]; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (!C$.isAtomicNoMetal$I(atomicNo)) return false;

}return C$.isAtomicNoMetal$I(this.mAtomicNo[atom]);
});

Clazz_newMeth(C$, 'isTransitionMetalAtom$I',  function (atom) {
if (this.mIsFragment) {
if ((this.mAtomQueryFeatures[atom] & 1) != 0) return false;
if (this.mAtomList != null  && this.mAtomList[atom] != null  ) for (var atomicNo, $atomicNo = 0, $$atomicNo = this.mAtomList[atom]; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (!C$.isAtomicNoTransitionMetal$I(atomicNo)) return false;

}return C$.isAtomicNoTransitionMetal$I(this.mAtomicNo[atom]);
});

Clazz_newMeth(C$, 'isAtomicNoMetal$I',  function (atomicNo) {
return (atomicNo >= 3 && atomicNo <= 4 ) || (atomicNo >= 11 && atomicNo <= 13 ) || (atomicNo >= 19 && atomicNo <= 31 ) || (atomicNo >= 37 && atomicNo <= 51 ) || (atomicNo >= 55 && atomicNo <= 84 ) || (atomicNo >= 87 && atomicNo <= 112 )  ;
}, 1);

Clazz_newMeth(C$, 'isAtomicNoTransitionMetal$I',  function (atomicNo) {
return (atomicNo >= 21 && atomicNo <= 30 ) || (atomicNo >= 39 && atomicNo <= 48 ) || atomicNo == 57   || (atomicNo >= 72 && atomicNo <= 80 )  || atomicNo == 89  || (atomicNo >= 104 && atomicNo <= 112 ) ;
}, 1);

Clazz_newMeth(C$, 'isOrganicAtom$I',  function (atom) {
if (this.mIsFragment) {
if ((this.mAtomQueryFeatures[atom] & 1) != 0) return false;
if (this.mAtomList != null  && this.mAtomList[atom] != null  ) for (var atomicNo, $atomicNo = 0, $$atomicNo = this.mAtomList[atom]; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (!C$.isAtomicNoOrganic$I(atomicNo)) return false;

}return C$.isAtomicNoOrganic$I(this.mAtomicNo[atom]);
});

Clazz_newMeth(C$, 'isAtomicNoOrganic$I',  function (atomicNo) {
return atomicNo == 1 || (atomicNo >= 5 && atomicNo <= 9 )  || (atomicNo >= 14 && atomicNo <= 17 )  || (atomicNo >= 32 && atomicNo <= 35 )  || (atomicNo >= 52 && atomicNo <= 53 ) ;
}, 1);

Clazz_newMeth(C$, 'removeAtomMapping$Z',  function (keepManualMapping) {
for (var atom=0; atom < this.mAllAtoms; atom++) if (!keepManualMapping || this.mAtomMapNo[atom] < 0 ) this.mAtomMapNo[atom]=0;

});

Clazz_newMeth(C$, 'removeMappingNo$I',  function (mapNo) {
for (var atom=0; atom < this.mAllAtoms; atom++) if (Math.abs(this.mAtomMapNo[atom]) == Math.abs(mapNo)) this.mAtomMapNo[atom]=0;

});

Clazz_newMeth(C$, 'compressMolTable$',  function () {
for (var bnd=0; bnd < this.mAllBonds; bnd++) {
if (this.mBondType[bnd] == 512) {
var atom1=this.mBondAtom[0][bnd];
var atom2=this.mBondAtom[1][bnd];
if (!!(this.mAtomicNo[atom1] == -1 ^ this.mAtomicNo[atom2] == -1)) {
if (this.mAtomCharge[atom1] != 0 && this.mAtomCharge[atom2] != 0 ) {
if (!!(this.mAtomCharge[atom1] < 0 ^ this.mAtomCharge[atom2] < 0)) {
if (this.mAtomCharge[atom1] < 0) {
++this.mAtomCharge[atom1];
--this.mAtomCharge[atom2];
} else {
--this.mAtomCharge[atom1];
++this.mAtomCharge[atom2];
}}}}}}
var newAtmNo=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var atomDest=0;
for (var atom=0; atom < this.mAllAtoms; atom++) {
if (this.mAtomicNo[atom] == -1) {
newAtmNo[atom]=-1;
continue;
}if (atomDest < atom) {
this.mAtomicNo[atomDest]=this.mAtomicNo[atom];
this.mAtomCharge[atomDest]=this.mAtomCharge[atom];
this.mAtomMass[atomDest]=this.mAtomMass[atom];
this.mAtomFlags[atomDest]=this.mAtomFlags[atom];
this.mAtomQueryFeatures[atomDest]=this.mAtomQueryFeatures[atom];
this.mAtomMapNo[atomDest]=this.mAtomMapNo[atom];
this.mCoordinates[atomDest].set$com_actelion_research_chem_Coordinates(this.mCoordinates[atom]);
if (this.mAtomList != null ) this.mAtomList[atomDest]=this.mAtomList[atom];
if (this.mAtomCustomLabel != null ) this.mAtomCustomLabel[atomDest]=this.mAtomCustomLabel[atom];
}newAtmNo[atom]=atomDest;
++atomDest;
}
this.mAllAtoms=atomDest;
var bondDest=0;
for (var bnd=0; bnd < this.mAllBonds; bnd++) {
if (this.mBondType[bnd] == 512) continue;
this.mBondType[bondDest]=this.mBondType[bnd];
this.mBondFlags[bondDest]=this.mBondFlags[bnd];
this.mBondQueryFeatures[bondDest]=this.mBondQueryFeatures[bnd];
this.mBondAtom[0][bondDest]=newAtmNo[this.mBondAtom[0][bnd]];
this.mBondAtom[1][bondDest]=newAtmNo[this.mBondAtom[1][bnd]];
++bondDest;
}
this.mAllBonds=bondDest;
return newAtmNo;
});

Clazz_newMeth(C$, 'polygon$I$I$I$Z$D$D$D',  function (atom, bonds, endAtm, aromatic, actlAngle, angleChange, bondLength) {
var dblBnd;
var actlAtm;
var remoteAtm;
var bnd;
var xdiff;
var ydiff;
var newx;
var newy;
if (atom != endAtm) {
xdiff=this.mCoordinates[atom].x - this.mCoordinates[endAtm].x;
ydiff=this.mCoordinates[atom].y - this.mCoordinates[endAtm].y;
bondLength=Math.sqrt(xdiff * xdiff + ydiff * ydiff);
}actlAtm=atom;
dblBnd=!(p$1.simpleGetValence$I.apply(this, [atom]) == 3);
for (var step=1; step < bonds; step++) {
newx=this.mCoordinates[actlAtm].x + bondLength * Math.sin(actlAngle);
newy=this.mCoordinates[actlAtm].y + bondLength * Math.cos(actlAngle);
remoteAtm=-1;
for (var i=0; i < this.mAllAtoms; i++) {
if ((Math.abs(newx - this.mCoordinates[i].x) < 4 ) && (Math.abs(newy - this.mCoordinates[i].y) < 4 ) ) {
remoteAtm=i;
break;
}}
if (remoteAtm == -1) {
remoteAtm=this.addAtom$D$D(newx, newy);
this.mCoordinates[remoteAtm].x=newx;
this.mCoordinates[remoteAtm].y=newy;
this.mCoordinates[remoteAtm].z=0;
}bnd=p$1.getBondNo$I$I.apply(this, [actlAtm, remoteAtm]);
if (bnd == -1) {
bnd=this.addBond$I$I$I(actlAtm, remoteAtm, this.suggestBondType$I$I(actlAtm, remoteAtm));
if (aromatic) {
if (dblBnd) {
if ((p$1.simpleGetValence$I.apply(this, [this.mBondAtom[0][bnd]]) < 4) && (p$1.simpleGetValence$I.apply(this, [this.mBondAtom[1][bnd]]) < 3) ) this.mBondType[bnd]=2;
}dblBnd=!dblBnd;
}}actlAtm=remoteAtm;
actlAngle+=angleChange;
}
bnd=p$1.getBondNo$I$I.apply(this, [actlAtm, endAtm]);
if (bnd == -1) bnd=this.addBond$I$I$I(actlAtm, endAtm, this.suggestBondType$I$I(actlAtm, endAtm));
if (aromatic) if (dblBnd) if ((p$1.simpleGetValence$I.apply(this, [this.mBondAtom[0][bnd]]) < 4) && (p$1.simpleGetValence$I.apply(this, [this.mBondAtom[1][bnd]]) < 4) ) this.mBondType[bnd]=2;
}, p$1);

Clazz_newMeth(C$, 'getBondNo$I$I',  function (atm1, atm2) {
for (var bnd=0; bnd < this.mAllBonds; bnd++) if (((this.mBondAtom[0][bnd] == atm1) && (this.mBondAtom[1][bnd] == atm2) ) || ((this.mBondAtom[0][bnd] == atm2) && (this.mBondAtom[1][bnd] == atm1) ) ) if (this.mBondType[bnd] != 512) return bnd;

return -1;
}, p$1);

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (stream) {
stream.writeInt$I(this.mAllAtoms);
stream.writeInt$I(this.mAllBonds);
stream.writeBoolean$Z(this.mIsFragment);
for (var atom=0; atom < this.mAllAtoms; atom++) {
stream.writeInt$I(this.mAtomicNo[atom]);
stream.writeInt$I(this.mAtomCharge[atom]);
stream.writeInt$I(this.mAtomMass[atom]);
stream.writeInt$I(this.mAtomFlags[atom] & ~67238927);
stream.writeLong$J(Long.$or((Long.$sl((this.mAtomQueryFeaturesH[atom]),32)),this.mAtomQueryFeatures[atom]));
stream.writeDouble$D(this.mCoordinates[atom].x);
stream.writeDouble$D(this.mCoordinates[atom].y);
stream.writeDouble$D(this.mCoordinates[atom].z);
stream.writeInt$I(this.mAtomMapNo[atom]);
if (this.mAtomList != null  && this.mAtomList[atom] != null  ) {
stream.writeInt$I(this.mAtomList[atom].length);
for (var i=0; i < this.mAtomList[atom].length; i++) stream.writeInt$I(this.mAtomList[atom][i]);

} else stream.writeInt$I(0);
if (this.mAtomCustomLabel != null  && this.mAtomCustomLabel[atom] != null  ) {
stream.writeInt$I(this.mAtomCustomLabel[atom].length);
for (var i=0; i < this.mAtomCustomLabel[atom].length; i++) stream.writeByte$I(this.mAtomCustomLabel[atom][i]);

} else stream.writeInt$I(0);
}
for (var bond=0; bond < this.mAllBonds; bond++) {
stream.writeInt$I(this.mBondAtom[0][bond]);
stream.writeInt$I(this.mBondAtom[1][bond]);
stream.writeInt$I(this.mBondType[bond]);
stream.writeInt$I(this.mBondFlags[bond]);
stream.writeInt$I(this.mBondQueryFeatures[bond]);
}
stream.writeObject$O(this.mName);
}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (stream) {
this.mAllAtoms=stream.readInt$();
this.mAllBonds=stream.readInt$();
this.mMaxAtoms=this.mAllAtoms;
this.mMaxBonds=this.mAllBonds;
p$1.init.apply(this, []);
this.mIsFragment=stream.readBoolean$();
for (var atom=0; atom < this.mAllAtoms; atom++) {
this.mAtomicNo[atom]=stream.readInt$();
this.mAtomCharge[atom]=stream.readInt$();
this.mAtomMass[atom]=stream.readInt$();
this.mAtomFlags[atom]=stream.readInt$();
var features=stream.readLong$();
this.mAtomQueryFeatures[atom]=Long.$ival((Long.$and(features,-1)));
this.mAtomQueryFeaturesH[atom]=Long.$ival((Long.$and((Long.$sr(features,32)),-1)));
this.mCoordinates[atom].set$D$D$D(stream.readDouble$(), stream.readDouble$(), stream.readDouble$());
this.mAtomMapNo[atom]=stream.readInt$();
var count=stream.readInt$();
if (count != 0) {
if (this.mAtomList == null ) this.mAtomList=Clazz_array(Integer.TYPE, [this.mMaxAtoms, null]);
this.mAtomList[atom]=Clazz_array(Integer.TYPE, [count]);
for (var i=0; i < count; i++) this.mAtomList[atom][i]=stream.readInt$();

}count=stream.readInt$();
if (count != 0) {
if (this.mAtomCustomLabel == null ) this.mAtomCustomLabel=Clazz_array(Byte.TYPE, [this.mMaxAtoms, null]);
this.mAtomCustomLabel[atom]=Clazz_array(Byte.TYPE, [count]);
for (var i=0; i < count; i++) this.mAtomCustomLabel[atom][i]=stream.readByte$();

}}
for (var bond=0; bond < this.mAllBonds; bond++) {
this.mBondAtom[0][bond]=stream.readInt$();
this.mBondAtom[1][bond]=stream.readInt$();
this.mBondType[bond]=stream.readInt$();
this.mBondFlags[bond]=stream.readInt$();
this.mBondQueryFeatures[bond]=stream.readInt$();
}
try {
this.mName=stream.readObject$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
this.mValidHelperArrays=0;
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.sDefaultAVBL=24.0;
C$.cAtomLabel=Clazz_array(String, -1, ["?", "H", "He", "Li", "Be", "B", "C", "N", "O", "F", "Ne", "Na", "Mg", "Al", "Si", "P", "S", "Cl", "Ar", "K", "Ca", "Sc", "Ti", "V", "Cr", "Mn", "Fe", "Co", "Ni", "Cu", "Zn", "Ga", "Ge", "As", "Se", "Br", "Kr", "Rb", "Sr", "Y", "Zr", "Nb", "Mo", "Tc", "Ru", "Rh", "Pd", "Ag", "Cd", "In", "Sn", "Sb", "Te", "I", "Xe", "Cs", "Ba", "La", "Ce", "Pr", "Nd", "Pm", "Sm", "Eu", "Gd", "Tb", "Dy", "Ho", "Er", "Tm", "Yb", "Lu", "Hf", "Ta", "W", "Re", "Os", "Ir", "Pt", "Au", "Hg", "Tl", "Pb", "Bi", "Po", "At", "Rn", "Fr", "Ra", "Ac", "Th", "Pa", "U", "Np", "Pu", "Am", "Cm", "Bk", "Cf", "Es", "Fm", "Md", "No", "Lr", "Rf", "Db", "Sg", "Bh", "Hs", "Mt", "Ds", "Rg", "Cn", "Nh", "Fl", "Mc", "Lv", "Ts", "Og", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "R4", "R5", "R6", "R7", "R8", "R9", "R10", "R11", "R12", "R13", "R14", "R15", "R16", "R1", "R2", "R3", "A", "A1", "A2", "A3", "??", "??", "D", "T", "X", "R", "H2", "H+", "Nnn", "HYD", "Pol", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "??", "Ala", "Arg", "Asn", "Asp", "Cys", "Gln", "Glu", "Gly", "His", "Ile", "Leu", "Lys", "Met", "Phe", "Pro", "Ser", "Thr", "Trp", "Tyr", "Val"]);
C$.cRoundedMass=Clazz_array(Short.TYPE, -1, [0, 1, 4, 7, 9, 11, 12, 14, 16, 19, 20, 23, 24, 27, 28, 31, 32, 35, 40, 39, 40, 45, 48, 51, 52, 55, 56, 59, 58, 63, 64, 69, 74, 75, 80, 79, 84, 85, 88, 89, 90, 93, 98, 0, 102, 103, 106, 107, 114, 115, 120, 121, 130, 127, 132, 133, 138, 139, 140, 141, 142, 0, 152, 153, 158, 159, 164, 165, 166, 169, 174, 175, 180, 181, 184, 187, 192, 193, 195, 197, 202, 205, 208, 209, 209, 210, 222, 223, 226, 227, 232, 231, 238, 237, 244, 243, 247, 247, 251, 252, 257, 258, 259, 262, 267, 268, 271, 270, 277, 276, 281, 281, 283, 285, 289, 289, 293, 294, 294, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 156, 114, 115, 103, 128, 129, 57, 137, 113, 113, 128, 131, 147, 97, 87, 101, 186, 163, 99]);
C$.cDefaultAtomValences=Clazz_array(Byte.TYPE, -1, [6]);
C$.cAminoAcidValences=Clazz_array(Byte.TYPE, -1, [2]);
C$.cAtomValence=Clazz_array(Byte.TYPE, -2, [null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [0]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [4]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [0]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [4]), Clazz_array(Byte.TYPE, -1, [3, 5]), Clazz_array(Byte.TYPE, -1, [2, 4, 6]), Clazz_array(Byte.TYPE, -1, [1, 3, 5, 7]), Clazz_array(Byte.TYPE, -1, [0]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), null, null, null, null, null, null, null, null, null, null, Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [3, 5]), Clazz_array(Byte.TYPE, -1, [2, 4, 6]), Clazz_array(Byte.TYPE, -1, [1, 3, 5, 7]), Clazz_array(Byte.TYPE, -1, [0, 2]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), null, null, null, null, null, null, null, null, null, null, Clazz_array(Byte.TYPE, -1, [1, 2, 3]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [3, 5]), Clazz_array(Byte.TYPE, -1, [2, 4, 6]), Clazz_array(Byte.TYPE, -1, [1, 3, 5, 7]), Clazz_array(Byte.TYPE, -1, [0, 2, 4, 6]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [2])]);
C$.cCommonOxidationState=Clazz_array(Byte.TYPE, -2, [null, Clazz_array(Byte.TYPE, -1, [1]), null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), null, null, Clazz_array(Byte.TYPE, -1, [-3]), Clazz_array(Byte.TYPE, -1, [-2]), Clazz_array(Byte.TYPE, -1, [-1]), null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), null, Clazz_array(Byte.TYPE, -1, [-3]), Clazz_array(Byte.TYPE, -1, [-2]), Clazz_array(Byte.TYPE, -1, [-1]), null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 3, 4]), Clazz_array(Byte.TYPE, -1, [2, 3, 4, 5]), Clazz_array(Byte.TYPE, -1, [2, 3, 6]), Clazz_array(Byte.TYPE, -1, [2, 3, 4, 7]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [1, 2]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [-3, 3, 5]), Clazz_array(Byte.TYPE, -1, [-2]), Clazz_array(Byte.TYPE, -1, [-1]), null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [4]), Clazz_array(Byte.TYPE, -1, [3, 5]), Clazz_array(Byte.TYPE, -1, [6]), Clazz_array(Byte.TYPE, -1, [4, 6, 7]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [-3, 3, 5]), Clazz_array(Byte.TYPE, -1, [-2, 4, 6]), Clazz_array(Byte.TYPE, -1, [-1]), null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3, 4]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [4]), Clazz_array(Byte.TYPE, -1, [5]), Clazz_array(Byte.TYPE, -1, [6]), Clazz_array(Byte.TYPE, -1, [4, 6, 7]), Clazz_array(Byte.TYPE, -1, [3, 4]), Clazz_array(Byte.TYPE, -1, [3, 4]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [1, 3]), Clazz_array(Byte.TYPE, -1, [1, 2]), Clazz_array(Byte.TYPE, -1, [1, 3]), Clazz_array(Byte.TYPE, -1, [2, 4]), Clazz_array(Byte.TYPE, -1, [3, 5]), Clazz_array(Byte.TYPE, -1, [-2, 2, 4]), Clazz_array(Byte.TYPE, -1, [-1, 1]), null, Clazz_array(Byte.TYPE, -1, [1]), Clazz_array(Byte.TYPE, -1, [2]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [4]), Clazz_array(Byte.TYPE, -1, [4, 5]), Clazz_array(Byte.TYPE, -1, [3, 4, 5, 6]), Clazz_array(Byte.TYPE, -1, [3, 4, 5, 6]), Clazz_array(Byte.TYPE, -1, [3, 4, 5, 6]), Clazz_array(Byte.TYPE, -1, [3, 4, 5, 6]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3, 4]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [2, 3]), Clazz_array(Byte.TYPE, -1, [3])]);
};
var $b$ = new Int8Array(1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 11:49:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("com.actelion.research.chem"),p$1={},I$=[[0,'java.util.ArrayList','com.actelion.research.chem.Molecule']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "RingCollection");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['mMaxSmallRingSize'],'O',['mMol','com.actelion.research.chem.ExtendedMolecule','mRingAtomSet','java.util.ArrayList','+mRingBondSet','mAtomRingFeatures','int[]','+mBondRingFeatures','+mHeteroPosition','mIsAromatic','boolean[]','+mIsDelocalized']]]

Clazz_newMeth(C$, 'c$$com_actelion_research_chem_ExtendedMolecule$I',  function (mol, mode) {
C$.c$$com_actelion_research_chem_ExtendedMolecule$I$I.apply(this, [mol, mode, 7]);
}, 1);

Clazz_newMeth(C$, 'c$$com_actelion_research_chem_ExtendedMolecule$I$I',  function (mol, mode, maxSmallRingSize) {
;C$.$init$.apply(this);
this.mMol=mol;
this.mMaxSmallRingSize=maxSmallRingSize;
this.mRingAtomSet=Clazz_new_($I$(1,1));
this.mRingBondSet=Clazz_new_($I$(1,1));
this.mAtomRingFeatures=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
this.mBondRingFeatures=Clazz_array(Integer.TYPE, [this.mMol.getBonds$()]);
this.mMol.ensureHelperArrays$I(1);
var isConfirmedChainAtom=Clazz_array(Boolean.TYPE, [this.mMol.getAtoms$()]);
var isConfirmedChainBond=Clazz_array(Boolean.TYPE, [this.mMol.getBonds$()]);
var found;
do {
found=false;
for (var atom=0; atom < this.mMol.getAtoms$(); atom++) {
if (!isConfirmedChainAtom[atom]) {
var potentialRingNeighbours=0;
for (var i=0; i < this.mMol.getConnAtoms$I(atom); i++) if (!isConfirmedChainAtom[this.mMol.getConnAtom$I$I(atom, i)]) ++potentialRingNeighbours;

if (potentialRingNeighbours < 2) {
isConfirmedChainAtom[atom]=true;
for (var i=0; i < this.mMol.getConnAtoms$I(atom); i++) isConfirmedChainBond[this.mMol.getConnBond$I$I(atom, i)]=true;

found=true;
}}}
} while (found);
var startAtom=0;
while ((startAtom < this.mMol.getAtoms$()) && isConfirmedChainAtom[startAtom] )++startAtom;

if (startAtom == this.mMol.getAtoms$()) return;
var graphAtom=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
graphAtom[0]=startAtom;
var parent=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
parent[0]=-1;
var fragmentNo=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
fragmentNo[startAtom]=1;
var current=0;
var highest=0;
var noOfFragments=1;
while (current <= highest){
for (var i=0; i < this.mMol.getConnAtoms$I(graphAtom[current]); i++) {
var candidate=this.mMol.getConnAtom$I$I(graphAtom[current], i);
if (candidate == parent[graphAtom[current]]) continue;
if (fragmentNo[candidate] != 0) {
p$1.addSmallRingsToSet$I$ZA.apply(this, [this.mMol.getConnBond$I$I(graphAtom[current], i), isConfirmedChainAtom]);
continue;
}if (!isConfirmedChainAtom[candidate]) {
fragmentNo[candidate]=noOfFragments;
parent[candidate]=graphAtom[current];
graphAtom[++highest]=candidate;
}}
++current;
if (current > highest) {
for (var atom=0; atom < this.mMol.getAtoms$(); atom++) {
if (fragmentNo[atom] == 0 && !isConfirmedChainAtom[atom] ) {
fragmentNo[atom]=++noOfFragments;
graphAtom[++highest]=atom;
parent[atom]=-1;
break;
}}
}}
if ((mode & 4) != 0) {
this.mIsAromatic=Clazz_array(Boolean.TYPE, [this.mRingAtomSet.size$()]);
this.mIsDelocalized=Clazz_array(Boolean.TYPE, [this.mRingAtomSet.size$()]);
this.mHeteroPosition=Clazz_array(Integer.TYPE, [this.mRingAtomSet.size$()]);
this.determineAromaticity$ZA$ZA$IA$Z(this.mIsAromatic, this.mIsDelocalized, this.mHeteroPosition, (mode & 8) != 0);
p$1.updateAromaticity.apply(this, []);
}if ((mode & 2) != 0) {
for (var bond=0; bond < this.mMol.getBonds$(); bond++) {
if (!isConfirmedChainBond[bond] && this.mMol.getBondOrder$I(bond) != 0 ) {
var ringAtom=p$1.findSmallestRing$I$ZA.apply(this, [bond, isConfirmedChainAtom]);
if (ringAtom != null ) p$1.updateRingSize$IA$IA.apply(this, [ringAtom, p$1.getRingBonds$IA.apply(this, [ringAtom])]);
}}
}}, 1);

Clazz_newMeth(C$, 'findSmallestRing$I$ZA',  function (bond, isConfirmedChainAtom) {
var atom1=this.mMol.getBondAtom$I$I(0, bond);
var atom2=this.mMol.getBondAtom$I$I(1, bond);
var graphAtom=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
var graphLevel=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
var graphParent=Clazz_array(Integer.TYPE, [this.mMol.getAtoms$()]);
graphAtom[0]=atom1;
graphAtom[1]=atom2;
graphLevel[atom1]=1;
graphLevel[atom2]=2;
graphParent[atom1]=-1;
graphParent[atom2]=atom1;
var current=1;
var highest=1;
while (current <= highest){
for (var i=0; i < this.mMol.getConnAtoms$I(graphAtom[current]); i++) {
var candidate=this.mMol.getConnAtom$I$I(graphAtom[current], i);
if ((current > 1) && candidate == atom1 ) {
var ringAtom=Clazz_array(Integer.TYPE, [graphLevel[graphAtom[current]]]);
var atom=graphAtom[current];
for (var j=0; j < ringAtom.length; j++) {
ringAtom[j]=atom;
atom=graphParent[atom];
}
return ringAtom;
}if (graphLevel[candidate] == 0 && !isConfirmedChainAtom[candidate] ) {
graphAtom[++highest]=candidate;
graphLevel[candidate]=graphLevel[graphAtom[current]] + 1;
graphParent[candidate]=graphAtom[current];
}}
++current;
}
return null;
}, p$1);

Clazz_newMeth(C$, 'getAtomRingSize$I',  function (atom) {
return this.mAtomRingFeatures[atom] & 65535;
});

Clazz_newMeth(C$, 'getBondRingSize$I',  function (bond) {
return this.mBondRingFeatures[bond] & 65535;
});

Clazz_newMeth(C$, 'addSmallRingsToSet$I$ZA',  function (closureBond, isConfirmedChainAtom) {
var graphAtom=Clazz_array(Integer.TYPE, [this.mMaxSmallRingSize]);
var connIndex=Clazz_array(Integer.TYPE, [this.mMaxSmallRingSize]);
var isUsed=Clazz_array(Boolean.TYPE, [this.mMol.getAtoms$()]);
var atom1=this.mMol.getBondAtom$I$I(0, closureBond);
var atom2=this.mMol.getBondAtom$I$I(1, closureBond);
graphAtom[0]=atom1;
graphAtom[1]=atom2;
connIndex[1]=-1;
isUsed[atom2]=true;
var current=1;
while (current >= 1){
++connIndex[current];
if (connIndex[current] == this.mMol.getConnAtoms$I(graphAtom[current])) {
isUsed[graphAtom[current]]=false;
--current;
continue;
}var candidate=this.mMol.getConnAtom$I$I(graphAtom[current], connIndex[current]);
if (isUsed[candidate] || isConfirmedChainAtom[candidate] ) continue;
if (candidate == atom1 && current > 1 ) {
p$1.addRingIfNew$IA$I.apply(this, [graphAtom, current + 1]);
if (this.mRingAtomSet.size$() >= 1024) return;
continue;
}if (current + 1 < this.mMaxSmallRingSize) {
++current;
graphAtom[current]=candidate;
isUsed[candidate]=true;
connIndex[current]=-1;
}}
}, p$1);

Clazz_newMeth(C$, 'addRingIfNew$IA$I',  function (ringAtom, ringSize) {
var lowAtom=this.mMol.getMaxAtoms$();
var lowIndex=0;
for (var i=0; i < ringSize; i++) {
if (lowAtom > ringAtom[i]) {
lowAtom=ringAtom[i];
lowIndex=i;
}}
var sortedRing=Clazz_array(Integer.TYPE, [ringSize]);
var leftIndex=(lowIndex > 0) ? lowIndex - 1 : ringSize - 1;
var rightIndex=(lowIndex < ringSize - 1) ? lowIndex + 1 : 0;
var inverse=(ringAtom[leftIndex] < ringAtom[rightIndex]);
for (var i=0; i < ringSize; i++) {
sortedRing[i]=ringAtom[lowIndex];
if (inverse) {
if (--lowIndex < 0) lowIndex=ringSize - 1;
} else {
if (++lowIndex == ringSize) lowIndex=0;
}}
for (var ringOfSet, $ringOfSet = this.mRingAtomSet.iterator$(); $ringOfSet.hasNext$()&&((ringOfSet=($ringOfSet.next$())),1);) {
if (ringOfSet.length == ringSize) {
var equal=true;
for (var j=0; j < ringSize; j++) {
if (ringOfSet[j] != sortedRing[j]) {
equal=false;
break;
}}
if (equal) return;
}}
this.mRingAtomSet.add$O(sortedRing);
var ringBond=p$1.getRingBonds$IA.apply(this, [sortedRing]);
this.mRingBondSet.add$O(ringBond);
p$1.updateRingSize$IA$IA.apply(this, [sortedRing, ringBond]);
}, p$1);

Clazz_newMeth(C$, 'getSize$',  function () {
return this.mRingAtomSet.size$();
});

Clazz_newMeth(C$, 'getRingAtoms$I',  function (ringNo) {
return this.mRingAtomSet.get$I(ringNo);
});

Clazz_newMeth(C$, 'getRingBonds$I',  function (ringNo) {
return this.mRingBondSet.get$I(ringNo);
});

Clazz_newMeth(C$, 'getRingSize$I',  function (ringNo) {
return this.mRingBondSet.get$I(ringNo).length;
});

Clazz_newMeth(C$, 'isAromatic$I',  function (ringNo) {
return this.mIsAromatic[ringNo];
});

Clazz_newMeth(C$, 'isAromaticAtom$I',  function (atom) {
return (this.mAtomRingFeatures[atom] & 65536) != 0;
});

Clazz_newMeth(C$, 'isDelocalizedAtom$I',  function (atom) {
return (this.mAtomRingFeatures[atom] & 131072) != 0;
});

Clazz_newMeth(C$, 'isHeteroAromaticAtom$I',  function (atom) {
return (this.mAtomRingFeatures[atom] & 262144) != 0;
});

Clazz_newMeth(C$, 'isAromaticBond$I',  function (bond) {
return (this.mBondRingFeatures[bond] & 65536) != 0;
});

Clazz_newMeth(C$, 'isDelocalizedBond$I',  function (bond) {
return (this.mBondRingFeatures[bond] & 131072) != 0;
});

Clazz_newMeth(C$, 'isHeteroAromaticBond$I',  function (bond) {
return (this.mBondRingFeatures[bond] & 262144) != 0;
});

Clazz_newMeth(C$, 'isDelocalized$I',  function (ringNo) {
return this.mIsDelocalized[ringNo];
});

Clazz_newMeth(C$, 'getAtomIndex$I$I',  function (ringNo, atom) {
var ringAtom=this.mRingAtomSet.get$I(ringNo);
for (var i=0; i < ringAtom.length; i++) if (atom == ringAtom[i]) return i;

return -1;
});

Clazz_newMeth(C$, 'getBondIndex$I$I',  function (ringNo, bond) {
var ringBond=this.mRingBondSet.get$I(ringNo);
for (var i=0; i < ringBond.length; i++) if (bond == ringBond[i]) return i;

return -1;
});

Clazz_newMeth(C$, 'validateMemberIndex$I$I',  function (ringNo, index) {
var ringSize=this.mRingBondSet.get$I(ringNo).length;
while (index >= ringSize)index-=ringSize;

while (index < 0)index+=ringSize;

return index;
});

Clazz_newMeth(C$, 'getHeteroPosition$I',  function (ringNo) {
return this.mHeteroPosition[ringNo];
});

Clazz_newMeth(C$, 'isAtomMember$I$I',  function (ringNo, atom) {
var ringAtom=this.mRingAtomSet.get$I(ringNo);
for (var i=0; i < ringAtom.length; i++) if (atom == ringAtom[i]) return true;

return false;
});

Clazz_newMeth(C$, 'isBondMember$I$I',  function (ringNo, bond) {
var ringBond=this.mRingBondSet.get$I(ringNo);
for (var i=0; i < ringBond.length; i++) if (bond == ringBond[i]) return true;

return false;
});

Clazz_newMeth(C$, 'getSharedRing$I$I',  function (bond1, bond2) {
for (var i=0; i < this.mRingBondSet.size$(); i++) if (this.isBondMember$I$I(i, bond1) && this.isBondMember$I$I(i, bond2) ) return i;

return -1;
});

Clazz_newMeth(C$, 'updateRingSize$IA$IA',  function (ringAtom, ringBond) {
var ringSize=ringAtom.length;
for (var i=0; i < ringSize; i++) {
var currentSize=this.mAtomRingFeatures[ringAtom[i]] & 65535;
if (currentSize == 0 || currentSize > ringSize ) {
this.mAtomRingFeatures[ringAtom[i]]&=~65535;
this.mAtomRingFeatures[ringAtom[i]]|=ringSize;
}}
for (var i=0; i < ringSize; i++) {
var currentSize=this.mBondRingFeatures[ringBond[i]] & 65535;
if (currentSize == 0 || currentSize > ringSize ) {
this.mBondRingFeatures[ringBond[i]]&=~65535;
this.mBondRingFeatures[ringBond[i]]|=ringSize;
}}
}, p$1);

Clazz_newMeth(C$, 'updateAromaticity',  function () {
for (var ring=0; ring < this.mIsAromatic.length; ring++) {
if (this.mIsAromatic[ring]) {
var isHeteroAromatic=false;
for (var atom, $atom = 0, $$atom = this.mRingAtomSet.get$I(ring); $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) {
this.mAtomRingFeatures[atom]|=65536;
if (p$1.qualifiesAsHeteroAtom$I.apply(this, [atom])) isHeteroAromatic=true;
}
for (var bond, $bond = 0, $$bond = this.mRingBondSet.get$I(ring); $bond<$$bond.length&&((bond=($$bond[$bond])),1);$bond++) this.mBondRingFeatures[bond]|=65536;

if (this.mIsDelocalized[ring]) {
for (var atom, $atom = 0, $$atom = this.mRingAtomSet.get$I(ring); $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) this.mAtomRingFeatures[atom]|=131072;

for (var bond, $bond = 0, $$bond = this.mRingBondSet.get$I(ring); $bond<$$bond.length&&((bond=($$bond[$bond])),1);$bond++) this.mBondRingFeatures[bond]|=131072;

}if (isHeteroAromatic) {
for (var atom, $atom = 0, $$atom = this.mRingAtomSet.get$I(ring); $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) this.mAtomRingFeatures[atom]|=262144;

for (var bond, $bond = 0, $$bond = this.mRingBondSet.get$I(ring); $bond<$$bond.length&&((bond=($$bond[$bond])),1);$bond++) this.mBondRingFeatures[bond]|=262144;

}}}
}, p$1);

Clazz_newMeth(C$, 'qualifiesAsHeteroAtom$I',  function (atom) {
if (this.mMol.isFragment$()) {
if ((this.mMol.getAtomQueryFeatures$I(atom) & 1) != 0) return false;
var atomList=this.mMol.getAtomList$I(atom);
if (atomList != null ) {
for (var atomicNo, $atomicNo = 0, $$atomicNo = atomList; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (!$I$(2).isAtomicNoElectronegative$I(atomicNo)) return false;

return true;
}}return $I$(2,"isAtomicNoElectronegative$I",[this.mMol.getAtomicNo$I(atom)]);
}, p$1);

Clazz_newMeth(C$, 'getRingBonds$IA',  function (ringAtom) {
var ringAtoms=ringAtom.length;
var ringBond=Clazz_array(Integer.TYPE, [ringAtoms]);
for (var i=0; i < ringAtoms; i++) {
var atom=(i == ringAtoms - 1) ? ringAtom[0] : ringAtom[i + 1];
for (var j=0; j < this.mMol.getConnAtoms$I(ringAtom[i]); j++) {
if (this.mMol.getConnAtom$I$I(ringAtom[i], j) == atom) {
ringBond[i]=this.mMol.getConnBond$I$I(ringAtom[i], j);
break;
}}
}
return ringBond;
}, p$1);

Clazz_newMeth(C$, 'determineAromaticity$ZA$ZA$IA$Z',  function (isAromatic, isDelocalized, heteroPosition, includeTautomericBonds) {
var annelatedRing=Clazz_array(Integer.TYPE, [this.mRingAtomSet.size$(), null]);
for (var i=0; i < this.mRingAtomSet.size$(); i++) {
annelatedRing[i]=Clazz_array(Integer.TYPE, [this.mRingAtomSet.get$I(i).length]);
for (var j=0; j < this.mRingAtomSet.get$I(i).length; j++) annelatedRing[i][j]=-1;

}
var ringMembership=Clazz_array(Integer.TYPE, [this.mMol.getBonds$()]);
for (var ring=0; ring < this.mRingBondSet.size$(); ring++) {
var ringBond=this.mRingBondSet.get$I(ring);
if (ringBond.length == 3 || (ringBond.length >= 5 && ringBond.length <= 7 ) ) {
for (var i=0; i < ringBond.length; i++) {
var bond=ringBond[i];
if (this.mMol.getConnAtoms$I(this.mMol.getBondAtom$I$I(0, bond)) == 3 && this.mMol.getConnAtoms$I(this.mMol.getBondAtom$I$I(1, bond)) == 3 ) {
if (ringMembership[bond] > 0) {
annelatedRing[ringMembership[bond] >>> 16][ringMembership[bond] & 32767]=ring;
annelatedRing[ring][i]=(ringMembership[bond] >>> 16);
} else {
ringMembership[bond]=(ring << 16) + 32768 + i ;
}}}
}}
var aromaticityHandled=Clazz_array(Boolean.TYPE, [this.mRingAtomSet.size$()]);
var ringsHandled=0;
var lastRingsHandled=-1;
while (ringsHandled > lastRingsHandled){
lastRingsHandled=ringsHandled;
for (var ring=0; ring < this.mRingAtomSet.size$(); ring++) {
if (!aromaticityHandled[ring]) {
if (p$1.determineAromaticity$I$IAA$ZA$ZA$ZA$IA$Z.apply(this, [ring, annelatedRing, aromaticityHandled, isAromatic, isDelocalized, heteroPosition, includeTautomericBonds])) {
aromaticityHandled[ring]=true;
++ringsHandled;
}}}
}
});

Clazz_newMeth(C$, 'determineAromaticity$I$IAA$ZA$ZA$ZA$IA$Z',  function (ringNo, annelatedRing, aromaticityHandled, isAromatic, isDelocalized, heteroPosition, includeTautomericBonds) {
var ringAtom=this.mRingAtomSet.get$I(ringNo);
for (var atom, $atom = 0, $$atom = ringAtom; $atom<$$atom.length&&((atom=($$atom[$atom])),1);$atom++) if (!p$1.qualifiesAsAromaticAtom$I.apply(this, [atom])) return true;

var ringBond=this.mRingBondSet.get$I(ringNo);
var ringBonds=ringBond.length;
var bondSequence=0;
var aromaticButNotDelocalizedSequence=0;
var unhandledAnnelatedRingFound=false;
for (var i=0; i < ringBonds; i++) {
bondSequence<<=1;
aromaticButNotDelocalizedSequence<<=1;
if (p$1.qualifiesAsPiBond$I.apply(this, [ringBond[i]])) {
bondSequence|=1;
} else if (includeTautomericBonds && this.qualifiesAsAmideTypeBond$I(ringBond[i]) ) {
bondSequence|=1;
aromaticButNotDelocalizedSequence|=1;
} else {
var annelated=annelatedRing[ringNo][i];
if (annelated != -1) {
if (aromaticityHandled[annelated]) {
if (isAromatic[annelated]) {
bondSequence|=1;
if (!isDelocalized[annelated]) aromaticButNotDelocalizedSequence|=1;
}} else {
unhandledAnnelatedRingFound=true;
}}}}
var hasDelocalizationLeak=false;
switch (ringBonds) {
case 3:
var cSequence3Ring=Clazz_array(Integer.TYPE, -1, [2, 1, 4]);
hasDelocalizationLeak=true;
for (var carbeniumPosition=0; carbeniumPosition < 3; carbeniumPosition++) {
if ((bondSequence & cSequence3Ring[carbeniumPosition]) == cSequence3Ring[carbeniumPosition]) {
if ((this.mMol.getAtomicNo$I(ringAtom[carbeniumPosition]) == 6 && this.mMol.getAtomCharge$I(ringAtom[carbeniumPosition]) == 1 ) || (this.mMol.getAtomicNo$I(ringAtom[carbeniumPosition]) == 5 && this.mMol.getAtomCharge$I(ringAtom[carbeniumPosition]) == 0 ) ) {
isAromatic[ringNo]=true;
heteroPosition[ringNo]=carbeniumPosition;
if ((aromaticButNotDelocalizedSequence & cSequence3Ring[carbeniumPosition]) == 0) hasDelocalizationLeak=false;
}}}
break;
case 5:
var cSequence5Ring=Clazz_array(Integer.TYPE, -1, [10, 5, 18, 9, 20]);
hasDelocalizationLeak=true;
for (var position=0; position < 5; position++) {
if ((bondSequence & cSequence5Ring[position]) == cSequence5Ring[position]) {
switch (this.mMol.getAtomicNo$I(ringAtom[position])) {
case 6:
if (this.mMol.getAtomCharge$I(ringAtom[position]) == -1) {
isAromatic[ringNo]=true;
heteroPosition[ringNo]=position;
if ((aromaticButNotDelocalizedSequence & cSequence5Ring[position]) == 0) hasDelocalizationLeak=false;
}break;
case 7:
if (this.mMol.getAtomCharge$I(ringAtom[position]) <= 0) {
isAromatic[ringNo]=true;
heteroPosition[ringNo]=position;
}break;
case 8:
isAromatic[ringNo]=true;
heteroPosition[ringNo]=position;
break;
case 16:
case 34:
case 52:
if (this.mMol.getConnAtoms$I(ringAtom[position]) == 2) {
isAromatic[ringNo]=true;
heteroPosition[ringNo]=position;
}break;
}
}}
break;
case 6:
hasDelocalizationLeak=true;
if ((bondSequence & 21) == 21) {
isAromatic[ringNo]=true;
if ((aromaticButNotDelocalizedSequence & 21) == 0) hasDelocalizationLeak=false;
}if ((bondSequence & 42) == 42) {
isAromatic[ringNo]=true;
if ((aromaticButNotDelocalizedSequence & 42) == 0) hasDelocalizationLeak=false;
}break;
case 7:
var cSequence7Ring=Clazz_array(Integer.TYPE, -1, [42, 21, 74, 37, 82, 41, 84]);
hasDelocalizationLeak=true;
for (var carbeniumPosition=0; carbeniumPosition < 7; carbeniumPosition++) {
if ((bondSequence & cSequence7Ring[carbeniumPosition]) == cSequence7Ring[carbeniumPosition]) {
if ((this.mMol.getAtomicNo$I(ringAtom[carbeniumPosition]) == 6 && (this.mMol.getAtomCharge$I(ringAtom[carbeniumPosition]) == 1 || (includeTautomericBonds && p$1.hasOxo$I.apply(this, [ringAtom[carbeniumPosition]]) ) ) ) || (this.mMol.getAtomicNo$I(ringAtom[carbeniumPosition]) == 5 && this.mMol.getAtomCharge$I(ringAtom[carbeniumPosition]) == 0 ) ) {
isAromatic[ringNo]=true;
heteroPosition[ringNo]=carbeniumPosition;
if ((aromaticButNotDelocalizedSequence & cSequence7Ring[carbeniumPosition]) == 0) hasDelocalizationLeak=false;
}}}
break;
}
if (isAromatic[ringNo] && !hasDelocalizationLeak ) isDelocalized[ringNo]=true;
if (isAromatic[ringNo]) return true;
return !unhandledAnnelatedRingFound;
}, p$1);

Clazz_newMeth(C$, 'hasOxo$I',  function (carbonAtom) {
for (var i=0; i < this.mMol.getConnAtoms$I(carbonAtom); i++) if (this.mMol.getConnBondOrder$I$I(carbonAtom, i) == 2 && this.mMol.getAtomicNo$I(this.mMol.getConnAtom$I$I(carbonAtom, i)) == 8 ) return true;

return false;
}, p$1);

Clazz_newMeth(C$, 'qualifiesAsPiBond$I',  function (bond) {
return (this.mMol.getBondOrder$I(bond) > 1 || this.mMol.getBondType$I(bond) == 8 );
}, p$1);

Clazz_newMeth(C$, 'qualifiesAsAmideTypeBond$I',  function (bond) {
for (var i=0; i < 2; i++) {
var atom1=this.mMol.getBondAtom$I$I(i, bond);
if ((this.mMol.getAtomicNo$I(atom1) == 7) && this.mMol.getConnAtoms$I(atom1) == 2 ) {
var atom2=this.mMol.getBondAtom$I$I(1 - i, bond);
if (this.mMol.getAtomicNo$I(atom2) == 6) {
for (var j=0; j < this.mMol.getConnAtoms$I(atom2); j++) {
var connAtom=this.mMol.getConnAtom$I$I(atom2, j);
var connBond=this.mMol.getConnBond$I$I(atom2, j);
if ((this.mMol.getAtomicNo$I(connAtom) == 8 || this.mMol.getAtomicNo$I(connAtom) == 16 ) && this.mMol.getBondOrder$I(connBond) == 2  && this.mMol.getConnAtoms$I(connAtom) == 1 ) return true;
}
}}}
return false;
});

Clazz_newMeth(C$, 'qualifiesAsAromaticAtom$I',  function (atom) {
if (this.mMol.isFragment$()) {
if ((this.mMol.getAtomQueryFeatures$I(atom) & 1) != 0) {
return true;
} else {
var list=this.mMol.getAtomList$I(atom);
if (list != null ) {
for (var atomicNo, $atomicNo = 0, $$atomicNo = list; $atomicNo<$$atomicNo.length&&((atomicNo=($$atomicNo[$atomicNo])),1);$atomicNo++) if (C$.qualifiesAsAromaticAtomicNo$I(atomicNo)) return true;

return false;
}}}return C$.qualifiesAsAromaticAtomicNo$I(this.mMol.getAtomicNo$I(atom));
}, p$1);

Clazz_newMeth(C$, 'qualifiesAsAromaticAtomicNo$I',  function (atomicNo) {
return atomicNo == 5 || atomicNo == 6  || atomicNo == 7  || atomicNo == 8  || atomicNo == 15  || atomicNo == 16  || atomicNo == 33  || atomicNo == 34 ;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 11:49:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("com.actelion.research.chem"),p$1={},I$=[[0,'com.actelion.research.chem.coords.CoordinateInventor','com.actelion.research.chem.Canonizer']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "StereoMolecule", null, 'com.actelion.research.chem.ExtendedMolecule');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['mAssignParitiesToNitrogen'],'O',['mCanonizer','com.actelion.research.chem.Canonizer']]
,['O',['VALIDATION_ERRORS_STEREO','String[]']]]

Clazz_newMeth(C$, 'setParitiesPreset$Z',  function (b) {
this.mParitiesPreset=b;
});

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (maxAtoms, maxBonds) {
;C$.superclazz.c$$I$I.apply(this,[maxAtoms, maxBonds]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$com_actelion_research_chem_Molecule',  function (mol) {
;C$.superclazz.c$$com_actelion_research_chem_Molecule.apply(this,[mol]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'createMolecule$I$I',  function (atoms, bonds) {
return Clazz_new_(C$.c$$I$I,[atoms, bonds]);
});

Clazz_newMeth(C$, 'clear$',  function () {
C$.superclazz.prototype.clear$.apply(this, []);
this.mCanonizer=null;
});

Clazz_newMeth(C$, 'getCompactCopy$',  function () {
var theCopy=Clazz_new_(C$.c$$I$I,[this.mAllAtoms, this.mAllBonds]);
this.copyMolecule$com_actelion_research_chem_Molecule(theCopy);
return theCopy;
});

Clazz_newMeth(C$, 'copyMoleculeProperties$com_actelion_research_chem_Molecule',  function (destMol) {
C$.superclazz.prototype.copyMoleculeProperties$com_actelion_research_chem_Molecule.apply(this, [destMol]);
if (this.mCanonizer != null ) destMol.mValidHelperArrays=0;
});

Clazz_newMeth(C$, 'getFragments$',  function () {
var fragmentNo=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
var fragments=this.getFragmentNumbers$IA$Z$Z(fragmentNo, false, false);
return this.getFragments$IA$I(fragmentNo, fragments);
});

Clazz_newMeth(C$, 'getFragments$IA$I',  function (fragmentNo, fragmentCount) {
var fragment=Clazz_array(C$, [fragmentCount]);
var atoms=Clazz_array(Integer.TYPE, [fragmentCount]);
var bonds=Clazz_array(Integer.TYPE, [fragmentCount]);
var atomMap=Clazz_array(Integer.TYPE, [this.mAllAtoms]);
for (var atom=0; atom < this.mAllAtoms; atom++) if (fragmentNo[atom] != -1) atomMap[atom]=atoms[fragmentNo[atom]]++;

for (var bond=0; bond < this.mAllBonds; bond++) {
var f1=fragmentNo[this.mBondAtom[0][bond]];
var f2=fragmentNo[this.mBondAtom[1][bond]];
if (f1 == f2 && f1 != -1 ) ++bonds[f1];
}
for (var i=0; i < fragmentCount; i++) {
fragment[i]=this.createMolecule$I$I(atoms[i], bonds[i]);
this.copyMoleculeProperties$com_actelion_research_chem_Molecule(fragment[i]);
}
for (var atom=0; atom < this.mAllAtoms; atom++) if (fragmentNo[atom] != -1) this.copyAtom$com_actelion_research_chem_Molecule$I$I$I(fragment[fragmentNo[atom]], atom, 0, 0);

for (var bond=0; bond < this.mAllBonds; bond++) {
var f1=fragmentNo[this.mBondAtom[0][bond]];
var f2=fragmentNo[this.mBondAtom[1][bond]];
if (f1 == f2 && f1 != -1 ) this.copyBond$com_actelion_research_chem_Molecule$I$I$I$IA$Z(fragment[f1], bond, 0, 0, atomMap, false);
}
for (var f, $f = 0, $$f = fragment; $f<$$f.length&&((f=($$f[$f])),1);$f++) {
f.renumberESRGroups$I(1);
f.renumberESRGroups$I(2);
}
return fragment;
});

Clazz_newMeth(C$, 'ensureHelperArrays$I',  function (required) {
C$.superclazz.prototype.ensureHelperArrays$I.apply(this, [required]);
if ((required & ~this.mValidHelperArrays) == 0) return;
if ((this.mValidHelperArrays & 15) != 0 && (this.mAllAtoms > 1)  && this.mCoordinates[0].equals$O(this.mCoordinates[1]) ) Clazz_new_($I$(1,1).c$$I,[0]).invent$com_actelion_research_chem_StereoMolecule(this);
if (this.mAssignParitiesToNitrogen) required|=128;
var mask=(this.mParitiesPreset ? (67223556) : 67223559);
for (var atom=0; atom < this.getAllAtoms$(); atom++) this.mAtomFlags[atom]&=~mask;

for (var bond=0; bond < this.getBonds$(); bond++) this.mBondFlags[bond]&=~mask;

var rankBits=0;
var rankMode=0;
if ((required & 32) != 0) {
rankBits=32;
rankMode=1;
} else if ((required & 64) != 0) {
rankBits=64;
rankMode=3;
}if ((required & 128) != 0) {
rankBits|=128;
rankMode|=32;
}if (this.mParitiesPreset) {
rankMode|=64;
}this.mCanonizer=Clazz_new_($I$(2,1).c$$com_actelion_research_chem_StereoMolecule$I,[this, rankMode]);
this.mCanonizer.setParities$();
this.mCanonizer.setStereoCenters$();
this.mCanonizer.setCIPParities$();
if (p$1.validateESR.apply(this, [])) this.mCanonizer=Clazz_new_($I$(2,1).c$$com_actelion_research_chem_StereoMolecule$I,[this, rankMode]);
this.mValidHelperArrays|=(8 | 16 | rankBits );
});

Clazz_newMeth(C$, 'validateESR',  function () {
var paritiesUpdated=false;
for (var atom=0; atom < this.getAtoms$(); atom++) if (!this.isAtomStereoCenter$I(atom) || this.getAtomParity$I(atom) == 3 ) this.mAtomFlags[atom]&=~33292288;

for (var bond=0; bond < this.getBonds$(); bond++) if (this.getBondOrder$I(bond) != 1 || this.getBondParity$I(bond) == 0  || this.getBondParity$I(bond) == 3 ) this.mBondFlags[bond]&=~32512;

if (this.mIsRacemate) {
if ((this.mChirality & ~65535) != 131072) {
var isIndependentRacemicAtom=Clazz_array(Boolean.TYPE, [this.getAtoms$()]);
for (var atom=0; atom < this.getAtoms$(); atom++) if (this.isAtomStereoCenter$I(atom) && this.getAtomParity$I(atom) != 3  && this.getAtomESRType$I(atom) == 1 ) isIndependentRacemicAtom[atom]=true;

for (var atom=0; atom < this.getAtoms$(); atom++) {
if (this.isAtomStereoCenter$I(atom) && this.getAtomParity$I(atom) != 3 ) {
this.setAtomESR$I$I$I(atom, 1, 0);
paritiesUpdated=true;
}}
for (var atom=0; atom < this.getAtoms$(); atom++) {
if (isIndependentRacemicAtom[atom]) {
this.setAtomParity$I$I$Z(atom, 1, false);
this.setAtomESR$I$I$I(atom, 1, -1);
paritiesUpdated=true;
}}
}this.mIsRacemate=false;
}this.renumberESRGroups$I(1);
this.renumberESRGroups$I(2);
return paritiesUpdated;
}, p$1);

Clazz_newMeth(C$, 'stripStereoInformation$',  function () {
this.ensureHelperArrays$I(15);
this.mIsRacemate=false;
for (var atom=0; atom < this.mAllAtoms; atom++) {
this.mAtomFlags[atom]&=~33292288;
if ((this.mAtomFlags[atom] & 3) != 0) this.mAtomFlags[atom]|=33554432;
 else this.mAtomFlags[atom]&=~33554432;
}
for (var bond=0; bond < this.mAllBonds; bond++) if ((this.mBondFlags[bond] & 3) != 0 && this.getBondOrder$I(bond) == 2 ) this.mBondType[bond]=386;
 else this.mBondType[bond]&=~384;

this.mValidHelperArrays&=~248;
});

Clazz_newMeth(C$, 'getAbsoluteAtomParity$I',  function (atom) {
return this.mCanonizer.getTHParity$I(atom);
});

Clazz_newMeth(C$, 'getAbsoluteBondParity$I',  function (bond) {
return this.mCanonizer.getEZParity$I(bond);
});

Clazz_newMeth(C$, 'getSymmetryRank$I',  function (atom) {
return this.mCanonizer.getSymmetryRank$I(atom);
});

Clazz_newMeth(C$, 'getIDCode$',  function () {
this.ensureHelperArrays$I(15);
if (this.mCanonizer == null  && (this.getAtoms$() < 2 || !this.mCoordinates[0].equals$O(this.mCoordinates[1]) ) ) this.mCanonizer=Clazz_new_($I$(2,1).c$$com_actelion_research_chem_StereoMolecule,[this]);
return this.mCanonizer == null  ? null : this.mCanonizer.getIDCode$();
});

Clazz_newMeth(C$, 'getIDCoordinates$',  function () {
this.ensureHelperArrays$I(15);
if (this.mCanonizer == null  && (this.getAtoms$() < 2 || !this.mCoordinates[0].equals$O(this.mCoordinates[1]) ) ) this.mCanonizer=Clazz_new_($I$(2,1).c$$com_actelion_research_chem_StereoMolecule,[this]);
return this.mCanonizer == null  ? null : this.mCanonizer.getEncodedCoordinates$();
});

Clazz_newMeth(C$, 'getCanonizer$',  function () {
this.ensureHelperArrays$I(15);
return this.mCanonizer;
});

Clazz_newMeth(C$, 'getStereoCenterCount$',  function () {
this.ensureHelperArrays$I(31);
var scCount=0;
for (var atom=0; atom < this.getAtoms$(); atom++) if (this.getAtomParity$I(atom) != 0 && !this.isAtomParityPseudo$I(atom) ) ++scCount;

return scCount;
});

Clazz_newMeth(C$, 'getESRGroupMemberCounts$',  function () {
this.ensureHelperArrays$I(15);
var maxESRGroup=Clazz_array(Integer.TYPE, [3]);
for (var atom=0; atom < this.getAtoms$(); atom++) {
if (this.isAtomStereoCenter$I(atom)) {
var type=this.getAtomESRType$I(atom);
if (type != 0) maxESRGroup[type]=Math.max(maxESRGroup[type], this.getAtomESRGroup$I(atom));
}}
for (var bond=0; bond < this.getBonds$(); bond++) {
if ((this.getBondParity$I(bond) == 1 || this.getBondParity$I(bond) == 2 ) && this.getBondType$I(bond) == 1 ) {
var type=this.getBondESRType$I(bond);
if (type != 0) maxESRGroup[type]=Math.max(maxESRGroup[type], this.getBondESRGroup$I(bond));
}}
var esrGroupMembers=Clazz_array(Integer.TYPE, [3, null]);
esrGroupMembers[1]=Clazz_array(Integer.TYPE, [1 + maxESRGroup[1]]);
esrGroupMembers[2]=Clazz_array(Integer.TYPE, [1 + maxESRGroup[2]]);
for (var atom=0; atom < this.getAtoms$(); atom++) {
if (this.isAtomStereoCenter$I(atom)) {
var type=this.getAtomESRType$I(atom);
if (type != 0) ++esrGroupMembers[type][this.getAtomESRGroup$I(atom)];
}}
for (var bond=0; bond < this.getBonds$(); bond++) {
if ((this.getBondParity$I(bond) == 1 || this.getBondParity$I(bond) == 2 ) && this.getBondType$I(bond) == 1 ) {
var type=this.getBondESRType$I(bond);
if (type != 0) ++esrGroupMembers[type][this.getBondESRGroup$I(bond)];
}}
return esrGroupMembers;
});

Clazz_newMeth(C$, 'setUnknownParitiesToExplicitlyUnknown$',  function () {
this.ensureHelperArrays$I(31);
if (this.mCanonizer != null ) this.mCanonizer.setUnknownParitiesToExplicitlyUnknown$();
});

Clazz_newMeth(C$, 'setAssignParitiesToNitrogen$Z',  function (b) {
this.mAssignParitiesToNitrogen=b;
this.mValidHelperArrays&=~(143);
});

Clazz_newMeth(C$, 'translateTHParity$I$IA',  function (atom, targetAtomIndex) {
var parity=this.getAtomParity$I(atom);
if (parity == 1 || parity == 2 ) {
var inversion=false;
if (this.isCentralAlleneAtom$I(atom)) {
for (var i=0; i < this.getConnAtoms$I(atom); i++) {
var connAtom=this.getConnAtom$I$I(atom, i);
var neighbours=0;
var neighbour=Clazz_array(Integer.TYPE, [3]);
for (var j=0; j < this.getConnAtoms$I(connAtom); j++) {
neighbour[neighbours]=this.getConnAtom$I$I(connAtom, j);
if (neighbour[neighbours] != atom) ++neighbours;
}
if (!!(neighbours == 2 && !!(((neighbour[0] < neighbour[1])) ^ (targetAtomIndex[neighbour[0]] < targetAtomIndex[neighbour[1]])))) inversion=!inversion;
}
} else {
for (var i=1; i < this.getConnAtoms$I(atom); i++) {
for (var j=0; j < i; j++) {
var connAtom1=this.getConnAtom$I$I(atom, i);
var connAtom2=this.getConnAtom$I$I(atom, j);
if (!!((connAtom1 < connAtom2) ^ (targetAtomIndex[connAtom1] < targetAtomIndex[connAtom2]))) inversion=!inversion;
}
}
}if (inversion) parity=(parity == 1) ? 2 : 1;
}return parity;
});

Clazz_newMeth(C$, 'validate$',  function () {
C$.superclazz.prototype.validate$.apply(this, []);
this.ensureHelperArrays$I(31);
for (var atom=0; atom < this.getAtoms$(); atom++) {
if ((this.getAtomESRType$I(atom) == 1 || this.getAtomESRType$I(atom) == 2 ) && (!this.isAtomStereoCenter$I(atom) || this.getAtomParity$I(atom) == 3 ) ) throw Clazz_new_(Clazz_load('Exception').c$$S,["Members of ESR groups must only be stereo centers with known configuration."]);
if ((this.mAtomFlags[atom] & 65536) != 0) throw Clazz_new_(Clazz_load('Exception').c$$S,["Over- or under-specified stereo feature or more than one racemic type bond"]);
if ((this.getAtomParity$I(atom) == 1 || this.getAtomParity$I(atom) == 2 ) && this.getAtomPi$I(atom) == 0 ) {
var angle=Clazz_array(Double.TYPE, [this.getConnAtoms$I(atom)]);
for (var i=0; i < this.getConnAtoms$I(atom); i++) angle[i]=this.getBondAngle$I$I(atom, this.getConnAtom$I$I(atom, i));

for (var i=1; i < this.getConnAtoms$I(atom); i++) if (!this.isStereoBond$I$I(this.getConnBond$I$I(atom, i), atom)) for (var j=0; j < i; j++) if (!this.isStereoBond$I$I(this.getConnBond$I$I(atom, j), atom)) if (this.bondsAreParallel$D$D(angle[i], angle[j])) throw Clazz_new_(Clazz_load('Exception').c$$S,["Ambiguous configuration at stereo center because of 2 parallel bonds"]);


}}
});

Clazz_newMeth(C$, 'getChiralText$',  function () {
this.ensureHelperArrays$I(31);
var count=this.mChirality & 65535;
switch (this.mChirality & ~65535) {
case 65536:
return null;
case 131072:
return (count == 1) ? "meso" : "" + count + " meso diastereomers" ;
case 0:
return "unknown chirality";
case 196608:
return "both enantiomers";
case 262144:
return "this enantiomer";
case 327680:
return "this or other enantiomer";
case 393216:
return "two epimers";
default:
return (count == 1) ? "one stereo isomer" : "" + count + " stereo isomers" ;
}
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (stream) {
}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (stream) {
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.VALIDATION_ERRORS_STEREO=Clazz_array(String, -1, ["Members of ESR groups must only be stereo centers with known configuration.", "Over- or under-specified stereo feature or more than one racemic type bond", "Ambiguous configuration at stereo center because of 2 parallel bonds"]);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 11:49:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.applet"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "AppletContext");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.applet"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "AppletStub");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.applet"),I$=[[0,'java.net.URL','javax.swing.RepaintManager','sun.applet.AppletAudioClip','java.util.Locale']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSApplet", null, 'java.awt.JSPanel');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['temporaryLostComponent','java.awt.Component','stub','java.applet.AppletStub']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.秘winOrApplet=true;
}, 1);

Clazz_newMeth(C$, 'getClientProperty$O',  function (key) {
return null;
});

Clazz_newMeth(C$, 'isFocusableWindow$',  function () {
return true;
});

Clazz_newMeth(C$, 'getModalBlocker$',  function () {
return null;
});

Clazz_newMeth(C$, 'addWindowListener$java_awt_event_WindowListener',  function (w) {
});

Clazz_newMeth(C$, 'addOwnedWindow$java_awt_Window',  function (w) {
});

Clazz_newMeth(C$, 'removeOwnedWindow$java_awt_Window',  function (weakWindow) {
});

Clazz_newMeth(C$, 'getTemporaryLostComponent$',  function () {
return this.temporaryLostComponent;
});

Clazz_newMeth(C$, 'setTemporaryLostComponent$java_awt_Component',  function (component) {
var previousComp=this.temporaryLostComponent;
if (component == null  || component.canBeFocusOwner$() ) {
this.temporaryLostComponent=component;
} else {
this.temporaryLostComponent=null;
}return previousComp;
});

Clazz_newMeth(C$, 'setStub$java_applet_AppletStub',  function (stub) {
this.stub=stub;
});

Clazz_newMeth(C$, 'isActive$',  function () {
if (this.stub != null ) {
return this.stub.isActive$();
} else {
return false;
}});

Clazz_newMeth(C$, 'getDocumentBase$',  function () {
if (this.stub == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
return this.stub.getDocumentBase$();
});

Clazz_newMeth(C$, 'getCodeBase$',  function () {
if (this.stub != null ) return this.stub.getCodeBase$();
var path=this.getClass$().getName$().replace$CharSequence$CharSequence(".", "/");
try {
return Clazz_new_(["http://./" + path.substring$I$I(0, path.lastIndexOf$S("/") + 1)],$I$(1,1).c$$S);
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getParameter$S',  function (name) {
if (this.stub == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
return this.stub.getParameter$S(name);
});

Clazz_newMeth(C$, 'getAppletContext$',  function () {
if (this.stub == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
return this.stub.getAppletContext$();
});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
if (b) this.秘repaint$();
});

Clazz_newMeth(C$, 'resize$I$I',  function (width, height) {
if (this.stub == null ) this.秘resizeOriginal$I$I(width, height);
});

Clazz_newMeth(C$, 'resizeHTML$I$I',  function (width, height) {
if (this.秘appletViewer != null ) {
this.秘appletViewer.html5Applet._resizeApplet(Clazz_array(Integer.TYPE, -1, [width, height]));
if (this.stub != null ) {
var root=(this).getRootPane$();
root.invalidate$();
$I$(2).currentManager$java_awt_Component(this).addInvalidComponent$javax_swing_JComponent(root);
(this.getUI$()).adjustCanvasForMenuBar$();
}}});

Clazz_newMeth(C$, '秘resizeOriginal$I$I',  function (width, height) {
var d=this.size$();
if ((d.width != width) || (d.height != height) ) {
C$.superclazz.prototype.resize$I$I.apply(this, [width, height]);
if (this.stub != null ) {
this.stub.appletResize$I$I(width, height);
}}});

Clazz_newMeth(C$, 'resize$java_awt_Dimension',  function (d) {
this.resize$I$I(d.width, d.height);
});

Clazz_newMeth(C$, 'showStatus$S',  function (msg) {
this.getAppletContext$().showStatus$S(msg);
});

Clazz_newMeth(C$, 'getImage$java_net_URL',  function (url) {
return this.getAppletContext$().getImage$java_net_URL(url);
});

Clazz_newMeth(C$, 'getImage$java_net_URL$S',  function (url, name) {
try {
return this.getImage$java_net_URL(Clazz_new_($I$(1,1).c$$java_net_URL$S,[url, name]));
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'newAudioClip$java_net_URL',  function (url) {
return Clazz_new_($I$(3,1).c$$java_net_URL,[url]);
}, 1);

Clazz_newMeth(C$, 'getAudioClip$java_net_URL',  function (url) {
return this.getAppletContext$().getAudioClip$java_net_URL(url);
});

Clazz_newMeth(C$, 'getAudioClip$java_net_URL$S',  function (url, name) {
try {
return this.getAudioClip$java_net_URL(Clazz_new_($I$(1,1).c$$java_net_URL$S,[url, name]));
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getAppletInfo$',  function () {
return null;
});

Clazz_newMeth(C$, 'getLocale$',  function () {
var locale=C$.superclazz.prototype.getLocale$.apply(this, []);
if (locale == null ) {
return $I$(4).getDefault$();
}return locale;
});

Clazz_newMeth(C$, 'getParameterInfo$',  function () {
return null;
});

Clazz_newMeth(C$, 'play$java_net_URL',  function (url) {
var clip=this.getAudioClip$java_net_URL(url);
if (clip != null ) {
clip.play$();
}});

Clazz_newMeth(C$, 'play$java_net_URL$S',  function (url, name) {
var clip=this.getAudioClip$java_net_URL$S(url, name);
if (clip != null ) {
clip.play$();
}});

Clazz_newMeth(C$, 'init$',  function () {
});

Clazz_newMeth(C$, 'start$',  function () {
});

Clazz_newMeth(C$, 'stop$',  function () {
});

Clazz_newMeth(C$, 'destroy$',  function () {
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "AWTEvent", null, 'java.util.EventObject');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.consumed=false;
this.focusManagerIsDispatching=false;
},1);

C$.$fields$=[['Z',['consumed','focusManagerIsDispatching','isPosted'],'I',['id','num'],'O',['bdata','byte[]']]
,['I',['idnum']]]

Clazz_newMeth(C$, 'setPosted$',  function () {
this.isPosted=true;
});

Clazz_newMeth(C$, 'getBData$',  function () {
return this.bdata;
});

Clazz_newMeth(C$, 'setBData$BA',  function (bdata) {
this.bdata=bdata;
});

Clazz_newMeth(C$, 'c$$java_awt_Event',  function (event) {
C$.c$$O$I.apply(this, [event.target, event.id]);
}, 1);

Clazz_newMeth(C$, 'c$$O$I',  function (source, id) {
;C$.superclazz.c$$O.apply(this,[source]);C$.$init$.apply(this);
this.id=id;
this.num=++C$.idnum;
switch (id) {
case 1001:
case 701:
case 601:
case 900:
this.consumed=true;
break;
default:
}
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$O.apply(this,[null]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setSource$O',  function (newSource) {
if (this.source === newSource ) {
return;
}var comp=null;
if (Clazz_instanceOf(newSource, "java.awt.Component")) {
comp=newSource;
while (comp != null  && comp.peer != null   && (Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer")) ){
comp=comp.parent;
}
}this.source=newSource;
});

Clazz_newMeth(C$, 'getID$',  function () {
return this.id;
});

Clazz_newMeth(C$, 'toString',  function () {
var srcName=null;
if (Clazz_instanceOf(this.source, "java.awt.Component")) {
srcName=(this.source).getName$();
}return this.getClass$().getName$() + "[" + this.paramString$() + "] on " + (srcName != null  ? srcName : this.source) ;
});

Clazz_newMeth(C$, 'paramString$',  function () {
return "";
});

Clazz_newMeth(C$, 'consume$',  function () {
switch (this.id) {
case 401:
case 402:
case 501:
case 502:
case 503:
case 506:
case 504:
case 505:
case 507:
case 1100:
case 1101:
this.consumed=true;
break;
default:
}
});

Clazz_newMeth(C$, 'isConsumed$',  function () {
return this.consumed;
});

Clazz_newMeth(C$, 'copyPrivateDataInto$java_awt_AWTEvent',  function (that) {
that.bdata=this.bdata;
});

Clazz_newMeth(C$, 'dispatched$',  function () {
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "AWTEventMulticaster", null, null, ['java.awt.event.ComponentListener', 'java.awt.event.ContainerListener', 'java.awt.event.FocusListener', 'java.awt.event.KeyListener', 'java.awt.event.MouseListener', 'java.awt.event.MouseMotionListener', 'java.awt.event.WindowListener', 'java.awt.event.WindowFocusListener', 'java.awt.event.WindowStateListener', 'java.awt.event.ActionListener', 'java.awt.event.ItemListener', 'java.awt.event.AdjustmentListener', 'java.awt.event.TextListener', 'java.awt.event.InputMethodListener', 'java.awt.event.HierarchyListener', 'java.awt.event.HierarchyBoundsListener', 'java.awt.event.MouseWheelListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['a','java.util.EventListener','+b']]]

Clazz_newMeth(C$, 'c$$java_util_EventListener$java_util_EventListener',  function (a, b) {
;C$.$init$.apply(this);
this.a=a;
this.b=b;
}, 1);

Clazz_newMeth(C$, 'remove$java_util_EventListener',  function (oldl) {
if (oldl === this.a ) return this.b;
if (oldl === this.b ) return this.a;
var a2=C$.removeInternal$java_util_EventListener$java_util_EventListener(this.a, oldl);
var b2=C$.removeInternal$java_util_EventListener$java_util_EventListener(this.b, oldl);
if (a2 === this.a  && b2 === this.b  ) {
return this;
}return C$.addInternal$java_util_EventListener$java_util_EventListener(a2, b2);
});

Clazz_newMeth(C$, 'componentResized$java_awt_event_ComponentEvent',  function (e) {
(this.a).componentResized$java_awt_event_ComponentEvent(e);
(this.b).componentResized$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentMoved$java_awt_event_ComponentEvent',  function (e) {
(this.a).componentMoved$java_awt_event_ComponentEvent(e);
(this.b).componentMoved$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentShown$java_awt_event_ComponentEvent',  function (e) {
(this.a).componentShown$java_awt_event_ComponentEvent(e);
(this.b).componentShown$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentHidden$java_awt_event_ComponentEvent',  function (e) {
(this.a).componentHidden$java_awt_event_ComponentEvent(e);
(this.b).componentHidden$java_awt_event_ComponentEvent(e);
});

Clazz_newMeth(C$, 'componentAdded$java_awt_event_ContainerEvent',  function (e) {
(this.a).componentAdded$java_awt_event_ContainerEvent(e);
(this.b).componentAdded$java_awt_event_ContainerEvent(e);
});

Clazz_newMeth(C$, 'componentRemoved$java_awt_event_ContainerEvent',  function (e) {
(this.a).componentRemoved$java_awt_event_ContainerEvent(e);
(this.b).componentRemoved$java_awt_event_ContainerEvent(e);
});

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent',  function (e) {
(this.a).focusGained$java_awt_event_FocusEvent(e);
(this.b).focusGained$java_awt_event_FocusEvent(e);
});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent',  function (e) {
(this.a).focusLost$java_awt_event_FocusEvent(e);
(this.b).focusLost$java_awt_event_FocusEvent(e);
});

Clazz_newMeth(C$, 'keyTyped$java_awt_event_KeyEvent',  function (e) {
(this.a).keyTyped$java_awt_event_KeyEvent(e);
(this.b).keyTyped$java_awt_event_KeyEvent(e);
});

Clazz_newMeth(C$, 'keyPressed$java_awt_event_KeyEvent',  function (e) {
(this.a).keyPressed$java_awt_event_KeyEvent(e);
(this.b).keyPressed$java_awt_event_KeyEvent(e);
});

Clazz_newMeth(C$, 'keyReleased$java_awt_event_KeyEvent',  function (e) {
(this.a).keyReleased$java_awt_event_KeyEvent(e);
(this.b).keyReleased$java_awt_event_KeyEvent(e);
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
(this.a).mouseClicked$java_awt_event_MouseEvent(e);
(this.b).mouseClicked$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
(this.a).mousePressed$java_awt_event_MouseEvent(e);
(this.b).mousePressed$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
(this.a).mouseReleased$java_awt_event_MouseEvent(e);
(this.b).mouseReleased$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
(this.a).mouseEntered$java_awt_event_MouseEvent(e);
(this.b).mouseEntered$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
(this.a).mouseExited$java_awt_event_MouseEvent(e);
(this.b).mouseExited$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent',  function (e) {
(this.a).mouseDragged$java_awt_event_MouseEvent(e);
(this.b).mouseDragged$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent',  function (e) {
(this.a).mouseMoved$java_awt_event_MouseEvent(e);
(this.b).mouseMoved$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent',  function (e) {
(this.a).windowOpened$java_awt_event_WindowEvent(e);
(this.b).windowOpened$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent',  function (e) {
(this.a).windowClosing$java_awt_event_WindowEvent(e);
(this.b).windowClosing$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent',  function (e) {
(this.a).windowClosed$java_awt_event_WindowEvent(e);
(this.b).windowClosed$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent',  function (e) {
(this.a).windowIconified$java_awt_event_WindowEvent(e);
(this.b).windowIconified$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent',  function (e) {
(this.a).windowDeiconified$java_awt_event_WindowEvent(e);
(this.b).windowDeiconified$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent',  function (e) {
(this.a).windowActivated$java_awt_event_WindowEvent(e);
(this.b).windowActivated$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent',  function (e) {
(this.a).windowDeactivated$java_awt_event_WindowEvent(e);
(this.b).windowDeactivated$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowStateChanged$java_awt_event_WindowEvent',  function (e) {
(this.a).windowStateChanged$java_awt_event_WindowEvent(e);
(this.b).windowStateChanged$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowGainedFocus$java_awt_event_WindowEvent',  function (e) {
(this.a).windowGainedFocus$java_awt_event_WindowEvent(e);
(this.b).windowGainedFocus$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'windowLostFocus$java_awt_event_WindowEvent',  function (e) {
(this.a).windowLostFocus$java_awt_event_WindowEvent(e);
(this.b).windowLostFocus$java_awt_event_WindowEvent(e);
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
(this.a).actionPerformed$java_awt_event_ActionEvent(e);
(this.b).actionPerformed$java_awt_event_ActionEvent(e);
});

Clazz_newMeth(C$, 'itemStateChanged$java_awt_event_ItemEvent',  function (e) {
(this.a).itemStateChanged$java_awt_event_ItemEvent(e);
(this.b).itemStateChanged$java_awt_event_ItemEvent(e);
});

Clazz_newMeth(C$, 'adjustmentValueChanged$java_awt_event_AdjustmentEvent',  function (e) {
(this.a).adjustmentValueChanged$java_awt_event_AdjustmentEvent(e);
(this.b).adjustmentValueChanged$java_awt_event_AdjustmentEvent(e);
});

Clazz_newMeth(C$, 'textValueChanged$java_awt_event_TextEvent',  function (e) {
(this.a).textValueChanged$java_awt_event_TextEvent(e);
(this.b).textValueChanged$java_awt_event_TextEvent(e);
});

Clazz_newMeth(C$, 'inputMethodTextChanged$java_awt_event_InputMethodEvent',  function (e) {
(this.a).inputMethodTextChanged$java_awt_event_InputMethodEvent(e);
(this.b).inputMethodTextChanged$java_awt_event_InputMethodEvent(e);
});

Clazz_newMeth(C$, 'caretPositionChanged$java_awt_event_InputMethodEvent',  function (e) {
(this.a).caretPositionChanged$java_awt_event_InputMethodEvent(e);
(this.b).caretPositionChanged$java_awt_event_InputMethodEvent(e);
});

Clazz_newMeth(C$, 'hierarchyChanged$java_awt_event_HierarchyEvent',  function (e) {
(this.a).hierarchyChanged$java_awt_event_HierarchyEvent(e);
(this.b).hierarchyChanged$java_awt_event_HierarchyEvent(e);
});

Clazz_newMeth(C$, 'ancestorMoved$java_awt_event_HierarchyEvent',  function (e) {
(this.a).ancestorMoved$java_awt_event_HierarchyEvent(e);
(this.b).ancestorMoved$java_awt_event_HierarchyEvent(e);
});

Clazz_newMeth(C$, 'ancestorResized$java_awt_event_HierarchyEvent',  function (e) {
(this.a).ancestorResized$java_awt_event_HierarchyEvent(e);
(this.b).ancestorResized$java_awt_event_HierarchyEvent(e);
});

Clazz_newMeth(C$, 'mouseWheelMoved$java_awt_event_MouseWheelEvent',  function (e) {
(this.a).mouseWheelMoved$java_awt_event_MouseWheelEvent(e);
(this.b).mouseWheelMoved$java_awt_event_MouseWheelEvent(e);
});

Clazz_newMeth(C$, 'add$java_awt_event_ComponentListener$java_awt_event_ComponentListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_ContainerListener$java_awt_event_ContainerListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_FocusListener$java_awt_event_FocusListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_KeyListener$java_awt_event_KeyListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_MouseListener$java_awt_event_MouseListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_WindowListener$java_awt_event_WindowListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_ActionListener$java_awt_event_ActionListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_ItemListener$java_awt_event_ItemListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_AdjustmentListener$java_awt_event_AdjustmentListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_TextListener$java_awt_event_TextListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_HierarchyListener$java_awt_event_HierarchyListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener',  function (a, b) {
return C$.addInternal$java_util_EventListener$java_util_EventListener(a, b);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ComponentListener$java_awt_event_ComponentListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ContainerListener$java_awt_event_ContainerListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_FocusListener$java_awt_event_FocusListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_KeyListener$java_awt_event_KeyListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_MouseListener$java_awt_event_MouseListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_WindowListener$java_awt_event_WindowListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ActionListener$java_awt_event_ActionListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_ItemListener$java_awt_event_ItemListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_AdjustmentListener$java_awt_event_AdjustmentListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_TextListener$java_awt_event_TextListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_HierarchyListener$java_awt_event_HierarchyListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener',  function (l, oldl) {
return C$.removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'addInternal$java_util_EventListener$java_util_EventListener',  function (a, b) {
if (a == null ) return b;
if (b == null ) return a;
return Clazz_new_(C$.c$$java_util_EventListener$java_util_EventListener,[a, b]);
}, 1);

Clazz_newMeth(C$, 'removeInternal$java_util_EventListener$java_util_EventListener',  function (l, oldl) {
if (l === oldl  || l == null  ) {
return null;
} else if (Clazz_instanceOf(l, "java.awt.AWTEventMulticaster")) {
return (l).remove$java_util_EventListener(oldl);
} else {
return l;
}}, 1);

Clazz_newMeth(C$, 'getListenerCount$java_util_EventListener$Class',  function (l, listenerType) {
if (Clazz_instanceOf(l, "java.awt.AWTEventMulticaster")) {
var mc=l;
return C$.getListenerCount$java_util_EventListener$Class(mc.a, listenerType) + C$.getListenerCount$java_util_EventListener$Class(mc.b, listenerType);
} else {
return listenerType.isInstance$O(l) ? 1 : 0;
}}, 1);

Clazz_newMeth(C$, 'populateListenerArray$java_util_EventListenerA$java_util_EventListener$I',  function (a, l, index) {
if (Clazz_instanceOf(l, "java.awt.AWTEventMulticaster")) {
var mc=l;
var lhs=C$.populateListenerArray$java_util_EventListenerA$java_util_EventListener$I(a, mc.a, index);
return C$.populateListenerArray$java_util_EventListenerA$java_util_EventListener$I(a, mc.b, lhs);
} else if (a.getClass$().getComponentType$().isInstance$O(l)) {
a[index]=l;
return index + 1;
} else {
return index;
}}, 1);

Clazz_newMeth(C$, 'getListeners$java_util_EventListener$Class',  function (l, listenerType) {
if (listenerType == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Listener type should not be null"]);
}var n=C$.getListenerCount$java_util_EventListener$Class(l, listenerType);
var result=Clazz_array(listenerType, n);
C$.populateListenerArray$java_util_EventListenerA$java_util_EventListener$I(result, l, 0);
return result;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'sun.awt.AppContext','java.util.HashMap','java.util.StringTokenizer','java.util.Collections','java.awt.VKCollection','StringBuilder']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AWTKeyStroke");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.keyChar="\uffff";
this.keyCode=0;
},1);

C$.$fields$=[['Z',['onKeyRelease'],'C',['keyChar'],'I',['keyCode','modifiers']]
,['S',['APP_CONTEXT_CACHE_KEY','APP_CONTEXT_KEYSTROKE_KEY'],'O',['modifierKeywords','java.util.Map','vks','java.awt.VKCollection']]]

Clazz_newMeth(C$, 'getAWTKeyStrokeClass$',  function () {
var clazz=$I$(1).getAppContext$().get$O(Clazz_getClass(C$));
if (clazz == null ) {
clazz=Clazz_getClass(C$);
$I$(1).getAppContext$().put$O$O(Clazz_getClass(C$), Clazz_getClass(C$));
}return clazz;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$C$I$I$Z',  function (keyChar, keyCode, modifiers, onKeyRelease) {
;C$.$init$.apply(this);
this.keyChar=keyChar;
this.keyCode=keyCode;
this.modifiers=modifiers;
this.onKeyRelease=onKeyRelease;
}, 1);

Clazz_newMeth(C$, 'registerSubclass$Class',  function (subclass) {
if (subclass == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["subclass cannot be null"]);
}{
var keyStrokeClass=$I$(1).getAppContext$().get$O(Clazz_getClass(C$));
if (keyStrokeClass != null  && keyStrokeClass.equals$O(subclass) ) {
return;
}}if (!Clazz_getClass(C$).isAssignableFrom$Class(subclass)) {
throw Clazz_new_(Clazz_load('ClassCastException').c$$S,["subclass is not derived from AWTKeyStroke"]);
}var stroke=null;
try {
stroke=subclass.newInstance$();
} catch (t) {
}
if (stroke == null ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["AWTKeystroke subclass could not be instantiated"]);
{
$I$(1).getAppContext$().put$O$O(Clazz_getClass(C$), subclass);
$I$(1).getAppContext$().remove$O(C$.APP_CONTEXT_CACHE_KEY);
$I$(1).getAppContext$().remove$O(C$.APP_CONTEXT_KEYSTROKE_KEY);
}}, 1);

Clazz_newMeth(C$, 'getCachedStroke$C$I$I$Z',  function (keyChar, keyCode, modifiers, onKeyRelease) {
var cache=$I$(1).getAppContext$().get$O(C$.APP_CONTEXT_CACHE_KEY);
var cacheKey=$I$(1).getAppContext$().get$O(C$.APP_CONTEXT_KEYSTROKE_KEY);
if (cache == null ) {
cache=Clazz_new_($I$(2,1));
$I$(1).getAppContext$().put$O$O(C$.APP_CONTEXT_CACHE_KEY, cache);
}if (cacheKey == null ) {
try {
cacheKey=C$.getAWTKeyStrokeClass$().newInstance$();
} catch (t) {
}
}cacheKey.keyChar=keyChar;
cacheKey.keyCode=keyCode;
cacheKey.modifiers=C$.mapNewModifiers$I(C$.mapOldModifiers$I(modifiers));
cacheKey.onKeyRelease=onKeyRelease;
var stroke=cache.get$O(cacheKey.秘toString$());
if (stroke == null ) {
stroke=cacheKey;
cache.put$O$O(stroke.秘toString$(), stroke);
$I$(1).getAppContext$().remove$O(C$.APP_CONTEXT_KEYSTROKE_KEY);
}return stroke;
}, 1);

Clazz_newMeth(C$, 'getAWTKeyStroke$C',  function (keyChar) {
return C$.getCachedStroke$C$I$I$Z(keyChar, 0, 0, false);
}, 1);

Clazz_newMeth(C$, 'getAWTKeyStroke$Character$I',  function (keyChar, modifiers) {
if (keyChar == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["keyChar cannot be null"]);
}return C$.getCachedStroke$C$I$I$Z(keyChar.charValue$(), 0, modifiers, false);
}, 1);

Clazz_newMeth(C$, 'getAWTKeyStroke$I$I$Z',  function (keyCode, modifiers, onKeyRelease) {
return C$.getCachedStroke$C$I$I$Z("\uffff", keyCode, modifiers, onKeyRelease);
}, 1);

Clazz_newMeth(C$, 'getAWTKeyStroke$I$I',  function (keyCode, modifiers) {
return C$.getCachedStroke$C$I$I$Z("\uffff", keyCode, modifiers, false);
}, 1);

Clazz_newMeth(C$, 'getAWTKeyStrokeForEvent$java_awt_event_KeyEvent',  function (anEvent) {
var id=anEvent.getID$();
switch (id) {
case 401:
case 402:
return C$.getCachedStroke$C$I$I$Z("\uffff", anEvent.getKeyCode$(), anEvent.getModifiers$(), (id == 402));
case 400:
return C$.getCachedStroke$C$I$I$Z(anEvent.getKeyChar$(), 0, anEvent.getModifiers$(), false);
default:
return null;
}
}, 1);

Clazz_newMeth(C$, 'getAWTKeyStroke$S',  function (s) {
if (s == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["String cannot be null"]);
}var errmsg="String formatted incorrectly";
var st=Clazz_new_($I$(3,1).c$$S$S,[s, " "]);
var mask=0;
var released=false;
var typed=false;
var pressed=false;
{
if (C$.modifierKeywords == null ) {
var uninitializedMap=Clazz_new_($I$(2,1).c$$I$F,[8, 1.0]);
uninitializedMap.put$O$O("shift", Integer.valueOf$I(65));
uninitializedMap.put$O$O("control", Integer.valueOf$I(130));
uninitializedMap.put$O$O("ctrl", Integer.valueOf$I(130));
uninitializedMap.put$O$O("meta", Integer.valueOf$I(260));
uninitializedMap.put$O$O("alt", Integer.valueOf$I(520));
uninitializedMap.put$O$O("altGraph", Integer.valueOf$I(8224));
uninitializedMap.put$O$O("button1", Integer.valueOf$I(1024));
uninitializedMap.put$O$O("button2", Integer.valueOf$I(2048));
uninitializedMap.put$O$O("button3", Integer.valueOf$I(4096));
C$.modifierKeywords=$I$(4).synchronizedMap$java_util_Map(uninitializedMap);
}}var count=st.countTokens$();
for (var i=1; i <= count; i++) {
var token=st.nextToken$();
if (typed) {
if (token.length$() != 1 || i != count ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["String formatted incorrectly"]);
}return C$.getCachedStroke$C$I$I$Z(token.charAt$I(0), 0, mask, false);
}if (pressed || released || i == count  ) {
if (i != count) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["String formatted incorrectly"]);
}var keyCodeName="VK_" + token;
var keyCode=C$.getVKValue$S(keyCodeName);
return C$.getCachedStroke$C$I$I$Z("\uffff", keyCode, mask, released);
}if (token.equals$O("released")) {
released=true;
continue;
}if (token.equals$O("pressed")) {
pressed=true;
continue;
}if (token.equals$O("typed")) {
typed=true;
continue;
}var tokenMask=C$.modifierKeywords.get$O(token);
if (tokenMask != null ) {
mask|=tokenMask.intValue$();
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["String formatted incorrectly"]);
}}
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["String formatted incorrectly"]);
}, 1);

Clazz_newMeth(C$, 'getVKCollection$',  function () {
return (C$.vks == null  ? (C$.vks=Clazz_new_($I$(5,1))) : C$.vks);
}, 1);

Clazz_newMeth(C$, 'addKeyCode$S$I',  function (key, keyCode) {
C$.getVKCollection$().put$S$Integer(key, Integer.valueOf$I(keyCode));
}, 1);

Clazz_newMeth(C$, 'getVKValue$S',  function (key) {
var vkCollect=C$.getVKCollection$();
var value=vkCollect.findCode$S(key);
if (value == null ) {
vkCollect.put$S$Integer(key, Integer.valueOf$I(-1));
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["String formatted incorrectly"]);
}return value.intValue$();
}, 1);

Clazz_newMeth(C$, 'getKeyChar$',  function () {
return this.keyChar;
});

Clazz_newMeth(C$, 'getKeyCode$',  function () {
return this.keyCode;
});

Clazz_newMeth(C$, 'getModifiers$',  function () {
return this.modifiers;
});

Clazz_newMeth(C$, 'isOnKeyRelease$',  function () {
return this.onKeyRelease;
});

Clazz_newMeth(C$, 'getKeyEventType$',  function () {
if (this.keyCode == 0) {
return 400;
} else {
return (this.onKeyRelease) ? 402 : 401;
}});

Clazz_newMeth(C$, 'hashCode$',  function () {
return ((this.keyChar.$c()) + 1) * (2 * (this.keyCode + 1)) * (this.modifiers + 1)  + (this.onKeyRelease ? 1 : 2);
});

Clazz_newMeth(C$, 'equals$O',  function (anObject) {
if (Clazz_instanceOf(anObject, "java.awt.AWTKeyStroke")) {
var ks=anObject;
return (ks.keyChar == this.keyChar && ks.keyCode == this.keyCode  && ks.onKeyRelease == this.onKeyRelease   && ks.modifiers == this.modifiers );
}return false;
});

Clazz_newMeth(C$, 'toString',  function () {
return (this.keyCode == 0 ? C$.getModifiersText$I(this.modifiers) + "typed " + this.keyChar  : C$.getModifiersText$I(this.modifiers) + (this.onKeyRelease ? "released" : "pressed") + " " + C$.getVKText$I(this.keyCode) );
});

Clazz_newMeth(C$, '秘toString$',  function () {
if (this.keyCode == 0) {
return C$.getModifiersText$I(this.modifiers) + "typed " + this.keyChar ;
} else {
return C$.getModifiersText$I(this.modifiers) + (this.onKeyRelease ? "released" : "pressed") + " " + this.keyCode ;
}});

Clazz_newMeth(C$, 'getModifiersText$I',  function (modifiers) {
var buf=Clazz_new_($I$(6,1));
if ((modifiers & 64) != 0) {
buf.append$S("shift ");
}if ((modifiers & 128) != 0) {
buf.append$S("ctrl ");
}if ((modifiers & 256) != 0) {
buf.append$S("meta ");
}if ((modifiers & 512) != 0) {
buf.append$S("alt ");
}if ((modifiers & 8192) != 0) {
buf.append$S("altGraph ");
}if ((modifiers & 1024) != 0) {
buf.append$S("button1 ");
}if ((modifiers & 2048) != 0) {
buf.append$S("button2 ");
}if ((modifiers & 4096) != 0) {
buf.append$S("button3 ");
}return buf.toString();
}, 1);

Clazz_newMeth(C$, 'getVKText$I',  function (keyCode) {
var key=Integer.valueOf$I(keyCode);
var name=C$.getVKCollection$().findName$Integer(key);
return (name == null  ? "UNKNOWN" : name.substring$I(3));
}, 1);

Clazz_newMeth(C$, 'readResolve$',  function () {
{
var newClass=this.getClass$();
var awtKeyStrokeClass=C$.getAWTKeyStrokeClass$();
if (!newClass.equals$O(awtKeyStrokeClass)) {
C$.registerSubclass$Class(newClass);
}return C$.getCachedStroke$C$I$I$Z(this.keyChar, this.keyCode, this.modifiers, this.onKeyRelease);
}});

Clazz_newMeth(C$, 'mapOldModifiers$I',  function (modifiers) {
if ((modifiers & 1) != 0) {
modifiers|=64;
}if ((modifiers & 8) != 0) {
modifiers|=512;
}if ((modifiers & 32) != 0) {
modifiers|=8192;
}if ((modifiers & 2) != 0) {
modifiers|=128;
}if ((modifiers & 4) != 0) {
modifiers|=256;
}modifiers&=16320;
return modifiers;
}, 1);

Clazz_newMeth(C$, 'mapNewModifiers$I',  function (modifiers) {
if ((modifiers & 64) != 0) {
modifiers|=1;
}if ((modifiers & 512) != 0) {
modifiers|=8;
}if ((modifiers & 8192) != 0) {
modifiers|=32;
}if ((modifiers & 128) != 0) {
modifiers|=2;
}if ((modifiers & 256) != 0) {
modifiers|=4;
}return modifiers;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.APP_CONTEXT_CACHE_KEY="AWTKeyStroke_CACHE_KEY";
C$.APP_CONTEXT_KEYSTROKE_KEY="AWTKeyStroke_KEYSTROKE_KEY";
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ActiveEvent");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.util.Arrays']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BasicStroke", null, null, ['java.awt.Stroke', 'Cloneable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['F',['width','miterlimit','dash_phase'],'I',['join','cap'],'O',['dash','float[]']]]

Clazz_newMeth(C$, 'c$$F$I$I$F$FA$F',  function (width, cap, join, miterlimit, dash, dash_phase) {
;C$.$init$.apply(this);
if (width < 0.0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["negative width"]);
}if (cap != 0 && cap != 1  && cap != 2 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal end cap value"]);
}if (join == 0) {
if (miterlimit < 1.0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["miter limit < 1"]);
}} else if (join != 1 && join != 2 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal line join value"]);
}if (dash != null ) {
if (dash_phase < 0.0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["negative dash phase"]);
}var allzero=true;
for (var i=0; i < dash.length; i++) {
var d=dash[i];
if (d > 0.0 ) {
allzero=false;
} else if (d < 0.0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["negative dash length"]);
}}
if (allzero) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["dash lengths all zero"]);
}}this.width=width;
this.cap=cap;
this.join=join;
this.miterlimit=miterlimit;
this.dash=(dash == null  ? null : dash);
this.dash_phase=dash_phase;
}, 1);

Clazz_newMeth(C$, 'c$$F$I$I$F',  function (width, cap, join, miterlimit) {
C$.c$$F$I$I$F$FA$F.apply(this, [width, cap, join, miterlimit, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'c$$F$I$I',  function (width, cap, join) {
C$.c$$F$I$I$F$FA$F.apply(this, [width, cap, join, 10.0, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'c$$F',  function (width) {
C$.c$$F$I$I$F$FA$F.apply(this, [width, 2, 0, 10.0, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$F$I$I$F$FA$F.apply(this, [1.0, 2, 0, 10.0, null, 0.0]);
}, 1);

Clazz_newMeth(C$, 'createStrokedShape$java_awt_Shape',  function (s) {
return s;
});

Clazz_newMeth(C$, 'getLineWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getEndCap$',  function () {
return this.cap;
});

Clazz_newMeth(C$, 'getLineJoin$',  function () {
return this.join;
});

Clazz_newMeth(C$, 'getMiterLimit$',  function () {
return this.miterlimit;
});

Clazz_newMeth(C$, 'getDashArray$',  function () {
if (this.dash == null ) {
return null;
}return this.dash.clone$();
});

Clazz_newMeth(C$, 'getDashPhase$',  function () {
return this.dash_phase;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var hash=Float.floatToIntBits$F(this.width);
hash=hash * 31 + this.join;
hash=hash * 31 + this.cap;
hash=hash * 31 + Float.floatToIntBits$F(this.miterlimit);
if (this.dash != null ) {
hash=hash * 31 + Float.floatToIntBits$F(this.dash_phase);
for (var i=0; i < this.dash.length; i++) {
hash=hash * 31 + Float.floatToIntBits$F(this.dash[i]);
}
}return hash;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "java.awt.BasicStroke"))) {
return false;
}var bs=obj;
if (this.width != bs.width ) {
return false;
}if (this.join != bs.join) {
return false;
}if (this.cap != bs.cap) {
return false;
}if (this.miterlimit != bs.miterlimit ) {
return false;
}if (this.dash != null ) {
if (this.dash_phase != bs.dash_phase ) {
return false;
}if (!$I$(1).equals$FA$FA(this.dash, bs.dash)) {
return false;
}} else if (bs.dash != null ) {
return false;
}return true;
});

Clazz_newMeth(C$, 'clone$',  function () {
return this;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.Dimension']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BorderLayout", null, null, ['java.awt.LayoutManager2', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['hgap','vgap'],'O',['north','java.awt.Component','+west','+east','+south','+center','+firstLine','+lastLine','+firstItem','+lastItem']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$I.apply(this, [0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (hgap, vgap) {
;C$.$init$.apply(this);
this.hgap=hgap;
this.vgap=vgap;
}, 1);

Clazz_newMeth(C$, 'getHgap$',  function () {
return this.hgap;
});

Clazz_newMeth(C$, 'setHgap$I',  function (hgap) {
this.hgap=hgap;
});

Clazz_newMeth(C$, 'getVgap$',  function () {
return this.vgap;
});

Clazz_newMeth(C$, 'setVgap$I',  function (vgap) {
this.vgap=vgap;
});

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O',  function (comp, constraints) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(comp.getTreeLock$());
{
if ((constraints == null ) || (Clazz_instanceOf(constraints, "java.lang.String")) ) {
this.addLayoutComponent$S$java_awt_Component(constraints, comp);
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot add to layout: constraint must be a string (or null)"]);
}}});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component',  function (name, comp) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(comp.getTreeLock$());
{
if (name == null ) {
name="Center";
}if ("Center".equals$O(name)) {
this.center=comp;
} else if ("North".equals$O(name)) {
this.north=comp;
} else if ("South".equals$O(name)) {
this.south=comp;
} else if ("East".equals$O(name)) {
this.east=comp;
} else if ("West".equals$O(name)) {
this.west=comp;
} else if ("First".equals$O(name)) {
this.firstLine=comp;
} else if ("Last".equals$O(name)) {
this.lastLine=comp;
} else if ("Before".equals$O(name)) {
this.firstItem=comp;
} else if ("After".equals$O(name)) {
this.lastItem=comp;
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot add to layout: unknown constraint: " + name]);
}}});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component',  function (comp) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(comp.getTreeLock$());
{
if (comp === this.center ) {
this.center=null;
} else if (comp === this.north ) {
this.north=null;
} else if (comp === this.south ) {
this.south=null;
} else if (comp === this.east ) {
this.east=null;
} else if (comp === this.west ) {
this.west=null;
}if (comp === this.firstLine ) {
this.firstLine=null;
} else if (comp === this.lastLine ) {
this.lastLine=null;
} else if (comp === this.firstItem ) {
this.firstItem=null;
} else if (comp === this.lastItem ) {
this.lastItem=null;
}}});

Clazz_newMeth(C$, 'getLayoutComponent$O',  function (constraints) {
if ("Center".equals$O(constraints)) {
return this.center;
} else if ("North".equals$O(constraints)) {
return this.north;
} else if ("South".equals$O(constraints)) {
return this.south;
} else if ("West".equals$O(constraints)) {
return this.west;
} else if ("East".equals$O(constraints)) {
return this.east;
} else if ("First".equals$O(constraints)) {
return this.firstLine;
} else if ("Last".equals$O(constraints)) {
return this.lastLine;
} else if ("Before".equals$O(constraints)) {
return this.firstItem;
} else if ("After".equals$O(constraints)) {
return this.lastItem;
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot get component: unknown constraint: " + constraints]);
}});

Clazz_newMeth(C$, 'getLayoutComponent$java_awt_Container$O',  function (target, constraints) {
var ltr=target.getComponentOrientation$().isLeftToRight$();
var result=null;
if ("North".equals$O(constraints)) {
result=(this.firstLine != null ) ? this.firstLine : this.north;
} else if ("South".equals$O(constraints)) {
result=(this.lastLine != null ) ? this.lastLine : this.south;
} else if ("West".equals$O(constraints)) {
result=ltr ? this.firstItem : this.lastItem;
if (result == null ) {
result=this.west;
}} else if ("East".equals$O(constraints)) {
result=ltr ? this.lastItem : this.firstItem;
if (result == null ) {
result=this.east;
}} else if ("Center".equals$O(constraints)) {
result=this.center;
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot get component: invalid constraint: " + constraints]);
}return result;
});

Clazz_newMeth(C$, 'getConstraints$java_awt_Component',  function (comp) {
if (comp == null ) {
return null;
}if (comp === this.center ) {
return "Center";
} else if (comp === this.north ) {
return "North";
} else if (comp === this.south ) {
return "South";
} else if (comp === this.west ) {
return "West";
} else if (comp === this.east ) {
return "East";
} else if (comp === this.firstLine ) {
return "First";
} else if (comp === this.lastLine ) {
return "Last";
} else if (comp === this.firstItem ) {
return "Before";
} else if (comp === this.lastItem ) {
return "After";
}return null;
});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container',  function (target) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(target.getTreeLock$());
{
var dim=Clazz_new_($I$(1,1).c$$I$I,[0, 0]);
var ltr=target.getComponentOrientation$().isLeftToRight$();
var c=null;
if ((c=p$1.getChild$S$Z.apply(this, ["East", ltr])) != null ) {
var d=c.getMinimumSize$();
dim.width+=d.width + this.hgap;
dim.height=Math.max(d.height, dim.height);
}if ((c=p$1.getChild$S$Z.apply(this, ["West", ltr])) != null ) {
var d=c.getMinimumSize$();
dim.width+=d.width + this.hgap;
dim.height=Math.max(d.height, dim.height);
}if ((c=p$1.getChild$S$Z.apply(this, ["Center", ltr])) != null ) {
var d=c.getMinimumSize$();
dim.width+=d.width;
dim.height=Math.max(d.height, dim.height);
}if ((c=p$1.getChild$S$Z.apply(this, ["North", ltr])) != null ) {
var d=c.getMinimumSize$();
dim.width=Math.max(d.width, dim.width);
dim.height+=d.height + this.vgap;
}if ((c=p$1.getChild$S$Z.apply(this, ["South", ltr])) != null ) {
var d=c.getMinimumSize$();
dim.width=Math.max(d.width, dim.width);
dim.height+=d.height + this.vgap;
}var insets=target.getInsets$();
dim.width+=insets.left + insets.right;
dim.height+=insets.top + insets.bottom;
return dim;
}});

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container',  function (target) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(target.getTreeLock$());
{
var dim=Clazz_new_($I$(1,1).c$$I$I,[0, 0]);
var ltr=target.getComponentOrientation$().isLeftToRight$();
var c=null;
if ((c=p$1.getChild$S$Z.apply(this, ["East", ltr])) != null ) {
var d=c.getPreferredSize$();
dim.width+=d.width + this.hgap;
dim.height=Math.max(d.height, dim.height);
}if ((c=p$1.getChild$S$Z.apply(this, ["West", ltr])) != null ) {
var d=c.getPreferredSize$();
dim.width+=d.width + this.hgap;
dim.height=Math.max(d.height, dim.height);
}if ((c=p$1.getChild$S$Z.apply(this, ["Center", ltr])) != null ) {
var d=c.getPreferredSize$();
dim.width+=d.width;
dim.height=Math.max(d.height, dim.height);
}if ((c=p$1.getChild$S$Z.apply(this, ["North", ltr])) != null ) {
var d=c.getPreferredSize$();
dim.width=Math.max(d.width, dim.width);
dim.height+=d.height + this.vgap;
}if ((c=p$1.getChild$S$Z.apply(this, ["South", ltr])) != null ) {
var d=c.getPreferredSize$();
dim.width=Math.max(d.width, dim.width);
dim.height+=d.height + this.vgap;
}var insets=target.getInsets$();
dim.width+=insets.left + insets.right;
dim.height+=insets.top + insets.bottom;
return dim;
}});

Clazz_newMeth(C$, 'maximumLayoutSize$java_awt_Container',  function (target) {
return Clazz_new_($I$(1,1).c$$I$I,[2147483647, 2147483647]);
});

Clazz_newMeth(C$, 'getLayoutAlignmentX$java_awt_Container',  function (parent) {
return 0.5;
});

Clazz_newMeth(C$, 'getLayoutAlignmentY$java_awt_Container',  function (parent) {
return 0.5;
});

Clazz_newMeth(C$, 'invalidateLayout$java_awt_Container',  function (target) {
});

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container',  function (target) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(target.getTreeLock$());
{
var insets=target.getInsets$();
var top=insets.top;
var bottom=target.height - insets.bottom;
var left=insets.left;
var right=target.width - insets.right;
var ltr=target.getComponentOrientation$().isLeftToRight$();
var c=null;
if ((c=p$1.getChild$S$Z.apply(this, ["North", ltr])) != null ) {
c.setSize$I$I(right - left, c.height);
var d=c.getPreferredSize$();
c.setBounds$I$I$I$I(left, top, right - left, d.height);
top+=d.height + this.vgap;
}if ((c=p$1.getChild$S$Z.apply(this, ["South", ltr])) != null ) {
c.setSize$I$I(right - left, c.height);
var d=c.getPreferredSize$();
c.setBounds$I$I$I$I(left, bottom - d.height, right - left, d.height);
bottom-=d.height + this.vgap;
}if ((c=p$1.getChild$S$Z.apply(this, ["East", ltr])) != null ) {
c.setSize$I$I(c.width, bottom - top);
var d=c.getPreferredSize$();
c.setBounds$I$I$I$I(right - d.width, top, d.width, bottom - top);
right-=d.width + this.hgap;
}if ((c=p$1.getChild$S$Z.apply(this, ["West", ltr])) != null ) {
c.setSize$I$I(c.width, bottom - top);
var d=c.getPreferredSize$();
c.setBounds$I$I$I$I(left, top, d.width, bottom - top);
left+=d.width + this.hgap;
}if ((c=p$1.getChild$S$Z.apply(this, ["Center", ltr])) != null ) {
c.setBounds$I$I$I$I(left, top, right - left, bottom - top);
}}});

Clazz_newMeth(C$, 'getChild$S$Z',  function (key, ltr) {
var result=null;
if (key == "North") {
result=(this.firstLine != null ) ? this.firstLine : this.north;
} else if (key == "South") {
result=(this.lastLine != null ) ? this.lastLine : this.south;
} else if (key == "West") {
result=ltr ? this.firstItem : this.lastItem;
if (result == null ) {
result=this.west;
}} else if (key == "East") {
result=ltr ? this.lastItem : this.firstItem;
if (result == null ) {
result=this.east;
}} else if (key == "Center") {
result=this.center;
}if (result != null  && !result.visible ) {
result=null;
}return result;
}, p$1);

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[hgap=" + this.hgap + ",vgap=" + this.vgap + "]" ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.ColorPaintContext']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Color", null, null, 'java.awt.Paint');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.frgbvalue=null;
this.falpha=0.0;
},1);

C$.$fields$=[['F',['falpha'],'I',['value'],'O',['frgbvalue','float[]','context','java.awt.ColorPaintContext']]
,['O',['white','java.awt.Color','+WHITE','+lightGray','+LIGHT_GRAY','+gray','+GRAY','+darkGray','+DARK_GRAY','+black','+none','+BLACK','+red','+RED','+pink','+PINK','+orange','+ORANGE','+yellow','+YELLOW','+green','+GREEN','+magenta','+MAGENTA','+cyan','+CYAN','+blue','+BLUE']]]

Clazz_newMeth(C$, 'testColorValueRange$I$I$I$I',  function (r, g, b, a) {
var rangeError=false;
var badComponentString="";
if (a < 0 || a > 255 ) {
rangeError=true;
badComponentString=badComponentString + " Alpha";
}if (r < 0 || r > 255 ) {
rangeError=true;
badComponentString=badComponentString + " Red";
}if (g < 0 || g > 255 ) {
rangeError=true;
badComponentString=badComponentString + " Green";
}if (b < 0 || b > 255 ) {
rangeError=true;
badComponentString=badComponentString + " Blue";
}if (rangeError == true ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Color parameter outside of expected range:" + badComponentString]);
}}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I',  function (r, g, b) {
C$.c$$I$I$I$I.apply(this, [r, g, b, 255]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (r, g, b, a) {
;C$.$init$.apply(this);
this.value=((a & 255) << 24) | ((r & 255) << 16) | ((g & 255) << 8) | ((b & 255) << 0) ;
C$.testColorValueRange$I$I$I$I(r, g, b, a);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (rgb) {
;C$.$init$.apply(this);
this.value=-16777216 | rgb;
}, 1);

Clazz_newMeth(C$, 'c$$I$Z',  function (rgba, hasalpha) {
;C$.$init$.apply(this);
if (hasalpha) {
this.value=rgba;
} else {
this.value=-16777216 | rgba;
}}, 1);

Clazz_newMeth(C$, 'c$$F$F$F',  function (r, g, b) {
C$.c$$F$F$F$F.apply(this, [r, g, b, 1.0]);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F',  function (r, g, b, a) {
C$.c$$I$I$I$I.apply(this, [((r * 255 + 0.5)|0), ((g * 255 + 0.5)|0), ((b * 255 + 0.5)|0), ((a * 255 + 0.5)|0)]);
this.frgbvalue=Clazz_array(Float.TYPE, [3]);
this.frgbvalue[0]=r;
this.frgbvalue[1]=g;
this.frgbvalue[2]=b;
this.falpha=a;
}, 1);

Clazz_newMeth(C$, 'getRed$',  function () {
return (this.getRGB$() >> 16) & 255;
});

Clazz_newMeth(C$, 'getGreen$',  function () {
return (this.getRGB$() >> 8) & 255;
});

Clazz_newMeth(C$, 'getBlue$',  function () {
return (this.getRGB$() >> 0) & 255;
});

Clazz_newMeth(C$, 'getAlpha$',  function () {
return (this.getRGB$() >> 24) & 255;
});

Clazz_newMeth(C$, 'getRGB$',  function () {
return this.value;
});

Clazz_newMeth(C$, 'brighter$',  function () {
var r=this.getRed$();
var g=this.getGreen$();
var b=this.getBlue$();
var i=3;
if (r == 0 && g == 0  && b == 0 ) {
return Clazz_new_(C$.c$$I$I$I,[i, i, i]);
}if (r > 0 && r < i ) r=i;
if (g > 0 && g < i ) g=i;
if (b > 0 && b < i ) b=i;
return Clazz_new_(C$.c$$I$I$I,[Math.min(((r / 0.7)|0), 255), Math.min(((g / 0.7)|0), 255), Math.min(((b / 0.7)|0), 255)]);
});

Clazz_newMeth(C$, 'darker$',  function () {
return Clazz_new_(C$.c$$I$I$I,[Math.max(((this.getRed$() * 0.7)|0), 0), Math.max(((this.getGreen$() * 0.7)|0), 0), Math.max(((this.getBlue$() * 0.7)|0), 0)]);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.value;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
return Clazz_instanceOf(obj, "java.awt.Color") && (obj).getRGB$() == this.getRGB$() ;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[r=" + this.getRed$() + ",g=" + this.getGreen$() + ",b=" + this.getBlue$() + "]" ;
});

Clazz_newMeth(C$, 'decode$S',  function (nm) {
var intval=Integer.decode$S(nm);
var i=intval.intValue$();
return Clazz_new_(C$.c$$I$I$I,[(i >> 16) & 255, (i >> 8) & 255, i & 255]);
}, 1);

Clazz_newMeth(C$, 'getColor$S',  function (nm) {
return C$.getColor$S$java_awt_Color(nm, null);
}, 1);

Clazz_newMeth(C$, 'getColor$S$java_awt_Color',  function (nm, v) {
try {
var i=(Integer.decode$S(nm)).$c();
return Clazz_new_(C$.c$$I$I$I,[(i >> 16) & 255, (i >> 8) & 255, i & 255]);
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
return v;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'getColor$S$I',  function (nm, v) {
var intval=Integer.getInteger$S(nm);
var i=(intval != null ) ? intval.intValue$() : v;
return Clazz_new_(C$.c$$I$I$I,[(i >> 16) & 255, (i >> 8) & 255, (i >> 0) & 255]);
}, 1);

Clazz_newMeth(C$, 'HSBtoRGB$F$F$F',  function (hue, saturation, brightness) {
var r=0;
var g=0;
var b=0;
if (saturation == 0 ) {
r=g=b=((brightness * 255.0 + 0.5)|0);
} else {
var h=(hue - Math.floor(hue)) * 6.0;
var f=h - Math.floor(h);
var p=brightness * (1.0 - saturation);
var q=brightness * (1.0 - saturation * f);
var t=brightness * (1.0 - (saturation * (1.0 - f)));
switch ((h|0)) {
case 0:
r=((brightness * 255.0 + 0.5)|0);
g=((t * 255.0 + 0.5)|0);
b=((p * 255.0 + 0.5)|0);
break;
case 1:
r=((q * 255.0 + 0.5)|0);
g=((brightness * 255.0 + 0.5)|0);
b=((p * 255.0 + 0.5)|0);
break;
case 2:
r=((p * 255.0 + 0.5)|0);
g=((brightness * 255.0 + 0.5)|0);
b=((t * 255.0 + 0.5)|0);
break;
case 3:
r=((p * 255.0 + 0.5)|0);
g=((q * 255.0 + 0.5)|0);
b=((brightness * 255.0 + 0.5)|0);
break;
case 4:
r=((t * 255.0 + 0.5)|0);
g=((p * 255.0 + 0.5)|0);
b=((brightness * 255.0 + 0.5)|0);
break;
case 5:
r=((brightness * 255.0 + 0.5)|0);
g=((p * 255.0 + 0.5)|0);
b=((q * 255.0 + 0.5)|0);
break;
}
}return -16777216 | (r << 16) | (g << 8) | (b << 0) ;
}, 1);

Clazz_newMeth(C$, 'RGBtoHSB$I$I$I$FA',  function (r, g, b, hsbvals) {
var hue;
var saturation;
var brightness;
if (hsbvals == null ) {
hsbvals=Clazz_array(Float.TYPE, [3]);
}var cmax=(r > g) ? r : g;
if (b > cmax) cmax=b;
var cmin=(r < g) ? r : g;
if (b < cmin) cmin=b;
brightness=(cmax) / 255.0;
if (cmax != 0) saturation=((cmax - cmin)) / (cmax);
 else saturation=0;
if (saturation == 0 ) hue=0;
 else {
var redc=((cmax - r)) / ((cmax - cmin));
var greenc=((cmax - g)) / ((cmax - cmin));
var bluec=((cmax - b)) / ((cmax - cmin));
if (r == cmax) hue=bluec - greenc;
 else if (g == cmax) hue=2.0 + redc - bluec;
 else hue=4.0 + greenc - redc;
hue=hue / 6.0;
if (hue < 0 ) hue=hue + 1.0;
}hsbvals[0]=hue;
hsbvals[1]=saturation;
hsbvals[2]=brightness;
return hsbvals;
}, 1);

Clazz_newMeth(C$, 'getHSBColor$F$F$F',  function (h, s, b) {
return Clazz_new_(C$.c$$I,[C$.HSBtoRGB$F$F$F(h, s, b)]);
}, 1);

Clazz_newMeth(C$, 'getRGBComponents$FA',  function (compArray) {
var f;
if (compArray == null ) {
f=Clazz_array(Float.TYPE, [4]);
} else {
f=compArray;
}if (this.frgbvalue == null ) {
f[0]=(this.getRed$()) / 255.0;
f[1]=(this.getGreen$()) / 255.0;
f[2]=(this.getBlue$()) / 255.0;
f[3]=(this.getAlpha$()) / 255.0;
} else {
f[0]=this.frgbvalue[0];
f[1]=this.frgbvalue[1];
f[2]=this.frgbvalue[2];
f[3]=this.falpha;
}return f;
});

Clazz_newMeth(C$, 'getRGBColorComponents$FA',  function (compArray) {
var f;
if (compArray == null ) {
f=Clazz_array(Float.TYPE, [3]);
} else {
f=compArray;
}if (this.frgbvalue == null ) {
f[0]=(this.getRed$()) / 255.0;
f[1]=(this.getGreen$()) / 255.0;
f[2]=(this.getBlue$()) / 255.0;
} else {
f[0]=this.frgbvalue[0];
f[1]=this.frgbvalue[1];
f[2]=this.frgbvalue[2];
}return f;
});

Clazz_newMeth(C$, 'getComponents$FA',  function (compArray) {
if (this.frgbvalue == null ) return this.getRGBComponents$FA(compArray);
var f;
var n=this.frgbvalue.length;
if (compArray == null ) {
f=Clazz_array(Float.TYPE, [n + 1]);
} else {
f=compArray;
}for (var i=0; i < n; i++) {
f[i]=this.frgbvalue[i];
}
f[n]=this.falpha;
return f;
});

Clazz_newMeth(C$, 'createContext$java_awt_image_ColorModel$java_awt_Rectangle$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform$java_awt_RenderingHints',  function (cm, r, r2d, xform, hints) {
if (this.context == null  || this.context.getRGB$() != this.getRGB$() ) {
this.context=Clazz_new_([this.getRGB$(), cm],$I$(1,1).c$$I$java_awt_image_ColorModel);
}return this.context;
});

Clazz_newMeth(C$, 'getTransparency$',  function () {
var alpha=this.getAlpha$();
if (alpha == 255) {
return 1;
} else if (alpha == 0) {
return 2;
} else {
return 3;
}});

C$.$static$=function(){C$.$static$=0;
C$.white=Clazz_new_(C$.c$$I$I$I,[255, 255, 255]);
C$.WHITE=C$.white;
C$.lightGray=Clazz_new_(C$.c$$I$I$I,[192, 192, 192]);
C$.LIGHT_GRAY=C$.lightGray;
C$.gray=Clazz_new_(C$.c$$I$I$I,[128, 128, 128]);
C$.GRAY=C$.gray;
C$.darkGray=Clazz_new_(C$.c$$I$I$I,[64, 64, 64]);
C$.DARK_GRAY=C$.darkGray;
C$.black=Clazz_new_(C$.c$$I$I$I,[0, 0, 0]);
C$.none=Clazz_new_(C$.c$$I$I$I,[0, 0, 1]);
C$.BLACK=C$.black;
C$.red=Clazz_new_(C$.c$$I$I$I,[255, 0, 0]);
C$.RED=C$.red;
C$.pink=Clazz_new_(C$.c$$I$I$I,[255, 175, 175]);
C$.PINK=C$.pink;
C$.orange=Clazz_new_(C$.c$$I$I$I,[255, 200, 0]);
C$.ORANGE=C$.orange;
C$.yellow=Clazz_new_(C$.c$$I$I$I,[255, 255, 0]);
C$.YELLOW=C$.yellow;
C$.green=Clazz_new_(C$.c$$I$I$I,[0, 255, 0]);
C$.GREEN=C$.green;
C$.magenta=Clazz_new_(C$.c$$I$I$I,[255, 0, 255]);
C$.MAGENTA=C$.magenta;
C$.cyan=Clazz_new_(C$.c$$I$I$I,[0, 255, 255]);
C$.CYAN=C$.cyan;
C$.blue=Clazz_new_(C$.c$$I$I$I,[0, 0, 255]);
C$.BLUE=C$.blue;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.util.HashMap','java.awt.ComponentOrientation','java.util.Set','sun.awt.AppContext','swingjs.JSToolkit','java.awt.Toolkit','java.awt.Point','java.awt.KeyboardFocusManager','java.awt.event.ComponentEvent','java.util.Locale','java.awt.Dimension','java.awt.Rectangle',['java.awt.Component','.BaselineResizeBehavior'],'java.awt.Cursor','java.awt.event.PaintEvent','java.awt.EventQueue','java.awt.event.MouseWheelEvent','java.awt.AWTEventMulticaster','java.awt.event.ComponentListener','java.awt.event.FocusListener','java.awt.event.HierarchyListener','java.awt.event.HierarchyEvent','java.awt.event.HierarchyBoundsListener','java.awt.event.KeyListener','java.awt.event.MouseListener','java.awt.event.MouseMotionListener','java.awt.event.MouseWheelListener','java.awt.event.InputMethodListener','java.beans.PropertyChangeListener','java.util.Collections','java.util.HashSet',['sun.awt.CausedFocusEvent','.Cause'],'javax.swing.JComponent',['java.awt.Component','.DummyRequestFocusController'],'java.beans.PropertyChangeSupport','sun.awt.SunToolkit']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Component", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'java.awt.image.ImageObserver');
C$.$classes$=[['AWTTreeLock',8],['BaselineResizeBehavior',25],['DummyRequestFocusController',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.visible=true;
this.enabled=true;
this.valid=false;
this.nameExplicitlySet=false;
this.focusable=true;
this.isFocusTraversableOverridden=0;
this.focusTraversalKeysEnabled=true;
this.componentOrientation=$I$(2).UNKNOWN;
this.newEventsOnly=false;
this.windowClosingException=null;
this.eventMask=4096;
this.changeSupportLock= Clazz_new_();
this.isPacked=false;
this.boundsOp=3;
this.coalescingEnabled=p$1.checkCoalescing.apply(this, []);
this.秘j2sInvalidateOnAdd=true;
this.autoFocusTransferOnDisposal=true;
},1);

C$.$fields$=[['Z',['visible','enabled','valid','nameExplicitlySet','focusable','秘isFocusableSet','focusTraversalKeysEnabled','minSizeSet','prefSizeSet','maxSizeSet','newEventsOnly','isPacked','backgroundEraseDisabled','coalescingEnabled','秘j2sInvalidateOnAdd','autoFocusTransferOnDisposal'],'I',['x','y','width','height','isFocusTraversableOverridden','boundsOp'],'J',['eventMask'],'S',['name'],'O',['peer','java.awt.peer.ComponentPeer','parent','java.awt.Container','appContext','sun.awt.AppContext','foreground','java.awt.Color','+background','font','java.awt.Font','+peerFont','cursor','java.awt.Cursor','locale','java.util.Locale','popups','java.util.Vector','focusTraversalKeys','java.util.Set[]','minSize','java.awt.Dimension','+prefSize','+maxSize','componentOrientation','java.awt.ComponentOrientation','componentListener','java.awt.event.ComponentListener','focusListener','java.awt.event.FocusListener','hierarchyListener','java.awt.event.HierarchyListener','hierarchyBoundsListener','java.awt.event.HierarchyBoundsListener','keyListener','java.awt.event.KeyListener','mouseListener','java.awt.event.MouseListener','mouseMotionListener','java.awt.event.MouseMotionListener','mouseWheelListener','java.awt.event.MouseWheelListener','inputMethodListener','java.awt.event.InputMethodListener','windowClosingException','RuntimeException','changeSupport','java.beans.PropertyChangeSupport','changeSupportLock','java.lang.Object','dropTarget','java.awt.dnd.DropTarget','graphicsConfig','java.awt.GraphicsConfiguration','eventCache','java.awt.EventQueueItem[]']]
,['Z',['isInc'],'I',['incRate'],'O',['focusTraversalKeyPropertyNames','String[]','coalesceMap','java.util.Map','requestFocusController','sun.awt.RequestFocusController']]]

Clazz_newMeth(C$, 'getAppContext$',  function () {
return this.appContext;
});

Clazz_newMeth(C$, 'getChangeSupportLock',  function () {
return this.changeSupportLock;
}, p$1);

Clazz_newMeth(C$, 'getBoundsOp$',  function () {
return this.boundsOp;
});

Clazz_newMeth(C$, 'setBoundsOp$I',  function (op) {
if (op == 5) {
this.boundsOp=3;
} else if (this.boundsOp == 3) {
this.boundsOp=op;
}});

Clazz_newMeth(C$, 'setBackgroundEraseDisabled$Z',  function (disabled) {
this.backgroundEraseDisabled=disabled;
});

Clazz_newMeth(C$, 'getBackgroundEraseDisabled$',  function () {
return this.backgroundEraseDisabled;
});

Clazz_newMeth(C$, 'requestFocusInWindow$java_awt_Component$sun_awt_CausedFocusEvent_Cause',  function (comp, cause) {
return comp.requestFocusInWindow$sun_awt_CausedFocusEvent_Cause(cause);
});

Clazz_newMeth(C$, 'requestFocus$java_awt_Component$sun_awt_CausedFocusEvent_Cause',  function (comp, cause) {
comp.requestFocus$sun_awt_CausedFocusEvent_Cause(cause);
});

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.setAppContext$();
}, 1);

Clazz_newMeth(C$, 'initializeFocusTraversalKeys$',  function () {
this.focusTraversalKeys=Clazz_array($I$(3), [3]);
});

Clazz_newMeth(C$, 'setAppContext$',  function () {
this.appContext=$I$(4).getAppContext$();
});

Clazz_newMeth(C$, 'constructComponentName$',  function () {
return null;
});

Clazz_newMeth(C$, 'getName$',  function () {
if (this.name == null  && !this.nameExplicitlySet ) {
{
if (this.name == null  && !this.nameExplicitlySet ) this.name=this.constructComponentName$();
}}return this.name;
});

Clazz_newMeth(C$, 'setName$S',  function (name) {
var oldName;
{
oldName=this.name;
this.name=name;
this.nameExplicitlySet=true;
}this.firePropertyChange$S$O$O("name", oldName, name);
});

Clazz_newMeth(C$, 'getParent$',  function () {
return this.getParent_NoClientCode$();
});

Clazz_newMeth(C$, 'getParent_NoClientCode$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'getContainer$',  function () {
return this.getParent$();
});

Clazz_newMeth(C$, 'getPeer$',  function () {
return (this.isDisplayable$() ? this.peer : null);
});

Clazz_newMeth(C$, 'setDropTarget$java_awt_dnd_DropTarget',  function (dt) {
if (dt === this.dropTarget  || (this.dropTarget != null  && this.dropTarget.equals$O(dt) ) ) return;
var old;
if ((old=this.dropTarget) != null ) {
if (this.peer != null ) this.dropTarget.removeNotify$java_awt_peer_ComponentPeer(this.peer);
var t=this.dropTarget;
this.dropTarget=null;
try {
t.setComponent$java_awt_Component(null);
} catch (iae) {
if (Clazz_exceptionOf(iae,"IllegalArgumentException")){
} else {
throw iae;
}
}
}if ((this.dropTarget=dt) != null ) {
try {
this.dropTarget.setComponent$java_awt_Component(this);
if (this.peer != null ) this.dropTarget.addNotify$java_awt_peer_ComponentPeer(this.peer);
} catch (iae) {
if (Clazz_exceptionOf(iae,"IllegalArgumentException")){
if (old != null ) {
try {
old.setComponent$java_awt_Component(this);
if (this.peer != null ) this.dropTarget.addNotify$java_awt_peer_ComponentPeer(this.peer);
} catch (iae1) {
if (Clazz_exceptionOf(iae1,"IllegalArgumentException")){
} else {
throw iae1;
}
}
}} else {
throw iae;
}
}
}});

Clazz_newMeth(C$, 'getDropTarget$',  function () {
return this.dropTarget;
});

Clazz_newMeth(C$, 'getGraphicsConfiguration$',  function () {
return $I$(5).getGraphicsConfiguration$();
});

Clazz_newMeth(C$, 'resetGC$',  function () {
});

Clazz_newMeth(C$, 'getToolkit$',  function () {
return $I$(6).getDefaultToolkit$();
});

Clazz_newMeth(C$, 'isValid$',  function () {
return this.valid;
});

Clazz_newMeth(C$, 'isDisplayable$',  function () {
return true;
});

Clazz_newMeth(C$, 'isVisible$',  function () {
return this.isVisible_NoClientCode$();
});

Clazz_newMeth(C$, 'isVisible_NoClientCode$',  function () {
return this.visible;
});

Clazz_newMeth(C$, 'isRecursivelyVisible$',  function () {
return this.visible && (this.parent == null  || this.parent.isRecursivelyVisible$() ) ;
});

Clazz_newMeth(C$, 'pointRelativeToComponent$java_awt_Point',  function (absolute) {
var compCoords=this.getLocationOnScreen$();
return Clazz_new_($I$(7,1).c$$I$I,[absolute.x - compCoords.x, absolute.y - compCoords.y]);
});

Clazz_newMeth(C$, 'getMousePosition$',  function () {
return null;
});

Clazz_newMeth(C$, 'isSameOrAncestorOf$java_awt_Component$Z',  function (comp, allowChildren) {
return comp === this ;
});

Clazz_newMeth(C$, 'isShowing$',  function () {
if (this.visible) {
var parent=this.parent;
return (parent == null ) || parent.isShowing$() ;
}return false;
});

Clazz_newMeth(C$, 'isEnabled$',  function () {
return this.isEnabledImpl$();
});

Clazz_newMeth(C$, 'isEnabledImpl$',  function () {
return this.enabled;
});

Clazz_newMeth(C$, 'setEnabled$Z',  function (b) {
this.enable$Z(b);
});

Clazz_newMeth(C$, 'enable$',  function () {
if (!this.enabled) {
this.enabled=true;
if (this.peer != null ) {
this.peer.setEnabled$Z(true);
if (this.visible) {
this.updateCursorImmediately$();
}}}});

Clazz_newMeth(C$, 'enable$Z',  function (b) {
if (b) {
this.enable$();
} else {
this.disable$();
}});

Clazz_newMeth(C$, 'disable$',  function () {
if (this.enabled) {
$I$(8).clearMostRecentFocusOwner$java_awt_Component(this);
this.enabled=false;
if (this.peer != null ) {
this.peer.setEnabled$Z(false);
if (this.visible) {
this.updateCursorImmediately$();
}}}});

Clazz_newMeth(C$, 'isDoubleBuffered$',  function () {
return false;
});

Clazz_newMeth(C$, 'enableInputMethods$Z',  function (enable) {
if (enable) {
if (Long.$ne((Long.$and(this.eventMask,4096)),0 )) return;
if (this.isFocusOwner$()) {
}(this.eventMask=Long.$or(this.eventMask,(4096)));
} else {
if (Long.$ne((Long.$and(this.eventMask,4096)),0 )) {
}(this.eventMask=Long.$and(this.eventMask,((Long.$not(4096)))));
}});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
if (b) {
this.show$();
} else {
this.hide$();
}});

Clazz_newMeth(C$, 'show$Z',  function (b) {
this.setVisible$Z(b);
});

Clazz_newMeth(C$, 'show$',  function () {
if (!this.visible) {
this.visible=true;
this.updatePeerVisibility$Z(true);
if (this.componentListener != null  || Long.$ne((Long.$and(this.eventMask,1)),0 )  || $I$(6).enabledOnToolkit$J(1) ) {
var e=Clazz_new_($I$(9,1).c$$java_awt_Component$I,[this, 102]);
$I$(6).getEventQueue$().postEvent$java_awt_AWTEvent(e);
}}var parent=this.parent;
if (parent != null ) {
parent.invalidate$();
}});

Clazz_newMeth(C$, 'updatePeerVisibility$Z',  function (isVisible) {
this.updatePeerVisibilityOrig$Z(isVisible);
});

Clazz_newMeth(C$, 'updatePeerVisibilityOrig$Z',  function (isVisible) {
this.peer.setVisible$Z(isVisible);
this.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, this, this.parent, 4, $I$(6).enabledOnToolkit$J(32768));
if (Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")) {
(this).秘repaint$();
}this.updateCursorImmediately$();
});

Clazz_newMeth(C$, 'getOrCreatePeer$',  function () {
return this.peer;
});

Clazz_newMeth(C$, 'containsFocus$',  function () {
return this.isFocusOwner$();
});

Clazz_newMeth(C$, 'clearMostRecentFocusOwnerOnHide$',  function () {
$I$(8).clearMostRecentFocusOwner$java_awt_Component(this);
});

Clazz_newMeth(C$, 'clearCurrentFocusCycleRootOnHide$',  function () {
});

Clazz_newMeth(C$, 'hide$',  function () {
this.isPacked=false;
if (this.visible) {
this.clearCurrentFocusCycleRootOnHide$();
this.clearMostRecentFocusOwnerOnHide$();
this.visible=false;
this.mixOnHiding$Z(this.isLightweight$());
if (this.containsFocus$() && $I$(8).isAutoFocusTransferEnabled$() ) {
this.transferFocus$Z(true);
}this.updatePeerVisibility$Z(false);
if (this.componentListener != null  || Long.$ne((Long.$and(this.eventMask,1)),0 )  || $I$(6).enabledOnToolkit$J(1) ) {
var e=Clazz_new_($I$(9,1).c$$java_awt_Component$I,[this, 103]);
$I$(6).getEventQueue$().postEvent$java_awt_AWTEvent(e);
}}var parent=this.parent;
if (parent != null  && !(this).秘winOrApplet ) {
parent.invalidate$();
}});

Clazz_newMeth(C$, 'getForeground$',  function () {
return this.getForeground_NoClient$();
});

Clazz_newMeth(C$, 'getForeground_NoClient$',  function () {
var foreground=this.foreground;
if (foreground != null ) {
return foreground;
}var parent=this.parent;
return (parent != null ) ? parent.getForeground$() : null;
});

Clazz_newMeth(C$, 'setForeground$java_awt_Color',  function (c) {
var oldColor=this.foreground;
this.foreground=c;
if (this.peer != null ) {
c=this.getForeground$();
if (c != null ) {
this.peer.setForeground$java_awt_Color(c);
}}this.firePropertyChange$S$O$O("foreground", oldColor, c);
});

Clazz_newMeth(C$, 'isForegroundSet$',  function () {
return (this.foreground != null );
});

Clazz_newMeth(C$, 'getBackground$',  function () {
return this.getBackground_NoClient$();
});

Clazz_newMeth(C$, 'getBackground_NoClient$',  function () {
var background=this.background;
if (background != null ) {
return background;
}var parent=this.parent;
return (parent != null ) ? parent.getBackground$() : null;
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color',  function (c) {
var oldColor=this.background;
this.background=c;
if (this.peer != null ) {
c=this.getBackground$();
if (c != null ) {
this.peer.setBackground$java_awt_Color(c);
}}this.firePropertyChange$S$O$O("background", oldColor, c);
});

Clazz_newMeth(C$, 'isBackgroundSet$',  function () {
return (this.background != null );
});

Clazz_newMeth(C$, 'getFont$',  function () {
return this.getFont_NoClientCode$();
});

Clazz_newMeth(C$, 'getFont_NoClientCode$',  function () {
var font=this.font;
if (font != null ) {
return font;
}var parent=this.parent;
if (parent != null ) return parent.getFont_NoClientCode$();
return null;
});

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (f) {
var oldFont;
var newFont;
oldFont=this.font;
newFont=this.font=f;
if (this.peer != null ) {
f=this.getFont$();
if (f != null ) {
this.peer.setFont$java_awt_Font(f);
this.peerFont=f;
}}this.firePropertyChange$S$O$O("font", oldFont, newFont);
if (f !== oldFont  && (oldFont == null  || !oldFont.equals$O(f) ) ) {
this.invalidateIfValid$();
}});

Clazz_newMeth(C$, 'isFontSet$',  function () {
return this.font != null ;
});

Clazz_newMeth(C$, 'getLocale$',  function () {
var locale=this.locale;
if (locale != null ) {
return locale;
}return $I$(10).ENGLISH;
});

Clazz_newMeth(C$, 'setLocale$java_util_Locale',  function (l) {
var oldValue=this.locale;
this.locale=l;
this.firePropertyChange$S$O$O("locale", oldValue, l);
this.invalidateIfValid$();
});

Clazz_newMeth(C$, 'getLocation$',  function () {
return this.location$();
});

Clazz_newMeth(C$, 'getLocationOnScreen$',  function () {
return this.getLocationOnScreen_NoTreeLock$();
});

Clazz_newMeth(C$, 'getLocationOnScreen_NoTreeLock$',  function () {
if (this.isShowing$()) {
if (this.isLightweight$()) {
var host=this.getNativeContainer$();
if (host.peer == null ) return null;
var pt=host.peer.getLocationOnScreen$();
for (var c=this; c !== host ; c=c.getParent$()) {
pt.x+=c.x;
pt.y+=c.y;
}
return pt;
} else {
if (this.getOrCreatePeer$() == null ) return null;
var pt=this.peer.getLocationOnScreen$();
return pt;
}} else {
throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["component must be showing on the screen to determine its location"]);
}});

Clazz_newMeth(C$, 'location$',  function () {
return p$1.location_NoClientCode.apply(this, []);
});

Clazz_newMeth(C$, 'location_NoClientCode',  function () {
return Clazz_new_($I$(7,1).c$$I$I,[this.x, this.y]);
}, p$1);

Clazz_newMeth(C$, 'setLocation$I$I',  function (x, y) {
this.setBoundsOp$I(1);
this.setBounds$I$I$I$I(x, y, this.width, this.height);
});

Clazz_newMeth(C$, 'move$I$I',  function (x, y) {
this.setLocation$I$I(x, y);
});

Clazz_newMeth(C$, 'setLocation$java_awt_Point',  function (p) {
this.setLocation$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'getSize$',  function () {
return this.size$();
});

Clazz_newMeth(C$, 'size$',  function () {
return Clazz_new_($I$(11,1).c$$I$I,[this.width, this.height]);
});

Clazz_newMeth(C$, 'setSize$I$I',  function (width, height) {
this.resize$I$I(width, height);
});

Clazz_newMeth(C$, 'resize$I$I',  function (width, height) {
this.setBoundsOp$I(2);
this.setBounds$I$I$I$I(this.x, this.y, width, height);
});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension',  function (d) {
this.setSize$I$I(d.width, d.height);
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I',  function (x, y, width, height) {
this.reshape$I$I$I$I(x, y, width, height);
});

Clazz_newMeth(C$, 'setBounds$java_awt_Rectangle',  function (r) {
this.setBounds$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'reshape$I$I$I$I',  function (x, y, width, height) {
this.秘reshape$I$I$I$I$Z(x, y, width, height, true);
});

Clazz_newMeth(C$, '秘reshape$I$I$I$I$Z',  function (x, y, width, height, needNotify) {
needNotify=!!(needNotify&((this.parent == null  || !this.parent.秘isCRP )));
try {
this.setBoundsOp$I(3);
width=Math.max(0, width);
height=Math.max(0, height);
var resized=(this.width != width) || (this.height != height) ;
var moved=(this.x != x) || (this.y != y) ;
if (!resized && !moved ) {
return;
}var oldX=this.x;
var oldY=this.y;
var oldWidth=this.width;
var oldHeight=this.height;
this.x=x;
this.y=y;
this.width=width;
this.height=height;
if (resized) {
this.isPacked=false;
}this.mixOnReshaping$();
if (this.getOrCreatePeer$() != null ) {
p$1.reshapeNativePeer$I$I$I$I$I.apply(this, [x, y, width, height, this.getBoundsOp$()]);
resized=(oldWidth != this.width) || (oldHeight != this.height) ;
moved=(oldX != this.x) || (oldY != this.y) ;
if (resized) {
this.invalidate$();
}if (this.parent != null ) {
this.parent.invalidateIfValid$();
}}if (needNotify) {
p$1.notifyNewBounds$Z$Z.apply(this, [resized, moved]);
}if (resized) p$1.repaintParentIfNeeded$I$I$I$I.apply(this, [oldX, oldY, oldWidth, oldHeight]);
} finally {
this.setBoundsOp$I(5);
}
});

Clazz_newMeth(C$, 'repaintParentIfNeeded$I$I$I$I',  function (oldX, oldY, oldWidth, oldHeight) {
(this).秘repaintParentIfNeeded$I$I$I$I(oldX, oldY, oldWidth, oldHeight);
}, p$1);

Clazz_newMeth(C$, 'reshapeNativePeer$I$I$I$I$I',  function (x, y, width, height, op) {
if (this.peer != null ) this.peer.setBounds$I$I$I$I$I(0, 0, width, height, op);
}, p$1);

Clazz_newMeth(C$, 'notifyNewBounds$Z$Z',  function (resized, moved) {
if (this.componentListener != null  || Long.$ne((Long.$and(this.eventMask,1)),0 )  || $I$(6).enabledOnToolkit$J(1) ) {
if (resized) {
var e=Clazz_new_($I$(9,1).c$$java_awt_Component$I,[this, 101]);
$I$(6).getEventQueue$().postEvent$java_awt_AWTEvent(e);
}if (moved) {
var e=Clazz_new_($I$(9,1).c$$java_awt_Component$I,[this, 100]);
$I$(6).getEventQueue$().postEvent$java_awt_AWTEvent(e);
}} else {
if (Clazz_instanceOf(this, "java.awt.Container") && (this).countComponents$() > 0 ) {
var enabledOnToolkit=$I$(6).enabledOnToolkit$J(65536);
if (resized) {
(this).createChildHierarchyEvents$I$J$Z(1402, 0, enabledOnToolkit);
}if (moved) {
(this).createChildHierarchyEvents$I$J$Z(1401, 0, enabledOnToolkit);
}}}}, p$1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'getBounds$',  function () {
return Clazz_new_($I$(12,1).c$$I$I$I$I,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'getBounds$java_awt_Rectangle',  function (rv) {
if (rv == null ) return Clazz_new_([this.getX$(), this.getY$(), this.getWidth$(), this.getHeight$()],$I$(12,1).c$$I$I$I$I);
rv.setBounds$I$I$I$I(this.getX$(), this.getY$(), this.getWidth$(), this.getHeight$());
return rv;
});

Clazz_newMeth(C$, 'getSize$java_awt_Dimension',  function (rv) {
if (rv == null ) {
return Clazz_new_([this.getWidth$(), this.getHeight$()],$I$(11,1).c$$I$I);
} else {
rv.setSize$I$I(this.getWidth$(), this.getHeight$());
return rv;
}});

Clazz_newMeth(C$, 'getLocation$java_awt_Point',  function (rv) {
if (rv == null ) {
return Clazz_new_([this.getX$(), this.getY$()],$I$(7,1).c$$I$I);
} else {
rv.setLocation$I$I(this.getX$(), this.getY$());
return rv;
}});

Clazz_newMeth(C$, 'isOpaque$',  function () {
return true;
});

Clazz_newMeth(C$, 'isLightweight$',  function () {
return false;
});

Clazz_newMeth(C$, 'setPreferredSize$java_awt_Dimension',  function (preferredSize) {
this.setPrefSizeComp$java_awt_Dimension(preferredSize);
});

Clazz_newMeth(C$, 'setPrefSizeComp$java_awt_Dimension',  function (preferredSize) {
var old=(this.prefSizeSet ? this.prefSize : null);
this.prefSize=preferredSize;
this.prefSizeSet=(preferredSize != null );
this.firePropertyChange$S$O$O("preferredSize", old, preferredSize);
});

Clazz_newMeth(C$, 'isPreferredSizeSet$',  function () {
return this.prefSizeSet;
});

Clazz_newMeth(C$, 'getPreferredSize$',  function () {
return this.preferredSize$();
});

Clazz_newMeth(C$, 'preferredSize$',  function () {
return this.prefSizeComp$();
});

Clazz_newMeth(C$, 'prefSizeComp$',  function () {
var dim=this.prefSize;
if (dim == null  || !(this.isPreferredSizeSet$() || this.isValid$() ) ) {
dim=(this.width != 0 || this.height != 0  ? null : this.isDisplayable$() && this.peer != null   ? this.peer.getPreferredSize$() : this.getMinimumSize$());
this.prefSize=dim;
}return (dim == null  ? Clazz_new_($I$(11,1).c$$I$I,[this.width, this.height]) : Clazz_new_($I$(11,1).c$$java_awt_Dimension,[dim]));
});

Clazz_newMeth(C$, 'setMinimumSize$java_awt_Dimension',  function (minimumSize) {
var old;
if (this.minSizeSet) {
old=this.minSize;
} else {
old=null;
}this.minSize=minimumSize;
this.minSizeSet=(minimumSize != null );
this.firePropertyChange$S$O$O("minimumSize", old, minimumSize);
});

Clazz_newMeth(C$, 'isMinimumSizeSet$',  function () {
return this.minSizeSet;
});

Clazz_newMeth(C$, 'getMinimumSize$',  function () {
return this.minimumSize$();
});

Clazz_newMeth(C$, 'minimumSize$',  function () {
var dim=this.minSize;
if (dim == null  || !this.isMinimumSizeSet$() && !this.isValid$()  ) {
this.minSize=(this.peer == null  ? this.size$() : Clazz_new_($I$(11,1).c$$I$I,[1, 1]));
dim=this.minSize;
}return Clazz_new_($I$(11,1).c$$java_awt_Dimension,[dim]);
});

Clazz_newMeth(C$, 'setMaximumSize$java_awt_Dimension',  function (maximumSize) {
var old;
if (this.maxSizeSet) {
old=this.maxSize;
} else {
old=null;
}this.maxSize=maximumSize;
this.maxSizeSet=(maximumSize != null );
this.firePropertyChange$S$O$O("maximumSize", old, maximumSize);
});

Clazz_newMeth(C$, 'isMaximumSizeSet$',  function () {
return this.maxSizeSet;
});

Clazz_newMeth(C$, 'getMaximumSize$',  function () {
return this.getMaxSizeComp$();
});

Clazz_newMeth(C$, 'getMaxSizeComp$',  function () {
return (this.isMaximumSizeSet$() ? this.maxSize : Clazz_new_($I$(11,1).c$$I$I,[32767, 32767]));
});

Clazz_newMeth(C$, 'getAlignmentX$',  function () {
return this.getAlignmentXComp$();
});

Clazz_newMeth(C$, 'getAlignmentXComp$',  function () {
return 0.5;
});

Clazz_newMeth(C$, 'getAlignmentY$',  function () {
return this.getAlignmentYComp$();
});

Clazz_newMeth(C$, 'getAlignmentYComp$',  function () {
return 0.5;
});

Clazz_newMeth(C$, 'getBaseline$I$I',  function (width, height) {
if (width < 0 || height < 0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Width and height must be >= 0"]);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$',  function () {
return $I$(13).OTHER;
});

Clazz_newMeth(C$, 'doLayout$',  function () {
this.layout$();
});

Clazz_newMeth(C$, 'layout$',  function () {
});

Clazz_newMeth(C$, 'validate$',  function () {
this.valid=true;
});

Clazz_newMeth(C$, 'invalidate$',  function () {
this.invalidateComp$();
});

Clazz_newMeth(C$, 'invalidateComp$',  function () {
this.valid=false;
if (!this.isPreferredSizeSet$()) {
this.prefSize=null;
}if (!this.isMinimumSizeSet$()) {
this.minSize=null;
}if (!this.isMaximumSizeSet$()) {
this.maxSize=null;
}if (this.parent != null  && this.秘j2sInvalidateOnAdd ) {
this.parent.invalidateIfValid$();
}});

Clazz_newMeth(C$, 'invalidateIfValid$',  function () {
if (this.isValid$()) {
this.invalidate$();
}});

Clazz_newMeth(C$, 'getGraphics$',  function () {
var g;
if ((g=(this.parent == null  ? null : this.parent.getGraphics$())) != null ) g.setFont$java_awt_Font(this.getFont$());
return g;
});

Clazz_newMeth(C$, 'getTreeLock$',  function () {
return this;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (font) {
return font.getFontMetrics$();
});

Clazz_newMeth(C$, 'setCursor$java_awt_Cursor',  function (cursor) {
this.cursor=cursor;
this.updateCursorImmediately$();
});

Clazz_newMeth(C$, 'updateCursorImmediately$',  function () {
if (this.peer != null ) this.peer.updateCursorImmediately$();
});

Clazz_newMeth(C$, 'getCursor$',  function () {
return this.getCursor_NoClientCode$();
});

Clazz_newMeth(C$, 'getCursor_NoClientCode$',  function () {
var cursor=this.cursor;
if (cursor != null ) {
return cursor;
}var parent=this.parent;
if (parent != null ) {
return parent.getCursor_NoClientCode$();
} else {
return $I$(14).getPredefinedCursor$I(0);
}});

Clazz_newMeth(C$, 'isCursorSet$',  function () {
return (this.cursor != null );
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintAll$java_awt_Graphics',  function (g) {
});

Clazz_newMeth(C$, 'lightweightPaint$java_awt_Graphics',  function (g) {
this.lwPaintComp$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'lwPaintComp$java_awt_Graphics',  function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintHeavyweightComponents$java_awt_Graphics',  function (g) {
});

Clazz_newMeth(C$, 'repaint$',  function () {
this.repaint$J$I$I$I$I(0, 0, 0, this.width, this.height);
});

Clazz_newMeth(C$, 'repaint$J',  function (tm) {
this.repaint$J$I$I$I$I(tm, 0, 0, this.width, this.height);
});

Clazz_newMeth(C$, 'repaint$I$I$I$I',  function (x, y, width, height) {
this.repaint$J$I$I$I$I(0, x, y, width, height);
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I',  function (tm, x, y, width, height) {
this.秘repaintCmp$J$I$I$I$I(tm, x, y, width, height);
});

Clazz_newMeth(C$, '秘repaintCmp$J$I$I$I$I',  function (tm, x, y, width, height) {
if (this.canPaint$()) {
if (this.peer != null ) {
if (this.isVisible$() && width > 0  && height > 0 ) {
var e=Clazz_new_([this, 801, Clazz_new_($I$(12,1).c$$I$I$I$I,[x, y, width, height])],$I$(15,1).c$$java_awt_Component$I$java_awt_Rectangle);
$I$(6).getEventQueue$().postEvent$java_awt_AWTEvent(e);
} else {
this.peer.setVisible$Z(false);
}}} else if (this.parent != null ) {
var px=this.x + ((x < 0) ? 0 : x);
var py=this.y + ((y < 0) ? 0 : y);
var pwidth=(width > this.width) ? this.width : width;
var pheight=(height > this.height) ? this.height : height;
this.parent.repaint$J$I$I$I$I(tm, px, py, pwidth, pheight);
}});

Clazz_newMeth(C$, 'canPaint$',  function () {
return !(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer"));
});

Clazz_newMeth(C$, 'print$java_awt_Graphics',  function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printAll$java_awt_Graphics',  function (g) {
});

Clazz_newMeth(C$, 'printHeavyweightComponents$java_awt_Graphics',  function (g) {
});

Clazz_newMeth(C$, 'imageUpdate$java_awt_Image$I$I$I$I$I',  function (img, infoflags, x, y, w, h) {
return false;
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer',  function (producer) {
return (this.isDisplayable$() ? (this.getToolkit$()).createImage$java_awt_Component$java_awt_image_ImageProducer(this, producer) : null);
});

Clazz_newMeth(C$, 'createImage$I$I',  function (width, height) {
return (this.isDisplayable$() ? (this.getToolkit$()).createImage$java_awt_Component$I$I(this, width, height) : null);
});

Clazz_newMeth(C$, 'createVolatileImage$I$I',  function (width, height) {
return null;
});

Clazz_newMeth(C$, 'createVolatileImage$I$I$java_awt_ImageCapabilities',  function (width, height, caps) {
return this.createVolatileImage$I$I(width, height);
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$java_awt_image_ImageObserver',  function (image, observer) {
return this.prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver(image, -1, -1, observer);
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (image, width, height, observer) {
return false;
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$java_awt_image_ImageObserver',  function (image, observer) {
return this.checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver(image, -1, -1, observer);
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (image, width, height, observer) {
return 35;
});

Clazz_newMeth(C$, 'setIgnoreRepaint$Z',  function (ignoreRepaint) {
});

Clazz_newMeth(C$, 'getIgnoreRepaint$',  function () {
return false;
});

Clazz_newMeth(C$, 'contains$java_awt_Point',  function (p) {
return this.contains$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'contains$I$I',  function (x, y) {
return this.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'inside$I$I',  function (x, y) {
return (x >= 0) && (x < this.width) && (y >= 0) && (y < this.height)  ;
});

Clazz_newMeth(C$, 'getComponentAt$I$I',  function (x, y) {
return this.locate$I$I(x, y);
});

Clazz_newMeth(C$, 'locate$I$I',  function (x, y) {
return this.contains$I$I(x, y) ? this : null;
});

Clazz_newMeth(C$, 'getComponentAt$java_awt_Point',  function (p) {
return this.getComponentAt$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'deliverEvent$java_awt_Event',  function (e) {
this.postEvent$java_awt_Event(e);
});

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent',  function (e) {
this.dispatchEventImpl$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent',  function (e) {
this.dispatchEventImplComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'dispatchEventImplComp$java_awt_AWTEvent',  function (e) {
var id=e.getID$();
if (!(Clazz_instanceOf(e, "java.awt.event.KeyEvent"))) {
$I$(16).setCurrentEventAndMostRecentTime$java_awt_AWTEvent(e);
}if (Clazz_instanceOf(e, "swingjs.JSDnD.JSDropMouseEvent")) {
(e).dispatch$();
return;
}if (!e.focusManagerIsDispatching) {
if (e.isPosted) {
e=$I$(8).retargetFocusEvent$java_awt_AWTEvent(e);
e.isPosted=true;
}if ($I$(8).getCurrentKeyboardFocusManager$().dispatchEvent$java_awt_AWTEvent(e)) {
return;
}}var toolkit=$I$(6).getDefaultToolkit$();
toolkit.notifyAWTEventListeners$java_awt_AWTEvent(e);
if (!e.isConsumed$()) {
if (Clazz_instanceOf(e, "java.awt.event.KeyEvent")) {
$I$(8).getCurrentKeyboardFocusManager$().processKeyEvent$java_awt_Component$java_awt_event_KeyEvent(this, e);
if (e.isConsumed$()) {
return;
}}}switch (id) {
case 801:
(this).秘update$();
break;
case 401:
case 402:
var p=((Clazz_instanceOf(this, "java.awt.Container")) ? this : this.parent);
if (p != null ) {
p.preProcessKeyEvent$java_awt_event_KeyEvent(e);
}break;
case 201:
break;
default:
break;
}
if (this.newEventsOnly) {
if (this.eventEnabled$java_awt_AWTEvent(e)) {
this.processEvent$java_awt_AWTEvent(e);
}} else if (id == 507) {
this.autoProcessMouseWheel$java_awt_event_MouseWheelEvent(e);
}});

Clazz_newMeth(C$, 'autoProcessMouseWheel$java_awt_event_MouseWheelEvent',  function (e) {
});

Clazz_newMeth(C$, 'dispatchMouseWheelToAncestor$java_awt_event_MouseWheelEvent',  function (e) {
var newX;
var newY;
newX=e.getX$() + this.getX$();
newY=e.getY$() + this.getY$();
var newMWE;
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var anc=this.getParent$();
while (anc != null  && !anc.eventEnabled$java_awt_AWTEvent(e) ){
newX+=anc.getX$();
newY+=anc.getY$();
if (!anc.isWindowOrJSApplet$()) {
anc=anc.getParent$();
} else {
break;
}}
if (anc != null  && anc.eventEnabled$java_awt_AWTEvent(e) ) {
newMWE=Clazz_new_([anc, e.getID$(), e.getWhen$(), e.getModifiers$(), newX, newY, e.getXOnScreen$(), e.getYOnScreen$(), e.getClickCount$(), e.isPopupTrigger$(), e.getScrollType$(), e.getScrollAmount$(), e.getWheelRotation$(), e.getPreciseWheelRotation$()],$I$(17,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I$D);
(e).copyPrivateDataInto$java_awt_AWTEvent(newMWE);
anc.dispatchEventToSelf$java_awt_AWTEvent(newMWE);
}}return true;
});

Clazz_newMeth(C$, 'checkWindowClosingException$',  function () {
if (this.windowClosingException != null ) {
if (Clazz_instanceOf(this, "java.awt.JSDialog")) {
(this).interruptBlocking$();
} else {
this.windowClosingException.fillInStackTrace$();
this.windowClosingException.printStackTrace$();
this.windowClosingException=null;
}return true;
}return false;
});

Clazz_newMeth(C$, 'areInputMethodsEnabled$',  function () {
return (Long.$ne((Long.$and(this.eventMask,4096)),0 )) && (Long.$ne((Long.$and(this.eventMask,8)),0 ) || this.keyListener != null  ) ;
});

Clazz_newMeth(C$, 'eventEnabled$java_awt_AWTEvent',  function (e) {
return this.eventTypeEnabled$I(e.id);
});

Clazz_newMeth(C$, 'eventTypeEnabled$I',  function (type) {
switch (type) {
case 100:
case 101:
case 102:
case 103:
if (Long.$ne((Long.$and(this.eventMask,1)),0 ) || this.componentListener != null  ) {
return true;
}break;
case 1004:
case 1005:
if (Long.$ne((Long.$and(this.eventMask,4)),0 ) || this.focusListener != null  ) {
return true;
}break;
case 401:
case 402:
case 400:
if (Long.$ne((Long.$and(this.eventMask,8)),0 ) || this.keyListener != null  ) {
return true;
}break;
case 501:
case 502:
case 504:
case 505:
case 500:
if (Long.$ne((Long.$and(this.eventMask,16)),0 ) || this.mouseListener != null  ) {
return true;
}break;
case 503:
case 506:
if (Long.$ne((Long.$and(this.eventMask,32)),0 ) || this.mouseMotionListener != null  ) {
return true;
}break;
case 507:
if (Long.$ne((Long.$and(this.eventMask,131072)),0 ) || this.mouseWheelListener != null  ) {
return true;
}break;
case 1100:
case 1101:
if (Long.$ne((Long.$and(this.eventMask,2048)),0 ) || this.inputMethodListener != null  ) {
return true;
}break;
case 1400:
if (Long.$ne((Long.$and(this.eventMask,32768)),0 ) || this.hierarchyListener != null  ) {
return true;
}break;
case 1401:
case 1402:
if (Long.$ne((Long.$and(this.eventMask,65536)),0 ) || this.hierarchyBoundsListener != null  ) {
return true;
}break;
case 1001:
if (Long.$ne((Long.$and(this.eventMask,128)),0 )) {
return true;
}break;
case 900:
if (Long.$ne((Long.$and(this.eventMask,1024)),0 )) {
return true;
}break;
case 701:
if (Long.$ne((Long.$and(this.eventMask,512)),0 )) {
return true;
}break;
case 601:
if (Long.$ne((Long.$and(this.eventMask,256)),0 )) {
return true;
}break;
default:
break;
}
if (type > 1999) {
return true;
}return false;
});

Clazz_newMeth(C$, 'postEvent$java_awt_Event',  function (e) {
if (this.handleEvent$java_awt_Event(e)) {
e.consume$();
return true;
}var parent=this.parent;
var eventx=e.x;
var eventy=e.y;
if (parent != null ) {
e.translate$I$I(this.x, this.y);
if (parent.postEvent$java_awt_Event(e)) {
e.consume$();
return true;
}e.x=eventx;
e.y=eventy;
}return false;
});

Clazz_newMeth(C$, 'addComponentListener$java_awt_event_ComponentListener',  function (l) {
if (l == null ) {
return;
}this.componentListener=$I$(18).add$java_awt_event_ComponentListener$java_awt_event_ComponentListener(this.componentListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeComponentListener$java_awt_event_ComponentListener',  function (l) {
if (l == null ) {
return;
}this.componentListener=$I$(18).remove$java_awt_event_ComponentListener$java_awt_event_ComponentListener(this.componentListener, l);
});

Clazz_newMeth(C$, 'getComponentListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(19),['componentHidden$java_awt_event_ComponentEvent','componentMoved$java_awt_event_ComponentEvent','componentResized$java_awt_event_ComponentEvent','componentShown$java_awt_event_ComponentEvent'])));
});

Clazz_newMeth(C$, 'addFocusListener$java_awt_event_FocusListener',  function (l) {
if (l == null ) {
return;
}this.focusListener=$I$(18).add$java_awt_event_FocusListener$java_awt_event_FocusListener(this.focusListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeFocusListener$java_awt_event_FocusListener',  function (l) {
if (l == null ) {
return;
}this.focusListener=$I$(18).remove$java_awt_event_FocusListener$java_awt_event_FocusListener(this.focusListener, l);
});

Clazz_newMeth(C$, 'getFocusListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(20),['focusGained$java_awt_event_FocusEvent','focusLost$java_awt_event_FocusEvent'])));
});

Clazz_newMeth(C$, 'addHierarchyListener$java_awt_event_HierarchyListener',  function (l) {
if (l == null ) {
return;
}var notifyAncestors;
{
notifyAncestors=(this.hierarchyListener == null  && Long.$eq((Long.$and(this.eventMask,32768)),0 ) );
this.hierarchyListener=$I$(18).add$java_awt_event_HierarchyListener$java_awt_event_HierarchyListener(this.hierarchyListener, l);
notifyAncestors=(notifyAncestors && this.hierarchyListener != null  );
this.newEventsOnly=true;
}if (notifyAncestors) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildrenOnParent$J$I(32768, 1);
}}});

Clazz_newMeth(C$, 'removeHierarchyListener$java_awt_event_HierarchyListener',  function (l) {
if (l == null ) {
return;
}var notifyAncestors;
{
notifyAncestors=(this.hierarchyListener != null  && Long.$eq((Long.$and(this.eventMask,32768)),0 ) );
this.hierarchyListener=$I$(18).remove$java_awt_event_HierarchyListener$java_awt_event_HierarchyListener(this.hierarchyListener, l);
notifyAncestors=(notifyAncestors && this.hierarchyListener == null  );
}if (notifyAncestors) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildrenOnParent$J$I(32768, -1);
}}});

Clazz_newMeth(C$, 'getHierarchyListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(21),['hierarchyChanged$java_awt_event_HierarchyEvent'])));
});

Clazz_newMeth(C$, 'addHierarchyBoundsListener$java_awt_event_HierarchyBoundsListener',  function (l) {
if (l == null ) {
return;
}var notifyAncestors;
notifyAncestors=(this.hierarchyBoundsListener == null  && Long.$eq((Long.$and(this.eventMask,65536)),0 ) );
this.hierarchyBoundsListener=$I$(18).add$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener(this.hierarchyBoundsListener, l);
notifyAncestors=(notifyAncestors && this.hierarchyBoundsListener != null  );
this.newEventsOnly=true;
if (notifyAncestors) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildrenOnParent$J$I(65536, 1);
}}});

Clazz_newMeth(C$, 'removeHierarchyBoundsListener$java_awt_event_HierarchyBoundsListener',  function (l) {
if (l == null ) {
return;
}var notifyAncestors;
{
notifyAncestors=(this.hierarchyBoundsListener != null  && Long.$eq((Long.$and(this.eventMask,65536)),0 ) );
this.hierarchyBoundsListener=$I$(18).remove$java_awt_event_HierarchyBoundsListener$java_awt_event_HierarchyBoundsListener(this.hierarchyBoundsListener, l);
notifyAncestors=(notifyAncestors && this.hierarchyBoundsListener == null  );
}if (notifyAncestors) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildrenOnParent$J$I(65536, -1);
}}});

Clazz_newMeth(C$, 'numListening$J',  function (mask) {
return this.numListeningMask$J(mask);
});

Clazz_newMeth(C$, 'numListeningMask$J',  function (mask) {
if ((Long.$eq(mask,32768 ) && (this.hierarchyListener != null  || Long.$ne((Long.$and(this.eventMask,32768)),0 ) ) ) || (Long.$eq(mask,65536 ) && (this.hierarchyBoundsListener != null  || Long.$ne((Long.$and(this.eventMask,65536)),0 ) ) ) ) {
return 1;
} else {
return 0;
}});

Clazz_newMeth(C$, 'countHierarchyMembers$',  function () {
return 1;
});

Clazz_newMeth(C$, 'createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z',  function (id, changed, changedParent, changeFlags, enabledOnToolkit) {
return this.createHierEventsComp$I$java_awt_Component$java_awt_Container$J$Z(id, changed, changedParent, changeFlags, enabledOnToolkit);
});

Clazz_newMeth(C$, 'createHierEventsComp$I$java_awt_Component$java_awt_Container$J$Z',  function (id, changed, changedParent, changeFlags, enabledOnToolkit) {
switch (id) {
case 1400:
if (this.hierarchyListener != null  || Long.$ne((Long.$and(this.eventMask,32768)),0 )  || enabledOnToolkit ) {
var e=Clazz_new_($I$(22,1).c$$java_awt_Component$I$java_awt_Component$java_awt_Container$J,[this, id, changed, changedParent, changeFlags]);
this.dispatchEvent$java_awt_AWTEvent(e);
return 1;
}break;
case 1401:
case 1402:
if (this.hierarchyBoundsListener != null  || Long.$ne((Long.$and(this.eventMask,65536)),0 )  || enabledOnToolkit ) {
var e=Clazz_new_($I$(22,1).c$$java_awt_Component$I$java_awt_Component$java_awt_Container,[this, id, changed, changedParent]);
this.dispatchEvent$java_awt_AWTEvent(e);
return 1;
}break;
default:
break;
}
return 0;
});

Clazz_newMeth(C$, 'getHierarchyBoundsListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(23),['ancestorMoved$java_awt_event_HierarchyEvent','ancestorResized$java_awt_event_HierarchyEvent'])));
});

Clazz_newMeth(C$, 'adjustListeningChildrenOnParent$J$I',  function (mask, num) {
if (this.parent != null ) {
this.parent.adjustListeningChildren$J$I(mask, num);
}});

Clazz_newMeth(C$, 'addKeyListener$java_awt_event_KeyListener',  function (l) {
if (l == null ) {
return;
}this.keyListener=$I$(18).add$java_awt_event_KeyListener$java_awt_event_KeyListener(this.keyListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeKeyListener$java_awt_event_KeyListener',  function (l) {
if (l == null ) {
return;
}this.keyListener=$I$(18).remove$java_awt_event_KeyListener$java_awt_event_KeyListener(this.keyListener, l);
});

Clazz_newMeth(C$, 'getKeyListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(24),['keyPressed$java_awt_event_KeyEvent','keyReleased$java_awt_event_KeyEvent','keyTyped$java_awt_event_KeyEvent'])));
});

Clazz_newMeth(C$, 'addMouseListener$java_awt_event_MouseListener',  function (l) {
if (l == null ) {
return;
}this.mouseListener=$I$(18).add$java_awt_event_MouseListener$java_awt_event_MouseListener(this.mouseListener, l);
this.newEventsOnly=true;
if (Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer") && this.parent != null  ) {
this.parent.proxyEnableEvents$J(16);
}});

Clazz_newMeth(C$, 'removeMouseListener$java_awt_event_MouseListener',  function (l) {
if (l == null ) {
return;
}this.mouseListener=$I$(18).remove$java_awt_event_MouseListener$java_awt_event_MouseListener(this.mouseListener, l);
});

Clazz_newMeth(C$, 'getMouseListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(25),['mouseClicked$java_awt_event_MouseEvent','mouseEntered$java_awt_event_MouseEvent','mouseExited$java_awt_event_MouseEvent','mousePressed$java_awt_event_MouseEvent','mouseReleased$java_awt_event_MouseEvent'])));
});

Clazz_newMeth(C$, 'addMouseMotionListener$java_awt_event_MouseMotionListener',  function (l) {
if (l == null ) {
return;
}this.mouseMotionListener=$I$(18).add$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener(this.mouseMotionListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeMouseMotionListener$java_awt_event_MouseMotionListener',  function (l) {
if (l == null ) {
return;
}this.mouseMotionListener=$I$(18).remove$java_awt_event_MouseMotionListener$java_awt_event_MouseMotionListener(this.mouseMotionListener, l);
});

Clazz_newMeth(C$, 'getMouseMotionListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(26),['mouseDragged$java_awt_event_MouseEvent','mouseMoved$java_awt_event_MouseEvent'])));
});

Clazz_newMeth(C$, 'addMouseWheelListener$java_awt_event_MouseWheelListener',  function (l) {
if (l == null ) {
return;
}this.mouseWheelListener=$I$(18).add$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener(this.mouseWheelListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeMouseWheelListener$java_awt_event_MouseWheelListener',  function (l) {
if (l == null ) {
return;
}this.mouseWheelListener=$I$(18).remove$java_awt_event_MouseWheelListener$java_awt_event_MouseWheelListener(this.mouseWheelListener, l);
});

Clazz_newMeth(C$, 'getMouseWheelListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(27),['mouseWheelMoved$java_awt_event_MouseWheelEvent'])));
});

Clazz_newMeth(C$, 'addInputMethodListener$java_awt_event_InputMethodListener',  function (l) {
if (l == null ) {
return;
}this.inputMethodListener=$I$(18).add$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener(this.inputMethodListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeInputMethodListener$java_awt_event_InputMethodListener',  function (l) {
if (l == null ) {
return;
}this.inputMethodListener=$I$(18).remove$java_awt_event_InputMethodListener$java_awt_event_InputMethodListener(this.inputMethodListener, l);
});

Clazz_newMeth(C$, 'getInputMethodListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(28),['caretPositionChanged$java_awt_event_InputMethodEvent','inputMethodTextChanged$java_awt_event_InputMethodEvent'])));
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
return this.getListenersComp$Class(listenerType);
});

Clazz_newMeth(C$, 'getListenersComp$Class',  function (listenerType) {
var l=null;
if (listenerType === Clazz_getClass($I$(19),['componentHidden$java_awt_event_ComponentEvent','componentMoved$java_awt_event_ComponentEvent','componentResized$java_awt_event_ComponentEvent','componentShown$java_awt_event_ComponentEvent']) ) {
l=this.componentListener;
} else if (listenerType === Clazz_getClass($I$(20),['focusGained$java_awt_event_FocusEvent','focusLost$java_awt_event_FocusEvent']) ) {
l=this.focusListener;
} else if (listenerType === Clazz_getClass($I$(21),['hierarchyChanged$java_awt_event_HierarchyEvent']) ) {
l=this.hierarchyListener;
} else if (listenerType === Clazz_getClass($I$(23),['ancestorMoved$java_awt_event_HierarchyEvent','ancestorResized$java_awt_event_HierarchyEvent']) ) {
l=this.hierarchyBoundsListener;
} else if (listenerType === Clazz_getClass($I$(24),['keyPressed$java_awt_event_KeyEvent','keyReleased$java_awt_event_KeyEvent','keyTyped$java_awt_event_KeyEvent']) ) {
l=this.keyListener;
} else if (listenerType === Clazz_getClass($I$(25),['mouseClicked$java_awt_event_MouseEvent','mouseEntered$java_awt_event_MouseEvent','mouseExited$java_awt_event_MouseEvent','mousePressed$java_awt_event_MouseEvent','mouseReleased$java_awt_event_MouseEvent']) ) {
l=this.mouseListener;
} else if (listenerType === Clazz_getClass($I$(26),['mouseDragged$java_awt_event_MouseEvent','mouseMoved$java_awt_event_MouseEvent']) ) {
l=this.mouseMotionListener;
} else if (listenerType === Clazz_getClass($I$(27),['mouseWheelMoved$java_awt_event_MouseWheelEvent']) ) {
l=this.mouseWheelListener;
} else if (listenerType === Clazz_getClass($I$(28),['caretPositionChanged$java_awt_event_InputMethodEvent','inputMethodTextChanged$java_awt_event_InputMethodEvent']) ) {
l=this.inputMethodListener;
} else if (listenerType === Clazz_getClass($I$(29),['propertyChange$java_beans_PropertyChangeEvent']) ) {
return this.getPropertyChangeListeners$();
}return $I$(18).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'enableEvents$J',  function (eventsToEnable) {
var notifyAncestors=0;
{
if (Long.$ne((Long.$and(eventsToEnable,32768)),0 ) && this.hierarchyListener == null   && Long.$eq((Long.$and(this.eventMask,32768)),0 ) ) {
(notifyAncestors=Long.$or(notifyAncestors,(32768)));
}if (Long.$ne((Long.$and(eventsToEnable,65536)),0 ) && this.hierarchyBoundsListener == null   && Long.$eq((Long.$and(this.eventMask,65536)),0 ) ) {
(notifyAncestors=Long.$or(notifyAncestors,(65536)));
}(this.eventMask=Long.$or(this.eventMask,(eventsToEnable)));
this.newEventsOnly=true;
}if (this.parent != null  && Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer") ) {
this.parent.proxyEnableEvents$J(this.eventMask);
}if (Long.$ne(notifyAncestors,0 )) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildrenOnParent$J$I(notifyAncestors, 1);
}}});

Clazz_newMeth(C$, 'disableEvents$J',  function (eventsToDisable) {
var notifyAncestors=0;
{
if (Long.$ne((Long.$and(eventsToDisable,32768)),0 ) && this.hierarchyListener == null   && Long.$ne((Long.$and(this.eventMask,32768)),0 ) ) {
(notifyAncestors=Long.$or(notifyAncestors,(32768)));
}if (Long.$ne((Long.$and(eventsToDisable,65536)),0 ) && this.hierarchyBoundsListener == null   && Long.$ne((Long.$and(this.eventMask,65536)),0 ) ) {
(notifyAncestors=Long.$or(notifyAncestors,(65536)));
}(this.eventMask=Long.$and(this.eventMask,((Long.$not(eventsToDisable)))));
}if (Long.$ne(notifyAncestors,0 )) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildrenOnParent$J$I(notifyAncestors, -1);
}}});

Clazz_newMeth(C$, 'checkCoalescing',  function () {
if (this.getClass$().getClassLoader$() == null ) {
return false;
}var clazz=this.getClass$().getName$();
{
var value=C$.coalesceMap.get$O(clazz);
if (value != null ) {
return value.booleanValue$();
}var enabled=Boolean.valueOf$Z(p$1.checkCoelescence.apply(this, []));
C$.coalesceMap.put$O$O(clazz, enabled);
return enabled.booleanValue$();
}}, p$1);

Clazz_newMeth(C$, 'checkCoelescence',  function () {
return this.coalesceEvents$java_awt_AWTEvent$java_awt_AWTEvent.exClazz != C$ ||false;
}, p$1);

Clazz_newMeth(C$, 'isCoalescingEnabled$',  function () {
return this.coalescingEnabled;
});

Clazz_newMeth(C$, 'coalesceEvents$java_awt_AWTEvent$java_awt_AWTEvent',  function (existingEvent, newEvent) {
return null;
});

Clazz_newMeth(C$, 'processEvent$java_awt_AWTEvent',  function (e) {
this.processEventComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processEventComp$java_awt_AWTEvent',  function (e) {
var isActiveRetarget=!!e.dispatch$ ||false;
if (isActiveRetarget || Clazz_instanceOf(e, "java.awt.ActiveEvent") ) {
(e).dispatch$();
} else if (Clazz_instanceOf(e, "java.awt.event.FocusEvent")) {
this.processFocusEvent$java_awt_event_FocusEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.MouseEvent")) {
switch (e.getID$()) {
case 501:
case 502:
case 500:
case 504:
case 505:
this.processMouseEvent$java_awt_event_MouseEvent(e);
break;
case 503:
case 506:
this.processMouseMotionEvent$java_awt_event_MouseEvent(e);
break;
case 507:
this.processMouseWheelEvent$java_awt_event_MouseWheelEvent(e);
break;
}
} else if (Clazz_instanceOf(e, "java.awt.event.KeyEvent")) {
this.processKeyEvent$java_awt_event_KeyEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.ComponentEvent")) {
this.processComponentEvent$java_awt_event_ComponentEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.InputMethodEvent")) {
this.processInputMethodEvent$java_awt_event_InputMethodEvent(e);
} else if (Clazz_instanceOf(e, "java.awt.event.HierarchyEvent")) {
switch (e.getID$()) {
case 1400:
this.processHierarchyEvent$java_awt_event_HierarchyEvent(e);
break;
case 1401:
case 1402:
this.processHierarchyBoundsEvent$java_awt_event_HierarchyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processComponentEvent$java_awt_event_ComponentEvent',  function (e) {
var listener=this.componentListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 101:
listener.componentResized$java_awt_event_ComponentEvent(e);
break;
case 100:
listener.componentMoved$java_awt_event_ComponentEvent(e);
break;
case 102:
listener.componentShown$java_awt_event_ComponentEvent(e);
break;
case 103:
listener.componentHidden$java_awt_event_ComponentEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processFocusEvent$java_awt_event_FocusEvent',  function (e) {
var listener=this.focusListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 1004:
listener.focusGained$java_awt_event_FocusEvent(e);
break;
case 1005:
listener.focusLost$java_awt_event_FocusEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent',  function (e) {
var listener=this.keyListener;
if (listener != null  && ((this).秘isAWT$() || this.秘isFocusableSet || this.keyListener != null   ) ) {
var id=e.getID$();
switch (id) {
case 400:
listener.keyTyped$java_awt_event_KeyEvent(e);
break;
case 401:
listener.keyPressed$java_awt_event_KeyEvent(e);
break;
case 402:
listener.keyReleased$java_awt_event_KeyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent',  function (e) {
var listener=this.mouseListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 501:
listener.mousePressed$java_awt_event_MouseEvent(e);
break;
case 502:
listener.mouseReleased$java_awt_event_MouseEvent(e);
break;
case 500:
listener.mouseClicked$java_awt_event_MouseEvent(e);
break;
case 505:
listener.mouseExited$java_awt_event_MouseEvent(e);
break;
case 504:
listener.mouseEntered$java_awt_event_MouseEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processMouseMotionEvent$java_awt_event_MouseEvent',  function (e) {
var listener=this.mouseMotionListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 503:
listener.mouseMoved$java_awt_event_MouseEvent(e);
break;
case 506:
listener.mouseDragged$java_awt_event_MouseEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processMouseWheelEvent$java_awt_event_MouseWheelEvent',  function (e) {
var listener=this.mouseWheelListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 507:
listener.mouseWheelMoved$java_awt_event_MouseWheelEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'postsOldMouseEvents$',  function () {
return false;
});

Clazz_newMeth(C$, 'processInputMethodEvent$java_awt_event_InputMethodEvent',  function (e) {
var listener=this.inputMethodListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 1100:
listener.inputMethodTextChanged$java_awt_event_InputMethodEvent(e);
break;
case 1101:
listener.caretPositionChanged$java_awt_event_InputMethodEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processHierarchyEvent$java_awt_event_HierarchyEvent',  function (e) {
var listener=this.hierarchyListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 1400:
listener.hierarchyChanged$java_awt_event_HierarchyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'processHierarchyBoundsEvent$java_awt_event_HierarchyEvent',  function (e) {
var listener=this.hierarchyBoundsListener;
if (listener != null ) {
var id=e.getID$();
switch (id) {
case 1401:
listener.ancestorMoved$java_awt_event_HierarchyEvent(e);
break;
case 1402:
listener.ancestorResized$java_awt_event_HierarchyEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'handleEvent$java_awt_Event',  function (evt) {
switch (evt.id) {
case 504:
return this.mouseEnter$java_awt_Event$I$I(evt, evt.x, evt.y);
case 505:
return this.mouseExit$java_awt_Event$I$I(evt, evt.x, evt.y);
case 503:
return this.mouseMove$java_awt_Event$I$I(evt, evt.x, evt.y);
case 501:
return this.mouseDown$java_awt_Event$I$I(evt, evt.x, evt.y);
case 506:
return this.mouseDrag$java_awt_Event$I$I(evt, evt.x, evt.y);
case 502:
return this.mouseUp$java_awt_Event$I$I(evt, evt.x, evt.y);
case 401:
case 403:
return this.keyDown$java_awt_Event$I(evt, evt.key);
case 402:
case 404:
return this.keyUp$java_awt_Event$I(evt, evt.key);
case 1001:
return this.action$java_awt_Event$O(evt, evt.arg);
case 1004:
return this.gotFocus$java_awt_Event$O(evt, evt.arg);
case 1005:
return this.lostFocus$java_awt_Event$O(evt, evt.arg);
}
return false;
});

Clazz_newMeth(C$, 'mouseDown$java_awt_Event$I$I',  function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseDrag$java_awt_Event$I$I',  function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseUp$java_awt_Event$I$I',  function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseMove$java_awt_Event$I$I',  function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseEnter$java_awt_Event$I$I',  function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'mouseExit$java_awt_Event$I$I',  function (evt, x, y) {
return false;
});

Clazz_newMeth(C$, 'keyDown$java_awt_Event$I',  function (evt, key) {
return false;
});

Clazz_newMeth(C$, 'keyUp$java_awt_Event$I',  function (evt, key) {
return false;
});

Clazz_newMeth(C$, 'action$java_awt_Event$O',  function (evt, what) {
return false;
});

Clazz_newMeth(C$, 'addNotify$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var peer=this.getOrCreatePeer$();
(this).秘setProxy$java_awt_Container(this.parent);
if (this.秘j2sInvalidateOnAdd) this.invalidate$();
if (this.dropTarget != null ) this.dropTarget.addNotify$java_awt_peer_ComponentPeer(peer);
this.peerFont=this.getFont$();
if (this.parent != null  && this.parent.peer != null  ) {
var parentContPeer=this.parent.peer;
}if (this.visible && peer != null  ) {
if (peer.isDisposed &&true) peer.setVisible$Z(true);
}if (this.hierarchyListener != null  || Long.$ne((Long.$and(this.eventMask,32768)),0 )  || $I$(6).enabledOnToolkit$J(32768) ) {
var e=Clazz_new_([this, 1400, this, this.parent, 2 | ((this.isRecursivelyVisible$()) ? 4 : 0)],$I$(22,1).c$$java_awt_Component$I$java_awt_Component$java_awt_Container$J);
this.dispatchEvent$java_awt_AWTEvent(e);
}}});

Clazz_newMeth(C$, 'getNativeContainer$',  function () {
var p=this.parent;
while (p != null  && !(Clazz_instanceOf(p, "java.applet.JSApplet"))  && Clazz_instanceOf(p.peer, "java.awt.peer.LightweightPeer") ){
p=p.getParent$();
}
return p;
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
this.removeNotifyComp$();
});

Clazz_newMeth(C$, 'removeNotifyComp$',  function () {
$I$(8).clearMostRecentFocusOwner$java_awt_Component(this);
if ($I$(8).getCurrentKeyboardFocusManager$().getPermanentFocusOwner$() === this ) {
$I$(8).getCurrentKeyboardFocusManager$().setGlobalPermanentFocusOwner$java_awt_Component(null);
}if (this.isFocusOwner$() && $I$(8).isAutoFocusTransferEnabledFor$java_awt_Component(this) ) {
this.transferFocus$Z(true);
}var p=this.getOrCreatePeer$();
if (p != null ) {
if (this.visible) {
p.setVisible$Z(false);
}$I$(6).getEventQueue$().removeSourceEvents$O$Z(this, false);
$I$(8).getCurrentKeyboardFocusManager$().discardKeyEvents$java_awt_Component(this);
p.dispose$();
}if (this.hierarchyListener != null  || Long.$ne((Long.$and(this.eventMask,32768)),0 )  || $I$(6).enabledOnToolkit$J(32768) ) {
var e=Clazz_new_([this, 1400, this, this.parent, 2 | ((this.isRecursivelyVisible$()) ? 4 : 0)],$I$(22,1).c$$java_awt_Component$I$java_awt_Component$java_awt_Container$J);
this.dispatchEvent$java_awt_AWTEvent(e);
}});

Clazz_newMeth(C$, 'gotFocus$java_awt_Event$O',  function (evt, what) {
return false;
});

Clazz_newMeth(C$, 'lostFocus$java_awt_Event$O',  function (evt, what) {
return false;
});

Clazz_newMeth(C$, 'isFocusTraversable$',  function () {
if (this.isFocusTraversableOverridden == 0) {
this.isFocusTraversableOverridden=1;
}return this.focusable;
});

Clazz_newMeth(C$, 'isFocusable$',  function () {
return this.isFocusTraversable$();
});

Clazz_newMeth(C$, 'setFocusable$Z',  function (focusable) {
var oldFocusable;
{
oldFocusable=this.focusable;
this.focusable=focusable;
}this.isFocusTraversableOverridden=2;
this.秘isFocusableSet=true;
this.firePropertyChange$S$O$O("focusable", Boolean.valueOf$Z(oldFocusable), Boolean.valueOf$Z(focusable));
if (oldFocusable && !focusable ) {
if (this.isFocusOwner$() && $I$(8).isAutoFocusTransferEnabled$() ) {
this.transferFocus$Z(true);
}$I$(8).clearMostRecentFocusOwner$java_awt_Component(this);
}});

Clazz_newMeth(C$, 'isFocusTraversableOverridden$',  function () {
return (this.isFocusTraversableOverridden != 1);
});

Clazz_newMeth(C$, 'setFocusTraversalKeys$I$java_util_Set',  function (id, keystrokes) {
if (id < 0 || id >= 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}this.setFocusTraversalKeys_NoIDCheck$I$java_util_Set(id, keystrokes);
});

Clazz_newMeth(C$, 'getFocusTraversalKeys$I',  function (id) {
if (id < 0 || id >= 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}return this.getFocusTraversalKeys_NoIDCheck$I(id);
});

Clazz_newMeth(C$, 'setFocusTraversalKeys_NoIDCheck$I$java_util_Set',  function (id, keystrokes) {
var oldKeys;
{
if (this.focusTraversalKeys == null ) {
this.initializeFocusTraversalKeys$();
}if (keystrokes != null ) {
for (var keystroke, $keystroke = keystrokes.iterator$(); $keystroke.hasNext$()&&((keystroke=($keystroke.next$())),1);) {
if (keystroke == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot set null focus traversal key"]);
}if (keystroke.getKeyChar$() != "\uffff") {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["focus traversal keys cannot map to KEY_TYPED events"]);
}for (var i=0; i < this.focusTraversalKeys.length; i++) {
if (i == id) {
continue;
}if (this.getFocusTraversalKeys_NoIDCheck$I(i).contains$O(keystroke)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["focus traversal keys must be unique for a Component"]);
}}
}
}oldKeys=this.focusTraversalKeys[id];
this.focusTraversalKeys[id]=(keystrokes != null ) ? $I$(30,"unmodifiableSet$java_util_Set",[Clazz_new_($I$(31,1).c$$java_util_Collection,[keystrokes])]) : null;
}this.firePropertyChange$S$O$O(C$.focusTraversalKeyPropertyNames[id], oldKeys, keystrokes);
});

Clazz_newMeth(C$, 'getFocusTraversalKeys_NoIDCheck$I',  function (id) {
var keystrokes=(this.focusTraversalKeys != null ) ? this.focusTraversalKeys[id] : null;
if (keystrokes != null ) {
return keystrokes;
} else {
var parent=this.parent;
if (parent != null ) {
return parent.getFocusTraversalKeys$I(id);
} else {
return $I$(8).getCurrentKeyboardFocusManager$().getDefaultFocusTraversalKeys$I(id);
}}});

Clazz_newMeth(C$, 'areFocusTraversalKeysSet$I',  function (id) {
if (id < 0 || id >= 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}return (this.focusTraversalKeys != null  && this.focusTraversalKeys[id] != null  );
});

Clazz_newMeth(C$, 'setFocusTraversalKeysEnabled$Z',  function (focusTraversalKeysEnabled) {
var oldFocusTraversalKeysEnabled;
{
oldFocusTraversalKeysEnabled=this.focusTraversalKeysEnabled;
this.focusTraversalKeysEnabled=focusTraversalKeysEnabled;
}this.firePropertyChange$S$Z$Z("focusTraversalKeysEnabled", oldFocusTraversalKeysEnabled, focusTraversalKeysEnabled);
});

Clazz_newMeth(C$, 'getFocusTraversalKeysEnabled$',  function () {
return this.focusTraversalKeysEnabled;
});

Clazz_newMeth(C$, 'requestFocus$',  function () {
this.requestFocusHelper$Z$Z(false, true);
});

Clazz_newMeth(C$, 'requestFocus$sun_awt_CausedFocusEvent_Cause',  function (cause) {
this.requestFocusHelper$Z$Z$sun_awt_CausedFocusEvent_Cause(false, true, cause);
});

Clazz_newMeth(C$, 'requestFocus$Z',  function (temporary) {
return this.requestFocusHelper$Z$Z(temporary, true);
});

Clazz_newMeth(C$, 'requestFocus$Z$sun_awt_CausedFocusEvent_Cause',  function (temporary, cause) {
return this.requestFocusHelper$Z$Z$sun_awt_CausedFocusEvent_Cause(temporary, true, cause);
});

Clazz_newMeth(C$, 'requestFocusInWindow$',  function () {
return this.requestFocusHelper$Z$Z(false, false);
});

Clazz_newMeth(C$, 'requestFocusInWindow$sun_awt_CausedFocusEvent_Cause',  function (cause) {
return this.requestFocusHelper$Z$Z$sun_awt_CausedFocusEvent_Cause(false, false, cause);
});

Clazz_newMeth(C$, 'requestFocusInWindow$Z',  function (temporary) {
return this.requestFocusHelper$Z$Z(temporary, false);
});

Clazz_newMeth(C$, 'requestFocusInWindow$Z$sun_awt_CausedFocusEvent_Cause',  function (temporary, cause) {
return this.requestFocusHelper$Z$Z$sun_awt_CausedFocusEvent_Cause(temporary, false, cause);
});

Clazz_newMeth(C$, 'requestFocusHelper$Z$Z',  function (temporary, focusedWindowChangeAllowed) {
return this.requestFocusHelper$Z$Z$sun_awt_CausedFocusEvent_Cause(temporary, focusedWindowChangeAllowed, $I$(32).UNKNOWN);
});

Clazz_newMeth(C$, 'requestFocusHelper$Z$Z$sun_awt_CausedFocusEvent_Cause',  function (temporary, focusedWindowChangeAllowed, cause) {
if (!p$1.isRequestFocusAccepted$Z$Z$sun_awt_CausedFocusEvent_Cause.apply(this, [temporary, focusedWindowChangeAllowed, cause])) {
return false;
}$I$(8).setMostRecentFocusOwner$java_awt_Component(this);
var window=this;
while ((window != null ) && !window.isWindowOrJSApplet$() ){
if (!window.isVisible$()) {
return false;
}window=window.parent;
}
var peer=this.peer;
var heavyweight=(!(this).秘winOrApplet && Clazz_instanceOf(peer, "java.awt.peer.LightweightPeer") ) ? this.getNativeContainer$() : this;
if (heavyweight == null  || !heavyweight.isVisible$() ) {
return false;
}peer=heavyweight.peer;
if (peer == null ) {
return false;
}var time=$I$(16).getMostRecentEventTime$();
var success=peer.requestFocus$java_awt_Component$Z$Z$J$sun_awt_CausedFocusEvent_Cause(this, temporary, focusedWindowChangeAllowed, time, cause);
if (!success) {
$I$(8).getCurrentKeyboardFocusManager$sun_awt_AppContext(this.appContext).dequeueKeyEvents$J$java_awt_Component(time, this);
} else {
}return success;
});

Clazz_newMeth(C$, 'isWindowOrJSApplet$',  function () {
return (this).秘winOrApplet;
});

Clazz_newMeth(C$, 'isJ2SWindowButNotJInternalFrame$',  function () {
return Clazz_instanceOf(this, "java.awt.Window") && (this).getUIClassID$() !== "InternalFrameUI"  ;
});

Clazz_newMeth(C$, 'isRequestFocusAccepted$Z$Z$sun_awt_CausedFocusEvent_Cause',  function (temporary, focusedWindowChangeAllowed, cause) {
if (!this.isFocusable$() || !this.isVisible$() ) {
return false;
}var peer=this.peer;
if (peer == null ) {
return false;
}var window=this.getContainingWindow$();
if (window == null  || !(window).isFocusableWindow$() ) {
return false;
}var focusOwner=$I$(8).getMostRecentFocusOwner$java_awt_Window(window);
if (focusOwner == null ) {
focusOwner=$I$(8).getCurrentKeyboardFocusManager$().getFocusOwner$();
if (focusOwner != null  && focusOwner.getContainingWindow$() !== window  ) {
focusOwner=null;
}}if (focusOwner === this  || focusOwner == null  ) {
return true;
}if ($I$(32).ACTIVATION === cause ) {
return true;
}if (C$.requestFocusController == null ) C$.requestFocusController=$I$(33).focusController;
var ret=C$.requestFocusController.acceptRequestFocus$java_awt_Component$java_awt_Component$Z$Z$sun_awt_CausedFocusEvent_Cause(focusOwner, this, temporary, focusedWindowChangeAllowed, cause);
return ret;
}, p$1);

Clazz_newMeth(C$, 'setRequestFocusController$sun_awt_RequestFocusController',  function (requestController) {
if (requestController == null ) {
C$.requestFocusController=Clazz_new_($I$(34,1));
} else {
C$.requestFocusController=requestController;
}}, 1);

Clazz_newMeth(C$, 'getFocusCycleRootAncestor$',  function () {
var rootAncestor=this.parent;
while (rootAncestor != null  && !rootAncestor.isFocusCycleRoot$() ){
rootAncestor=rootAncestor.parent;
}
return rootAncestor;
});

Clazz_newMeth(C$, 'isFocusCycleRoot$java_awt_Container',  function (container) {
return this.isFocusCycleRootComp$java_awt_Container(container);
});

Clazz_newMeth(C$, 'isFocusCycleRootComp$java_awt_Container',  function (container) {
var rootAncestor=this.getFocusCycleRootAncestor$();
return (rootAncestor === container );
});

Clazz_newMeth(C$, 'getTraversalRoot$',  function () {
return this.getFocusCycleRootAncestor$();
});

Clazz_newMeth(C$, 'transferFocus$',  function () {
this.nextFocus$();
});

Clazz_newMeth(C$, 'nextFocus$',  function () {
this.transferFocus$Z(false);
});

Clazz_newMeth(C$, 'transferFocus$Z',  function (clearOnFailure) {
var toFocus=this.getNextFocusCandidate$();
var res=false;
if (toFocus != null  && !toFocus.isFocusOwner$()  && toFocus !== this  ) {
res=toFocus.requestFocusInWindow$sun_awt_CausedFocusEvent_Cause($I$(32).TRAVERSAL_FORWARD);
}if (clearOnFailure && !res ) {
$I$(8).getCurrentKeyboardFocusManager$().clearGlobalFocusOwner$();
}return res;
});

Clazz_newMeth(C$, 'getNextFocusCandidate$',  function () {
var rootAncestor=this.getTraversalRoot$();
var comp=this;
while (rootAncestor != null  && !(rootAncestor.isShowing$() && rootAncestor.canBeFocusOwner$() ) ){
comp=rootAncestor;
rootAncestor=comp.getFocusCycleRootAncestor$();
}
var candidate=null;
if (rootAncestor != null ) {
var policy=rootAncestor.getFocusTraversalPolicy$();
var toFocus=policy.getComponentAfter$java_awt_Container$java_awt_Component(rootAncestor, comp);
if (toFocus == null ) {
toFocus=policy.getDefaultComponent$java_awt_Container(rootAncestor);
}candidate=toFocus;
}return candidate;
});

Clazz_newMeth(C$, 'transferFocusBackward$',  function () {
this.transferFocusBackward$Z(false);
});

Clazz_newMeth(C$, 'transferFocusBackward$Z',  function (clearOnFailure) {
var rootAncestor=this.getTraversalRoot$();
var comp=this;
while (rootAncestor != null  && !(rootAncestor.isShowing$() && rootAncestor.canBeFocusOwner$() ) ){
comp=rootAncestor;
rootAncestor=comp.getFocusCycleRootAncestor$();
}
var res=false;
if (rootAncestor != null ) {
var policy=rootAncestor.getFocusTraversalPolicy$();
var toFocus=policy.getComponentBefore$java_awt_Container$java_awt_Component(rootAncestor, comp);
if (toFocus == null ) {
toFocus=policy.getDefaultComponent$java_awt_Container(rootAncestor);
}if (toFocus != null ) {
res=toFocus.requestFocusInWindow$sun_awt_CausedFocusEvent_Cause($I$(32).TRAVERSAL_BACKWARD);
}}if (!res) {
$I$(8).getCurrentKeyboardFocusManager$().clearGlobalFocusOwner$();
}return res;
});

Clazz_newMeth(C$, 'transferFocusUpCycle$',  function () {
var rootAncestor;
for (rootAncestor=this.getFocusCycleRootAncestor$(); rootAncestor != null  && !(rootAncestor.isShowing$() && rootAncestor.isFocusable$() && rootAncestor.isEnabled$()  ) ; rootAncestor=rootAncestor.getFocusCycleRootAncestor$()) {
}
if (rootAncestor != null ) {
var rootAncestorRootAncestor=rootAncestor.getFocusCycleRootAncestor$();
$I$(8).getCurrentKeyboardFocusManager$().setGlobalCurrentFocusCycleRoot$java_awt_Container((rootAncestorRootAncestor != null ) ? rootAncestorRootAncestor : rootAncestor);
rootAncestor.requestFocus$sun_awt_CausedFocusEvent_Cause($I$(32).TRAVERSAL_UP);
} else {
var window=this.getContainingWindow$();
if (window != null ) {
var toFocus=window.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(window);
if (toFocus != null ) {
$I$(8).getCurrentKeyboardFocusManager$().setGlobalCurrentFocusCycleRoot$java_awt_Container(window);
toFocus.requestFocus$sun_awt_CausedFocusEvent_Cause($I$(32).TRAVERSAL_UP);
}}}});

Clazz_newMeth(C$, 'hasFocus$',  function () {
return ($I$(8).getCurrentKeyboardFocusManager$().getFocusOwner$() === this );
});

Clazz_newMeth(C$, 'isFocusOwner$',  function () {
return this.hasFocus$();
});

Clazz_newMeth(C$, 'setAutoFocusTransferOnDisposal$Z',  function (value) {
this.autoFocusTransferOnDisposal=value;
});

Clazz_newMeth(C$, 'isAutoFocusTransferOnDisposal$',  function () {
return this.autoFocusTransferOnDisposal;
});

Clazz_newMeth(C$, 'add$java_awt_PopupMenu',  function (popup) {
popup.setInvoker$java_awt_Component(this);
});

Clazz_newMeth(C$, 'paramString$',  function () {
return this.paramStringComp$();
});

Clazz_newMeth(C$, 'paramStringComp$',  function () {
var thisName=this.getName$();
var str=(thisName != null  ? thisName : "");
str+=(
this.__JSID__ +
"");
if (!this.isValid$()) {
str+=",invalid";
}if (!this.visible) {
str+=",hidden";
}if (!this.enabled) {
str+=",disabled";
}str+=",parent:" + (this.parent == null  ? null : this.parent.getName$()) + "," + this.x + "," + this.y + "," + this.width + "x" + this.height ;
return str;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[" + this.paramString$() + "]" ;
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
if (listener == null ) {
return;
}if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(35,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
if (listener == null  || this.changeSupport == null  ) {
return;
}this.changeSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
if (this.changeSupport == null ) {
return Clazz_array($I$(29), [0]);
}return this.changeSupport.getPropertyChangeListeners$();
}});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
if (listener == null ) {
return;
}if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(35,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
if (listener == null  || this.changeSupport == null  ) {
return;
}this.changeSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S',  function (propertyName) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
if (this.changeSupport == null ) {
return Clazz_array($I$(29), [0]);
}return this.changeSupport.getPropertyChangeListeners$S(propertyName);
}});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O',  function (propertyName, oldValue, newValue) {
var changeSupport;
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(p$1.getChangeSupportLock.apply(this, []));
{
changeSupport=this.changeSupport;
}if (changeSupport == null  || (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) ) {
return;
}changeSupport.firePropertyChange$S$O$O(propertyName, oldValue, newValue);
});

Clazz_newMeth(C$, 'firePropertyChange$S$Z$Z',  function (propertyName, oldValue, newValue) {
var changeSupport=this.changeSupport;
if (changeSupport == null  || oldValue == newValue  ) {
return;
}changeSupport.firePropertyChange$S$O$O(propertyName, Boolean.valueOf$Z(oldValue), Boolean.valueOf$Z(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$I$I',  function (propertyName, oldValue, newValue) {
var changeSupport=this.changeSupport;
if (changeSupport == null  || oldValue == newValue ) {
return;
}changeSupport.firePropertyChange$S$O$O(propertyName, Integer.valueOf$I(oldValue), Integer.valueOf$I(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$B$B',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Byte.valueOf$B(oldValue), Byte.valueOf$B(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$C$C',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Clazz_new_(Character.c$$C,[oldValue]), Clazz_new_(Character.c$$C,[newValue]));
});

Clazz_newMeth(C$, 'firePropertyChange$S$H$H',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Short.valueOf$H(oldValue), Short.valueOf$H(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$J$J',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || Long.$eq(oldValue,newValue ) ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Long.valueOf$J(oldValue), Long.valueOf$J(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$F$F',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue  ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Float.valueOf$F(oldValue), Float.valueOf$F(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$D$D',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || oldValue == newValue  ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Double.valueOf$D(oldValue), Double.valueOf$D(newValue));
});

Clazz_newMeth(C$, 'setComponentOrientation$java_awt_ComponentOrientation',  function (o) {
var oldValue=this.componentOrientation;
this.componentOrientation=o;
this.firePropertyChange$S$O$O("componentOrientation", oldValue, o);
this.invalidateIfValid$();
});

Clazz_newMeth(C$, 'getComponentOrientation$',  function () {
return this.componentOrientation;
});

Clazz_newMeth(C$, 'applyComponentOrientation$java_awt_ComponentOrientation',  function (orientation) {
this.applyCompOrientComp$java_awt_ComponentOrientation(orientation);
});

Clazz_newMeth(C$, 'applyCompOrientComp$java_awt_ComponentOrientation',  function (orientation) {
if (orientation == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}this.setComponentOrientation$java_awt_ComponentOrientation(orientation);
});

Clazz_newMeth(C$, 'canBeFocusOwner$',  function () {
if (this.isEnabled$() && this.isDisplayable$() && this.isVisible$() && this.isFocusable$()  ) {
return true;
}return false;
});

Clazz_newMeth(C$, 'canBeFocusOwnerRecursively$',  function () {
if (!this.canBeFocusOwner$()) {
return false;
}if (this.parent != null ) {
return this.parent.canContainFocusOwner$java_awt_Component(this);
}return true;
});

Clazz_newMeth(C$, 'relocateComponent$',  function () {
});

Clazz_newMeth(C$, 'getContainingWindow$',  function () {
return $I$(36).getContainingWindow$java_awt_Component(this);
});

Clazz_newMeth(C$, 'isInstanceOf$O$S',  function (obj, className) {
if (obj == null ) return false;
if (className == null ) return false;
var cls=obj.getClass$();
while (cls != null ){
if (cls.getName$().equals$O(className)) {
return true;
}cls=cls.getSuperclass$();
}
return false;
}, 1);

Clazz_newMeth(C$, 'areBoundsValid$',  function () {
var cont=this.getContainer$();
return cont == null  || cont.isValid$()  || cont.getLayout$() == null  ;
});

Clazz_newMeth(C$, 'getLocationOnWindow$',  function () {
var curLocation=this.getLocation$();
for (var parent=this.getContainer$(); parent != null  && !parent.isWindowOrJSApplet$() ; parent=parent.getContainer$()) {
curLocation.x+=parent.getX$();
curLocation.y+=parent.getY$();
}
return curLocation;
});

Clazz_newMeth(C$, 'getSiblingIndexAbove$',  function () {
var parent=this.getContainer$();
if (parent == null ) {
return -1;
}var nextAbove=parent.getComponentZOrder$java_awt_Component(this) - 1;
return nextAbove < 0 ? -1 : nextAbove;
});

Clazz_newMeth(C$, 'getSiblingIndexBelow$',  function () {
var parent=this.getContainer$();
if (parent == null ) {
return -1;
}var nextBelow=parent.getComponentZOrder$java_awt_Component(this) + 1;
return nextBelow >= parent.getComponentCount$() ? -1 : nextBelow;
});

Clazz_newMeth(C$, 'mixOnShowing$',  function () {
});

Clazz_newMeth(C$, 'mixOnHiding$Z',  function (isLightweight) {
});

Clazz_newMeth(C$, 'mixOnReshaping$',  function () {
$I$(5).taintUI$java_awt_Component(this);
});

Clazz_newMeth(C$, 'mixOnZOrderChanging$I$I',  function (oldZorder, newZorder) {
});

Clazz_newMeth(C$, 'mixOnValidating$',  function () {
});

Clazz_newMeth(C$, 'doesClassImplement$Class$S',  function (cls, interfaceName) {
if (cls == null ) return false;
for (var c, $c = 0, $$c = cls.getInterfaces$(); $c<$$c.length&&((c=($$c[$c])),1);$c++) {
if (c.getName$().equals$O(interfaceName)) {
return true;
}}
return C$.doesClassImplement$Class$S(cls.getSuperclass$(), interfaceName);
}, 1);

Clazz_newMeth(C$, 'doesImplement$O$S',  function (obj, interfaceName) {
if (obj == null ) return false;
if (interfaceName == null ) return false;
return C$.doesClassImplement$Class$S(obj.getClass$(), interfaceName);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.focusTraversalKeyPropertyNames=Clazz_array(String, -1, ["forwardFocusTraversalKeys", "backwardFocusTraversalKeys", "upCycleFocusTraversalKeys", "downCycleFocusTraversalKeys"]);
C$.coalesceMap=Clazz_new_($I$(1,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Component, "AWTTreeLock", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$);
})()
;
(function(){/*e*/var C$=Clazz_newClass(P$.Component, "BaselineResizeBehavior", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "CONSTANT_ASCENT", 0, []);
Clazz_newEnumConst($vals, C$.c$, "CONSTANT_DESCENT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "CENTER_OFFSET", 2, []);
Clazz_newEnumConst($vals, C$.c$, "OTHER", 3, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Component, "DummyRequestFocusController", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'sun.awt.RequestFocusController');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'acceptRequestFocus$java_awt_Component$java_awt_Component$Z$Z$sun_awt_CausedFocusEvent_Cause',  function (from, to, temporary, focusedWindowChangeAllowed, cause) {
return true;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.util.Locale']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ComponentOrientation");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['orientation']]
,['O',['LEFT_TO_RIGHT','java.awt.ComponentOrientation','+RIGHT_TO_LEFT','+UNKNOWN']]]

Clazz_newMeth(C$, 'isHorizontal$',  function () {
return (this.orientation & 2) != 0;
});

Clazz_newMeth(C$, 'isLeftToRight$',  function () {
return (this.orientation & 4) != 0;
});

Clazz_newMeth(C$, 'getOrientation$java_util_Locale',  function (locale) {
var lang=locale.getLanguage$();
if ("iw".equals$O(lang) || "ar".equals$O(lang) || "fa".equals$O(lang) || "ur".equals$O(lang)  ) {
return C$.RIGHT_TO_LEFT;
} else {
return C$.LEFT_TO_RIGHT;
}}, 1);

Clazz_newMeth(C$, 'getOrientation$java_util_ResourceBundle',  function (bdl) {
var result=null;
try {
result=bdl.getObject$S("Orientation");
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
if (result == null ) {
result=C$.getOrientation$java_util_Locale(bdl.getLocale$());
}if (result == null ) {
result=C$.getOrientation$java_util_Locale($I$(1).getDefault$());
}return result;
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (value) {
;C$.$init$.apply(this);
this.orientation=value;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.LEFT_TO_RIGHT=Clazz_new_(C$.c$$I,[6]);
C$.RIGHT_TO_LEFT=Clazz_new_(C$.c$$I,[2]);
C$.UNKNOWN=Clazz_new_(C$.c$$I,[7]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},p$2={},I$=[[0,'java.awt.Component','java.awt.Insets','javajs.util.Lst','java.awt.Toolkit','java.awt.event.ContainerEvent','java.awt.Dimension',['java.awt.GraphicsCallback','.PaintCallback'],['java.awt.GraphicsCallback','.PaintAllCallback'],['java.awt.GraphicsCallback','.PaintHeavyweightComponentsCallback'],'java.awt.AWTEventMulticaster','java.awt.event.ContainerListener',['java.awt.Container','.DropTargetEventTargetFilter'],['java.awt.Container','.MouseEventTargetFilter'],'java.awt.LightweightDispatcher','java.awt.KeyboardFocusManager','swingjs.JSMouse','java.awt.event.MouseEvent',['swingjs.JSDnD','.JSDropMouseEvent'],'java.awt.event.MouseWheelEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Container", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.JSComponent');
C$.$classes$=[['EventTargetFilter',8],['MouseEventTargetFilter',8],['DropTargetEventTargetFilter',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.focusCycleRoot=false;
this.preserveBackgroundColor=null;
this.numOfHWComponents=0;
this.numOfLWComponents=0;
},1);

C$.$fields$=[['Z',['秘isCRP','秘childTainted','focusCycleRoot','focusTraversalPolicyProvider'],'I',['listeningChildren','listeningBoundsChildren','descendantsCount','numOfHWComponents','numOfLWComponents'],'O',['component','javajs.util.Lst','秘childArray','java.awt.Component[]','layoutMgr','java.awt.LayoutManager','dispatcher','java.awt.LightweightDispatcher','focusTraversalPolicy','java.awt.FocusTraversalPolicy','containerListener','java.awt.event.ContainerListener','preserveBackgroundColor','java.awt.Color','modalComp','java.awt.Component','modalAppContext','sun.awt.AppContext']]
,['O',['EMPTY_ARRAY','java.awt.Component[]','NULL_INSETS','java.awt.Insets']]]

Clazz_newMeth(C$, 'getChildArray$',  function () {
var n=this.component.size$();
if (n == 0) return C$.EMPTY_ARRAY;
if (this.秘childArray != null  && !this.秘childTainted ) return this.秘childArray;
this.秘childTainted=false;
return this.component.toArray$OA(this.秘childArray != null  && this.秘childArray.length > n  ? this.秘childArray : (this.秘childArray=Clazz_array($I$(1), [n * 2])));
});

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.component=Clazz_new_($I$(3,1));
this.秘paintClass=this.秘updateClass=C$ ||null;
}, 1);

Clazz_newMeth(C$, 'initializeFocusTraversalKeys$',  function () {
});

Clazz_newMeth(C$, 'getComponentCount$',  function () {
return this.countComponents$();
});

Clazz_newMeth(C$, 'countComponents$',  function () {
return this.component.size$();
});

Clazz_newMeth(C$, 'getComponent$I',  function (n) {
if ((n < 0) || (n >= this.component.size$()) ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["No such child: " + n]);
}return this.component.get$I(n);
});

Clazz_newMeth(C$, 'getComponents$',  function () {
return this.getComponents_NoClientCode$();
});

Clazz_newMeth(C$, 'getComponents_NoClientCode$',  function () {
return this.component.toArray$OA(C$.EMPTY_ARRAY);
});

Clazz_newMeth(C$, 'getInsets$',  function () {
return C$.superclazz.prototype.getInsets$.apply(this, []);
});

Clazz_newMeth(C$, 'insets$',  function () {
return this.getInsets$();
});

Clazz_newMeth(C$, 'add$java_awt_Component',  function (comp) {
this.addImpl$java_awt_Component$O$I(comp, null, -1);
return comp;
});

Clazz_newMeth(C$, 'add$S$java_awt_Component',  function (name, comp) {
this.addImpl$java_awt_Component$O$I(comp, name, -1);
return comp;
});

Clazz_newMeth(C$, 'add$java_awt_Component$I',  function (comp, index) {
this.addImpl$java_awt_Component$O$I(comp, null, index);
return comp;
});

Clazz_newMeth(C$, 'checkAddToSelf$java_awt_Component',  function (comp) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
for (var cn=this; cn != null ; cn=cn.parent) {
if (cn === comp ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["adding container\'s parent to itself"]);
}}
}}, p$1);

Clazz_newMeth(C$, 'removeDelicately$java_awt_Component$java_awt_Container$I',  function (comp, newParent, newIndex) {
var index=this.getComponentZOrder$java_awt_Component(comp);
var needRemoveNotify=C$.isRemoveNotifyNeeded$java_awt_Component$java_awt_Container$java_awt_Container(comp, this, newParent);
if (needRemoveNotify) {
comp.removeNotify$();
}if (newParent !== this ) {
if (this.layoutMgr != null ) {
this.layoutMgr.removeLayoutComponent$java_awt_Component(comp);
}this.adjustListeningChildren$J$I(32768, -comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, -comp.numListening$J(65536));
this.adjustDescendants$I(-(comp.countHierarchyMembers$()));
comp.parent=null;
this.component.removeItemAt$I(index);
this.秘childTainted=true;
this.invalidateIfValid$();
} else {
this.component.removeItemAt$I(index);
this.component.add$I$O(newIndex, comp);
this.秘childTainted=true;
}if (comp.parent == null ) {
if (this.containerListener != null  || Long.$ne((Long.$and(this.eventMask,2)),0 )  || $I$(4).enabledOnToolkit$J(2) ) {
var e=Clazz_new_($I$(5,1).c$$java_awt_Component$I$java_awt_Component,[this, 301, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, $I$(4).enabledOnToolkit$J(32768));
if (this.layoutMgr == null  && this.isDisplayable$()  && this.isVisible$() ) {
this.updateCursorImmediately$();
}}return needRemoveNotify;
}, p$1);

Clazz_newMeth(C$, 'canContainFocusOwner$java_awt_Component',  function (focusOwnerCandidate) {
if (!(this.isEnabled$() && this.isDisplayable$() && this.isVisible$() && this.isFocusable$()  )) {
return false;
}if (this.isFocusCycleRoot$()) {
var policy=this.getFocusTraversalPolicy$();
if (Clazz_instanceOf(policy, "java.awt.DefaultFocusTraversalPolicy")) {
if (!(policy).accept$java_awt_Component(focusOwnerCandidate)) {
return false;
}}}/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (this.parent != null ) {
return this.parent.canContainFocusOwner$java_awt_Component(focusOwnerCandidate);
}}return true;
});

Clazz_newMeth(C$, 'hasHeavyweightDescendants$',  function () {
return this.numOfHWComponents > 0;
});

Clazz_newMeth(C$, 'hasLightweightDescendants$',  function () {
return this.numOfLWComponents > 0;
});

Clazz_newMeth(C$, 'getHeavyweightContainer$',  function () {
if (this.peer != null  && !(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")) ) {
return this;
} else {
return this.getNativeContainer$();
}});

Clazz_newMeth(C$, 'isRemoveNotifyNeeded$java_awt_Component$java_awt_Container$java_awt_Container',  function (comp, oldContainer, newContainer) {
return false;
}, 1);

Clazz_newMeth(C$, 'setComponentZOrder$java_awt_Component$I',  function (comp, index) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var curParent=comp.parent;
var oldZindex=this.getComponentZOrder$java_awt_Component(comp);
if (curParent === this  && index == oldZindex ) {
return;
}var peerRecreated=(curParent != null ) ? p$1.removeDelicately$java_awt_Component$java_awt_Container$I.apply(curParent, [comp, this, index]) : false;
p$1.addDelicately$java_awt_Component$java_awt_Container$I.apply(this, [comp, curParent, index]);
if (!peerRecreated && oldZindex != -1 ) {
comp.mixOnZOrderChanging$I$I(oldZindex, index);
}this.秘updateUIZOrder$();
}});

Clazz_newMeth(C$, 'reparentChild$java_awt_Component',  function (comp) {
}, p$1);

Clazz_newMeth(C$, 'addDelicately$java_awt_Component$java_awt_Container$I',  function (comp, curParent, index) {
p$1.checkTreeLock.apply(this, []);
if (curParent === this ) {
if (index < this.component.size$()) {
this.component.set$I$O(index, comp);
this.秘childTainted=true;
}} else {
if (index == -1) {
this.component.add$O(comp);
} else {
this.component.add$I$O(index, comp);
}this.秘childTainted=true;
comp.parent=this;
this.adjustListeningChildren$J$I(32768, comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, comp.numListening$J(65536));
this.adjustDescendants$I(comp.countHierarchyMembers$());
}this.invalidateIfValid$();
if (this.peer != null ) {
if (comp.peer == null ) {
comp.addNotify$();
} else {
var newNativeContainer=this.getHeavyweightContainer$();
var oldNativeContainer=curParent.getHeavyweightContainer$();
if (oldNativeContainer !== newNativeContainer ) {
p$1.reparentChild$java_awt_Component.apply(newNativeContainer, [comp]);
}if (!comp.isLightweight$() && this.isLightweight$() ) {
comp.relocateComponent$();
}}}if (curParent !== this ) {
if (this.layoutMgr != null ) {
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
(this.layoutMgr).addLayoutComponent$java_awt_Component$O(comp, null);
} else {
this.layoutMgr.addLayoutComponent$S$java_awt_Component(null, comp);
}}if (this.containerListener != null  || Long.$ne((Long.$and(this.eventMask,2)),0 )  || $I$(4).enabledOnToolkit$J(2) ) {
var e=Clazz_new_($I$(5,1).c$$java_awt_Component$I$java_awt_Component,[this, 300, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, $I$(4).enabledOnToolkit$J(32768));
} else {
comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1400, $I$(4).enabledOnToolkit$J(32768));
}if (this.peer != null  && this.layoutMgr == null   && this.isVisible$() ) {
this.updateCursorImmediately$();
}}, p$1);

Clazz_newMeth(C$, 'checkTreeLock',  function () {
}, p$1);

Clazz_newMeth(C$, 'getComponentZOrder$java_awt_Component',  function (comp) {
if (comp == null ) {
return -1;
}/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (comp.parent !== this ) {
return -1;
}return this.component.indexOf$O(comp);
}});

Clazz_newMeth(C$, 'add$java_awt_Component$O',  function (comp, constraints) {
this.addImpl$java_awt_Component$O$I(comp, constraints, -1);
});

Clazz_newMeth(C$, 'add$java_awt_Component$O$I',  function (comp, constraints, index) {
this.addImpl$java_awt_Component$O$I(comp, constraints, index);
return comp;
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I',  function (comp, constraints, index) {
this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'addImplCont$java_awt_Component$O$I',  function (comp, constraints, index) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (comp.秘getWrap$  && !this.秘isWrapper$ ||false) {
comp=(comp).秘getWrap$();
comp.background=comp.foreground=null;
}if (Clazz_instanceOf(comp, "javax.swing.JApplet")) {
comp=(comp).getLayeredPane$();
}if (index > this.component.size$() || (index < 0 && index != -1 ) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal component position"]);
}p$1.checkAddToSelf$java_awt_Component.apply(this, [comp]);
if (comp.isJ2SWindowButNotJInternalFrame$()) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["adding a window to a container"]);
}if (comp.parent != null ) {
comp.parent.remove$java_awt_Component(comp);
if (index > this.component.size$()) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal component position"]);
}}if (index == -1) {
this.component.add$O(comp);
} else {
this.component.add$I$O(index, comp);
}this.秘childTainted=true;
comp.parent=this;
this.adjustListeningChildren$J$I(32768, comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, comp.numListening$J(65536));
this.adjustDescendants$I(comp.countHierarchyMembers$());
this.invalidateIfValid$();
if (this.peer != null ) comp.addNotify$();
if (this.layoutMgr != null ) {
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
(this.layoutMgr).addLayoutComponent$java_awt_Component$O(comp, constraints);
} else if (Clazz_instanceOf(constraints, "java.lang.String")) {
this.layoutMgr.addLayoutComponent$S$java_awt_Component(constraints, comp);
}}if (this.containerListener != null  || Long.$ne((Long.$and(this.eventMask,2)),0 )  || $I$(4).enabledOnToolkit$J(2) ) {
var e=Clazz_new_($I$(5,1).c$$java_awt_Component$I$java_awt_Component,[this, 300, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, $I$(4).enabledOnToolkit$J(32768));
if (this.peer != null  && this.layoutMgr == null   && this.isVisible$() ) {
this.updateCursorImmediately$();
}}});

Clazz_newMeth(C$, 'checkGD$S',  function (stringID) {
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (index < 0 || index >= this.component.size$() ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[index]);
}var comp=this.component.get$I(index);
if (this.peer != null ) {
comp.removeNotify$();
}if (this.layoutMgr != null ) {
this.layoutMgr.removeLayoutComponent$java_awt_Component(comp);
}this.adjustListeningChildren$J$I(32768, -comp.numListening$J(32768));
this.adjustListeningChildren$J$I(65536, -comp.numListening$J(65536));
this.adjustDescendants$I(-(comp.countHierarchyMembers$()));
comp.parent=null;
this.component.removeItemAt$I(index);
this.秘childTainted=true;
this.invalidateIfValid$();
if (this.containerListener != null  || Long.$ne((Long.$and(this.eventMask,2)),0 )  || $I$(4).enabledOnToolkit$J(2) ) {
var e=Clazz_new_($I$(5,1).c$$java_awt_Component$I$java_awt_Component,[this, 301, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, $I$(4).enabledOnToolkit$J(32768));
if (this.peer != null  && this.layoutMgr == null   && this.isVisible$() ) {
this.updateCursorImmediately$();
}}});

Clazz_newMeth(C$, 'remove$java_awt_Component',  function (comp) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (comp.秘getWrap$ && !this.秘isWrapper$ ||false) {
comp=(comp).秘getWrap$();
}if (comp.parent === this ) {
var index=this.component.indexOf$O(comp);
if (index >= 0) {
this.remove$I(index);
}}}});

Clazz_newMeth(C$, 'removeAll$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.adjustListeningChildren$J$I(32768, -this.listeningChildren);
this.adjustListeningChildren$J$I(65536, -this.listeningBoundsChildren);
this.adjustDescendants$I(-this.descendantsCount);
while (!this.component.isEmpty$()){
var comp=this.component.removeItemAt$I(this.component.size$() - 1);
if (this.peer != null ) {
comp.removeNotify$();
}if (this.layoutMgr != null ) {
this.layoutMgr.removeLayoutComponent$java_awt_Component(comp);
}comp.parent=null;
if (this.containerListener != null  || Long.$ne((Long.$and(this.eventMask,2)),0 )  || $I$(4).enabledOnToolkit$J(2) ) {
var e=Clazz_new_($I$(5,1).c$$java_awt_Component$I$java_awt_Component,[this, 301, comp]);
this.dispatchEvent$java_awt_AWTEvent(e);
}comp.createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(1400, comp, this, 1, $I$(4).enabledOnToolkit$J(32768));
}
if (this.peer != null  && this.layoutMgr == null   && this.isVisible$() ) {
this.updateCursorImmediately$();
}this.invalidateIfValid$();
}C$.superclazz.prototype.removeAll$.apply(this, []);
});

Clazz_newMeth(C$, 'numListening$J',  function (mask) {
var superListening=this.numListeningMask$J(mask);
if (Long.$eq(mask,32768 )) {
return this.listeningChildren + superListening;
} else if (Long.$eq(mask,65536 )) {
return this.listeningBoundsChildren + superListening;
} else {
return superListening;
}});

Clazz_newMeth(C$, 'adjustListeningChildren$J$I',  function (mask, num) {
if (num == 0) return;
if (Long.$ne((Long.$and(mask,32768)),0 )) {
this.listeningChildren+=num;
}if (Long.$ne((Long.$and(mask,65536)),0 )) {
this.listeningBoundsChildren+=num;
}this.adjustListeningChildrenOnParent$J$I(mask, num);
});

Clazz_newMeth(C$, 'adjustDescendants$I',  function (num) {
if (num == 0) return;
this.descendantsCount+=num;
this.adjustDecendantsOnParent$I(num);
});

Clazz_newMeth(C$, 'adjustDecendantsOnParent$I',  function (num) {
if (this.parent != null ) {
this.parent.adjustDescendants$I(num);
}});

Clazz_newMeth(C$, 'countHierarchyMembers$',  function () {
return this.descendantsCount + 1;
});

Clazz_newMeth(C$, 'getListenersCount$I$Z',  function (id, enabledOnToolkit) {
if (enabledOnToolkit) {
return this.descendantsCount;
}switch (id) {
case 1400:
return this.listeningChildren;
case 1401:
case 1402:
return this.listeningBoundsChildren;
default:
return 0;
}
}, p$1);

Clazz_newMeth(C$, 'createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z',  function (id, changed, changedParent, changeFlags, enabledOnToolkit) {
var listeners=p$1.getListenersCount$I$Z.apply(this, [id, enabledOnToolkit]);
for (var count=listeners, i=0; count > 0; i++) {
count-=this.component.get$I(i).createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(id, changed, changedParent, changeFlags, enabledOnToolkit);
}
return listeners + this.createHierEventsComp$I$java_awt_Component$java_awt_Container$J$Z(id, changed, changedParent, changeFlags, enabledOnToolkit);
});

Clazz_newMeth(C$, 'createChildHierarchyEvents$I$J$Z',  function (id, changeFlags, enabledOnToolkit) {
if (this.component.isEmpty$()) {
return;
}var listeners=p$1.getListenersCount$I$Z.apply(this, [id, enabledOnToolkit]);
for (var count=listeners, i=0; count > 0; i++) {
count-=this.component.get$I(i).createHierarchyEvents$I$java_awt_Component$java_awt_Container$J$Z(id, this, this.parent, changeFlags, enabledOnToolkit);
}
});

Clazz_newMeth(C$, 'getLayout$',  function () {
return this.layoutMgr;
});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager',  function (mgr) {
this.layoutMgr=mgr;
this.invalidateIfValid$();
});

Clazz_newMeth(C$, 'doLayout$',  function () {
this.layout$();
});

Clazz_newMeth(C$, 'layout$',  function () {
if (this.layoutMgr != null ) this.layoutMgr.layoutContainer$java_awt_Container(this);
});

Clazz_newMeth(C$, 'invalidate$',  function () {
var layoutMgr=this.layoutMgr;
if (Clazz_instanceOf(layoutMgr, "java.awt.LayoutManager2")) {
var lm=layoutMgr;
lm.invalidateLayout$java_awt_Container(this);
}this.invalidateComp$();
});

Clazz_newMeth(C$, 'validate$',  function () {
if (!this.isValid$() && this.peer != null  ) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var n=this.component.size$();
if (!this.isValid$() && this.peer != null   && n > 0 ) {
var p=null;
if (Clazz_instanceOf(this.peer, "java.awt.peer.ContainerPeer")) p=this.peer;
if (p != null ) p.beginValidate$();
this.validateTree$();
if (p != null ) {
p.endValidate$();
if (this.isVisible$()) this.updateCursorImmediately$();
}}}}});

Clazz_newMeth(C$, 'repackContainer$',  function () {
var newSize=this.getPreferredSize$();
if (this.peer != null ) {
this.setClientSize$I$I(newSize.width, newSize.height);
}this.validate$();
});

Clazz_newMeth(C$, 'setClientSize$I$I',  function (w, h) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.setBoundsOp$I(4);
this.setBounds$I$I$I$I(this.x, this.y, w, h);
}});

Clazz_newMeth(C$, 'validateTree$',  function () {
if (!this.isValid$()) {
if (Clazz_instanceOf(this.peer, "java.awt.peer.ContainerPeer")) {
(this.peer).beginLayout$();
}this.doLayout$();
for (var i=0; i < this.component.size$(); i++) {
var comp=this.component.get$I(i);
if ((Clazz_instanceOf(comp, "java.awt.Container")) && !comp.isValid$() ) {
(comp).validateTree$();
} else {
comp.validate$();
}}
if (Clazz_instanceOf(this.peer, "java.awt.peer.ContainerPeer")) {
(this.peer).endLayout$();
}}C$.superclazz.prototype.validate$.apply(this, []);
});

Clazz_newMeth(C$, 'invalidateTree$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
for (var i=0; i < this.component.size$(); i++) {
var comp=this.component.get$I(i);
if (Clazz_instanceOf(comp, "java.awt.Container")) {
(comp).invalidateTree$();
} else {
comp.invalidateIfValid$();
}}
this.invalidateIfValid$();
}});

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (f) {
var oldfont=this.getFont$();
C$.superclazz.prototype.setFont$java_awt_Font.apply(this, [f]);
var newfont=this.getFont$();
if (newfont !== oldfont  && (oldfont == null  || !oldfont.equals$O(newfont) ) ) {
this.invalidateTree$();
}});

Clazz_newMeth(C$, 'getPreferredSize$',  function () {
return this.preferredSize$();
});

Clazz_newMeth(C$, 'preferredSize$',  function () {
return this.preferredSizeContainer$();
});

Clazz_newMeth(C$, 'preferredSizeContainer$',  function () {
var dim=this.prefSize;
if (dim == null  || !(this.isPreferredSizeSet$() || this.isValid$() ) ) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.prefSize=(this.layoutMgr != null  ? this.layoutMgr.preferredLayoutSize$java_awt_Container(this) : this.prefSizeComp$());
dim=this.prefSize;
}}return (dim == null  ? null : Clazz_new_($I$(6,1).c$$java_awt_Dimension,[dim]));
});

Clazz_newMeth(C$, 'getMinimumSize$',  function () {
var dim=this.minSize;
if (dim == null  || !(this.isMinimumSizeSet$() || this.isValid$() ) ) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.minSize=(this.layoutMgr != null ) ? this.layoutMgr.minimumLayoutSize$java_awt_Container(this) : this.minimumSize$();
dim=this.minSize;
}}if (dim != null ) {
return Clazz_new_($I$(6,1).c$$java_awt_Dimension,[dim]);
} else {
return dim;
}});

Clazz_newMeth(C$, 'getMaximumSize$',  function () {
var dim=this.maxSize;
if (dim == null  || !(this.isMaximumSizeSet$() || this.isValid$() ) ) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
var lm=this.layoutMgr;
this.maxSize=lm.maximumLayoutSize$java_awt_Container(this);
} else {
this.maxSize=this.getMaxSizeComp$();
}dim=this.maxSize;
}}if (dim != null ) {
return Clazz_new_($I$(6,1).c$$java_awt_Dimension,[dim]);
} else {
return dim;
}});

Clazz_newMeth(C$, 'getAlignmentX$',  function () {
var xAlign;
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var lm=this.layoutMgr;
xAlign=lm.getLayoutAlignmentX$java_awt_Container(this);
}} else {
xAlign=this.getAlignmentXComp$();
}return xAlign;
});

Clazz_newMeth(C$, 'getAlignmentY$',  function () {
var yAlign;
if (Clazz_instanceOf(this.layoutMgr, "java.awt.LayoutManager2")) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var lm=this.layoutMgr;
yAlign=lm.getLayoutAlignmentY$java_awt_Container(this);
}} else {
yAlign=this.getAlignmentYComp$();
}return yAlign;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
this.paintContainer$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintContainer$java_awt_Graphics',  function (g) {
$I$(7).getInstance$().runComponents$I$java_awt_ComponentA$java_awt_Graphics$I(this.getComponentCount$(), this.getChildArray$(), g, 2);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g) {
this.updateContainer$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'updateContainer$java_awt_Graphics',  function (g) {
if (this.isShowing$()) {
g.clearRect$I$I$I$I(0, 0, this.width, this.height);
this.paint$java_awt_Graphics(g);
}});

Clazz_newMeth(C$, 'paintComponents$java_awt_Graphics',  function (g) {
if (this.isShowing$()) {
$I$(8).getInstance$().runComponents$I$java_awt_ComponentA$java_awt_Graphics$I(this.getComponentCount$(), this.getChildArray$(), g, 4);
}});

Clazz_newMeth(C$, 'lightweightPaint$java_awt_Graphics',  function (g) {
this.lwPaintComp$java_awt_Graphics(g);
this.paintHeavyweightComponents$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paintHeavyweightComponents$java_awt_Graphics',  function (g) {
if (this.isShowing$()) {
$I$(9).getInstance$().runComponents$I$java_awt_ComponentA$java_awt_Graphics$I(this.getComponentCount$(), this.getChildArray$(), g, 3);
}});

Clazz_newMeth(C$, 'addContainerListener$java_awt_event_ContainerListener',  function (l) {
if (l == null ) {
return;
}this.containerListener=$I$(10).add$java_awt_event_ContainerListener$java_awt_event_ContainerListener(this.containerListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeContainerListener$java_awt_event_ContainerListener',  function (l) {
if (l == null ) {
return;
}this.containerListener=$I$(10).remove$java_awt_event_ContainerListener$java_awt_event_ContainerListener(this.containerListener, l);
});

Clazz_newMeth(C$, 'getContainerListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(11),['componentAdded$java_awt_event_ContainerEvent','componentRemoved$java_awt_event_ContainerEvent'])));
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
var l=null;
if (listenerType === Clazz_getClass($I$(11),['componentAdded$java_awt_event_ContainerEvent','componentRemoved$java_awt_event_ContainerEvent']) ) {
l=this.containerListener;
} else {
return this.getListenersComp$Class(listenerType);
}return $I$(10).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'eventEnabled$java_awt_AWTEvent',  function (e) {
var id=e.getID$();
if (id == 300 || id == 301 ) {
if (Long.$ne((Long.$and(this.eventMask,2)),0 ) || this.containerListener != null  ) {
return true;
}return false;
}return this.eventTypeEnabled$I(e.id);
});

Clazz_newMeth(C$, 'processEvent$java_awt_AWTEvent',  function (e) {
this.processEventCont$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processEventCont$java_awt_AWTEvent',  function (e) {
if (Clazz_instanceOf(e, "java.awt.event.ContainerEvent")) {
this.processContainerEvent$java_awt_event_ContainerEvent(e);
return;
}this.processEventComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processContainerEvent$java_awt_event_ContainerEvent',  function (e) {
var listener=this.containerListener;
if (listener != null ) {
switch (e.getID$()) {
case 300:
listener.componentAdded$java_awt_event_ContainerEvent(e);
break;
case 301:
listener.componentRemoved$java_awt_event_ContainerEvent(e);
break;
}
}});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent',  function (e) {
if ((this.dispatcher != null ) && this.dispatcher.dispatchEvent$java_awt_AWTEvent(e) ) {
return;
}this.dispatchEventImplComp$java_awt_AWTEvent(e);
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
switch (e.getID$()) {
case 101:
break;
case 100:
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'getDropTargetEventTarget$I$I$Z',  function (x, y, includeSelf) {
return this.getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z(x, y, includeSelf, $I$(12).FILTER, true);
});

Clazz_newMeth(C$, 'dispatchEventToSelf$java_awt_AWTEvent',  function (e) {
this.dispatchEventImplComp$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'getMouseEventTarget$I$I$Z',  function (x, y, includeSelf) {
return this.getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z(x, y, includeSelf, $I$(13).FILTER, !true);
});

Clazz_newMeth(C$, 'getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z',  function (x, y, includeSelf, filter, searchHeavyweights) {
var comp=null;
if (comp == null  || comp === this  ) {
comp=p$1.getMouseEventTargetImpl$I$I$Z$java_awt_Container_EventTargetFilter$Z$Z.apply(this, [x, y, includeSelf, filter, !true, searchHeavyweights]);
}return comp;
});

Clazz_newMeth(C$, 'getMouseEventTargetImpl$I$I$Z$java_awt_Container_EventTargetFilter$Z$Z',  function (x, y, includeSelf, filter, searchHeavyweightChildren, searchHeavyweightDescendants) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
for (var i=0; i < this.component.size$(); i++) {
var comp=this.component.get$I(i);
if (comp != null  && comp.visible  && ((!searchHeavyweightChildren && Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer") ) || (searchHeavyweightChildren && !(Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer")) ) )  && comp.contains$I$I(x - comp.x, y - comp.y) ) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
var child=comp;
var deeper=child.getMouseEventTarget$I$I$Z$java_awt_Container_EventTargetFilter$Z(x - child.x, y - child.y, includeSelf, filter, searchHeavyweightDescendants);
if (deeper != null ) {
return deeper;
}} else {
if (filter == null  || filter.accept$java_awt_Component(comp) ) {
return comp;
}}}}
var isPeerOK;
var isMouseOverMe;
isPeerOK=includeSelf;
isMouseOverMe=this.contains$I$I(x, y);
if (isMouseOverMe && isPeerOK && (filter == null  || filter.accept$java_awt_Component(this) )  ) {
return this;
}return null;
}}, p$1);

Clazz_newMeth(C$, 'proxyEnableEvents$J',  function (events) {
if (this.parent != null ) {
this.parent.proxyEnableEvents$J(events);
}if (this.dispatcher != null ) {
this.dispatcher.enableEvents$J(events);
}});

Clazz_newMeth(C$, 'deliverEvent$java_awt_Event',  function (e) {
var comp=this.getComponentAt$I$I(e.x, e.y);
if ((comp != null ) && (comp !== this ) ) {
e.translate$I$I(-comp.x, -comp.y);
comp.deliverEvent$java_awt_Event(e);
} else {
this.postEvent$java_awt_Event(e);
}});

Clazz_newMeth(C$, 'getComponentAt$I$I',  function (x, y) {
return this.locate$I$I(x, y);
});

Clazz_newMeth(C$, 'locate$I$I',  function (x, y) {
if (!this.contains$I$I(x, y)) {
return null;
}/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
for (var i=0; i < this.component.size$(); i++) {
var comp=this.component.get$I(i);
if (comp != null  && Clazz_instanceOf(comp.peer, "java.awt.peer.LightweightPeer") ) {
if (comp.contains$I$I(x - comp.x, y - comp.y)) {
return comp;
}}}
}return this;
});

Clazz_newMeth(C$, 'getComponentAt$java_awt_Point',  function (p) {
return this.getComponentAt$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'getMousePosition$Z',  function (allowChildren) {
return null;
});

Clazz_newMeth(C$, 'isSameOrAncestorOf$java_awt_Component$Z',  function (comp, allowChildren) {
return this === comp  || (allowChildren && p$1.isParentOf$java_awt_Component.apply(this, [comp]) ) ;
});

Clazz_newMeth(C$, 'findComponentAt$I$I',  function (x, y) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
return this.findComponentAt$I$I$Z(x, y, true);
}});

Clazz_newMeth(C$, 'findComponentAt$I$I$Z',  function (x, y, ignoreEnabled) {
return null;
});

Clazz_newMeth(C$, 'findComponentAt$java_awt_Point',  function (p) {
return this.findComponentAt$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'addNotify$',  function () {
C$.superclazz.prototype.addNotify$.apply(this, []);
if (!(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer"))) {
this.setDispatcher$();
}for (var i=0; i < this.component.size$(); i++) {
this.component.get$I(i).addNotify$();
}
});

Clazz_newMeth(C$, 'setDispatcher$',  function () {
if (this.dispatcher != null ) return;
this.dispatcher=Clazz_new_($I$(14,1).c$$java_awt_Container,[this]);
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
if (this.ui != null  && this.秘getUI$().domNode == null  ) {
return;
}for (var i=this.component.size$(); --i >= 0; ) {
var comp=this.component.get$I(i);
if (comp != null ) {
comp.setAutoFocusTransferOnDisposal$Z(false);
comp.removeNotify$();
comp.setAutoFocusTransferOnDisposal$Z(true);
}}
if (this.containsFocus$() && $I$(15).isAutoFocusTransferEnabledFor$java_awt_Component(this) ) {
if (!this.transferFocus$Z(false)) {
this.transferFocusBackward$Z(true);
}}if (this.dispatcher != null ) {
this.dispatcher.dispose$();
this.dispatcher=null;
}this.removeNotifyComp$();
});

Clazz_newMeth(C$, 'isAncestorOf$java_awt_Component',  function (c) {
var p;
if (c == null  || ((p=c.getParent$()) == null ) ) {
return false;
}while (p != null ){
if (p === this ) {
return true;
}p=p.getParent$();
}
return false;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var str=this.paramStringComp$();
var layoutMgr=this.layoutMgr;
if (layoutMgr != null ) {
str+=",layout=" + layoutMgr.getClass$().getName$();
}return str;
});

Clazz_newMeth(C$, 'setFocusTraversalKeys$I$java_util_Set',  function (id, keystrokes) {
if (id < 0 || id >= 4 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}this.setFocusTraversalKeys_NoIDCheck$I$java_util_Set(id, keystrokes);
});

Clazz_newMeth(C$, 'getFocusTraversalKeys$I',  function (id) {
if (id < 0 || id >= 4 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}return this.getFocusTraversalKeys_NoIDCheck$I(id);
});

Clazz_newMeth(C$, 'areFocusTraversalKeysSet$I',  function (id) {
if (id < 0 || id >= 4 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}return (this.focusTraversalKeys != null  && this.focusTraversalKeys[id] != null  );
});

Clazz_newMeth(C$, 'isFocusCycleRoot$java_awt_Container',  function (container) {
if (this.isFocusCycleRoot$() && container === this  ) {
return true;
} else {
return this.isFocusCycleRootComp$java_awt_Container(container);
}});

Clazz_newMeth(C$, 'findTraversalRoot',  function () {
var currentFocusCycleRoot=$I$(15).getCurrentKeyboardFocusManager$().getCurrentFocusCycleRoot$();
var root;
if (currentFocusCycleRoot === this ) {
root=this;
} else {
root=this.getFocusCycleRootAncestor$();
if (root == null ) {
root=this;
}}if (root !== currentFocusCycleRoot ) {
$I$(15).getCurrentKeyboardFocusManager$().setGlobalCurrentFocusCycleRoot$java_awt_Container(root);
}return root;
}, p$1);

Clazz_newMeth(C$, 'containsFocus$',  function () {
var focusOwner=$I$(15).getCurrentKeyboardFocusManager$().getFocusOwner$();
return p$1.isParentOf$java_awt_Component.apply(this, [focusOwner]);
});

Clazz_newMeth(C$, 'isParentOf$java_awt_Component',  function (comp) {
while (comp != null  && comp !== this   && !comp.isWindowOrJSApplet$() ){
comp=comp.getParent$();
}
return (comp === this );
}, p$1);

Clazz_newMeth(C$, 'clearMostRecentFocusOwnerOnHide$',  function () {
var reset=false;
var window=null;
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
window=this.getContainingWindow$();
if (window != null ) {
var comp=$I$(15).getMostRecentFocusOwner$java_awt_Window(window);
reset=((comp === this ) || p$1.isParentOf$java_awt_Component.apply(this, [comp]) );
{
var storedComp=window.getTemporaryLostComponent$();
if (p$1.isParentOf$java_awt_Component.apply(this, [storedComp]) || storedComp === this  ) {
window.setTemporaryLostComponent$java_awt_Component(null);
}}}}if (reset) {
$I$(15).setMostRecentFocusOwner$java_awt_Window$java_awt_Component(window, null);
}});

Clazz_newMeth(C$, 'clearCurrentFocusCycleRootOnHide$',  function () {
var kfm=$I$(15).getCurrentKeyboardFocusManager$();
var cont=kfm.getCurrentFocusCycleRoot$();
if (cont === this  || p$1.isParentOf$java_awt_Component.apply(this, [cont]) ) {
kfm.setGlobalCurrentFocusCycleRoot$java_awt_Container(null);
}});

Clazz_newMeth(C$, 'getTraversalRoot$',  function () {
if (this.isFocusCycleRoot$()) {
return p$1.findTraversalRoot.apply(this, []);
}return C$.superclazz.prototype.getTraversalRoot$.apply(this, []);
});

Clazz_newMeth(C$, 'setFocusTraversalPolicy$java_awt_FocusTraversalPolicy',  function (policy) {
var oldPolicy;
{
oldPolicy=this.focusTraversalPolicy;
this.focusTraversalPolicy=policy;
}this.firePropertyChange$S$O$O("focusTraversalPolicy", oldPolicy, policy);
});

Clazz_newMeth(C$, 'getFocusTraversalPolicy$',  function () {
if (!this.isFocusTraversalPolicyProvider$() && !this.isFocusCycleRoot$() ) {
return null;
}var policy=this.focusTraversalPolicy;
if (policy != null ) {
return policy;
}var rootAncestor=this.getFocusCycleRootAncestor$();
if (rootAncestor != null ) {
return rootAncestor.getFocusTraversalPolicy$();
} else if (this.秘isAWT$()) {
return $I$(15).getCurrentKeyboardFocusManager$().getDefaultAWTFocusTraversalPolicy$();
} else {
return $I$(15).getCurrentKeyboardFocusManager$().getDefaultFocusTraversalPolicy$();
}});

Clazz_newMeth(C$, 'isFocusTraversalPolicySet$',  function () {
return (this.focusTraversalPolicy != null );
});

Clazz_newMeth(C$, 'setFocusCycleRoot$Z',  function (focusCycleRoot) {
var oldFocusCycleRoot;
{
oldFocusCycleRoot=this.focusCycleRoot;
this.focusCycleRoot=focusCycleRoot;
}this.firePropertyChange$S$Z$Z("focusCycleRoot", oldFocusCycleRoot, focusCycleRoot);
});

Clazz_newMeth(C$, 'isFocusCycleRoot$',  function () {
return this.focusCycleRoot;
});

Clazz_newMeth(C$, 'setFocusTraversalPolicyProvider$Z',  function (provider) {
var oldProvider;
{
oldProvider=this.focusTraversalPolicyProvider;
this.focusTraversalPolicyProvider=provider;
}this.firePropertyChange$S$Z$Z("focusTraversalPolicyProvider", oldProvider, provider);
});

Clazz_newMeth(C$, 'isFocusTraversalPolicyProvider$',  function () {
return this.focusTraversalPolicyProvider;
});

Clazz_newMeth(C$, 'transferFocusDownCycle$',  function () {
});

Clazz_newMeth(C$, 'preProcessKeyEvent$java_awt_event_KeyEvent',  function (e) {
var parent=this.parent;
if (parent != null ) {
parent.preProcessKeyEvent$java_awt_event_KeyEvent(e);
}});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent',  function (e) {
var parent=this.parent;
if (parent != null ) {
parent.postProcessKeyEvent$java_awt_event_KeyEvent(e);
}});

Clazz_newMeth(C$, 'postsOldMouseEvents$',  function () {
return true;
});

Clazz_newMeth(C$, 'applyComponentOrientation$java_awt_ComponentOrientation',  function (o) {
this.applyCompOrientComp$java_awt_ComponentOrientation(o);
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
for (var i=0; i < this.component.size$(); i++) {
var comp=this.component.get$I(i);
comp.applyComponentOrientation$java_awt_ComponentOrientation(o);
}
}});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
C$.superclazz.prototype.addPropertyChangeListener$java_beans_PropertyChangeListener.apply(this, [listener]);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
C$.superclazz.prototype.addPropertyChangeListener$S$java_beans_PropertyChangeListener.apply(this, [propertyName, listener]);
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_ARRAY=Clazz_array($I$(1), [0]);
C$.NULL_INSETS=Clazz_new_($I$(2,1).c$$I$I$I$I,[0, 0, 0, 0]);
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.Container, "EventTargetFilter", function(){
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Container, "MouseEventTargetFilter", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.awt.Container','java.awt.Container.EventTargetFilter']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['FILTER','java.awt.Container.EventTargetFilter']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (comp) {
return Long.$ne((Long.$and(comp.eventMask,32)),0 ) || Long.$ne((Long.$and(comp.eventMask,16)),0 )  || Long.$ne((Long.$and(comp.eventMask,131072)),0 )  || comp.mouseListener != null   || comp.mouseMotionListener != null   || comp.mouseWheelListener != null  ;
});

C$.$static$=function(){C$.$static$=0;
C$.FILTER=Clazz_new_(C$);
};
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Container, "DropTargetEventTargetFilter", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.awt.Container','java.awt.Container.EventTargetFilter']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['FILTER','java.awt.Container.EventTargetFilter']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (comp) {
var dt=comp.getDropTarget$();
return dt != null  && dt.isActive$() ;
});

C$.$static$=function(){C$.$static$=0;
C$.FILTER=Clazz_new_(C$);
};
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.util.ArrayList']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ContainerOrderFocusTraversalPolicy", null, 'java.awt.FocusTraversalPolicy', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.FORWARD_TRAVERSAL=0;
this.BACKWARD_TRAVERSAL=1;
this.implicitDownCycleTraversal=true;
},1);

C$.$fields$=[['Z',['implicitDownCycleTraversal'],'I',['FORWARD_TRAVERSAL','BACKWARD_TRAVERSAL'],'O',['cachedRoot','java.awt.Container','cachedCycle','java.util.List']]]

Clazz_newMeth(C$, 'getFocusTraversalCycle$java_awt_Container',  function (aContainer) {
var cycle=Clazz_new_($I$(1,1));
p$1.enumerateCycle$java_awt_Container$java_util_List.apply(this, [aContainer, cycle]);
return cycle;
}, p$1);

Clazz_newMeth(C$, 'getComponentIndex$java_util_List$java_awt_Component',  function (cycle, aComponent) {
return cycle.indexOf$O(aComponent);
}, p$1);

Clazz_newMeth(C$, 'enumerateCycle$java_awt_Container$java_util_List',  function (container, cycle) {
if (!(container.isVisible$() && container.isDisplayable$() )) {
return;
}cycle.add$O(container);
var components=container.getChildArray$();
for (var i=0, n=container.getComponentCount$(); i < n; i++) {
var comp=components[i];
if (Clazz_instanceOf(comp, "java.awt.Container")) {
var cont=comp;
if (!cont.isFocusCycleRoot$() && !cont.isFocusTraversalPolicyProvider$() ) {
p$1.enumerateCycle$java_awt_Container$java_util_List.apply(this, [cont, cycle]);
continue;
}}cycle.add$O(comp);
}
}, p$1);

Clazz_newMeth(C$, 'getTopmostProvider$java_awt_Container$java_awt_Component',  function (focusCycleRoot, aComponent) {
var aCont=aComponent.getParent$();
var ftp=null;
while (aCont !== focusCycleRoot  && aCont != null  ){
if (aCont.isFocusTraversalPolicyProvider$()) {
ftp=aCont;
}aCont=aCont.getParent$();
}
if (aCont == null ) {
return null;
}return ftp;
}, p$1);

Clazz_newMeth(C$, 'getComponentDownCycle$java_awt_Component$I',  function (comp, traversalDirection) {
var retComp=null;
if (Clazz_instanceOf(comp, "java.awt.Container")) {
var cont=comp;
if (cont.isFocusCycleRoot$()) {
if (this.getImplicitDownCycleTraversal$()) {
retComp=cont.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(cont);
} else {
return null;
}} else if (cont.isFocusTraversalPolicyProvider$()) {
retComp=(traversalDirection == 0 ? cont.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(cont) : cont.getFocusTraversalPolicy$().getLastComponent$java_awt_Container(cont));
}}return retComp;
}, p$1);

Clazz_newMeth(C$, 'getComponentAfter$java_awt_Container$java_awt_Component',  function (aContainer, aComponent) {
if (aContainer == null  || aComponent == null  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer and aComponent cannot be null"]);
}if (!aContainer.isFocusTraversalPolicyProvider$() && !aContainer.isFocusCycleRoot$() ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer should be focus cycle root or focus traversal policy provider"]);
} else if (aContainer.isFocusCycleRoot$() && !aComponent.isFocusCycleRoot$java_awt_Container(aContainer) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer is not a focus cycle root of aComponent"]);
}if (!(aContainer.isVisible$() && aContainer.isDisplayable$() )) {
return null;
}var comp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [aComponent, 0]);
if (comp != null ) {
return comp;
}var provider=p$1.getTopmostProvider$java_awt_Container$java_awt_Component.apply(this, [aContainer, aComponent]);
if (provider != null ) {
var policy=provider.getFocusTraversalPolicy$();
var afterComp=policy.getComponentAfter$java_awt_Container$java_awt_Component(provider, aComponent);
if (afterComp != null ) {
return afterComp;
}aComponent=provider;
}var cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
var index=p$1.getComponentIndex$java_util_List$java_awt_Component.apply(this, [cycle, aComponent]);
if (index < 0) {
return this.getFirstComponent$java_awt_Container(aContainer);
}for (index++; index < cycle.size$(); index++) {
comp=cycle.get$I(index);
if (this.accept$java_awt_Component(comp)) {
return comp;
} else if ((comp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [comp, 0])) != null ) {
return comp;
}}
if (aContainer.isFocusCycleRoot$()) {
this.cachedRoot=aContainer;
this.cachedCycle=cycle;
comp=this.getFirstComponent$java_awt_Container(aContainer);
this.cachedRoot=null;
this.cachedCycle=null;
return comp;
}return null;
});

Clazz_newMeth(C$, 'getComponentBefore$java_awt_Container$java_awt_Component',  function (aContainer, aComponent) {
if (aContainer == null  || aComponent == null  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer and aComponent cannot be null"]);
}if (!aContainer.isFocusTraversalPolicyProvider$() && !aContainer.isFocusCycleRoot$() ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer should be focus cycle root or focus traversal policy provider"]);
} else if (aContainer.isFocusCycleRoot$() && !aComponent.isFocusCycleRoot$java_awt_Container(aContainer) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer is not a focus cycle root of aComponent"]);
}/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(aContainer.getTreeLock$());
{
if (!(aContainer.isVisible$() && aContainer.isDisplayable$() )) {
return null;
}var provider=p$1.getTopmostProvider$java_awt_Container$java_awt_Component.apply(this, [aContainer, aComponent]);
if (provider != null ) {
var policy=provider.getFocusTraversalPolicy$();
var beforeComp=policy.getComponentBefore$java_awt_Container$java_awt_Component(provider, aComponent);
if (beforeComp != null ) {
return beforeComp;
}aComponent=provider;
if (this.accept$java_awt_Component(aComponent)) {
return aComponent;
}}var cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
var index=p$1.getComponentIndex$java_util_List$java_awt_Component.apply(this, [cycle, aComponent]);
if (index < 0) {
return this.getLastComponent$java_awt_Container(aContainer);
}var comp=null;
var tryComp=null;
for (index--; index >= 0; index--) {
comp=cycle.get$I(index);
if (comp !== aContainer  && (tryComp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [comp, 1])) != null  ) {
return tryComp;
} else if (this.accept$java_awt_Component(comp)) {
return comp;
}}
if (aContainer.isFocusCycleRoot$()) {
this.cachedRoot=aContainer;
this.cachedCycle=cycle;
comp=this.getLastComponent$java_awt_Container(aContainer);
this.cachedRoot=null;
this.cachedCycle=null;
return comp;
}}return null;
});

Clazz_newMeth(C$, 'getFirstComponent$java_awt_Container',  function (aContainer) {
var cycle;
if (aContainer == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer cannot be null"]);
}if (!(aContainer.isVisible$() && aContainer.isDisplayable$() )) {
return null;
}if (this.cachedRoot === aContainer ) {
cycle=this.cachedCycle;
} else {
cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
}if (cycle.size$() == 0) {
return null;
}for (var comp, $comp = cycle.iterator$(); $comp.hasNext$()&&((comp=($comp.next$())),1);) {
if (comp === aContainer ) continue;
if (this.accept$java_awt_Component(comp)) {
return comp;
} else if (comp !== aContainer  && (comp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [comp, 0])) != null  ) {
return comp;
}}
return null;
});

Clazz_newMeth(C$, 'getLastComponent$java_awt_Container',  function (aContainer) {
var cycle;
if (aContainer == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer cannot be null"]);
}/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(aContainer.getTreeLock$());
{
if (!(aContainer.isVisible$() && aContainer.isDisplayable$() )) {
return null;
}if (this.cachedRoot === aContainer ) {
cycle=this.cachedCycle;
} else {
cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
}if (cycle.size$() == 0) {
return null;
}for (var i=cycle.size$() - 1; i >= 0; i--) {
var comp=cycle.get$I(i);
if (this.accept$java_awt_Component(comp)) {
return comp;
} else if (Clazz_instanceOf(comp, "java.awt.Container") && comp !== aContainer  ) {
var cont=comp;
if (cont.isFocusTraversalPolicyProvider$()) {
return cont.getFocusTraversalPolicy$().getLastComponent$java_awt_Container(cont);
}}}
}return null;
});

Clazz_newMeth(C$, 'getDefaultComponent$java_awt_Container',  function (aContainer) {
return this.getFirstComponent$java_awt_Container(aContainer);
});

Clazz_newMeth(C$, 'setImplicitDownCycleTraversal$Z',  function (implicitDownCycleTraversal) {
this.implicitDownCycleTraversal=implicitDownCycleTraversal;
});

Clazz_newMeth(C$, 'getImplicitDownCycleTraversal$',  function () {
return this.implicitDownCycleTraversal;
});

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (aComponent) {
if (!aComponent.canBeFocusOwner$()) {
return false;
}if (!aComponent.isWindowOrJSApplet$()) {
for (var enableTest=aComponent.getParent$(); enableTest != null ; enableTest=enableTest.getParent$()) {
if (!(enableTest.isEnabled$() || enableTest.isLightweight$() )) {
return false;
}if (enableTest.isWindowOrJSApplet$()) {
break;
}}
}return true;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'swingjs.JSToolkit']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Cursor");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.type=0;
},1);

C$.$fields$=[['I',['type'],'S',['name']]
,['O',['predefined','java.awt.Cursor[]','+predefinedPrivate','cursorProperties','String[][]']]]

Clazz_newMeth(C$, 'getPredefinedCursor$I',  function (type) {
if (type < 0 || type > 13 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal cursor type"]);
}var c=C$.predefinedPrivate[type];
if (c == null ) {
C$.predefinedPrivate[type]=c=Clazz_new_(C$.c$$I,[type]);
}if (C$.predefined[type] == null ) {
C$.predefined[type]=c;
}return c;
}, 1);

Clazz_newMeth(C$, 'getSystemCustomCursor$S',  function (name) {
return null;
}, 1);

Clazz_newMeth(C$, 'getDefaultCursor$',  function () {
return C$.getPredefinedCursor$I(0);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (type) {
;C$.$init$.apply(this);
if (type < 0 || type > 13 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal cursor type"]);
}this.type=type;
this.name="TODO_CURSOR";
this.name=$I$(1).getCursorName$java_awt_Cursor(this);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.$init$.apply(this);
this.type=-1;
this.name=name;
}, 1);

Clazz_newMeth(C$, 'getType$',  function () {
return this.type;
});

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[" + this.getName$() + "]" ;
});

C$.$static$=function(){C$.$static$=0;
C$.predefined=Clazz_array(C$, [14]);
C$.predefinedPrivate=Clazz_array(C$, [14]);
C$.cursorProperties=Clazz_array(String, -2, [Clazz_array(String, -1, ["AWT.DefaultCursor", "Default Cursor"]), Clazz_array(String, -1, ["AWT.CrosshairCursor", "Crosshair Cursor"]), Clazz_array(String, -1, ["AWT.TextCursor", "Text Cursor"]), Clazz_array(String, -1, ["AWT.WaitCursor", "Wait Cursor"]), Clazz_array(String, -1, ["AWT.SWResizeCursor", "Southwest Resize Cursor"]), Clazz_array(String, -1, ["AWT.SEResizeCursor", "Southeast Resize Cursor"]), Clazz_array(String, -1, ["AWT.NWResizeCursor", "Northwest Resize Cursor"]), Clazz_array(String, -1, ["AWT.NEResizeCursor", "Northeast Resize Cursor"]), Clazz_array(String, -1, ["AWT.NResizeCursor", "North Resize Cursor"]), Clazz_array(String, -1, ["AWT.SResizeCursor", "South Resize Cursor"]), Clazz_array(String, -1, ["AWT.WResizeCursor", "West Resize Cursor"]), Clazz_array(String, -1, ["AWT.EResizeCursor", "East Resize Cursor"]), Clazz_array(String, -1, ["AWT.HandCursor", "Hand Cursor"]), Clazz_array(String, -1, ["AWT.MoveCursor", "Move Cursor"])]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "DefaultFocusTraversalPolicy", null, 'java.awt.ContainerOrderFocusTraversalPolicy');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (aComponent) {
if (!(aComponent.isVisible$() && aComponent.isDisplayable$() && aComponent.isEnabled$()  )) {
return false;
}if (!aComponent.isWindowOrJSApplet$()) {
for (var enableTest=aComponent.getParent$(); enableTest != null ; enableTest=enableTest.getParent$()) {
if (!(enableTest.isEnabled$() || enableTest.isLightweight$() )) {
return false;
}if (enableTest.isWindowOrJSApplet$()) {
break;
}}
}var focusable=aComponent.isFocusable$();
if (aComponent.isFocusTraversableOverridden$()) {
return focusable;
}var peer=aComponent.getPeer$();
return (peer != null  && peer.isFocusable$() );
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.KeyboardFocusManager','java.util.LinkedList',['sun.awt.CausedFocusEvent','.Cause'],'sun.awt.AppContext',['java.awt.DefaultKeyboardFocusManager','.DefaultKeyboardFocusManagerSentEvent'],'sun.awt.SunToolkit','java.awt.SequencedEvent','java.awt.event.WindowEvent','sun.awt.CausedFocusEvent','java.awt.EventQueue','java.awt.AWTKeyStroke',['java.awt.DefaultKeyboardFocusManager','.TypeAheadMarker']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DefaultKeyboardFocusManager", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.KeyboardFocusManager');
C$.$classes$=[['TypeAheadMarker',10],['DefaultKeyboardFocusManagerSentEvent',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.realOppositeWindowWR=null;
this.realOppositeComponentWR=null;
this.enqueuedKeyEvents=Clazz_new_($I$(2,1));
this.typeAheadMarkers=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['Z',['consumeNextKeyTyped'],'I',['inSendMessage'],'O',['realOppositeWindowWR','java.awt.Window','realOppositeComponentWR','java.awt.Component','enqueuedKeyEvents','java.util.LinkedList','+typeAheadMarkers']]]

Clazz_newMeth(C$, 'getOwningFrameDialog$java_awt_Window',  function (window) {
var owindow;
while (window != null  && !(Clazz_instanceOf((owindow=window), "javax.swing.JApplet") || Clazz_instanceOf(window, "java.awt.JSFrame") || Clazz_instanceOf(window, "java.awt.JSDialog")  ) ){
window=window.getParent$();
}
return window;
}, p$1);

Clazz_newMeth(C$, 'restoreFocus$java_awt_event_FocusEvent$java_awt_Window',  function (fe, newFocusedWindow) {
var realOppositeComponent=this.realOppositeComponentWR;
var vetoedComponent=fe.getComponent$();
if (newFocusedWindow != null  && p$1.restoreFocus$java_awt_Window$java_awt_Component$Z.apply(this, [newFocusedWindow, vetoedComponent, false]) ) {
} else if (realOppositeComponent != null  && p$1.doRestoreFocus$java_awt_Component$java_awt_Component$Z.apply(this, [realOppositeComponent, vetoedComponent, false]) ) {
} else if (fe.getOppositeComponent$() != null  && p$1.doRestoreFocus$java_awt_Component$java_awt_Component$Z.apply(this, [fe.getOppositeComponent$(), vetoedComponent, false]) ) {
} else {
this.clearGlobalFocusOwnerPriv$();
}}, p$1);

Clazz_newMeth(C$, 'restoreFocus$java_awt_event_WindowEvent',  function (we) {
var realOppositeWindow=this.realOppositeWindowWR;
if (realOppositeWindow != null  && p$1.restoreFocus$java_awt_Window$java_awt_Component$Z.apply(this, [realOppositeWindow, null, false]) ) {
} else if (we.getOppositeWindow$() != null  && p$1.restoreFocus$java_awt_Window$java_awt_Component$Z.apply(this, [we.getOppositeWindow$(), null, false]) ) {
} else {
this.clearGlobalFocusOwnerPriv$();
}}, p$1);

Clazz_newMeth(C$, 'restoreFocus$java_awt_Window$java_awt_Component$Z',  function (aWindow, vetoedComponent, clearOnFailure) {
var toFocus=$I$(1).getMostRecentFocusOwner$java_awt_Window(aWindow);
if (toFocus != null  && toFocus !== vetoedComponent   && p$1.doRestoreFocus$java_awt_Component$java_awt_Component$Z.apply(this, [toFocus, vetoedComponent, false]) ) {
return true;
} else if (clearOnFailure) {
this.clearGlobalFocusOwnerPriv$();
return true;
} else {
return false;
}}, p$1);

Clazz_newMeth(C$, 'restoreFocus$java_awt_Component$Z',  function (toFocus, clearOnFailure) {
return p$1.doRestoreFocus$java_awt_Component$java_awt_Component$Z.apply(this, [toFocus, null, clearOnFailure]);
}, p$1);

Clazz_newMeth(C$, 'doRestoreFocus$java_awt_Component$java_awt_Component$Z',  function (toFocus, vetoedComponent, clearOnFailure) {
if (toFocus !== vetoedComponent  && toFocus.isShowing$()  && toFocus.canBeFocusOwner$()  && toFocus.requestFocus$Z$sun_awt_CausedFocusEvent_Cause(false, $I$(3).ROLLBACK) ) {
return true;
} else {
var nextFocus=toFocus.getNextFocusCandidate$();
if (nextFocus != null  && nextFocus !== vetoedComponent   && nextFocus.requestFocusInWindow$sun_awt_CausedFocusEvent_Cause($I$(3).ROLLBACK) ) {
return true;
} else if (clearOnFailure) {
this.clearGlobalFocusOwnerPriv$();
return true;
} else {
return false;
}}}, p$1);

Clazz_newMeth(C$, 'sendMessage$java_awt_Component$java_awt_AWTEvent',  function (target, e) {
e.isPosted=true;
var myAppContext=$I$(4).getAppContext$();
var targetAppContext=target.appContext;
var se=Clazz_new_($I$(5,1).c$$java_awt_AWTEvent$sun_awt_AppContext,[e, myAppContext]);
if (myAppContext === targetAppContext ) {
se.dispatch$();
} else {
if (targetAppContext.isDisposed$()) {
return false;
}se.dispatch$();
}return se.dispatched;
}, 1);

Clazz_newMeth(C$, 'repostIfFollowsKeyEvents$java_awt_event_WindowEvent',  function (e) {
if (!(Clazz_instanceOf(e, "sun.awt.TimedWindowEvent"))) {
return false;
}var we=e;
var time=we.getWhen$();
{
var ke=this.enqueuedKeyEvents.isEmpty$() ? null : this.enqueuedKeyEvents.getFirst$();
if (ke != null  && Long.$ge(time,ke.getWhen$() ) ) {
var marker=this.typeAheadMarkers.isEmpty$() ? null : this.typeAheadMarkers.getFirst$();
if (marker != null ) {
var toplevel=marker.untilFocused.getContainingWindow$();
if (toplevel != null  && toplevel.isFocused$() ) {
$I$(6,"postEvent$sun_awt_AppContext$java_awt_AWTEvent",[$I$(4).getAppContext$(), Clazz_new_($I$(7,1).c$$java_awt_AWTEvent,[e])]);
return true;
}}}}return false;
}, p$1);

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent',  function (e) {
switch (e.getID$()) {
case 501:
case 500:
(this.peer).checkFrameFocusOnMouseDown$java_awt_AWTEvent(e);
return false;
case 502:
return false;
case 207:
{
if (p$1.repostIfFollowsKeyEvents$java_awt_event_WindowEvent.apply(this, [e])) {
break;
}var we=e;
var oldFocusedWindow=this.getGlobalFocusedWindow$();
var newFocusedWindow=we.getWindow$();
if (newFocusedWindow === oldFocusedWindow ) {
break;
}if (!(newFocusedWindow.isFocusableWindow$() && newFocusedWindow.isVisible$() && newFocusedWindow.isDisplayable$()  )) {
p$1.restoreFocus$java_awt_event_WindowEvent.apply(this, [we]);
break;
}if (oldFocusedWindow != null ) {
var isEventDispatched=C$.sendMessage$java_awt_Component$java_awt_AWTEvent(oldFocusedWindow, Clazz_new_($I$(8,1).c$$java_awt_Window$I$java_awt_Window,[oldFocusedWindow, 208, newFocusedWindow]));
if (!isEventDispatched) {
this.setGlobalFocusOwner$java_awt_Component(null);
this.setGlobalFocusedWindow$java_awt_Window(null);
}}var newActiveWindow=p$1.getOwningFrameDialog$java_awt_Window.apply(this, [newFocusedWindow]);
var currentActiveWindow=this.getGlobalActiveWindow$();
if (newActiveWindow !== currentActiveWindow ) {
C$.sendMessage$java_awt_Component$java_awt_AWTEvent(newActiveWindow, Clazz_new_($I$(8,1).c$$java_awt_Window$I$java_awt_Window,[newActiveWindow, 205, currentActiveWindow]));
if (newActiveWindow !== this.getGlobalActiveWindow$() ) {
p$1.restoreFocus$java_awt_event_WindowEvent.apply(this, [we]);
break;
}}this.setGlobalFocusedWindow$java_awt_Window(newFocusedWindow);
if (newFocusedWindow !== this.getGlobalFocusedWindow$() ) {
p$1.restoreFocus$java_awt_event_WindowEvent.apply(this, [we]);
break;
}if (this.inSendMessage == 0) {
var toFocus=$I$(1).getMostRecentFocusOwner$java_awt_Window(newFocusedWindow);
if ((toFocus == null ) && newFocusedWindow.isFocusableWindow$() ) {
toFocus=newFocusedWindow.getFocusTraversalPolicy$().getInitialComponent$java_awt_Window(newFocusedWindow);
}var tempLost=null;
{
tempLost=newFocusedWindow.setTemporaryLostComponent$java_awt_Component(null);
}if (tempLost != null ) {
tempLost.requestFocusInWindow$sun_awt_CausedFocusEvent_Cause($I$(3).ACTIVATION);
}if (toFocus != null  && toFocus !== tempLost  ) {
toFocus.requestFocusInWindow$sun_awt_CausedFocusEvent_Cause($I$(3).ACTIVATION);
}}var realOppositeWindow=this.realOppositeWindowWR;
if (realOppositeWindow !== we.getOppositeWindow$() ) {
we=Clazz_new_($I$(8,1).c$$java_awt_Window$I$java_awt_Window,[newFocusedWindow, 207, realOppositeWindow]);
}return p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [newFocusedWindow, we]);
}case 205:
{
var we=e;
var oldActiveWindow=this.getGlobalActiveWindow$();
var newActiveWindow=we.getWindow$();
if (oldActiveWindow === newActiveWindow ) {
break;
}if (oldActiveWindow != null ) {
var isEventDispatched=C$.sendMessage$java_awt_Component$java_awt_AWTEvent(oldActiveWindow, Clazz_new_($I$(8,1).c$$java_awt_Window$I$java_awt_Window,[oldActiveWindow, 206, newActiveWindow]));
if (!isEventDispatched) {
this.setGlobalActiveWindow$java_awt_Window(null);
}if (this.getGlobalActiveWindow$() != null ) {
break;
}}this.setGlobalActiveWindow$java_awt_Window(newActiveWindow);
if (newActiveWindow !== this.getGlobalActiveWindow$() ) {
break;
}return p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [newActiveWindow, we]);
}case 1004:
{
var fe=e;
var cause=(Clazz_instanceOf(fe, "sun.awt.CausedFocusEvent")) ? (fe).getCause$() : $I$(3).UNKNOWN;
var oldFocusOwner=this.getGlobalFocusOwner$();
var newFocusOwner=fe.getComponent$();
if (oldFocusOwner === newFocusOwner ) {
this.dequeueKeyEvents$J$java_awt_Component(-1, newFocusOwner);
break;
}if (oldFocusOwner != null ) {
var isEventDispatched=C$.sendMessage$java_awt_Component$java_awt_AWTEvent(oldFocusOwner, Clazz_new_([oldFocusOwner, 1005, fe.isTemporary$(), newFocusOwner, cause],$I$(9,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause));
if (!isEventDispatched) {
this.setGlobalFocusOwner$java_awt_Component(null);
if (!fe.isTemporary$()) {
this.setGlobalPermanentFocusOwner$java_awt_Component(null);
}}}var newFocusedWindow=$I$(6).getContainingWindow$java_awt_Component(newFocusOwner);
var currentFocusedWindow=this.getGlobalFocusedWindow$();
if (newFocusedWindow != null  && newFocusedWindow !== currentFocusedWindow  ) {
C$.sendMessage$java_awt_Component$java_awt_AWTEvent(newFocusedWindow, Clazz_new_($I$(8,1).c$$java_awt_Window$I$java_awt_Window,[newFocusedWindow, 207, currentFocusedWindow]));
if (newFocusedWindow !== this.getGlobalFocusedWindow$() ) {
this.dequeueKeyEvents$J$java_awt_Component(-1, newFocusOwner);
break;
}}if (!(newFocusOwner.isFocusable$() && newFocusOwner.isShowing$() && (newFocusOwner.isEnabled$() || cause.equals$O($I$(3).UNKNOWN) )  )) {
this.dequeueKeyEvents$J$java_awt_Component(-1, newFocusOwner);
if ($I$(1).isAutoFocusTransferEnabled$()) {
if (newFocusedWindow == null ) {
p$1.restoreFocus$java_awt_event_FocusEvent$java_awt_Window.apply(this, [fe, currentFocusedWindow]);
} else {
p$1.restoreFocus$java_awt_event_FocusEvent$java_awt_Window.apply(this, [fe, newFocusedWindow]);
}$I$(1).setMostRecentFocusOwner$java_awt_Window$java_awt_Component(newFocusedWindow, null);
}break;
}this.setGlobalFocusOwner$java_awt_Component(newFocusOwner);
if (newFocusOwner !== this.getGlobalFocusOwner$() ) {
this.dequeueKeyEvents$J$java_awt_Component(-1, newFocusOwner);
if ($I$(1).isAutoFocusTransferEnabled$()) {
p$1.restoreFocus$java_awt_event_FocusEvent$java_awt_Window.apply(this, [fe, newFocusedWindow]);
}break;
}if (!fe.isTemporary$()) {
this.setGlobalPermanentFocusOwner$java_awt_Component(newFocusOwner);
if (newFocusOwner !== this.getGlobalPermanentFocusOwner$() ) {
this.dequeueKeyEvents$J$java_awt_Component(-1, newFocusOwner);
if ($I$(1).isAutoFocusTransferEnabled$()) {
p$1.restoreFocus$java_awt_event_FocusEvent$java_awt_Window.apply(this, [fe, newFocusedWindow]);
}break;
}}var realOppositeComponent=this.realOppositeComponentWR;
if (realOppositeComponent != null  && realOppositeComponent !== fe.getOppositeComponent$()  ) {
fe=Clazz_new_([newFocusOwner, 1004, fe.isTemporary$(), realOppositeComponent, cause],$I$(9,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
(fe).isPosted=true;
}return p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [newFocusOwner, fe]);
}case 1005:
{
var fe=e;
var currentFocusOwner=this.getGlobalFocusOwner$();
if (currentFocusOwner == null ) {
break;
}if (currentFocusOwner === fe.getOppositeComponent$() ) {
break;
}this.setGlobalFocusOwner$java_awt_Component(null);
if (this.getGlobalFocusOwner$() != null ) {
p$1.restoreFocus$java_awt_Component$Z.apply(this, [currentFocusOwner, true]);
break;
}if (!fe.isTemporary$()) {
this.setGlobalPermanentFocusOwner$java_awt_Component(null);
if (this.getGlobalPermanentFocusOwner$() != null ) {
p$1.restoreFocus$java_awt_Component$Z.apply(this, [currentFocusOwner, true]);
break;
}} else {
var owningWindow=currentFocusOwner.getContainingWindow$();
if (owningWindow != null ) {
owningWindow.setTemporaryLostComponent$java_awt_Component(currentFocusOwner);
}}this.setNativeFocusOwner$java_awt_Component(null);
fe.setSource$O(currentFocusOwner);
this.realOppositeComponentWR=(fe.getOppositeComponent$() != null ) ? currentFocusOwner : null;
return p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [currentFocusOwner, fe]);
}case 206:
{
var we=e;
var currentActiveWindow=this.getGlobalActiveWindow$();
if (currentActiveWindow == null ) {
break;
}if (currentActiveWindow !== e.getSource$() ) {
break;
}this.setGlobalActiveWindow$java_awt_Window(null);
if (this.getGlobalActiveWindow$() != null ) {
break;
}we.setSource$O(currentActiveWindow);
return p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [currentActiveWindow, we]);
}case 208:
{
if (p$1.repostIfFollowsKeyEvents$java_awt_event_WindowEvent.apply(this, [e])) {
break;
}var we=e;
var currentFocusedWindow=this.getGlobalFocusedWindow$();
var losingFocusWindow=we.getWindow$();
var activeWindow=this.getGlobalActiveWindow$();
var oppositeWindow=we.getOppositeWindow$();
if (currentFocusedWindow == null ) {
break;
}if (this.inSendMessage == 0 && losingFocusWindow === activeWindow   && oppositeWindow === currentFocusedWindow  ) {
break;
}var currentFocusOwner=this.getGlobalFocusOwner$();
if (currentFocusOwner != null ) {
var oppositeComp=null;
if (oppositeWindow != null ) {
oppositeComp=oppositeWindow.getTemporaryLostComponent$();
if (oppositeComp == null ) {
oppositeComp=oppositeWindow.getMostRecentFocusOwner$();
}}if (oppositeComp == null ) {
oppositeComp=oppositeWindow;
}C$.sendMessage$java_awt_Component$java_awt_AWTEvent(currentFocusOwner, Clazz_new_([currentFocusOwner, 1005, true, oppositeComp, $I$(3).ACTIVATION],$I$(9,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause));
}this.setGlobalFocusedWindow$java_awt_Window(null);
if (this.getGlobalFocusedWindow$() != null ) {
p$1.restoreFocus$java_awt_Window$java_awt_Component$Z.apply(this, [currentFocusedWindow, null, true]);
break;
}we.setSource$O(currentFocusedWindow);
this.realOppositeWindowWR=(oppositeWindow != null ) ? currentFocusedWindow : null;
p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [currentFocusedWindow, we]);
if (oppositeWindow == null ) {
C$.sendMessage$java_awt_Component$java_awt_AWTEvent(activeWindow, Clazz_new_($I$(8,1).c$$java_awt_Window$I$java_awt_Window,[activeWindow, 206, null]));
if (this.getGlobalActiveWindow$() != null ) {
p$1.restoreFocus$java_awt_Window$java_awt_Component$Z.apply(this, [currentFocusedWindow, null, true]);
}}break;
}case 400:
case 401:
case 402:
return p$1.typeAheadAssertions$java_awt_Component$java_awt_AWTEvent.apply(this, [null, e]);
default:
return false;
}
return true;
});

Clazz_newMeth(C$, 'dispatchKeyEvent$java_awt_event_KeyEvent',  function (e) {
var focusOwner=((e).isPosted) ? this.getFocusOwner$() : e.getComponent$();
if (focusOwner != null  && focusOwner.isShowing$()  && focusOwner.canBeFocusOwner$() ) {
if (!e.isConsumed$()) {
var comp=e.getComponent$();
if (comp != null  && comp.isEnabled$() ) {
this.redispatchEvent$java_awt_Component$java_awt_AWTEvent(comp, e);
}}}var stopPostProcessing=false;
var processors=this.getKeyEventPostProcessors$();
if (processors != null ) {
for (var iter=processors.iterator$(); !stopPostProcessing && iter.hasNext$() ; ) {
stopPostProcessing=iter.next$().postProcessKeyEvent$java_awt_event_KeyEvent(e);
}
}if (!stopPostProcessing) {
this.postProcessKeyEvent$java_awt_event_KeyEvent(e);
}var source=e.getComponent$();
var peer=source.getPeer$();
if (peer == null  || Clazz_instanceOf(peer, "java.awt.peer.LightweightPeer") ) {
var target=source.getNativeContainer$();
if (target != null ) {
peer=target.getPeer$();
}}if (peer != null ) {
peer.handleEvent$java_awt_AWTEvent(e);
}return true;
});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent',  function (e) {
if (!e.isConsumed$()) {
var target=e.getComponent$();
var p=(Clazz_instanceOf(target, "java.awt.Container") ? target : target.getParent$());
if (p != null ) {
p.postProcessKeyEvent$java_awt_event_KeyEvent(e);
}}return true;
});

Clazz_newMeth(C$, 'pumpApprovedKeyEvents',  function () {
var ke;
do {
ke=null;
{
if (this.enqueuedKeyEvents.size$() != 0) {
ke=this.enqueuedKeyEvents.getFirst$();
if (this.typeAheadMarkers.size$() != 0) {
var marker=this.typeAheadMarkers.getFirst$();
if (Long.$gt(ke.getWhen$(),marker.after )) {
ke=null;
}}if (ke != null ) {
this.enqueuedKeyEvents.removeFirst$();
}}}if (ke != null ) {
p$1.preDispatchKeyEvent$java_awt_event_KeyEvent.apply(this, [ke]);
}} while (ke != null );
}, p$1);

Clazz_newMeth(C$, 'typeAheadAssertions$java_awt_Component$java_awt_AWTEvent',  function (target, e) {
p$1.pumpApprovedKeyEvents.apply(this, []);
switch (e.getID$()) {
case 400:
case 401:
case 402:
{
var ke=e;
{
if (e.isPosted && this.typeAheadMarkers.size$() != 0 ) {
var marker=this.typeAheadMarkers.getFirst$();
if (Long.$gt(ke.getWhen$(),marker.after )) {
this.enqueuedKeyEvents.addLast$O(ke);
return true;
}}}return p$1.preDispatchKeyEvent$java_awt_event_KeyEvent.apply(this, [ke]);
}case 1004:
{
var found=false;
if (p$1.hasMarker$java_awt_Component.apply(this, [target])) {
for (var iter=this.typeAheadMarkers.iterator$(); iter.hasNext$(); ) {
if (iter.next$().untilFocused === target ) {
found=true;
} else if (found) {
break;
}iter.remove$();
}
} else {
}}this.redispatchEvent$java_awt_Component$java_awt_AWTEvent(target, e);
p$1.pumpApprovedKeyEvents.apply(this, []);
return true;
default:
this.redispatchEvent$java_awt_Component$java_awt_AWTEvent(target, e);
return true;
}
}, p$1);

Clazz_newMeth(C$, 'hasMarker$java_awt_Component',  function (comp) {
for (var iter=this.typeAheadMarkers.iterator$(); iter.hasNext$(); ) {
if (iter.next$().untilFocused === comp ) {
return true;
}}
return false;
}, p$1);

Clazz_newMeth(C$, 'clearMarkers$',  function () {
{
this.typeAheadMarkers.clear$();
}});

Clazz_newMeth(C$, 'preDispatchKeyEvent$java_awt_event_KeyEvent',  function (ke) {
if ((ke).isPosted) {
var focusOwner=this.getFocusOwner$();
ke.setSource$O(((focusOwner != null ) ? focusOwner : this.getFocusedWindow$()));
}if (ke.getSource$() == null ) {
return true;
}$I$(10).setCurrentEventAndMostRecentTime$java_awt_AWTEvent(ke);
var dispatchers=this.getKeyEventDispatchers$();
if (dispatchers != null ) {
for (var iter=dispatchers.iterator$(); iter.hasNext$(); ) {
if (iter.next$().dispatchKeyEvent$java_awt_event_KeyEvent(ke)) {
return true;
}}
}return this.dispatchKeyEvent$java_awt_event_KeyEvent(ke);
}, p$1);

Clazz_newMeth(C$, 'consumeNextKeyTyped$java_awt_event_KeyEvent',  function (e) {
this.consumeNextKeyTyped=true;
});

Clazz_newMeth(C$, 'consumeTraversalKey$java_awt_event_KeyEvent',  function (e) {
e.consume$();
this.consumeNextKeyTyped=(e.getID$() == 401) && !e.isActionKey$() ;
}, p$1);

Clazz_newMeth(C$, 'consumeProcessedKeyEvent$java_awt_event_KeyEvent',  function (e) {
if ((e.getID$() == 400) && this.consumeNextKeyTyped ) {
e.consume$();
this.consumeNextKeyTyped=false;
return true;
}return false;
}, p$1);

Clazz_newMeth(C$, 'processKeyEvent$java_awt_Component$java_awt_event_KeyEvent',  function (focusedComponent, e) {
if (p$1.consumeProcessedKeyEvent$java_awt_event_KeyEvent.apply(this, [e])) {
return;
}if (e.getID$() == 400) {
return;
}if (focusedComponent.getFocusTraversalKeysEnabled$() && !e.isConsumed$() ) {
var stroke=$I$(11).getAWTKeyStrokeForEvent$java_awt_event_KeyEvent(e);
var oppStroke=$I$(11,"getAWTKeyStroke$I$I$Z",[stroke.getKeyCode$(), stroke.getModifiers$(), !stroke.isOnKeyRelease$()]);
var toTest;
var contains;
var containsOpp;
toTest=focusedComponent.getFocusTraversalKeys$I(0);
contains=toTest.contains$O(stroke);
containsOpp=toTest.contains$O(oppStroke);
if (contains || containsOpp ) {
p$1.consumeTraversalKey$java_awt_event_KeyEvent.apply(this, [e]);
if (contains) {
this.focusNextComponent$java_awt_Component(focusedComponent);
}return;
} else if (e.getID$() == 401) {
this.consumeNextKeyTyped=false;
}toTest=focusedComponent.getFocusTraversalKeys$I(1);
contains=toTest.contains$O(stroke);
containsOpp=toTest.contains$O(oppStroke);
if (contains || containsOpp ) {
p$1.consumeTraversalKey$java_awt_event_KeyEvent.apply(this, [e]);
if (contains) {
this.focusPreviousComponent$java_awt_Component(focusedComponent);
}return;
}toTest=focusedComponent.getFocusTraversalKeys$I(2);
contains=toTest.contains$O(stroke);
containsOpp=toTest.contains$O(oppStroke);
if (contains || containsOpp ) {
p$1.consumeTraversalKey$java_awt_event_KeyEvent.apply(this, [e]);
if (contains) {
this.upFocusCycle$java_awt_Component(focusedComponent);
}return;
}if (!((Clazz_instanceOf(focusedComponent, "java.awt.Container")) && (focusedComponent).isFocusCycleRoot$() )) {
return;
}toTest=focusedComponent.getFocusTraversalKeys$I(3);
contains=toTest.contains$O(stroke);
containsOpp=toTest.contains$O(oppStroke);
if (contains || containsOpp ) {
p$1.consumeTraversalKey$java_awt_event_KeyEvent.apply(this, [e]);
if (contains) {
this.downFocusCycle$java_awt_Container(focusedComponent);
}}}});

Clazz_newMeth(C$, 'enqueueKeyEvents$J$java_awt_Component',  function (after, untilFocused) {
if (untilFocused == null ) {
return;
}var insertionIndex=0;
var i=this.typeAheadMarkers.size$();
var iter=this.typeAheadMarkers.listIterator$I(i);
for (; i > 0; i--) {
var marker=iter.previous$();
if (Long.$le(marker.after,after )) {
insertionIndex=i;
break;
}}
this.typeAheadMarkers.add$I$O(insertionIndex, Clazz_new_($I$(12,1).c$$J$java_awt_Component,[after, untilFocused]));
});

Clazz_newMeth(C$, 'dequeueKeyEvents$J$java_awt_Component',  function (after, untilFocused) {
if (untilFocused == null ) {
return;
}var marker;
var iter=this.typeAheadMarkers.listIterator$I((Long.$ge(after,0 )) ? this.typeAheadMarkers.size$() : 0);
if (Long.$lt(after,0 )) {
while (iter.hasNext$()){
marker=iter.next$();
if (marker.untilFocused === untilFocused ) {
iter.remove$();
return;
}}
} else {
while (iter.hasPrevious$()){
marker=iter.previous$();
if (marker.untilFocused === untilFocused  && Long.$eq(marker.after,after ) ) {
iter.remove$();
return;
}}
}});

Clazz_newMeth(C$, 'discardKeyEvents$java_awt_Component',  function (comp) {
if (comp == null ) {
return;
}var start=-1;
for (var iter=this.typeAheadMarkers.iterator$(); iter.hasNext$(); ) {
var marker=iter.next$();
var toTest=marker.untilFocused;
var match=(toTest === comp );
while (!match && toTest != null   && !(Clazz_instanceOf(toTest, "java.awt.Window")) ){
toTest=toTest.getParent$();
match=(toTest === comp );
}
if (match) {
if (Long.$lt(start,0 )) {
start=marker.after;
}iter.remove$();
} else if (Long.$ge(start,0 )) {
p$1.purgeStampedEvents$J$J.apply(this, [start, marker.after]);
start=-1;
}}
p$1.purgeStampedEvents$J$J.apply(this, [start, -1]);
});

Clazz_newMeth(C$, 'purgeStampedEvents$J$J',  function (start, end) {
if (Long.$lt(start,0 )) {
return;
}for (var iter=this.enqueuedKeyEvents.iterator$(); iter.hasNext$(); ) {
var ke=iter.next$();
var time=ke.getWhen$();
if (Long.$lt(start,time ) && (Long.$lt(end,0 ) || Long.$le(time,end ) ) ) {
iter.remove$();
}if (Long.$ge(end,0 ) && Long.$gt(time,end ) ) {
break;
}}
}, p$1);

Clazz_newMeth(C$, 'focusPreviousComponent$java_awt_Component',  function (aComponent) {
if (aComponent != null ) {
aComponent.transferFocusBackward$();
}});

Clazz_newMeth(C$, 'focusNextComponent$java_awt_Component',  function (aComponent) {
if (aComponent != null ) {
aComponent.transferFocus$();
}});

Clazz_newMeth(C$, 'upFocusCycle$java_awt_Component',  function (aComponent) {
if (aComponent != null ) {
aComponent.transferFocusUpCycle$();
}});

Clazz_newMeth(C$, 'downFocusCycle$java_awt_Container',  function (aContainer) {
if (aContainer != null  && aContainer.isFocusCycleRoot$() ) {
aContainer.transferFocusDownCycle$();
}});
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultKeyboardFocusManager, "TypeAheadMarker", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['J',['after'],'O',['untilFocused','java.awt.Component']]]

Clazz_newMeth(C$, 'c$$J$java_awt_Component',  function (after, untilFocused) {
;C$.$init$.apply(this);
this.after=after;
this.untilFocused=untilFocused;
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return ">>> Marker after " + Long.$s(this.after) + " on " + this.untilFocused ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultKeyboardFocusManager, "DefaultKeyboardFocusManagerSentEvent", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.SentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_AWTEvent$sun_awt_AppContext',  function (nested, toNotify) {
;C$.superclazz.c$$java_awt_AWTEvent$sun_awt_AppContext.apply(this,[nested, toNotify]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'dispatch$',  function () {
var manager=$I$(1).getCurrentKeyboardFocusManager$();
var defaultManager=(Clazz_instanceOf(manager, "java.awt.DefaultKeyboardFocusManager")) ? manager : null;
if (defaultManager != null ) {
{
++defaultManager.inSendMessage;
}}C$.superclazz.prototype.dispatch$.apply(this, []);
if (defaultManager != null ) {
{
--defaultManager.inSendMessage;
}}});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "Dimension", null, 'java.awt.geom.Dimension2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['width','height']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$I.apply(this, [0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dimension',  function (d) {
C$.c$$I$I.apply(this, [d.width, d.height]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (width, height) {
Clazz_super_(C$, this);
this.width=width;
this.height=height;
}, 1);

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'getSize$',  function () {
return Clazz_new_(C$.c$$I$I,[this.width, this.height]);
});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension',  function (d) {
this.width=d.width;
this.height=d.height;
});

Clazz_newMeth(C$, 'setSize$I$I',  function (width, height) {
this.width=width;
this.height=height;
});

Clazz_newMeth(C$, 'setSize$D$D',  function (width, height) {
this.width=(Math.ceil(width)|0);
this.height=(Math.ceil(height)|0);
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Dimension")) {
var d=obj;
return (this.width == d.width) && (this.height == d.height) ;
}return false;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var sum=this.width + this.height;
return (sum * (sum + 1)/2|0) + this.width;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[width=" + this.width + ",height=" + this.height + "]" ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.Component',['java.awt.EventFilter','.FilterAction'],'sun.awt.SunToolkit','javajs.util.Lst',['java.awt.EventDispatchThread','.StopDispatchEvent'],'Thread',['java.awt.EventDispatchThread','.HierarchyEventFilter'],'swingjs.JSToolkit','sun.awt.AWTAutoShutdown']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "EventDispatchThread", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javajs.util.JSThread');
C$.$classes$=[['StopDispatchEvent',0],['HierarchyEventFilter',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.eventFilters=Clazz_new_($I$(4,1));
this.modalFiltersCount=0;
this.doDispatch=true;
},1);

C$.$fields$=[['Z',['doDispatch'],'I',['modalFiltersCount','id'],'O',['theQueue','java.awt.EventQueue','eventFilters','javajs.util.Lst','filter','java.awt.EventFilter','cond','java.awt.Conditional']]]

Clazz_newMeth(C$, 'myInit$',  function () {
this.addEventFilter$java_awt_EventFilter(this.filter);
return true;
});

Clazz_newMeth(C$, 'isLooping$',  function () {
return (this.doDispatch && (this.cond == null  || this.cond.evaluate$() ) && !this.isInterrupted$()   || (this.doDispatch=false) );
});

Clazz_newMeth(C$, 'myLoop$',  function () {
var myid=this.id;
var me=this;
this.dispatchAndReturn$Runnable$I(((P$.EventDispatchThread$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "EventDispatchThread$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.b$['java.awt.EventDispatchThread'].pumpOneEventForFilters$I.apply(this.b$['java.awt.EventDispatchThread'], [this.$finals$.myid]);
});
})()
), Clazz_new_(P$.EventDispatchThread$lambda1.$init$,[this, {myid:myid}])), 1);
return (this.doDispatch=false);
});

Clazz_newMeth(C$, 'getDelayMillis$',  function () {
return 0;
});

Clazz_newMeth(C$, 'whenDone$',  function () {
});

Clazz_newMeth(C$, 'doFinally$',  function () {
if (!this.doDispatch) p$1.finish.apply(this, []);
});

Clazz_newMeth(C$, 'onException$Exception',  function (e) {
});

Clazz_newMeth(C$, 'c$$ThreadGroup$S$java_awt_EventQueue',  function (group, name, queue) {
;C$.superclazz.c$$ThreadGroup$S.apply(this,[group, name]);C$.$init$.apply(this);
this.theQueue=queue;
}, 1);

Clazz_newMeth(C$, 'stopDispatchingImpl$Z',  function (wait) {
var stopEvent=Clazz_new_($I$(5,1),[this, null]);
if ($I$(6).currentThread$() !== this ) {
this.theQueue.postEventPrivate$java_awt_AWTEvent(stopEvent);
if (wait) {
try {
this.join$();
} catch (e) {
if (Clazz_exceptionOf(e,"InterruptedException")){
} else {
throw e;
}
}
}} else {
stopEvent.dispatch$();
}{
if (this.theQueue.getDispatchThread$() === this ) {
this.theQueue.detachDispatchThread$();
}}});

Clazz_newMeth(C$, 'stopDispatching$',  function () {
this.stopDispatchingImpl$Z(true);
});

Clazz_newMeth(C$, 'stopDispatchingLater$',  function () {
this.stopDispatchingImpl$Z(false);
});

Clazz_newMeth(C$, 'start$',  function () {
C$.superclazz.prototype.start$.apply(this, []);
});

Clazz_newMeth(C$, 'run$',  function () {
this.pumpEvents$I$java_awt_Conditional(-1, null);
});

Clazz_newMeth(C$, 'pumpEvents$I$java_awt_Conditional',  function (id, cond) {
this.pumpEventsForHierarchy$I$java_awt_Conditional$java_awt_Component(id, cond, null);
});

Clazz_newMeth(C$, 'pumpEventsForHierarchy$I$java_awt_Conditional$java_awt_Component',  function (id, cond, modalComponent) {
this.pumpEventsForFilter$I$java_awt_Conditional$java_awt_EventFilter(id, cond, Clazz_new_($I$(7,1).c$$java_awt_Component,[modalComponent]));
});

Clazz_newMeth(C$, 'pumpEventsForFilter$I$java_awt_Conditional$java_awt_EventFilter',  function (id, cond, filter) {
this.filter=filter;
this.cond=cond;
this.id=id;
C$.superclazz.prototype.run1$I.apply(this, [0]);
});

Clazz_newMeth(C$, 'dispatchAndReturn$Runnable$I',  function (r, mode) {
var me=this;
var f=function() { r.run$();
me.run1$I(mode);
}||null;
$I$(8).dispatch$O$I$I(f, 1, 0);
});

Clazz_newMeth(C$, 'finish',  function () {
this.doDispatch=false;
this.removeEventFilter$java_awt_EventFilter(this.filter);
{
if (this.theQueue.getDispatchThread$() === this ) {
this.theQueue.detachDispatchThread$();
}if (this.theQueue.peekEvent$() != null  || !$I$(3).isPostEventQueueEmpty$() ) {
this.theQueue.initDispatchThread$();
}$I$(9).getInstance$().notifyThreadFree$Thread(this);
}}, p$1);

Clazz_newMeth(C$, 'addEventFilter$java_awt_EventFilter',  function (filter) {
{
if (!this.eventFilters.contains$O(filter)) {
if (Clazz_instanceOf(filter, "java.awt.ModalEventFilter")) {
var newFilter=filter;
var k=0;
for (k=0; k < this.eventFilters.size$(); k++) {
var f=this.eventFilters.get$I(k);
if (Clazz_instanceOf(f, "java.awt.ModalEventFilter")) {
var cf=f;
if (cf.compareTo$java_awt_ModalEventFilter(newFilter) > 0) {
break;
}}}
this.eventFilters.add$I$O(k, filter);
++this.modalFiltersCount;
} else {
this.eventFilters.addLast$O(filter);
}}}});

Clazz_newMeth(C$, 'removeEventFilter$java_awt_EventFilter',  function (filter) {
{
if (this.eventFilters.contains$O(filter)) {
if (Clazz_instanceOf(filter, "java.awt.ModalEventFilter")) {
--this.modalFiltersCount;
}this.eventFilters.removeObj$O(filter);
}}});

Clazz_newMeth(C$, 'pumpOneEventForFilters$I',  function (id) {
try {
var event;
var eventOK;
do {
event=(id == -1) ? this.theQueue.getNextEvent$() : this.theQueue.getNextEventForID$I(id);
if (event == null ) return (this.doDispatch=false);
eventOK=true;
{
for (var i=this.eventFilters.size$() - 1; i >= 0; i--) {
var f=this.eventFilters.get$I(i);
var accept=f.acceptEvent$java_awt_AWTEvent(event);
if (accept === $I$(2).REJECT ) {
eventOK=false;
break;
} else if (accept === $I$(2).ACCEPT_IMMEDIATELY ) {
break;
}}
}if (!eventOK) {
event.consume$();
}} while (eventOK == false );
this.theQueue.dispatchEvent$java_awt_AWTEvent(event);
return this.doDispatch=true;
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"ThreadDeath")){
var death = e$$;
{
return this.doDispatch=false;
}
} else if (Clazz_exceptionOf(e$$,"InterruptedException")){
var interruptedException = e$$;
{
return this.doDispatch=false;
}
} else {
var e = e$$;
{
p$1.processException$Throwable$Z.apply(this, [e, this.modalFiltersCount > 0]);
}
}
}
return this.doDispatch=true;
});

Clazz_newMeth(C$, 'processException$Throwable$Z',  function (e, isModal) {
if (!p$1.handleException$Throwable.apply(this, [e])) {
if (isModal) {
System.err.println$S("Exception occurred during event dispatching:");
e.printStackTrace$();
} else if (Clazz_instanceOf(e, "java.lang.RuntimeException")) {
throw e;
} else if (Clazz_instanceOf(e, "java.lang.Error")) {
throw e;
} else {
var isTypeError=(!!e.stack ||false);
if (isTypeError) {
e.printStackTrace$();
}}}}, p$1);

Clazz_newMeth(C$, 'handleException$Throwable',  function (thrown) {
return false;
}, p$1);

Clazz_newMeth(C$, 'isDispatching$java_awt_EventQueue',  function (eq) {
return this.theQueue.equals$O(eq);
});

Clazz_newMeth(C$, 'getEventQueue$',  function () {
return this.theQueue;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.EventDispatchThread, "StopDispatchEvent", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.awt.AWTEvent', 'java.awt.ActiveEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$O$I.apply(this,[this.b$['java.awt.EventDispatchThread'], 0]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'dispatch$',  function () {
this.b$['java.awt.EventDispatchThread'].doDispatch=false;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.EventDispatchThread, "HierarchyEventFilter", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.awt.EventFilter');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['modalComponent','java.awt.Component']]]

Clazz_newMeth(C$, 'c$$java_awt_Component',  function (modalComponent) {
;C$.$init$.apply(this);
this.modalComponent=modalComponent;
}, 1);

Clazz_newMeth(C$, 'acceptEvent$java_awt_AWTEvent',  function (event) {
if (this.modalComponent != null ) {
var eventID=event.getID$();
var mouseEvent=(eventID >= 500) && (eventID <= 507) ;
var actionEvent=(eventID >= 1001) && (eventID <= 1001) ;
var windowClosingEvent=(eventID == 201);
if ($I$(1).isInstanceOf$O$S(this.modalComponent, "javax.swing.JInternalFrame")) {
return windowClosingEvent ? $I$(2).REJECT : $I$(2).ACCEPT;
}if (mouseEvent || actionEvent || windowClosingEvent  ) {
var o=event.getSource$();
if (Clazz_instanceOf(o, "sun.awt.ModalExclude")) {
return $I$(2).ACCEPT;
} else if (Clazz_instanceOf(o, "java.awt.Component")) {
var c=o;
var modalExcluded=false;
if (Clazz_instanceOf(this.modalComponent, "java.awt.Container")) {
while (c !== this.modalComponent  && c != null  ){
if ((Clazz_instanceOf(c, "java.awt.Window")) && ($I$(3).isModalExcluded$java_awt_Window(c)) ) {
modalExcluded=true;
break;
}c=c.getParent$();
}
}if (!modalExcluded && (c !== this.modalComponent ) ) {
return $I$(2).REJECT;
}}}}return $I$(2).ACCEPT;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "EventFilter", function(){
});
C$.$classes$=[['FilterAction',25]];
;
(function(){/*e*/var C$=Clazz_newClass(P$.EventFilter, "FilterAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "ACCEPT", 0, []);
Clazz_newEnumConst($vals, C$.c$, "REJECT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "ACCEPT_IMMEDIATELY", 2, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.Queue','Thread','sun.awt.SunToolkit','sun.awt.AWTAutoShutdown','java.awt.EventQueueItem','swingjs.JSToolkit','java.awt.Toolkit','sun.awt.AppContext','java.awt.EventDispatchThread','java.awt.event.InvocationEvent','Error']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "EventQueue");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.queues=Clazz_array($I$(1), [4]);
this.threadGroup=$I$(2).currentThread$().getThreadGroup$();
this.mostRecentEventTime=System.currentTimeMillis$();
this.name="AWT-EventQueue-" + C$.nextThreadNum$();
},1);

C$.$fields$=[['I',['waitForID'],'J',['mostRecentEventTime'],'S',['name'],'O',['queues','java.awt.Queue[]','nextQueue','java.awt.EventQueue','+previousQueue','dispatchThread','java.awt.EventDispatchThread','threadGroup','ThreadGroup','currentEvent','java.awt.AWTEvent']]
,['I',['threadInitNumber']]]

Clazz_newMeth(C$, 'nextThreadNum$',  function () {
return C$.threadInitNumber++;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
for (var i=0; i < 4; i++) {
this.queues[i]=Clazz_new_($I$(1,1));
}
}, 1);

Clazz_newMeth(C$, 'postEvent$java_awt_AWTEvent',  function (event) {
$I$(3).flushPendingEvents$();
this.postEventPrivate$java_awt_AWTEvent(event);
});

Clazz_newMeth(C$, 'postEventPrivate$java_awt_AWTEvent',  function (theEvent) {
theEvent.isPosted=true;
{
if ((this.dispatchThread == null  || !this.dispatchThread.isAlive$() ) && this.nextQueue == null  ) {
if (theEvent.getSource$() === $I$(4).getInstance$() ) {
return;
} else {
this.initDispatchThread$();
}}if (this.nextQueue != null ) {
this.nextQueue.postEventPrivate$java_awt_AWTEvent(theEvent);
return;
}p$1.postEventNow$java_awt_AWTEvent$I.apply(this, [theEvent, C$.getPriority$java_awt_AWTEvent(theEvent)]);
}});

Clazz_newMeth(C$, 'getPriority$java_awt_AWTEvent',  function (theEvent) {
if (Clazz_instanceOf(theEvent, "sun.awt.PeerEvent")) {
var flags=(theEvent).getFlags$();
if (Long.$ne((Long.$and(flags,2)),0 )) return 3;
if (Long.$ne((Long.$and(flags,1)),0 )) return 2;
if (Long.$ne((Long.$and(flags,4)),0 )) return 0;
}switch (theEvent.getID$()) {
case 1201:
case 800:
case 801:
return 0;
default:
return 1;
}
}, 1);

Clazz_newMeth(C$, 'postEventNow$java_awt_AWTEvent$I',  function (theEvent, priority) {
if (p$1.coalesceEvent$java_awt_AWTEvent$I.apply(this, [theEvent, priority])) {
return;
}var newItem=Clazz_new_($I$(5,1).c$$java_awt_AWTEvent,[theEvent]);
p$1.cacheEQItem$java_awt_EventQueueItem.apply(this, [newItem]);
if (this.queues[priority].head == null ) {
var shouldNotify=p$1.noEvents.apply(this, []);
this.queues[priority].head=this.queues[priority].tail=newItem;
if (shouldNotify) {
if (theEvent.getSource$() !== $I$(4).getInstance$() ) {
$I$(4).getInstance$().notifyThreadBusy$Thread(this.dispatchThread);
}}} else {
this.queues[priority].tail.next=newItem;
this.queues[priority].tail=newItem;
}}, p$1);

Clazz_newMeth(C$, 'coalescePaintEvent$java_awt_event_PaintEvent',  function (e) {
var cache=(e.getSource$()).eventCache;
if (cache == null ) {
return false;
}var index=C$.eventToCacheIndex$java_awt_AWTEvent(e);
if (index != -1 && cache[index] != null  ) {
var merged=p$1.mergePaintEvents$java_awt_event_PaintEvent$java_awt_event_PaintEvent.apply(this, [e, cache[index].event]);
if (merged != null ) {
cache[index].event=merged;
return true;
}}return false;
}, p$1);

Clazz_newMeth(C$, 'mergePaintEvents$java_awt_event_PaintEvent$java_awt_event_PaintEvent',  function (a, b) {
var aRect=a.getUpdateRect$();
var bRect=b.getUpdateRect$();
if (bRect.contains$java_awt_Rectangle(aRect)) {
return b;
}if (aRect.contains$java_awt_Rectangle(bRect)) {
return a;
}return null;
}, p$1);

Clazz_newMeth(C$, 'coalesceMouseEvent$java_awt_event_MouseEvent',  function (e) {
var cache=(e.getSource$()).eventCache;
if (cache == null ) {
return false;
}var index=C$.eventToCacheIndex$java_awt_AWTEvent(e);
if (index != -1 && cache[index] != null  ) {
cache[index].event=e;
return true;
}return false;
}, p$1);

Clazz_newMeth(C$, 'coalescePeerEvent$sun_awt_PeerEvent',  function (e) {
var cache=(e.getSource$()).eventCache;
if (cache == null ) {
return false;
}var index=C$.eventToCacheIndex$java_awt_AWTEvent(e);
if (index != -1 && cache[index] != null  ) {
e=e.coalesceEvents$sun_awt_PeerEvent(cache[index].event);
if (e != null ) {
cache[index].event=e;
return true;
} else {
cache[index]=null;
}}return false;
}, p$1);

Clazz_newMeth(C$, 'coalesceOtherEvent$java_awt_AWTEvent$I',  function (e, priority) {
var id=e.getID$();
var source=e.getSource$();
for (var entry=this.queues[priority].head; entry != null ; entry=entry.next) {
if (entry.event.getSource$() === source  && entry.id == id ) {
var coalescedEvent=source.coalesceEvents$java_awt_AWTEvent$java_awt_AWTEvent(entry.event, e);
if (coalescedEvent != null ) {
entry.event=coalescedEvent;
return true;
}}}
return false;
}, p$1);

Clazz_newMeth(C$, 'coalesceEvent$java_awt_AWTEvent$I',  function (e, priority) {
if (!(Clazz_instanceOf(e.getSource$(), "java.awt.Component"))) {
return false;
}if (Clazz_instanceOf(e, "sun.awt.PeerEvent")) {
return p$1.coalescePeerEvent$sun_awt_PeerEvent.apply(this, [e]);
}if ((e.getSource$()).isCoalescingEnabled$() && p$1.coalesceOtherEvent$java_awt_AWTEvent$I.apply(this, [e, priority]) ) {
return true;
}if (Clazz_instanceOf(e, "java.awt.event.PaintEvent")) {
return p$1.coalescePaintEvent$java_awt_event_PaintEvent.apply(this, [e]);
}if (Clazz_instanceOf(e, "java.awt.event.MouseEvent")) {
return p$1.coalesceMouseEvent$java_awt_event_MouseEvent.apply(this, [e]);
}return false;
}, p$1);

Clazz_newMeth(C$, 'cacheEQItem$java_awt_EventQueueItem',  function (entry) {
var index=C$.eventToCacheIndex$java_awt_AWTEvent(entry.event);
if (index != -1 && Clazz_instanceOf(entry.event.getSource$(), "java.awt.Component") ) {
var source=entry.event.getSource$();
if (source.eventCache == null ) {
source.eventCache=Clazz_array($I$(5), [5]);
}source.eventCache[index]=entry;
}}, p$1);

Clazz_newMeth(C$, 'uncacheEQItem$java_awt_EventQueueItem',  function (entry) {
var index=C$.eventToCacheIndex$java_awt_AWTEvent(entry.event);
if (index != -1 && Clazz_instanceOf(entry.event.getSource$(), "java.awt.Component") ) {
var source=entry.event.getSource$();
if (source.eventCache == null ) {
return;
}source.eventCache[index]=null;
}}, p$1);

Clazz_newMeth(C$, 'eventToCacheIndex$java_awt_AWTEvent',  function (e) {
switch (e.getID$()) {
case 800:
return 0;
case 801:
return 1;
case 503:
return 2;
case 506:
return 3;
default:
return -1;
}
}, 1);

Clazz_newMeth(C$, 'noEvents',  function () {
for (var i=0; i < 4; i++) {
if (this.queues[i].head != null ) {
return false;
}}
return true;
}, p$1);

Clazz_newMeth(C$, 'getNextEvent$',  function () {
$I$(3).flushPendingEvents$();
{
for (var i=3; i >= 0; i--) {
if (this.queues[i].head != null ) {
var entry=this.queues[i].head;
this.queues[i].head=entry.next;
if (entry.next == null ) {
this.queues[i].tail=null;
}p$1.uncacheEQItem$java_awt_EventQueueItem.apply(this, [entry]);
return entry.event;
}}
$I$(4).getInstance$().notifyThreadFree$Thread(this.dispatchThread);
}return null;
});

Clazz_newMeth(C$, 'getNextEventForID$I',  function (id) {
$I$(3).flushPendingEvents$();
{
for (var i=0; i < 4; i++) {
for (var entry=this.queues[i].head, prev=null; entry != null ; prev=entry, entry=entry.next) {
if (entry.id == id) {
if (prev == null ) {
this.queues[i].head=entry.next;
} else {
prev.next=entry.next;
}if (this.queues[i].tail === entry ) {
this.queues[i].tail=prev;
}p$1.uncacheEQItem$java_awt_EventQueueItem.apply(this, [entry]);
return entry.event;
}}
}
this.waitForID=id;
this.waitForID=0;
}return null;
});

Clazz_newMeth(C$, 'peekEvent$',  function () {
for (var i=3; i >= 0; i--) {
if (this.queues[i].head != null ) {
return this.queues[i].head.event;
}}
return null;
});

Clazz_newMeth(C$, 'peekEvent$I',  function (id) {
for (var i=3; i >= 0; i--) {
var q=this.queues[i].head;
for (; q != null ; q=q.next) {
if (q.id == id) {
return q.event;
}}
}
return null;
});

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent',  function (event) {
var src=event.getSource$();
p$1.dispatchEventImpl$java_awt_AWTEvent$O$Z.apply(this, [event, src, true]);
});

Clazz_newMeth(C$, 'dispatchEventAndWait$java_awt_AWTEvent$O',  function (event, src) {
p$1.dispatchEventImpl$java_awt_AWTEvent$O$Z.apply(this, [event, src, true]);
});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent$O$Z',  function (event, src, andWait) {
event.isPosted=true;
if (Clazz_instanceOf(event, "java.awt.ActiveEvent")) {
p$1.setCurrentEventAndMostRecentTimeImpl$java_awt_AWTEvent.apply(this, [event]);
$I$(6).dispatchEvent$java_awt_AWTEvent$O$Z(event, null, andWait);
} else if (Clazz_instanceOf(src, "java.awt.Component")) {
$I$(6).dispatchEvent$java_awt_AWTEvent$O$Z(event, src, andWait);
event.dispatched$();
} else if (Clazz_instanceOf(src, "sun.awt.AWTAutoShutdown")) {
if (p$1.noEvents.apply(this, [])) {
this.dispatchThread.stopDispatching$();
}} else {
System.err.println$S("unable to dispatch event: " + event);
}}, p$1);

Clazz_newMeth(C$, 'getMostRecentEventTime$',  function () {
return p$1.getMostRecentEventTimeImpl.apply($I$(7).getEventQueue$(), []);
}, 1);

Clazz_newMeth(C$, 'getMostRecentEventTimeImpl',  function () {
return ($I$(2).currentThread$() === this.dispatchThread ) ? this.mostRecentEventTime : System.currentTimeMillis$();
}, p$1);

Clazz_newMeth(C$, 'getMostRecentEventTimeEx$',  function () {
return this.mostRecentEventTime;
});

Clazz_newMeth(C$, 'getCurrentEvent$',  function () {
return p$1.getCurrentEventImpl.apply($I$(7).getEventQueue$(), []);
}, 1);

Clazz_newMeth(C$, 'getCurrentEventImpl',  function () {
return ($I$(6).isDispatchThread$() ? (this.currentEvent) : null);
}, p$1);

Clazz_newMeth(C$, 'push$java_awt_EventQueue',  function (newEventQueue) {
if (this.nextQueue != null ) {
this.nextQueue.push$java_awt_EventQueue(newEventQueue);
return;
}{
while (this.peekEvent$() != null ){
try {
newEventQueue.postEventPrivate$java_awt_AWTEvent(this.getNextEvent$());
} catch (ie) {
if (Clazz_exceptionOf(ie,"InterruptedException")){
} else {
throw ie;
}
}
}
newEventQueue.previousQueue=this;
}if (this.dispatchThread != null ) {
this.dispatchThread.stopDispatchingLater$();
}this.nextQueue=newEventQueue;
var appContext=$I$(8).getAppContext$();
if (appContext.get$O("AppContext_EVENT_QUEUE_KEY") === this ) {
appContext.put$O$O("AppContext_EVENT_QUEUE_KEY", newEventQueue);
}});

Clazz_newMeth(C$, 'pop$',  function () {
var prev=this.previousQueue;
/*sync org.eclipse.jdt.core.dom.ConditionalExpression*/((prev != null ) ? prev : this);
{
{
if (this.nextQueue != null ) {
this.nextQueue.pop$();
return;
}if (this.previousQueue == null ) {
throw Clazz_new_(Clazz_load('java.util.EmptyStackException'));
}this.previousQueue.nextQueue=null;
while (this.peekEvent$() != null ){
try {
this.previousQueue.postEventPrivate$java_awt_AWTEvent(this.getNextEvent$());
} catch (ie) {
if (Clazz_exceptionOf(ie,"InterruptedException")){
} else {
throw ie;
}
}
}
var appContext=$I$(8).getAppContext$();
if (appContext.get$O("AppContext_EVENT_QUEUE_KEY") === this ) {
appContext.put$O$O("AppContext_EVENT_QUEUE_KEY", this.previousQueue);
}this.previousQueue=null;
}}var dt=this.dispatchThread;
if (dt != null ) {
dt.stopDispatching$();
}});

Clazz_newMeth(C$, 'isDispatchThread$',  function () {
return $I$(6).isDispatchThread$();
}, 1);

Clazz_newMeth(C$, 'initDispatchThread$',  function () {
{
if (this.dispatchThread == null  || !this.dispatchThread.isAlive$() ) {
var t=Clazz_new_($I$(9,1).c$$ThreadGroup$S$java_awt_EventQueue,[this.threadGroup, this.name, this]);
$I$(4).getInstance$().notifyThreadBusy$Thread(t);
this.dispatchThread=t;
this.dispatchThread.start$();
}}});

Clazz_newMeth(C$, 'detachDispatchThread$',  function () {
this.dispatchThread=null;
});

Clazz_newMeth(C$, 'getDispatchThread$',  function () {
return this.dispatchThread;
});

Clazz_newMeth(C$, 'removeSourceEvents$O$Z',  function (source, removeAllEvents) {
$I$(3).flushPendingEvents$();
{
for (var i=0; i < 4; i++) {
var entry=this.queues[i].head;
var prev=null;
while (entry != null ){
if ((entry.event.getSource$() === source ) && (removeAllEvents || !(Clazz_instanceOf(entry.event, "java.awt.SequencedEvent") || Clazz_instanceOf(entry.event, "java.awt.SentEvent") || Clazz_instanceOf(entry.event, "java.awt.event.FocusEvent") || Clazz_instanceOf(entry.event, "java.awt.event.WindowEvent") || Clazz_instanceOf(entry.event, "java.awt.event.KeyEvent") || Clazz_instanceOf(entry.event, "java.awt.event.InputMethodEvent")  ) ) ) {
if (Clazz_instanceOf(entry.event, "java.awt.SequencedEvent")) {
(entry.event).dispose$();
}if (Clazz_instanceOf(entry.event, "java.awt.SentEvent")) {
(entry.event).dispose$();
}if (prev == null ) {
this.queues[i].head=entry.next;
} else {
prev.next=entry.next;
}p$1.uncacheEQItem$java_awt_EventQueueItem.apply(this, [entry]);
} else {
prev=entry;
}entry=entry.next;
}
this.queues[i].tail=prev;
}
}});

Clazz_newMeth(C$, 'setCurrentEventAndMostRecentTime$java_awt_AWTEvent',  function (e) {
p$1.setCurrentEventAndMostRecentTimeImpl$java_awt_AWTEvent.apply($I$(7).getEventQueue$(), [e]);
}, 1);

Clazz_newMeth(C$, 'setCurrentEventAndMostRecentTimeImpl$java_awt_AWTEvent',  function (e) {
if ($I$(6).isDispatchThread$()) {
return;
}this.currentEvent=e;
var mostRecentEventTime2=[0,549755813888,-1];
if (Clazz_instanceOf(e, "java.awt.event.InputEvent")) {
var ie=e;
mostRecentEventTime2=ie.getWhen$();
} else if (Clazz_instanceOf(e, "java.awt.event.InputMethodEvent")) {
var ime=e;
mostRecentEventTime2=ime.getWhen$();
} else if (Clazz_instanceOf(e, "java.awt.event.ActionEvent")) {
var ae=e;
mostRecentEventTime2=ae.getWhen$();
} else if (Clazz_instanceOf(e, "java.awt.event.InvocationEvent")) {
var ie=e;
mostRecentEventTime2=ie.getWhen$();
}this.mostRecentEventTime=Math.max$J$J(this.mostRecentEventTime, mostRecentEventTime2);
}, p$1);

Clazz_newMeth(C$, 'invokeLater$Runnable',  function (runnable) {
$I$(7).getEventQueue$().postEvent$java_awt_AWTEvent(Clazz_new_([$I$(7).getDefaultToolkit$(), 1200, runnable, null, false],$I$(10,1).c$$O$I$Runnable$O$Z));
}, 1);

Clazz_newMeth(C$, 'invokeAndWait$Runnable',  function (runnable) {
C$.invokeAndWaitStatic$O$Runnable($I$(7).getDefaultToolkit$(), runnable);
}, 1);

Clazz_newMeth(C$, 'invokeAndWaitStatic$O$Runnable',  function (source, runnable) {
if (C$.isDispatchThread$()) {
throw Clazz_new_($I$(11,1).c$$S,["Cannot call invokeAndWait from the event dispatcher thread"]);
}var event=Clazz_new_($I$(10,1).c$$O$I$Runnable$O$Z,[source, 1200, runnable, null, true]);
$I$(6).dispatchEvent$java_awt_AWTEvent$O$Z(event, null, true);
var eventThrowable=event.getThrowable$();
if (eventThrowable != null ) {
throw Clazz_new_(Clazz_load('java.lang.reflect.InvocationTargetException').c$$Throwable,[eventThrowable]);
}}, 1);

Clazz_newMeth(C$, 'wakeup$Z',  function (isShutdown) {
{
if (this.nextQueue != null ) {
this.nextQueue.wakeup$Z(isShutdown);
} else if (this.dispatchThread != null ) {
try {
this.dispatchThread.start$();
} catch (e) {
if (Clazz_exceptionOf(e,"IllegalThreadStateException")){
this.dispatchThread.run$();
} else {
throw e;
}
}
} else if (!isShutdown) {
this.initDispatchThread$();
}}});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "EventQueueItem");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['id'],'O',['event','java.awt.AWTEvent','next','java.awt.EventQueueItem']]]

Clazz_newMeth(C$, 'c$$java_awt_AWTEvent',  function (evt) {
;C$.$init$.apply(this);
this.event=evt;
this.id=evt.getID$();
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.Dimension']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FlowLayout", null, null, ['java.awt.LayoutManager', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['alignOnBaseline'],'I',['align','newAlign','hgap','vgap']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$I$I.apply(this, [1, 5, 5]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (align) {
C$.c$$I$I$I.apply(this, [align, 5, 5]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I',  function (align, hgap, vgap) {
;C$.$init$.apply(this);
this.hgap=hgap;
this.vgap=vgap;
this.setAlignment$I(align);
}, 1);

Clazz_newMeth(C$, 'getAlignment$',  function () {
return this.newAlign;
});

Clazz_newMeth(C$, 'setAlignment$I',  function (align) {
this.newAlign=align;
switch (align) {
case 3:
this.align=0;
break;
case 4:
this.align=2;
break;
default:
this.align=align;
break;
}
});

Clazz_newMeth(C$, 'getHgap$',  function () {
return this.hgap;
});

Clazz_newMeth(C$, 'setHgap$I',  function (hgap) {
this.hgap=hgap;
});

Clazz_newMeth(C$, 'getVgap$',  function () {
return this.vgap;
});

Clazz_newMeth(C$, 'setVgap$I',  function (vgap) {
this.vgap=vgap;
});

Clazz_newMeth(C$, 'setAlignOnBaseline$Z',  function (alignOnBaseline) {
this.alignOnBaseline=alignOnBaseline;
});

Clazz_newMeth(C$, 'getAlignOnBaseline$',  function () {
return this.alignOnBaseline;
});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component',  function (name, comp) {
});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component',  function (comp) {
});

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container',  function (target) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(target.getTreeLock$());
{
var dim=Clazz_new_($I$(1,1).c$$I$I,[0, 0]);
var nmembers=target.getComponentCount$();
var firstVisibleComponent=true;
var useBaseline=this.getAlignOnBaseline$();
var maxAscent=0;
var maxDescent=0;
for (var i=0; i < nmembers; i++) {
var m=target.getComponent$I(i);
if (m.isVisible$()) {
var d=m.getPreferredSize$();
dim.height=Math.max(dim.height, d.height);
if (firstVisibleComponent) {
firstVisibleComponent=false;
} else {
dim.width+=this.hgap;
}dim.width+=d.width;
if (useBaseline) {
var baseline=m.getBaseline$I$I(d.width, d.height);
if (baseline >= 0) {
maxAscent=Math.max(maxAscent, baseline);
maxDescent=Math.max(maxDescent, d.height - baseline);
}}}}
if (useBaseline) {
dim.height=Math.max(maxAscent + maxDescent, dim.height);
}var insets=target.getInsets$();
dim.width+=insets.left + insets.right + this.hgap * 2 ;
dim.height+=insets.top + insets.bottom + this.vgap * 2 ;
return dim;
}});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container',  function (target) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(target.getTreeLock$());
{
var useBaseline=this.getAlignOnBaseline$();
var dim=Clazz_new_($I$(1,1).c$$I$I,[0, 0]);
var nmembers=target.getComponentCount$();
var maxAscent=0;
var maxDescent=0;
var firstVisibleComponent=true;
for (var i=0; i < nmembers; i++) {
var m=target.getComponent$I(i);
if (m.visible) {
var d=m.getMinimumSize$();
dim.height=Math.max(dim.height, d.height);
if (firstVisibleComponent) {
firstVisibleComponent=false;
} else {
dim.width+=this.hgap;
}dim.width+=d.width;
if (useBaseline) {
var baseline=m.getBaseline$I$I(d.width, d.height);
if (baseline >= 0) {
maxAscent=Math.max(maxAscent, baseline);
maxDescent=Math.max(maxDescent, dim.height - baseline);
}}}}
if (useBaseline) {
dim.height=Math.max(maxAscent + maxDescent, dim.height);
}var insets=target.getInsets$();
dim.width+=insets.left + insets.right + this.hgap * 2 ;
dim.height+=insets.top + insets.bottom + this.vgap * 2 ;
return dim;
}});

Clazz_newMeth(C$, 'moveComponents$java_awt_Container$I$I$I$I$I$I$Z$Z$IA$IA',  function (target, x, y, width, height, rowStart, rowEnd, ltr, useBaseline, ascent, descent) {
switch (this.newAlign) {
case 0:
x+=ltr ? 0 : width;
break;
case 1:
x+=(width/2|0);
break;
case 2:
x+=ltr ? width : 0;
break;
case 3:
break;
case 4:
x+=width;
break;
}
var maxAscent=0;
var nonbaselineHeight=0;
var baselineOffset=0;
if (useBaseline) {
var maxDescent=0;
for (var i=rowStart; i < rowEnd; i++) {
var m=target.getComponent$I(i);
if (m.visible) {
if (ascent[i] >= 0) {
maxAscent=Math.max(maxAscent, ascent[i]);
maxDescent=Math.max(maxDescent, descent[i]);
} else {
nonbaselineHeight=Math.max(m.getHeight$(), nonbaselineHeight);
}}}
height=Math.max(maxAscent + maxDescent, nonbaselineHeight);
baselineOffset=((height - maxAscent - maxDescent )/2|0);
}for (var i=rowStart; i < rowEnd; i++) {
var m=target.getComponent$I(i);
if (m.isVisible$()) {
var cy;
if (useBaseline && ascent[i] >= 0 ) {
cy=y + baselineOffset + maxAscent  - ascent[i];
} else {
cy=y + ((height - m.height)/2|0);
}if (ltr) {
m.setLocation$I$I(x, cy);
} else {
m.setLocation$I$I(target.width - x - m.width , cy);
}x+=m.width + this.hgap;
}}
return height;
}, p$1);

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container',  function (target) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(target.getTreeLock$());
{
var insets=target.getInsets$();
var maxwidth=target.width - (insets.left + insets.right + this.hgap * 2 );
var nmembers=target.getComponentCount$();
var x=0;
var y=insets.top + this.vgap;
var rowh=0;
var start=0;
var ltr=target.getComponentOrientation$().isLeftToRight$();
var useBaseline=this.getAlignOnBaseline$();
var ascent=null;
var descent=null;
if (useBaseline) {
ascent=Clazz_array(Integer.TYPE, [nmembers]);
descent=Clazz_array(Integer.TYPE, [nmembers]);
}for (var i=0; i < nmembers; i++) {
var m=target.getComponent$I(i);
if (m.isVisible$()) {
var d=m.getPreferredSize$();
m.setSize$I$I(d.width, d.height);
if (useBaseline) {
var baseline=m.getBaseline$I$I(d.width, d.height);
if (baseline >= 0) {
ascent[i]=baseline;
descent[i]=d.height - baseline;
} else {
ascent[i]=-1;
}}if ((x == 0) || ((x + d.width) <= maxwidth) ) {
if (x > 0) {
x+=this.hgap;
}x+=d.width;
rowh=Math.max(rowh, d.height);
} else {
rowh=p$1.moveComponents$java_awt_Container$I$I$I$I$I$I$Z$Z$IA$IA.apply(this, [target, insets.left + this.hgap, y, maxwidth - x, rowh, start, i, ltr, useBaseline, ascent, descent]);
x=d.width;
y+=this.vgap + rowh;
rowh=d.height;
start=i;
}}}
p$1.moveComponents$java_awt_Container$I$I$I$I$I$I$Z$Z$IA$IA.apply(this, [target, insets.left + this.hgap, y, maxwidth - x, rowh, start, nmembers, ltr, useBaseline, ascent, descent]);
}});

Clazz_newMeth(C$, 'toString',  function () {
var str="";
switch (this.align) {
case 0:
str=",align=left";
break;
case 1:
str=",align=center";
break;
case 2:
str=",align=right";
break;
case 3:
str=",align=leading";
break;
case 4:
str=",align=trailing";
break;
}
return this.getClass$().getName$() + "[hgap=" + this.hgap + ",vgap=" + this.vgap + str + "]" ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "FocusTraversalPolicy");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getInitialComponent$java_awt_Window',  function (window) {
if (window == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["window cannot be equal to null."]);
}var def=this.getDefaultComponent$java_awt_Container(window);
if (def == null  && window.isFocusableWindow$() ) {
def=window;
}return def;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'sun.font.FontDesignMetrics','sun.font.AttributeValues','sun.font.EAttribute','java.awt.font.TextAttribute','java.awt.geom.AffineTransform','swingjs.JSToolkit','sun.font.AttributeMap',['java.text.AttributedCharacterIterator','.Attribute'],['java.awt.geom.Point2D','.Float'],'sun.font.CoreMetrics','sun.font.FontLineMetrics','javajs.util.SB',['java.awt.geom.Rectangle2D','.Float']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Font");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.createdFont=false;
},1);

C$.$fields$=[['Z',['hasLayoutAttributes','createdFont','nonIdentityTx'],'F',['pointSize'],'I',['style','size','hash'],'S',['family','name'],'O',['font2DHandle','sun.font.Font2DHandle','values','sun.font.AttributeValues','flmref','sun.font.FontLineMetrics']]
,['Z',['haveMasks'],'I',['RECOGNIZED_MASK','PRIMARY_MASK','SECONDARY_MASK','LAYOUT_MASK','EXTRA_MASK'],'O',['ssinfo','float[]']]]

Clazz_newMeth(C$, 'getFontMetrics$',  function () {
return $I$(1).getMetrics$java_awt_Font(this);
});

Clazz_newMeth(C$, 'getAttributeValues',  function () {
if (this.values == null ) {
C$.initMasks$();
this.values=Clazz_new_($I$(2,1));
this.values.setFamily$S(this.name);
this.values.setSize$F(this.pointSize);
if ((this.style & 1) != 0) {
this.values.setWeight$F(2);
}if ((this.style & 2) != 0) {
this.values.setPosture$F(0.2);
}this.values.defineAll$I(C$.PRIMARY_MASK);
}return this.values;
}, p$1);

Clazz_newMeth(C$, 'c$$S$I$I',  function (name, style, size) {
;C$.$init$.apply(this);
this.name=(name != null ) ? name : "Default";
this.style=(style & ~3) == 0 ? style : 0;
this.size=size;
this.pointSize=size;
}, 1);

Clazz_newMeth(C$, 'c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle',  function (values, oldName, oldStyle, created, handle) {
;C$.$init$.apply(this);
this.createdFont=created;
if (created) {
this.font2DHandle=handle;
var newName=null;
if (oldName != null ) {
newName=values.getFamily$();
if (oldName.equals$O(newName)) newName=null;
}var newStyle=0;
if (oldStyle == -1) {
newStyle=-1;
} else {
if (values.getWeight$() >= 2.0 ) newStyle=1;
if (values.getPosture$() >= 0.2 ) newStyle|=2;
if (oldStyle == newStyle) newStyle=-1;
}if (newName != null ) {
this.createdFont=false;
this.font2DHandle=null;
}}p$1.initFromValues$sun_font_AttributeValues.apply(this, [values]);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map',  function (attributes) {
;C$.$init$.apply(this);
C$.initMasks$();
p$1.initFromValues$sun_font_AttributeValues.apply(this, [$I$(2).fromMap$java_util_Map$I(attributes, C$.RECOGNIZED_MASK)]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Font',  function (font) {
;C$.$init$.apply(this);
if (font.values != null ) {
p$1.initFromValues$sun_font_AttributeValues.apply(this, [p$1.getAttributeValues.apply(font, []).clone$()]);
} else {
this.name=font.name;
this.style=font.style;
this.size=font.size;
this.pointSize=font.pointSize;
}}, 1);

Clazz_newMeth(C$, 'initMasks$',  function () {
if (C$.haveMasks) return;
C$.RECOGNIZED_MASK=$I$(2).MASK_ALL & ~$I$(2,"getMask$sun_font_EAttribute",[$I$(3).EFONT]);
C$.PRIMARY_MASK=$I$(2,"getMask$sun_font_EAttributeA",[Clazz_array($I$(3), -1, [$I$(3).EFAMILY, $I$(3).EWEIGHT, $I$(3).EWIDTH, $I$(3).EPOSTURE, $I$(3).ESIZE, $I$(3).ETRANSFORM, $I$(3).ESUPERSCRIPT, $I$(3).ETRACKING])]);
C$.SECONDARY_MASK=C$.RECOGNIZED_MASK & ~C$.PRIMARY_MASK;
C$.LAYOUT_MASK=$I$(2,"getMask$sun_font_EAttributeA",[Clazz_array($I$(3), -1, [$I$(3).ECHAR_REPLACEMENT, $I$(3).EFOREGROUND, $I$(3).EBACKGROUND, $I$(3).EUNDERLINE, $I$(3).ESTRIKETHROUGH, $I$(3).ERUN_DIRECTION, $I$(3).EBIDI_EMBEDDING, $I$(3).EJUSTIFICATION, $I$(3).EINPUT_METHOD_HIGHLIGHT, $I$(3).EINPUT_METHOD_UNDERLINE, $I$(3).ESWAP_COLORS, $I$(3).ENUMERIC_SHAPING, $I$(3).EKERNING, $I$(3).ELIGATURES, $I$(3).ETRACKING])]);
C$.EXTRA_MASK=$I$(2,"getMask$sun_font_EAttributeA",[Clazz_array($I$(3), -1, [$I$(3).ETRANSFORM, $I$(3).ESUPERSCRIPT, $I$(3).EWIDTH])]);
C$.haveMasks=true;
}, 1);

Clazz_newMeth(C$, 'initFromValues$sun_font_AttributeValues',  function (values) {
this.values=values;
C$.initMasks$();
values.defineAll$I(C$.PRIMARY_MASK);
this.name=values.getFamily$();
this.pointSize=values.getSize$();
this.size=((values.getSize$() + 0.5)|0);
if (values.getWeight$() >= 2.0 ) this.style|=1;
if (values.getPosture$() >= 0.2 ) this.style|=2;
this.nonIdentityTx=values.anyNonDefault$I(C$.EXTRA_MASK);
this.hasLayoutAttributes=values.anyNonDefault$I(C$.LAYOUT_MASK);
}, p$1);

Clazz_newMeth(C$, 'getFont$java_util_Map',  function (attributes) {
C$.initMasks$();
if (Clazz_instanceOf(attributes, "sun.font.AttributeMap") && (attributes).getValues$() != null  ) {
var values=(attributes).getValues$();
if (values.isNonDefault$sun_font_EAttribute($I$(3).EFONT)) {
var font=values.getFont$();
if (!values.anyDefined$I(C$.SECONDARY_MASK)) {
return font;
}values=p$1.getAttributeValues.apply(font, []).clone$();
values.merge$java_util_Map$I(attributes, C$.SECONDARY_MASK);
return Clazz_new_(C$.c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle,[values, font.name, font.style, font.createdFont, font.font2DHandle]);
}return Clazz_new_(C$.c$$java_util_Map,[attributes]);
}var font=attributes.get$O($I$(4).FONT);
if (font != null ) {
if (attributes.size$() > 1) {
var values=p$1.getAttributeValues.apply(font, []).clone$();
values.merge$java_util_Map$I(attributes, C$.SECONDARY_MASK);
return Clazz_new_(C$.c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle,[values, font.name, font.style, font.createdFont, font.font2DHandle]);
}return font;
}return Clazz_new_(C$.c$$java_util_Map,[attributes]);
}, 1);

Clazz_newMeth(C$, 'getTransform$',  function () {
if (this.nonIdentityTx) {
var values=p$1.getAttributeValues.apply(this, []);
var at=values.isNonDefault$sun_font_EAttribute($I$(3).ETRANSFORM) ? Clazz_new_([values.getTransform$()],$I$(5,1).c$$java_awt_geom_AffineTransform) : Clazz_new_($I$(5,1));
if (values.getSuperscript$() != 0) {
var superscript=values.getSuperscript$();
var trans=0;
var n=0;
var up=superscript > 0;
var sign=up ? -1 : 1;
var ss=up ? superscript : -superscript;
while ((ss & 7) > n){
var newn=ss & 7;
trans+=sign * (C$.ssinfo[newn] - C$.ssinfo[n]);
ss>>=3;
sign=-sign;
n=newn;
}
trans*=this.pointSize;
var scale=Math.pow(0.6666666666666666, n);
at.preConcatenate$java_awt_geom_AffineTransform($I$(5).getTranslateInstance$D$D(0, trans));
at.scale$D$D(scale, scale);
}if (values.isNonDefault$sun_font_EAttribute($I$(3).EWIDTH)) {
at.scale$D$D(values.getWidth$(), 1.0);
}return at;
}return Clazz_new_($I$(5,1));
});

Clazz_newMeth(C$, '秘getRawTransformOrNull$',  function () {
return (this.nonIdentityTx ? p$1.getAttributeValues.apply(this, []).getTransform$() : null);
});

Clazz_newMeth(C$, 'getFamily$',  function () {
return (this.family == null  ? this.family=$I$(6).getFontFamily$java_awt_Font(this) : this.family);
});

Clazz_newMeth(C$, 'getPSName$',  function () {
switch (this.name) {
case "TimesRoman":
this.name="Serif";
break;
case "Helvetica":
this.name="SansSerif";
break;
case "Courier":
this.name="Monospaced";
break;
default:
case "Monospaced":
case "Serif":
case "SansSerif":
case "Dialog":
case "DialogInput":
break;
}
return this.name + (this.isPlain$() ? ".plain" : "." + (this.isBold$() ? "bold" : "") + (this.isItalic$() ? "italic" : "") );
});

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'getFontName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'getStyle$',  function () {
return this.style;
});

Clazz_newMeth(C$, 'getSize$',  function () {
return this.size;
});

Clazz_newMeth(C$, 'getSize2D$',  function () {
return this.pointSize;
});

Clazz_newMeth(C$, 'isPlain$',  function () {
return this.style == 0;
});

Clazz_newMeth(C$, 'isBold$',  function () {
return (this.style & 1) != 0;
});

Clazz_newMeth(C$, 'isItalic$',  function () {
return (this.style & 2) != 0;
});

Clazz_newMeth(C$, 'isTransformed$',  function () {
return this.nonIdentityTx;
});

Clazz_newMeth(C$, 'hasLayoutAttributes$',  function () {
return this.hasLayoutAttributes;
});

Clazz_newMeth(C$, 'getFont$S',  function (nm) {
return C$.getFont$S$java_awt_Font(nm, null);
}, 1);

Clazz_newMeth(C$, 'decode$S',  function (str) {
var fontName=str;
var styleName="";
var fontSize=12;
var fontStyle=0;
if (str == null ) {
return Clazz_new_(C$.c$$S$I$I,["Dialog", fontStyle, fontSize]);
}var lastHyphen=str.lastIndexOf$I("-");
var lastSpace=str.lastIndexOf$I(" ");
var sepChar=(lastHyphen > lastSpace) ? "-" : " ";
var sizeIndex=str.lastIndexOf$I(sepChar);
var styleIndex=str.lastIndexOf$I$I(sepChar, sizeIndex - 1);
var strlen=str.length$();
if (sizeIndex > 0 && sizeIndex + 1 < strlen ) {
try {
fontSize=Integer.valueOf$S(str.substring$I(sizeIndex + 1)).intValue$();
if (fontSize <= 0) {
fontSize=12;
}} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
styleIndex=sizeIndex;
sizeIndex=strlen;
if (str.charAt$I(sizeIndex - 1) == sepChar) {
--sizeIndex;
}} else {
throw e;
}
}
}if (styleIndex >= 0 && styleIndex + 1 < strlen ) {
styleName=str.substring$I$I(styleIndex + 1, sizeIndex);
styleName=styleName.toLowerCase$();
if (styleName.equals$O("bolditalic")) {
fontStyle=3;
} else if (styleName.equals$O("italic")) {
fontStyle=2;
} else if (styleName.equals$O("bold")) {
fontStyle=1;
} else if (styleName.equals$O("plain")) {
fontStyle=0;
} else {
styleIndex=sizeIndex;
if (str.charAt$I(styleIndex - 1) == sepChar) {
--styleIndex;
}}fontName=str.substring$I$I(0, styleIndex);
} else {
var fontEnd=strlen;
if (styleIndex > 0) {
fontEnd=styleIndex;
} else if (sizeIndex > 0) {
fontEnd=sizeIndex;
}if (fontEnd > 0 && str.charAt$I(fontEnd - 1) == sepChar ) {
--fontEnd;
}fontName=str.substring$I$I(0, fontEnd);
}return Clazz_new_(C$.c$$S$I$I,[fontName, fontStyle, fontSize]);
}, 1);

Clazz_newMeth(C$, 'getFont$S$java_awt_Font',  function (nm, font) {
var str=null;
try {
str=System.getProperty$S(nm);
} catch (e) {
if (Clazz_exceptionOf(e,"SecurityException")){
} else {
throw e;
}
}
if (str == null ) {
return font;
}return C$.decode$S(str);
}, 1);

Clazz_newMeth(C$, 'hashCode$',  function () {
if (this.hash == 0) {
this.hash=this.name.hashCode$() ^ this.style ^ this.size ;
}return this.hash;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (obj === this ) {
return true;
}if (obj != null ) {
try {
var font=obj;
if (this.size == font.size && this.style == font.style  && this.nonIdentityTx == font.nonIdentityTx   && this.hasLayoutAttributes == font.hasLayoutAttributes   && this.pointSize == font.pointSize   && this.name.equals$O(font.name) ) {
return true;
}} catch (e) {
if (Clazz_exceptionOf(e,"ClassCastException")){
} else {
throw e;
}
}
}return false;
});

Clazz_newMeth(C$, 'toString',  function () {
var strStyle;
if (this.isBold$()) {
strStyle=this.isItalic$() ? "bolditalic" : "bold";
} else {
strStyle=this.isItalic$() ? "italic" : "plain";
}return this.getClass$().getName$() + "[family=" + this.getFamily$() + ",name=" + this.name + ",style=" + strStyle + ",size=" + this.size + "]" ;
});

Clazz_newMeth(C$, 'getAttributes$',  function () {
return Clazz_new_([p$1.getAttributeValues.apply(this, [])],$I$(7,1).c$$sun_font_AttributeValues);
});

Clazz_newMeth(C$, 'getAvailableAttributes$',  function () {
var attributes=Clazz_array($I$(8), -1, [$I$(4).FAMILY, $I$(4).WEIGHT, $I$(4).WIDTH, $I$(4).SIZE, $I$(4).UNDERLINE, $I$(4).STRIKETHROUGH]);
return attributes;
});

Clazz_newMeth(C$, 'deriveFont$I$F',  function (style, sizePts) {
var f=Clazz_new_(C$.c$$S$I$I,[this.name, style, ((sizePts + 0.5)|0)]);
f.pointSize=sizePts;
return f;
});

Clazz_newMeth(C$, 'deriveFont$F',  function (sizePts) {
if (this.values == null ) {
var f=Clazz_new_(C$.c$$S$I$I,[this.name, this.style, ((sizePts + 0.5)|0)]);
f.pointSize=sizePts;
return f;
}var newValues=p$1.getAttributeValues.apply(this, []).clone$();
newValues.setSize$F(sizePts);
return Clazz_new_(C$.c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle,[newValues, null, -1, this.createdFont, this.font2DHandle]);
});

Clazz_newMeth(C$, 'deriveFont$java_awt_geom_AffineTransform',  function (trans) {
var newValues=p$1.getAttributeValues.apply(this, []).clone$();
C$.applyTransform$java_awt_geom_AffineTransform$sun_font_AttributeValues(trans, newValues);
return Clazz_new_(C$.c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle,[newValues, null, -1, this.createdFont, this.font2DHandle]);
});

Clazz_newMeth(C$, 'deriveFont$I',  function (style) {
if (this.values == null ) {
return Clazz_new_(C$.c$$S$I$I,[this.name, style, this.size]);
}var newValues=p$1.getAttributeValues.apply(this, []).clone$();
var oldStyle=(this.style != style) ? this.style : -1;
C$.applyStyle$I$sun_font_AttributeValues(style, newValues);
return Clazz_new_(C$.c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle,[newValues, null, oldStyle, this.createdFont, this.font2DHandle]);
});

Clazz_newMeth(C$, 'deriveFont$java_util_Map',  function (attributes) {
if (attributes == null ) {
return this;
}var newValues=p$1.getAttributeValues.apply(this, []).clone$();
newValues.merge$java_util_Map$I(attributes, C$.RECOGNIZED_MASK);
return Clazz_new_(C$.c$$sun_font_AttributeValues$S$I$Z$sun_font_Font2DHandle,[newValues, this.name, this.style, this.createdFont, this.font2DHandle]);
});

Clazz_newMeth(C$, 'canDisplay$C',  function (c) {
return true;
});

Clazz_newMeth(C$, 'canDisplay$I',  function (codePoint) {
if (!Character.isValidCodePoint$I(codePoint)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid code point: " + Integer.toHexString$I(codePoint)]);
}return true;
});

Clazz_newMeth(C$, 'canDisplayUpTo$S',  function (str) {
return -1;
});

Clazz_newMeth(C$, 'canDisplayUpTo$CA$I$I',  function (text, start, limit) {
while (start < limit && this.canDisplay$C(text[start]) ){
++start;
}
return start == limit ? -1 : start;
});

Clazz_newMeth(C$, 'canDisplayUpTo$java_text_CharacterIterator$I$I',  function (iter, start, limit) {
return -1;
});

Clazz_newMeth(C$, 'getItalicAngle$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getItalicAngle$java_awt_font_FontRenderContext',  function (frc) {
return 0.0;
}, p$1);

Clazz_newMeth(C$, 'hasUniformLineMetrics$',  function () {
return false;
});

Clazz_newMeth(C$, 'defaultLineMetrics$java_awt_font_FontRenderContext',  function (frc) {
var flm=null;
if (this.flmref == null  || !(flm=this.flmref).frc.equals$java_awt_font_FontRenderContext(frc) ) {
var metrics=Clazz_array(Float.TYPE, [8]);
(this.getFontMetrics$()).秘fillMetrics$FA(metrics);
var ascent=metrics[0];
var descent=metrics[1];
var leading=metrics[2];
var ssOffset=0;
if (this.values != null  && this.values.getSuperscript$() != 0 ) {
ssOffset=this.getTransform$().getTranslateY$();
ascent-=ssOffset;
descent+=ssOffset;
}var height=ascent + descent + leading ;
var baselineIndex=0;
var baselineOffsets=Clazz_array(Float.TYPE, -1, [0, (descent / 2.0 - ascent) / 2.0, -ascent]);
var strikethroughOffset=metrics[4];
var strikethroughThickness=metrics[5];
var underlineOffset=metrics[6];
var underlineThickness=metrics[7];
var italicAngle=p$1.getItalicAngle$java_awt_font_FontRenderContext.apply(this, [frc]);
if (this.isTransformed$()) {
var ctx=this.values.getCharTransform$();
if (ctx != null ) {
var pt=Clazz_new_($I$(9,1));
pt.setLocation$F$F(0, strikethroughOffset);
ctx.deltaTransform$java_awt_geom_Point2D$java_awt_geom_Point2D(pt, pt);
strikethroughOffset=pt.y;
pt.setLocation$F$F(0, strikethroughThickness);
ctx.deltaTransform$java_awt_geom_Point2D$java_awt_geom_Point2D(pt, pt);
strikethroughThickness=pt.y;
pt.setLocation$F$F(0, underlineOffset);
ctx.deltaTransform$java_awt_geom_Point2D$java_awt_geom_Point2D(pt, pt);
underlineOffset=pt.y;
pt.setLocation$F$F(0, underlineThickness);
ctx.deltaTransform$java_awt_geom_Point2D$java_awt_geom_Point2D(pt, pt);
underlineThickness=pt.y;
}}strikethroughOffset+=ssOffset;
underlineOffset+=ssOffset;
var cm=Clazz_new_($I$(10,1).c$$F$F$F$F$I$FA$F$F$F$F$F$F,[ascent, descent, leading, height, baselineIndex, baselineOffsets, strikethroughOffset, strikethroughThickness, underlineOffset, underlineThickness, ssOffset, italicAngle]);
flm=Clazz_new_($I$(11,1).c$$I$sun_font_CoreMetrics$java_awt_font_FontRenderContext,[0, cm, frc]);
this.flmref=flm;
}return flm.clone$();
}, p$1);

Clazz_newMeth(C$, 'getLineMetrics$S$java_awt_font_FontRenderContext',  function (str, frc) {
var flm=p$1.defaultLineMetrics$java_awt_font_FontRenderContext.apply(this, [frc]);
flm.numchars=str.length$();
return flm;
});

Clazz_newMeth(C$, 'getLineMetrics$S$I$I$java_awt_font_FontRenderContext',  function (str, beginIndex, limit, frc) {
var flm=p$1.defaultLineMetrics$java_awt_font_FontRenderContext.apply(this, [frc]);
var numChars=limit - beginIndex;
flm.numchars=(numChars < 0) ? 0 : numChars;
return flm;
});

Clazz_newMeth(C$, 'getLineMetrics$CA$I$I$java_awt_font_FontRenderContext',  function (chars, beginIndex, limit, frc) {
var flm=p$1.defaultLineMetrics$java_awt_font_FontRenderContext.apply(this, [frc]);
var numChars=limit - beginIndex;
flm.numchars=(numChars < 0) ? 0 : numChars;
return flm;
});

Clazz_newMeth(C$, 'getLineMetrics$java_text_CharacterIterator$I$I$java_awt_font_FontRenderContext',  function (ci, beginIndex, limit, frc) {
var flm=p$1.defaultLineMetrics$java_awt_font_FontRenderContext.apply(this, [frc]);
var numChars=limit - beginIndex;
flm.numchars=(numChars < 0) ? 0 : numChars;
return flm;
});

Clazz_newMeth(C$, 'getStringBounds$S$java_awt_font_FontRenderContext',  function (str, frc) {
return this.getStringBoundsStr$S$I$I(str, 0, str.length$());
});

Clazz_newMeth(C$, 'getStringBounds$S$I$I$java_awt_font_FontRenderContext',  function (str, beginIndex, limit, frc) {
return this.getStringBoundsStr$S$I$I(str, beginIndex, limit);
});

Clazz_newMeth(C$, 'getStringBounds$CA$I$I$java_awt_font_FontRenderContext',  function (chars, beginIndex, limit, frc) {
if (beginIndex < 0) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["beginIndex: " + beginIndex]);
}if (limit > chars.length) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["limit: " + limit]);
}if (beginIndex > limit) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["range length: " + (limit - beginIndex)]);
}var sb=Clazz_new_($I$(12,1));
sb.appendCB$CA$I$I(chars, beginIndex, limit);
return (this.getFontMetrics$()).秘getStringBounds$S(sb.toString());
});

Clazz_newMeth(C$, 'getStringBoundsStr$S$I$I',  function (s, beginIndex, limit) {
if (beginIndex < 0) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["beginIndex: " + beginIndex]);
}if (limit > s.length$()) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["limit: " + limit]);
}if (beginIndex > limit) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["range length: " + (limit - beginIndex)]);
}s=s.substring$I$I(beginIndex, limit);
return (this.getFontMetrics$()).秘getStringBounds$S(s);
});

Clazz_newMeth(C$, 'getStringBounds$java_text_CharacterIterator$I$I$java_awt_font_FontRenderContext',  function (ci, beginIndex, limit, frc) {
var start=ci.getBeginIndex$();
var end=ci.getEndIndex$();
if (beginIndex < start) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["beginIndex: " + beginIndex]);
}if (limit > end) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["limit: " + limit]);
}if (beginIndex > limit) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["range length: " + (limit - beginIndex)]);
}var arr=Clazz_array(Character.TYPE, [limit - beginIndex]);
ci.setIndex$I(beginIndex);
for (var idx=0; idx < arr.length; idx++) {
arr[idx]=ci.current$();
ci.next$();
}
return this.getStringBounds$CA$I$I$java_awt_font_FontRenderContext(arr, 0, arr.length, frc);
});

Clazz_newMeth(C$, 'getMaxCharBounds$java_awt_font_FontRenderContext',  function (frc) {
var metrics=Clazz_array(Float.TYPE, [4]);
(this.getFontMetrics$()).秘fillMetrics$FA(metrics);
return Clazz_new_($I$(13,1).c$$F$F$F$F,[0, -metrics[0], metrics[3], metrics[0] + metrics[1] + metrics[2] ]);
});

Clazz_newMeth(C$, 'applyTransform$java_awt_geom_AffineTransform$sun_font_AttributeValues',  function (trans, values) {
if (trans == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["transform must not be null"]);
}values.setTransform$java_awt_geom_AffineTransform(trans);
}, 1);

Clazz_newMeth(C$, 'applyStyle$I$sun_font_AttributeValues',  function (style, values) {
values.setWeight$F((style & 1) != 0 ? 2.0 : 1.0);
values.setPosture$F((style & 2) != 0 ? 0.2 : 0.0);
}, 1);

Clazz_newMeth(C$, 'finalize$',  function () {
});

C$.$static$=function(){C$.$static$=0;
C$.ssinfo=Clazz_array(Float.TYPE, -1, [0.0, 0.375, 0.625, 0.7916667, 0.9027778, 0.9768519, 1.0262346, 1.0591564]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.font.FontRenderContext']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FontMetrics");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['font','java.awt.Font']]
,['O',['DEFAULT_FRC','java.awt.font.FontRenderContext']]]

Clazz_newMeth(C$, 'c$$java_awt_Font',  function (font) {
;C$.$init$.apply(this);
this.font=font;
}, 1);

Clazz_newMeth(C$, 'getFont$',  function () {
return this.font;
});

Clazz_newMeth(C$, 'getFontRenderContext$',  function () {
return C$.DEFAULT_FRC;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.getLeading$() + this.getAscent$() + this.getDescent$() ;
});

Clazz_newMeth(C$, 'getMaxAscent$',  function () {
return this.getAscent$();
});

Clazz_newMeth(C$, 'getMaxDescent$',  function () {
return this.getDescent$();
});

Clazz_newMeth(C$, 'getMaxDecent$',  function () {
return this.getMaxDescent$();
});

Clazz_newMeth(C$, 'getMaxAdvance$',  function () {
return this.charWidth$C("M");
});

Clazz_newMeth(C$, 'charsWidth$CA$I$I',  function (data, off, len) {
return this.stringWidth$S( String.instantialize(data, off, len));
});

Clazz_newMeth(C$, 'bytesWidth$BA$I$I',  function (data, off, len) {
return this.stringWidth$S( String.instantialize(data, 0, off, len));
});

Clazz_newMeth(C$, 'hasUniformLineMetrics$',  function () {
return this.font.hasUniformLineMetrics$();
});

Clazz_newMeth(C$, 'getLineMetrics$S$java_awt_Graphics',  function (str, context) {
return this.font.getLineMetrics$S$java_awt_font_FontRenderContext(str, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getLineMetrics$S$I$I$java_awt_Graphics',  function (str, beginIndex, limit, context) {
return this.font.getLineMetrics$S$I$I$java_awt_font_FontRenderContext(str, beginIndex, limit, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getLineMetrics$CA$I$I$java_awt_Graphics',  function (chars, beginIndex, limit, context) {
return this.font.getLineMetrics$CA$I$I$java_awt_font_FontRenderContext(chars, beginIndex, limit, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getLineMetrics$java_text_CharacterIterator$I$I$java_awt_Graphics',  function (ci, beginIndex, limit, context) {
return this.font.getLineMetrics$java_text_CharacterIterator$I$I$java_awt_font_FontRenderContext(ci, beginIndex, limit, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getStringBounds$S$java_awt_Graphics',  function (str, context) {
return this.font.getStringBounds$S$java_awt_font_FontRenderContext(str, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getStringBounds$S$I$I$java_awt_Graphics',  function (str, beginIndex, limit, context) {
return this.font.getStringBounds$S$I$I$java_awt_font_FontRenderContext(str, beginIndex, limit, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'getStringBounds$CA$I$I$java_awt_Graphics',  function (chars, beginIndex, limit, context) {
return this.font.getStringBounds$CA$I$I$java_awt_font_FontRenderContext(chars, beginIndex, limit, p$1.myFRC$java_awt_Graphics.apply(this, [context]));
});

Clazz_newMeth(C$, 'myFRC$java_awt_Graphics',  function (context) {
if (Clazz_instanceOf(context, "java.awt.Graphics2D")) {
return (context).getFontRenderContext$();
}return C$.DEFAULT_FRC;
}, p$1);

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[font=" + this.getFont$() + "ascent=" + this.getAscent$() + ", descent=" + this.getDescent$() + ", height=" + this.getHeight$() + "]" ;
});

C$.$static$=function(){C$.$static$=0;
C$.DEFAULT_FRC=Clazz_new_($I$(1,1).c$$java_awt_geom_AffineTransform$Z$Z,[null, false, false]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "GraphicsCallback", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'sun.awt.SunGraphicsCallback');
C$.$classes$=[['PaintCallback',24],['PaintAllCallback',24],['PaintHeavyweightComponentsCallback',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.GraphicsCallback, "PaintCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.GraphicsCallback');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['instance','java.awt.GraphicsCallback.PaintCallback']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics',  function (comp, cg) {
comp.paint$java_awt_Graphics(cg);
});

Clazz_newMeth(C$, 'getInstance$',  function () {
return C$.instance;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.instance=Clazz_new_(C$);
};
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GraphicsCallback, "PaintAllCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.GraphicsCallback');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['instance','java.awt.GraphicsCallback.PaintAllCallback']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics',  function (comp, cg) {
comp.paintAll$java_awt_Graphics(cg);
});

Clazz_newMeth(C$, 'getInstance$',  function () {
return C$.instance;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.instance=Clazz_new_(C$);
};
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GraphicsCallback, "PaintHeavyweightComponentsCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.GraphicsCallback');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['instance','java.awt.GraphicsCallback.PaintHeavyweightComponentsCallback']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics',  function (comp, cg) {
if (comp.isLightweight$()) {
comp.paintHeavyweightComponents$java_awt_Graphics(cg);
} else {
comp.paintAll$java_awt_Graphics(cg);
}});

Clazz_newMeth(C$, 'getInstance$',  function () {
return C$.instance;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.instance=Clazz_new_(C$);
};
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.image.BufferedImage','swingjs.api.Interface']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "GraphicsConfiguration");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'createCompatibleImage$I$I$I',  function (width, height, transparency) {
if (this.getColorModel$().getTransparency$() == transparency) {
return this.createCompatibleImage$I$I(width, height);
}var cm=this.getColorModel$I(transparency);
if (cm == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unknown transparency: " + transparency]);
}var wr=cm.createCompatibleWritableRaster$I$I(width, height);
return this.newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable(cm, wr, cm.isAlphaPremultiplied$(), null);
});

Clazz_newMeth(C$, 'newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable',  function (cm, wr, alphaPremultiplied, properties) {
var bi=Clazz_new_($I$(1,1).c$$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable,[cm, wr, alphaPremultiplied, properties]);
bi.getRaster$().秘setStable$Z(true);
return bi;
});

Clazz_newMeth(C$, 'createCompatibleVolatileImage$I$I',  function (width, height) {
var vi=null;
try {
vi=this.createCompatibleVolatileImage$I$I$java_awt_ImageCapabilities$I(width, height, null, 1);
} catch (e) {
if (Clazz_exceptionOf(e,"java.awt.AWTException")){
Clazz_assert(C$, this, function(){return false});
} else {
throw e;
}
}
return vi;
});

Clazz_newMeth(C$, 'createCompatibleVolatileImage$I$I$I',  function (width, height, transparency) {
var vi=null;
try {
vi=this.createCompatibleVolatileImage$I$I$java_awt_ImageCapabilities$I(width, height, null, transparency);
} catch (e) {
if (Clazz_exceptionOf(e,"java.awt.AWTException")){
Clazz_assert(C$, this, function(){return false});
} else {
throw e;
}
}
return vi;
});

Clazz_newMeth(C$, 'createCompatibleVolatileImage$I$I$java_awt_ImageCapabilities$I',  function (width, height, caps, transparency) {
var vi=$I$(2,"getInstanceWithParams$S$ClassA$OA",["sun.awt.image.SunVolatileImage", Clazz_array(Class, -1, [Clazz_getClass(C$), Clazz_getClass(Integer), Clazz_getClass(Integer), Clazz_getClass(Boolean), Clazz_getClass(java.lang.Object), Clazz_getClass(Integer)]), Clazz_array(java.lang.Object, -1, [this, Integer.valueOf$I(width), Integer.valueOf$I(height), caps, Integer.valueOf$I(transparency)])]);
if (caps != null  && caps.isAccelerated$()  && !vi.getCapabilities$().isAccelerated$() ) {
throw Clazz_new_(Clazz_load('java.awt.AWTException').c$$S,["Supplied image capabilities could not be met by this graphics configuration."]);
}return vi;
});

Clazz_newMeth(C$, 'isTranslucencyCapable$',  function () {
return false;
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.DisplayMode',['java.awt.GraphicsDevice','.WindowTranslucency']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "GraphicsDevice", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['WindowTranslucency',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['fullScreenWindow','java.awt.Window','windowedModeBounds','java.awt.Rectangle']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getBestConfiguration$O',  function (gct) {
return this.getDefaultConfiguration$();
});

Clazz_newMeth(C$, 'isFullScreenSupported$',  function () {
return false;
});

Clazz_newMeth(C$, 'setFullScreenWindow$java_awt_Window',  function (w) {
});

Clazz_newMeth(C$, 'getFullScreenWindow$',  function () {
return null;
});

Clazz_newMeth(C$, 'isDisplayChangeSupported$',  function () {
return false;
});

Clazz_newMeth(C$, 'setDisplayMode$O',  function (dm) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["Cannot change display mode"]);
});

Clazz_newMeth(C$, 'getDisplayMode$',  function () {
var gc=this.getDefaultConfiguration$();
var r=gc.getBounds$();
var cm=gc.getColorModel$();
return Clazz_new_([r.width, r.height, cm.getPixelSize$(), 0],$I$(1,1).c$$I$I$I$I);
});

Clazz_newMeth(C$, 'getDisplayModes$',  function () {
return Clazz_array($I$(1), -1, [this.getDisplayMode$()]);
});

Clazz_newMeth(C$, 'getAvailableAcceleratedMemory$',  function () {
return -1;
});

Clazz_newMeth(C$, 'isWindowTranslucencySupported$java_awt_GraphicsDevice_WindowTranslucency',  function (translucencyKind) {
switch (translucencyKind) {
case $I$(2).PERPIXEL_TRANSPARENT:
return C$.isWindowShapingSupported$();
case $I$(2).TRANSLUCENT:
return C$.isWindowOpacitySupported$();
case $I$(2).PERPIXEL_TRANSLUCENT:
return this.isWindowPerpixelTranslucencySupported$();
}
return false;
});

Clazz_newMeth(C$, 'isWindowShapingSupported$',  function () {
return false;
}, 1);

Clazz_newMeth(C$, 'isWindowOpacitySupported$',  function () {
return false;
}, 1);

Clazz_newMeth(C$, 'isWindowPerpixelTranslucencySupported$',  function () {
return true;
});

Clazz_newMeth(C$, 'getTranslucencyCapableGC$',  function () {
var defaultGC=this.getDefaultConfiguration$();
if (defaultGC.isTranslucencyCapable$()) {
return defaultGC;
}var configs=this.getConfigurations$();
for (var j=0; j < configs.length; j++) {
if (configs[j].isTranslucencyCapable$()) {
return configs[j];
}}
return null;
});
;
(function(){/*e*/var C$=Clazz_newClass(P$.GraphicsDevice, "WindowTranslucency", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "PERPIXEL_TRANSPARENT", 0, []);
Clazz_newEnumConst($vals, C$.c$, "TRANSLUCENT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "PERPIXEL_TRANSLUCENT", 2, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'swingjs.JSUtil','java.awt.Toolkit','java.awt.Point','java.awt.Rectangle']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "GraphicsEnvironment");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['headless','Boolean']]
,['O',['localEnv','java.awt.GraphicsEnvironment']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getLocalGraphicsEnvironment$',  function () {
if (C$.localEnv == null ) {
C$.localEnv=$I$(1).getInstance$S("swingjs.JSGraphicsEnvironment");
}return C$.localEnv;
}, 1);

Clazz_newMeth(C$, 'isHeadless$',  function () {
return C$.getHeadlessProperty$();
}, 1);

Clazz_newMeth(C$, 'getHeadlessProperty$',  function () {
return ("true" === System.getProperty$S("java.awt.headless") );
}, 1);

Clazz_newMeth(C$, 'checkHeadless$',  function () {
}, 1);

Clazz_newMeth(C$, 'isHeadlessInstance$',  function () {
return (this.headless != null  ? this.headless : (this.headless=C$.getHeadlessProperty$() ? Boolean.TRUE : Boolean.FALSE)).booleanValue$();
});

Clazz_newMeth(C$, 'registerFont$java_awt_Font',  function (font) {
return true;
});

Clazz_newMeth(C$, 'preferLocaleFonts$',  function () {
});

Clazz_newMeth(C$, 'preferProportionalFonts$',  function () {
});

Clazz_newMeth(C$, 'getCenterPoint$',  function () {
var dim=$I$(2).getDefaultToolkit$().getScreenSize$();
return Clazz_new_([(dim.width/2|0), (dim.height/2|0)],$I$(3,1).c$$I$I);
});

Clazz_newMeth(C$, 'getMaximumWindowBounds$',  function () {
var dim=$I$(2).getDefaultToolkit$().getScreenSize$();
return Clazz_new_($I$(4,1).c$$I$I$I$I,[0, 0, dim.width, dim.height]);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.image.AreaAveragingScaleFilter','java.awt.image.ReplicateScaleFilter','java.awt.image.FilteredImageSource','java.awt.Toolkit']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Image");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.accelerationPriority=0.5;
},1);

C$.$fields$=[['F',['accelerationPriority']]
,['O',['UndefinedProperty','java.lang.Object']]]

Clazz_newMeth(C$, 'getScaledInstance$I$I$I',  function (width, height, hints) {
var filter;
if ((hints & (20)) != 0) {
filter=Clazz_new_($I$(1,1).c$$I$I,[width, height]);
} else {
filter=Clazz_new_($I$(2,1).c$$I$I,[width, height]);
}var prod;
prod=Clazz_new_([this.getSource$(), filter],$I$(3,1).c$$java_awt_image_ImageProducer$java_awt_image_ImageFilter);
return $I$(4).getDefaultToolkit$().createImage$java_awt_image_ImageProducer(prod);
});

Clazz_newMeth(C$, 'flush$',  function () {
});

Clazz_newMeth(C$, 'setAccelerationPriority$F',  function (priority) {
});

Clazz_newMeth(C$, 'getAccelerationPriority$',  function () {
return this.accelerationPriority;
});

C$.$static$=function(){C$.$static$=0;
C$.UndefinedProperty= Clazz_new_();
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'InternalError']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Insets", null, null, ['Cloneable', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['top','left','bottom','right']]]

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (top, left, bottom, right) {
;C$.$init$.apply(this);
this.top=top;
this.left=left;
this.bottom=bottom;
this.right=right;
}, 1);

Clazz_newMeth(C$, 'set$I$I$I$I',  function (top, left, bottom, right) {
this.top=top;
this.left=left;
this.bottom=bottom;
this.right=right;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Insets")) {
var insets=obj;
return ((this.top == insets.top) && (this.left == insets.left) && (this.bottom == insets.bottom) && (this.right == insets.right)  );
}return false;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var sum1=this.left + this.bottom;
var sum2=this.right + this.top;
var val1=(sum1 * (sum1 + 1)/2|0) + this.left;
var val2=(sum2 * (sum2 + 1)/2|0) + this.top;
var sum3=val1 + val2;
return (sum3 * (sum3 + 1)/2|0) + val2;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[top=" + this.top + ",left=" + this.left + ",bottom=" + this.bottom + ",right=" + this.right + "]" ;
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(1,1));
} else {
throw e;
}
}
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'Thread','java.awt.Container','java.awt.Insets','javax.swing.JComponent','swingjs.JSFrameViewer','javax.swing.UIManager','swingjs.plaf.JSComponentUI','java.util.Arrays','swingjs.api.js.DOMNode','swingjs.JSUtil','javax.swing.JPanel','swingjs.JSMouse','swingjs.JSToolkit','swingjs.JSKeyEvent']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSComponent", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.Component');
C$.$classes$=[['A2SComponentWrapper',9],['A2SWrappedComponent',9],['ModalExclusionType',25]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.秘appletViewer=$I$(1).currentThread$().getThreadGroup$().秘appletViewer;
this.秘iPaintMyself=0;
this.秘repaintAsUpdate=true;
},1);

C$.$fields$=[['Z',['秘winOrApplet','秘isRootPane','秘isContentPane','秘iPaintMyselfEntirely','秘repaintAsUpdate','秘isDesktop'],'I',['秘num','秘iPaintMyself'],'S',['秘htmlName','秘uiClassID'],'O',['秘keyAction','javax.swing.Action','秘tempInsets','java.awt.Insets','秘g','swingjs.JSGraphics2D','+秘gtemp','秘appletViewer','swingjs.JSAppletViewer','秘frameViewer','swingjs.JSFrameViewer','+秘topFrameViewer','秘canvas','swingjs.api.js.HTML5Canvas','ui','javax.swing.plaf.ComponentUI','秘peerVis','Boolean','秘border','javax.swing.border.AbstractBorder','秘paintClass','Class','+秘updateClass']]
,['Z',['秘isRepaint'],'I',['秘incr']]]

Clazz_newMeth(C$, '秘getUI$',  function () {
return this.ui;
});

Clazz_newMeth(C$, '秘paintsSelfEntirely$',  function () {
return this.秘iPaintMyselfEntirely;
});

Clazz_newMeth(C$, '秘setIsRepaint$Z',  function (b) {
C$.秘isRepaint=b;
}, 1);

Clazz_newMeth(C$, 'repaint$',  function () {
if (this.width <= 0 || this.height <= 0 ) return;
if (this.秘isAWT$()) {
this.秘repaintCmp$J$I$I$I$I(0, 0, 0, this.width, this.height);
} else {
this.repaint$J$I$I$I$I(0, 0, 0, this.width, this.height);
}});

Clazz_newMeth(C$, '秘resizeOriginal$I$I',  function (width, height) {
this.resize$I$I(width, height);
});

Clazz_newMeth(C$, '秘ensurePropertyChangeListener$java_awt_Component$java_awt_Component',  function (c, listener) {
if (Clazz_instanceOf(listener, "java.beans.PropertyChangeListener")) {
c.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
c.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
} else if (listener != null ) {
System.err.println$S("JSComponent: " + listener + " is not a PropertyChangeListener -- modal dialog will fail." );
}}, 1);

Clazz_newMeth(C$, '秘getChildArray$java_awt_Container',  function (c) {
return (c == null  ? $I$(2).EMPTY_ARRAY : c.getChildArray$());
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.秘num=++C$.秘incr;
}, 1);

Clazz_newMeth(C$, 'getGraphics$',  function () {
if (!this.秘winOrApplet && (this.width == 0 || this.height == 0  || !this.isVisible$() ) ) return null;
var g;
if (this.秘isRootPane || this.秘winOrApplet || this.秘isContentPane  ) {
g=this.秘frameViewer.getGraphics$().create$();
if (this.秘isContentPane) {
if (this.秘tempInsets == null ) this.秘tempInsets=Clazz_new_($I$(3,1).c$$I$I$I$I,[0, 0, 0, 0]);
(this).getRootPane$().getInsets$java_awt_Insets(this.秘tempInsets);
if (this.秘tempInsets.left != 0 || this.秘tempInsets.top != 0 ) g.translate$I$I(this.秘tempInsets.left, this.秘tempInsets.top);
}return g;
}if (this.parent == null ) {
return null;
}g=this.parent.getGraphics$();
if (g == null ) return null;
if (!$I$(4).isComponentObtainingGraphicsFrom$java_awt_Component(null) && !this.秘paintsSelf$() ) {
this.秘setPaintsSelf$I(1);
(this.ui).clearPaintPath$();
}g.translate$I$I(this.x, (this.秘isContentPane ? 0 : this.y));
g.clipRect$I$I$I$I(0, 0, this.width, this.height);
g.setFont$java_awt_Font(this.getFont$());
return g;
});

Clazz_newMeth(C$, 'addNotify$',  function () {
if (this.秘paintsSelf$() && this.ui != null  ) (this.ui).clearPaintPath$();
if (this.parent != null ) this.秘appletViewer=this.parent.秘appletViewer;
C$.superclazz.prototype.addNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'setFrameViewer$swingjs_JSFrameViewer',  function (viewer) {
return this.秘frameViewer=(viewer == null  ? viewer=Clazz_new_($I$(5,1)).setForWindow$javax_swing_RootPaneContainer(this) : viewer);
});

Clazz_newMeth(C$, 'getFrameViewer$',  function () {
var parent=null;
return (this.秘topFrameViewer != null  ? this.秘topFrameViewer : this.秘frameViewer != null  ? this.秘topFrameViewer=this.秘frameViewer : (parent=this.getParent$()) == null  ? null : (this.秘topFrameViewer=parent.getFrameViewer$()));
});

Clazz_newMeth(C$, 'getHTMLName$S',  function (uid) {
return (this.秘htmlName == null  ? this.秘htmlName=this.appContext.getThreadGroup$().getName$() + "_" + uid + "_" + this.秘num  : this.秘htmlName);
});

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return (this.秘uiClassID == null  ? this.秘uiClassID="ComponentUI" : this.秘uiClassID);
});

Clazz_newMeth(C$, 'setUIClassID$S',  function (id) {
this.秘uiClassID=id;
});

Clazz_newMeth(C$, 'setUI$javax_swing_plaf_ComponentUI',  function (ui) {
this.ui=ui;
});

Clazz_newMeth(C$, 'getUI$',  function () {
return this.ui;
});

Clazz_newMeth(C$, 'isDisplayable$',  function () {
return this.ui != null  && this.秘getUI$().isDisplayable$() ;
});

Clazz_newMeth(C$, 'updatePeerVisibility$Z',  function (isVisible) {
if (this.getOrCreatePeer$() == null ) this.秘peerVis=(isVisible ? Boolean.TRUE : Boolean.FALSE);
 else this.updatePeerVisibilityOrig$Z(isVisible);
});

Clazz_newMeth(C$, 'getOrCreatePeer$',  function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer=this.getToolkit$().createComponent$java_awt_Component(this)) : this.peer);
});

Clazz_newMeth(C$, 'updateUI$',  function () {
if (this.秘uiClassID == null ) this.秘uiClassID=this.getUIClassID$();
if (this.ui == null ) this.setUI$javax_swing_plaf_ComponentUI($I$(6).getUI$java_awt_Component(this));
});

Clazz_newMeth(C$, '秘getJSGraphic2D$java_awt_Graphics',  function (g) {
return (g.mark$ ? g :null);
});

Clazz_newMeth(C$, '秘isAWT$',  function () {
return (!!this.isAWT$ ||false);
});

Clazz_newMeth(C$, '秘setIsAWT$',  function () {

this.isAWT$ = true;
});

Clazz_newMeth(C$, 'isBackgroundSet$',  function () {
return (this.background == null  ? false : this.isAWT$ ||false ? !(Clazz_instanceOf(this.background, "javax.swing.plaf.UIResource")) : true);
});

Clazz_newMeth(C$, 'isForegroundSet$',  function () {
return (this.foreground == null  ? false : this.isAWT$ ||false ? !(Clazz_instanceOf(this.foreground, "javax.swing.plaf.UIResource")) : true);
});

Clazz_newMeth(C$, 'isFontSet$',  function () {
return ((this.font == null  ? null : Boolean.valueOf$Z(this.isAWT$ ||false ? !(Clazz_instanceOf(this.font, "javax.swing.plaf.FontUIResource")) : true))).valueOf();
});

Clazz_newMeth(C$, '秘updateUIZOrder$',  function () {
var n=(this).getComponentCount$();
if (n < 2) return;
var components=C$.秘getChildArray$java_awt_Container(this);
var zorders=Clazz_array(Integer.TYPE, [n]);
for (var i=0; i < n; i++) zorders[i]=$I$(7).getInheritedZ$javax_swing_JComponent(components[i]);

$I$(8).sort$IA(zorders);
for (var i=0; i < n; i++) components[i].秘getUI$().setZ$I(zorders[n - 1 - i ]);

});

Clazz_newMeth(C$, 'invalidateComp$',  function () {
C$.superclazz.prototype.invalidateComp$.apply(this, []);
if (this.ui != null ) (this.ui).invalidate$();
});

Clazz_newMeth(C$, 'validate$',  function () {
var wasValid=this.isValid$();
C$.superclazz.prototype.validate$.apply(this, []);
if (this.ui != null  && !wasValid ) (this.ui).endValidate$();
});

Clazz_newMeth(C$, '秘paintWithBackgroundCheck$java_awt_Graphics',  function (g) {
var jcg=this.秘getJSGraphic2D$java_awt_Graphics(g);
this.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jcg, true);
this.paint$java_awt_Graphics(g);
this.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jcg, false);
});

Clazz_newMeth(C$, '秘paintContainerBackgroundCheck$java_awt_Graphics',  function (g) {
var jcg=this.秘getJSGraphic2D$java_awt_Graphics(g);
this.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jcg, true);
(this).paintContainer$java_awt_Graphics(g);
this.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jcg, false);
});

Clazz_newMeth(C$, 'addKeyListener$java_awt_event_KeyListener',  function (l) {
C$.superclazz.prototype.addKeyListener$java_awt_event_KeyListener.apply(this, [l]);
if (l != null  && this.ui != null  ) (this.ui).enableJSKeys$Z(true);
});

Clazz_newMeth(C$, 'removeKeyListener$java_awt_event_KeyListener',  function (l) {
C$.superclazz.prototype.removeKeyListener$java_awt_event_KeyListener.apply(this, [l]);
if (this.keyListener == null  && this.ui != null  ) (this.ui).enableJSKeys$Z(false);
});

Clazz_newMeth(C$, '秘jsInputMapSet$',  function () {
if (this.ui != null ) (this.ui).enableJSKeys$Z(true);
});

Clazz_newMeth(C$, '秘getTopInvokableAncestor$java_awt_Component$Z',  function (c, andFocusable) {
for (var p=c; p != null ; p=C$.秘nextHigher$java_awt_Component(p)) {
if (p.isWindowOrJSApplet$() && (!andFocusable || (p).isFocusableWindow$() ) ) {
return p;
}}
return null;
}, 1);

Clazz_newMeth(C$, '秘nextHigher$java_awt_Component',  function (c) {
var p=c.getParent$();
if (p == null  && Clazz_instanceOf(c, "javax.swing.JPopupMenu") ) p=(c).getInvoker$();
return p;
}, 1);

Clazz_newMeth(C$, '秘isFocusSetAndEnabled$',  function () {
return this.秘isFocusableSet && this.isFocusable$() ;
});

Clazz_newMeth(C$, '秘checkG$',  function () {
var isNew=(this.秘g) === Boolean.TRUE ;
if (isNew || this.秘g.getWidth$() != this.width  || this.秘g.getHeight$() != this.height ) {
if (!isNew) $I$(9,"dispose",[this.秘g.getCanvas$()]);
this.秘g=(this.createImage$I$I(this.width, this.height)).秘getImageGraphic$();
var c=this.秘g.getCanvas$();
var d=this.秘getUI$().getDOMNode$();
if (d !== c ) d.prepend(c);
}return this.秘g;
});

Clazz_newMeth(C$, '秘checkBackgroundPainted$swingjs_JSGraphics2D$Z',  function (jsg, init) {
if (jsg == null  || init ) {
this.秘gtemp=jsg;
(this.ui).paintBackground$swingjs_JSGraphics2D(jsg);
return;
}this.秘gtemp=null;
});

Clazz_newMeth(C$, '秘setPaintsSelf$I',  function (flag) {
flag=(this.秘iPaintMyself == 2 ? 2 : (this.秘iPaintMyself=flag));
var r;
return (flag == -1 || (r=(this).getRootPane$()) == null   || r.秘paintsSelf$()  ? flag : r.秘setPaintsSelf$I(1));
});

Clazz_newMeth(C$, '秘paintsSelf$',  function () {
if (this.秘iPaintMyself == 0) {
this.秘iPaintMyself=this.秘setPaintsSelf$I((this.秘iPaintMyselfEntirely=($I$(10).isOverridden$O$S$Class(this, "paint$java_awt_Graphics", this.秘paintClass) || $I$(10).isOverridden$O$S$Class(this, "paintComponent$java_awt_Graphics", javax.swing.JComponent ||null) || $I$(10).isOverridden$O$S$Class(this, "update$java_awt_Graphics", this.秘updateClass) || $I$(10).isOverridden$O$S$Class(this, "paintContainer$java_awt_Graphics", java.awt.Container ||null)  )) || this.秘paintsBorder$() && $I$(10).isOverridden$O$S$Class(this.秘border, "paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I", this.秘border.秘paintClass)   ? 1 : -1);
}return (this.秘iPaintMyself != -1);
});

Clazz_newMeth(C$, '秘paintsBorder$',  function () {
return (this.秘border != null  && !(Clazz_instanceOf(this.秘border, "javax.swing.plaf.BorderUIResource.CompoundBorderUIResource"))  && !(Clazz_instanceOf(this.秘border, "javax.swing.border.EmptyBorder")) );
});

Clazz_newMeth(C$, '秘selfOrChildIsPainted$',  function () {
return this.秘paintsSelf$();
});

Clazz_newMeth(C$, 'removeAll$',  function () {
this.秘setPaintsSelf$I(0);
(this).paintImmediately$I$I$I$I(0, 0, this.width, this.height);
});

Clazz_newMeth(C$, 'canPaint$',  function () {
return (C$.秘isRepaint && this.秘repaintAsUpdate && this.秘isAWT$()   || !(Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")) );
});

Clazz_newMeth(C$, '秘update$',  function () {
var g=this.getGraphics$();
try {
this.update$java_awt_Graphics(g);
} finally {
g.dispose$();
}
});

Clazz_newMeth(C$, '秘paint$java_awt_Graphics',  function (g) {
if (C$.秘isRepaint && this.秘isAWT$() && this.秘repaintAsUpdate  ) {
this.update$java_awt_Graphics(g);
} else {
this.paint$java_awt_Graphics(g);
}});

Clazz_newMeth(C$, '秘repaint$',  function () {
if (this.width <= 0 || this.height <= 0 ) return;
if (this.秘isAWT$()) {
this.秘repaintAsUpdate=false;
try {
C$.superclazz.prototype.repaint$.apply(this, []);
} finally {
this.秘repaintAsUpdate=true;
}
} else {
this.repaint$();
}});

Clazz_newMeth(C$, '秘setIsDesktop$',  function () {
this.秘isDesktop=true;
});

Clazz_newMeth(C$, '秘isDesktop$',  function () {
return this.秘isDesktop;
});

Clazz_newMeth(C$, '秘frameAddNodify$javax_swing_JRootPane',  function (rootPane) {
this.addNotify$();
rootPane.addNotify$();
});

Clazz_newMeth(C$, '秘transferFrameTo$javax_swing_JComponent',  function (jc) {
if (jc.秘frameViewer === this.秘frameViewer ) return jc;
if (jc.getUIClassID$() === "AppletUI" ) {
System.out.println$S("JSComponent setContentPane to applet; using content.contentPane instead");
jc=jc.getRootPane$().getContentPane$();
jc.秘isContentPane=false;
jc.getRootPane$().setContentPane$java_awt_Container(Clazz_new_($I$(11,1)));
}jc.秘frameViewer=this.秘frameViewer;
jc.秘topFrameViewer=this.秘topFrameViewer;
return jc;
});

Clazz_newMeth(C$, 'getInsets$',  function () {
return this.秘getInsets$();
});

Clazz_newMeth(C$, '秘getInsets$',  function () {
var i=(this.ui == null  ? null : this.秘getUI$().getInsets$());
return (i == null  ? $I$(2).NULL_INSETS : i);
});

Clazz_newMeth(C$, '秘repaintParentIfNeeded$I$I$I$I',  function (oldX, oldY, oldWidth, oldHeight) {
if (this.parent != null  && Clazz_instanceOf(this.peer, "java.awt.peer.LightweightPeer")  && this.isShowing$() ) {
if (this.秘getUI$().allowPaintedBackground && this.秘paintsSelf$() ) {
this.parent.repaint$I$I$I$I(oldX, oldY, oldWidth, oldHeight);
this.秘repaint$();
}}});

Clazz_newMeth(C$, '秘getLastKeyListener$',  function () {
var k=this.keyListener;
return (k == null  ? null : k.b || k.a ||k);
});

Clazz_newMeth(C$, '秘setProxy$java_awt_Container',  function (parent) {
if (parent != null ) {
var mask=0;
if ((this.mouseListener != null ) || (Long.$ne((Long.$and(this.eventMask,16)),0 )) ) {
(mask=Long.$or(mask,(16)));
}if ((this.mouseMotionListener != null ) || (Long.$ne((Long.$and(this.eventMask,32)),0 )) ) {
(mask=Long.$or(mask,(32)));
}if ((this.mouseWheelListener != null ) || (Long.$ne((Long.$and(this.eventMask,131072)),0 )) ) {
(mask=Long.$or(mask,(131072)));
}if (this.focusListener != null  || Long.$ne((Long.$and(this.eventMask,4)),0 ) ) {
(mask=Long.$or(mask,(4)));
}if (this.keyListener != null  || Long.$ne((Long.$and(this.eventMask,8)),0 ) ) {
(mask=Long.$or(mask,(8)));
}if (Long.$ne(mask,0 )) {
parent.proxyEnableEvents$J(mask);
}}});

Clazz_newMeth(C$, '秘dispatchKeyEvent$javax_swing_JComponent$I$O$J',  function (c, id, jqevent, time) {
if (id == 0) id=$I$(12).fixEventType$O$I(jqevent, 0);
var ui=(c == null  ? null : c.秘getUI$());
if (id == 400) {
if (ui != null  && !ui.j2sDoPropagate ) $I$(13).consumeEvent$O(jqevent);
return false;
}if (c != null ) {
var e=$I$(14).newJSKeyEvent$javax_swing_JComponent$O$I$Z(c, jqevent, id, false);
c.dispatchEvent$java_awt_AWTEvent(e);
if (!ui.j2sDoPropagate) $I$(13).consumeEvent$O(e);
if (!e.isConsumed$() && id == 401  && e.getKeyChar$() != "\uffff" ) {
e=$I$(14).newJSKeyEvent$javax_swing_JComponent$O$I$Z(c, jqevent, 400, false);
c.dispatchEvent$java_awt_AWTEvent(e);
if (!ui.j2sDoPropagate) $I$(13).consumeEvent$O(e);
}}return true;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.秘isRepaint=true;
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.JSComponent, "A2SComponentWrapper", function(){
});
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.JSComponent, "A2SWrappedComponent", function(){
});
})()
;
(function(){/*e*/var C$=Clazz_newClass(P$.JSComponent, "ModalExclusionType", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "NO_EXCLUDE", 0, []);
Clazz_newEnumConst($vals, C$.c$, "APPLICATION_EXCLUDE", 1, []);
Clazz_newEnumConst($vals, C$.c$, "TOOLKIT_EXCLUDE", 2, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.Cursor','java.awt.Window']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSFrame", null, 'java.awt.Window');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.title="Untitled";
this.resizable=true;
this.undecorated=false;
this.mbManagement=false;
this.$state=0;
},1);

C$.$fields$=[['Z',['resizable','undecorated','mbManagement'],'I',['$state'],'S',['title'],'O',['maximizedBounds','java.awt.Rectangle','ownedWindows','java.util.Vector']]
,['I',['$nameCounter']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_GraphicsConfiguration',  function (gc) {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [null, gc]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (title) {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [title, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$java_awt_GraphicsConfiguration',  function (title, gc) {
;C$.superclazz.c$$java_awt_GraphicsConfiguration.apply(this,[gc]);C$.$init$.apply(this);
this.title=(title == null  ? "" : title);
}, 1);

Clazz_newMeth(C$, 'constructComponentName$',  function () {
return "frame" + C$.$nameCounter++;
});

Clazz_newMeth(C$, 'addNotify$',  function () {
this.getOrCreatePeer$();
var p=this.peer;
if (p != null ) p.setMaximizedBounds$java_awt_Rectangle(this.maximizedBounds);
C$.superclazz.prototype.addNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'getOrCreatePeer$',  function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer=this.getToolkit$().createFrame$java_awt_JSFrame(this)) : this.peer);
});

Clazz_newMeth(C$, 'getTitle$',  function () {
return this.title;
});

Clazz_newMeth(C$, 'setTitle$S',  function (title) {
var oldTitle=this.title;
if (title == null ) {
title="";
}{
this.title=title;
var peer=this.peer;
if (peer != null ) {
peer.setTitle$S(title);
}}this.firePropertyChange$S$O$O("title", oldTitle, title);
});

Clazz_newMeth(C$, 'getIconImage$',  function () {
var icons=this.icons;
if (icons != null ) {
if (icons.size$() > 0) {
return icons.get$I(0);
}}return null;
});

Clazz_newMeth(C$, 'setIconImage$java_awt_Image',  function (image) {
C$.superclazz.prototype.setIconImage$java_awt_Image.apply(this, [image]);
});

Clazz_newMeth(C$, 'isResizable$',  function () {
return this.resizable;
});

Clazz_newMeth(C$, 'setResizable$Z',  function (resizable) {
var oldResizable=this.resizable;
{
this.resizable=resizable;
}this.firePropertyChange$S$Z$Z("resizable", oldResizable, resizable);
});

Clazz_newMeth(C$, 'setState$I',  function (state) {
var current=this.getExtendedState$();
if (state == 1 && (current & 1) == 0 ) {
this.setExtendedState$I(current | 1);
} else if (state == 0 && (current & 1) != 0 ) {
this.setExtendedState$I(current & ~1);
}});

Clazz_newMeth(C$, 'setExtendedState$I',  function (state) {
if (!p$1.isFrameStateSupported$I.apply(this, [state])) {
return;
}this.$state=state;
});

Clazz_newMeth(C$, 'isFrameStateSupported$I',  function (state) {
if (!this.getToolkit$().isFrameStateSupported$I(state)) {
if (((state & 1) != 0) && !this.getToolkit$().isFrameStateSupported$I(1) ) {
return false;
} else {
state&=~1;
}return this.getToolkit$().isFrameStateSupported$I(state);
}return true;
}, p$1);

Clazz_newMeth(C$, 'getState$',  function () {
return (this.getExtendedState$() & 1) != 0 ? 1 : 0;
});

Clazz_newMeth(C$, 'getExtendedState$',  function () {
return this.$state;
});

Clazz_newMeth(C$, 'setMaximizedBounds$java_awt_Rectangle',  function (bounds) {
this.maximizedBounds=bounds;
});

Clazz_newMeth(C$, 'getMaximizedBounds$',  function () {
return this.maximizedBounds;
});

Clazz_newMeth(C$, 'setUndecorated$Z',  function (undecorated) {
this.undecorated=undecorated;
});

Clazz_newMeth(C$, 'isUndecorated$',  function () {
return this.undecorated;
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
C$.superclazz.prototype.removeNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent',  function (e) {
C$.superclazz.prototype.postProcessKeyEvent$java_awt_event_KeyEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'paramString$',  function () {
var str=C$.superclazz.prototype.paramString$.apply(this, []);
if (this.title != null ) {
str+=",title=" + this.title;
}if (this.resizable) {
str+=",resizable";
}this.getExtendedState$();
if (this.$state == 0) {
str+=",normal";
} else {
if ((this.$state & 1) != 0) {
str+=",iconified";
}if ((this.$state & 6) == 6) {
str+=",maximized";
} else if ((this.$state & 2) != 0) {
str+=",maximized_horiz";
} else if ((this.$state & 4) != 0) {
str+=",maximized_vert";
}}return str;
});

Clazz_newMeth(C$, 'setCursor$I',  function (cursorType) {
if (cursorType < 0 || cursorType > 13 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["illegal cursor type"]);
}this.setCursor$java_awt_Cursor($I$(1).getPredefinedCursor$I(cursorType));
});

Clazz_newMeth(C$, 'getCursorType$',  function () {
return (this.getCursor$().getType$());
});

Clazz_newMeth(C$, 'getFrames$',  function () {
var allWindows=$I$(2).getWindows$();
var frameCount=0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=($$w[$w])),1);$w++) {
if (Clazz_instanceOf(w, "java.awt.JSFrame")) {
++frameCount;
}}
var frames=Clazz_array(C$, [frameCount]);
var c=0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=($$w[$w])),1);$w++) {
if (Clazz_instanceOf(w, "java.awt.JSFrame")) {
frames[c++]=w;
}}
return frames;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.$nameCounter=0;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.FlowLayout']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSPanel", null, 'java.awt.Container');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['I',['nameCounter']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$java_awt_LayoutManager.apply(this, [Clazz_new_($I$(1,1))]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager',  function (layout) {
Clazz_super_(C$, this);
this.setAppContext$();
this.setLayout$java_awt_LayoutManager(layout);
}, 1);

Clazz_newMeth(C$, 'constructComponentName$',  function () {
return "panel" + C$.nameCounter++;
});

Clazz_newMeth(C$, 'addNotify$',  function () {
this.getOrCreatePeer$();
C$.superclazz.prototype.addNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'isFocusCycleRoot$',  function () {
return true;
});

C$.$static$=function(){C$.$static$=0;
C$.nameCounter=0;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "KeyEventDispatcher");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "KeyEventPostProcessor");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.util.LinkedList',['java.awt.KeyboardFocusManager','.LightweightFocusRequest'],'java.awt.AWTKeyStroke','java.util.HashMap','java.awt.DefaultFocusTraversalPolicy','java.util.Set','sun.awt.AppContext','java.awt.DefaultKeyboardFocusManager','java.util.StringTokenizer','java.util.Collections','java.util.HashSet','java.awt.Toolkit','java.beans.PropertyChangeSupport','java.beans.VetoableChangeSupport','sun.awt.SunToolkit',['java.awt.KeyboardFocusManager','.HeavyweightFocusRequest'],['sun.awt.CausedFocusEvent','.Cause'],'java.awt.event.FocusEvent','sun.awt.CausedFocusEvent','java.awt.EventQueue','java.awt.KeyboardFocusManager']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "KeyboardFocusManager", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.awt.KeyEventDispatcher', 'java.awt.KeyEventPostProcessor']);
C$.$classes$=[['LightweightFocusRequest',26],['HeavyweightFocusRequest',26]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.defaultPolicyAWT=Clazz_new_($I$(5,1));
this.defaultFocusTraversalKeys=Clazz_array($I$(6), [4]);
this.currentSequencedEvent=null;
},1);

C$.$fields$=[['O',['peer','java.awt.peer.KeyboardFocusManagerPeer','defaultPolicy','java.awt.FocusTraversalPolicy','+defaultPolicyAWT','defaultFocusTraversalKeys','java.util.Set[]','vetoableSupport','java.beans.VetoableChangeSupport','changeSupport','java.beans.PropertyChangeSupport','keyEventDispatchers','java.util.LinkedList','+keyEventPostProcessors','currentSequencedEvent','java.awt.SequencedEvent']]
,['Z',['clearingCurrentLightweightRequests','allowSyncFocusRequests','disableRestoreFocus'],'O',['focusOwner','java.awt.Component','+permanentFocusOwner','focusedWindow','java.awt.Window','+activeWindow','defaultFocusTraversalKeyPropertyNames','String[]','defaultFocusTraversalKeyStrokes','java.awt.AWTKeyStroke[][]','currentFocusCycleRoot','java.awt.Container','mostRecentFocusOwners','java.util.Map','heavyweightRequests','java.util.LinkedList','+currentLightweightRequests','newFocusOwner','java.awt.Component']]]

Clazz_newMeth(C$, 'getCurrentKeyboardFocusManager$',  function () {
return C$.getCurrentKeyboardFocusManager$sun_awt_AppContext($I$(7).getAppContext$());
}, 1);

Clazz_newMeth(C$, 'getCurrentKeyboardFocusManager$sun_awt_AppContext',  function (appcontext) {
var manager=appcontext.get$O(Clazz_getClass(C$));
if (manager == null ) {
manager=Clazz_new_($I$(8,1));
appcontext.put$O$O(Clazz_getClass(C$), manager);
}return manager;
}, 1);

Clazz_newMeth(C$, 'setCurrentKeyboardFocusManager$java_awt_KeyboardFocusManager',  function (newManager) {
var oldManager=null;
{
var appcontext=$I$(7).getAppContext$();
if (newManager != null ) {
oldManager=C$.getCurrentKeyboardFocusManager$sun_awt_AppContext(appcontext);
appcontext.put$O$O(Clazz_getClass(C$), newManager);
} else {
oldManager=C$.getCurrentKeyboardFocusManager$sun_awt_AppContext(appcontext);
appcontext.remove$O(Clazz_getClass(C$));
}}if (oldManager != null ) {
oldManager.firePropertyChange$S$O$O("managingFocus", Boolean.TRUE, Boolean.FALSE);
}if (newManager != null ) {
newManager.firePropertyChange$S$O$O("managingFocus", Boolean.FALSE, Boolean.TRUE);
}}, 1);

Clazz_newMeth(C$, 'setCurrentSequencedEvent$java_awt_SequencedEvent',  function (current) {
{
Clazz_assert(C$, this, function(){return (current == null  || this.currentSequencedEvent == null  )});
this.currentSequencedEvent=current;
}});

Clazz_newMeth(C$, 'getCurrentSequencedEvent$',  function () {
{
return this.currentSequencedEvent;
}});

Clazz_newMeth(C$, 'initFocusTraversalKeysSet$S$java_util_Set',  function (value, targetSet) {
var tokens=Clazz_new_($I$(9,1).c$$S$S,[value, ","]);
while (tokens.hasMoreTokens$()){
targetSet.add$O($I$(3,"getAWTKeyStroke$S",[tokens.nextToken$()]));
}
return (targetSet.isEmpty$()) ? $I$(10).EMPTY_SET : $I$(10).unmodifiableSet$java_util_Set(targetSet);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
for (var i=0; i < 4; i++) {
var work_set=Clazz_new_($I$(11,1));
for (var j=0; j < C$.defaultFocusTraversalKeyStrokes[i].length; j++) {
work_set.add$O(C$.defaultFocusTraversalKeyStrokes[i][j]);
}
this.defaultFocusTraversalKeys[i]=(work_set.isEmpty$()) ? $I$(10).EMPTY_SET : $I$(10).unmodifiableSet$java_util_Set(work_set);
}
p$1.initPeer.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'initPeer',  function () {
var tk=$I$(12).getDefaultToolkit$();
var peerProvider=tk;
this.peer=peerProvider.getKeyboardFocusManagerPeer$();
}, p$1);

Clazz_newMeth(C$, 'getFocusOwner$',  function () {
if (C$.focusOwner == null ) {
return null;
}return (C$.focusOwner.appContext === $I$(7).getAppContext$() ) ? C$.focusOwner : null;
});

Clazz_newMeth(C$, 'getGlobalFocusOwner$',  function () {
return C$.focusOwner;
});

Clazz_newMeth(C$, 'setGlobalFocusOwner$java_awt_Component',  function (focusOwner) {
var oldFocusOwner=null;
var shouldFire=false;
if (focusOwner == null  || focusOwner.isFocusable$() ) {
p$1.checkKFMSecurity.apply(this, []);
oldFocusOwner=this.getFocusOwner$();
try {
this.fireVetoableChange$S$O$O("focusOwner", oldFocusOwner, focusOwner);
} catch (e) {
if (Clazz_exceptionOf(e,"java.beans.PropertyVetoException")){
return;
} else {
throw e;
}
}
C$.focusOwner=focusOwner;
if (focusOwner != null  && (this.getCurrentFocusCycleRoot$() == null  || !focusOwner.isFocusCycleRoot$java_awt_Container(this.getCurrentFocusCycleRoot$()) ) ) {
var rootAncestor=focusOwner.getFocusCycleRootAncestor$();
if (rootAncestor == null  && focusOwner.isWindowOrJSApplet$() ) {
rootAncestor=focusOwner;
}if (rootAncestor != null ) {
this.setGlobalCurrentFocusCycleRootPriv$java_awt_Container(rootAncestor);
}}shouldFire=true;
}if (shouldFire) {
this.firePropertyChange$S$O$O("focusOwner", oldFocusOwner, focusOwner);
}});

Clazz_newMeth(C$, 'clearFocusOwner$',  function () {
if (this.getFocusOwner$() != null ) {
this.clearGlobalFocusOwner$();
}});

Clazz_newMeth(C$, 'clearGlobalFocusOwner$',  function () {
$I$(12).getDefaultToolkit$();
p$1._clearGlobalFocusOwner.apply(this, []);
});

Clazz_newMeth(C$, '_clearGlobalFocusOwner',  function () {
var activeWindow=C$.markClearGlobalFocusOwner$();
this.peer.clearGlobalFocusOwner$java_awt_Window(activeWindow);
}, p$1);

Clazz_newMeth(C$, 'clearGlobalFocusOwnerPriv$',  function () {
this.clearGlobalFocusOwner$();
});

Clazz_newMeth(C$, 'getNativeFocusOwner$',  function () {
return this.peer.getCurrentFocusOwner$();
});

Clazz_newMeth(C$, 'setNativeFocusOwner$java_awt_Component',  function (comp) {
this.peer.setCurrentFocusOwner$java_awt_Component(comp);
});

Clazz_newMeth(C$, 'getNativeFocusedWindow$',  function () {
return this.peer.getCurrentFocusedWindow$();
});

Clazz_newMeth(C$, 'getPermanentFocusOwner$',  function () {
{
if (C$.permanentFocusOwner == null ) {
return null;
}return (C$.permanentFocusOwner.appContext === $I$(7).getAppContext$() ) ? C$.permanentFocusOwner : null;
}});

Clazz_newMeth(C$, 'getGlobalPermanentFocusOwner$',  function () {
{
p$1.checkKFMSecurity.apply(this, []);
return C$.permanentFocusOwner;
}});

Clazz_newMeth(C$, 'setGlobalPermanentFocusOwner$java_awt_Component',  function (permanentFocusOwner) {
var oldPermanentFocusOwner=null;
var shouldFire=false;
if (permanentFocusOwner == null  || permanentFocusOwner.isFocusable$() ) {
{
p$1.checkKFMSecurity.apply(this, []);
oldPermanentFocusOwner=this.getPermanentFocusOwner$();
try {
this.fireVetoableChange$S$O$O("permanentFocusOwner", oldPermanentFocusOwner, permanentFocusOwner);
} catch (e) {
if (Clazz_exceptionOf(e,"java.beans.PropertyVetoException")){
return;
} else {
throw e;
}
}
C$.permanentFocusOwner=permanentFocusOwner;
C$.setMostRecentFocusOwner$java_awt_Component(permanentFocusOwner);
shouldFire=true;
}}if (shouldFire) {
this.firePropertyChange$S$O$O("permanentFocusOwner", oldPermanentFocusOwner, permanentFocusOwner);
}});

Clazz_newMeth(C$, 'getFocusedWindow$',  function () {
{
if (C$.focusedWindow == null ) {
return null;
}return (C$.focusedWindow.appContext === $I$(7).getAppContext$() ) ? C$.focusedWindow : null;
}});

Clazz_newMeth(C$, 'getGlobalFocusedWindow$',  function () {
{
p$1.checkKFMSecurity.apply(this, []);
return C$.focusedWindow;
}});

Clazz_newMeth(C$, 'setGlobalFocusedWindow$java_awt_Window',  function (focusedWindow) {
var oldFocusedWindow=null;
var shouldFire=false;
if (focusedWindow == null  || focusedWindow.isFocusableWindow$() ) {
oldFocusedWindow=this.getFocusedWindow$();
try {
this.fireVetoableChange$S$O$O("focusedWindow", oldFocusedWindow, focusedWindow);
} catch (e) {
if (Clazz_exceptionOf(e,"java.beans.PropertyVetoException")){
return;
} else {
throw e;
}
}
C$.focusedWindow=focusedWindow;
shouldFire=true;
}if (shouldFire) {
this.firePropertyChange$S$O$O("focusedWindow", oldFocusedWindow, focusedWindow);
}});

Clazz_newMeth(C$, 'getActiveWindow$',  function () {
{
if (C$.activeWindow == null ) {
return null;
}return (C$.activeWindow.appContext === $I$(7).getAppContext$() ) ? C$.activeWindow : null;
}});

Clazz_newMeth(C$, 'getGlobalActiveWindow$',  function () {
{
p$1.checkKFMSecurity.apply(this, []);
return C$.activeWindow;
}});

Clazz_newMeth(C$, 'setGlobalActiveWindow$java_awt_Window',  function (activeWindow) {
var oldActiveWindow;
{
p$1.checkKFMSecurity.apply(this, []);
oldActiveWindow=this.getActiveWindow$();
try {
this.fireVetoableChange$S$O$O("activeWindow", oldActiveWindow, activeWindow);
} catch (e) {
if (Clazz_exceptionOf(e,"java.beans.PropertyVetoException")){
return;
} else {
throw e;
}
}
C$.activeWindow=activeWindow;
}this.firePropertyChange$S$O$O("activeWindow", oldActiveWindow, activeWindow);
});

Clazz_newMeth(C$, 'getDefaultFocusTraversalPolicy$',  function () {
return this.defaultPolicy;
});

Clazz_newMeth(C$, 'getDefaultAWTFocusTraversalPolicy$',  function () {
return (this.defaultPolicyAWT == null  ? this.defaultPolicyAWT=Clazz_new_($I$(5,1)) : this.defaultPolicyAWT);
});

Clazz_newMeth(C$, 'setDefaultFocusTraversalPolicy$java_awt_FocusTraversalPolicy',  function (defaultPolicy) {
if (defaultPolicy == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["default focus traversal policy cannot be null"]);
}var oldPolicy;
{
oldPolicy=this.defaultPolicy;
this.defaultPolicy=defaultPolicy;
}this.firePropertyChange$S$O$O("defaultFocusTraversalPolicy", oldPolicy, defaultPolicy);
});

Clazz_newMeth(C$, 'setDefaultFocusTraversalKeys$I$java_util_Set',  function (id, keystrokes) {
if (id < 0 || id >= 4 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}if (keystrokes == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot set null Set of default focus traversal keys"]);
}var oldKeys;
{
for (var keystroke, $keystroke = keystrokes.iterator$(); $keystroke.hasNext$()&&((keystroke=($keystroke.next$())),1);) {
if (keystroke == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["cannot set null focus traversal key"]);
}if (keystroke.getKeyChar$() != "\uffff") {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["focus traversal keys cannot map to KEY_TYPED events"]);
}for (var i=0; i < 4; i++) {
if (i == id) {
continue;
}if (this.defaultFocusTraversalKeys[i].contains$O(keystroke)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["focus traversal keys must be unique for a Component"]);
}}
}
oldKeys=this.defaultFocusTraversalKeys[id];
this.defaultFocusTraversalKeys[id]=$I$(10,"unmodifiableSet$java_util_Set",[Clazz_new_($I$(11,1).c$$java_util_Collection,[keystrokes])]);
}this.firePropertyChange$S$O$O(C$.defaultFocusTraversalKeyPropertyNames[id], oldKeys, keystrokes);
});

Clazz_newMeth(C$, 'getDefaultFocusTraversalKeys$I',  function (id) {
if (id < 0 || id >= 4 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}return this.defaultFocusTraversalKeys[id];
});

Clazz_newMeth(C$, 'getCurrentFocusCycleRoot$',  function () {
{
if (C$.currentFocusCycleRoot == null ) {
return null;
}return (C$.currentFocusCycleRoot.appContext === $I$(7).getAppContext$() ) ? C$.currentFocusCycleRoot : null;
}});

Clazz_newMeth(C$, 'getGlobalCurrentFocusCycleRoot$',  function () {
{
p$1.checkKFMSecurity.apply(this, []);
return C$.currentFocusCycleRoot;
}});

Clazz_newMeth(C$, 'setGlobalCurrentFocusCycleRoot$java_awt_Container',  function (newFocusCycleRoot) {
var oldFocusCycleRoot;
{
oldFocusCycleRoot=this.getCurrentFocusCycleRoot$();
C$.currentFocusCycleRoot=newFocusCycleRoot;
}this.firePropertyChange$S$O$O("currentFocusCycleRoot", oldFocusCycleRoot, newFocusCycleRoot);
});

Clazz_newMeth(C$, 'setGlobalCurrentFocusCycleRootPriv$java_awt_Container',  function (newFocusCycleRoot) {
this.setGlobalCurrentFocusCycleRoot$java_awt_Container(newFocusCycleRoot);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (listener != null ) {
{
if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(13,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
}}});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (listener != null ) {
{
if (this.changeSupport != null ) {
this.changeSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
}}}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(13,1).c$$O,[this]);
}return this.changeSupport.getPropertyChangeListeners$();
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
if (listener != null ) {
{
if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(13,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
}}});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
if (listener != null ) {
{
if (this.changeSupport != null ) {
this.changeSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
}}}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S',  function (propertyName) {
if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(13,1).c$$O,[this]);
}return this.changeSupport.getPropertyChangeListeners$S(propertyName);
});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O',  function (propertyName, oldValue, newValue) {
if (oldValue === newValue ) {
return;
}var changeSupport=this.changeSupport;
if (changeSupport != null ) {
changeSupport.firePropertyChange$S$O$O(propertyName, oldValue, newValue);
}});

Clazz_newMeth(C$, 'addVetoableChangeListener$java_beans_VetoableChangeListener',  function (listener) {
if (listener != null ) {
{
if (this.vetoableSupport == null ) {
this.vetoableSupport=Clazz_new_($I$(14,1).c$$O,[this]);
}this.vetoableSupport.addVetoableChangeListener$java_beans_VetoableChangeListener(listener);
}}});

Clazz_newMeth(C$, 'removeVetoableChangeListener$java_beans_VetoableChangeListener',  function (listener) {
if (listener != null ) {
{
if (this.vetoableSupport != null ) {
this.vetoableSupport.removeVetoableChangeListener$java_beans_VetoableChangeListener(listener);
}}}});

Clazz_newMeth(C$, 'getVetoableChangeListeners$',  function () {
if (this.vetoableSupport == null ) {
this.vetoableSupport=Clazz_new_($I$(14,1).c$$O,[this]);
}return this.vetoableSupport.getVetoableChangeListeners$();
});

Clazz_newMeth(C$, 'addVetoableChangeListener$S$java_beans_VetoableChangeListener',  function (propertyName, listener) {
if (listener != null ) {
{
if (this.vetoableSupport == null ) {
this.vetoableSupport=Clazz_new_($I$(14,1).c$$O,[this]);
}this.vetoableSupport.addVetoableChangeListener$S$java_beans_VetoableChangeListener(propertyName, listener);
}}});

Clazz_newMeth(C$, 'removeVetoableChangeListener$S$java_beans_VetoableChangeListener',  function (propertyName, listener) {
if (listener != null ) {
{
if (this.vetoableSupport != null ) {
this.vetoableSupport.removeVetoableChangeListener$S$java_beans_VetoableChangeListener(propertyName, listener);
}}}});

Clazz_newMeth(C$, 'getVetoableChangeListeners$S',  function (propertyName) {
if (this.vetoableSupport == null ) {
this.vetoableSupport=Clazz_new_($I$(14,1).c$$O,[this]);
}return this.vetoableSupport.getVetoableChangeListeners$S(propertyName);
});

Clazz_newMeth(C$, 'fireVetoableChange$S$O$O',  function (propertyName, oldValue, newValue) {
if (oldValue === newValue ) {
return;
}var vetoableSupport=this.vetoableSupport;
if (vetoableSupport != null ) {
vetoableSupport.fireVetoableChange$S$O$O(propertyName, oldValue, newValue);
}});

Clazz_newMeth(C$, 'addKeyEventDispatcher$java_awt_KeyEventDispatcher',  function (dispatcher) {
if (dispatcher != null ) {
{
if (this.keyEventDispatchers == null ) {
this.keyEventDispatchers=Clazz_new_($I$(1,1));
}this.keyEventDispatchers.add$O(dispatcher);
}}});

Clazz_newMeth(C$, 'removeKeyEventDispatcher$java_awt_KeyEventDispatcher',  function (dispatcher) {
if (dispatcher != null ) {
{
if (this.keyEventDispatchers != null ) {
this.keyEventDispatchers.remove$O(dispatcher);
}}}});

Clazz_newMeth(C$, 'getKeyEventDispatchers$',  function () {
return (this.keyEventDispatchers != null ) ? this.keyEventDispatchers.clone$() : null;
});

Clazz_newMeth(C$, 'addKeyEventPostProcessor$java_awt_KeyEventPostProcessor',  function (processor) {
if (processor != null ) {
{
if (this.keyEventPostProcessors == null ) {
this.keyEventPostProcessors=Clazz_new_($I$(1,1));
}this.keyEventPostProcessors.add$O(processor);
}}});

Clazz_newMeth(C$, 'removeKeyEventPostProcessor$java_awt_KeyEventPostProcessor',  function (processor) {
if (processor != null ) {
{
if (this.keyEventPostProcessors != null ) {
this.keyEventPostProcessors.remove$O(processor);
}}}});

Clazz_newMeth(C$, 'getKeyEventPostProcessors$',  function () {
return (this.keyEventPostProcessors != null ) ? this.keyEventPostProcessors.clone$() : null;
});

Clazz_newMeth(C$, 'setMostRecentFocusOwner$java_awt_Component',  function (component) {
var window=component;
while (window != null  && !window.isWindowOrJSApplet$() ){
window=window.parent;
}
if (window != null ) {
C$.setMostRecentFocusOwner$java_awt_Window$java_awt_Component(window, component);
}}, 1);

Clazz_newMeth(C$, 'setMostRecentFocusOwner$java_awt_Window$java_awt_Component',  function (window, component) {
C$.mostRecentFocusOwners.put$O$O(window, component);
}, 1);

Clazz_newMeth(C$, 'clearMostRecentFocusOwner$java_awt_Component',  function (comp) {
var window;
if (comp == null ) {
return;
}window=comp.getParent$();
while (window != null  && !window.isWindowOrJSApplet$() ){
window=window.getParent$();
}
if ((window != null ) && (C$.getMostRecentFocusOwner$java_awt_Window(window) === comp ) ) {
C$.setMostRecentFocusOwner$java_awt_Window$java_awt_Component(window, null);
}if (window != null ) {
var realWindow=window;
if (realWindow.getTemporaryLostComponent$() === comp ) {
realWindow.setTemporaryLostComponent$java_awt_Component(null);
}}}, 1);

Clazz_newMeth(C$, 'getMostRecentFocusOwner$java_awt_Window',  function (window) {
return C$.mostRecentFocusOwners.get$O(window);
}, 1);

Clazz_newMeth(C$, 'redispatchEvent$java_awt_Component$java_awt_AWTEvent',  function (target, e) {
e.focusManagerIsDispatching=true;
target.dispatchEvent$java_awt_AWTEvent(e);
e.focusManagerIsDispatching=false;
});

Clazz_newMeth(C$, 'focusNextComponent$',  function () {
var focusOwner=this.getFocusOwner$();
if (focusOwner != null ) {
this.focusNextComponent$java_awt_Component(focusOwner);
}});

Clazz_newMeth(C$, 'focusPreviousComponent$',  function () {
var focusOwner=this.getFocusOwner$();
if (focusOwner != null ) {
this.focusPreviousComponent$java_awt_Component(focusOwner);
}});

Clazz_newMeth(C$, 'upFocusCycle$',  function () {
var focusOwner=this.getFocusOwner$();
if (focusOwner != null ) {
this.upFocusCycle$java_awt_Component(focusOwner);
}});

Clazz_newMeth(C$, 'downFocusCycle$',  function () {
var focusOwner=this.getFocusOwner$();
if (Clazz_instanceOf(focusOwner, "java.awt.Container")) {
this.downFocusCycle$java_awt_Container(focusOwner);
}});

Clazz_newMeth(C$, 'dumpRequests$',  function () {
System.err.println$S(">>> Requests dump, time: " + Long.$s(System.currentTimeMillis$()));
{
for (var req, $req = C$.heavyweightRequests.iterator$(); $req.hasNext$()&&((req=($req.next$())),1);) {
System.err.println$S(">>> Req: " + req);
}
}System.err.println$S("");
});

Clazz_newMeth(C$, 'processSynchronousLightweightTransfer$java_awt_Component$java_awt_Component$Z$Z$J',  function (heavyweight, descendant, temporary, focusedWindowChangeAllowed, time) {
var parentWindow=$I$(15).getContainingWindow$java_awt_Component(heavyweight);
if (parentWindow == null  || !parentWindow.syncLWRequests ) {
return false;
}if (descendant == null ) {
descendant=heavyweight;
}var manager=C$.getCurrentKeyboardFocusManager$sun_awt_AppContext($I$(15).targetToAppContext$O(descendant));
var currentFocusOwnerEvent=null;
var newFocusOwnerEvent=null;
var currentFocusOwner=manager.getGlobalFocusOwner$();
{
var hwFocusRequest=C$.getLastHWRequest$();
if (hwFocusRequest == null  && heavyweight === manager.getNativeFocusOwner$()   && C$.allowSyncFocusRequests ) {
if (descendant === currentFocusOwner ) {
return true;
}manager.enqueueKeyEvents$J$java_awt_Component(time, descendant);
hwFocusRequest=Clazz_new_([heavyweight, descendant, temporary, $I$(17).UNKNOWN],$I$(16,1).c$$java_awt_Component$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause);
C$.heavyweightRequests.add$O(hwFocusRequest);
if (currentFocusOwner != null ) {
currentFocusOwnerEvent=Clazz_new_($I$(18,1).c$$java_awt_Component$I$Z$java_awt_Component,[currentFocusOwner, 1005, temporary, descendant]);
}newFocusOwnerEvent=Clazz_new_($I$(18,1).c$$java_awt_Component$I$Z$java_awt_Component,[descendant, 1004, temporary, currentFocusOwner]);
}}var result=false;
var clearing=C$.clearingCurrentLightweightRequests;
var caughtEx=null;
try {
C$.clearingCurrentLightweightRequests=false;
{
if (currentFocusOwnerEvent != null  && currentFocusOwner != null  ) {
(currentFocusOwnerEvent).isPosted=true;
caughtEx=C$.dispatchAndCatchException$Throwable$java_awt_Component$java_awt_event_FocusEvent(caughtEx, currentFocusOwner, currentFocusOwnerEvent);
result=true;
}if (newFocusOwnerEvent != null  && descendant != null  ) {
(newFocusOwnerEvent).isPosted=true;
caughtEx=C$.dispatchAndCatchException$Throwable$java_awt_Component$java_awt_event_FocusEvent(caughtEx, descendant, newFocusOwnerEvent);
result=true;
}}} finally {
C$.clearingCurrentLightweightRequests=clearing;
}
if (Clazz_instanceOf(caughtEx, "java.lang.RuntimeException")) {
throw caughtEx;
} else if (Clazz_instanceOf(caughtEx, "java.lang.Error")) {
throw caughtEx;
}return result;
}, 1);

Clazz_newMeth(C$, 'shouldNativelyFocusHeavyweight$java_awt_Component$java_awt_Component$Z$Z$J$sun_awt_CausedFocusEvent_Cause',  function (heavyweight, descendant, temporary, focusedWindowChangeAllowed, time, cause) {
if (descendant == null ) {
descendant=heavyweight;
}var manager=C$.getCurrentKeyboardFocusManager$sun_awt_AppContext($I$(15).targetToAppContext$O(descendant));
var thisManager=C$.getCurrentKeyboardFocusManager$();
var currentFocusOwner=thisManager.getGlobalFocusOwner$();
var nativeFocusOwner=thisManager.getNativeFocusOwner$();
var nativeFocusedWindow=thisManager.getNativeFocusedWindow$();
{
var hwFocusRequest=C$.getLastHWRequest$();
if (hwFocusRequest == null  && heavyweight === nativeFocusOwner   && heavyweight.getContainingWindow$() === nativeFocusedWindow  ) {
if (descendant === currentFocusOwner ) {
return 0;
}manager.enqueueKeyEvents$J$java_awt_Component(time, descendant);
hwFocusRequest=Clazz_new_($I$(16,1).c$$java_awt_Component$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause,[heavyweight, descendant, temporary, cause]);
C$.heavyweightRequests.add$O(hwFocusRequest);
if (currentFocusOwner != null ) {
var currentFocusOwnerEvent=Clazz_new_($I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause,[currentFocusOwner, 1005, temporary, descendant, cause]);
$I$(15).postEvent$sun_awt_AppContext$java_awt_AWTEvent(currentFocusOwner.appContext, currentFocusOwnerEvent);
}var newFocusOwnerEvent=Clazz_new_($I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause,[descendant, 1004, temporary, currentFocusOwner, cause]);
$I$(15).postEvent$sun_awt_AppContext$java_awt_AWTEvent(descendant.appContext, newFocusOwnerEvent);
return 1;
} else if (hwFocusRequest != null  && hwFocusRequest.heavyweight === heavyweight  ) {
if (hwFocusRequest.addLightweightRequest$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause(descendant, temporary, cause)) {
manager.enqueueKeyEvents$J$java_awt_Component(time, descendant);
}return 1;
} else {
if (!focusedWindowChangeAllowed) {
if (hwFocusRequest === $I$(16).CLEAR_GLOBAL_FOCUS_OWNER ) {
var size=C$.heavyweightRequests.size$();
hwFocusRequest=((size >= 2) ? C$.heavyweightRequests.get$I(size - 2) : null);
}if (C$.focusedWindowChanged$java_awt_Component$java_awt_Component(heavyweight, (hwFocusRequest != null ) ? hwFocusRequest.heavyweight : nativeFocusedWindow)) {
return 0;
}}manager.enqueueKeyEvents$J$java_awt_Component(time, descendant);
C$.heavyweightRequests.add$O(Clazz_new_($I$(16,1).c$$java_awt_Component$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause,[heavyweight, descendant, temporary, cause]));
return 2;
}}}, 1);

Clazz_newMeth(C$, 'markClearGlobalFocusOwner$',  function () {
var nativeFocusedWindow=C$.getCurrentKeyboardFocusManager$().getNativeFocusedWindow$();
{
var hwFocusRequest=C$.getLastHWRequest$();
if (hwFocusRequest === $I$(16).CLEAR_GLOBAL_FOCUS_OWNER ) {
return null;
}C$.heavyweightRequests.add$O($I$(16).CLEAR_GLOBAL_FOCUS_OWNER);
var activeWindow=((hwFocusRequest != null ) ? $I$(15).getContainingWindow$java_awt_Component(hwFocusRequest.heavyweight) : nativeFocusedWindow);
while (activeWindow != null  && !(Clazz_instanceOf(activeWindow, "javax.swing.JFrame") || Clazz_instanceOf(activeWindow, "javax.swing.JDialog") || Clazz_instanceOf(activeWindow, "java.applet.JSApplet")  ) ){
activeWindow=activeWindow.getParent_NoClientCode$();
}
return activeWindow;
}}, 1);

Clazz_newMeth(C$, 'getCurrentWaitingRequest$java_awt_Component',  function (parent) {
{
var hwFocusRequest=C$.getFirstHWRequest$();
if (hwFocusRequest != null ) {
if (hwFocusRequest.heavyweight === parent ) {
var lwFocusRequest=hwFocusRequest.lightweightRequests.getFirst$();
if (lwFocusRequest != null ) {
return lwFocusRequest.component;
}}}}return null;
});

Clazz_newMeth(C$, 'isAutoFocusTransferEnabled$',  function () {
{
return (C$.heavyweightRequests.size$() == 0) && !C$.disableRestoreFocus && (null == C$.currentLightweightRequests )  ;
}}, 1);

Clazz_newMeth(C$, 'isAutoFocusTransferEnabledFor$java_awt_Component',  function (comp) {
return C$.isAutoFocusTransferEnabled$() && comp.isAutoFocusTransferOnDisposal$() ;
}, 1);

Clazz_newMeth(C$, 'dispatchAndCatchException$Throwable$java_awt_Component$java_awt_event_FocusEvent',  function (ex, comp, event) {
var retEx=null;
try {
comp.dispatchEvent$java_awt_AWTEvent(event);
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"RuntimeException")){
var re = e$$;
{
retEx=re;
}
} else if (Clazz_exceptionOf(e$$,"Error")){
var er = e$$;
{
retEx=er;
}
} else {
throw e$$;
}
}
if (retEx != null ) {
if (ex != null ) {
C$.handleException$Throwable(ex);
}return retEx;
}return ex;
}, 1);

Clazz_newMeth(C$, 'handleException$Throwable',  function (ex) {
ex.printStackTrace$();
}, 1);

Clazz_newMeth(C$, 'processCurrentLightweightRequests$',  function () {
var manager=C$.getCurrentKeyboardFocusManager$();
var localLightweightRequests=null;
var globalFocusOwner=manager.getGlobalFocusOwner$();
if ((globalFocusOwner != null ) && (globalFocusOwner.appContext !== $I$(7).getAppContext$() ) ) {
return;
}{
if (C$.currentLightweightRequests != null ) {
C$.clearingCurrentLightweightRequests=true;
C$.disableRestoreFocus=true;
localLightweightRequests=C$.currentLightweightRequests;
C$.allowSyncFocusRequests=(localLightweightRequests.size$() < 2);
C$.currentLightweightRequests=null;
} else {
return;
}}var caughtEx=null;
try {
if (localLightweightRequests != null ) {
var lastFocusOwner=null;
var currentFocusOwner=null;
for (var iter=localLightweightRequests.iterator$(); iter.hasNext$(); ) {
currentFocusOwner=manager.getGlobalFocusOwner$();
var lwFocusRequest=iter.next$();
if (!iter.hasNext$()) {
C$.disableRestoreFocus=false;
}var currentFocusOwnerEvent=null;
if (currentFocusOwner != null ) {
currentFocusOwnerEvent=Clazz_new_($I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause,[currentFocusOwner, 1005, lwFocusRequest.temporary, lwFocusRequest.component, lwFocusRequest.cause]);
}var newFocusOwnerEvent=Clazz_new_([lwFocusRequest.component, 1004, lwFocusRequest.temporary, currentFocusOwner == null  ? lastFocusOwner : currentFocusOwner, lwFocusRequest.cause],$I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
if (currentFocusOwner != null ) {
(currentFocusOwnerEvent).isPosted=true;
caughtEx=C$.dispatchAndCatchException$Throwable$java_awt_Component$java_awt_event_FocusEvent(caughtEx, currentFocusOwner, currentFocusOwnerEvent);
}(newFocusOwnerEvent).isPosted=true;
caughtEx=C$.dispatchAndCatchException$Throwable$java_awt_Component$java_awt_event_FocusEvent(caughtEx, lwFocusRequest.component, newFocusOwnerEvent);
if (manager.getGlobalFocusOwner$() === lwFocusRequest.component ) {
lastFocusOwner=lwFocusRequest.component;
}}
}} finally {
C$.clearingCurrentLightweightRequests=false;
C$.disableRestoreFocus=false;
localLightweightRequests=null;
C$.allowSyncFocusRequests=true;
}
if (Clazz_instanceOf(caughtEx, "java.lang.RuntimeException")) {
throw caughtEx;
} else if (Clazz_instanceOf(caughtEx, "java.lang.Error")) {
throw caughtEx;
}}, 1);

Clazz_newMeth(C$, 'retargetUnexpectedFocusEvent$java_awt_event_FocusEvent',  function (fe) {
{
if (C$.removeFirstRequest$()) {
return C$.retargetFocusEvent$java_awt_AWTEvent(fe);
}var source=fe.getComponent$();
var opposite=fe.getOppositeComponent$();
var temporary=false;
if (fe.getID$() == 1005 && (opposite == null  || C$.isTemporary$java_awt_Component$java_awt_Component(opposite, source) ) ) {
temporary=true;
}return Clazz_new_([source, fe.getID$(), temporary, opposite, $I$(17).NATIVE_SYSTEM],$I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
}}, 1);

Clazz_newMeth(C$, 'retargetFocusGained$java_awt_event_FocusEvent',  function (fe) {
Clazz_assert(C$, this, function(){return (fe.getID$() == 1004)});
var currentFocusOwner=C$.getCurrentKeyboardFocusManager$().getGlobalFocusOwner$();
var source=fe.getComponent$();
var opposite=fe.getOppositeComponent$();
var nativeSource=C$.getHeavyweight$java_awt_Component(source);
{
var hwFocusRequest=C$.getFirstHWRequest$();
if (hwFocusRequest === $I$(16).CLEAR_GLOBAL_FOCUS_OWNER ) {
return C$.retargetUnexpectedFocusEvent$java_awt_event_FocusEvent(fe);
}if (source != null  && nativeSource == null   && hwFocusRequest != null  ) {
if (source === hwFocusRequest.getFirstLightweightRequest$().component ) {
source=hwFocusRequest.heavyweight;
nativeSource=source;
}}if (hwFocusRequest != null  && nativeSource === hwFocusRequest.heavyweight  ) {
C$.heavyweightRequests.removeFirst$();
var lwFocusRequest=hwFocusRequest.lightweightRequests.removeFirst$();
var newSource=lwFocusRequest.component;
if (currentFocusOwner != null ) {
C$.newFocusOwner=newSource;
}var temporary=(opposite == null  || C$.isTemporary$java_awt_Component$java_awt_Component(newSource, opposite) ) ? false : lwFocusRequest.temporary;
if (hwFocusRequest.lightweightRequests.size$() > 0) {
C$.currentLightweightRequests=hwFocusRequest.lightweightRequests;
$I$(20,"invokeLater$Runnable",[((P$.KeyboardFocusManager$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "KeyboardFocusManager$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
$I$(21).processCurrentLightweightRequests$();
});
})()
), Clazz_new_(P$.KeyboardFocusManager$1.$init$,[this, null]))]);
}return Clazz_new_($I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause,[newSource, 1004, temporary, opposite, lwFocusRequest.cause]);
}if (currentFocusOwner != null  && currentFocusOwner.getContainingWindow$() === source   && (hwFocusRequest == null  || source !== hwFocusRequest.heavyweight  ) ) {
return Clazz_new_([currentFocusOwner, 1004, false, null, $I$(17).ACTIVATION],$I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
}return C$.retargetUnexpectedFocusEvent$java_awt_event_FocusEvent(fe);
}}, 1);

Clazz_newMeth(C$, 'retargetFocusLost$java_awt_event_FocusEvent',  function (fe) {
Clazz_assert(C$, this, function(){return (fe.getID$() == 1005)});
var currentFocusOwner=C$.getCurrentKeyboardFocusManager$().getGlobalFocusOwner$();
var opposite=fe.getOppositeComponent$();
var nativeOpposite=C$.getHeavyweight$java_awt_Component(opposite);
{
var hwFocusRequest=C$.getFirstHWRequest$();
if (hwFocusRequest === $I$(16).CLEAR_GLOBAL_FOCUS_OWNER ) {
if (currentFocusOwner != null ) {
C$.heavyweightRequests.removeFirst$();
return Clazz_new_([currentFocusOwner, 1005, false, null, $I$(17).CLEAR_GLOBAL_FOCUS_OWNER],$I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
}} else if (opposite == null ) {
if (currentFocusOwner != null ) {
return Clazz_new_([currentFocusOwner, 1005, true, null, $I$(17).ACTIVATION],$I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
} else {
return fe;
}} else if (hwFocusRequest != null  && (nativeOpposite === hwFocusRequest.heavyweight  || nativeOpposite == null  && opposite === hwFocusRequest.getFirstLightweightRequest$().component   ) ) {
if (currentFocusOwner == null ) {
return fe;
}var lwFocusRequest=hwFocusRequest.lightweightRequests.getFirst$();
var temporary=C$.isTemporary$java_awt_Component$java_awt_Component(opposite, currentFocusOwner) ? true : lwFocusRequest.temporary;
return Clazz_new_($I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause,[currentFocusOwner, 1005, temporary, lwFocusRequest.component, lwFocusRequest.cause]);
} else if (C$.focusedWindowChanged$java_awt_Component$java_awt_Component(opposite, currentFocusOwner)) {
if (!fe.isTemporary$() && currentFocusOwner != null  ) {
fe=Clazz_new_([currentFocusOwner, 1005, true, opposite, $I$(17).ACTIVATION],$I$(19,1).c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause);
}return fe;
}return C$.retargetUnexpectedFocusEvent$java_awt_event_FocusEvent(fe);
}}, 1);

Clazz_newMeth(C$, 'retargetFocusEvent$java_awt_AWTEvent',  function (event) {
if (C$.clearingCurrentLightweightRequests) {
return event;
}var manager=C$.getCurrentKeyboardFocusManager$();
{
if (C$.newFocusOwner != null  && event.getID$() == 1005 ) {
var fe=event;
if (manager.getGlobalFocusOwner$() === fe.getComponent$()  && fe.getOppositeComponent$() === C$.newFocusOwner  ) {
C$.newFocusOwner=null;
return event;
}}}C$.processCurrentLightweightRequests$();
switch (event.getID$()) {
case 1004:
{
event=C$.retargetFocusGained$java_awt_event_FocusEvent(event);
break;
}case 1005:
{
event=C$.retargetFocusLost$java_awt_event_FocusEvent(event);
break;
}default:
}
return event;
}, 1);

Clazz_newMeth(C$, 'clearMarkers$',  function () {
});

Clazz_newMeth(C$, 'removeFirstRequest$',  function () {
var manager=C$.getCurrentKeyboardFocusManager$();
{
var hwFocusRequest=C$.getFirstHWRequest$();
if (hwFocusRequest != null ) {
C$.heavyweightRequests.removeFirst$();
if (hwFocusRequest.lightweightRequests != null ) {
for (var lwIter=hwFocusRequest.lightweightRequests.iterator$(); lwIter.hasNext$(); ) {
manager.dequeueKeyEvents$J$java_awt_Component(-1, lwIter.next$().component);
}
}}if (C$.heavyweightRequests.size$() == 0) {
manager.clearMarkers$();
}return (C$.heavyweightRequests.size$() > 0);
}}, 1);

Clazz_newMeth(C$, 'removeLastFocusRequest$java_awt_Component',  function (heavyweight) {
var manager=C$.getCurrentKeyboardFocusManager$();
{
var hwFocusRequest=C$.getLastHWRequest$();
if (hwFocusRequest != null  && hwFocusRequest.heavyweight === heavyweight  ) {
C$.heavyweightRequests.removeLast$();
}if (C$.heavyweightRequests.size$() == 0) {
manager.clearMarkers$();
}}}, 1);

Clazz_newMeth(C$, 'focusedWindowChanged$java_awt_Component$java_awt_Component',  function (to, from) {
var wto=$I$(15).getContainingWindow$java_awt_Component(to);
var wfrom=$I$(15).getContainingWindow$java_awt_Component(from);
if (wto == null  && wfrom == null  ) {
return true;
}if (wto == null ) {
return true;
}if (wfrom == null ) {
return true;
}return (wto !== wfrom );
}, 1);

Clazz_newMeth(C$, 'isTemporary$java_awt_Component$java_awt_Component',  function (to, from) {
var wto=$I$(15).getContainingWindow$java_awt_Component(to);
var wfrom=$I$(15).getContainingWindow$java_awt_Component(from);
if (wto == null  && wfrom == null  ) {
return false;
}if (wto == null ) {
return true;
}if (wfrom == null ) {
return false;
}return (wto !== wfrom );
}, 1);

Clazz_newMeth(C$, 'getHeavyweight$java_awt_Component',  function (comp) {
if (comp == null  || comp.getPeer$() == null  ) {
return null;
} else if (Clazz_instanceOf(comp.getPeer$(), "java.awt.peer.LightweightPeer")) {
return comp.getNativeContainer$();
} else {
return comp;
}}, 1);

Clazz_newMeth(C$, 'isProxyActiveImpl$java_awt_event_KeyEvent',  function (e) {
return e.isProxyActive ||false;
}, 1);

Clazz_newMeth(C$, 'isProxyActive$java_awt_event_KeyEvent',  function (e) {
return C$.isProxyActiveImpl$java_awt_event_KeyEvent(e);
}, 1);

Clazz_newMeth(C$, 'getLastHWRequest$',  function () {
{
return (C$.heavyweightRequests.size$() > 0) ? C$.heavyweightRequests.getLast$() : null;
}}, 1);

Clazz_newMeth(C$, 'getFirstHWRequest$',  function () {
{
return (C$.heavyweightRequests.size$() > 0) ? C$.heavyweightRequests.getFirst$() : null;
}}, 1);

Clazz_newMeth(C$, 'checkKFMSecurity',  function () {
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.defaultFocusTraversalKeyPropertyNames=Clazz_array(String, -1, ["forwardDefaultFocusTraversalKeys", "backwardDefaultFocusTraversalKeys", "upCycleDefaultFocusTraversalKeys", "downCycleDefaultFocusTraversalKeys"]);
C$.defaultFocusTraversalKeyStrokes=Clazz_array($I$(3), -2, [Clazz_array($I$(3), -1, [$I$(3).getAWTKeyStroke$I$I$Z(9, 0, false), $I$(3).getAWTKeyStroke$I$I$Z(9, 130, false)]), Clazz_array($I$(3), -1, [$I$(3).getAWTKeyStroke$I$I$Z(9, 65, false), $I$(3).getAWTKeyStroke$I$I$Z(9, 195, false)]), Clazz_array($I$(3), -1, []), Clazz_array($I$(3), -1, [])]);
C$.mostRecentFocusOwners=Clazz_new_($I$(4,1));
C$.heavyweightRequests=Clazz_new_($I$(1,1));
C$.allowSyncFocusRequests=true;
C$.newFocusOwner=null;
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.KeyboardFocusManager, "LightweightFocusRequest", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['temporary'],'O',['component','java.awt.Component','cause','sun.awt.CausedFocusEvent.Cause']]]

Clazz_newMeth(C$, 'c$$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause',  function (component, temporary, cause) {
;C$.$init$.apply(this);
this.component=component;
this.temporary=temporary;
this.cause=cause;
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return "LightweightFocusRequest[component=" + this.component + ",temporary=" + this.temporary + ", cause=" + this.cause + "]" ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.KeyboardFocusManager, "HeavyweightFocusRequest", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['heavyweight','java.awt.Component','lightweightRequests','java.util.LinkedList']]
,['O',['CLEAR_GLOBAL_FOCUS_OWNER','java.awt.KeyboardFocusManager.HeavyweightFocusRequest']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.heavyweight=null;
this.lightweightRequests=null;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause',  function (heavyweight, descendant, temporary, cause) {
;C$.$init$.apply(this);
this.heavyweight=heavyweight;
this.lightweightRequests=Clazz_new_($I$(1,1));
this.addLightweightRequest$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause(descendant, temporary, cause);
}, 1);

Clazz_newMeth(C$, 'addLightweightRequest$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause',  function (descendant, temporary, cause) {
var lastDescendant=((this.lightweightRequests.size$() > 0) ? this.lightweightRequests.getLast$().component : null);
if (descendant !== lastDescendant ) {
this.lightweightRequests.add$O(Clazz_new_($I$(2,1).c$$java_awt_Component$Z$sun_awt_CausedFocusEvent_Cause,[descendant, temporary, cause]));
return true;
} else {
return false;
}});

Clazz_newMeth(C$, 'getFirstLightweightRequest$',  function () {
if (this === C$.CLEAR_GLOBAL_FOCUS_OWNER ) {
return null;
}return this.lightweightRequests.getFirst$();
});

Clazz_newMeth(C$, 'toString',  function () {
var first=true;
var str="HeavyweightFocusRequest[heavweight=" + this.heavyweight + ",lightweightRequests=" ;
if (this.lightweightRequests == null ) {
str+=null;
} else {
str+="[";
for (var lwRequest, $lwRequest = this.lightweightRequests.iterator$(); $lwRequest.hasNext$()&&((lwRequest=($lwRequest.next$())),1);) {
if (first) {
first=false;
} else {
str+=",";
}str+=lwRequest;
}
str+="]";
}str+="]";
return str;
});

C$.$static$=function(){C$.$static$=0;
C$.CLEAR_GLOBAL_FOCUS_OWNER=Clazz_new_(C$);
};
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "LayoutManager");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "LayoutManager2", null, null, 'java.awt.LayoutManager');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},p$2={},I$=[[0,'java.awt.Component','java.awt.Insets','javajs.util.Lst','java.awt.Toolkit','java.awt.event.ContainerEvent','java.awt.Dimension',['java.awt.GraphicsCallback','.PaintCallback'],['java.awt.GraphicsCallback','.PaintAllCallback'],['java.awt.GraphicsCallback','.PaintHeavyweightComponentsCallback'],'java.awt.AWTEventMulticaster','java.awt.event.ContainerListener',['java.awt.Container','.DropTargetEventTargetFilter'],['java.awt.Container','.MouseEventTargetFilter'],'java.awt.LightweightDispatcher','java.awt.KeyboardFocusManager','swingjs.JSMouse','java.awt.event.MouseEvent',['swingjs.JSDnD','.JSDropMouseEvent'],'java.awt.event.MouseWheelEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "LightweightDispatcher", null, null, 'java.awt.event.AWTEventListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.isMouseInNativeContainer=false;
},1);

C$.$fields$=[['Z',['isMouseInNativeContainer'],'J',['eventMask'],'O',['targetLastDown','java.awt.Component','+targetLastKnown','nativeContainer','java.awt.Container','mouseEventTarget','java.awt.Component','+targetLastEntered']]]

Clazz_newMeth(C$, 'c$$java_awt_Container',  function (nativeContainer) {
;C$.$init$.apply(this);
this.nativeContainer=nativeContainer;
this.mouseEventTarget=null;
this.eventMask=0;
}, 1);

Clazz_newMeth(C$, 'dispose$',  function () {
p$2.stopListeningForOtherDrags.apply(this, []);
this.mouseEventTarget=null;
});

Clazz_newMeth(C$, 'enableEvents$J',  function (events) {
(this.eventMask=Long.$or(this.eventMask,(events)));
});

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent',  function (e) {
var ret=false;
if (Clazz_instanceOf(e, "swingjs.JSDnD.JSDropMouseEvent")) {
var sdde=e;
ret=p$2.processDropTargetEvent$sun_awt_dnd_SunDropTargetEvent.apply(this, [sdde]);
} else {
if (Clazz_instanceOf(e, "java.awt.event.MouseEvent") && Long.$ne((Long.$and(this.eventMask,131120)),0 ) ) {
var me=e;
ret=p$2.processMouseEvent$java_awt_event_MouseEvent.apply(this, [me]);
}}return ret;
});

Clazz_newMeth(C$, 'isMouseGrab$java_awt_event_MouseEvent',  function (e) {
var modifiers=e.getModifiersEx$();
if (e.getID$() == 501 || e.getID$() == 502 ) {
switch (e.getButton$()) {
case 1:
modifiers^=1024;
break;
case 2:
modifiers^=2048;
break;
case 3:
modifiers^=4096;
break;
}
}return ((modifiers & (7168)) != 0);
}, p$2);

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent',  function (e) {
var id=e.getID$();
var mouseOver=this.nativeContainer.getMouseEventTarget$I$I$Z(e.getX$(), e.getY$(), true);
p$2.trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent.apply(this, [mouseOver, e]);
var actualTarget;
switch (id) {
case 506:
case 502:
actualTarget=this.targetLastDown;
break;
case 505:
actualTarget=this.targetLastKnown;
break;
default:
actualTarget=$I$(16).getJ2SEventTarget$java_awt_event_MouseEvent(e);
break;
}
this.targetLastKnown=(actualTarget == null  ? mouseOver : actualTarget);
if (id == 501) this.targetLastDown=this.targetLastKnown;
if (actualTarget != null ) this.mouseEventTarget=actualTarget;
 else if (!p$2.isMouseGrab$java_awt_event_MouseEvent.apply(this, [e]) && id != 500 ) {
this.mouseEventTarget=(mouseOver !== this.nativeContainer ) ? mouseOver : null;
}if (this.mouseEventTarget != null ) {
switch (id) {
case 504:
case 505:
if ($I$(16).getJ2SEventTarget$java_awt_event_MouseEvent(e) === this.mouseEventTarget ) this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 501:
this.checkInternalFrameMouseDown$java_awt_JSComponent(e.getSource$());
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 502:
this.targetLastDown=null;
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 500:
this.targetLastDown=null;
if (mouseOver === this.mouseEventTarget ) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(mouseOver, id, e);
}break;
case 503:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
break;
case 506:
if (p$2.isMouseGrab$java_awt_event_MouseEvent.apply(this, [e])) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.mouseEventTarget, id, e);
}break;
case 507:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(mouseOver, id, e);
break;
}
e.consume$();
}return e.isConsumed$();
}, p$2);

Clazz_newMeth(C$, 'processDropTargetEvent$sun_awt_dnd_SunDropTargetEvent',  function (e) {
var id=e.getID$();
var x=e.getX$();
var y=e.getY$();
if (!this.nativeContainer.contains$I$I(x, y)) {
var d=this.nativeContainer.getSize$();
if (d.width <= x) {
x=d.width - 1;
} else if (x < 0) {
x=0;
}if (d.height <= y) {
y=d.height - 1;
} else if (y < 0) {
y=0;
}}var mouseOver=this.nativeContainer.getDropTargetEventTarget$I$I$Z(x, y, true);
p$2.trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent.apply(this, [mouseOver, e]);
if (mouseOver !== this.nativeContainer  && mouseOver != null  ) {
switch (id) {
case 504:
case 505:
break;
default:
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(mouseOver, id, e);
e.consume$();
break;
}
}return e.isConsumed$();
}, p$2);

Clazz_newMeth(C$, 'checkInternalFrameMouseDown$java_awt_JSComponent',  function (c) {
var fv=c.getFrameViewer$();
var top=fv.getTopComponent$();
if (top.getUIClassID$() === "InternalFrameUI" ) try {
(top).setSelected$Z(true);
} catch (e) {
if (Clazz_exceptionOf(e,"java.beans.PropertyVetoException")){
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent',  function (targetOver, e) {
var targetEnter=null;
var id=e.getID$();
if (Clazz_instanceOf(e, "java.awt.ActiveEvent")) {
this.targetLastEntered=null;
return;
}if (id == 505) {
this.isMouseInNativeContainer=false;
p$2.stopListeningForOtherDrags.apply(this, []);
} else if (id != 506 && id != 1500  && this.isMouseInNativeContainer == false  ) {
this.isMouseInNativeContainer=true;
p$2.startListeningForOtherDrags.apply(this, []);
}if (this.isMouseInNativeContainer) {
targetEnter=targetOver;
}if (this.targetLastEntered === targetEnter ) {
return;
}if (this.targetLastEntered != null ) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(this.targetLastEntered, 505, e);
}if (id == 505) {
e.consume$();
}if (targetEnter != null ) {
this.retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent(targetEnter, 504, e);
}if (id == 504) {
e.consume$();
}this.targetLastEntered=targetEnter;
}, p$2);

Clazz_newMeth(C$, 'startListeningForOtherDrags',  function () {
}, p$2);

Clazz_newMeth(C$, 'stopListeningForOtherDrags',  function () {
}, p$2);

Clazz_newMeth(C$, 'eventDispatched$java_awt_AWTEvent',  function (e) {
var isForeignDrag=(Clazz_instanceOf(e, "java.awt.event.MouseEvent")) && (e.id == 506) && (e.getSource$() !== this.nativeContainer )  ;
if (!isForeignDrag) {
return;
}var srcEvent=e;
var me;
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.nativeContainer.getTreeLock$());
{
var srcComponent=srcEvent.getComponent$();
if (!srcComponent.isShowing$()) {
return;
}var c=this.nativeContainer;
while (c != null  && !(Clazz_instanceOf(c, "java.awt.Window")) ){
c=c.getParent_NoClientCode$();
}
if ((c == null ) || (c).isModalBlocked$() ) {
return;
}me=Clazz_new_([this.nativeContainer, 1500, srcEvent.getWhen$(), srcEvent.getModifiersEx$() | srcEvent.getModifiers$(), srcEvent.getX$(), srcEvent.getY$(), srcEvent.getXOnScreen$(), srcEvent.getYOnScreen$(), srcEvent.getClickCount$(), srcEvent.isPopupTrigger$(), srcEvent.getButton$()],$I$(17,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I);
(srcEvent).copyPrivateDataInto$java_awt_AWTEvent(me);
}var targetOver=this.nativeContainer.getMouseEventTarget$I$I$Z(me.getX$(), me.getY$(), true);
p$2.trackMouseEnterExit$java_awt_Component$java_awt_event_MouseEvent.apply(this, [targetOver, me]);
});

Clazz_newMeth(C$, 'retargetMouseEvent$java_awt_Component$I$java_awt_event_MouseEvent',  function (target, id, e) {
if (target == null ) {
return;
}var x=e.getX$();
var y=e.getY$();
var component=target;
var p=(target).秘getUI$().getTargetParent$();
if (p != null ) {
target=component=p;
}for (; component != null  && component !== this.nativeContainer  ; component=component.getParent$()) {
x-=component.x;
y-=component.y;
if ((component).getUIClassID$() === "PopupMenuUI" ) break;
}
var retargeted;
if (component != null ) {
if (Clazz_instanceOf(e, "swingjs.JSDnD.JSDropMouseEvent")) {
retargeted=Clazz_new_($I$(18,1).c$$java_awt_Component$I$I$I,[target, id, x, y]);
} else if (id == 507) {
retargeted=Clazz_new_([target, id, e.getWhen$(), e.getModifiersEx$() | e.getModifiers$(), x, y, e.getXOnScreen$(), e.getYOnScreen$(), e.getClickCount$(), e.isPopupTrigger$(), (e).getScrollType$(), (e).getScrollAmount$(), (e).getWheelRotation$(), (e).getPreciseWheelRotation$()],$I$(19,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I$D);
} else {
retargeted=Clazz_new_([target, id, e.getWhen$(), e.getModifiersEx$() | e.getModifiers$(), x, y, e.getXOnScreen$(), e.getYOnScreen$(), e.getClickCount$(), e.isPopupTrigger$(), e.getButton$()],$I$(17,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I);
}(e).copyPrivateDataInto$java_awt_AWTEvent(retargeted);
if (target === this.nativeContainer ) {
(target).dispatchEventToSelf$java_awt_AWTEvent(retargeted);
} else {
if (this.nativeContainer.modalComp != null ) {
if ((this.nativeContainer.modalComp).isAncestorOf$java_awt_Component(target)) {
target.dispatchEvent$java_awt_AWTEvent(retargeted);
} else {
e.consume$();
}} else {
target.dispatchEvent$java_awt_AWTEvent(retargeted);
$I$(16).setPropagation$java_awt_Component$java_awt_event_MouseEvent(target, e);
}}}});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Paint", null, null, 'java.awt.Transparency');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:09 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "Point", null, 'java.awt.geom.Point2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['x','y']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$I.apply(this, [0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Point',  function (p) {
C$.c$$I$I.apply(this, [p.x, p.y]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (x, y) {
Clazz_super_(C$, this);
this.x=x;
this.y=y;
}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'getLocation$',  function () {
return Clazz_new_(C$.c$$I$I,[this.x, this.y]);
});

Clazz_newMeth(C$, 'setLocation$java_awt_Point',  function (p) {
this.setLocation$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'setLocation$I$I',  function (x, y) {
this.move$I$I(x, y);
});

Clazz_newMeth(C$, 'setLocation$D$D',  function (x, y) {
this.x=(Math.floor(x + 0.5)|0);
this.y=(Math.floor(y + 0.5)|0);
});

Clazz_newMeth(C$, 'move$I$I',  function (x, y) {
this.x=x;
this.y=y;
});

Clazz_newMeth(C$, 'translate$I$I',  function (dx, dy) {
this.x+=dx;
this.y+=dy;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Point")) {
var pt=obj;
return (this.x == pt.x) && (this.y == pt.y) ;
}return C$.superclazz.prototype.equals$O.apply(this, [obj]);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[x=" + this.x + ",y=" + this.y + "]" ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "Queue");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['head','java.awt.EventQueueItem','+tail']]]

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.Point','java.awt.Dimension',['java.awt.geom.Rectangle2D','.Double'],'java.awt.geom.Rectangle2D']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Rectangle", null, 'java.awt.geom.Rectangle2D', 'java.awt.Shape');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['x','y','width','height']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$I$I$I.apply(this, [0, 0, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Rectangle',  function (r) {
C$.c$$I$I$I$I.apply(this, [r.x, r.y, r.width, r.height]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (x, y, width, height) {
Clazz_super_(C$, this);
this.x=x;
this.y=y;
this.width=width;
this.height=height;
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (width, height) {
C$.c$$I$I$I$I.apply(this, [0, 0, width, height]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Point$java_awt_Dimension',  function (p, d) {
C$.c$$I$I$I$I.apply(this, [p.x, p.y, d.width, d.height]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Point',  function (p) {
C$.c$$I$I$I$I.apply(this, [p.x, p.y, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Dimension',  function (d) {
C$.c$$I$I$I$I.apply(this, [0, 0, d.width, d.height]);
}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'getBounds$',  function () {
return Clazz_new_(C$.c$$I$I$I$I,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'getBounds2D$',  function () {
return Clazz_new_(C$.c$$I$I$I$I,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'setBounds$java_awt_Rectangle',  function (r) {
this.reshape$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I',  function (x, y, width, height) {
this.reshape$I$I$I$I(x, y, width, height);
});

Clazz_newMeth(C$, 'setRect$D$D$D$D',  function (x, y, width, height) {
var newx;
var newy;
var neww;
var newh;
if (x > 4.294967294E9 ) {
newx=2147483647;
neww=-1;
} else {
newx=C$.clip$D$Z(x, false);
if (width >= 0 ) width+=x - newx;
neww=C$.clip$D$Z(width, width >= 0 );
}if (y > 4.294967294E9 ) {
newy=2147483647;
newh=-1;
} else {
newy=C$.clip$D$Z(y, false);
if (height >= 0 ) height+=y - newy;
newh=C$.clip$D$Z(height, height >= 0 );
}this.reshape$I$I$I$I(newx, newy, neww, newh);
});

Clazz_newMeth(C$, 'clip$D$Z',  function (v, doceil) {
if (v <= -2147483648 ) {
return -2147483648;
}if (v >= 2147483647 ) {
return 2147483647;
}return ((doceil ? Math.ceil(v) : Math.floor(v))|0);
}, 1);

Clazz_newMeth(C$, 'reshape$I$I$I$I',  function (x, y, width, height) {
this.x=x;
this.y=y;
this.width=width;
this.height=height;
});

Clazz_newMeth(C$, 'getLocation$',  function () {
return Clazz_new_($I$(1,1).c$$I$I,[this.x, this.y]);
});

Clazz_newMeth(C$, 'setLocation$java_awt_Point',  function (p) {
this.setLocation$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'setLocation$I$I',  function (x, y) {
this.move$I$I(x, y);
});

Clazz_newMeth(C$, 'move$I$I',  function (x, y) {
this.x=x;
this.y=y;
});

Clazz_newMeth(C$, 'translate$I$I',  function (dx, dy) {
var oldv=this.x;
var newv=oldv + dx;
if (dx < 0) {
if (newv > oldv) {
if (this.width >= 0) {
this.width+=newv - -2147483648;
}newv=-2147483648;
}} else {
if (newv < oldv) {
if (this.width >= 0) {
this.width+=newv - 2147483647;
if (this.width < 0) this.width=2147483647;
}newv=2147483647;
}}this.x=newv;
oldv=this.y;
newv=oldv + dy;
if (dy < 0) {
if (newv > oldv) {
if (this.height >= 0) {
this.height+=newv - -2147483648;
}newv=-2147483648;
}} else {
if (newv < oldv) {
if (this.height >= 0) {
this.height+=newv - 2147483647;
if (this.height < 0) this.height=2147483647;
}newv=2147483647;
}}this.y=newv;
});

Clazz_newMeth(C$, 'getSize$',  function () {
return Clazz_new_($I$(2,1).c$$I$I,[this.width, this.height]);
});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension',  function (d) {
this.setSize$I$I(d.width, d.height);
});

Clazz_newMeth(C$, 'setSize$I$I',  function (width, height) {
this.resize$I$I(width, height);
});

Clazz_newMeth(C$, 'resize$I$I',  function (width, height) {
this.width=width;
this.height=height;
});

Clazz_newMeth(C$, 'contains$java_awt_Point',  function (p) {
return this.contains$I$I(p.x, p.y);
});

Clazz_newMeth(C$, 'contains$I$I',  function (x, y) {
return this.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'contains$java_awt_Rectangle',  function (r) {
return this.contains$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'contains$I$I$I$I',  function (X, Y, W, H) {
return C$.contains$I$I$I$I$I$I$I$I(this.x, this.y, this.width, this.height, X, Y, W, H);
});

Clazz_newMeth(C$, 'contains$I$I$I$I$I$I$I$I',  function (tx, ty, tw, th, X, Y, W, H) {
var w=tw;
var h=th;
if ((w | h | W | H ) < 0) {
return false;
}var x=tx;
var y=ty;
if (X < x || Y < y ) {
return false;
}w+=x;
W+=X;
if (W <= X) {
if (w >= x || W > w ) return false;
} else {
if (w >= x && W > w ) return false;
}h+=y;
H+=Y;
if (H <= Y) {
if (h >= y || H > h ) return false;
} else {
if (h >= y && H > h ) return false;
}return true;
}, 1);

Clazz_newMeth(C$, 'contains$IA$I$I$I$I',  function (is, X, Y, W, H) {
return C$.contains$I$I$I$I$I$I$I$I(is[0], is[1], is[2], is[3], X, Y, W, H);
}, 1);

Clazz_newMeth(C$, 'inside$I$I',  function (X, Y) {
var w=this.width;
var h=this.height;
if ((w | h) < 0) {
return false;
}var x=this.x;
var y=this.y;
if (X < x || Y < y ) {
return false;
}w+=x;
h+=y;
return ((w < x || w > X ) && (h < y || h > Y ) );
});

Clazz_newMeth(C$, 'intersects$java_awt_Rectangle',  function (r) {
var tw=this.width;
var th=this.height;
var rw=r.width;
var rh=r.height;
if (rw <= 0 || rh <= 0  || tw <= 0  || th <= 0 ) {
return false;
}var tx=this.x;
var ty=this.y;
var rx=r.x;
var ry=r.y;
rw+=rx;
rh+=ry;
tw+=tx;
th+=ty;
return ((rw < rx || rw > tx ) && (rh < ry || rh > ty ) && (tw < tx || tw > rx ) && (th < ty || th > ry )  );
});

Clazz_newMeth(C$, 'intersection$java_awt_Rectangle',  function (r) {
var tx1=this.x;
var ty1=this.y;
var rx1=r.x;
var ry1=r.y;
var tx2=tx1;
(tx2=Long.$add(tx2,(this.width)));
var ty2=ty1;
(ty2=Long.$add(ty2,(this.height)));
var rx2=rx1;
(rx2=Long.$add(rx2,(r.width)));
var ry2=ry1;
(ry2=Long.$add(ry2,(r.height)));
if (tx1 < rx1) tx1=rx1;
if (ty1 < ry1) ty1=ry1;
if (Long.$gt(tx2,rx2 )) tx2=rx2;
if (Long.$gt(ty2,ry2 )) ty2=ry2;
(tx2=Long.$sub(tx2,(tx1)));
(ty2=Long.$sub(ty2,(ty1)));
if (Long.$lt(tx2,-2147483648 )) tx2=-2147483648;
if (Long.$lt(ty2,-2147483648 )) ty2=-2147483648;
return Clazz_new_(C$.c$$I$I$I$I,[tx1, ty1, Long.$ival(tx2), Long.$ival(ty2)]);
});

Clazz_newMeth(C$, 'union$java_awt_Rectangle',  function (r) {
var tx2=this.width;
var ty2=this.height;
if (Long.$lt((Long.$or(tx2,ty2)),0 )) {
return Clazz_new_(C$.c$$java_awt_Rectangle,[r]);
}var rx2=r.width;
var ry2=r.height;
if (Long.$lt((Long.$or(rx2,ry2)),0 )) {
return Clazz_new_(C$.c$$java_awt_Rectangle,[this]);
}var tx1=this.x;
var ty1=this.y;
(tx2=Long.$add(tx2,(tx1)));
(ty2=Long.$add(ty2,(ty1)));
var rx1=r.x;
var ry1=r.y;
(rx2=Long.$add(rx2,(rx1)));
(ry2=Long.$add(ry2,(ry1)));
if (tx1 > rx1) tx1=rx1;
if (ty1 > ry1) ty1=ry1;
if (Long.$lt(tx2,rx2 )) tx2=rx2;
if (Long.$lt(ty2,ry2 )) ty2=ry2;
(tx2=Long.$sub(tx2,(tx1)));
(ty2=Long.$sub(ty2,(ty1)));
if (Long.$gt(tx2,2147483647 )) tx2=2147483647;
if (Long.$gt(ty2,2147483647 )) ty2=2147483647;
return Clazz_new_(C$.c$$I$I$I$I,[tx1, ty1, Long.$ival(tx2), Long.$ival(ty2)]);
});

Clazz_newMeth(C$, 'add$I$I',  function (newx, newy) {
if ((this.width | this.height) < 0) {
this.x=newx;
this.y=newy;
this.width=this.height=0;
return;
}var x1=this.x;
var y1=this.y;
var x2=this.width;
var y2=this.height;
(x2=Long.$add(x2,(x1)));
(y2=Long.$add(y2,(y1)));
if (x1 > newx) x1=newx;
if (y1 > newy) y1=newy;
if (Long.$lt(x2,newx )) x2=newx;
if (Long.$lt(y2,newy )) y2=newy;
(x2=Long.$sub(x2,(x1)));
(y2=Long.$sub(y2,(y1)));
if (Long.$gt(x2,2147483647 )) x2=2147483647;
if (Long.$gt(y2,2147483647 )) y2=2147483647;
this.reshape$I$I$I$I(x1, y1, Long.$ival(x2), Long.$ival(y2));
});

Clazz_newMeth(C$, 'add$java_awt_Point',  function (pt) {
this.add$I$I(pt.x, pt.y);
});

Clazz_newMeth(C$, 'add$java_awt_Rectangle',  function (r) {
var tx2=this.width;
var ty2=this.height;
if (Long.$lt((Long.$or(tx2,ty2)),0 )) {
this.reshape$I$I$I$I(r.x, r.y, r.width, r.height);
}var rx2=r.width;
var ry2=r.height;
if (Long.$lt((Long.$or(rx2,ry2)),0 )) {
return;
}var tx1=this.x;
var ty1=this.y;
(tx2=Long.$add(tx2,(tx1)));
(ty2=Long.$add(ty2,(ty1)));
var rx1=r.x;
var ry1=r.y;
(rx2=Long.$add(rx2,(rx1)));
(ry2=Long.$add(ry2,(ry1)));
if (tx1 > rx1) tx1=rx1;
if (ty1 > ry1) ty1=ry1;
if (Long.$lt(tx2,rx2 )) tx2=rx2;
if (Long.$lt(ty2,ry2 )) ty2=ry2;
(tx2=Long.$sub(tx2,(tx1)));
(ty2=Long.$sub(ty2,(ty1)));
if (Long.$gt(tx2,2147483647 )) tx2=2147483647;
if (Long.$gt(ty2,2147483647 )) ty2=2147483647;
this.reshape$I$I$I$I(tx1, ty1, Long.$ival(tx2), Long.$ival(ty2));
});

Clazz_newMeth(C$, 'grow$I$I',  function (h, v) {
var x0=this.x;
var y0=this.y;
var x1=this.width;
var y1=this.height;
(x1=Long.$add(x1,(x0)));
(y1=Long.$add(y1,(y0)));
(x0=Long.$sub(x0,(h)));
(y0=Long.$sub(y0,(v)));
(x1=Long.$add(x1,(h)));
(y1=Long.$add(y1,(v)));
if (Long.$lt(x1,x0 )) {
(x1=Long.$sub(x1,(x0)));
if (Long.$lt(x1,-2147483648 )) x1=-2147483648;
if (Long.$lt(x0,-2147483648 )) x0=-2147483648;
 else if (Long.$gt(x0,2147483647 )) x0=2147483647;
} else {
if (Long.$lt(x0,-2147483648 )) x0=-2147483648;
 else if (Long.$gt(x0,2147483647 )) x0=2147483647;
(x1=Long.$sub(x1,(x0)));
if (Long.$lt(x1,-2147483648 )) x1=-2147483648;
 else if (Long.$gt(x1,2147483647 )) x1=2147483647;
}if (Long.$lt(y1,y0 )) {
(y1=Long.$sub(y1,(y0)));
if (Long.$lt(y1,-2147483648 )) y1=-2147483648;
if (Long.$lt(y0,-2147483648 )) y0=-2147483648;
 else if (Long.$gt(y0,2147483647 )) y0=2147483647;
} else {
if (Long.$lt(y0,-2147483648 )) y0=-2147483648;
 else if (Long.$gt(y0,2147483647 )) y0=2147483647;
(y1=Long.$sub(y1,(y0)));
if (Long.$lt(y1,-2147483648 )) y1=-2147483648;
 else if (Long.$gt(y1,2147483647 )) y1=2147483647;
}this.reshape$I$I$I$I(Long.$ival(x0), Long.$ival(y0), Long.$ival(x1), Long.$ival(y1));
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return (this.width <= 0) || (this.height <= 0) ;
});

Clazz_newMeth(C$, 'outcode$D$D',  function (x, y) {
var out=0;
if (this.width <= 0) {
out|=5;
} else if (x < this.x ) {
out|=1;
} else if (x > this.x + this.width ) {
out|=4;
}if (this.height <= 0) {
out|=10;
} else if (y < this.y ) {
out|=2;
} else if (y > this.y + this.height ) {
out|=8;
}return out;
});

Clazz_newMeth(C$, 'createIntersection$java_awt_geom_Rectangle2D',  function (r) {
if (Clazz_instanceOf(r, "java.awt.Rectangle")) {
return this.intersection$java_awt_Rectangle(r);
}var dest=Clazz_new_($I$(3,1));
$I$(4).intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'createUnion$java_awt_geom_Rectangle2D',  function (r) {
if (Clazz_instanceOf(r, "java.awt.Rectangle")) {
return this.union$java_awt_Rectangle(r);
}var dest=Clazz_new_($I$(3,1));
$I$(4).union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (Clazz_instanceOf(obj, "java.awt.Rectangle")) {
var r=obj;
return ((this.x == r.x) && (this.y == r.y) && (this.width == r.width) && (this.height == r.height)  );
}return C$.superclazz.prototype.equals$O.apply(this, [obj]);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[x=" + this.x + ",y=" + this.y + ",width=" + this.width + ",height=" + this.height + "]" ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.util.HashMap','InternalError',['java.awt.RenderingHints','.SunKey'],['java.awt.RenderingHints','.Value'],['java.awt.RenderingHints','.LCDContrastKey'],'java.util.Collections']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "RenderingHints", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.util.Map', 'Cloneable']);
C$.$classes$=[['Key',1033],['SunKey',9],['Value',9],['LCDContrastKey',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.hintmap=Clazz_new_($I$(1,1).c$$I,[7]);
},1);

C$.$fields$=[['O',['hintmap','java.util.HashMap']]
,['O',['KEY_RENDERING','java.awt.RenderingHints.SunKey','VALUE_RENDER_SPEED','java.lang.Object','+VALUE_RENDER_QUALITY','+VALUE_RENDER_DEFAULT','KEY_ANTIALIASING','java.awt.RenderingHints.SunKey','VALUE_ANTIALIAS_ON','java.lang.Object','+VALUE_ANTIALIAS_OFF','+VALUE_ANTIALIAS_DEFAULT','KEY_FRACTIONALMETRICS','java.awt.RenderingHints.SunKey','VALUE_FRACTIONALMETRICS_ON','java.lang.Object','+VALUE_FRACTIONALMETRICS_OFF','+VALUE_FRACTIONALMETRICS_DEFAULT','KEY_DITHERING','java.awt.RenderingHints.SunKey','VALUE_DITHER_ENABLE','java.lang.Object','+VALUE_DITHER_DISABLE','+VALUE_DITHER_DEFAULT','KEY_INTERPOLATION','java.awt.RenderingHints.SunKey','VALUE_INTERPOLATION_NEAREST_NEIGHBOR','java.lang.Object','+VALUE_INTERPOLATION_BILINEAR','+VALUE_INTERPOLATION_BICUBIC','KEY_ALPHA_INTERPOLATION','java.awt.RenderingHints.SunKey','VALUE_ALPHA_INTERPOLATION_SPEED','java.lang.Object','+VALUE_ALPHA_INTERPOLATION_QUALITY','+VALUE_ALPHA_INTERPOLATION_DEFAULT','KEY_COLOR_RENDERING','java.awt.RenderingHints.SunKey','VALUE_COLOR_RENDER_SPEED','java.lang.Object','+VALUE_COLOR_RENDER_QUALITY','+VALUE_COLOR_RENDER_DEFAULT','KEY_STROKE_CONTROL','java.awt.RenderingHints.SunKey','VALUE_STROKE_DEFAULT','java.lang.Object','+VALUE_STROKE_NORMALIZE','+VALUE_STROKE_PURE','KEY_TEXT_ANTIALIASING','java.awt.RenderingHints.SunKey','VALUE_TEXT_ANTIALIAS_ON','java.lang.Object','+VALUE_TEXT_ANTIALIAS_OFF','+VALUE_TEXT_ANTIALIAS_DEFAULT','+VALUE_TEXT_ANTIALIAS_GASP','+VALUE_TEXT_ANTIALIAS_LCD_HRGB','+VALUE_TEXT_ANTIALIAS_LCD_HBGR','+VALUE_TEXT_ANTIALIAS_LCD_VRGB','+VALUE_TEXT_ANTIALIAS_LCD_VBGR','KEY_TEXT_ANTIALIAS_LCD_CONTRAST','java.awt.RenderingHints.Key','+KEY_TEXT_LCD_CONTRAST']]]

Clazz_newMeth(C$, 'c$$java_util_Map',  function (init) {
;C$.$init$.apply(this);
if (init != null ) {
this.hintmap.putAll$java_util_Map(init);
}}, 1);

Clazz_newMeth(C$, 'c$$java_awt_RenderingHints_Key$O',  function (key, value) {
;C$.$init$.apply(this);
if (key != null ) this.hintmap.put$O$O(key, value);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.hintmap.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.hintmap.isEmpty$();
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
return this.hintmap.containsKey$O(key);
});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
return this.hintmap.containsValue$O(value);
});

Clazz_newMeth(C$, 'get$O',  function (key) {
return this.hintmap.get$O(key);
});

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
if (!(key).isCompatibleValue$O(value)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[value + " incompatible with " + key ]);
}return this.hintmap.put$O$O(key, value);
});

Clazz_newMeth(C$, 'add$java_awt_RenderingHints',  function (hints) {
this.hintmap.putAll$java_util_Map(hints.hintmap);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.hintmap.clear$();
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
return this.hintmap.remove$O(key);
});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (m) {
if (Clazz_getClass(C$).isInstance$O(m)) {
for (var entry, $entry = m.entrySet$().iterator$(); $entry.hasNext$()&&((entry=($entry.next$())),1);) this.hintmap.put$O$O(entry.getKey$(), entry.getValue$());

} else {
for (var entry, $entry = m.entrySet$().iterator$(); $entry.hasNext$()&&((entry=($entry.next$())),1);) this.put$O$O(entry.getKey$(), entry.getValue$());

}});

Clazz_newMeth(C$, 'keySet$',  function () {
return this.hintmap.keySet$();
});

Clazz_newMeth(C$, 'values$',  function () {
return this.hintmap.values$();
});

Clazz_newMeth(C$, 'entrySet$',  function () {
return $I$(6).unmodifiableMap$java_util_Map(this.hintmap).entrySet$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (Clazz_instanceOf(o, "java.awt.RenderingHints")) {
return this.hintmap.equals$O((o).hintmap);
} else if (Clazz_instanceOf(o, "java.util.Map")) {
return this.hintmap.equals$O(o);
}return false;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.hintmap.hashCode$();
});

Clazz_newMeth(C$, 'clone$',  function () {
var rh;
try {
rh=Clazz_clone(this);
if (this.hintmap != null ) {
rh.hintmap=this.hintmap.clone$();
}} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(2,1));
} else {
throw e;
}
}
return rh;
});

Clazz_newMeth(C$, 'toString',  function () {
if (this.hintmap == null ) {
return this.getClass$().getName$() + "@" + Integer.toHexString$I(this.hashCode$()) + " (0 hints)" ;
}return this.hintmap.toString();
});

C$.$static$=function(){C$.$static$=0;
C$.KEY_RENDERING=Clazz_new_($I$(3,1).c$$I$S,[0, "Global rendering quality key"]);
C$.VALUE_RENDER_SPEED=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_RENDERING, 1, "Fastest rendering methods"]);
C$.VALUE_RENDER_QUALITY=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_RENDERING, 2, "Highest quality rendering methods"]);
C$.VALUE_RENDER_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_RENDERING, 0, "Default rendering methods"]);
C$.KEY_ANTIALIASING=Clazz_new_($I$(3,1).c$$I$S,[1, "Global antialiasing enable key"]);
C$.VALUE_ANTIALIAS_ON=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ANTIALIASING, 2, "Antialiased rendering mode"]);
C$.VALUE_ANTIALIAS_OFF=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ANTIALIASING, 1, "Nonantialiased rendering mode"]);
C$.VALUE_ANTIALIAS_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ANTIALIASING, 0, "Default antialiasing rendering mode"]);
C$.KEY_FRACTIONALMETRICS=Clazz_new_($I$(3,1).c$$I$S,[3, "Fractional metrics enable key"]);
C$.VALUE_FRACTIONALMETRICS_ON=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_FRACTIONALMETRICS, 2, "Fractional text metrics mode"]);
C$.VALUE_FRACTIONALMETRICS_OFF=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_FRACTIONALMETRICS, 1, "Integer text metrics mode"]);
C$.VALUE_FRACTIONALMETRICS_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_FRACTIONALMETRICS, 0, "Default fractional text metrics mode"]);
C$.KEY_DITHERING=Clazz_new_($I$(3,1).c$$I$S,[4, "Dithering quality key"]);
C$.VALUE_DITHER_ENABLE=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_DITHERING, 2, "Dithered rendering mode"]);
C$.VALUE_DITHER_DISABLE=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_DITHERING, 1, "Nondithered rendering mode"]);
C$.VALUE_DITHER_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_DITHERING, 0, "Default dithering mode"]);
C$.KEY_INTERPOLATION=Clazz_new_($I$(3,1).c$$I$S,[5, "Image interpolation method key"]);
C$.VALUE_INTERPOLATION_NEAREST_NEIGHBOR=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_INTERPOLATION, 0, "Nearest Neighbor image interpolation mode"]);
C$.VALUE_INTERPOLATION_BILINEAR=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_INTERPOLATION, 1, "Bilinear image interpolation mode"]);
C$.VALUE_INTERPOLATION_BICUBIC=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_INTERPOLATION, 2, "Bicubic image interpolation mode"]);
C$.KEY_ALPHA_INTERPOLATION=Clazz_new_($I$(3,1).c$$I$S,[6, "Alpha blending interpolation method key"]);
C$.VALUE_ALPHA_INTERPOLATION_SPEED=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ALPHA_INTERPOLATION, 1, "Fastest alpha blending methods"]);
C$.VALUE_ALPHA_INTERPOLATION_QUALITY=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ALPHA_INTERPOLATION, 2, "Highest quality alpha blending methods"]);
C$.VALUE_ALPHA_INTERPOLATION_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_ALPHA_INTERPOLATION, 0, "Default alpha blending methods"]);
C$.KEY_COLOR_RENDERING=Clazz_new_($I$(3,1).c$$I$S,[7, "Color rendering quality key"]);
C$.VALUE_COLOR_RENDER_SPEED=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_COLOR_RENDERING, 1, "Fastest color rendering mode"]);
C$.VALUE_COLOR_RENDER_QUALITY=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_COLOR_RENDERING, 2, "Highest quality color rendering mode"]);
C$.VALUE_COLOR_RENDER_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_COLOR_RENDERING, 0, "Default color rendering mode"]);
C$.KEY_STROKE_CONTROL=Clazz_new_($I$(3,1).c$$I$S,[8, "Stroke normalization control key"]);
C$.VALUE_STROKE_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_STROKE_CONTROL, 0, "Default stroke normalization"]);
C$.VALUE_STROKE_NORMALIZE=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_STROKE_CONTROL, 1, "Normalize strokes for consistent rendering"]);
C$.VALUE_STROKE_PURE=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_STROKE_CONTROL, 2, "Pure stroke conversion for accurate paths"]);
C$.KEY_TEXT_ANTIALIASING=Clazz_new_($I$(3,1).c$$I$S,[2, "Text-specific antialiasing enable key"]);
C$.VALUE_TEXT_ANTIALIAS_ON=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 2, "Antialiased text mode"]);
C$.VALUE_TEXT_ANTIALIAS_OFF=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 1, "Nonantialiased text mode"]);
C$.VALUE_TEXT_ANTIALIAS_DEFAULT=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 0, "Default antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_GASP=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 3, "gasp antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_HRGB=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 4, "LCD HRGB antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_HBGR=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 5, "LCD HBGR antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_VRGB=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 6, "LCD VRGB antialiasing text mode"]);
C$.VALUE_TEXT_ANTIALIAS_LCD_VBGR=Clazz_new_($I$(4,1).c$$java_awt_RenderingHints_SunKey$I$S,[C$.KEY_TEXT_ANTIALIASING, 7, "LCD VBGR antialiasing text mode"]);
C$.KEY_TEXT_ANTIALIAS_LCD_CONTRAST=Clazz_new_($I$(5,1).c$$I$S,[100, "Text-specific LCD contrast key"]);
C$.KEY_TEXT_LCD_CONTRAST=C$.KEY_TEXT_ANTIALIAS_LCD_CONTRAST;
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.RenderingHints, "Key", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['privatekey']]
,['O',['identitymap','java.util.HashMap']]]

Clazz_newMeth(C$, 'getIdentity',  function () {
return this.getClass$().getName$() + "@" + Integer.toHexString$I(System.identityHashCode$O(this.getClass$())) + ":" + Integer.toHexString$I(this.privatekey) ;
}, p$1);

Clazz_newMeth(C$, 'recordIdentity$java_awt_RenderingHints_Key',  function (k) {
var identity=p$1.getIdentity.apply(k, []);
var otherref=C$.identitymap.get$O(identity);
if (otherref != null ) {
var otherkey=otherref;
if (otherkey != null  && otherkey.getClass$() === k.getClass$()  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[identity + " already registered"]);
}}C$.identitymap.put$O$O(identity, k);
}, p$1);

Clazz_newMeth(C$, 'c$$I',  function (privatekey) {
;C$.$init$.apply(this);
this.privatekey=privatekey;
p$1.recordIdentity$java_awt_RenderingHints_Key.apply(this, [this]);
}, 1);

Clazz_newMeth(C$, 'intKey$',  function () {
return this.privatekey;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return C$.superclazz.prototype.hashCode$.apply(this, []);
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return this === o ;
});

C$.$static$=function(){C$.$static$=0;
C$.identitymap=Clazz_new_($I$(1,1).c$$I,[17]);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.RenderingHints, "SunKey", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.awt.RenderingHints','.Key']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['description']]]

Clazz_newMeth(C$, 'c$$I$S',  function (privatekey, description) {
;C$.superclazz.c$$I.apply(this,[privatekey]);C$.$init$.apply(this);
this.description=description;
}, 1);

Clazz_newMeth(C$, 'getIndex$',  function () {
return this.privatekey;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.description;
});

Clazz_newMeth(C$, 'isCompatibleValue$O',  function (val) {
if (Clazz_instanceOf(val, "java.awt.RenderingHints.Value")) {
return (val).isCompatibleKey$java_awt_RenderingHints_SunKey(this);
}return false;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.RenderingHints, "Value", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index'],'S',['description'],'O',['myKey','java.awt.RenderingHints.SunKey']]
,['O',['ValueObjects','java.awt.RenderingHints.Value[][]']]]

Clazz_newMeth(C$, 'register$java_awt_RenderingHints_SunKey$java_awt_RenderingHints_Value',  function (key, value) {
var kindex=key.getIndex$();
var vindex=value.getIndex$();
if (C$.ValueObjects[kindex][vindex] != null ) {
throw Clazz_new_($I$(2,1).c$$S,["duplicate index: " + vindex]);
}C$.ValueObjects[kindex][vindex]=value;
}, 1);

Clazz_newMeth(C$, 'get$I$I',  function (keyindex, valueindex) {
return C$.ValueObjects[keyindex][valueindex];
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_RenderingHints_SunKey$I$S',  function (key, index, description) {
;C$.$init$.apply(this);
this.myKey=key;
this.index=index;
this.description=description;
C$.register$java_awt_RenderingHints_SunKey$java_awt_RenderingHints_Value(key, this);
}, 1);

Clazz_newMeth(C$, 'getIndex$',  function () {
return this.index;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.description;
});

Clazz_newMeth(C$, 'isCompatibleKey$java_awt_RenderingHints_SunKey',  function (k) {
return this.myKey === k ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.description.hashCode$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return this === o ;
});

C$.$static$=function(){C$.$static$=0;
C$.ValueObjects=Clazz_array(C$, [9, 8]);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.RenderingHints, "LCDContrastKey", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.awt.RenderingHints','.SunKey']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I$S',  function (privatekey, description) {
;C$.superclazz.c$$I$S.apply(this,[privatekey, description]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'isCompatibleValue$O',  function (val) {
if (Clazz_instanceOf(val, "java.lang.Integer")) {
var ival=(val).intValue$();
return ival >= 100 && ival <= 250 ;
}return false;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.Toolkit','sun.awt.SunToolkit']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SentEvent", null, 'java.awt.AWTEvent', 'java.awt.ActiveEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['dispatched'],'O',['nested','java.awt.AWTEvent','toNotify','sun.awt.AppContext']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$java_awt_AWTEvent.apply(this, [null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_AWTEvent',  function (nested) {
C$.c$$java_awt_AWTEvent$sun_awt_AppContext.apply(this, [nested, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_AWTEvent$sun_awt_AppContext',  function (nested, toNotify) {
;C$.superclazz.c$$O$I.apply(this,[(nested != null ) ? nested.getSource$() : $I$(1).getDefaultToolkit$(), 1007]);C$.$init$.apply(this);
this.nested=nested;
this.toNotify=toNotify;
}, 1);

Clazz_newMeth(C$, 'dispatch$',  function () {
try {
if (this.nested != null ) {
$I$(1).getEventQueue$().dispatchEvent$java_awt_AWTEvent(this.nested);
}} finally {
this.dispatched=true;
if (this.toNotify != null ) {
$I$(2,"postEvent$sun_awt_AppContext$java_awt_AWTEvent",[this.toNotify, Clazz_new_(C$)]);
}{
this.notifyAll$();
}}
});

Clazz_newMeth(C$, 'dispose$',  function () {
this.dispatched=true;
if (this.toNotify != null ) {
$I$(2,"postEvent$sun_awt_AppContext$java_awt_AWTEvent",[this.toNotify, Clazz_new_(C$)]);
}{
this.notifyAll$();
}});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Shape");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Stroke");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "TextComponent");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'java.awt.AWTEventMulticaster','java.util.HashMap','sun.awt.NullComponentPeer','java.awt.Insets','swingjs.JSToolkit','java.awt.Cursor','java.awt.Dimension',['java.awt.Toolkit','.SelectiveAWTEventListener'],['java.awt.Toolkit','.ToolkitEventMulticaster'],'java.awt.event.AWTEventListener','java.awt.event.AWTEventListenerProxy','java.util.ArrayList','java.beans.PropertyChangeSupport']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Toolkit", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['ToolkitEventMulticaster',10],['SelectiveAWTEventListener',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.desktopProperties=Clazz_new_($I$(2,1));
this.desktopPropsSupport=C$.createPropertyChangeSupport$java_awt_Toolkit(this);
this.calls=Clazz_array(Integer.TYPE, [32]);
this.eventListener=null;
this.listener2SelectiveListener=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['O',['desktopProperties','java.util.Map','desktopPropsSupport','java.beans.PropertyChangeSupport','calls','int[]','eventListener','java.awt.event.AWTEventListener','listener2SelectiveListener','java.util.HashMap']]
,['J',['enabledOnToolkitMask'],'O',['lightweightMarker','java.awt.peer.LightweightPeer','toolkit','java.awt.Toolkit','resources','java.util.ResourceBundle']]]

Clazz_newMeth(C$, 'createComponent$java_awt_Component',  function (target) {
if (C$.lightweightMarker == null ) {
C$.lightweightMarker=Clazz_new_($I$(3,1));
}return C$.lightweightMarker;
});

Clazz_newMeth(C$, 'loadSystemColors$IA',  function (systemColors) {
});

Clazz_newMeth(C$, 'setDynamicLayout$Z',  function (dynamic) {
});

Clazz_newMeth(C$, 'isDynamicLayoutSet$',  function () {
if (this !== C$.getDefaultToolkit$() ) {
return C$.getDefaultToolkit$().isDynamicLayoutSet$();
} else {
return false;
}});

Clazz_newMeth(C$, 'isDynamicLayoutActive$',  function () {
if (this !== C$.getDefaultToolkit$() ) {
return C$.getDefaultToolkit$().isDynamicLayoutActive$();
} else {
return false;
}});

Clazz_newMeth(C$, 'getScreenInsets$java_awt_GraphicsConfiguration',  function (gc) {
if (this !== C$.getDefaultToolkit$() ) {
return C$.getDefaultToolkit$().getScreenInsets$java_awt_GraphicsConfiguration(gc);
} else {
return Clazz_new_($I$(4,1).c$$I$I$I$I,[0, 0, 0, 0]);
}});

Clazz_newMeth(C$, 'getDefaultToolkit$',  function () {
return (C$.toolkit == null  ? C$.toolkit=Clazz_new_($I$(5,1)) : C$.toolkit);
}, 1);

Clazz_newMeth(C$, 'createImage$BA',  function (imagedata) {
return this.createImage$BA$I$I(imagedata, 0, imagedata.length);
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_JSFrame$S$java_awt_JobAttributes$java_awt_PageAttributes',  function (frame, jobtitle, jobAttributes, pageAttributes) {
if (this !== C$.getDefaultToolkit$() ) {
return C$.getDefaultToolkit$().getPrintJob$java_awt_JSFrame$S$java_awt_JobAttributes$java_awt_PageAttributes(frame, jobtitle, jobAttributes, pageAttributes);
} else {
return this.getPrintJob$java_awt_JSFrame$S$java_util_Properties(frame, jobtitle, null);
}});

Clazz_newMeth(C$, 'getPrintJob$java_awt_Frame$S$java_awt_JobAttributes$java_awt_PageAttributes',  function (frame, jobtitle, jobAttributes, pageAttributes) {
if (this !== C$.getDefaultToolkit$() ) {
return C$.getDefaultToolkit$().getPrintJob$java_awt_Frame$S$java_awt_JobAttributes$java_awt_PageAttributes(frame, jobtitle, jobAttributes, pageAttributes);
} else {
return this.getPrintJob$java_awt_Frame$S$java_util_Properties(frame, jobtitle, null);
}});

Clazz_newMeth(C$, 'getSystemSelection$',  function () {
if (this !== C$.getDefaultToolkit$() ) {
return C$.getDefaultToolkit$().getSystemSelection$();
} else {
return null;
}});

Clazz_newMeth(C$, 'getMenuShortcutKeyMask$',  function () {
return 2;
});

Clazz_newMeth(C$, 'getNativeContainer$java_awt_Component',  function (c) {
return null;
}, 1);

Clazz_newMeth(C$, 'createCustomCursor$java_awt_Image$java_awt_Point$S',  function (cursor, hotSpot, name) {
return (name == null  ? Clazz_new_($I$(6,1).c$$I,[0]) : Clazz_new_($I$(6,1).c$$S,[name]));
});

Clazz_newMeth(C$, 'getBestCursorSize$I$I',  function (preferredWidth, preferredHeight) {
return Clazz_new_($I$(7,1).c$$I$I,[0, 0]);
});

Clazz_newMeth(C$, 'getMaximumCursorColors$',  function () {
return 0;
});

Clazz_newMeth(C$, 'isFrameStateSupported$I',  function (state) {
return (state == 0);
});

Clazz_newMeth(C$, 'getProperty$S$S',  function (key, defaultValue) {
if (C$.resources != null ) {
try {
return C$.resources.getString$S(key);
} catch (e) {
if (Clazz_exceptionOf(e,"java.util.MissingResourceException")){
} else {
throw e;
}
}
}return defaultValue;
}, 1);

Clazz_newMeth(C$, 'getSystemEventQueue$',  function () {
return this.getSystemEventQueueImpl$();
});

Clazz_newMeth(C$, 'getEventQueue$',  function () {
return C$.getDefaultToolkit$().getSystemEventQueueImpl$();
}, 1);

Clazz_newMeth(C$, 'createDragGestureRecognizer$Class$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener',  function (abstractRecognizerClass, ds, c, srcActions, dgl) {
return null;
});

Clazz_newMeth(C$, 'getDesktopProperty$S',  function (propertyName) {
if (this.desktopProperties.isEmpty$()) {
this.initializeDesktopProperties$();
}var value;
if (propertyName.equals$O("awt.dynamicLayoutSupported")) {
value=this.lazilyLoadDesktopProperty$S(propertyName);
return value;
}value=this.desktopProperties.get$O(propertyName);
if (value == null ) {
value=this.lazilyLoadDesktopProperty$S(propertyName);
if (value != null ) {
this.setDesktopProperty$S$O(propertyName, value);
}}if (Clazz_instanceOf(value, "java.awt.RenderingHints")) {
value=(value).clone$();
}return value;
});

Clazz_newMeth(C$, 'setDesktopProperty$S$O',  function (name, newValue) {
var oldValue;
{
oldValue=this.desktopProperties.get$O(name);
this.desktopProperties.put$O$O(name, newValue);
}this.desktopPropsSupport.firePropertyChange$S$O$O(name, oldValue, newValue);
});

Clazz_newMeth(C$, 'lazilyLoadDesktopProperty$S',  function (name) {
return System.getProperty$S("DeskTop_" + name);
});

Clazz_newMeth(C$, 'initializeDesktopProperties$',  function () {
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (name, pcl) {
this.desktopPropsSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(name, pcl);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener',  function (name, pcl) {
this.desktopPropsSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(name, pcl);
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
return this.desktopPropsSupport.getPropertyChangeListeners$();
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S',  function (propertyName) {
return this.desktopPropsSupport.getPropertyChangeListeners$S(propertyName);
});

Clazz_newMeth(C$, 'isAlwaysOnTopSupported$',  function () {
return true;
});

Clazz_newMeth(C$, 'deProxyAWTEventListener$java_awt_event_AWTEventListener',  function (l) {
var localL=l;
if (localL == null ) {
return null;
}if (Clazz_instanceOf(l, "java.awt.event.AWTEventListenerProxy")) {
localL=(l).getListener$();
}return localL;
}, 1);

Clazz_newMeth(C$, 'addAWTEventListener$java_awt_event_AWTEventListener$J',  function (listener, eventMask) {
var localL=C$.deProxyAWTEventListener$java_awt_event_AWTEventListener(listener);
if (localL == null ) {
return;
}{
var selectiveListener=this.listener2SelectiveListener.get$O(localL);
if (selectiveListener == null ) {
selectiveListener=Clazz_new_($I$(8,1).c$$java_awt_event_AWTEventListener$J,[this, null, localL, eventMask]);
this.listener2SelectiveListener.put$O$O(localL, selectiveListener);
this.eventListener=$I$(9).add$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener(this.eventListener, selectiveListener);
}selectiveListener.orEventMasks$J(eventMask);
(C$.enabledOnToolkitMask=Long.$or(C$.enabledOnToolkitMask,(eventMask)));
var mask=eventMask;
for (var i=0; i < 32; i++) {
if (Long.$eq(mask,0 )) {
break;
}if (Long.$ne((Long.$and(mask,1)),0 )) {
++this.calls[i];
}(mask=Long.$usr(mask,(1)));
}
}});

Clazz_newMeth(C$, 'removeAWTEventListener$java_awt_event_AWTEventListener',  function (listener) {
var localL=C$.deProxyAWTEventListener$java_awt_event_AWTEventListener(listener);
if (listener == null ) {
return;
}{
var selectiveListener=this.listener2SelectiveListener.get$O(localL);
if (selectiveListener != null ) {
this.listener2SelectiveListener.remove$O(localL);
var listenerCalls=selectiveListener.getCalls$();
for (var i=0; i < 32; i++) {
this.calls[i]-=listenerCalls[i];
if (this.calls[i] == 0) {
(C$.enabledOnToolkitMask=Long.$and(C$.enabledOnToolkitMask,((Long.$not((Long.$sl(1,i)))))));
}}
}this.eventListener=$I$(9,"remove$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener",[this.eventListener, (selectiveListener == null ) ? localL : selectiveListener]);
}});

Clazz_newMeth(C$, 'enabledOnToolkit$J',  function (eventMask) {
return Long.$ne((Long.$and(C$.enabledOnToolkitMask,eventMask)),0 );
}, 1);

Clazz_newMeth(C$, 'countAWTEventListeners$J',  function (eventMask) {
var ci=0;
for (; Long.$ne(eventMask,0 ); (eventMask=Long.$usr(eventMask,(1))), ci++) {
}
--ci;
return this.calls[ci];
});

Clazz_newMeth(C$, 'getAWTEventListeners$',  function () {
{
var la=$I$(1,"getListeners$java_util_EventListener$Class",[this.eventListener, Clazz_getClass($I$(10),['eventDispatched$java_awt_AWTEvent'])]);
var ret=Clazz_array($I$(10), [la.length]);
for (var i=0; i < la.length; i++) {
var sael=la[i];
var tempL=sael.getListener$();
ret[i]=Clazz_new_([sael.getEventMask$(), tempL],$I$(11,1).c$$J$java_awt_event_AWTEventListener);
}
return ret;
}});

Clazz_newMeth(C$, 'getAWTEventListeners$J',  function (eventMask) {
{
var la=$I$(1,"getListeners$java_util_EventListener$Class",[this.eventListener, Clazz_getClass($I$(10),['eventDispatched$java_awt_AWTEvent'])]);
var list=Clazz_new_($I$(12,1).c$$I,[la.length]);
for (var i=0; i < la.length; i++) {
var sael=la[i];
if (Long.$eq((Long.$and(sael.getEventMask$(),eventMask)),eventMask )) {
list.add$O(Clazz_new_([sael.getEventMask$(), sael.getListener$()],$I$(11,1).c$$J$java_awt_event_AWTEventListener));
}}
return list.toArray$OA(Clazz_array($I$(10), [0]));
}});

Clazz_newMeth(C$, 'notifyAWTEventListeners$java_awt_AWTEvent',  function (theEvent) {
var eventListener=this.eventListener;
if (eventListener != null ) {
eventListener.eventDispatched$java_awt_AWTEvent(theEvent);
}});

Clazz_newMeth(C$, 'createPropertyChangeSupport$java_awt_Toolkit',  function (toolkit) {
return Clazz_new_($I$(13,1).c$$O,[toolkit]);
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.Toolkit, "ToolkitEventMulticaster", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.AWTEventMulticaster', 'java.awt.event.AWTEventListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener',  function (a, b) {
;C$.superclazz.c$$java_util_EventListener$java_util_EventListener.apply(this,[a, b]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'add$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener',  function (a, b) {
if (a == null ) return b;
if (b == null ) return a;
return Clazz_new_(C$.c$$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener,[a, b]);
}, 1);

Clazz_newMeth(C$, 'remove$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener',  function (l, oldl) {
return $I$(1).removeInternal$java_util_EventListener$java_util_EventListener(l, oldl);
}, 1);

Clazz_newMeth(C$, 'remove$java_util_EventListener',  function (oldl) {
if (oldl === this.a ) return this.b;
if (oldl === this.b ) return this.a;
var a2=$I$(1).removeInternal$java_util_EventListener$java_util_EventListener(this.a, oldl);
var b2=$I$(1).removeInternal$java_util_EventListener$java_util_EventListener(this.b, oldl);
if (a2 === this.a  && b2 === this.b  ) {
return this;
}return C$.add$java_awt_event_AWTEventListener$java_awt_event_AWTEventListener(a2, b2);
});

Clazz_newMeth(C$, 'eventDispatched$java_awt_AWTEvent',  function (event) {
(this.a).eventDispatched$java_awt_AWTEvent(event);
(this.b).eventDispatched$java_awt_AWTEvent(event);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Toolkit, "SelectiveAWTEventListener", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.awt.event.AWTEventListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.calls=Clazz_array(Integer.TYPE, [32]);
},1);

C$.$fields$=[['J',['eventMask'],'O',['listener','java.awt.event.AWTEventListener','calls','int[]']]]

Clazz_newMeth(C$, 'getListener$',  function () {
return this.listener;
});

Clazz_newMeth(C$, 'getEventMask$',  function () {
return this.eventMask;
});

Clazz_newMeth(C$, 'getCalls$',  function () {
return this.calls;
});

Clazz_newMeth(C$, 'orEventMasks$J',  function (mask) {
(this.eventMask=Long.$or(this.eventMask,(mask)));
for (var i=0; i < 32; i++) {
if (Long.$eq(mask,0 )) {
break;
}if (Long.$ne((Long.$and(mask,1)),0 )) {
++this.calls[i];
}(mask=Long.$usr(mask,(1)));
}
});

Clazz_newMeth(C$, 'c$$java_awt_event_AWTEventListener$J',  function (l, mask) {
;C$.$init$.apply(this);
this.listener=l;
this.eventMask=mask;
}, 1);

Clazz_newMeth(C$, 'eventDispatched$java_awt_AWTEvent',  function (event) {
var eventBit=0;
if ((Long.$ne((eventBit=Long.$and(this.eventMask,1)),0 ) && event.id >= 100  && event.id <= 103 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,2)),0 ) && event.id >= 300  && event.id <= 301 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,4)),0 ) && event.id >= 1004  && event.id <= 1005 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,8)),0 ) && event.id >= 400  && event.id <= 402 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,131072)),0 ) && event.id == 507 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,32)),0 ) && (event.id == 503 || event.id == 506 ) ) || (Long.$ne((eventBit=Long.$and(this.eventMask,16)),0 ) && event.id != 503  && event.id != 506  && event.id != 507  && event.id >= 500  && event.id <= 507 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,64)),0 ) && (event.id >= 200 && event.id <= 209 ) ) || (Long.$ne((eventBit=Long.$and(this.eventMask,128)),0 ) && event.id >= 1001  && event.id <= 1001 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,256)),0 ) && event.id >= 601  && event.id <= 601 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,512)),0 ) && event.id >= 701  && event.id <= 701 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,1024)),0 ) && event.id >= 900  && event.id <= 900 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,2048)),0 ) && event.id >= 1100  && event.id <= 1101 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,8192)),0 ) && event.id >= 800  && event.id <= 801 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,16384)),0 ) && event.id >= 1200  && event.id <= 1201 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,32768)),0 ) && event.id == 1400 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,65536)),0 ) && (event.id == 1401 || event.id == 1402 ) ) || (Long.$ne((eventBit=Long.$and(this.eventMask,262144)),0 ) && event.id == 209 ) || (Long.$ne((eventBit=Long.$and(this.eventMask,524288)),0 ) && (event.id == 207 || event.id == 208 ) )  ) {
var ci=0;
for (var eMask=eventBit; Long.$ne(eMask,0 ); (eMask=Long.$usr(eMask,(1))), ci++) {
}
--ci;
for (var i=0; i < this.calls[ci]; i++) {
this.listener.eventDispatched$java_awt_AWTEvent(event);
}
}});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Transparency");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),I$=[[0,'sun.awt.AppContext','java.util.HashMap','java.util.StringTokenizer','java.util.Collections','java.awt.VKCollection','StringBuilder']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "VKCollection");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['code2name','java.util.Map','+name2code']]
,['I',['VK_ENTER','VK_BACK_SPACE','VK_TAB','VK_CANCEL','VK_CLEAR','VK_SHIFT','VK_CONTROL','VK_ALT','VK_PAUSE','VK_CAPS_LOCK','VK_ESCAPE','VK_SPACE','VK_PAGE_UP','VK_PAGE_DOWN','VK_END','VK_HOME','VK_LEFT','VK_UP','VK_RIGHT','VK_DOWN','VK_COMMA','VK_MINUS','VK_PERIOD','VK_SLASH','VK_0','VK_1','VK_2','VK_3','VK_4','VK_5','VK_6','VK_7','VK_8','VK_9','VK_SEMICOLON','VK_EQUALS','VK_A','VK_B','VK_C','VK_D','VK_E','VK_F','VK_G','VK_H','VK_I','VK_J','VK_K','VK_L','VK_M','VK_N','VK_O','VK_P','VK_Q','VK_R','VK_S','VK_T','VK_U','VK_V','VK_W','VK_X','VK_Y','VK_Z','VK_OPEN_BRACKET','VK_BACK_SLASH','VK_CLOSE_BRACKET','VK_NUMPAD0','VK_NUMPAD1','VK_NUMPAD2','VK_NUMPAD3','VK_NUMPAD4','VK_NUMPAD5','VK_NUMPAD6','VK_NUMPAD7','VK_NUMPAD8','VK_NUMPAD9','VK_MULTIPLY','VK_ADD','VK_SEPARATER','VK_SEPARATOR','VK_SUBTRACT','VK_DECIMAL','VK_DIVIDE','VK_DELETE','VK_NUM_LOCK','VK_SCROLL_LOCK','VK_F1','VK_F2','VK_F3','VK_F4','VK_F5','VK_F6','VK_F7','VK_F8','VK_F9','VK_F10','VK_F11','VK_F12','VK_F13','VK_F14','VK_F15','VK_F16','VK_F17','VK_F18','VK_F19','VK_F20','VK_F21','VK_F22','VK_F23','VK_F24','VK_PRINTSCREEN','VK_INSERT','VK_HELP','VK_META','VK_BACK_QUOTE','VK_QUOTE','VK_KP_UP','VK_KP_DOWN','VK_KP_LEFT','VK_KP_RIGHT','VK_DEAD_GRAVE','VK_DEAD_ACUTE','VK_DEAD_CIRCUMFLEX','VK_DEAD_TILDE','VK_DEAD_MACRON','VK_DEAD_BREVE','VK_DEAD_ABOVEDOT','VK_DEAD_DIAERESIS','VK_DEAD_ABOVERING','VK_DEAD_DOUBLEACUTE','VK_DEAD_CARON','VK_DEAD_CEDILLA','VK_DEAD_OGONEK','VK_DEAD_IOTA','VK_DEAD_VOICED_SOUND','VK_DEAD_SEMIVOICED_SOUND','VK_AMPERSAND','VK_ASTERISK','VK_QUOTEDBL','VK_LESS','VK_GREATER','VK_BRACELEFT','VK_BRACERIGHT','VK_AT','VK_COLON','VK_CIRCUMFLEX','VK_DOLLAR','VK_EURO_SIGN','VK_EXCLAMATION_MARK','VK_INVERTED_EXCLAMATION_MARK','VK_LEFT_PARENTHESIS','VK_NUMBER_SIGN','VK_PLUS','VK_RIGHT_PARENTHESIS','VK_UNDERSCORE','VK_WINDOWS','VK_CONTEXT_MENU','VK_FINAL','VK_CONVERT','VK_NONCONVERT','VK_ACCEPT','VK_MODECHANGE','VK_KANA','VK_KANJI','VK_ALPHANUMERIC','VK_KATAKANA','VK_HIRAGANA','VK_FULL_WIDTH','VK_HALF_WIDTH','VK_ROMAN_CHARACTERS','VK_ALL_CANDIDATES','VK_PREVIOUS_CANDIDATE','VK_CODE_INPUT','VK_JAPANESE_KATAKANA','VK_JAPANESE_HIRAGANA','VK_JAPANESE_ROMAN','VK_KANA_LOCK','VK_INPUT_METHOD_ON_OFF','VK_CUT','VK_COPY','VK_PASTE','VK_UNDO','VK_AGAIN','VK_FIND','VK_PROPS','VK_STOP','VK_COMPOSE','VK_ALT_GRAPH','VK_BEGIN']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.code2name=Clazz_new_($I$(2,1));
this.name2code=Clazz_new_($I$(2,1));
var list=Clazz_array(java.lang.Object, [0, null]);

for (var k in C$) if (("" + k).indexOf("VK_") == 0) list.push([k, C$[k]]);
for (var i=0; i < list.length; i++) {
this.put$S$Integer(list[i][0], Integer.valueOf$I(list[i][1] ||0));
}
}, 1);

Clazz_newMeth(C$, 'put$S$Integer',  function (name, code) {
this.code2name.put$O$O("" + code, name);
this.name2code.put$O$O(name, code);
});

Clazz_newMeth(C$, 'findCode$S',  function (name) {
return this.name2code.get$O(name);
});

Clazz_newMeth(C$, 'findName$Integer',  function (code) {
return this.code2name.get$O("" + code);
});

C$.$static$=function(){C$.$static$=0;
C$.VK_ENTER=10;
C$.VK_BACK_SPACE=8;
C$.VK_TAB=9;
C$.VK_CANCEL=3;
C$.VK_CLEAR=12;
C$.VK_SHIFT=16;
C$.VK_CONTROL=17;
C$.VK_ALT=18;
C$.VK_PAUSE=19;
C$.VK_CAPS_LOCK=20;
C$.VK_ESCAPE=27;
C$.VK_SPACE=32;
C$.VK_PAGE_UP=33;
C$.VK_PAGE_DOWN=34;
C$.VK_END=35;
C$.VK_HOME=36;
C$.VK_LEFT=37;
C$.VK_UP=38;
C$.VK_RIGHT=39;
C$.VK_DOWN=40;
C$.VK_COMMA=44;
C$.VK_MINUS=45;
C$.VK_PERIOD=46;
C$.VK_SLASH=47;
C$.VK_0=48;
C$.VK_1=49;
C$.VK_2=50;
C$.VK_3=51;
C$.VK_4=52;
C$.VK_5=53;
C$.VK_6=54;
C$.VK_7=55;
C$.VK_8=56;
C$.VK_9=57;
C$.VK_SEMICOLON=59;
C$.VK_EQUALS=61;
C$.VK_A=65;
C$.VK_B=66;
C$.VK_C=67;
C$.VK_D=68;
C$.VK_E=69;
C$.VK_F=70;
C$.VK_G=71;
C$.VK_H=72;
C$.VK_I=73;
C$.VK_J=74;
C$.VK_K=75;
C$.VK_L=76;
C$.VK_M=77;
C$.VK_N=78;
C$.VK_O=79;
C$.VK_P=80;
C$.VK_Q=81;
C$.VK_R=82;
C$.VK_S=83;
C$.VK_T=84;
C$.VK_U=85;
C$.VK_V=86;
C$.VK_W=87;
C$.VK_X=88;
C$.VK_Y=89;
C$.VK_Z=90;
C$.VK_OPEN_BRACKET=91;
C$.VK_BACK_SLASH=92;
C$.VK_CLOSE_BRACKET=93;
C$.VK_NUMPAD0=96;
C$.VK_NUMPAD1=97;
C$.VK_NUMPAD2=98;
C$.VK_NUMPAD3=99;
C$.VK_NUMPAD4=100;
C$.VK_NUMPAD5=101;
C$.VK_NUMPAD6=102;
C$.VK_NUMPAD7=103;
C$.VK_NUMPAD8=104;
C$.VK_NUMPAD9=105;
C$.VK_MULTIPLY=106;
C$.VK_ADD=107;
C$.VK_SEPARATER=108;
C$.VK_SEPARATOR=C$.VK_SEPARATER;
C$.VK_SUBTRACT=109;
C$.VK_DECIMAL=110;
C$.VK_DIVIDE=111;
C$.VK_DELETE=127;
C$.VK_NUM_LOCK=144;
C$.VK_SCROLL_LOCK=145;
C$.VK_F1=112;
C$.VK_F2=113;
C$.VK_F3=114;
C$.VK_F4=115;
C$.VK_F5=116;
C$.VK_F6=117;
C$.VK_F7=118;
C$.VK_F8=119;
C$.VK_F9=120;
C$.VK_F10=121;
C$.VK_F11=122;
C$.VK_F12=123;
C$.VK_F13=61440;
C$.VK_F14=61441;
C$.VK_F15=61442;
C$.VK_F16=61443;
C$.VK_F17=61444;
C$.VK_F18=61445;
C$.VK_F19=61446;
C$.VK_F20=61447;
C$.VK_F21=61448;
C$.VK_F22=61449;
C$.VK_F23=61450;
C$.VK_F24=61451;
C$.VK_PRINTSCREEN=154;
C$.VK_INSERT=155;
C$.VK_HELP=156;
C$.VK_META=157;
C$.VK_BACK_QUOTE=192;
C$.VK_QUOTE=222;
C$.VK_KP_UP=224;
C$.VK_KP_DOWN=225;
C$.VK_KP_LEFT=226;
C$.VK_KP_RIGHT=227;
C$.VK_DEAD_GRAVE=128;
C$.VK_DEAD_ACUTE=129;
C$.VK_DEAD_CIRCUMFLEX=130;
C$.VK_DEAD_TILDE=131;
C$.VK_DEAD_MACRON=132;
C$.VK_DEAD_BREVE=133;
C$.VK_DEAD_ABOVEDOT=134;
C$.VK_DEAD_DIAERESIS=135;
C$.VK_DEAD_ABOVERING=136;
C$.VK_DEAD_DOUBLEACUTE=137;
C$.VK_DEAD_CARON=138;
C$.VK_DEAD_CEDILLA=139;
C$.VK_DEAD_OGONEK=140;
C$.VK_DEAD_IOTA=141;
C$.VK_DEAD_VOICED_SOUND=142;
C$.VK_DEAD_SEMIVOICED_SOUND=143;
C$.VK_AMPERSAND=150;
C$.VK_ASTERISK=151;
C$.VK_QUOTEDBL=152;
C$.VK_LESS=153;
C$.VK_GREATER=160;
C$.VK_BRACELEFT=161;
C$.VK_BRACERIGHT=162;
C$.VK_AT=512;
C$.VK_COLON=513;
C$.VK_CIRCUMFLEX=514;
C$.VK_DOLLAR=515;
C$.VK_EURO_SIGN=516;
C$.VK_EXCLAMATION_MARK=517;
C$.VK_INVERTED_EXCLAMATION_MARK=518;
C$.VK_LEFT_PARENTHESIS=519;
C$.VK_NUMBER_SIGN=520;
C$.VK_PLUS=521;
C$.VK_RIGHT_PARENTHESIS=522;
C$.VK_UNDERSCORE=523;
C$.VK_WINDOWS=524;
C$.VK_CONTEXT_MENU=525;
C$.VK_FINAL=24;
C$.VK_CONVERT=28;
C$.VK_NONCONVERT=29;
C$.VK_ACCEPT=30;
C$.VK_MODECHANGE=31;
C$.VK_KANA=21;
C$.VK_KANJI=25;
C$.VK_ALPHANUMERIC=240;
C$.VK_KATAKANA=241;
C$.VK_HIRAGANA=242;
C$.VK_FULL_WIDTH=243;
C$.VK_HALF_WIDTH=244;
C$.VK_ROMAN_CHARACTERS=245;
C$.VK_ALL_CANDIDATES=256;
C$.VK_PREVIOUS_CANDIDATE=257;
C$.VK_CODE_INPUT=258;
C$.VK_JAPANESE_KATAKANA=259;
C$.VK_JAPANESE_HIRAGANA=260;
C$.VK_JAPANESE_ROMAN=261;
C$.VK_KANA_LOCK=262;
C$.VK_INPUT_METHOD_ON_OFF=263;
C$.VK_CUT=65489;
C$.VK_COPY=65485;
C$.VK_PASTE=65487;
C$.VK_UNDO=65483;
C$.VK_AGAIN=65481;
C$.VK_FIND=65488;
C$.VK_PROPS=65482;
C$.VK_STOP=65480;
C$.VK_COMPOSE=65312;
C$.VK_ALT_GRAPH=65406;
C$.VK_BEGIN=65368;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt"),p$1={},I$=[[0,'java.awt.Color','java.util.Vector','java.awt.Cursor','java.awt.BorderLayout',['java.awt.JSComponent','.ModalExclusionType'],'java.util.ArrayList','java.awt.Toolkit','java.awt.event.WindowEvent','java.util.Locale','java.util.Arrays','swingjs.JSToolkit','sun.awt.AppContext',['java.awt.Dialog','.ModalExclusionType'],'java.awt.AWTEventMulticaster','java.awt.event.WindowListener','java.awt.event.WindowFocusListener','java.awt.event.WindowStateListener','java.awt.KeyboardFocusManager','java.awt.ComponentOrientation','java.util.ResourceBundle','java.awt.GraphicsEnvironment','java.awt.Point']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Window", null, 'javax.swing.JComponent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.syncLWRequests=false;
this.beforeFirstShow=true;
this.ownedWindowList=Clazz_new_($I$(2,1));
this.focusableWindowState=true;
this.isInShow=false;
this.opacity=1.0;
this.shape=null;
this.isTrayIconWindow=false;
this.locationByPlatform=false;
this.opaque=true;
},1);

C$.$fields$=[['Z',['syncLWRequests','beforeFirstShow','alwaysOnTop','showWithParent','focusableWindowState','isInShow','isTrayIconWindow','_disposed','locationByPlatform','opaque'],'F',['opacity'],'I',['state'],'S',['warningString'],'O',['icons','java.util.List','temporaryLostComponent','java.awt.Component','ownedWindowList','java.util.Vector','modalBlocker','java.awt.JSDialog','modalExclusionType','java.awt.JSComponent.ModalExclusionType','windowListener','java.awt.event.WindowListener','windowStateListener','java.awt.event.WindowStateListener','windowFocusListener','java.awt.event.WindowFocusListener','shape','java.awt.Shape']]
,['Z',['systemSyncLWRequests'],'I',['nameCounter'],'O',['TRANSPARENT_BACKGROUND_COLOR','java.awt.Color']]]

Clazz_newMeth(C$, 'setOpaque$java_awt_Window$Z',  function (window, opaque) {
var bg=window.getBackground$();
if (bg == null ) {
bg=Clazz_new_($I$(1,1).c$$I$I$I$I,[0, 0, 0, 0]);
}window.setBackground$java_awt_Color(Clazz_new_([bg.getRed$(), bg.getGreen$(), bg.getBlue$(), opaque ? 255 : 0],$I$(1,1).c$$I$I$I$I));
});

Clazz_newMeth(C$, 'updateWindow$',  function () {
});

Clazz_newMeth(C$, 'setLWRequestStatus$Z',  function (status) {
this.syncLWRequests=status;
});

Clazz_newMeth(C$, 'isAutoRequestFocus$',  function () {
return true;
});

Clazz_newMeth(C$, 'isTrayIconWindow$',  function () {
return this.isTrayIconWindow;
});

Clazz_newMeth(C$, 'setTrayIconWindow$Z',  function (isTrayIconWindow) {
this.isTrayIconWindow=isTrayIconWindow;
});

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$java_awt_Window$java_awt_GraphicsConfiguration.apply(this, [null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_GraphicsConfiguration',  function (gc) {
C$.c$$java_awt_Window$java_awt_GraphicsConfiguration.apply(this, [null, gc]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Frame',  function (owner) {
C$.c$$java_awt_Window$java_awt_GraphicsConfiguration.apply(this, [owner, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window',  function (owner) {
C$.c$$java_awt_Window$java_awt_GraphicsConfiguration.apply(this, [owner, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$java_awt_GraphicsConfiguration',  function (owner, gc) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.秘winOrApplet=true;
this.秘paintClass=this.秘updateClass=C$ ||null;
this.setAppContext$();
this.parent=owner;
if (owner != null ) owner.addOwnedWindow$java_awt_Window(this);
this.syncLWRequests=C$.systemSyncLWRequests;
p$1.addToWindowList.apply(this, []);
this.cursor=$I$(3).getPredefinedCursor$I(0);
this.visible=false;
this.setLayout$java_awt_LayoutManager(Clazz_new_($I$(4,1)));
var screenBounds=this.getGraphicsConfiguration$().getBounds$();
var screenInsets=this.getToolkit$().getScreenInsets$java_awt_GraphicsConfiguration(this.graphicsConfig);
var x=this.getX$() + screenBounds.x + screenInsets.left ;
var y=this.getY$() + screenBounds.y + screenInsets.top ;
if (x != (this).x || y != (this).y ) {
this.setLocation$I$I(x, y);
this.setLocationByPlatform$Z(false);
}this.modalExclusionType=$I$(5).NO_EXCLUDE;
}, 1);

Clazz_newMeth(C$, 'constructComponentName$',  function () {
{
return "win" + C$.nameCounter++;
}});

Clazz_newMeth(C$, 'getIconImages$',  function () {
var icons=this.icons;
if (icons == null  || icons.size$() == 0 ) {
return Clazz_new_($I$(6,1));
}return Clazz_new_($I$(6,1).c$$java_util_Collection,[icons]);
});

Clazz_newMeth(C$, 'setIconImages$java_util_List',  function (icons) {
this.icons=(icons == null ) ? Clazz_new_($I$(6,1)) : Clazz_new_($I$(6,1).c$$java_util_Collection,[icons]);
this.firePropertyChange$S$O$O("iconImage", null, null);
});

Clazz_newMeth(C$, 'setIconImage$java_awt_Image',  function (image) {
var imageList=Clazz_new_($I$(6,1));
if (image != null ) {
imageList.add$O(image);
}this.setIconImages$java_util_List(imageList);
});

Clazz_newMeth(C$, 'addNotify$',  function () {
var parent=this.parent;
if (parent != null  && parent.peer == null  ) parent.addNotify$();
this.getOrCreatePeer$();
if (parent != null ) this.秘appletViewer=parent.秘appletViewer;
this.秘appletViewer.addWindow$java_awt_Window(this);
C$.superclazz.prototype.addNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'getOrCreatePeer$',  function () {
return (this.ui == null  ? null : this.peer == null  ? (this.peer=this.getToolkit$().createWindow$java_awt_Window(this)) : this.peer);
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
this.秘appletViewer.allWindows.removeObj$O(this);
C$.superclazz.prototype.removeNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'pack$',  function () {
var parent=this.parent;
if (parent != null  && parent.getPeer$() == null  ) {
parent.addNotify$();
}if (this.peer == null ) {
this.addNotify$();
}if (this.beforeFirstShow) {
this.isPacked=true;
}this.repackContainer$();
});

Clazz_newMeth(C$, 'setMinimumSize$java_awt_Dimension',  function (minimumSize) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
C$.superclazz.prototype.setMinimumSize$java_awt_Dimension.apply(this, [minimumSize]);
var size=this.getSize$();
if (this.isMinimumSizeSet$()) {
if (size.width < minimumSize.width || size.height < minimumSize.height ) {
var nw=Math.max(this.width, minimumSize.width);
var nh=Math.max(this.height, minimumSize.height);
this.setSize$I$I(nw, nh);
}}}});

Clazz_newMeth(C$, 'setSize$java_awt_Dimension',  function (d) {
C$.superclazz.prototype.setSize$java_awt_Dimension.apply(this, [d]);
});

Clazz_newMeth(C$, 'setSize$I$I',  function (width, height) {
C$.superclazz.prototype.setSize$I$I.apply(this, [width, height]);
});

Clazz_newMeth(C$, 'reshape$I$I$I$I',  function (x, y, width, height) {
if (this.isMinimumSizeSet$()) {
var minSize=this.getMinimumSize$();
if (width < minSize.width) {
width=minSize.width;
}if (height < minSize.height) {
height=minSize.height;
}}C$.superclazz.prototype.reshape$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'closeSplashScreen$',  function () {
}, 1);

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
this.paintContainer$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g) {
this.updateContainer$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printAll$java_awt_Graphics',  function (g) {
C$.superclazz.prototype.printAll$java_awt_Graphics.apply(this, [g]);
});

Clazz_newMeth(C$, 'getPreferredSize$',  function () {
return this.preferredSize$();
});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
if (b) {
this.show$();
} else {
this.hide$();
}});

Clazz_newMeth(C$, 'show$',  function () {
if (this.ui != null  && (this.ui).isDisposed ) this.addNotify$();
this.validate$();
this.isInShow=true;
if (this.visible) {
this.toFront$();
} else {
this.beforeFirstShow=false;
C$.closeSplashScreen$();
C$.superclazz.prototype.show$.apply(this, []);
for (var i=0; i < this.ownedWindowList.size$(); i++) {
var child=this.ownedWindowList.elementAt$I(i);
if ((child != null ) && child.showWithParent ) {
child.show$();
child.showWithParent=false;
}}
if (Clazz_instanceOf(this, "java.awt.JSFrame") || Clazz_instanceOf(this, "java.awt.JSDialog") ) {
C$.updateChildFocusableWindowState$java_awt_Window(this);
}}this.isInShow=false;
if ((this.state & 1) == 0) {
this.秘repaint$();
this.postWindowEvent$I(200);
this.state|=1;
}});

Clazz_newMeth(C$, 'updateChildFocusableWindowState$java_awt_Window',  function (w) {
for (var i=0; i < w.ownedWindowList.size$(); i++) {
var child=w.ownedWindowList.elementAt$I(i);
if (child != null ) {
C$.updateChildFocusableWindowState$java_awt_Window(child);
}}
}, 1);

Clazz_newMeth(C$, 'postWindowEvent$I',  function (id) {
if (this.windowListener != null  || Long.$ne((Long.$and(this.eventMask,64)),0 )  || $I$(7).enabledOnToolkit$J(64) ) {
var e=Clazz_new_($I$(8,1).c$$java_awt_Window$I,[this, id]);
$I$(7).getEventQueue$().postEvent$java_awt_AWTEvent(e);
}});

Clazz_newMeth(C$, 'hide$',  function () {
{
for (var i=0; i < this.ownedWindowList.size$(); i++) {
var child=this.ownedWindowList.elementAt$I(i);
if ((child != null ) && child.visible ) {
child.hide$();
child.showWithParent=true;
}}
}C$.superclazz.prototype.hide$.apply(this, []);
});

Clazz_newMeth(C$, 'clearMostRecentFocusOwnerOnHide$',  function () {
});

Clazz_newMeth(C$, 'dispose$',  function () {
this.doDispose$();
});

Clazz_newMeth(C$, 'disposeImpl$',  function () {
this.dispose$();
if (!this._disposed && this.getPeer$() != null  ) {
this.doDispose$();
}});

Clazz_newMeth(C$, 'doDispose$',  function () {
this._disposed=true;
var me=this;
var action=((P$.Window$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Window$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
var parent=this.b$['java.awt.Window'].getOwner$.apply(this.b$['java.awt.Window'], []);
if (parent != null ) {
parent.removeOwnedWindow$java_awt_Window(this.$finals$.me);
}var ui=this.$finals$.me.getUI$();
if (ui != null ) {
ui.reinstallUI$javax_swing_JComponent$javax_swing_JComponent(this.$finals$.me, null);
}var ownedWindowArray;
{
ownedWindowArray=Clazz_array(java.lang.Object, [this.b$['java.awt.Window'].ownedWindowList.size$()]);
this.b$['java.awt.Window'].ownedWindowList.copyInto$OA(ownedWindowArray);
}for (var i=0; i < ownedWindowArray.length; i++) {
var child=ownedWindowArray[i];
if (child != null ) child.disposeImpl$();
}
this.b$['java.awt.Window'].hide$.apply(this.b$['java.awt.Window'], []);
this.b$['java.awt.Window'].beforeFirstShow=true;
this.b$['java.awt.Window'].removeNotify$.apply(this.b$['java.awt.Window'], []);
this.b$['java.awt.Container'].clearCurrentFocusCycleRootOnHide$.apply(this.b$['java.awt.Container'], []);
});
})()
), Clazz_new_(P$.Window$1.$init$,[this, {me:me}]));
action.run$();
this.postWindowEvent$I(202);
});

Clazz_newMeth(C$, 'adjustListeningChildrenOnParent$J$I',  function (mask, num) {
});

Clazz_newMeth(C$, 'adjustDecendantsOnParent$I',  function (num) {
});

Clazz_newMeth(C$, 'toFront$',  function () {
this.toFront_NoClientCode$();
});

Clazz_newMeth(C$, 'toFront_NoClientCode$',  function () {
if (this.visible) {
var peer=this.peer;
if (peer != null ) {
peer.toFront$();
}if (this.isModalBlocked$()) {
this.modalBlocker.toFront_NoClientCode$();
}for (var i=0; i < this.ownedWindowList.size$(); i++) {
if (this.ownedWindowList.get$I(i).isVisible$()) this.ownedWindowList.get$I(i).toFront$();
}
}});

Clazz_newMeth(C$, 'toBack$',  function () {
this.toBack_NoClientCode$();
});

Clazz_newMeth(C$, 'toBack_NoClientCode$',  function () {
if (this.isAlwaysOnTop$()) {
try {
this.setAlwaysOnTop$Z(false);
} catch (e) {
if (Clazz_exceptionOf(e,"SecurityException")){
} else {
throw e;
}
}
}});

Clazz_newMeth(C$, 'getToolkit$',  function () {
return $I$(7).getDefaultToolkit$();
});

Clazz_newMeth(C$, 'getWarningString$',  function () {
return this.warningString;
});

Clazz_newMeth(C$, 'getLocale$',  function () {
if (this.locale == null ) {
return $I$(9).getDefault$();
}return this.locale;
});

Clazz_newMeth(C$, 'setCursor$java_awt_Cursor',  function (cursor) {
if (cursor == null ) {
cursor=$I$(3).getPredefinedCursor$I(0);
}C$.superclazz.prototype.setCursor$java_awt_Cursor.apply(this, [cursor]);
});

Clazz_newMeth(C$, 'getOwner$',  function () {
return this.getOwner_NoClientCode$();
});

Clazz_newMeth(C$, 'getOwner_NoClientCode$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'getOwnedWindows$',  function () {
return this.getOwnedWindows_NoClientCode$();
});

Clazz_newMeth(C$, 'getOwnedWindows_NoClientCode$',  function () {
var realCopy;
{
var fullSize=this.ownedWindowList.size$();
var realSize=0;
var fullCopy=Clazz_array(C$, [fullSize]);
for (var i=0; i < fullSize; i++) {
fullCopy[realSize]=this.ownedWindowList.elementAt$I(i);
if (fullCopy[realSize] != null ) {
++realSize;
}}
if (fullSize != realSize) {
realCopy=$I$(10).copyOf$OA$I(fullCopy, realSize);
} else {
realCopy=fullCopy;
}}return realCopy;
});

Clazz_newMeth(C$, 'isModalBlocked$',  function () {
return this.modalBlocker != null ;
});

Clazz_newMeth(C$, 'setModalBlocked$java_awt_JSDialog$Z$Z',  function (blocker, blocked, peerCall) {
this.modalBlocker=blocked ? blocker : null;
if (peerCall) {
var peer=this.peer;
if (peer != null ) {
peer.setModalBlocked$java_awt_JSDialog$Z(blocker, blocked);
}}});

Clazz_newMeth(C$, 'setModalBlocked$java_awt_Dialog$Z$Z',  function (blocker, blocked, peerCall) {
this.setModalBlocked$java_awt_JSDialog$Z$Z(blocker, blocked, peerCall);
});

Clazz_newMeth(C$, 'getModalBlocker$',  function () {
return this.modalBlocker;
});

Clazz_newMeth(C$, 'getAllWindows$',  function () {
var v=Clazz_new_($I$(6,1));
v.addAll$java_util_Collection($I$(11).getAppletViewer$().allWindows);
return v;
}, 1);

Clazz_newMeth(C$, 'getAllUnblockedWindows$',  function () {
var allWindows=$I$(11).getAppletViewer$().allWindows;
var unblocked=Clazz_new_($I$(6,1));
for (var i=0; i < allWindows.size$(); i++) {
var w=allWindows.get$I(i);
if (!w.isModalBlocked$()) {
unblocked.add$O(w);
}}
return unblocked;
}, 1);

Clazz_newMeth(C$, 'getWindows$sun_awt_AppContext',  function (appContext) {
{
var realCopy;
var windowList=appContext.get$O(Clazz_getClass(C$));
if (windowList != null ) {
var fullSize=windowList.size$();
var realSize=0;
var fullCopy=Clazz_array(C$, [fullSize]);
for (var i=0; i < fullSize; i++) {
var w=windowList.get$I(i);
if (w != null ) {
fullCopy[realSize++]=w;
}}
if (fullSize != realSize) {
realCopy=$I$(10).copyOf$OA$I(fullCopy, realSize);
} else {
realCopy=fullCopy;
}} else {
realCopy=Clazz_array(C$, [0]);
}return realCopy;
}}, 1);

Clazz_newMeth(C$, 'getWindows$',  function () {
return C$.getWindows$sun_awt_AppContext($I$(12).getAppContext$());
}, 1);

Clazz_newMeth(C$, 'getOwnerlessWindows$',  function () {
var allWindows=C$.getWindows$();
var ownerlessCount=0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=($$w[$w])),1);$w++) {
if (w.getOwner$() == null ) {
++ownerlessCount;
}}
var ownerless=Clazz_array(C$, [ownerlessCount]);
var c=0;
for (var w, $w = 0, $$w = allWindows; $w<$$w.length&&((w=($$w[$w])),1);$w++) {
if (w.getOwner$() == null ) {
ownerless[c++]=w;
}}
return ownerless;
}, 1);

Clazz_newMeth(C$, 'getDocumentRoot$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var w=this;
while (w.getOwner$() != null ){
w=w.getOwner$();
}
return w;
}});

Clazz_newMeth(C$, 'setModalExclusionType$java_awt_Dialog_ModalExclusionType',  function (exclusionType) {
var type=exclusionType;
if (type == null ) {
type=$I$(5).NO_EXCLUDE;
} else if (!$I$(7).getDefaultToolkit$().isModalExclusionTypeSupported$java_awt_Dialog_ModalExclusionType(exclusionType)) {
type=$I$(5).NO_EXCLUDE;
}var n=type.ordinal$();
if (this.modalExclusionType.ordinal$() == n) {
return;
}switch (n) {
case 0:
this.modalExclusionType=$I$(5).NO_EXCLUDE;
break;
case 1:
this.modalExclusionType=$I$(5).APPLICATION_EXCLUDE;
break;
case 2:
this.modalExclusionType=$I$(5).TOOLKIT_EXCLUDE;
break;
}
});

Clazz_newMeth(C$, 'getModalExclusionType$',  function () {
if (this.modalExclusionType === $I$(5).APPLICATION_EXCLUDE ) return $I$(13).APPLICATION_EXCLUDE;
if (this.modalExclusionType === $I$(5).NO_EXCLUDE ) return $I$(13).NO_EXCLUDE;
if (this.modalExclusionType === $I$(5).TOOLKIT_EXCLUDE ) return $I$(13).TOOLKIT_EXCLUDE;
return null;
});

Clazz_newMeth(C$, 'isModalExcluded$java_awt_Dialog_ModalExclusionType',  function (exclusionType) {
if ((this.modalExclusionType != null ) && this.modalExclusionType.ordinal$() >= exclusionType.ordinal$() ) {
return true;
}var owner=this.getOwner_NoClientCode$();
return (owner != null ) && owner.isModalExcluded$java_awt_Dialog_ModalExclusionType(exclusionType) ;
});

Clazz_newMeth(C$, 'addWindowListener$java_awt_event_WindowListener',  function (l) {
if (l == null ) {
return;
}this.newEventsOnly=true;
this.windowListener=$I$(14).add$java_awt_event_WindowListener$java_awt_event_WindowListener(this.windowListener, l);
});

Clazz_newMeth(C$, 'addWindowStateListener$java_awt_event_WindowStateListener',  function (l) {
if (l == null ) {
return;
}this.windowStateListener=$I$(14).add$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener(this.windowStateListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'addWindowFocusListener$java_awt_event_WindowFocusListener',  function (l) {
if (l == null ) {
return;
}this.windowFocusListener=$I$(14).add$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener(this.windowFocusListener, l);
this.newEventsOnly=true;
});

Clazz_newMeth(C$, 'removeWindowListener$java_awt_event_WindowListener',  function (l) {
if (l == null ) {
return;
}this.windowListener=$I$(14).remove$java_awt_event_WindowListener$java_awt_event_WindowListener(this.windowListener, l);
});

Clazz_newMeth(C$, 'removeWindowStateListener$java_awt_event_WindowStateListener',  function (l) {
if (l == null ) {
return;
}this.windowStateListener=$I$(14).remove$java_awt_event_WindowStateListener$java_awt_event_WindowStateListener(this.windowStateListener, l);
});

Clazz_newMeth(C$, 'removeWindowFocusListener$java_awt_event_WindowFocusListener',  function (l) {
if (l == null ) {
return;
}this.windowFocusListener=$I$(14).remove$java_awt_event_WindowFocusListener$java_awt_event_WindowFocusListener(this.windowFocusListener, l);
});

Clazz_newMeth(C$, 'getWindowListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(15),['windowActivated$java_awt_event_WindowEvent','windowClosed$java_awt_event_WindowEvent','windowClosing$java_awt_event_WindowEvent','windowDeactivated$java_awt_event_WindowEvent','windowDeiconified$java_awt_event_WindowEvent','windowIconified$java_awt_event_WindowEvent','windowOpened$java_awt_event_WindowEvent'])));
});

Clazz_newMeth(C$, 'getWindowFocusListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(16),['windowGainedFocus$java_awt_event_WindowEvent','windowLostFocus$java_awt_event_WindowEvent'])));
});

Clazz_newMeth(C$, 'getWindowStateListeners$',  function () {
return (this.getListeners$Class(Clazz_getClass($I$(17),['windowStateChanged$java_awt_event_WindowEvent'])));
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
var l=null;
if (listenerType === Clazz_getClass($I$(16),['windowGainedFocus$java_awt_event_WindowEvent','windowLostFocus$java_awt_event_WindowEvent']) ) {
l=this.windowFocusListener;
} else if (listenerType === Clazz_getClass($I$(17),['windowStateChanged$java_awt_event_WindowEvent']) ) {
l=this.windowStateListener;
} else if (listenerType === Clazz_getClass($I$(15),['windowActivated$java_awt_event_WindowEvent','windowClosed$java_awt_event_WindowEvent','windowClosing$java_awt_event_WindowEvent','windowDeactivated$java_awt_event_WindowEvent','windowDeiconified$java_awt_event_WindowEvent','windowIconified$java_awt_event_WindowEvent','windowOpened$java_awt_event_WindowEvent']) ) {
l=this.windowListener;
} else {
return C$.superclazz.prototype.getListeners$Class.apply(this, [listenerType]);
}return $I$(14).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'eventEnabled$java_awt_AWTEvent',  function (e) {
switch (e.id) {
case 200:
case 201:
case 202:
case 203:
case 204:
case 205:
case 206:
if (Long.$ne((Long.$and(this.eventMask,64)),0 ) || this.windowListener != null  ) {
return true;
}return false;
case 207:
case 208:
if (Long.$ne((Long.$and(this.eventMask,524288)),0 ) || this.windowFocusListener != null  ) {
return true;
}return false;
case 209:
if (Long.$ne((Long.$and(this.eventMask,262144)),0 ) || this.windowStateListener != null  ) {
return true;
}return false;
default:
break;
}
return C$.superclazz.prototype.eventEnabled$java_awt_AWTEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'processEvent$java_awt_AWTEvent',  function (e) {
if (Clazz_instanceOf(e, "java.awt.event.WindowEvent")) {
switch (e.getID$()) {
case 200:
case 201:
case 202:
case 203:
case 204:
case 205:
case 206:
this.processWindowEvent$java_awt_event_WindowEvent(e);
break;
case 207:
case 208:
this.processWindowFocusEvent$java_awt_event_WindowEvent(e);
break;
case 209:
this.processWindowStateEvent$java_awt_event_WindowEvent(e);
default:
break;
}
return;
}this.processEventCont$java_awt_AWTEvent(e);
});

Clazz_newMeth(C$, 'processWindowEvent$java_awt_event_WindowEvent',  function (e) {
var listener=this.windowListener;
if (listener != null ) {
switch (e.getID$()) {
case 200:
listener.windowOpened$java_awt_event_WindowEvent(e);
break;
case 201:
listener.windowClosing$java_awt_event_WindowEvent(e);
break;
case 202:
listener.windowClosed$java_awt_event_WindowEvent(e);
break;
case 203:
listener.windowIconified$java_awt_event_WindowEvent(e);
break;
case 204:
listener.windowDeiconified$java_awt_event_WindowEvent(e);
break;
case 205:
listener.windowActivated$java_awt_event_WindowEvent(e);
break;
case 206:
listener.windowDeactivated$java_awt_event_WindowEvent(e);
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'processWindowFocusEvent$java_awt_event_WindowEvent',  function (e) {
var listener=this.windowFocusListener;
if (listener != null ) {
switch (e.getID$()) {
case 207:
listener.windowGainedFocus$java_awt_event_WindowEvent(e);
break;
case 208:
listener.windowLostFocus$java_awt_event_WindowEvent(e);
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'processWindowStateEvent$java_awt_event_WindowEvent',  function (e) {
var listener=this.windowStateListener;
if (listener != null ) {
switch (e.getID$()) {
case 209:
listener.windowStateChanged$java_awt_event_WindowEvent(e);
break;
default:
break;
}
}});

Clazz_newMeth(C$, 'preProcessKeyEvent$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'postProcessKeyEvent$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'setAlwaysOnTop$Z',  function (alwaysOnTop) {
var oldAlwaysOnTop;
{
oldAlwaysOnTop=this.alwaysOnTop;
this.alwaysOnTop=alwaysOnTop;
}if (oldAlwaysOnTop != alwaysOnTop ) {
if (this.isAlwaysOnTopSupported$()) {
}this.firePropertyChange$S$Z$Z("alwaysOnTop", oldAlwaysOnTop, alwaysOnTop);
}});

Clazz_newMeth(C$, 'isAlwaysOnTopSupported$',  function () {
return $I$(7).getDefaultToolkit$().isAlwaysOnTopSupported$();
});

Clazz_newMeth(C$, 'isAlwaysOnTop$',  function () {
return this.alwaysOnTop;
});

Clazz_newMeth(C$, 'getFocusOwner$',  function () {
return (this.isFocused$()) ? $I$(18).getCurrentKeyboardFocusManager$().getFocusOwner$() : null;
});

Clazz_newMeth(C$, 'getMostRecentFocusOwner$',  function () {
if (this.isFocused$()) {
return this.getFocusOwner$();
} else {
var mostRecent=$I$(18).getMostRecentFocusOwner$java_awt_Window(this);
if (mostRecent != null ) {
return mostRecent;
} else {
return (this.isFocusableWindow$()) ? this.getFocusTraversalPolicy$().getInitialComponent$java_awt_Window(this) : null;
}}});

Clazz_newMeth(C$, 'isActive$',  function () {
return ($I$(18).getCurrentKeyboardFocusManager$().getActiveWindow$() === this );
});

Clazz_newMeth(C$, 'isFocused$',  function () {
return ($I$(18).getCurrentKeyboardFocusManager$().getGlobalFocusedWindow$() === this );
});

Clazz_newMeth(C$, 'getFocusTraversalKeys$I',  function (id) {
if (id < 0 || id >= 4 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["invalid focus traversal key identifier"]);
}var keystrokes=(this.focusTraversalKeys != null ) ? this.focusTraversalKeys[id] : null;
if (keystrokes != null ) {
return keystrokes;
} else {
return $I$(18).getCurrentKeyboardFocusManager$().getDefaultFocusTraversalKeys$I(id);
}});

Clazz_newMeth(C$, 'setFocusCycleRoot$Z',  function (focusCycleRoot) {
});

Clazz_newMeth(C$, 'isFocusCycleRoot$',  function () {
return true;
});

Clazz_newMeth(C$, 'getFocusCycleRootAncestor$',  function () {
return null;
});

Clazz_newMeth(C$, 'isFocusableWindow$',  function () {
if (!this.getFocusableWindowState$()) {
return false;
}if (Clazz_instanceOf(this, "java.awt.JSFrame") || Clazz_instanceOf(this, "java.awt.JSDialog") ) {
return true;
}if (this.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(this) == null ) {
return false;
}for (var owner=this.getOwner$(); owner != null ; owner=owner.getOwner$()) {
if (Clazz_instanceOf(owner, "java.awt.JSFrame") || Clazz_instanceOf(owner, "java.awt.JSDialog") ) {
return owner.isShowing$();
}}
return false;
});

Clazz_newMeth(C$, 'getFocusableWindowState$',  function () {
return this.focusableWindowState;
});

Clazz_newMeth(C$, 'setFocusableWindowState$Z',  function (focusableWindowState) {
var oldFocusableWindowState;
{
oldFocusableWindowState=this.focusableWindowState;
this.focusableWindowState=focusableWindowState;
}this.firePropertyChange$S$Z$Z("focusableWindowState", oldFocusableWindowState, focusableWindowState);
if (oldFocusableWindowState && !focusableWindowState && this.isFocused$()  ) {
for (var owner=this.getOwner$(); owner != null ; owner=owner.getOwner$()) {
}
}});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
C$.superclazz.prototype.addPropertyChangeListener$java_beans_PropertyChangeListener.apply(this, [listener]);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
C$.superclazz.prototype.addPropertyChangeListener$S$java_beans_PropertyChangeListener.apply(this, [propertyName, listener]);
});

Clazz_newMeth(C$, 'dispatchEventImpl$java_awt_AWTEvent',  function (e) {
if (e.getID$() == 101) {
this.invalidate$();
this.validate$();
}C$.superclazz.prototype.dispatchEventImpl$java_awt_AWTEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'postEvent$java_awt_Event',  function (e) {
if (this.handleEvent$java_awt_Event(e)) {
e.consume$();
return true;
}return false;
});

Clazz_newMeth(C$, 'isShowing$',  function () {
return this.visible;
});

Clazz_newMeth(C$, 'applyResourceBundle$java_util_ResourceBundle',  function (rb) {
this.applyComponentOrientation$java_awt_ComponentOrientation($I$(19).getOrientation$java_util_ResourceBundle(rb));
});

Clazz_newMeth(C$, 'applyResourceBundle$S',  function (rbName) {
this.applyResourceBundle$java_util_ResourceBundle($I$(20).getBundle$S(rbName));
});

Clazz_newMeth(C$, 'addOwnedWindow$java_awt_Window',  function (weakWindow) {
if (weakWindow != null ) {
weakWindow.秘appletViewer=this.秘appletViewer;
{
if (!this.ownedWindowList.contains$O(weakWindow)) {
this.ownedWindowList.addElement$O(weakWindow);
}}}});

Clazz_newMeth(C$, 'removeOwnedWindow$java_awt_Window',  function (weakWindow) {
if (weakWindow != null ) {
this.ownedWindowList.removeElement$O(weakWindow);
}});

Clazz_newMeth(C$, 'connectOwnedWindow$java_awt_Window',  function (child) {
child.parent=this;
this.addOwnedWindow$java_awt_Window(child);
});

Clazz_newMeth(C$, 'addToWindowList',  function () {
var windowList=this.appContext.get$O(Clazz_getClass(C$));
if (windowList == null ) {
windowList=Clazz_new_($I$(2,1));
this.appContext.put$O$O(Clazz_getClass(C$), windowList);
}windowList.add$O(this);
}, p$1);

Clazz_newMeth(C$, 'getGraphicsConfiguration$',  function () {
if (this.graphicsConfig == null ) this.graphicsConfig=$I$(11).getGraphicsConfiguration$();
return this.graphicsConfig;
});

Clazz_newMeth(C$, 'resetGC$',  function () {
});

Clazz_newMeth(C$, 'setLocationRelativeTo$java_awt_Component',  function (c) {
var root=null;
if (c != null ) {
if (c.isWindowOrJSApplet$()) {
root=c;
} else {
var parent;
for (parent=c.getParent$(); parent != null ; parent=parent.getParent$()) {
if (parent.isWindowOrJSApplet$()) {
root=parent;
break;
}}
}}var invokerScreenLocation;
if (c != null  && !c.isShowing$()  || root == null   || !root.isShowing$()  || (invokerScreenLocation=c.getLocationOnScreen$()) == null  ) {
var paneSize=this.getSize$();
var centerPoint=$I$(21).getLocalGraphicsEnvironment$().getCenterPoint$();
this.setLocation$I$I(centerPoint.x - (paneSize.width/2|0), centerPoint.y - (paneSize.height/2|0));
} else {
var invokerSize=c.getSize$();
var windowBounds=this.getBounds$();
var dx=invokerScreenLocation.x + ((invokerSize.width - windowBounds.width) >> 1);
var dy=invokerScreenLocation.y + ((invokerSize.height - windowBounds.height) >> 1);
var ss=root.getGraphicsConfiguration$().getBounds$();
if (dy + windowBounds.height > ss.y + ss.height) {
dy=ss.y + ss.height - windowBounds.height;
if (invokerScreenLocation.x - ss.x + (invokerSize.width/2|0) < (ss.width/2|0)) {
dx=invokerScreenLocation.x + invokerSize.width;
} else {
dx=invokerScreenLocation.x - windowBounds.width;
}}if (dx + windowBounds.width > ss.x + ss.width) {
dx=ss.x + ss.width - windowBounds.width;
}if (dx < ss.x) dx=ss.x;
if (dy < ss.y) dy=ss.y;
this.setLocation$I$I(dx, dy);
}});

Clazz_newMeth(C$, 'deliverMouseWheelToAncestor$java_awt_event_MouseWheelEvent',  function (e) {
});

Clazz_newMeth(C$, 'dispatchMouseWheelToAncestor$java_awt_event_MouseWheelEvent',  function (e) {
return false;
});

Clazz_newMeth(C$, 'getTemporaryLostComponent$',  function () {
return this.temporaryLostComponent;
});

Clazz_newMeth(C$, 'setTemporaryLostComponent$java_awt_Component',  function (component) {
var previousComp=this.temporaryLostComponent;
if (component == null  || component.canBeFocusOwner$() ) {
this.temporaryLostComponent=component;
} else {
this.temporaryLostComponent=null;
}return previousComp;
});

Clazz_newMeth(C$, 'canContainFocusOwner$java_awt_Component',  function (focusOwnerCandidate) {
return C$.superclazz.prototype.canContainFocusOwner$java_awt_Component.apply(this, [focusOwnerCandidate]) && this.isFocusableWindow$() ;
});

Clazz_newMeth(C$, 'setLocationByPlatform$Z',  function (locationByPlatform) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (locationByPlatform && this.isShowing$() ) {
throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["The window is showing on screen."]);
}this.locationByPlatform=locationByPlatform;
}});

Clazz_newMeth(C$, 'isLocationByPlatform$',  function () {
return this.locationByPlatform;
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I',  function (x, y, width, height) {
C$.superclazz.prototype.setBounds$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'setBounds$java_awt_Rectangle',  function (r) {
this.setBounds$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'isRecursivelyVisible$',  function () {
return this.visible;
});

Clazz_newMeth(C$, 'getOpacity$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
return this.opacity;
}});

Clazz_newMeth(C$, 'setOpacity$F',  function (opacity) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
if (opacity < 0.0  || opacity > 1.0  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["The value of opacity should be in the range [0.0f .. 1.0f]."]);
}this.opacity=opacity;
}});

Clazz_newMeth(C$, 'getShape$',  function () {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
return this.shape;
}});

Clazz_newMeth(C$, 'setShape$java_awt_Shape',  function (shape) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
this.shape=shape;
}});

Clazz_newMeth(C$, 'isOpaque$',  function () {
return this.opaque;
});

Clazz_newMeth(C$, 'setOpaque$Z',  function (opaque) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
C$.setLayersOpaque$java_awt_Component$Z(this, opaque);
this.opaque=opaque;
var peer=this.getPeer$();
if (peer != null ) {
peer.setOpaque$Z(opaque);
}}});

Clazz_newMeth(C$, 'setLayersOpaque$java_awt_Component$Z',  function (component, isOpaque) {
if (Clazz_instanceOf(component, "javax.swing.RootPaneContainer")) {
var rpc=component;
var root=rpc.getRootPane$();
var lp=root.getLayeredPane$();
var c=root.getContentPane$();
var content=(Clazz_instanceOf(c, "javax.swing.JComponent") ? c : null);
lp.setOpaque$Z(isOpaque);
root.setOpaque$Z(isOpaque);
root.setDoubleBuffered$Z(isOpaque);
if (content != null ) {
content.setOpaque$Z(isOpaque);
content.setDoubleBuffered$Z(isOpaque);
var numChildren=content.getComponentCount$();
if (numChildren > 0) {
var child=content.getComponent$I(0);
if (Clazz_instanceOf(child, "javax.swing.RootPaneContainer")) {
C$.setLayersOpaque$java_awt_Component$Z(child, isOpaque);
}}}}var bg=component.getBackground$();
var hasTransparentBg=C$.TRANSPARENT_BACKGROUND_COLOR.equals$O(bg);
var container=null;
if (Clazz_instanceOf(component, "java.awt.Container")) {
container=component;
}if (isOpaque) {
if (hasTransparentBg) {
var newColor=null;
if (container != null  && container.preserveBackgroundColor != null  ) {
newColor=container.preserveBackgroundColor;
} else {
newColor=Clazz_new_($I$(1,1).c$$I$I$I,[255, 255, 255]);
}component.setBackground$java_awt_Color(newColor);
}} else {
if (!hasTransparentBg && container != null  ) {
container.preserveBackgroundColor=bg;
}component.setBackground$java_awt_Color(C$.TRANSPARENT_BACKGROUND_COLOR);
}}, 1);

Clazz_newMeth(C$, 'getContainer$',  function () {
return null;
});

Clazz_newMeth(C$, 'mixOnReshaping$',  function () {
});

Clazz_newMeth(C$, 'getLocationOnWindow$',  function () {
return Clazz_new_($I$(22,1).c$$I$I,[0, 0]);
});

Clazz_newMeth(C$, 'isValidateRoot$',  function () {
return true;
});

Clazz_newMeth(C$, 'revalidate$',  function () {
if (this.ui != null ) (this.ui).setTainted$();
this.invalidate$();
this.validate$();
});

C$.$static$=function(){C$.$static$=0;
C$.systemSyncLWRequests=false;
C$.nameCounter=0;
C$.TRANSPARENT_BACKGROUND_COLOR=Clazz_new_($I$(1,1).c$$I$I$I$I,[0, 0, 0, 0]);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.color"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "ColorSpace");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.compName=null;
},1);

C$.$fields$=[['I',['type','numComponents'],'O',['compName','String[]']]
,['O',['sRGBspace','java.awt.color.ColorSpace','+GRAYspace']]]

Clazz_newMeth(C$, 'c$$I$I',  function (type, numcomponents) {
;C$.$init$.apply(this);
this.type=type;
this.numComponents=numcomponents;
}, 1);

Clazz_newMeth(C$, 'getInstance$I',  function (colorspace) {
var theColorSpace;
switch (colorspace) {
default:
case 1000:
if (C$.sRGBspace == null ) {
C$.sRGBspace=Clazz_new_(C$.c$$I$I,[5, 3]);
}theColorSpace=C$.sRGBspace;
break;
case 1003:
{
if (C$.GRAYspace == null ) {
C$.GRAYspace=Clazz_new_(C$.c$$I$I,[6, 1]);
}theColorSpace=C$.GRAYspace;
}break;
}
return theColorSpace;
}, 1);

Clazz_newMeth(C$, 'isCS_sRGB$',  function () {
return (this === C$.sRGBspace );
});

Clazz_newMeth(C$, 'toRGB$FA',  function (colorvalue) {
return colorvalue;
});

Clazz_newMeth(C$, 'fromRGB$FA',  function (rgbvalue) {
return rgbvalue;
});

Clazz_newMeth(C$, 'getType$',  function () {
return this.type;
});

Clazz_newMeth(C$, 'getNumComponents$',  function () {
return this.numComponents;
});

Clazz_newMeth(C$, 'getName$I',  function (idx) {
if ((idx < 0) || (idx > this.numComponents - 1) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Component index out of range: " + idx]);
}if (this.compName == null ) {
switch (this.type) {
case 0:
this.compName=Clazz_array(String, -1, ["X", "Y", "Z"]);
break;
case 1:
this.compName=Clazz_array(String, -1, ["L", "a", "b"]);
break;
case 2:
this.compName=Clazz_array(String, -1, ["L", "u", "v"]);
break;
case 3:
this.compName=Clazz_array(String, -1, ["Y", "Cb", "Cr"]);
break;
case 4:
this.compName=Clazz_array(String, -1, ["Y", "x", "y"]);
break;
case 5:
this.compName=Clazz_array(String, -1, ["Red", "Green", "Blue"]);
break;
case 6:
this.compName=Clazz_array(String, -1, ["Gray"]);
break;
case 7:
this.compName=Clazz_array(String, -1, ["Hue", "Saturation", "Value"]);
break;
case 8:
this.compName=Clazz_array(String, -1, ["Hue", "Lightness", "Saturation"]);
break;
case 9:
this.compName=Clazz_array(String, -1, ["Cyan", "Magenta", "Yellow", "Black"]);
break;
case 11:
this.compName=Clazz_array(String, -1, ["Cyan", "Magenta", "Yellow"]);
break;
default:
var tmp=Clazz_array(String, [this.numComponents]);
for (var i=0; i < tmp.length; i++) {
tmp[i]="Unnamed color component(" + i + ")" ;
}
this.compName=tmp;
}
}return this.compName[idx];
});

Clazz_newMeth(C$, 'getMinValue$I',  function (component) {
if ((component < 0) || (component > this.numComponents - 1) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Component index out of range: " + component]);
}return 0.0;
});

Clazz_newMeth(C$, 'getMaxValue$I',  function (component) {
if ((component < 0) || (component > this.numComponents - 1) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Component index out of range: " + component]);
}return 1.0;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.datatransfer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ClipboardOwner");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.datatransfer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "FlavorMap");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.datatransfer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "FlavorTable", null, null, 'java.awt.datatransfer.FlavorMap');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.datatransfer"),p$1={},I$=[[0,'java.util.HashMap','java.util.HashSet','Thread','java.awt.datatransfer.MimeType','sun.awt.datatransfer.DataTransferer','java.awt.datatransfer.DataFlavor','StringBuilder','java.util.ArrayList','java.util.LinkedList']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SystemFlavorMap", null, null, ['java.awt.datatransfer.FlavorMap', 'java.awt.datatransfer.FlavorTable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.nativeToFlavor=Clazz_new_($I$(1,1));
this.flavorToNative=Clazz_new_($I$(1,1));
this.getNativesForFlavorCache=Clazz_new_($I$(1,1));
this.getFlavorsForNativeCache=Clazz_new_($I$(1,1));
this.disabledMappingGenerationKeys=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['O',['nativeToFlavor','java.util.Map','+flavorToNative','+getNativesForFlavorCache','+getFlavorsForNativeCache','disabledMappingGenerationKeys','java.util.Set']]
,['S',['JavaMIME'],'O',['flavorMaps','java.util.HashMap','UNICODE_TEXT_CLASSES','String[]','+ENCODED_TEXT_CLASSES']]]

Clazz_newMeth(C$, 'getDefaultFlavorMap$',  function () {
var contextClassLoader=$I$(3).currentThread$().getContextClassLoader$();
if (contextClassLoader == null ) {
contextClassLoader=ClassLoader.getSystemClassLoader$();
}var fm;
{
fm=C$.flavorMaps.get$O(contextClassLoader);
if (fm == null ) {
fm=Clazz_new_(C$);
C$.flavorMaps.put$O$O(contextClassLoader, fm);
}}return fm;
}, 1);

Clazz_newMeth(C$, 'parseAndStoreReader$java_io_BufferedReader',  function ($in) {
while (true){
var line=$in.readLine$();
if (line == null ) {
return;
}if (line.length$() > 0) {
var firstChar=line.charAt$I(0);
if (firstChar != "#" && firstChar != "!" ) {
while (p$1.continueLine$S.apply(this, [line])){
var nextLine=$in.readLine$();
if (nextLine == null ) {
nextLine=("");
}var loppedLine=line.substring$I$I(0, line.length$() - 1);
var startIndex=0;
for (; startIndex < nextLine.length$(); startIndex++) {
if (" \t\r\n\f".indexOf$I(nextLine.charAt$I(startIndex)) == -1) {
break;
}}
nextLine=nextLine.substring$I$I(startIndex, nextLine.length$());
line= String.instantialize(loppedLine + nextLine);
}
var len=line.length$();
var keyStart=0;
for (; keyStart < len; keyStart++) {
if (" \t\r\n\f".indexOf$I(line.charAt$I(keyStart)) == -1) {
break;
}}
if (keyStart == len) {
continue;
}var separatorIndex=keyStart;
for (; separatorIndex < len; separatorIndex++) {
var currentChar=line.charAt$I(separatorIndex);
if (currentChar == "\\") {
++separatorIndex;
} else if ("=: \t\r\n\f".indexOf$I(currentChar) != -1) {
break;
}}
var valueIndex=separatorIndex;
for (; valueIndex < len; valueIndex++) {
if (" \t\r\n\f".indexOf$I(line.charAt$I(valueIndex)) == -1) {
break;
}}
if (valueIndex < len) {
if ("=:".indexOf$I(line.charAt$I(valueIndex)) != -1) {
++valueIndex;
}}while (valueIndex < len){
if (" \t\r\n\f".indexOf$I(line.charAt$I(valueIndex)) == -1) {
break;
}++valueIndex;
}
var key=line.substring$I$I(keyStart, separatorIndex);
var value=(separatorIndex < len) ? line.substring$I$I(valueIndex, len) : "";
key=p$1.loadConvert$S.apply(this, [key]);
value=p$1.loadConvert$S.apply(this, [value]);
try {
var mime=Clazz_new_($I$(4,1).c$$S,[value]);
if ("text".equals$O(mime.getPrimaryType$())) {
var charset=mime.getParameter$S("charset");
if ($I$(5,"doesSubtypeSupportCharset$S$S",[mime.getSubType$(), charset])) {
var transferer=$I$(5).getInstance$();
if (transferer != null ) {
transferer.registerTextFlavorProperties$S$S$S$S(key, charset, mime.getParameter$S("eoln"), mime.getParameter$S("terminators"));
}}mime.removeParameter$S("charset");
mime.removeParameter$S("class");
mime.removeParameter$S("eoln");
mime.removeParameter$S("terminators");
value=mime.toString();
}} catch (e) {
if (Clazz_exceptionOf(e,"java.awt.datatransfer.MimeTypeParseException")){
e.printStackTrace$();
continue;
} else {
throw e;
}
}
var flavor;
try {
flavor=Clazz_new_($I$(6,1).c$$S,[value]);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
try {
flavor=Clazz_new_($I$(6,1).c$$S$S,[value, null]);
} catch (ee) {
if (Clazz_exceptionOf(ee,"Exception")){
ee.printStackTrace$();
continue;
} else {
throw ee;
}
}
} else {
throw e;
}
}
if ("text".equals$O(flavor.getPrimaryType$())) {
p$1.store$O$O$java_util_Map.apply(this, [value, key, this.flavorToNative]);
p$1.store$O$O$java_util_Map.apply(this, [key, value, this.nativeToFlavor]);
} else {
p$1.store$O$O$java_util_Map.apply(this, [flavor, key, this.flavorToNative]);
p$1.store$O$O$java_util_Map.apply(this, [key, flavor, this.nativeToFlavor]);
}}}}
}, p$1);

Clazz_newMeth(C$, 'continueLine$S',  function (line) {
var slashCount=0;
var index=line.length$() - 1;
while ((index >= 0) && (line.charAt$I(index--) == "\\") ){
++slashCount;
}
return (slashCount % 2 == 1);
}, p$1);

Clazz_newMeth(C$, 'loadConvert$S',  function (theString) {
var aChar;
var len=theString.length$();
var outBuffer=Clazz_new_($I$(7,1).c$$I,[len]);
for (var x=0; x < len; ) {
aChar=theString.charAt$I(x++);
if (aChar == "\\") {
aChar=theString.charAt$I(x++);
if (aChar == "u") {
var value=0;
for (var i=0; i < 4; i++) {
aChar=theString.charAt$I(x++);
switch (aChar.$c()) {
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
{
value=(value << 4) + aChar.$c() - 48;
break;
}case 97:
case 98:
case 99:
case 100:
case 101:
case 102:
{
value=(value << 4) + 10 + aChar.$c()  - 97;
break;
}case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
{
value=(value << 4) + 10 + aChar.$c()  - 65;
break;
}default:
{
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Malformed \\uxxxx encoding."]);
}}
}
outBuffer.append$C(String.fromCharCode(value));
} else {
if (aChar == "t") {
aChar="\t";
} else if (aChar == "r") {
aChar="\r";
} else if (aChar == "n") {
aChar="\n";
} else if (aChar == "f") {
aChar="\f";
}outBuffer.append$C(aChar);
}} else {
outBuffer.append$C(aChar);
}}
return outBuffer.toString();
}, p$1);

Clazz_newMeth(C$, 'store$O$O$java_util_Map',  function (hashed, listed, map) {
var list=map.get$O(hashed);
if (list == null ) {
list=Clazz_new_($I$(8,1).c$$I,[1]);
map.put$O$O(hashed, list);
}if (!list.contains$O(listed)) {
list.add$O(listed);
}}, p$1);

Clazz_newMeth(C$, 'nativeToFlavorLookup$S',  function (nat) {
var flavors=this.nativeToFlavor.get$O(nat);
if (nat != null  && !this.disabledMappingGenerationKeys.contains$O(nat) ) {
var transferer=$I$(5).getInstance$();
if (transferer != null ) {
var platformFlavors=transferer.getPlatformMappingsForNative$S(nat);
if (!platformFlavors.isEmpty$()) {
if (flavors != null ) {
platformFlavors.removeAll$java_util_Collection(Clazz_new_($I$(2,1).c$$java_util_Collection,[flavors]));
platformFlavors.addAll$java_util_Collection(flavors);
}flavors=platformFlavors;
}}}if (flavors == null  && C$.isJavaMIMEType$S(nat) ) {
var decoded=C$.decodeJavaMIMEType$S(nat);
var flavor=null;
try {
flavor=Clazz_new_($I$(6,1).c$$S,[decoded]);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("Exception \"" + e.getClass$().getName$() + ": " + e.getMessage$() + "\"while constructing DataFlavor for: " + decoded );
} else {
throw e;
}
}
if (flavor != null ) {
flavors=Clazz_new_($I$(8,1).c$$I,[1]);
this.nativeToFlavor.put$O$O(nat, flavors);
flavors.add$O(flavor);
this.getFlavorsForNativeCache.remove$O(nat);
this.getFlavorsForNativeCache.remove$O(null);
var natives=this.flavorToNative.get$O(flavor);
if (natives == null ) {
natives=Clazz_new_($I$(8,1).c$$I,[1]);
this.flavorToNative.put$O$O(flavor, natives);
}natives.add$O(nat);
this.getNativesForFlavorCache.remove$O(flavor);
this.getNativesForFlavorCache.remove$O(null);
}}return (flavors != null ) ? flavors : Clazz_new_($I$(8,1).c$$I,[0]);
}, p$1);

Clazz_newMeth(C$, 'flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z',  function (flav, synthesize) {
var natives=this.flavorToNative.get$O(flav);
if (flav != null  && !this.disabledMappingGenerationKeys.contains$O(flav) ) {
var transferer=$I$(5).getInstance$();
if (transferer != null ) {
var platformNatives=transferer.getPlatformMappingsForFlavor$java_awt_datatransfer_DataFlavor(flav);
if (!platformNatives.isEmpty$()) {
if (natives != null ) {
platformNatives.removeAll$java_util_Collection(Clazz_new_($I$(2,1).c$$java_util_Collection,[natives]));
platformNatives.addAll$java_util_Collection(natives);
}natives=platformNatives;
}}}if (natives == null ) {
if (synthesize) {
var encoded=C$.encodeDataFlavor$java_awt_datatransfer_DataFlavor(flav);
natives=Clazz_new_($I$(8,1).c$$I,[1]);
this.flavorToNative.put$O$O(flav, natives);
natives.add$O(encoded);
this.getNativesForFlavorCache.remove$O(flav);
this.getNativesForFlavorCache.remove$O(null);
var flavors=this.nativeToFlavor.get$O(encoded);
if (flavors == null ) {
flavors=Clazz_new_($I$(8,1).c$$I,[1]);
this.nativeToFlavor.put$O$O(encoded, flavors);
}flavors.add$O(flav);
this.getFlavorsForNativeCache.remove$O(encoded);
this.getFlavorsForNativeCache.remove$O(null);
} else {
natives=Clazz_new_($I$(8,1).c$$I,[0]);
}}return natives;
}, p$1);

Clazz_newMeth(C$, 'getNativesForFlavor$java_awt_datatransfer_DataFlavor',  function (flav) {
var retval=null;
var refval=this.getNativesForFlavorCache.get$O(flav);
if (retval != null ) {
return Clazz_new_($I$(8,1).c$$java_util_Collection,[retval]);
}if (flav == null ) {
retval=Clazz_new_([this.nativeToFlavor.keySet$()],$I$(8,1).c$$java_util_Collection);
} else if (this.disabledMappingGenerationKeys.contains$O(flav)) {
retval=p$1.flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z.apply(this, [flav, !true]);
} else if ($I$(5).isFlavorCharsetTextType$java_awt_datatransfer_DataFlavor(flav)) {
if ("text".equals$O(flav.getPrimaryType$())) {
retval=this.flavorToNative.get$O(flav.mimeType.getBaseType$());
if (retval != null ) {
retval=Clazz_new_($I$(8,1).c$$java_util_Collection,[retval]);
}}var textPlainList=this.flavorToNative.get$O("text/plain");
if (textPlainList != null  && !textPlainList.isEmpty$() ) {
textPlainList=Clazz_new_($I$(8,1).c$$java_util_Collection,[textPlainList]);
if (retval != null  && !retval.isEmpty$() ) {
textPlainList.removeAll$java_util_Collection(Clazz_new_($I$(2,1).c$$java_util_Collection,[retval]));
retval.addAll$java_util_Collection(textPlainList);
} else {
retval=textPlainList;
}}if (retval == null  || retval.isEmpty$() ) {
retval=p$1.flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z.apply(this, [flav, true]);
} else {
var explicitList=p$1.flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z.apply(this, [flav, !true]);
if (!explicitList.isEmpty$()) {
explicitList=Clazz_new_($I$(8,1).c$$java_util_Collection,[explicitList]);
explicitList.removeAll$java_util_Collection(Clazz_new_($I$(2,1).c$$java_util_Collection,[retval]));
retval.addAll$java_util_Collection(explicitList);
}}} else if ($I$(5).isFlavorNoncharsetTextType$java_awt_datatransfer_DataFlavor(flav)) {
retval=this.flavorToNative.get$O(flav.mimeType.getBaseType$());
if (retval == null  || retval.isEmpty$() ) {
retval=p$1.flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z.apply(this, [flav, true]);
} else {
var explicitList=p$1.flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z.apply(this, [flav, !true]);
if (!explicitList.isEmpty$()) {
retval=Clazz_new_($I$(8,1).c$$java_util_Collection,[retval]);
explicitList=Clazz_new_($I$(8,1).c$$java_util_Collection,[explicitList]);
explicitList.removeAll$java_util_Collection(Clazz_new_($I$(2,1).c$$java_util_Collection,[retval]));
retval.addAll$java_util_Collection(explicitList);
}}} else {
retval=p$1.flavorToNativeLookup$java_awt_datatransfer_DataFlavor$Z.apply(this, [flav, true]);
}this.getNativesForFlavorCache.put$O$O(flav, retval);
return Clazz_new_($I$(8,1).c$$java_util_Collection,[retval]);
});

Clazz_newMeth(C$, 'getFlavorsForNative$S',  function (nat) {
var rval=this.getFlavorsForNativeCache.get$O(nat);
if (rval != null ) {
return rval.clone$();
}var retval=Clazz_new_($I$(9,1));
if (nat == null ) {
var natives=this.getNativesForFlavor$java_awt_datatransfer_DataFlavor(null);
var dups=Clazz_new_([natives.size$()],$I$(2,1).c$$I);
for (var natives_iter=natives.iterator$(); natives_iter.hasNext$(); ) {
var flavors=this.getFlavorsForNative$S(natives_iter.next$());
for (var flavors_iter=flavors.iterator$(); flavors_iter.hasNext$(); ) {
var flavor=flavors_iter.next$();
if (dups.add$O(flavor)) {
retval.add$O(flavor);
}}
}
} else {
var flavors=p$1.nativeToFlavorLookup$S.apply(this, [nat]);
if (this.disabledMappingGenerationKeys.contains$O(nat)) {
return flavors;
}var dups=Clazz_new_([flavors.size$()],$I$(2,1).c$$I);
var flavorsAndbaseTypes=p$1.nativeToFlavorLookup$S.apply(this, [nat]);
for (var flavorsAndbaseTypes_iter=flavorsAndbaseTypes.iterator$(); flavorsAndbaseTypes_iter.hasNext$(); ) {
var value=flavorsAndbaseTypes_iter.next$();
if (Clazz_instanceOf(value, "java.lang.String")) {
var baseType=value;
var subType=null;
try {
var mimeType=Clazz_new_($I$(4,1).c$$S,[baseType]);
subType=mimeType.getSubType$();
} catch (mtpe) {
if (Clazz_exceptionOf(mtpe,"java.awt.datatransfer.MimeTypeParseException")){
Clazz_assert(C$, this, function(){return (false)});
} else {
throw mtpe;
}
}
if ($I$(5).doesSubtypeSupportCharset$S$S(subType, null)) {
if ("text/plain".equals$O(baseType) && dups.add$O($I$(6).stringFlavor) ) {
retval.add$O($I$(6).stringFlavor);
}for (var i=0; i < C$.UNICODE_TEXT_CLASSES.length; i++) {
var toAdd=null;
try {
toAdd=Clazz_new_([baseType + ";charset=Unicode;class=" + C$.UNICODE_TEXT_CLASSES[i] ],$I$(6,1).c$$S);
} catch (cannotHappen) {
if (Clazz_exceptionOf(cannotHappen,"ClassNotFoundException")){
} else {
throw cannotHappen;
}
}
if (dups.add$O(toAdd)) {
retval.add$O(toAdd);
}}
for (var charset_iter=$I$(5).standardEncodings$(); charset_iter.hasNext$(); ) {
var charset=charset_iter.next$();
for (var i=0; i < C$.ENCODED_TEXT_CLASSES.length; i++) {
var toAdd=null;
try {
toAdd=Clazz_new_([baseType + ";charset=" + charset + ";class=" + C$.ENCODED_TEXT_CLASSES[i] ],$I$(6,1).c$$S);
} catch (cannotHappen) {
if (Clazz_exceptionOf(cannotHappen,"ClassNotFoundException")){
} else {
throw cannotHappen;
}
}
if (toAdd.equals$java_awt_datatransfer_DataFlavor($I$(6).plainTextFlavor)) {
toAdd=$I$(6).plainTextFlavor;
}if (dups.add$O(toAdd)) {
retval.add$O(toAdd);
}}
}
if ("text/plain".equals$O(baseType) && dups.add$O($I$(6).plainTextFlavor) ) {
retval.add$O($I$(6).plainTextFlavor);
}} else {
for (var i=0; i < C$.ENCODED_TEXT_CLASSES.length; i++) {
var toAdd=null;
try {
toAdd=Clazz_new_([baseType + ";class=" + C$.ENCODED_TEXT_CLASSES[i] ],$I$(6,1).c$$S);
} catch (cannotHappen) {
if (Clazz_exceptionOf(cannotHappen,"ClassNotFoundException")){
} else {
throw cannotHappen;
}
}
if (dups.add$O(toAdd)) {
retval.add$O(toAdd);
}}
}} else {
var flavor=value;
if (dups.add$O(flavor)) {
retval.add$O(flavor);
}}}
}var arrayList=Clazz_new_($I$(8,1).c$$java_util_Collection,[retval]);
this.getFlavorsForNativeCache.put$O$O(nat, arrayList);
return arrayList.clone$();
});

Clazz_newMeth(C$, 'getNativesForFlavors$java_awt_datatransfer_DataFlavorA',  function (flavors) {
if (flavors == null ) {
var flavor_list=this.getFlavorsForNative$S(null);
flavors=Clazz_array($I$(6), [flavor_list.size$()]);
flavor_list.toArray$OA(flavors);
}var retval=Clazz_new_($I$(1,1).c$$I$F,[flavors.length, 1.0]);
for (var i=0; i < flavors.length; i++) {
var natives=this.getNativesForFlavor$java_awt_datatransfer_DataFlavor(flavors[i]);
var nat=(natives.isEmpty$()) ? null : natives.get$I(0);
retval.put$O$O(flavors[i], nat);
}
return retval;
});

Clazz_newMeth(C$, 'getFlavorsForNatives$SA',  function (natives) {
if (natives == null ) {
var native_list=this.getNativesForFlavor$java_awt_datatransfer_DataFlavor(null);
natives=Clazz_array(String, [native_list.size$()]);
native_list.toArray$OA(natives);
}var retval=Clazz_new_($I$(1,1).c$$I$F,[natives.length, 1.0]);
for (var i=0; i < natives.length; i++) {
var flavors=this.getFlavorsForNative$S(natives[i]);
var flav=(flavors.isEmpty$()) ? null : flavors.get$I(0);
retval.put$O$O(natives[i], flav);
}
return retval;
});

Clazz_newMeth(C$, 'addUnencodedNativeForFlavor$java_awt_datatransfer_DataFlavor$S',  function (flav, nat) {
if (flav == null  || nat == null  ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["null arguments not permitted"]);
}var natives=this.flavorToNative.get$O(flav);
if (natives == null ) {
natives=Clazz_new_($I$(8,1).c$$I,[1]);
this.flavorToNative.put$O$O(flav, natives);
} else if (natives.contains$O(nat)) {
return;
}natives.add$O(nat);
this.getNativesForFlavorCache.remove$O(flav);
this.getNativesForFlavorCache.remove$O(null);
});

Clazz_newMeth(C$, 'setNativesForFlavor$java_awt_datatransfer_DataFlavor$SA',  function (flav, natives) {
if (flav == null  || natives == null  ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["null arguments not permitted"]);
}this.flavorToNative.remove$O(flav);
for (var i=0; i < natives.length; i++) {
this.addUnencodedNativeForFlavor$java_awt_datatransfer_DataFlavor$S(flav, natives[i]);
}
this.disabledMappingGenerationKeys.add$O(flav);
this.getNativesForFlavorCache.remove$O(flav);
this.getNativesForFlavorCache.remove$O(null);
});

Clazz_newMeth(C$, 'addFlavorForUnencodedNative$S$java_awt_datatransfer_DataFlavor',  function (nat, flav) {
if (nat == null  || flav == null  ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["null arguments not permitted"]);
}var flavors=this.nativeToFlavor.get$O(nat);
if (flavors == null ) {
flavors=Clazz_new_($I$(8,1).c$$I,[1]);
this.nativeToFlavor.put$O$O(nat, flavors);
} else if (flavors.contains$O(flav)) {
return;
}flavors.add$O(flav);
this.getFlavorsForNativeCache.remove$O(nat);
this.getFlavorsForNativeCache.remove$O(null);
});

Clazz_newMeth(C$, 'setFlavorsForNative$S$java_awt_datatransfer_DataFlavorA',  function (nat, flavors) {
if (nat == null  || flavors == null  ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["null arguments not permitted"]);
}this.nativeToFlavor.remove$O(nat);
for (var i=0; i < flavors.length; i++) {
this.addFlavorForUnencodedNative$S$java_awt_datatransfer_DataFlavor(nat, flavors[i]);
}
this.disabledMappingGenerationKeys.add$O(nat);
this.getFlavorsForNativeCache.remove$O(nat);
this.getFlavorsForNativeCache.remove$O(null);
});

Clazz_newMeth(C$, 'encodeJavaMIMEType$S',  function (mimeType) {
return (mimeType != null ) ? C$.JavaMIME + mimeType : null;
}, 1);

Clazz_newMeth(C$, 'encodeDataFlavor$java_awt_datatransfer_DataFlavor',  function (flav) {
return (flav != null ) ? C$.encodeJavaMIMEType$S(flav.getMimeType$()) : null;
}, 1);

Clazz_newMeth(C$, 'isJavaMIMEType$S',  function (str) {
return (str != null  && str.startsWith$S$I(C$.JavaMIME, 0) );
}, 1);

Clazz_newMeth(C$, 'decodeJavaMIMEType$S',  function (nat) {
return (C$.isJavaMIMEType$S(nat)) ? nat.substring$I$I(C$.JavaMIME.length$(), nat.length$()).trim$() : null;
}, 1);

Clazz_newMeth(C$, 'decodeDataFlavor$S',  function (nat) {
var retval_str=C$.decodeJavaMIMEType$S(nat);
return (retval_str != null ) ? Clazz_new_($I$(6,1).c$$S,[retval_str]) : null;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.JavaMIME="JAVA_DATAFLAVOR:";
C$.flavorMaps=Clazz_new_($I$(1,1));
C$.UNICODE_TEXT_CLASSES=Clazz_array(String, -1, ["java.io.Reader", "java.lang.String", "java.nio.CharBuffer", "\"[C\""]);
C$.ENCODED_TEXT_CLASSES=Clazz_array(String, -1, ["java.io.InputStream", "java.nio.ByteBuffer", "\"[B\""]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "DragGestureListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),I$=[[0,'java.util.ArrayList','java.awt.dnd.DragGestureEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DragGestureRecognizer", null, null, 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.events=Clazz_new_($I$(1,1).c$$I,[1]);
},1);

C$.$fields$=[['I',['sourceActions'],'O',['dragSource','java.awt.dnd.DragSource','component','java.awt.Component','dragGestureListener','java.awt.dnd.DragGestureListener','events','java.util.ArrayList']]]

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener',  function (ds, c, sa, dgl) {
;C$.$init$.apply(this);
if (ds == null ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["null DragSource"]);
this.dragSource=ds;
this.component=c;
this.sourceActions=sa & (1073741827);
try {
if (dgl != null ) this.addDragGestureListener$java_awt_dnd_DragGestureListener(dgl);
} catch (tmle) {
if (Clazz_exceptionOf(tmle,"java.util.TooManyListenersException")){
} else {
throw tmle;
}
}
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource$java_awt_Component$I',  function (ds, c, sa) {
C$.c$$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener.apply(this, [ds, c, sa, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource$java_awt_Component',  function (ds, c) {
C$.c$$java_awt_dnd_DragSource$java_awt_Component$I.apply(this, [ds, c, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource',  function (ds) {
C$.c$$java_awt_dnd_DragSource$java_awt_Component.apply(this, [ds, null]);
}, 1);

Clazz_newMeth(C$, 'getDragSource$',  function () {
return this.dragSource;
});

Clazz_newMeth(C$, 'getComponent$',  function () {
return this.component;
});

Clazz_newMeth(C$, 'setComponent$java_awt_Component',  function (c) {
if (this.component != null  && this.dragGestureListener != null  ) this.unregisterListeners$();
this.component=c;
if (this.component != null  && this.dragGestureListener != null  ) this.registerListeners$();
});

Clazz_newMeth(C$, 'getSourceActions$',  function () {
return this.sourceActions;
});

Clazz_newMeth(C$, 'setSourceActions$I',  function (actions) {
this.sourceActions=actions & (1073741827);
});

Clazz_newMeth(C$, 'getTriggerEvent$',  function () {
return this.events.isEmpty$() ? null : this.events.get$I(0);
});

Clazz_newMeth(C$, 'resetRecognizer$',  function () {
this.events.clear$();
});

Clazz_newMeth(C$, 'addDragGestureListener$java_awt_dnd_DragGestureListener',  function (dgl) {
if (this.dragGestureListener != null ) throw Clazz_new_(Clazz_load('java.util.TooManyListenersException'));
 else {
this.dragGestureListener=dgl;
if (this.component != null ) this.registerListeners$();
}});

Clazz_newMeth(C$, 'removeDragGestureListener$java_awt_dnd_DragGestureListener',  function (dgl) {
if (this.dragGestureListener == null  || !this.dragGestureListener.equals$O(dgl) ) throw Clazz_new_(Clazz_load('IllegalArgumentException'));
 else {
this.dragGestureListener=null;
if (this.component != null ) this.unregisterListeners$();
}});

Clazz_newMeth(C$, 'fireDragGestureRecognized$I$java_awt_Point',  function (dragAction, p) {
try {
if (this.dragGestureListener != null ) {
this.dragGestureListener.dragGestureRecognized$java_awt_dnd_DragGestureEvent(Clazz_new_($I$(2,1).c$$java_awt_dnd_DragGestureRecognizer$I$java_awt_Point$java_util_List,[this, dragAction, p, this.events]));
}} finally {
this.events.clear$();
}
});

Clazz_newMeth(C$, 'appendEvent$java_awt_event_InputEvent',  function (awtie) {
this.events.add$O(awtie);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),I$=[[0,'java.awt.datatransfer.SystemFlavorMap','java.awt.Toolkit','sun.awt.dnd.SunDragSourceContextPeer','java.awt.dnd.DragSourceContext','java.awt.dnd.MouseDragGestureRecognizer','java.awt.dnd.DnDEventMulticaster','java.awt.dnd.DragSourceListener','java.awt.dnd.DragSourceMotionListener','java.awt.AWTEventMulticaster']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DragSource", null, null, 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.flavorMap=$I$(1).getDefaultFlavorMap$();
},1);

C$.$fields$=[['O',['flavorMap','java.awt.datatransfer.FlavorMap','listener','java.awt.dnd.DragSourceListener','motionListener','java.awt.dnd.DragSourceMotionListener']]
,['O',['DefaultCopyDrop','java.awt.Cursor','+DefaultMoveDrop','+DefaultLinkDrop','+DefaultCopyNoDrop','+DefaultMoveNoDrop','+DefaultLinkNoDrop','dflt','java.awt.dnd.DragSource']]]

Clazz_newMeth(C$, 'load$S',  function (name) {
try {
return $I$(2).getDefaultToolkit$().getDesktopProperty$S(name);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
throw Clazz_new_(Clazz_load('RuntimeException').c$$S,["failed to load system cursor: " + name + " : " + e.getMessage$() ]);
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'getDefaultDragSource$',  function () {
return C$.dflt;
}, 1);

Clazz_newMeth(C$, 'isDragImageSupported$',  function () {
var supported;
try {
supported=$I$(2).getDefaultToolkit$().getDesktopProperty$S("DnD.isDragImageSupported");
return supported.booleanValue$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
return false;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener$java_awt_datatransfer_FlavorMap',  function (trigger, dragCursor, dragImage, imageOffset, transferable, dsl, flavorMap) {
$I$(3).setDragDropInProgress$Z(true);
try {
if (flavorMap != null ) this.flavorMap=flavorMap;
var dscp=$I$(2).getDefaultToolkit$().createDragSourceContextPeer$java_awt_dnd_DragGestureEvent(trigger);
var dsc=this.createDragSourceContext$java_awt_dnd_peer_DragSourceContextPeer$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener(dscp, trigger, dragCursor, dragImage, imageOffset, transferable, dsl);
if (dsc == null ) {
throw Clazz_new_(Clazz_load('java.awt.dnd.InvalidDnDOperationException'));
}dscp.startDrag$java_awt_dnd_DragSourceContext$java_awt_Cursor$java_awt_Image$java_awt_Point(dsc, dsc.getCursor$(), dragImage, imageOffset);
} catch (e) {
if (Clazz_exceptionOf(e,"RuntimeException")){
$I$(3).setDragDropInProgress$Z(false);
throw e;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener$java_awt_datatransfer_FlavorMap',  function (trigger, dragCursor, transferable, dsl, flavorMap) {
this.startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener$java_awt_datatransfer_FlavorMap(trigger, dragCursor, null, null, transferable, dsl, flavorMap);
});

Clazz_newMeth(C$, 'startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener',  function (trigger, dragCursor, dragImage, dragOffset, transferable, dsl) {
this.startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener$java_awt_datatransfer_FlavorMap(trigger, dragCursor, dragImage, dragOffset, transferable, dsl, null);
});

Clazz_newMeth(C$, 'startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener',  function (trigger, dragCursor, transferable, dsl) {
this.startDrag$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener$java_awt_datatransfer_FlavorMap(trigger, dragCursor, null, null, transferable, dsl, null);
});

Clazz_newMeth(C$, 'createDragSourceContext$java_awt_dnd_peer_DragSourceContextPeer$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener',  function (dscp, dgl, dragCursor, dragImage, imageOffset, t, dsl) {
return Clazz_new_($I$(4,1).c$$java_awt_dnd_peer_DragSourceContextPeer$java_awt_dnd_DragGestureEvent$java_awt_Cursor$java_awt_Image$java_awt_Point$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener,[dscp, dgl, dragCursor, dragImage, imageOffset, t, dsl]);
});

Clazz_newMeth(C$, 'getFlavorMap$',  function () {
return this.flavorMap;
});

Clazz_newMeth(C$, 'createDragGestureRecognizer$Class$java_awt_Component$I$java_awt_dnd_DragGestureListener',  function (recognizerAbstractClass, c, actions, dgl) {
return $I$(2).getDefaultToolkit$().createDragGestureRecognizer$Class$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener(recognizerAbstractClass, this, c, actions, dgl);
});

Clazz_newMeth(C$, 'createDefaultDragGestureRecognizer$java_awt_Component$I$java_awt_dnd_DragGestureListener',  function (c, actions, dgl) {
return $I$(2).getDefaultToolkit$().createDragGestureRecognizer$Class$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener(Clazz_getClass($I$(5)), this, c, actions, dgl);
});

Clazz_newMeth(C$, 'addDragSourceListener$java_awt_dnd_DragSourceListener',  function (dsl) {
if (dsl != null ) {
{
this.listener=$I$(6).add$java_awt_dnd_DragSourceListener$java_awt_dnd_DragSourceListener(this.listener, dsl);
}}});

Clazz_newMeth(C$, 'removeDragSourceListener$java_awt_dnd_DragSourceListener',  function (dsl) {
if (dsl != null ) {
{
this.listener=$I$(6).remove$java_awt_dnd_DragSourceListener$java_awt_dnd_DragSourceListener(this.listener, dsl);
}}});

Clazz_newMeth(C$, 'getDragSourceListeners$',  function () {
return this.getListeners$Class(Clazz_getClass($I$(7),['dragDropEnd$java_awt_dnd_DragSourceDropEvent','dragEnter$java_awt_dnd_DragSourceDragEvent','dragExit$java_awt_dnd_DragSourceEvent','dragOver$java_awt_dnd_DragSourceDragEvent','dropActionChanged$java_awt_dnd_DragSourceDragEvent']));
});

Clazz_newMeth(C$, 'addDragSourceMotionListener$java_awt_dnd_DragSourceMotionListener',  function (dsml) {
if (dsml != null ) {
{
this.motionListener=$I$(6).add$java_awt_dnd_DragSourceMotionListener$java_awt_dnd_DragSourceMotionListener(this.motionListener, dsml);
}}});

Clazz_newMeth(C$, 'removeDragSourceMotionListener$java_awt_dnd_DragSourceMotionListener',  function (dsml) {
if (dsml != null ) {
{
this.motionListener=$I$(6).remove$java_awt_dnd_DragSourceMotionListener$java_awt_dnd_DragSourceMotionListener(this.motionListener, dsml);
}}});

Clazz_newMeth(C$, 'getDragSourceMotionListeners$',  function () {
return this.getListeners$Class(Clazz_getClass($I$(8),['dragMouseMoved$java_awt_dnd_DragSourceDragEvent']));
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
var l=null;
if (listenerType === Clazz_getClass($I$(7),['dragDropEnd$java_awt_dnd_DragSourceDropEvent','dragEnter$java_awt_dnd_DragSourceDragEvent','dragExit$java_awt_dnd_DragSourceEvent','dragOver$java_awt_dnd_DragSourceDragEvent','dropActionChanged$java_awt_dnd_DragSourceDragEvent']) ) {
l=this.listener;
} else if (listenerType === Clazz_getClass($I$(8),['dragMouseMoved$java_awt_dnd_DragSourceDragEvent']) ) {
l=this.motionListener;
}return $I$(9).getListeners$java_util_EventListener$Class(l, listenerType);
});

Clazz_newMeth(C$, 'processDragEnter$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
var dsl=this.listener;
if (dsl != null ) {
dsl.dragEnter$java_awt_dnd_DragSourceDragEvent(dsde);
}});

Clazz_newMeth(C$, 'processDragOver$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
var dsl=this.listener;
if (dsl != null ) {
dsl.dragOver$java_awt_dnd_DragSourceDragEvent(dsde);
}});

Clazz_newMeth(C$, 'processDropActionChanged$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
var dsl=this.listener;
if (dsl != null ) {
dsl.dropActionChanged$java_awt_dnd_DragSourceDragEvent(dsde);
}});

Clazz_newMeth(C$, 'processDragExit$java_awt_dnd_DragSourceEvent',  function (dse) {
var dsl=this.listener;
if (dsl != null ) {
dsl.dragExit$java_awt_dnd_DragSourceEvent(dse);
}});

Clazz_newMeth(C$, 'processDragDropEnd$java_awt_dnd_DragSourceDropEvent',  function (dsde) {
var dsl=this.listener;
if (dsl != null ) {
dsl.dragDropEnd$java_awt_dnd_DragSourceDropEvent(dsde);
}});

Clazz_newMeth(C$, 'processDragMouseMoved$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
var dsml=this.motionListener;
if (dsml != null ) {
dsml.dragMouseMoved$java_awt_dnd_DragSourceDragEvent(dsde);
}});

Clazz_newMeth(C$, 'getDragThreshold$',  function () {
return 5;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.DefaultCopyDrop=C$.load$S("DnD.Cursor.CopyDrop");
C$.DefaultMoveDrop=C$.load$S("DnD.Cursor.MoveDrop");
C$.DefaultLinkDrop=C$.load$S("DnD.Cursor.LinkDrop");
C$.DefaultCopyNoDrop=C$.load$S("DnD.Cursor.CopyNoDrop");
C$.DefaultMoveNoDrop=C$.load$S("DnD.Cursor.MoveNoDrop");
C$.DefaultLinkNoDrop=C$.load$S("DnD.Cursor.LinkNoDrop");
C$.dflt=Clazz_new_(C$);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),p$1={},I$=[[0,'java.awt.Rectangle','java.awt.Toolkit','javax.swing.Timer','java.awt.datatransfer.SystemFlavorMap','java.awt.dnd.DropTargetContext',['java.awt.dnd.DropTarget','.DropTargetAutoScroller']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DropTarget", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.awt.dnd.DropTargetListener', 'java.io.Serializable']);
C$.$classes$=[['DropTargetAutoScroller',12]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.dropTargetContext=this.createDropTargetContext$();
this.actions=3;
this.active=true;
this.flavorMap=$I$(4).getDefaultFlavorMap$();
},1);

C$.$fields$=[['Z',['active'],'I',['actions'],'O',['dropTargetContext','java.awt.dnd.DropTargetContext','component','java.awt.Component','componentPeer','java.awt.peer.ComponentPeer','+nativePeer','autoScroller','java.awt.dnd.DropTarget.DropTargetAutoScroller','dtListener','java.awt.dnd.DropTargetListener','flavorMap','java.awt.datatransfer.FlavorMap']]]

Clazz_newMeth(C$, 'c$$java_awt_Component$I$java_awt_dnd_DropTargetListener$Z$java_awt_datatransfer_FlavorMap',  function (c, ops, dtl, act, fm) {
;C$.$init$.apply(this);
this.component=c;
this.setDefaultActions$I(ops);
if (dtl != null ) try {
this.addDropTargetListener$java_awt_dnd_DropTargetListener(dtl);
} catch (tmle) {
if (Clazz_exceptionOf(tmle,"java.util.TooManyListenersException")){
} else {
throw tmle;
}
}
if (c != null ) {
c.setDropTarget$java_awt_dnd_DropTarget(this);
this.setActive$Z(act);
}if (fm != null ) this.flavorMap=fm;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$java_awt_dnd_DropTargetListener$Z',  function (c, ops, dtl, act) {
C$.c$$java_awt_Component$I$java_awt_dnd_DropTargetListener$Z$java_awt_datatransfer_FlavorMap.apply(this, [c, ops, dtl, act, null]);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$java_awt_Component$I$java_awt_dnd_DropTargetListener$Z$java_awt_datatransfer_FlavorMap.apply(this, [null, 3, null, true, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$java_awt_dnd_DropTargetListener',  function (c, dtl) {
C$.c$$java_awt_Component$I$java_awt_dnd_DropTargetListener$Z$java_awt_datatransfer_FlavorMap.apply(this, [c, 3, dtl, true, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$java_awt_dnd_DropTargetListener',  function (c, ops, dtl) {
C$.c$$java_awt_Component$I$java_awt_dnd_DropTargetListener$Z.apply(this, [c, ops, dtl, true]);
}, 1);

Clazz_newMeth(C$, 'setComponent$java_awt_Component',  function (c) {
if (this.component === c  || this.component != null  && this.component.equals$O(c)  ) return;
var old;
var oldPeer=null;
if ((old=this.component) != null ) {
this.clearAutoscroll$();
this.component=null;
if (this.componentPeer != null ) {
oldPeer=this.componentPeer;
this.removeNotify$java_awt_peer_ComponentPeer(this.componentPeer);
}old.setDropTarget$java_awt_dnd_DropTarget(null);
}if ((this.component=c) != null ) try {
c.setDropTarget$java_awt_dnd_DropTarget(this);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
if (old != null ) {
old.setDropTarget$java_awt_dnd_DropTarget(this);
this.addNotify$java_awt_peer_ComponentPeer(oldPeer);
}} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getComponent$',  function () {
return this.component;
});

Clazz_newMeth(C$, 'setDefaultActions$I',  function (ops) {
this.getDropTargetContext$().setTargetActions$I(ops & (1073741827));
});

Clazz_newMeth(C$, 'doSetDefaultActions$I',  function (ops) {
this.actions=ops;
});

Clazz_newMeth(C$, 'getDefaultActions$',  function () {
return this.actions;
});

Clazz_newMeth(C$, 'setActive$Z',  function (isActive) {
if (isActive != this.active ) {
this.active=isActive;
}if (!this.active) this.clearAutoscroll$();
});

Clazz_newMeth(C$, 'isActive$',  function () {
return this.active;
});

Clazz_newMeth(C$, 'addDropTargetListener$java_awt_dnd_DropTargetListener',  function (dtl) {
if (dtl == null ) return;
if (this.equals$O(dtl)) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["DropTarget may not be its own Listener"]);
if (this.dtListener == null ) this.dtListener=dtl;
 else throw Clazz_new_(Clazz_load('java.util.TooManyListenersException'));
});

Clazz_newMeth(C$, 'removeDropTargetListener$java_awt_dnd_DropTargetListener',  function (dtl) {
if (dtl != null  && this.dtListener != null  ) {
if (this.dtListener.equals$O(dtl)) this.dtListener=null;
 else throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["listener mismatch"]);
}});

Clazz_newMeth(C$, 'dragEnter$java_awt_dnd_DropTargetDragEvent',  function (dtde) {
if (!this.active) return;
if (this.dtListener != null ) {
this.dtListener.dragEnter$java_awt_dnd_DropTargetDragEvent(dtde);
} else dtde.getDropTargetContext$().setTargetActions$I(0);
this.initializeAutoscrolling$java_awt_Point(dtde.getLocation$());
});

Clazz_newMeth(C$, 'dragOver$java_awt_dnd_DropTargetDragEvent',  function (dtde) {
if (!this.active) return;
if (this.dtListener != null  && this.active ) this.dtListener.dragOver$java_awt_dnd_DropTargetDragEvent(dtde);
this.updateAutoscroll$java_awt_Point(dtde.getLocation$());
});

Clazz_newMeth(C$, 'dropActionChanged$java_awt_dnd_DropTargetDragEvent',  function (dtde) {
if (!this.active) return;
if (this.dtListener != null ) this.dtListener.dropActionChanged$java_awt_dnd_DropTargetDragEvent(dtde);
this.updateAutoscroll$java_awt_Point(dtde.getLocation$());
});

Clazz_newMeth(C$, 'dragExit$java_awt_dnd_DropTargetEvent',  function (dte) {
if (!this.active) return;
if (this.dtListener != null  && this.active ) this.dtListener.dragExit$java_awt_dnd_DropTargetEvent(dte);
this.clearAutoscroll$();
});

Clazz_newMeth(C$, 'drop$java_awt_dnd_DropTargetDropEvent',  function (dtde) {
this.clearAutoscroll$();
if (this.dtListener != null  && this.active ) this.dtListener.drop$java_awt_dnd_DropTargetDropEvent(dtde);
 else {
dtde.rejectDrop$();
}});

Clazz_newMeth(C$, 'getFlavorMap$',  function () {
return this.flavorMap;
});

Clazz_newMeth(C$, 'setFlavorMap$java_awt_datatransfer_FlavorMap',  function (fm) {
this.flavorMap=fm == null  ? $I$(4).getDefaultFlavorMap$() : fm;
});

Clazz_newMeth(C$, 'addNotify$java_awt_peer_ComponentPeer',  function (peer) {
if (peer === this.componentPeer ) return;
this.componentPeer=peer;
for (var c=this.component; c != null  && Clazz_instanceOf(peer, "java.awt.peer.LightweightPeer") ; c=c.getParent$()) {
peer=c.peer ||null;
}
if (peer == null ) peer=this.componentPeer;
this.nativePeer=peer;
(peer).addDropTarget$java_awt_dnd_DropTarget(this);
});

Clazz_newMeth(C$, 'removeNotify$java_awt_peer_ComponentPeer',  function (peer) {
if (this.nativePeer != null ) (this.nativePeer).removeDropTarget$java_awt_dnd_DropTarget(this);
this.componentPeer=this.nativePeer=null;
});

Clazz_newMeth(C$, 'getDropTargetContext$',  function () {
return this.dropTargetContext;
});

Clazz_newMeth(C$, 'createDropTargetContext$',  function () {
return Clazz_new_($I$(5,1).c$$java_awt_dnd_DropTarget,[this]);
});

Clazz_newMeth(C$, 'createDropTargetAutoScroller$java_awt_Component$java_awt_Point',  function (c, p) {
return Clazz_new_($I$(6,1).c$$java_awt_Component$java_awt_Point,[c, p]);
});

Clazz_newMeth(C$, 'initializeAutoscrolling$java_awt_Point',  function (p) {
if (this.component == null  || !(Clazz_instanceOf(this.component, "java.awt.dnd.Autoscroll")) ) return;
this.autoScroller=this.createDropTargetAutoScroller$java_awt_Component$java_awt_Point(this.component, p);
});

Clazz_newMeth(C$, 'updateAutoscroll$java_awt_Point',  function (dragCursorLocn) {
if (this.autoScroller != null ) this.autoScroller.updateLocation$java_awt_Point(dragCursorLocn);
});

Clazz_newMeth(C$, 'clearAutoscroll$',  function () {
if (this.autoScroller != null ) {
this.autoScroller.stop$();
this.autoScroller=null;
}});
;
(function(){/*c*/var C$=Clazz_newClass(P$.DropTarget, "DropTargetAutoScroller", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.awt.event.ActionListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.outer=Clazz_new_($I$(1,1));
this.inner=Clazz_new_($I$(1,1));
this.hysteresis=10;
},1);

C$.$fields$=[['I',['hysteresis'],'O',['component','java.awt.Component','autoScroll','java.awt.dnd.Autoscroll','timer','javax.swing.Timer','locn','java.awt.Point','+prev','outer','java.awt.Rectangle','+inner']]]

Clazz_newMeth(C$, 'c$$java_awt_Component$java_awt_Point',  function (c, p) {
;C$.$init$.apply(this);
this.component=c;
this.autoScroll=this.component;
var t=$I$(2).getDefaultToolkit$();
var initial=Integer.valueOf$I(100);
var interval=Integer.valueOf$I(100);
try {
initial=t.getDesktopProperty$S("DnD.Autoscroll.initialDelay");
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
try {
interval=t.getDesktopProperty$S("DnD.Autoscroll.interval");
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
this.timer=Clazz_new_([interval.intValue$(), this],$I$(3,1).c$$I$java_awt_event_ActionListener);
this.timer.setCoalesce$Z(true);
this.timer.setInitialDelay$I(initial.intValue$());
this.locn=p;
this.prev=p;
try {
this.hysteresis=(t.getDesktopProperty$S("DnD.Autoscroll.cursorHysteresis")).intValue$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
this.timer.start$();
}, 1);

Clazz_newMeth(C$, 'updateRegion',  function () {
var i=this.autoScroll.getAutoscrollInsets$();
var size=this.component.getSize$();
if (size.width != this.outer.width || size.height != this.outer.height ) this.outer.reshape$I$I$I$I(0, 0, size.width, size.height);
if (this.inner.x != i.left || this.inner.y != i.top ) this.inner.setLocation$I$I(i.left, i.top);
var newWidth=size.width - (i.left + i.right);
var newHeight=size.height - (i.top + i.bottom);
if (newWidth != this.inner.width || newHeight != this.inner.height ) this.inner.setSize$I$I(newWidth, newHeight);
}, p$1);

Clazz_newMeth(C$, 'updateLocation$java_awt_Point',  function (newLocn) {
this.prev=this.locn;
this.locn=newLocn;
if (Math.abs(this.locn.x - this.prev.x) > this.hysteresis || Math.abs(this.locn.y - this.prev.y) > this.hysteresis ) {
if (this.timer.isRunning$()) this.timer.stop$();
} else {
if (!this.timer.isRunning$()) this.timer.start$();
}});

Clazz_newMeth(C$, 'stop$',  function () {
this.timer.stop$();
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
p$1.updateRegion.apply(this, []);
if (this.outer.contains$java_awt_Point(this.locn) && !this.inner.contains$java_awt_Point(this.locn) ) this.autoScroll.autoscroll$java_awt_Point(this.locn);
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),I$=[[0,'java.awt.datatransfer.DataFlavor','java.util.Arrays']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DropTargetContext", null, null, 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['dropTarget','java.awt.dnd.DropTarget','dropTargetContextPeer','java.awt.dnd.peer.DropTargetContextPeer','transferable','java.awt.datatransfer.Transferable']]]

Clazz_newMeth(C$, 'c$$java_awt_dnd_DropTarget',  function (dt) {
;C$.$init$.apply(this);
this.dropTarget=dt;
}, 1);

Clazz_newMeth(C$, 'getDropTarget$',  function () {
return this.dropTarget;
});

Clazz_newMeth(C$, 'getComponent$',  function () {
return this.dropTarget.getComponent$();
});

Clazz_newMeth(C$, 'addNotify$java_awt_dnd_peer_DropTargetContextPeer',  function (dtcp) {
this.dropTargetContextPeer=dtcp;
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
this.dropTargetContextPeer=null;
this.transferable=null;
});

Clazz_newMeth(C$, 'setTargetActions$I',  function (actions) {
var peer=this.getDropTargetContextPeer$();
if (peer != null ) {
{
peer.setTargetActions$I(actions);
this.getDropTarget$().doSetDefaultActions$I(actions);
}} else {
this.getDropTarget$().doSetDefaultActions$I(actions);
}});

Clazz_newMeth(C$, 'getTargetActions$',  function () {
var peer=this.getDropTargetContextPeer$();
return ((peer != null ) ? peer.getTargetActions$() : this.dropTarget.getDefaultActions$());
});

Clazz_newMeth(C$, 'dropComplete$Z',  function (success) {
var peer=this.getDropTargetContextPeer$();
if (peer != null ) {
peer.dropComplete$Z(success);
}});

Clazz_newMeth(C$, 'acceptDrag$I',  function (dragOperation) {
var peer=this.getDropTargetContextPeer$();
if (peer != null ) {
peer.acceptDrag$I(dragOperation);
}});

Clazz_newMeth(C$, 'rejectDrag$',  function () {
var peer=this.getDropTargetContextPeer$();
if (peer != null ) {
peer.rejectDrag$();
}});

Clazz_newMeth(C$, 'acceptDrop$I',  function (dropOperation) {
var peer=this.getDropTargetContextPeer$();
if (peer != null ) {
peer.acceptDrop$I(dropOperation);
}});

Clazz_newMeth(C$, 'rejectDrop$',  function () {
var peer=this.getDropTargetContextPeer$();
if (peer != null ) {
peer.rejectDrop$();
}});

Clazz_newMeth(C$, 'getCurrentDataFlavors$',  function () {
var peer=this.getDropTargetContextPeer$();
return peer != null  ? peer.getTransferDataFlavors$() : Clazz_array($I$(1), [0]);
});

Clazz_newMeth(C$, 'getCurrentDataFlavorsAsList$',  function () {
return $I$(2,"asList$OA",[this.getCurrentDataFlavors$()]);
});

Clazz_newMeth(C$, 'isDataFlavorSupported$java_awt_datatransfer_DataFlavor',  function (df) {
return this.getCurrentDataFlavorsAsList$().contains$O(df);
});

Clazz_newMeth(C$, 'getTransferable$',  function () {
var peer=this.getDropTargetContextPeer$();
if (peer == null ) {
throw Clazz_new_(Clazz_load('java.awt.dnd.InvalidDnDOperationException'));
} else {
if (this.transferable == null ) {
this.transferable=peer.getTransferable$();
var isLocal=peer.isTransferableJVMLocal$();
}return this.transferable;
}});

Clazz_newMeth(C$, 'getDropTargetContextPeer$',  function () {
return this.dropTargetContextPeer;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "DropTargetListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "MouseDragGestureRecognizer", null, 'java.awt.dnd.DragGestureRecognizer', ['java.awt.event.MouseListener', 'java.awt.event.MouseMotionListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener',  function (ds, c, act, dgl) {
;C$.superclazz.c$$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener.apply(this,[ds, c, act, dgl]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource$java_awt_Component$I',  function (ds, c, act) {
C$.c$$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener.apply(this, [ds, c, act, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource$java_awt_Component',  function (ds, c) {
C$.c$$java_awt_dnd_DragSource$java_awt_Component$I.apply(this, [ds, c, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragSource',  function (ds) {
C$.c$$java_awt_dnd_DragSource$java_awt_Component.apply(this, [ds, null]);
}, 1);

Clazz_newMeth(C$, 'registerListeners$',  function () {
this.component.addMouseListener$java_awt_event_MouseListener(this);
this.component.addMouseMotionListener$java_awt_event_MouseMotionListener(this);
});

Clazz_newMeth(C$, 'unregisterListeners$',  function () {
this.component.removeMouseListener$java_awt_event_MouseListener(this);
this.component.removeMouseMotionListener$java_awt_event_MouseMotionListener(this);
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.dnd.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "DropTargetPeer");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "AWTEventListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ActionListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "AdjustmentListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "ComponentEvent", null, 'java.awt.AWTEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I',  function (source, id) {
;C$.superclazz.c$$O$I.apply(this,[source, id]);C$.$init$.apply(this);

if (J2S._traceEvents) System.out.println("ComponentEvent " + id + " " + source.__CLASS_NAME__);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getComponent$',  function () {
return (Clazz_instanceOf(this.source, "java.awt.Component")) ? this.source : null;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var typeStr;
var b=(this.source != null  ? (this.source).getBounds$() : null);
switch (this.id) {
case 102:
typeStr="COMPONENT_SHOWN";
break;
case 103:
typeStr="COMPONENT_HIDDEN";
break;
case 100:
typeStr="COMPONENT_MOVED (" + b.x + "," + b.y + " " + b.width + "x" + b.height + ")" ;
break;
case 101:
typeStr="COMPONENT_RESIZED (" + b.x + "," + b.y + " " + b.width + "x" + b.height + ")" ;
break;
default:
typeStr="unknown type";
}
return typeStr;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ComponentListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ContainerListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[[0,'sun.awt.SunToolkit','sun.awt.AppContext']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FocusEvent", null, 'java.awt.event.ComponentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['temporary'],'O',['opposite','java.awt.Component']]]

Clazz_newMeth(C$, 'c$$java_awt_Component$I$Z$java_awt_Component',  function (source, id, temporary, opposite) {
;C$.superclazz.c$$java_awt_Component$I.apply(this,[source, id]);C$.$init$.apply(this);
this.temporary=temporary;
this.opposite=opposite;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$Z',  function (source, id, temporary) {
C$.c$$java_awt_Component$I$Z$java_awt_Component.apply(this, [source, id, temporary, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I',  function (source, id) {
C$.c$$java_awt_Component$I$Z.apply(this, [source, id, false]);
}, 1);

Clazz_newMeth(C$, 'isTemporary$',  function () {
return this.temporary;
});

Clazz_newMeth(C$, 'getOppositeComponent$',  function () {
if (this.opposite == null ) {
return null;
}return ($I$(1).targetToAppContext$O(this.opposite) === $I$(2).getAppContext$() ) ? this.opposite : null;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var typeStr;
switch (this.id) {
case 1004:
typeStr="FOCUS_GAINED";
break;
case 1005:
typeStr="FOCUS_LOST";
break;
default:
typeStr="unknown type";
}
return typeStr + (this.temporary ? ",temporary" : ",permanent") + ",opposite=" + this.getOppositeComponent$() ;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "FocusListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "HierarchyBoundsListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "HierarchyListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[[0,'swingjs.JSMouse','StringBuilder','java.awt.Toolkit']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "InputEvent", null, 'java.awt.event.ComponentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['canAccessSystemClipboard'],'I',['modifiers'],'J',['when']]]

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I',  function (source, id, when, modifiers) {
;C$.superclazz.c$$java_awt_Component$I.apply(this,[source, id]);C$.$init$.apply(this);
this.when=when;
this.modifiers=modifiers;
this.canAccessSystemClipboard=false;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'isShiftDown$',  function () {
return (this.modifiers & 1) != 0;
});

Clazz_newMeth(C$, 'isControlDown$',  function () {
return (this.modifiers & 2) != 0;
});

Clazz_newMeth(C$, 'isMetaDown$',  function () {
return (this.modifiers & 4) != 0;
});

Clazz_newMeth(C$, 'isAltDown$',  function () {
return (this.modifiers & 8) != 0;
});

Clazz_newMeth(C$, 'isAltGraphDown$',  function () {
return (this.modifiers & 32) != 0;
});

Clazz_newMeth(C$, 'getWhen$',  function () {
return this.when;
});

Clazz_newMeth(C$, 'getModifiers$',  function () {
return this.modifiers & (-16321);
});

Clazz_newMeth(C$, 'getModifiersEx$',  function () {
return this.modifiers & ~63;
});

Clazz_newMeth(C$, 'consume$',  function () {
$I$(1).checkConsume$java_awt_event_InputEvent(this);
this.consumed=true;
});

Clazz_newMeth(C$, 'isConsumed$',  function () {
return this.consumed;
});

Clazz_newMeth(C$, 'getModifiersExText$I',  function (modifiers) {
var buf=Clazz_new_($I$(2,1));
if ((modifiers & 256) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.meta", "Meta"));
buf.append$S("+");
}if ((modifiers & 128) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.control", "Ctrl"));
buf.append$S("+");
}if ((modifiers & 512) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.alt", "Alt"));
buf.append$S("+");
}if ((modifiers & 64) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.shift", "Shift"));
buf.append$S("+");
}if ((modifiers & 8192) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.altGraph", "Alt Graph"));
buf.append$S("+");
}if ((modifiers & 1024) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.button1", "Button1"));
buf.append$S("+");
}if ((modifiers & 2048) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.button2", "Button2"));
buf.append$S("+");
}if ((modifiers & 4096) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.button3", "Button3"));
buf.append$S("+");
}if (buf.length$() > 0) {
buf.setLength$I(buf.length$() - 1);
}return buf.toString();
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "InputMethodListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "InvocationEvent", null, 'java.awt.AWTEvent', 'java.awt.ActiveEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.exception=null;
this.throwable=null;
},1);

C$.$fields$=[['Z',['catchExceptions'],'J',['when'],'O',['runnable','Runnable','notifier','java.lang.Object','exception','Exception','throwable','Throwable']]]

Clazz_newMeth(C$, 'c$$O$Runnable',  function (source, runnable) {
C$.c$$O$I$Runnable$O$Z.apply(this, [source, 1200, runnable, null, false]);
}, 1);

Clazz_newMeth(C$, 'c$$O$Runnable$O$Z',  function (source, runnable, notifier, catchThrowables) {
C$.c$$O$I$Runnable$O$Z.apply(this, [source, 1200, runnable, notifier, catchThrowables]);
}, 1);

Clazz_newMeth(C$, 'c$$O$I$Runnable$O$Z',  function (source, id, runnable, notifier, catchThrowables) {
;C$.superclazz.c$$O$I.apply(this,[source, id]);C$.$init$.apply(this);
this.runnable=runnable;
this.notifier=notifier;
this.catchExceptions=catchThrowables;
this.when=System.currentTimeMillis$();
}, 1);

Clazz_newMeth(C$, 'dispatch$',  function () {
if (this.catchExceptions) {
try {
this.runnable.run$();
} catch (t) {
if (Clazz_instanceOf(t, "java.lang.Exception")) {
this.exception=t;
}this.throwable=t;
System.err.println$S("InvocationException: " + t);
try {
t.printStackTrace$();
} catch (e) {
}
}
} else {
this.runnable.run$();
}if (this.notifier != null ) {
{
this.notifier.notifyAll$();
}}});

Clazz_newMeth(C$, 'getException$',  function () {
return (this.catchExceptions) ? this.exception : null;
});

Clazz_newMeth(C$, 'getThrowable$',  function () {
return (this.catchExceptions) ? this.throwable : null;
});

Clazz_newMeth(C$, 'getWhen$',  function () {
return this.when;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var typeStr;
switch (this.id) {
case 1200:
typeStr="INVOCATION_DEFAULT";
break;
default:
typeStr="unknown type";
}
return typeStr + ",runnable=" + this.runnable + ",notifier=" + this.notifier + ",catchExceptions=" + this.catchExceptions + ",when=" + Long.$s(this.when) ;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ItemListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "KeyListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),p$1={},I$=[[0,'java.awt.Point','StringBuilder','java.awt.Toolkit','java.awt.event.InputEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "MouseEvent", null, 'java.awt.event.InputEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.popupTrigger=false;
},1);

C$.$fields$=[['Z',['popupTrigger'],'I',['x','y','xAbs','yAbs','clickCount','button']]]

Clazz_newMeth(C$, 'getLocationOnScreen$',  function () {
return Clazz_new_($I$(1,1).c$$I$I,[this.xAbs, this.yAbs]);
});

Clazz_newMeth(C$, 'getXOnScreen$',  function () {
return this.xAbs;
});

Clazz_newMeth(C$, 'getYOnScreen$',  function () {
return this.yAbs;
});

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I$I$I$I$Z$I',  function (source, id, when, modifiers, x, y, clickCount, popupTrigger, button) {
C$.c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I.apply(this, [source, id, when, modifiers, x, y, 0, 0, clickCount, popupTrigger, button]);
var eventLocationOnScreen=Clazz_new_($I$(1,1).c$$I$I,[0, 0]);
try {
eventLocationOnScreen=source.getLocationOnScreen$();
this.xAbs=eventLocationOnScreen.x + x;
this.yAbs=eventLocationOnScreen.y + y;
} catch (e) {
if (Clazz_exceptionOf(e,"java.awt.IllegalComponentStateException")){
this.xAbs=0;
this.yAbs=0;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I$I$I$I$Z',  function (source, id, when, modifiers, x, y, clickCount, popupTrigger) {
C$.c$$java_awt_Component$I$J$I$I$I$I$Z$I.apply(this, [source, id, when, modifiers, x, y, clickCount, popupTrigger, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I',  function (source, id, when, modifiers, x, y, xAbs, yAbs, clickCount, popupTrigger, button) {
;C$.superclazz.c$$java_awt_Component$I$J$I.apply(this,[source, id, when, modifiers]);C$.$init$.apply(this);
this.x=x;
this.y=y;
this.xAbs=xAbs;
this.yAbs=yAbs;
this.clickCount=clickCount;
this.popupTrigger=popupTrigger;
if (button < 0 || button > 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Invalid button value"]);
}this.button=button;
if ((this.getModifiers$() != 0) && (this.getModifiersEx$() == 0) ) {
p$1.setNewModifiers.apply(this, []);
} else if ((this.getModifiers$() == 0) && (this.getModifiersEx$() != 0 || button != 0 ) ) {
p$1.setOldModifiers.apply(this, []);
}}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'getPoint$',  function () {
var x;
var y;
{
x=this.x;
y=this.y;
}return Clazz_new_($I$(1,1).c$$I$I,[x, y]);
});

Clazz_newMeth(C$, 'translatePoint$I$I',  function (x, y) {
this.x+=x;
this.y+=y;
});

Clazz_newMeth(C$, 'getClickCount$',  function () {
return this.clickCount;
});

Clazz_newMeth(C$, 'getButton$',  function () {
return this.button;
});

Clazz_newMeth(C$, 'isPopupTrigger$',  function () {
return this.popupTrigger;
});

Clazz_newMeth(C$, 'getMouseModifiersText$I',  function (modifiers) {
var buf=Clazz_new_($I$(2,1));
if ((modifiers & 8) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.alt", "Alt"));
buf.append$S("+");
}if ((modifiers & 4) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.meta", "Meta"));
buf.append$S("+");
}if ((modifiers & 2) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.control", "Ctrl"));
buf.append$S("+");
}if ((modifiers & 1) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.shift", "Shift"));
buf.append$S("+");
}if ((modifiers & 32) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.altGraph", "Alt Graph"));
buf.append$S("+");
}if ((modifiers & 16) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.button1", "Button1"));
buf.append$S("+");
}if ((modifiers & 8) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.button2", "Button2"));
buf.append$S("+");
}if ((modifiers & 4) != 0) {
buf.append$S($I$(3).getProperty$S$S("AWT.button3", "Button3"));
buf.append$S("+");
}if (buf.length$() > 0) {
buf.setLength$I(buf.length$() - 1);
}return buf.toString();
}, 1);

Clazz_newMeth(C$, 'paramString$',  function () {
var str=Clazz_new_($I$(2,1).c$$I,[80]);
str.append$S(C$.getIdString$I(this.id));
str.append$S(",(" + this.x).append$S("," + this.y).append$S("," + Long.$s(this.when)).append$S(")");
str.append$S(",absolute(").append$S("" + this.xAbs).append$S(",").append$S("" + this.yAbs).append$S(")");
str.append$S(",button=").append$S("" + this.getButton$());
if (this.getModifiers$() != 0) {
str.append$S(",modifiers=").append$S(C$.getMouseModifiersText$I(this.modifiers));
}if (this.getModifiersEx$() != 0) {
str.append$S(",extModifiers=").append$S($I$(4).getModifiersExText$I(this.modifiers));
}str.append$S(",clickCount=").append$S("" + this.clickCount);
return str.toString();
});

Clazz_newMeth(C$, 'getIdString$I',  function (id) {
switch (id) {
case 501:
return "MOUSE_PRESSED";
case 502:
return "MOUSE_RELEASED";
case 500:
return "MOUSE_CLICKED";
case 504:
return "MOUSE_ENTERED";
case 505:
return "MOUSE_EXITED";
case 503:
return "MOUSE_MOVED";
case 506:
return "MOUSE_DRAGGED";
case 507:
return "MOUSE_WHEEL";
default:
return "unknown type";
}
}, 1);

Clazz_newMeth(C$, 'setNewModifiers',  function () {
if (this.id == 501 || this.id == 502  || this.id == 500 ) {
if ((this.modifiers & 16) != 0) {
this.button=1;
this.modifiers&=~4;
if (this.id != 501) {
this.modifiers&=~1024;
}} else if ((this.modifiers & 4) != 0) {
this.button=3;
this.modifiers&=~16;
if (this.id != 501) {
this.modifiers&=~(4352);
}} else if ((this.modifiers & 8) != 0) {
this.button=2;
this.modifiers&=~16;
if (this.id != 501) {
this.modifiers&=~2048;
}}if ((this.modifiers & 8) != 0) {
this.modifiers|=512;
}if ((this.modifiers & 1) != 0) {
this.modifiers|=64;
}if ((this.modifiers & 2) != 0) {
this.modifiers|=128;
}if ((this.modifiers & 32) != 0) {
this.modifiers|=8192;
}if (this.id == 501) {
if ((this.modifiers & 16) != 0) {
this.modifiers|=1024;
}if ((this.modifiers & 8) != 0) {
this.modifiers|=2048;
}if ((this.modifiers & 4) != 0) {
this.modifiers|=4096;
}if ((this.modifiers & 4) != 0) {
this.modifiers|=256;
}}}}, p$1);

Clazz_newMeth(C$, 'setOldModifiers',  function () {
if (this.id == 501 || this.id == 502  || this.id == 500 ) {
switch (this.button) {
case 1:
this.modifiers|=16;
break;
case 2:
this.modifiers|=8;
break;
case 3:
this.modifiers|=4;
break;
}
} else {
if ((this.modifiers & 1024) != 0) {
this.modifiers|=16;
}if ((this.modifiers & 2048) != 0) {
this.modifiers|=8;
}if ((this.modifiers & 4096) != 0) {
this.modifiers|=4;
}}if ((this.modifiers & 512) != 0) {
this.modifiers|=8;
}if ((this.modifiers & 256) != 0) {
this.modifiers|=4;
}if ((this.modifiers & 64) != 0) {
this.modifiers|=1;
}if ((this.modifiers & 128) != 0) {
this.modifiers|=2;
}if ((this.modifiers & 8192) != 0) {
this.modifiers|=32;
}}, p$1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "MouseListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "MouseMotionListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "MouseWheelListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "TextListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "WindowAdapter", null, null, ['java.awt.event.WindowListener', 'java.awt.event.WindowStateListener', 'java.awt.event.WindowFocusListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowStateChanged$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowGainedFocus$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowLostFocus$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[[0,'sun.awt.SunToolkit','sun.awt.AppContext']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "WindowEvent", null, 'java.awt.event.ComponentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['oldState','newState'],'O',['opposite','java.awt.Window']]]

Clazz_newMeth(C$, 'c$$java_awt_Window$I$java_awt_Window$I$I',  function (source, id, opposite, oldState, newState) {
;C$.superclazz.c$$java_awt_Component$I.apply(this,[source, id]);C$.$init$.apply(this);
this.opposite=opposite;
this.oldState=oldState;
this.newState=newState;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I$java_awt_Window',  function (source, id, opposite) {
C$.c$$java_awt_Window$I$java_awt_Window$I$I.apply(this, [source, id, opposite, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I$I$I',  function (source, id, oldState, newState) {
C$.c$$java_awt_Window$I$java_awt_Window$I$I.apply(this, [source, id, null, oldState, newState]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Window$I',  function (source, id) {
C$.c$$java_awt_Window$I$java_awt_Window$I$I.apply(this, [source, id, null, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'getWindow$',  function () {
return ((this.source).isWindowOrJSApplet$()) ? this.source : null;
});

Clazz_newMeth(C$, 'getOppositeWindow$',  function () {
if (this.opposite == null ) {
return null;
}return ($I$(1).targetToAppContext$O(this.opposite) === $I$(2).getAppContext$() ) ? this.opposite : null;
});

Clazz_newMeth(C$, 'getOldState$',  function () {
return this.oldState;
});

Clazz_newMeth(C$, 'getNewState$',  function () {
return this.newState;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var typeStr;
switch (this.id) {
case 200:
typeStr="WINDOW_OPENED";
break;
case 201:
typeStr="WINDOW_CLOSING";
break;
case 202:
typeStr="WINDOW_CLOSED";
break;
case 203:
typeStr="WINDOW_ICONIFIED";
break;
case 204:
typeStr="WINDOW_DEICONIFIED";
break;
case 205:
typeStr="WINDOW_ACTIVATED";
break;
case 206:
typeStr="WINDOW_DEACTIVATED";
break;
case 207:
typeStr="WINDOW_GAINED_FOCUS";
break;
case 208:
typeStr="WINDOW_LOST_FOCUS";
break;
case 209:
typeStr="WINDOW_STATE_CHANGED";
break;
default:
typeStr="unknown type";
}
typeStr+=",opposite=" + this.getOppositeWindow$() + ",oldState=" + this.oldState + ",newState=" + this.newState ;
return typeStr;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "WindowFocusListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "WindowListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "WindowStateListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.font"),I$=[[0,'java.awt.RenderingHints','java.awt.geom.AffineTransform']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FontRenderContext");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['defaulting'],'O',['tx','java.awt.geom.AffineTransform','aaHintValue','java.lang.Object','+fmHintValue']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.aaHintValue=$I$(1).VALUE_TEXT_ANTIALIAS_DEFAULT;
this.fmHintValue=$I$(1).VALUE_FRACTIONALMETRICS_DEFAULT;
this.defaulting=true;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_AffineTransform$Z$Z',  function (tx, isAntiAliased, usesFractionalMetrics) {
;C$.$init$.apply(this);
if (tx != null  && !tx.isIdentity$() ) {
this.tx=Clazz_new_($I$(2,1).c$$java_awt_geom_AffineTransform,[tx]);
}if (isAntiAliased) {
this.aaHintValue=$I$(1).VALUE_TEXT_ANTIALIAS_ON;
} else {
this.aaHintValue=$I$(1).VALUE_TEXT_ANTIALIAS_OFF;
}if (usesFractionalMetrics) {
this.fmHintValue=$I$(1).VALUE_FRACTIONALMETRICS_ON;
} else {
this.fmHintValue=$I$(1).VALUE_FRACTIONALMETRICS_OFF;
}}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_AffineTransform$O$O',  function (tx, aaHint, fmHint) {
;C$.$init$.apply(this);
if (tx != null  && !tx.isIdentity$() ) {
this.tx=Clazz_new_($I$(2,1).c$$java_awt_geom_AffineTransform,[tx]);
}this.aaHintValue=aaHint;
this.fmHintValue=fmHint;
}, 1);

Clazz_newMeth(C$, 'isTransformed$',  function () {
if (!this.defaulting) {
return this.tx != null ;
} else {
return !this.getTransform$().isIdentity$();
}});

Clazz_newMeth(C$, 'getTransformType$',  function () {
if (!this.defaulting) {
if (this.tx == null ) {
return 0;
} else {
return this.tx.getType$();
}} else {
return this.getTransform$().getType$();
}});

Clazz_newMeth(C$, 'getTransform$',  function () {
return (this.tx == null ) ? Clazz_new_($I$(2,1)) : Clazz_new_($I$(2,1).c$$java_awt_geom_AffineTransform,[this.tx]);
});

Clazz_newMeth(C$, 'isAntiAliased$',  function () {
return !(this.aaHintValue === $I$(1).VALUE_TEXT_ANTIALIAS_OFF  || this.aaHintValue === $I$(1).VALUE_TEXT_ANTIALIAS_DEFAULT  );
});

Clazz_newMeth(C$, 'usesFractionalMetrics$',  function () {
return !(this.fmHintValue === $I$(1).VALUE_FRACTIONALMETRICS_OFF  || this.fmHintValue === $I$(1).VALUE_FRACTIONALMETRICS_DEFAULT  );
});

Clazz_newMeth(C$, 'getAntiAliasingHint$',  function () {
if (this.defaulting) {
if (this.isAntiAliased$()) {
return $I$(1).VALUE_TEXT_ANTIALIAS_ON;
} else {
return $I$(1).VALUE_TEXT_ANTIALIAS_OFF;
}}return this.aaHintValue;
});

Clazz_newMeth(C$, 'getFractionalMetricsHint$',  function () {
if (this.defaulting) {
if (this.usesFractionalMetrics$()) {
return $I$(1).VALUE_FRACTIONALMETRICS_ON;
} else {
return $I$(1).VALUE_FRACTIONALMETRICS_OFF;
}}return this.fmHintValue;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
try {
return this.equals$java_awt_font_FontRenderContext(obj);
} catch (e) {
if (Clazz_exceptionOf(e,"ClassCastException")){
return false;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'equals$java_awt_font_FontRenderContext',  function (rhs) {
if (this === rhs ) {
return true;
}if (rhs == null ) {
return false;
}if (!rhs.defaulting && !this.defaulting ) {
if (rhs.aaHintValue === this.aaHintValue  && rhs.fmHintValue === this.fmHintValue  ) {
return this.tx == null  ? rhs.tx == null  : this.tx.equals$O(rhs.tx);
}return false;
} else {
return rhs.getAntiAliasingHint$() === this.getAntiAliasingHint$()  && rhs.getFractionalMetricsHint$() === this.getFractionalMetricsHint$()   && rhs.getTransform$().equals$O(this.getTransform$()) ;
}});

Clazz_newMeth(C$, 'hashCode$',  function () {
var hash=this.tx == null  ? 0 : this.tx.hashCode$();
if (this.defaulting) {
hash+=this.getAntiAliasingHint$().hashCode$();
hash+=this.getFractionalMetricsHint$().hashCode$();
} else {
hash+=this.aaHintValue.hashCode$();
hash+=this.fmHintValue.hashCode$();
}return hash;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.geom"),p$1={},I$=[[0,'InternalError',['java.awt.geom.Point2D','.Double'],['java.awt.geom.Point2D','.Float'],'javajs.util.AU',['java.awt.geom.Path2D','.Double']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AffineTransform", null, null, ['Cloneable', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['m00','m10','m01','m11','m02','m12'],'I',['state','type']]
,['O',['rot90conversion','int[]']]]

Clazz_newMeth(C$, 'c$$D$D$D$D$D$D$I',  function (m00, m10, m01, m11, m02, m12, state) {
;C$.$init$.apply(this);
this.m00=m00;
this.m10=m10;
this.m01=m01;
this.m11=m11;
this.m02=m02;
this.m12=m12;
this.state=state;
this.type=-1;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.m00=this.m11=1.0;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_AffineTransform',  function (Tx) {
;C$.$init$.apply(this);
this.m00=Tx.m00;
this.m10=Tx.m10;
this.m01=Tx.m01;
this.m11=Tx.m11;
this.m02=Tx.m02;
this.m12=Tx.m12;
this.state=Tx.state;
this.type=Tx.type;
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F$F$F',  function (m00, m10, m01, m11, m02, m12) {
;C$.$init$.apply(this);
this.m00=m00;
this.m10=m10;
this.m01=m01;
this.m11=m11;
this.m02=m02;
this.m12=m12;
this.updateState$();
}, 1);

Clazz_newMeth(C$, 'c$$FA',  function (flatmatrix) {
;C$.$init$.apply(this);
this.m00=flatmatrix[0];
this.m10=flatmatrix[1];
this.m01=flatmatrix[2];
this.m11=flatmatrix[3];
if (flatmatrix.length > 5) {
this.m02=flatmatrix[4];
this.m12=flatmatrix[5];
}this.updateState$();
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D$D$D$D',  function (m00, m10, m01, m11, m02, m12) {
;C$.$init$.apply(this);
this.m00=m00;
this.m10=m10;
this.m01=m01;
this.m11=m11;
this.m02=m02;
this.m12=m12;
this.updateState$();
}, 1);

Clazz_newMeth(C$, 'c$$DA',  function (flatmatrix) {
;C$.$init$.apply(this);
this.m00=flatmatrix[0];
this.m10=flatmatrix[1];
this.m01=flatmatrix[2];
this.m11=flatmatrix[3];
if (flatmatrix.length > 5) {
this.m02=flatmatrix[4];
this.m12=flatmatrix[5];
}this.updateState$();
}, 1);

Clazz_newMeth(C$, 'getTranslateInstance$D$D',  function (tx, ty) {
var Tx=Clazz_new_(C$);
Tx.setToTranslation$D$D(tx, ty);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D',  function (theta) {
var Tx=Clazz_new_(C$);
p$1.setToRotationTheta$D.apply(Tx, [theta]);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D$D$D',  function (theta, anchorx, anchory) {
var Tx=Clazz_new_(C$);
p$1.setToRotationThetaXY$D$D$D.apply(Tx, [theta, anchorx, anchory]);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D$D',  function (vecx, vecy) {
var Tx=Clazz_new_(C$);
p$1.setToRotationXY$D$D.apply(Tx, [vecx, vecy]);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getRotateInstance$D$D$D$D',  function (vecx, vecy, anchorx, anchory) {
var Tx=Clazz_new_(C$);
p$1.setToRotationV2XY$D$D$D$D.apply(Tx, [vecx, vecy, anchorx, anchory]);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getQuadrantRotateInstance$I',  function (numquadrants) {
var Tx=Clazz_new_(C$);
Tx.setToQuadrantRotation$I(numquadrants);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getQuadrantRotateInstance$I$D$D',  function (numquadrants, anchorx, anchory) {
var Tx=Clazz_new_(C$);
Tx.setToQuadrantRotation$I$D$D(numquadrants, anchorx, anchory);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getScaleInstance$D$D',  function (sx, sy) {
var Tx=Clazz_new_(C$);
Tx.setToScale$D$D(sx, sy);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getShearInstance$D$D',  function (shx, shy) {
var Tx=Clazz_new_(C$);
Tx.setToShear$D$D(shx, shy);
return Tx;
}, 1);

Clazz_newMeth(C$, 'getType$',  function () {
if (this.type == -1) {
p$1.calculateType.apply(this, []);
}return this.type;
});

Clazz_newMeth(C$, 'calculateType',  function () {
var ret=0;
var sgn0;
var sgn1;
var M0;
var M1;
var M2;
var M3;
this.updateState$();
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
ret=1;
case (6):
if ((M0=this.m00) * (M2=this.m01) + (M3=this.m10) * (M1=this.m11) != 0 ) {
this.type=32;
return;
}sgn0=(M0 >= 0.0 );
sgn1=(M1 >= 0.0 );
if (sgn0 == sgn1 ) {
if (M0 != M1  || M2 != -M3  ) {
ret|=(20);
} else if (M0 * M1 - M2 * M3 != 1.0 ) {
ret|=(18);
} else {
ret|=16;
}} else {
if (M0 != -M1  || M2 != M3  ) {
ret|=(84);
} else if (M0 * M1 - M2 * M3 != 1.0 ) {
ret|=(82);
} else {
ret|=(80);
}}break;
case (5):
ret=1;
case (4):
sgn0=((M0=this.m01) >= 0.0 );
sgn1=((M1=this.m10) >= 0.0 );
if (sgn0 != sgn1 ) {
if (M0 != -M1 ) {
ret|=(12);
} else if (M0 != 1.0  && M0 != -1.0  ) {
ret|=(10);
} else {
ret|=8;
}} else {
if (M0 == M1 ) {
ret|=(74);
} else {
ret|=(76);
}}break;
case (3):
ret=1;
case (2):
sgn0=((M0=this.m00) >= 0.0 );
sgn1=((M1=this.m11) >= 0.0 );
if (sgn0 == sgn1 ) {
if (sgn0) {
if (M0 == M1 ) {
ret|=2;
} else {
ret|=4;
}} else {
if (M0 != M1 ) {
ret|=(12);
} else if (M0 != -1.0 ) {
ret|=(10);
} else {
ret|=8;
}}} else {
if (M0 == -M1 ) {
if (M0 == 1.0  || M0 == -1.0  ) {
ret|=64;
} else {
ret|=(66);
}} else {
ret|=(68);
}}break;
case (1):
ret=1;
break;
case (0):
break;
}
this.type=ret;
}, p$1);

Clazz_newMeth(C$, 'getDeterminant$',  function () {
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
case (6):
return this.m00 * this.m11 - this.m01 * this.m10;
case (5):
case (4):
return -(this.m01 * this.m10);
case (3):
case (2):
return this.m00 * this.m11;
case (1):
case (0):
return 1.0;
}
});

Clazz_newMeth(C$, 'updateState$',  function () {
if (this.m01 == 0.0  && this.m10 == 0.0  ) {
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=0;
this.type=0;
} else {
this.state=1;
this.type=1;
}} else {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=2;
this.type=-1;
} else {
this.state=(3);
this.type=-1;
}}} else {
if (this.m00 == 0.0  && this.m11 == 0.0  ) {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=4;
this.type=-1;
} else {
this.state=(5);
this.type=-1;
}} else {
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=(6);
this.type=-1;
} else {
this.state=(7);
this.type=-1;
}}}});

Clazz_newMeth(C$, 'stateError',  function () {
throw Clazz_new_($I$(1,1).c$$S,["missing case in transform state switch"]);
}, p$1);

Clazz_newMeth(C$, 'getMatrix$DA',  function (flatmatrix) {
flatmatrix[0]=this.m00;
flatmatrix[1]=this.m10;
flatmatrix[2]=this.m01;
flatmatrix[3]=this.m11;
if (flatmatrix.length > 5) {
flatmatrix[4]=this.m02;
flatmatrix[5]=this.m12;
}});

Clazz_newMeth(C$, 'getScaleX$',  function () {
return this.m00;
});

Clazz_newMeth(C$, 'getScaleY$',  function () {
return this.m11;
});

Clazz_newMeth(C$, 'getShearX$',  function () {
return this.m01;
});

Clazz_newMeth(C$, 'getShearY$',  function () {
return this.m10;
});

Clazz_newMeth(C$, 'getTranslateX$',  function () {
return this.m02;
});

Clazz_newMeth(C$, 'getTranslateY$',  function () {
return this.m12;
});

Clazz_newMeth(C$, 'translate$D$D',  function (tx, ty) {
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
this.m02=tx * this.m00 + ty * this.m01 + this.m02;
this.m12=tx * this.m10 + ty * this.m11 + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=6;
if (this.type != -1) {
this.type-=1;
}}return;
case (6):
this.m02=tx * this.m00 + ty * this.m01;
this.m12=tx * this.m10 + ty * this.m11;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state=7;
this.type|=1;
}return;
case (5):
this.m02=ty * this.m01 + this.m02;
this.m12=tx * this.m10 + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=4;
if (this.type != -1) {
this.type-=1;
}}return;
case (4):
this.m02=ty * this.m01;
this.m12=tx * this.m10;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state=5;
this.type|=1;
}return;
case (3):
this.m02=tx * this.m00 + this.m02;
this.m12=ty * this.m11 + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=2;
if (this.type != -1) {
this.type-=1;
}}return;
case (2):
this.m02=tx * this.m00;
this.m12=ty * this.m11;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state=3;
this.type|=1;
}return;
case (1):
this.m02=tx + this.m02;
this.m12=ty + this.m12;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=0;
this.type=0;
}return;
case (0):
this.m02=tx;
this.m12=ty;
if (tx != 0.0  || ty != 0.0  ) {
this.state=1;
this.type=1;
}return;
}
});

Clazz_newMeth(C$, 'rotate90',  function () {
var M0=this.m00;
this.m00=this.m01;
this.m01=-M0;
M0=this.m10;
this.m10=this.m11;
this.m11=-M0;
var state=C$.rot90conversion[this.state];
if ((state & (6)) == 2 && this.m00 == 1.0   && this.m11 == 1.0  ) {
state-=2;
}this.state=state;
this.type=-1;
}, p$1);

Clazz_newMeth(C$, 'rotate180',  function () {
this.m00=-this.m00;
this.m11=-this.m11;
var state=this.state;
if ((state & (4)) != 0) {
this.m01=-this.m01;
this.m10=-this.m10;
} else {
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
this.state=state & ~2;
} else {
this.state=state | 2;
}}this.type=-1;
}, p$1);

Clazz_newMeth(C$, 'rotate270',  function () {
var M0=this.m00;
this.m00=-this.m01;
this.m01=M0;
M0=this.m10;
this.m10=-this.m11;
this.m11=M0;
var state=C$.rot90conversion[this.state];
if ((state & (6)) == 2 && this.m00 == 1.0   && this.m11 == 1.0  ) {
state-=2;
}this.state=state;
this.type=-1;
}, p$1);

Clazz_newMeth(C$, 'rotate$D',  function (theta) {
var sin=Math.sin(theta);
if (sin == 1.0 ) {
p$1.rotate90.apply(this, []);
} else if (sin == -1.0 ) {
p$1.rotate270.apply(this, []);
} else {
var cos=Math.cos(theta);
if (cos == -1.0 ) {
p$1.rotate180.apply(this, []);
} else if (cos != 1.0 ) {
var M0;
var M1;
M0=this.m00;
M1=this.m01;
this.m00=cos * M0 + sin * M1;
this.m01=-sin * M0 + cos * M1;
M0=this.m10;
M1=this.m11;
this.m10=cos * M0 + sin * M1;
this.m11=-sin * M0 + cos * M1;
this.updateState$();
}}});

Clazz_newMeth(C$, 'rotate$D$D$D',  function (theta, anchorx, anchory) {
this.translate$D$D(anchorx, anchory);
this.rotate$D(theta);
this.translate$D$D(-anchorx, -anchory);
});

Clazz_newMeth(C$, 'rotate$D$D',  function (vecx, vecy) {
if (vecy == 0.0 ) {
if (vecx < 0.0 ) {
p$1.rotate180.apply(this, []);
}} else if (vecx == 0.0 ) {
if (vecy > 0.0 ) {
p$1.rotate90.apply(this, []);
} else {
p$1.rotate270.apply(this, []);
}} else {
var len=Math.sqrt(vecx * vecx + vecy * vecy);
var sin=vecy / len;
var cos=vecx / len;
var M0;
var M1;
M0=this.m00;
M1=this.m01;
this.m00=cos * M0 + sin * M1;
this.m01=-sin * M0 + cos * M1;
M0=this.m10;
M1=this.m11;
this.m10=cos * M0 + sin * M1;
this.m11=-sin * M0 + cos * M1;
this.updateState$();
}});

Clazz_newMeth(C$, 'rotate$D$D$D$D',  function (vecx, vecy, anchorx, anchory) {
this.translate$D$D(anchorx, anchory);
this.rotate$D$D(vecx, vecy);
this.translate$D$D(-anchorx, -anchory);
});

Clazz_newMeth(C$, 'quadrantRotate$I',  function (numquadrants) {
switch (numquadrants & 3) {
case 0:
break;
case 1:
p$1.rotate90.apply(this, []);
break;
case 2:
p$1.rotate180.apply(this, []);
break;
case 3:
p$1.rotate270.apply(this, []);
break;
}
});

Clazz_newMeth(C$, 'quadrantRotate$I$D$D',  function (numquadrants, anchorx, anchory) {
switch (numquadrants & 3) {
case 0:
return;
case 1:
this.m02+=anchorx * (this.m00 - this.m01) + anchory * (this.m01 + this.m00);
this.m12+=anchorx * (this.m10 - this.m11) + anchory * (this.m11 + this.m10);
p$1.rotate90.apply(this, []);
break;
case 2:
this.m02+=anchorx * (this.m00 + this.m00) + anchory * (this.m01 + this.m01);
this.m12+=anchorx * (this.m10 + this.m10) + anchory * (this.m11 + this.m11);
p$1.rotate180.apply(this, []);
break;
case 3:
this.m02+=anchorx * (this.m00 + this.m01) + anchory * (this.m01 - this.m00);
this.m12+=anchorx * (this.m10 + this.m11) + anchory * (this.m11 - this.m10);
p$1.rotate270.apply(this, []);
break;
}
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state&=~1;
} else {
this.state|=1;
}});

Clazz_newMeth(C$, 'scale$D$D',  function (sx, sy) {
var state=this.state;
switch (state) {
default:
p$1.stateError.apply(this, []);
case (7):
case (6):
this.m00*=sx;
this.m11*=sy;
case (5):
case (4):
this.m01*=sy;
this.m10*=sx;
if (this.m01 == 0  && this.m10 == 0  ) {
state&=1;
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
this.type=(state == 0 ? 0 : 1);
} else {
state|=2;
this.type=-1;
}this.state=state;
}return;
case (3):
case (2):
this.m00*=sx;
this.m11*=sy;
if (this.m00 == 1.0  && this.m11 == 1.0  ) {
this.state=(state&=1);
this.type=(state == 0 ? 0 : 1);
} else {
this.type=-1;
}return;
case (1):
case (0):
this.m00=sx;
this.m11=sy;
if (sx != 1.0  || sy != 1.0  ) {
this.state=state | 2;
this.type=-1;
}return;
}
});

Clazz_newMeth(C$, 'shear$D$D',  function (shx, shy) {
var state=this.state;
switch (state) {
default:
p$1.stateError.apply(this, []);
case (7):
case (6):
var M0;
var M1;
M0=this.m00;
M1=this.m01;
this.m00=M0 + M1 * shy;
this.m01=M0 * shx + M1;
M0=this.m10;
M1=this.m11;
this.m10=M0 + M1 * shy;
this.m11=M0 * shx + M1;
this.updateState$();
return;
case (5):
case (4):
this.m00=this.m01 * shy;
this.m11=this.m10 * shx;
if (this.m00 != 0.0  || this.m11 != 0.0  ) {
this.state=state | 2;
}this.type=-1;
return;
case (3):
case (2):
this.m01=this.m00 * shx;
this.m10=this.m11 * shy;
if (this.m01 != 0.0  || this.m10 != 0.0  ) {
this.state=state | 4;
}this.type=-1;
return;
case (1):
case (0):
this.m01=shx;
this.m10=shy;
if (this.m01 != 0.0  || this.m10 != 0.0  ) {
this.state=state | 2 | 4 ;
this.type=-1;
}return;
}
});

Clazz_newMeth(C$, 'setToIdentity$',  function () {
this.m00=this.m11=1.0;
this.m10=this.m01=this.m02=this.m12=0.0;
this.state=0;
this.type=0;
});

Clazz_newMeth(C$, 'setToTranslation$D$D',  function (tx, ty) {
this.m00=1.0;
this.m10=0.0;
this.m01=0.0;
this.m11=1.0;
this.m02=tx;
this.m12=ty;
if (tx != 0.0  || ty != 0.0  ) {
this.state=1;
this.type=1;
} else {
this.state=0;
this.type=0;
}});

Clazz_newMeth(C$, 'setToRotation$D',  function (theta) {
p$1.setToRotationTheta$D.apply(this, [theta]);
});

Clazz_newMeth(C$, 'setToRotationTheta$D',  function (theta) {
var sin=Math.sin(theta);
var cos;
if (sin == 1.0  || sin == -1.0  ) {
cos=0.0;
this.state=4;
this.type=8;
} else {
cos=Math.cos(theta);
if (cos == -1.0 ) {
sin=0.0;
this.state=2;
this.type=8;
} else if (cos == 1.0 ) {
sin=0.0;
this.state=0;
this.type=0;
} else {
this.state=6;
this.type=16;
}}this.m00=cos;
this.m10=sin;
this.m01=-sin;
this.m11=cos;
this.m02=0.0;
this.m12=0.0;
}, p$1);

Clazz_newMeth(C$, 'setToRotation$D$D$D',  function (theta, anchorx, anchory) {
p$1.setToRotationThetaXY$D$D$D.apply(this, [theta, anchorx, anchory]);
});

Clazz_newMeth(C$, 'setToRotationThetaXY$D$D$D',  function (theta, anchorx, anchory) {
p$1.setToRotationTheta$D.apply(this, [theta]);
var sin=this.m10;
var oneMinusCos=1.0 - this.m00;
this.m02=anchorx * oneMinusCos + anchory * sin;
this.m12=anchory * oneMinusCos - anchorx * sin;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state|=1;
this.type|=1;
}}, p$1);

Clazz_newMeth(C$, 'setToRotation$D$D',  function (vecx, vecy) {
p$1.setToRotationXY$D$D.apply(this, [vecx, vecy]);
});

Clazz_newMeth(C$, 'setToRotationXY$D$D',  function (vecx, vecy) {
var sin;
var cos;
if (vecy == 0 ) {
sin=0.0;
if (vecx < 0.0 ) {
cos=-1.0;
this.state=2;
this.type=8;
} else {
cos=1.0;
this.state=0;
this.type=0;
}} else if (vecx == 0 ) {
cos=0.0;
sin=(vecy > 0.0 ) ? 1.0 : -1.0;
this.state=4;
this.type=8;
} else {
var len=Math.sqrt(vecx * vecx + vecy * vecy);
cos=vecx / len;
sin=vecy / len;
this.state=6;
this.type=16;
}this.m00=cos;
this.m10=sin;
this.m01=-sin;
this.m11=cos;
this.m02=0.0;
this.m12=0.0;
}, p$1);

Clazz_newMeth(C$, 'setToRotation$D$D$D$D',  function (vecx, vecy, anchorx, anchory) {
p$1.setToRotationV2XY$D$D$D$D.apply(this, [vecx, vecy, anchorx, anchory]);
});

Clazz_newMeth(C$, 'setToRotationV2XY$D$D$D$D',  function (vecx, vecy, anchorx, anchory) {
p$1.setToRotationXY$D$D.apply(this, [vecx, vecy]);
var sin=this.m10;
var oneMinusCos=1.0 - this.m00;
this.m02=anchorx * oneMinusCos + anchory * sin;
this.m12=anchory * oneMinusCos - anchorx * sin;
if (this.m02 != 0.0  || this.m12 != 0.0  ) {
this.state|=1;
this.type|=1;
}}, p$1);

Clazz_newMeth(C$, 'setToQuadrantRotation$I',  function (numquadrants) {
switch (numquadrants & 3) {
case 0:
this.m00=1.0;
this.m10=0.0;
this.m01=0.0;
this.m11=1.0;
this.m02=0.0;
this.m12=0.0;
this.state=0;
this.type=0;
break;
case 1:
this.m00=0.0;
this.m10=1.0;
this.m01=-1.0;
this.m11=0.0;
this.m02=0.0;
this.m12=0.0;
this.state=4;
this.type=8;
break;
case 2:
this.m00=-1.0;
this.m10=0.0;
this.m01=0.0;
this.m11=-1.0;
this.m02=0.0;
this.m12=0.0;
this.state=2;
this.type=8;
break;
case 3:
this.m00=0.0;
this.m10=-1.0;
this.m01=1.0;
this.m11=0.0;
this.m02=0.0;
this.m12=0.0;
this.state=4;
this.type=8;
break;
}
});

Clazz_newMeth(C$, 'setToQuadrantRotation$I$D$D',  function (numquadrants, anchorx, anchory) {
switch (numquadrants & 3) {
case 0:
this.m00=1.0;
this.m10=0.0;
this.m01=0.0;
this.m11=1.0;
this.m02=0.0;
this.m12=0.0;
this.state=0;
this.type=0;
break;
case 1:
this.m00=0.0;
this.m10=1.0;
this.m01=-1.0;
this.m11=0.0;
this.m02=anchorx + anchory;
this.m12=anchory - anchorx;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=4;
this.type=8;
} else {
this.state=5;
this.type=9;
}break;
case 2:
this.m00=-1.0;
this.m10=0.0;
this.m01=0.0;
this.m11=-1.0;
this.m02=anchorx + anchorx;
this.m12=anchory + anchory;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=2;
this.type=8;
} else {
this.state=3;
this.type=9;
}break;
case 3:
this.m00=0.0;
this.m10=-1.0;
this.m01=1.0;
this.m11=0.0;
this.m02=anchorx - anchory;
this.m12=anchory + anchorx;
if (this.m02 == 0.0  && this.m12 == 0.0  ) {
this.state=4;
this.type=8;
} else {
this.state=5;
this.type=9;
}break;
}
});

Clazz_newMeth(C$, 'setToScale$D$D',  function (sx, sy) {
this.m00=sx;
this.m10=0.0;
this.m01=0.0;
this.m11=sy;
this.m02=0.0;
this.m12=0.0;
if (sx != 1.0  || sy != 1.0  ) {
this.state=2;
this.type=-1;
} else {
this.state=0;
this.type=0;
}});

Clazz_newMeth(C$, 'setToShear$D$D',  function (shx, shy) {
this.m00=1.0;
this.m01=shx;
this.m10=shy;
this.m11=1.0;
this.m02=0.0;
this.m12=0.0;
if (shx != 0.0  || shy != 0.0  ) {
this.state=(6);
this.type=-1;
} else {
this.state=0;
this.type=0;
}});

Clazz_newMeth(C$, 'setTransform$java_awt_geom_AffineTransform',  function (t) {
this.m00=t.m00;
this.m10=t.m10;
this.m01=t.m01;
this.m11=t.m11;
this.m02=t.m02;
this.m12=t.m12;
this.state=t.state;
this.type=t.type;
});

Clazz_newMeth(C$, 'setTransform$D$D$D$D$D$D',  function (m00, m10, m01, m11, m02, m12) {
this.m00=m00;
this.m10=m10;
this.m01=m01;
this.m11=m11;
this.m02=m02;
this.m12=m12;
this.updateState$();
});

Clazz_newMeth(C$, 'concatenate$java_awt_geom_AffineTransform',  function (Tx) {
var M0;
var M1;
var T00;
var T01;
var T10;
var T11;
var T02;
var T12;
var mystate=this.state;
var txstate=Tx.state;
switch ((txstate << 3) | mystate) {
case (0):
case (1):
case (2):
case (3):
case (4):
case (5):
case (6):
case (7):
return;
case (56):
this.m01=Tx.m01;
this.m10=Tx.m10;
case (24):
this.m00=Tx.m00;
this.m11=Tx.m11;
case (8):
this.m02=Tx.m02;
this.m12=Tx.m12;
this.state=txstate;
this.type=Tx.type;
return;
case (48):
this.m01=Tx.m01;
this.m10=Tx.m10;
case (16):
this.m00=Tx.m00;
this.m11=Tx.m11;
this.state=txstate;
this.type=Tx.type;
return;
case (40):
this.m02=Tx.m02;
this.m12=Tx.m12;
case (32):
this.m01=Tx.m01;
this.m10=Tx.m10;
this.m00=this.m11=0.0;
this.state=txstate;
this.type=Tx.type;
return;
case (15):
case (14):
case (13):
case (12):
case (11):
case (10):
case (9):
this.translate$D$D(Tx.m02, Tx.m12);
return;
case (23):
case (22):
case (21):
case (20):
case (19):
case (18):
case (17):
this.scale$D$D(Tx.m00, Tx.m11);
return;
case (39):
case (38):
T01=Tx.m01;
T10=Tx.m10;
M0=this.m00;
this.m00=this.m01 * T10;
this.m01=M0 * T01;
M0=this.m10;
this.m10=this.m11 * T10;
this.m11=M0 * T01;
this.type=-1;
return;
case (37):
case (36):
this.m00=this.m01 * Tx.m10;
this.m01=0.0;
this.m11=this.m10 * Tx.m01;
this.m10=0.0;
this.state=mystate ^ (6);
this.type=-1;
return;
case (35):
case (34):
this.m01=this.m00 * Tx.m01;
this.m00=0.0;
this.m10=this.m11 * Tx.m10;
this.m11=0.0;
this.state=mystate ^ (6);
this.type=-1;
return;
case (33):
this.m00=0.0;
this.m01=Tx.m01;
this.m10=Tx.m10;
this.m11=0.0;
this.state=5;
this.type=-1;
return;
}
T00=Tx.m00;
T01=Tx.m01;
T02=Tx.m02;
T10=Tx.m10;
T11=Tx.m11;
T12=Tx.m12;
switch (mystate) {
default:
p$1.stateError.apply(this, []);
case (6):
this.state=mystate | txstate;
case (7):
M0=this.m00;
M1=this.m01;
this.m00=T00 * M0 + T10 * M1;
this.m01=T01 * M0 + T11 * M1;
this.m02+=T02 * M0 + T12 * M1;
M0=this.m10;
M1=this.m11;
this.m10=T00 * M0 + T10 * M1;
this.m11=T01 * M0 + T11 * M1;
this.m12+=T02 * M0 + T12 * M1;
this.type=-1;
return;
case (5):
case (4):
M0=this.m01;
this.m00=T10 * M0;
this.m01=T11 * M0;
this.m02+=T12 * M0;
M0=this.m10;
this.m10=T00 * M0;
this.m11=T01 * M0;
this.m12+=T02 * M0;
break;
case (3):
case (2):
M0=this.m00;
this.m00=T00 * M0;
this.m01=T01 * M0;
this.m02+=T02 * M0;
M0=this.m11;
this.m10=T10 * M0;
this.m11=T11 * M0;
this.m12+=T12 * M0;
break;
case (1):
this.m00=T00;
this.m01=T01;
this.m02+=T02;
this.m10=T10;
this.m11=T11;
this.m12+=T12;
this.state=txstate | 1;
this.type=-1;
return;
}
this.updateState$();
});

Clazz_newMeth(C$, 'preConcatenate$java_awt_geom_AffineTransform',  function (Tx) {
var M0;
var M1;
var T00;
var T01;
var T10;
var T11;
var T02;
var T12;
var mystate=this.state;
var txstate=Tx.state;
switch ((txstate << 3) | mystate) {
case (0):
case (1):
case (2):
case (3):
case (4):
case (5):
case (6):
case (7):
return;
case (8):
case (10):
case (12):
case (14):
this.m02=Tx.m02;
this.m12=Tx.m12;
this.state=mystate | 1;
this.type|=1;
return;
case (9):
case (11):
case (13):
case (15):
this.m02=this.m02 + Tx.m02;
this.m12=this.m12 + Tx.m12;
return;
case (17):
case (16):
this.state=mystate | 2;
case (23):
case (22):
case (21):
case (20):
case (19):
case (18):
T00=Tx.m00;
T11=Tx.m11;
if ((mystate & 4) != 0) {
this.m01=this.m01 * T00;
this.m10=this.m10 * T11;
if ((mystate & 2) != 0) {
this.m00=this.m00 * T00;
this.m11=this.m11 * T11;
}} else {
this.m00=this.m00 * T00;
this.m11=this.m11 * T11;
}if ((mystate & 1) != 0) {
this.m02=this.m02 * T00;
this.m12=this.m12 * T11;
}this.type=-1;
return;
case (37):
case (36):
mystate=mystate | 2;
case (33):
case (32):
case (35):
case (34):
this.state=mystate ^ 4;
case (39):
case (38):
T01=Tx.m01;
T10=Tx.m10;
M0=this.m00;
this.m00=this.m10 * T01;
this.m10=M0 * T10;
M0=this.m01;
this.m01=this.m11 * T01;
this.m11=M0 * T10;
M0=this.m02;
this.m02=this.m12 * T01;
this.m12=M0 * T10;
this.type=-1;
return;
}
T00=Tx.m00;
T01=Tx.m01;
T02=Tx.m02;
T10=Tx.m10;
T11=Tx.m11;
T12=Tx.m12;
switch (mystate) {
default:
p$1.stateError.apply(this, []);
case (7):
M0=this.m02;
M1=this.m12;
T02+=M0 * T00 + M1 * T01;
T12+=M0 * T10 + M1 * T11;
case (6):
this.m02=T02;
this.m12=T12;
M0=this.m00;
M1=this.m10;
this.m00=M0 * T00 + M1 * T01;
this.m10=M0 * T10 + M1 * T11;
M0=this.m01;
M1=this.m11;
this.m01=M0 * T00 + M1 * T01;
this.m11=M0 * T10 + M1 * T11;
break;
case (5):
M0=this.m02;
M1=this.m12;
T02+=M0 * T00 + M1 * T01;
T12+=M0 * T10 + M1 * T11;
case (4):
this.m02=T02;
this.m12=T12;
M0=this.m10;
this.m00=M0 * T01;
this.m10=M0 * T11;
M0=this.m01;
this.m01=M0 * T00;
this.m11=M0 * T10;
break;
case (3):
M0=this.m02;
M1=this.m12;
T02+=M0 * T00 + M1 * T01;
T12+=M0 * T10 + M1 * T11;
case (2):
this.m02=T02;
this.m12=T12;
M0=this.m00;
this.m00=M0 * T00;
this.m10=M0 * T10;
M0=this.m11;
this.m01=M0 * T01;
this.m11=M0 * T11;
break;
case (1):
M0=this.m02;
M1=this.m12;
T02+=M0 * T00 + M1 * T01;
T12+=M0 * T10 + M1 * T11;
case (0):
this.m02=T02;
this.m12=T12;
this.m00=T00;
this.m10=T10;
this.m01=T01;
this.m11=T11;
this.state=mystate | txstate;
this.type=-1;
return;
}
this.updateState$();
});

Clazz_newMeth(C$, 'createInverse$',  function () {
var det;
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
det=this.m00 * this.m11 - this.m01 * this.m10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[this.m11 / det, -this.m10 / det, -this.m01 / det, this.m00 / det, (this.m01 * this.m12 - this.m11 * this.m02) / det, (this.m10 * this.m02 - this.m00 * this.m12) / det, (7)]);
case (6):
det=this.m00 * this.m11 - this.m01 * this.m10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[this.m11 / det, -this.m10 / det, -this.m01 / det, this.m00 / det, 0.0, 0.0, (6)]);
case (5):
if (this.m01 == 0.0  || this.m10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[0.0, 1.0 / this.m01, 1.0 / this.m10, 0.0, -this.m12 / this.m10, -this.m02 / this.m01, (5)]);
case (4):
if (this.m01 == 0.0  || this.m10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[0.0, 1.0 / this.m01, 1.0 / this.m10, 0.0, 0.0, 0.0, (4)]);
case (3):
if (this.m00 == 0.0  || this.m11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[1.0 / this.m00, 0.0, 0.0, 1.0 / this.m11, -this.m02 / this.m00, -this.m12 / this.m11, (3)]);
case (2):
if (this.m00 == 0.0  || this.m11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[1.0 / this.m00, 0.0, 0.0, 1.0 / this.m11, 0.0, 0.0, (2)]);
case (1):
return Clazz_new_(C$.c$$D$D$D$D$D$D$I,[1.0, 0.0, 0.0, 1.0, -this.m02, -this.m12, (1)]);
case (0):
return Clazz_new_(C$);
}
});

Clazz_newMeth(C$, 'invert$',  function () {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
var det;
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
M00=this.m00;
M01=this.m01;
M02=this.m02;
M10=this.m10;
M11=this.m11;
M12=this.m12;
det=M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}this.m00=M11 / det;
this.m10=-M10 / det;
this.m01=-M01 / det;
this.m11=M00 / det;
this.m02=(M01 * M12 - M11 * M02) / det;
this.m12=(M10 * M02 - M00 * M12) / det;
break;
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
det=M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}this.m00=M11 / det;
this.m10=-M10 / det;
this.m01=-M01 / det;
this.m11=M00 / det;
break;
case (5):
M01=this.m01;
M02=this.m02;
M10=this.m10;
M12=this.m12;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m10=1.0 / M01;
this.m01=1.0 / M10;
this.m02=-M12 / M10;
this.m12=-M02 / M01;
break;
case (4):
M01=this.m01;
M10=this.m10;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m10=1.0 / M01;
this.m01=1.0 / M10;
break;
case (3):
M00=this.m00;
M02=this.m02;
M11=this.m11;
M12=this.m12;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m00=1.0 / M00;
this.m11=1.0 / M11;
this.m02=-M02 / M00;
this.m12=-M12 / M11;
break;
case (2):
M00=this.m00;
M11=this.m11;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}this.m00=1.0 / M00;
this.m11=1.0 / M11;
break;
case (1):
this.m02=-this.m02;
this.m12=-this.m12;
break;
case (0):
break;
}
});

Clazz_newMeth(C$, 'transform$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (ptSrc, ptDst) {
if (ptDst == null ) {
if (Clazz_instanceOf(ptSrc, "java.awt.geom.Point2D.Double")) {
ptDst=Clazz_new_($I$(2,1));
} else {
ptDst=Clazz_new_($I$(3,1));
}}var x=ptSrc.getX$();
var y=ptSrc.getY$();
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
ptDst.setLocation$D$D(x * this.m00 + y * this.m01 + this.m02, x * this.m10 + y * this.m11 + this.m12);
return ptDst;
case (6):
ptDst.setLocation$D$D(x * this.m00 + y * this.m01, x * this.m10 + y * this.m11);
return ptDst;
case (5):
ptDst.setLocation$D$D(y * this.m01 + this.m02, x * this.m10 + this.m12);
return ptDst;
case (4):
ptDst.setLocation$D$D(y * this.m01, x * this.m10);
return ptDst;
case (3):
ptDst.setLocation$D$D(x * this.m00 + this.m02, y * this.m11 + this.m12);
return ptDst;
case (2):
ptDst.setLocation$D$D(x * this.m00, y * this.m11);
return ptDst;
case (1):
ptDst.setLocation$D$D(x + this.m02, y + this.m12);
return ptDst;
case (0):
ptDst.setLocation$D$D(x, y);
return ptDst;
}
});

Clazz_newMeth(C$, 'transform$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I',  function (ptSrc, srcOff, ptDst, dstOff, numPts) {
p$1.transformPts$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I.apply(this, [ptSrc, srcOff, ptDst, dstOff, numPts]);
});

Clazz_newMeth(C$, 'transformPts$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I',  function (ptSrc, srcOff, ptDst, dstOff, numPts) {
var state=this.state;
while (--numPts >= 0){
var src=ptSrc[srcOff++];
var x=src.getX$();
var y=src.getY$();
var dst=ptDst[dstOff++];
if (dst == null ) {
if (Clazz_instanceOf(src, "java.awt.geom.Point2D.Double")) {
dst=Clazz_new_($I$(2,1));
} else {
dst=Clazz_new_($I$(3,1));
}ptDst[dstOff - 1]=dst;
}switch (state) {
default:
p$1.stateError.apply(this, []);
case (7):
dst.setLocation$D$D(x * this.m00 + y * this.m01 + this.m02, x * this.m10 + y * this.m11 + this.m12);
break;
case (6):
dst.setLocation$D$D(x * this.m00 + y * this.m01, x * this.m10 + y * this.m11);
break;
case (5):
dst.setLocation$D$D(y * this.m01 + this.m02, x * this.m10 + this.m12);
break;
case (4):
dst.setLocation$D$D(y * this.m01, x * this.m10);
break;
case (3):
dst.setLocation$D$D(x * this.m00 + this.m02, y * this.m11 + this.m12);
break;
case (2):
dst.setLocation$D$D(x * this.m00, y * this.m11);
break;
case (1):
dst.setLocation$D$D(x + this.m02, y + this.m12);
break;
case (0):
dst.setLocation$D$D(x, y);
break;
}
}
}, p$1);

Clazz_newMeth(C$, 'transform$FA$I$FA$I$I',  function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff=dstOff;
}switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
M00=this.m00;
M01=this.m01;
M02=this.m02;
M10=this.m10;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=(M00 * x + M01 * y + M02);
dstPts[dstOff++]=(M10 * x + M11 * y + M12);
}
return;
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=(M00 * x + M01 * y);
dstPts[dstOff++]=(M10 * x + M11 * y);
}
return;
case (5):
M01=this.m01;
M02=this.m02;
M10=this.m10;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=(M01 * srcPts[srcOff++] + M02);
dstPts[dstOff++]=(M10 * x + M12);
}
return;
case (4):
M01=this.m01;
M10=this.m10;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=(M01 * srcPts[srcOff++]);
dstPts[dstOff++]=(M10 * x);
}
return;
case (3):
M00=this.m00;
M02=this.m02;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=(M00 * srcPts[srcOff++] + M02);
dstPts[dstOff++]=(M11 * srcPts[srcOff++] + M12);
}
return;
case (2):
M00=this.m00;
M11=this.m11;
while (--numPts >= 0){
dstPts[dstOff++]=(M00 * srcPts[srcOff++]);
dstPts[dstOff++]=(M11 * srcPts[srcOff++]);
}
return;
case (1):
M02=this.m02;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=(srcPts[srcOff++] + M02);
dstPts[dstOff++]=(srcPts[srcOff++] + M12);
}
return;
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'transform$DA$I$DA$I$I',  function (srcPts, srcOff, dstPts, dstOff, numPts) {
if (numPts == 0) return;
if (!$I$(4).isAD$O(srcPts)) {
var src=srcPts;
var dst=dstPts;
this.transform$java_awt_geom_Point2DA$I$java_awt_geom_Point2DA$I$I(src, srcOff, dst, dstOff, numPts);
return;
}var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff=dstOff;
}switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
M00=this.m00;
M01=this.m01;
M02=this.m02;
M10=this.m10;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=M00 * x + M01 * y + M02;
dstPts[dstOff++]=M10 * x + M11 * y + M12;
}
return;
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=M00 * x + M01 * y;
dstPts[dstOff++]=M10 * x + M11 * y;
}
return;
case (5):
M01=this.m01;
M02=this.m02;
M10=this.m10;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=M01 * srcPts[srcOff++] + M02;
dstPts[dstOff++]=M10 * x + M12;
}
return;
case (4):
M01=this.m01;
M10=this.m10;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=M01 * srcPts[srcOff++];
dstPts[dstOff++]=M10 * x;
}
return;
case (3):
M00=this.m00;
M02=this.m02;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=M00 * srcPts[srcOff++] + M02;
dstPts[dstOff++]=M11 * srcPts[srcOff++] + M12;
}
return;
case (2):
M00=this.m00;
M11=this.m11;
while (--numPts >= 0){
dstPts[dstOff++]=M00 * srcPts[srcOff++];
dstPts[dstOff++]=M11 * srcPts[srcOff++];
}
return;
case (1):
M02=this.m02;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=srcPts[srcOff++] + M02;
dstPts[dstOff++]=srcPts[srcOff++] + M12;
}
return;
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'transform$FA$I$DA$I$I',  function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
M00=this.m00;
M01=this.m01;
M02=this.m02;
M10=this.m10;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=M00 * x + M01 * y + M02;
dstPts[dstOff++]=M10 * x + M11 * y + M12;
}
return;
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=M00 * x + M01 * y;
dstPts[dstOff++]=M10 * x + M11 * y;
}
return;
case (5):
M01=this.m01;
M02=this.m02;
M10=this.m10;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=M01 * srcPts[srcOff++] + M02;
dstPts[dstOff++]=M10 * x + M12;
}
return;
case (4):
M01=this.m01;
M10=this.m10;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=M01 * srcPts[srcOff++];
dstPts[dstOff++]=M10 * x;
}
return;
case (3):
M00=this.m00;
M02=this.m02;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=M00 * srcPts[srcOff++] + M02;
dstPts[dstOff++]=M11 * srcPts[srcOff++] + M12;
}
return;
case (2):
M00=this.m00;
M11=this.m11;
while (--numPts >= 0){
dstPts[dstOff++]=M00 * srcPts[srcOff++];
dstPts[dstOff++]=M11 * srcPts[srcOff++];
}
return;
case (1):
M02=this.m02;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=srcPts[srcOff++] + M02;
dstPts[dstOff++]=srcPts[srcOff++] + M12;
}
return;
case (0):
while (--numPts >= 0){
dstPts[dstOff++]=srcPts[srcOff++];
dstPts[dstOff++]=srcPts[srcOff++];
}
return;
}
});

Clazz_newMeth(C$, 'transform$DA$I$FA$I$I',  function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
M00=this.m00;
M01=this.m01;
M02=this.m02;
M10=this.m10;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=(M00 * x + M01 * y + M02);
dstPts[dstOff++]=(M10 * x + M11 * y + M12);
}
return;
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=(M00 * x + M01 * y);
dstPts[dstOff++]=(M10 * x + M11 * y);
}
return;
case (5):
M01=this.m01;
M02=this.m02;
M10=this.m10;
M12=this.m12;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=(M01 * srcPts[srcOff++] + M02);
dstPts[dstOff++]=(M10 * x + M12);
}
return;
case (4):
M01=this.m01;
M10=this.m10;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=(M01 * srcPts[srcOff++]);
dstPts[dstOff++]=(M10 * x);
}
return;
case (3):
M00=this.m00;
M02=this.m02;
M11=this.m11;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=(M00 * srcPts[srcOff++] + M02);
dstPts[dstOff++]=(M11 * srcPts[srcOff++] + M12);
}
return;
case (2):
M00=this.m00;
M11=this.m11;
while (--numPts >= 0){
dstPts[dstOff++]=(M00 * srcPts[srcOff++]);
dstPts[dstOff++]=(M11 * srcPts[srcOff++]);
}
return;
case (1):
M02=this.m02;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=(srcPts[srcOff++] + M02);
dstPts[dstOff++]=(srcPts[srcOff++] + M12);
}
return;
case (0):
while (--numPts >= 0){
dstPts[dstOff++]=(srcPts[srcOff++]);
dstPts[dstOff++]=(srcPts[srcOff++]);
}
return;
}
});

Clazz_newMeth(C$, 'inverseTransform$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (ptSrc, ptDst) {
if (ptDst == null ) {
if (Clazz_instanceOf(ptSrc, "java.awt.geom.Point2D.Double")) {
ptDst=Clazz_new_($I$(2,1));
} else {
ptDst=Clazz_new_($I$(3,1));
}}var x=ptSrc.getX$();
var y=ptSrc.getY$();
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
x-=this.m02;
y-=this.m12;
case (6):
var det=this.m00 * this.m11 - this.m01 * this.m10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}ptDst.setLocation$D$D((x * this.m11 - y * this.m01) / det, (y * this.m00 - x * this.m10) / det);
return ptDst;
case (5):
x-=this.m02;
y-=this.m12;
case (4):
if (this.m01 == 0.0  || this.m10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}ptDst.setLocation$D$D(y / this.m10, x / this.m01);
return ptDst;
case (3):
x-=this.m02;
y-=this.m12;
case (2):
if (this.m00 == 0.0  || this.m11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}ptDst.setLocation$D$D(x / this.m00, y / this.m11);
return ptDst;
case (1):
ptDst.setLocation$D$D(x - this.m02, y - this.m12);
return ptDst;
case (0):
ptDst.setLocation$D$D(x, y);
return ptDst;
}
});

Clazz_newMeth(C$, 'inverseTransform$DA$I$DA$I$I',  function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M02;
var M10;
var M11;
var M12;
var det;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff=dstOff;
}switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
M00=this.m00;
M01=this.m01;
M02=this.m02;
M10=this.m10;
M11=this.m11;
M12=this.m12;
det=M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}while (--numPts >= 0){
var x=srcPts[srcOff++] - M02;
var y=srcPts[srcOff++] - M12;
dstPts[dstOff++]=(x * M11 - y * M01) / det;
dstPts[dstOff++]=(y * M00 - x * M10) / det;
}
return;
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
det=M00 * M11 - M01 * M10;
if (Math.abs(det) <= 4.9E-324 ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is " + new Double(det).toString()]);
}while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=(x * M11 - y * M01) / det;
dstPts[dstOff++]=(y * M00 - x * M10) / det;
}
return;
case (5):
M01=this.m01;
M02=this.m02;
M10=this.m10;
M12=this.m12;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
var x=srcPts[srcOff++] - M02;
dstPts[dstOff++]=(srcPts[srcOff++] - M12) / M10;
dstPts[dstOff++]=x / M01;
}
return;
case (4):
M01=this.m01;
M10=this.m10;
if (M01 == 0.0  || M10 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=srcPts[srcOff++] / M10;
dstPts[dstOff++]=x / M01;
}
return;
case (3):
M00=this.m00;
M02=this.m02;
M11=this.m11;
M12=this.m12;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
dstPts[dstOff++]=(srcPts[srcOff++] - M02) / M00;
dstPts[dstOff++]=(srcPts[srcOff++] - M12) / M11;
}
return;
case (2):
M00=this.m00;
M11=this.m11;
if (M00 == 0.0  || M11 == 0.0  ) {
throw Clazz_new_(Clazz_load('java.awt.geom.NoninvertibleTransformException').c$$S,["Determinant is 0"]);
}while (--numPts >= 0){
dstPts[dstOff++]=srcPts[srcOff++] / M00;
dstPts[dstOff++]=srcPts[srcOff++] / M11;
}
return;
case (1):
M02=this.m02;
M12=this.m12;
while (--numPts >= 0){
dstPts[dstOff++]=srcPts[srcOff++] - M02;
dstPts[dstOff++]=srcPts[srcOff++] - M12;
}
return;
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'deltaTransform$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (ptSrc, ptDst) {
if (ptDst == null ) {
if (Clazz_instanceOf(ptSrc, "java.awt.geom.Point2D.Double")) {
ptDst=Clazz_new_($I$(2,1));
} else {
ptDst=Clazz_new_($I$(3,1));
}}var x=ptSrc.getX$();
var y=ptSrc.getY$();
switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
case (6):
ptDst.setLocation$D$D(x * this.m00 + y * this.m01, x * this.m10 + y * this.m11);
return ptDst;
case (5):
case (4):
ptDst.setLocation$D$D(y * this.m01, x * this.m10);
return ptDst;
case (3):
case (2):
ptDst.setLocation$D$D(x * this.m00, y * this.m11);
return ptDst;
case (1):
case (0):
ptDst.setLocation$D$D(x, y);
return ptDst;
}
});

Clazz_newMeth(C$, 'deltaTransform$DA$I$DA$I$I',  function (srcPts, srcOff, dstPts, dstOff, numPts) {
var M00;
var M01;
var M10;
var M11;
if (dstPts === srcPts  && dstOff > srcOff  && dstOff < srcOff + numPts * 2 ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
srcOff=dstOff;
}switch (this.state) {
default:
p$1.stateError.apply(this, []);
case (7):
case (6):
M00=this.m00;
M01=this.m01;
M10=this.m10;
M11=this.m11;
while (--numPts >= 0){
var x=srcPts[srcOff++];
var y=srcPts[srcOff++];
dstPts[dstOff++]=x * M00 + y * M01;
dstPts[dstOff++]=x * M10 + y * M11;
}
return;
case (5):
case (4):
M01=this.m01;
M10=this.m10;
while (--numPts >= 0){
var x=srcPts[srcOff++];
dstPts[dstOff++]=srcPts[srcOff++] * M01;
dstPts[dstOff++]=x * M10;
}
return;
case (3):
case (2):
M00=this.m00;
M11=this.m11;
while (--numPts >= 0){
dstPts[dstOff++]=srcPts[srcOff++] * M00;
dstPts[dstOff++]=srcPts[srcOff++] * M11;
}
return;
case (1):
case (0):
if (srcPts !== dstPts  || srcOff != dstOff ) {
System.arraycopy$O$I$O$I$I(srcPts, srcOff, dstPts, dstOff, numPts * 2);
}return;
}
});

Clazz_newMeth(C$, 'createTransformedShape$java_awt_Shape',  function (pSrc) {
if (pSrc == null ) {
return null;
}return Clazz_new_($I$(5,1).c$$java_awt_Shape$java_awt_geom_AffineTransform,[pSrc, this]);
});

Clazz_newMeth(C$, '_matround$D',  function (matval) {
return Math.rint(matval * 1.0E15) / 1.0E15;
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return ("AffineTransform[[" + new Double(C$._matround$D(this.m00)).toString() + ", " + new Double(C$._matround$D(this.m01)).toString() + ", " + new Double(C$._matround$D(this.m02)).toString() + "], [" + new Double(C$._matround$D(this.m10)).toString() + ", " + new Double(C$._matround$D(this.m11)).toString() + ", " + new Double(C$._matround$D(this.m12)).toString() + "]]" );
});

Clazz_newMeth(C$, 'isIdentity$',  function () {
return (this.state == 0 || (this.getType$() == 0) );
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(1,1));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var bits=Double.doubleToLongBits$D(this.m00);
bits=Long.$add(Long.$mul(bits,31),Double.doubleToLongBits$D(this.m01));
bits=Long.$add(Long.$mul(bits,31),Double.doubleToLongBits$D(this.m02));
bits=Long.$add(Long.$mul(bits,31),Double.doubleToLongBits$D(this.m10));
bits=Long.$add(Long.$mul(bits,31),Double.doubleToLongBits$D(this.m11));
bits=Long.$add(Long.$mul(bits,31),Double.doubleToLongBits$D(this.m12));
return ((Long.$ival(bits)) ^ (Long.$ival((Long.$sr(bits,32)))));
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "java.awt.geom.AffineTransform"))) {
return false;
}var a=obj;
return ((this.m00 == a.m00 ) && (this.m01 == a.m01 ) && (this.m02 == a.m02 ) && (this.m10 == a.m10 ) && (this.m11 == a.m11 ) && (this.m12 == a.m12 )  );
});

Clazz_newMeth(C$, '秘toArray$',  function () {
return Clazz_array(Double.TYPE, -1, [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, this.state, this.type]);
});

Clazz_newMeth(C$, '秘fromArray$DA',  function (a) {
this.m00=a[0];
this.m01=a[1];
this.m02=a[2];
this.m10=a[3];
this.m11=a[4];
this.m12=a[5];
this.state=(a[6]|0);
this.type=(a[7]|0);
return this;
});

C$.$static$=function(){C$.$static$=0;
C$.rot90conversion=Clazz_array(Integer.TYPE, -1, [4, 5, 4, 5, 2, 3, 6, 7]);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[0,'InternalError']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Dimension2D", null, null, 'Cloneable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setSize$java_awt_geom_Dimension2D',  function (d) {
this.setSize$D$D(d.getWidth$(), d.getHeight$());
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(1,1));
} else {
throw e;
}
}
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[0,['java.awt.geom.Point2D','.Float'],['java.awt.geom.Rectangle2D','.Float'],['java.awt.geom.Point2D','.Double'],['java.awt.geom.Rectangle2D','.Double'],'java.awt.geom.LineIterator','InternalError']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Line2D", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.awt.Shape', 'Cloneable']);
C$.$classes$=[['Float',9],['Double',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setLine$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (p1, p2) {
this.setLine$D$D$D$D(p1.getX$(), p1.getY$(), p2.getX$(), p2.getY$());
});

Clazz_newMeth(C$, 'setLine$java_awt_geom_Line2D',  function (l) {
this.setLine$D$D$D$D(l.getX1$(), l.getY1$(), l.getX2$(), l.getY2$());
});

Clazz_newMeth(C$, 'relativeCCW$D$D$D$D$D$D',  function (x1, y1, x2, y2, px, py) {
return C$.relativeCCWImpl$D$D$D$D$D$D(x1, y1, x2, y2, px, py);
}, 1);

Clazz_newMeth(C$, 'relativeCCWImpl$D$D$D$D$D$D',  function (x1, y1, x2, y2, px, py) {
x2-=x1;
y2-=y1;
px-=x1;
py-=y1;
var ccw=px * y2 - py * x2;
if (ccw == 0.0 ) {
ccw=px * x2 + py * y2;
if (ccw > 0.0 ) {
px-=x2;
py-=y2;
ccw=px * x2 + py * y2;
if (ccw < 0.0 ) {
ccw=0.0;
}}}return (ccw < 0.0 ) ? -1 : ((ccw > 0.0 ) ? 1 : 0);
}, 1);

Clazz_newMeth(C$, 'relativeCCW$D$D',  function (px, py) {
return C$.relativeCCWImpl$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), px, py);
});

Clazz_newMeth(C$, 'relativeCCW$java_awt_geom_Point2D',  function (p) {
return C$.relativeCCWImpl$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), p.getX$(), p.getY$());
});

Clazz_newMeth(C$, 'linesIntersect$D$D$D$D$D$D$D$D',  function (x1, y1, x2, y2, x3, y3, x4, y4) {
return ((C$.relativeCCWImpl$D$D$D$D$D$D(x1, y1, x2, y2, x3, y3) * C$.relativeCCWImpl$D$D$D$D$D$D(x1, y1, x2, y2, x4, y4) <= 0) && (C$.relativeCCWImpl$D$D$D$D$D$D(x3, y3, x4, y4, x1, y1) * C$.relativeCCWImpl$D$D$D$D$D$D(x3, y3, x4, y4, x2, y2) <= 0) );
}, 1);

Clazz_newMeth(C$, 'intersectsLine$D$D$D$D',  function (x1, y1, x2, y2) {
return C$.linesIntersect$D$D$D$D$D$D$D$D(x1, y1, x2, y2, this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$());
});

Clazz_newMeth(C$, 'intersectsLine$java_awt_geom_Line2D',  function (l) {
return C$.linesIntersect$D$D$D$D$D$D$D$D(l.getX1$(), l.getY1$(), l.getX2$(), l.getY2$(), this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$());
});

Clazz_newMeth(C$, 'ptSegDistSq$D$D$D$D$D$D',  function (x1, y1, x2, y2, px, py) {
x2-=x1;
y2-=y1;
px-=x1;
py-=y1;
var dotprod=px * x2 + py * y2;
var projlenSq;
if (dotprod <= 0.0 ) {
projlenSq=0.0;
} else {
px=x2 - px;
py=y2 - py;
dotprod=px * x2 + py * y2;
if (dotprod <= 0.0 ) {
projlenSq=0.0;
} else {
projlenSq=dotprod * dotprod / (x2 * x2 + y2 * y2);
}}var lenSq=px * px + py * py - projlenSq;
if (lenSq < 0 ) {
lenSq=0;
}return lenSq;
}, 1);

Clazz_newMeth(C$, 'ptSegDist$D$D$D$D$D$D',  function (x1, y1, x2, y2, px, py) {
return Math.sqrt(C$.ptSegDistSq$D$D$D$D$D$D(x1, y1, x2, y2, px, py));
}, 1);

Clazz_newMeth(C$, 'ptSegDistSq$D$D',  function (px, py) {
return C$.ptSegDistSq$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), px, py);
});

Clazz_newMeth(C$, 'ptSegDistSq$java_awt_geom_Point2D',  function (pt) {
return C$.ptSegDistSq$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), pt.getX$(), pt.getY$());
});

Clazz_newMeth(C$, 'ptSegDist$D$D',  function (px, py) {
return C$.ptSegDist$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), px, py);
});

Clazz_newMeth(C$, 'ptSegDist$java_awt_geom_Point2D',  function (pt) {
return C$.ptSegDist$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), pt.getX$(), pt.getY$());
});

Clazz_newMeth(C$, 'ptLineDistSq$D$D$D$D$D$D',  function (x1, y1, x2, y2, px, py) {
x2-=x1;
y2-=y1;
px-=x1;
py-=y1;
var dotprod=px * x2 + py * y2;
var projlenSq=dotprod * dotprod / (x2 * x2 + y2 * y2);
var lenSq=px * px + py * py - projlenSq;
if (lenSq < 0 ) {
lenSq=0;
}return lenSq;
}, 1);

Clazz_newMeth(C$, 'ptLineDist$D$D$D$D$D$D',  function (x1, y1, x2, y2, px, py) {
return Math.sqrt(C$.ptLineDistSq$D$D$D$D$D$D(x1, y1, x2, y2, px, py));
}, 1);

Clazz_newMeth(C$, 'ptLineDistSq$D$D',  function (px, py) {
return C$.ptLineDistSq$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), px, py);
});

Clazz_newMeth(C$, 'ptLineDistSq$java_awt_geom_Point2D',  function (pt) {
return C$.ptLineDistSq$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), pt.getX$(), pt.getY$());
});

Clazz_newMeth(C$, 'ptLineDist$D$D',  function (px, py) {
return C$.ptLineDist$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), px, py);
});

Clazz_newMeth(C$, 'ptLineDist$java_awt_geom_Point2D',  function (pt) {
return C$.ptLineDist$D$D$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$(), pt.getX$(), pt.getY$());
});

Clazz_newMeth(C$, 'contains$D$D',  function (x, y) {
return false;
});

Clazz_newMeth(C$, 'contains$java_awt_geom_Point2D',  function (p) {
return false;
});

Clazz_newMeth(C$, 'intersects$D$D$D$D',  function (x, y, w, h) {
return this.intersects$java_awt_geom_Rectangle2D(Clazz_new_($I$(4,1).c$$D$D$D$D,[x, y, w, h]));
});

Clazz_newMeth(C$, 'intersects$java_awt_geom_Rectangle2D',  function (r) {
return r.intersectsLine$D$D$D$D(this.getX1$(), this.getY1$(), this.getX2$(), this.getY2$());
});

Clazz_newMeth(C$, 'contains$D$D$D$D',  function (x, y, w, h) {
return false;
});

Clazz_newMeth(C$, 'contains$java_awt_geom_Rectangle2D',  function (r) {
return false;
});

Clazz_newMeth(C$, 'getBounds$',  function () {
return this.getBounds2D$().getBounds$();
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform',  function (at) {
return Clazz_new_($I$(5,1).c$$java_awt_geom_Line2D$java_awt_geom_AffineTransform,[this, at]);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform$D',  function (at, flatness) {
return Clazz_new_($I$(5,1).c$$java_awt_geom_Line2D$java_awt_geom_AffineTransform,[this, at]);
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(6,1));
} else {
throw e;
}
}
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Line2D, "Float", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Line2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['F',['x1','y1','x2','y2']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F',  function (x1, y1, x2, y2) {
Clazz_super_(C$, this);
this.setLine$F$F$F$F(x1, y1, x2, y2);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (p1, p2) {
Clazz_super_(C$, this);
this.setLine$java_awt_geom_Point2D$java_awt_geom_Point2D(p1, p2);
}, 1);

Clazz_newMeth(C$, 'getX1$',  function () {
return this.x1;
});

Clazz_newMeth(C$, 'getY1$',  function () {
return this.y1;
});

Clazz_newMeth(C$, 'getP1$',  function () {
return Clazz_new_($I$(1,1).c$$F$F,[this.x1, this.y1]);
});

Clazz_newMeth(C$, 'getX2$',  function () {
return this.x2;
});

Clazz_newMeth(C$, 'getY2$',  function () {
return this.y2;
});

Clazz_newMeth(C$, 'getP2$',  function () {
return Clazz_new_($I$(1,1).c$$F$F,[this.x2, this.y2]);
});

Clazz_newMeth(C$, 'setLine$D$D$D$D',  function (x1, y1, x2, y2) {
this.x1=x1;
this.y1=y1;
this.x2=x2;
this.y2=y2;
});

Clazz_newMeth(C$, 'setLine$F$F$F$F',  function (x1, y1, x2, y2) {
this.x1=x1;
this.y1=y1;
this.x2=x2;
this.y2=y2;
});

Clazz_newMeth(C$, 'getBounds2D$',  function () {
var x;
var y;
var w;
var h;
if (this.x1 < this.x2 ) {
x=this.x1;
w=this.x2 - this.x1;
} else {
x=this.x2;
w=this.x1 - this.x2;
}if (this.y1 < this.y2 ) {
y=this.y1;
h=this.y2 - this.y1;
} else {
y=this.y2;
h=this.y1 - this.y2;
}return Clazz_new_($I$(2,1).c$$F$F$F$F,[x, y, w, h]);
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Line2D, "Double", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Line2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['x1','y1','x2','y2']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D$D',  function (x1, y1, x2, y2) {
Clazz_super_(C$, this);
this.setLine$D$D$D$D(x1, y1, x2, y2);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (p1, p2) {
Clazz_super_(C$, this);
this.setLine$java_awt_geom_Point2D$java_awt_geom_Point2D(p1, p2);
}, 1);

Clazz_newMeth(C$, 'getX1$',  function () {
return this.x1;
});

Clazz_newMeth(C$, 'getY1$',  function () {
return this.y1;
});

Clazz_newMeth(C$, 'getP1$',  function () {
return Clazz_new_($I$(3,1).c$$D$D,[this.x1, this.y1]);
});

Clazz_newMeth(C$, 'getX2$',  function () {
return this.x2;
});

Clazz_newMeth(C$, 'getY2$',  function () {
return this.y2;
});

Clazz_newMeth(C$, 'getP2$',  function () {
return Clazz_new_($I$(3,1).c$$D$D,[this.x2, this.y2]);
});

Clazz_newMeth(C$, 'setLine$D$D$D$D',  function (x1, y1, x2, y2) {
this.x1=x1;
this.y1=y1;
this.x2=x2;
this.y2=y2;
});

Clazz_newMeth(C$, 'getBounds2D$',  function () {
var x;
var y;
var w;
var h;
if (this.x1 < this.x2 ) {
x=this.x1;
w=this.x2 - this.x1;
} else {
x=this.x2;
w=this.x1 - this.x2;
}if (this.y1 < this.y2 ) {
y=this.y1;
h=this.y2 - this.y1;
} else {
y=this.y2;
h=this.y1 - this.y2;
}return Clazz_new_($I$(4,1).c$$D$D$D$D,[x, y, w, h]);
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[0,'InternalError']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Point2D", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'Cloneable');
C$.$classes$=[['Float',9],['Double',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setLocation$java_awt_geom_Point2D',  function (p) {
this.setLocation$D$D(p.getX$(), p.getY$());
});

Clazz_newMeth(C$, 'distanceSq$D$D$D$D',  function (x1, y1, x2, y2) {
x1-=x2;
y1-=y2;
return (x1 * x1 + y1 * y1);
}, 1);

Clazz_newMeth(C$, 'distance$D$D$D$D',  function (x1, y1, x2, y2) {
x1-=x2;
y1-=y2;
return Math.sqrt(x1 * x1 + y1 * y1);
}, 1);

Clazz_newMeth(C$, 'distanceSq$D$D',  function (px, py) {
px-=this.getX$();
py-=this.getY$();
return (px * px + py * py);
});

Clazz_newMeth(C$, 'distanceSq$java_awt_geom_Point2D',  function (pt) {
var px=pt.getX$() - this.getX$();
var py=pt.getY$() - this.getY$();
return (px * px + py * py);
});

Clazz_newMeth(C$, 'distance$D$D',  function (px, py) {
px-=this.getX$();
py-=this.getY$();
return Math.sqrt(px * px + py * py);
});

Clazz_newMeth(C$, 'distance$java_awt_geom_Point2D',  function (pt) {
var px=pt.getX$() - this.getX$();
var py=pt.getY$() - this.getY$();
return Math.sqrt(px * px + py * py);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var bits=java.lang.Double.doubleToLongBits$D(this.getX$());
(bits=Long.$xor(bits,(Long.$mul(java.lang.Double.doubleToLongBits$D(this.getY$()),31))));
return ((Long.$ival(bits)) ^ (Long.$ival((Long.$sr(bits,32)))));
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(1,1));
} else {
throw e;
}
}
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Point2D, "Float", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Point2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['F',['x','y']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$F$F',  function (x, y) {
Clazz_super_(C$, this);
this.x=x;
this.y=y;
}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'setLocation$D$D',  function (x, y) {
this.x=x;
this.y=y;
});

Clazz_newMeth(C$, 'setLocation$F$F',  function (x, y) {
this.x=x;
this.y=y;
});

Clazz_newMeth(C$, 'toString',  function () {
return "Point2D.Float[" + new Float(this.x).toString() + ", " + new Float(this.y).toString() + "]" ;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Point2D, "Double", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Point2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['x','y']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$D$D',  function (x, y) {
Clazz_super_(C$, this);
this.x=x;
this.y=y;
}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'setLocation$D$D',  function (x, y) {
this.x=x;
this.y=y;
});

Clazz_newMeth(C$, 'toString',  function () {
return "Point2D.Double[" + new Double(this.x).toString() + ", " + new Double(this.y).toString() + "]" ;
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[0,['java.awt.geom.Rectangle2D','.Double'],'java.awt.geom.Rectangle2D','java.awt.geom.RectIterator']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Rectangle2D", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.geom.RectangularShape');
C$.$classes$=[['Float',9],['Double',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['iterator','java.awt.geom.RectIterator']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'setRect$java_awt_geom_Rectangle2D',  function (r) {
this.setRect$D$D$D$D(r.getX$(), r.getY$(), r.getWidth$(), r.getHeight$());
});

Clazz_newMeth(C$, 'intersectsLine$D$D$D$D',  function (x1, y1, x2, y2) {
var out1;
var out2;
if ((out2=this.outcode$D$D(x2, y2)) == 0) {
return true;
}while ((out1=this.outcode$D$D(x1, y1)) != 0){
if ((out1 & out2) != 0) {
return false;
}if ((out1 & (5)) != 0) {
var x=this.getX$();
if ((out1 & 4) != 0) {
x+=this.getWidth$();
}y1=y1 + (x - x1) * (y2 - y1) / (x2 - x1);
x1=x;
} else {
var y=this.getY$();
if ((out1 & 8) != 0) {
y+=this.getHeight$();
}x1=x1 + (y - y1) * (x2 - x1) / (y2 - y1);
y1=y;
}}
return true;
});

Clazz_newMeth(C$, 'intersectsLine$java_awt_geom_Line2D',  function (l) {
return this.intersectsLine$D$D$D$D(l.getX1$(), l.getY1$(), l.getX2$(), l.getY2$());
});

Clazz_newMeth(C$, 'outcode$java_awt_geom_Point2D',  function (p) {
return this.outcode$D$D(p.getX$(), p.getY$());
});

Clazz_newMeth(C$, 'setFrame$D$D$D$D',  function (x, y, w, h) {
this.setRect$D$D$D$D(x, y, w, h);
});

Clazz_newMeth(C$, 'contains$D$D',  function (x, y) {
var x0=this.getX$();
var y0=this.getY$();
return (x >= x0  && y >= y0   && x < x0 + this.getWidth$()   && y < y0 + this.getHeight$()  );
});

Clazz_newMeth(C$, 'intersects$D$D$D$D',  function (x, y, w, h) {
if (this.isEmpty$() || w <= 0   || h <= 0  ) {
return false;
}var x0=this.getX$();
var y0=this.getY$();
return (x + w > x0  && y + h > y0   && x < x0 + this.getWidth$()   && y < y0 + this.getHeight$()  );
});

Clazz_newMeth(C$, 'contains$D$D$D$D',  function (x, y, w, h) {
if (this.isEmpty$() || w <= 0   || h <= 0  ) {
return false;
}var x0=this.getX$();
var y0=this.getY$();
return (x >= x0  && y >= y0   && (x + w) <= x0 + this.getWidth$()   && (y + h) <= y0 + this.getHeight$()  );
});

Clazz_newMeth(C$, 'intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D',  function (src1, src2, dest) {
var x1=Math.max(src1.getMinX$(), src2.getMinX$());
var y1=Math.max(src1.getMinY$(), src2.getMinY$());
var x2=Math.min(src1.getMaxX$(), src2.getMaxX$());
var y2=Math.min(src1.getMaxY$(), src2.getMaxY$());
dest.setFrame$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
}, 1);

Clazz_newMeth(C$, 'union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D',  function (src1, src2, dest) {
var x1=Math.min(src1.getMinX$(), src2.getMinX$());
var y1=Math.min(src1.getMinY$(), src2.getMinY$());
var x2=Math.max(src1.getMaxX$(), src2.getMaxX$());
var y2=Math.max(src1.getMaxY$(), src2.getMaxY$());
dest.setFrameFromDiagonal$D$D$D$D(x1, y1, x2, y2);
}, 1);

Clazz_newMeth(C$, 'add$D$D',  function (newx, newy) {
var x1=Math.min(this.getMinX$(), newx);
var x2=Math.max(this.getMaxX$(), newx);
var y1=Math.min(this.getMinY$(), newy);
var y2=Math.max(this.getMaxY$(), newy);
this.setRect$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
});

Clazz_newMeth(C$, 'add$java_awt_geom_Point2D',  function (pt) {
this.add$D$D(pt.getX$(), pt.getY$());
});

Clazz_newMeth(C$, 'add$java_awt_geom_Rectangle2D',  function (r) {
var x1=Math.min(this.getMinX$(), r.getMinX$());
var x2=Math.max(this.getMaxX$(), r.getMaxX$());
var y1=Math.min(this.getMinY$(), r.getMinY$());
var y2=Math.max(this.getMaxY$(), r.getMaxY$());
this.setRect$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform',  function (at) {
return (this.iterator == null  ? this.iterator=Clazz_new_($I$(3,1)) : this.iterator).set$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform(this, at);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform$D',  function (at, flatness) {
return (this.iterator == null  ? this.iterator=Clazz_new_($I$(3,1)) : this.iterator).set$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform(this, at);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var bits=java.lang.Double.doubleToLongBits$D(this.getX$());
(bits=Long.$add(bits,(Long.$mul(java.lang.Double.doubleToLongBits$D(this.getY$()),37))));
(bits=Long.$add(bits,(Long.$mul(java.lang.Double.doubleToLongBits$D(this.getWidth$()),43))));
(bits=Long.$add(bits,(Long.$mul(java.lang.Double.doubleToLongBits$D(this.getHeight$()),47))));
return ((Long.$ival(bits)) ^ (Long.$ival((Long.$sr(bits,32)))));
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (obj === this ) {
return true;
}if (Clazz_instanceOf(obj, "java.awt.geom.Rectangle2D")) {
var r2d=obj;
return ((this.getX$() == r2d.getX$() ) && (this.getY$() == r2d.getY$() ) && (this.getWidth$() == r2d.getWidth$() ) && (this.getHeight$() == r2d.getHeight$() )  );
}return false;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Rectangle2D, "Float", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Rectangle2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['F',['x','y','width','height']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F$F',  function (x, y, w, h) {
Clazz_super_(C$, this);
this.setRect$F$F$F$F(x, y, w, h);
}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return (this.width <= 0.0 ) || (this.height <= 0.0 ) ;
});

Clazz_newMeth(C$, 'setRect$F$F$F$F',  function (x, y, w, h) {
this.x=x;
this.y=y;
this.width=w;
this.height=h;
});

Clazz_newMeth(C$, 'setRect$D$D$D$D',  function (x, y, w, h) {
this.x=x;
this.y=y;
this.width=w;
this.height=h;
});

Clazz_newMeth(C$, 'setRect$java_awt_geom_Rectangle2D',  function (r) {
this.x=r.getX$();
this.y=r.getY$();
this.width=r.getWidth$();
this.height=r.getHeight$();
});

Clazz_newMeth(C$, 'outcode$D$D',  function (x, y) {
var out=0;
if (this.width <= 0 ) {
out|=5;
} else if (x < this.x ) {
out|=1;
} else if (x > this.x + this.width ) {
out|=4;
}if (this.height <= 0 ) {
out|=10;
} else if (y < this.y ) {
out|=2;
} else if (y > this.y + this.height ) {
out|=8;
}return out;
});

Clazz_newMeth(C$, 'getBounds2D$',  function () {
return Clazz_new_(C$.c$$F$F$F$F,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'createIntersection$java_awt_geom_Rectangle2D',  function (r) {
var dest;
if (Clazz_instanceOf(r, "java.awt.geom.Rectangle2D.Float")) {
dest=Clazz_new_(C$);
} else {
dest=Clazz_new_($I$(1,1));
}$I$(2).intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'createUnion$java_awt_geom_Rectangle2D',  function (r) {
var dest;
if (Clazz_instanceOf(r, "java.awt.geom.Rectangle2D.Float")) {
dest=Clazz_new_(C$);
} else {
dest=Clazz_new_($I$(1,1));
}$I$(2).union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[x=" + new Float(this.x).toString() + ",y=" + new Float(this.y).toString() + ",w=" + new Float(this.width).toString() + ",h=" + new Float(this.height).toString() + "]" ;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Rectangle2D, "Double", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.geom.Rectangle2D');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['x','y','width','height']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$D$D$D$D',  function (x, y, w, h) {
Clazz_super_(C$, this);
this.setRect$D$D$D$D(x, y, w, h);
}, 1);

Clazz_newMeth(C$, 'getX$',  function () {
return this.x;
});

Clazz_newMeth(C$, 'getY$',  function () {
return this.y;
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return (this.width <= 0.0 ) || (this.height <= 0.0 ) ;
});

Clazz_newMeth(C$, 'setRect$D$D$D$D',  function (x, y, w, h) {
this.x=x;
this.y=y;
this.width=w;
this.height=h;
});

Clazz_newMeth(C$, 'setRect$java_awt_geom_Rectangle2D',  function (r) {
this.x=r.getX$();
this.y=r.getY$();
this.width=r.getWidth$();
this.height=r.getHeight$();
});

Clazz_newMeth(C$, 'outcode$D$D',  function (x, y) {
var out=0;
if (this.width <= 0 ) {
out|=5;
} else if (x < this.x ) {
out|=1;
} else if (x > this.x + this.width ) {
out|=4;
}if (this.height <= 0 ) {
out|=10;
} else if (y < this.y ) {
out|=2;
} else if (y > this.y + this.height ) {
out|=8;
}return out;
});

Clazz_newMeth(C$, 'getBounds2D$',  function () {
return Clazz_new_(C$.c$$D$D$D$D,[this.x, this.y, this.width, this.height]);
});

Clazz_newMeth(C$, 'createIntersection$java_awt_geom_Rectangle2D',  function (r) {
var dest=Clazz_new_(C$);
$I$(2).intersect$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'createUnion$java_awt_geom_Rectangle2D',  function (r) {
var dest=Clazz_new_(C$);
$I$(2).union$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D$java_awt_geom_Rectangle2D(this, r, dest);
return dest;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[x=" + new Double(this.x).toString() + ",y=" + new Double(this.y).toString() + ",w=" + new Double(this.width).toString() + ",h=" + new Double(this.height).toString() + "]" ;
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.geom"),I$=[[0,['java.awt.geom.Rectangle2D','.Double'],'java.awt.Rectangle','java.awt.geom.FlatteningPathIterator','InternalError']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "RectangularShape", null, null, ['java.awt.Shape', 'Cloneable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getMinX$',  function () {
return this.getX$();
});

Clazz_newMeth(C$, 'getMinY$',  function () {
return this.getY$();
});

Clazz_newMeth(C$, 'getMaxX$',  function () {
return this.getX$() + this.getWidth$();
});

Clazz_newMeth(C$, 'getMaxY$',  function () {
return this.getY$() + this.getHeight$();
});

Clazz_newMeth(C$, 'getCenterX$',  function () {
return this.getX$() + this.getWidth$() / 2.0;
});

Clazz_newMeth(C$, 'getCenterY$',  function () {
return this.getY$() + this.getHeight$() / 2.0;
});

Clazz_newMeth(C$, 'getFrame$',  function () {
return Clazz_new_([this.getX$(), this.getY$(), this.getWidth$(), this.getHeight$()],$I$(1,1).c$$D$D$D$D);
});

Clazz_newMeth(C$, 'setFrame$java_awt_geom_Point2D$java_awt_geom_Dimension2D',  function (loc, size) {
this.setFrame$D$D$D$D(loc.getX$(), loc.getY$(), size.getWidth$(), size.getHeight$());
});

Clazz_newMeth(C$, 'setFrame$java_awt_geom_Rectangle2D',  function (r) {
this.setFrame$D$D$D$D(r.getX$(), r.getY$(), r.getWidth$(), r.getHeight$());
});

Clazz_newMeth(C$, 'setFrameFromDiagonal$D$D$D$D',  function (x1, y1, x2, y2) {
if (x2 < x1 ) {
var t=x1;
x1=x2;
x2=t;
}if (y2 < y1 ) {
var t=y1;
y1=y2;
y2=t;
}this.setFrame$D$D$D$D(x1, y1, x2 - x1, y2 - y1);
});

Clazz_newMeth(C$, 'setFrameFromDiagonal$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (p1, p2) {
this.setFrameFromDiagonal$D$D$D$D(p1.getX$(), p1.getY$(), p2.getX$(), p2.getY$());
});

Clazz_newMeth(C$, 'setFrameFromCenter$D$D$D$D',  function (centerX, centerY, cornerX, cornerY) {
var halfW=Math.abs(cornerX - centerX);
var halfH=Math.abs(cornerY - centerY);
this.setFrame$D$D$D$D(centerX - halfW, centerY - halfH, halfW * 2.0, halfH * 2.0);
});

Clazz_newMeth(C$, 'setFrameFromCenter$java_awt_geom_Point2D$java_awt_geom_Point2D',  function (center, corner) {
this.setFrameFromCenter$D$D$D$D(center.getX$(), center.getY$(), corner.getX$(), corner.getY$());
});

Clazz_newMeth(C$, 'contains$java_awt_geom_Point2D',  function (p) {
return this.contains$D$D(p.getX$(), p.getY$());
});

Clazz_newMeth(C$, 'intersects$java_awt_geom_Rectangle2D',  function (r) {
return this.intersects$D$D$D$D(r.getX$(), r.getY$(), r.getWidth$(), r.getHeight$());
});

Clazz_newMeth(C$, 'contains$java_awt_geom_Rectangle2D',  function (r) {
return this.contains$D$D$D$D(r.getX$(), r.getY$(), r.getWidth$(), r.getHeight$());
});

Clazz_newMeth(C$, 'getBounds$',  function () {
var width=this.getWidth$();
var height=this.getHeight$();
if (width < 0  || height < 0  ) {
return Clazz_new_($I$(2,1));
}var x=this.getX$();
var y=this.getY$();
var x1=Math.floor(x);
var y1=Math.floor(y);
var x2=Math.ceil(x + width);
var y2=Math.ceil(y + height);
return Clazz_new_([(x1|0), (y1|0), ((x2 - x1)|0), ((y2 - y1)|0)],$I$(2,1).c$$I$I$I$I);
});

Clazz_newMeth(C$, 'getPathIterator$java_awt_geom_AffineTransform$D',  function (at, flatness) {
return Clazz_new_([this.getPathIterator$java_awt_geom_AffineTransform(at), flatness],$I$(3,1).c$$java_awt_geom_PathIterator$D);
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(4,1));
} else {
throw e;
}
}
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),p$1={},I$=[[0,['sun.java2d.StateTrackable','.State'],'java.awt.image.DirectColorModel','java.awt.image.ColorModel','java.awt.color.ColorSpace','java.awt.image.ComponentColorModel','java.awt.image.Raster','java.awt.image.IndexColorModel','java.awt.image.PixelInterleavedSampleModel','java.awt.image.SinglePixelPackedSampleModel','java.awt.image.MultiPixelPackedSampleModel','java.util.Hashtable','sun.awt.image.OffScreenImageSource','java.awt.Image','swingjs.api.js.HTML5Canvas','swingjs.JSGraphics2D','swingjs.api.js.DOMNode','java.awt.Point','java.awt.Rectangle',['sun.awt.image.PixelConverter','.UshortGray'],['sun.awt.image.PixelConverter','.ByteGray'],'java.awt.Color']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BufferedImage", null, 'java.awt.Image', ['java.awt.image.RenderedImage', 'java.awt.Transparency', 'java.awt.image.ImageObserver']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.秘state=0;
this.hasColor=true;
this.imageType=0;
this.gCount=0;
},1);

C$.$fields$=[['Z',['秘haveNewPixels','hasColor','isAlphaPremultiplied'],'I',['秘state','width','height','秘wxh','imageType','gCount'],'O',['colorModel','java.awt.image.ColorModel','raster','java.awt.image.WritableRaster','osis','sun.awt.image.OffScreenImageSource','properties','java.util.Hashtable','秘g','swingjs.JSGraphics2D','秘imgNode','swingjs.api.js.DOMNode','秘pix','java.lang.Object','秘canvas','swingjs.api.js.HTML5Canvas','秘component','java.awt.Component']]
,['I',['imageCount'],'O',['states','String[]']]]

Clazz_newMeth(C$, 'getStateString$',  function () {
var data=this.raster.data ||null;
var s="";
for (var i=0; i < C$.states.length; i++) {
if ((this.秘state & (1 << i)) != 0) s+=C$.states[i] + ";";
}
return "rasterDirty=" + this.秘isRasterDirty$Z(false) + " " + (s === ""  ? "UNINITIALIZED" : s) + " unDisposedGraphicCount=" + this.gCount + " data[0]=" + (data == null  ? null : Integer.toHexString$I(data[0])) ;
});

Clazz_newMeth(C$, '秘havePixels$',  function () {
return ((this.秘state & 48) != 0);
});

Clazz_newMeth(C$, '秘havePixels8$',  function () {
return ((this.秘state & 16) != 0);
});

Clazz_newMeth(C$, '秘havePixels32$',  function () {
return ((this.秘state & 32) != 0);
});

Clazz_newMeth(C$, '秘haveImage$',  function () {
return ((this.秘state & 1) != 0);
});

Clazz_newMeth(C$, '秘haveVideo$',  function () {
return ((this.秘state & 8) != 0);
});

Clazz_newMeth(C$, '秘haveRaster$',  function () {
return ((this.秘state & 2) != 0);
});

Clazz_newMeth(C$, '秘haveCanvas$',  function () {
return ((this.秘state & 4) != 0);
});

Clazz_newMeth(C$, '秘isRasterDirty$Z',  function (doReset) {
if (this.raster.dataBuffer.theTrackable.秘isDirty$Z(doReset)) {
return true;
}var b=this.raster.dataBuffer.theTrackable.getState$() === $I$(1).UNTRACKABLE ;
return b;
});

Clazz_newMeth(C$, '秘dataStolenAndHaveRaster$',  function () {
var b=this.秘haveNewPixels || this.秘isRasterDirty$Z(false) && this.秘haveRaster$()  ;
this.秘haveNewPixels=false;
return b;
});

Clazz_newMeth(C$, '秘dataStolenButNoRaster$',  function () {
return this.秘isRasterDirty$Z(false) && !this.秘haveRaster$() ;
});

Clazz_newMeth(C$, 'c$$I$I$I',  function (width, height, imageType) {
Clazz_super_(C$, this);
this.秘init$I$I$I(width, height, imageType);
}, 1);

Clazz_newMeth(C$, '秘init$I$I$I',  function (width, height, imageType) {
this.width=width;
this.height=height;
this.秘wxh=width * height;
if (imageType == -2147483648) {
imageType=-6;
this.秘state=8;
}switch (imageType) {
case 1:
this.colorModel=Clazz_new_($I$(2,1).c$$I$I$I$I$I,[24, 16711680, 65280, 255, 0]);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
this.raster.秘setImage$java_awt_image_BufferedImage(this);
this.秘pix=(this.raster.getDataBuffer$()).data;
this.秘state=38;
break;
case 2:
this.colorModel=$I$(3).getRGBdefault$();
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
this.raster.秘setImage$java_awt_image_BufferedImage(this);
this.秘pix=(this.raster.getDataBuffer$()).data;
break;
case 3:
this.colorModel=Clazz_new_([$I$(4).getInstance$I(1000), 32, 16711680, 65280, 255, -16777216, true, 3],$I$(2,1).c$$java_awt_color_ColorSpace$I$I$I$I$I$Z$I);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
break;
case 4:
this.colorModel=Clazz_new_($I$(2,1).c$$I$I$I$I,[24, 255, 65280, 16711680]);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
break;
case 5:
{
var cs=$I$(4).getInstance$I(1000);
var nBits=Clazz_array(Integer.TYPE, -1, [8, 8, 8]);
var bOffs=Clazz_array(Integer.TYPE, -1, [2, 1, 0]);
this.colorModel=Clazz_new_($I$(5,1).c$$java_awt_color_ColorSpace$IA$Z$Z$I$I,[cs, nBits, false, false, 1, 0]);
this.raster=$I$(6).createInterleavedRaster$I$I$I$I$I$IA$java_awt_Point(0, width, height, width * 3, 3, bOffs, null);
}break;
case 6:
{
var cs=$I$(4).getInstance$I(1000);
var nBits=Clazz_array(Integer.TYPE, -1, [8, 8, 8, 8]);
var bOffs=Clazz_array(Integer.TYPE, -1, [3, 2, 1, 0]);
this.colorModel=Clazz_new_($I$(5,1).c$$java_awt_color_ColorSpace$IA$Z$Z$I$I,[cs, nBits, true, false, 3, 0]);
this.raster=$I$(6).createInterleavedRaster$I$I$I$I$I$IA$java_awt_Point(0, width, height, width * 4, 4, bOffs, null);
}break;
case -6:
{
var cs=$I$(4).getInstance$I(1000);
var nBits=Clazz_array(Integer.TYPE, -1, [8, 8, 8, 8]);
var bOffs=Clazz_array(Integer.TYPE, -1, [0, 1, 2, 3]);
this.colorModel=Clazz_new_($I$(5,1).c$$java_awt_color_ColorSpace$IA$Z$Z$I$I,[cs, nBits, true, false, 3, 0]);
this.raster=$I$(6).createInterleavedRaster$I$I$I$I$I$IA$java_awt_Point(0, width, height, width * 4, 4, bOffs, null);
this.秘pix=(this.raster.getDataBuffer$()).data;
if (this.秘haveVideo$()) {
this.秘state=46;
} else {
this.秘state=22;
}this.raster.秘setImage$java_awt_image_BufferedImage(this);
}break;
case 7:
{
var cs=$I$(4).getInstance$I(1000);
var nBits=Clazz_array(Integer.TYPE, -1, [8, 8, 8, 8]);
var bOffs=Clazz_array(Integer.TYPE, -1, [3, 2, 1, 0]);
this.colorModel=Clazz_new_($I$(5,1).c$$java_awt_color_ColorSpace$IA$Z$Z$I$I,[cs, nBits, true, true, 3, 0]);
this.raster=$I$(6).createInterleavedRaster$I$I$I$I$I$IA$java_awt_Point(0, width, height, width * 4, 4, bOffs, null);
}break;
case 10:
{
var cs=$I$(4).getInstance$I(1003);
var nBits=Clazz_array(Integer.TYPE, -1, [8]);
this.colorModel=Clazz_new_($I$(5,1).c$$java_awt_color_ColorSpace$IA$Z$Z$I$I,[cs, nBits, false, true, 1, 0]);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
this.hasColor=false;
}break;
case 11:
{
var cs=$I$(4).getInstance$I(1003);
var nBits=Clazz_array(Integer.TYPE, -1, [16]);
this.colorModel=Clazz_new_($I$(5,1).c$$java_awt_color_ColorSpace$IA$Z$Z$I$I,[cs, nBits, false, true, 1, 1]);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
this.hasColor=false;
}break;
case 12:
var arr=Clazz_array(Byte.TYPE, -1, [0, -1]);
this.colorModel=Clazz_new_($I$(7,1).c$$I$I$BA$BA$BA,[1, 2, arr, arr, arr]);
this.raster=$I$(6).createPackedRaster$I$I$I$I$I$java_awt_Point(0, width, height, 1, 1, null);
break;
case 13:
var cmap=Clazz_array(Integer.TYPE, [256]);
var i=0;
for (var r=0; r < 256; r+=51) {
for (var g=0; g < 256; g+=51) {
for (var b=0; b < 256; b+=51) {
cmap[i++]=(r << 16) | (g << 8) | b ;
}
}
}
var grayIncr=(256/(256 - i)|0);
var gray=grayIncr * 3;
for (; i < 256; i++) {
cmap[i]=(gray << 16) | (gray << 8) | gray ;
gray+=grayIncr;
}
this.colorModel=Clazz_new_($I$(7,1).c$$I$I$IA$I$Z$I$I,[8, 256, cmap, 0, false, -1, 0]);
this.raster=$I$(6).createInterleavedRaster$I$I$I$I$java_awt_Point(0, width, height, 1, null);
break;
case 8:
this.colorModel=Clazz_new_($I$(2,1).c$$I$I$I$I,[16, 63488, 2016, 31]);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
break;
case 9:
this.colorModel=Clazz_new_($I$(2,1).c$$I$I$I$I,[15, 31744, 992, 31]);
this.raster=this.colorModel.createCompatibleWritableRaster$I$I(width, height);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unknown image type " + imageType]);
}
this.raster.秘setStable$Z(true);
this.imageType=imageType;
});

Clazz_newMeth(C$, 'c$$I$I$I$java_awt_image_IndexColorModel',  function (width, height, imageType, cm) {
Clazz_super_(C$, this);
if (cm.hasAlpha$() && cm.isAlphaPremultiplied$() ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["This image types do not have premultiplied alpha."]);
}this.width=width;
this.height=height;
this.秘wxh=width * height;
switch (imageType) {
case 12:
var bits;
var mapSize=cm.getMapSize$();
if (mapSize <= 2) {
bits=1;
} else if (mapSize <= 4) {
bits=2;
} else if (mapSize <= 16) {
bits=4;
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Color map for TYPE_BYTE_BINARY must have no more than 16 entries"]);
}this.raster=$I$(6).createPackedRaster$I$I$I$I$I$java_awt_Point(0, width, height, 1, bits, null);
break;
case 13:
this.raster=$I$(6).createInterleavedRaster$I$I$I$I$java_awt_Point(0, width, height, 1, null);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Invalid image type (" + imageType + ").  Image type must" + " be either TYPE_BYTE_BINARY or " + " TYPE_BYTE_INDEXED" ]);
}
if (!cm.isCompatibleRaster$java_awt_image_Raster(this.raster)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Incompatible image type and IndexColorModel"]);
}this.colorModel=cm;
this.imageType=imageType;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable',  function (cm, raster, isRasterPremultiplied, properties) {
Clazz_super_(C$, this);
if (!cm.isCompatibleRaster$java_awt_image_Raster(raster)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Raster " + raster + " is incompatible with ColorModel " + cm ]);
}if ((raster.minX != 0) || (raster.minY != 0) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Raster " + raster + " has minX or minY not equal to zero: " + raster.minX + " " + raster.minY ]);
}this.colorModel=cm;
this.raster=raster;
this.width=raster.getWidth$();
this.height=raster.getHeight$();
this.秘wxh=this.width * this.height;
raster.秘setImage$java_awt_image_BufferedImage(this);
this.秘state=2;
this.properties=properties;
var numBands=raster.getNumBands$();
var isAlphaPre=cm.isAlphaPremultiplied$();
var cs;
var sm=raster.getSampleModel$();
cs=cm.getColorSpace$();
var csType=cs.getType$();
if (csType != 5) {
if (csType == 6 && Clazz_getClass($I$(5)).equals$O(cm.getClass$()) ) {
if (Clazz_instanceOf(sm, "java.awt.image.ComponentSampleModel") && (sm).getPixelStride$() != numBands ) {
this.imageType=0;
} else if (Clazz_instanceOf(raster, "sun.awt.image.ByteComponentRaster") && Clazz_getClass($I$(8)).equals$O(sm.getClass$()) && raster.getNumBands$() == 1   && cm.getComponentSize$I(0) == 8  && (raster).getPixelStride$() == 1 ) {
this.imageType=10;
} else if (Clazz_instanceOf(raster, "sun.awt.image.ShortComponentRaster") && Clazz_getClass($I$(8)).equals$O(sm.getClass$()) && raster.getNumBands$() == 1   && cm.getComponentSize$I(0) == 16  && (raster).getPixelStride$() == 1 ) {
this.imageType=11;
}} else {
this.imageType=0;
}return;
}if ((Clazz_instanceOf(raster, "sun.awt.image.IntegerComponentRaster")) && (numBands == 3 || numBands == 4 ) ) {
var iraster=raster;
var pixSize=cm.getPixelSize$();
if (iraster.getPixelStride$() == 1 && Clazz_getClass($I$(2)).equals$O(cm.getClass$())  && Clazz_getClass($I$(9)).equals$O(sm.getClass$())  && (pixSize == 32 || pixSize == 24 ) ) {
var dcm=cm;
var rmask=dcm.getRedMask$();
var gmask=dcm.getGreenMask$();
var bmask=dcm.getBlueMask$();
if (rmask == 16711680 && gmask == 65280  && bmask == 255 ) {
if (dcm.getAlphaMask$() == -16777216) {
this.imageType=(isAlphaPre ? 3 : 2);
} else {
if (!dcm.hasAlpha$()) {
this.imageType=1;
}}} else if (rmask == 255 && gmask == 65280  && bmask == 16711680 ) {
if (!dcm.hasAlpha$()) {
this.imageType=4;
}}}} else if ((Clazz_getClass($I$(7)).equals$O(cm.getClass$())) && (numBands == 1) && (!cm.hasAlpha$() || !isAlphaPre )  ) {
var icm=cm;
var pixSize=icm.getPixelSize$();
if (Clazz_instanceOf(raster, "sun.awt.image.BytePackedRaster") && Clazz_getClass($I$(10)).equals$O(sm.getClass$()) ) {
this.imageType=12;
} else if (Clazz_instanceOf(raster, "sun.awt.image.ByteComponentRaster") && Clazz_getClass($I$(8)).equals$O(sm.getClass$()) ) {
var braster=raster;
if (braster.getPixelStride$() == 1 && pixSize <= 8 ) {
this.imageType=13;
}}} else if ((Clazz_instanceOf(raster, "sun.awt.image.ShortComponentRaster")) && (Clazz_getClass($I$(2)).equals$O(cm.getClass$())) && (Clazz_getClass($I$(9)).equals$O(sm.getClass$())) && (numBands == 3) && !cm.hasAlpha$()  ) {
var dcm=cm;
if (dcm.getRedMask$() == 63488) {
if (dcm.getGreenMask$() == 2016 && dcm.getBlueMask$() == 31 ) {
this.imageType=8;
}} else if (dcm.getRedMask$() == 31744) {
if (dcm.getGreenMask$() == 992 && dcm.getBlueMask$() == 31 ) {
this.imageType=9;
}}} else if ((Clazz_instanceOf(raster, "sun.awt.image.ByteComponentRaster")) && (Clazz_instanceOf(cm, "java.awt.image.ComponentColorModel")) && (Clazz_instanceOf(raster.getSampleModel$(), "java.awt.image.PixelInterleavedSampleModel")) && (numBands == 3 || numBands == 4 )  ) {
var ccm=cm;
var csm=raster.getSampleModel$();
var braster=raster;
var offs=csm.getBandOffsets$();
if (ccm.getNumComponents$() != numBands) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Number of components in ColorModel (" + ccm.getNumComponents$() + ") does not match # in " + " Raster (" + numBands + ")" ]);
}var nBits=ccm.getComponentSize$();
var is8bit=true;
for (var i=0; i < numBands; i++) {
if (nBits[i] != 8) {
is8bit=false;
break;
}}
if (is8bit && braster.getPixelStride$() == numBands  && offs[0] == numBands - 1  && offs[1] == numBands - 2  && offs[2] == numBands - 3  && Clazz_getClass($I$(5)).equals$O(ccm.getClass$())  && Clazz_getClass($I$(8)).equals$O(csm.getClass$()) ) {
if (numBands == 3 && !ccm.hasAlpha$() ) {
this.imageType=5;
} else if (offs[3] == 0 && ccm.hasAlpha$() ) {
this.imageType=(isAlphaPre ? 7 : 6);
}}}}, 1);

Clazz_newMeth(C$, 'getType$',  function () {
return this.imageType;
});

Clazz_newMeth(C$, 'getColorModel$',  function () {
return this.colorModel;
});

Clazz_newMeth(C$, 'getRaster$',  function () {
return this.raster;
});

Clazz_newMeth(C$, '秘ensureRasterUpToDate$',  function () {
if (this.秘isRasterDirty$Z(false) || !this.秘haveRaster$() && this.秘state != 0  ) {
p$1.秘updateStateFromHTML5Canvas$I$Z.apply(this, [0, false]);
p$1.秘unsetGraphics.apply(this, []);
}this.秘state|=2;
});

Clazz_newMeth(C$, '秘unsetGraphics',  function () {
this.秘state&=~(5);
this.秘imgNode=null;
}, p$1);

Clazz_newMeth(C$, '秘ensureCanGetRGBPixels',  function () {
switch (this.imageType) {
case 1:
case 3:
case 2:
if (this.秘havePixels32$()) {
} else if (this.秘haveCanvas$() || this.秘haveImage$() ) {
p$1.秘updateStateFromHTML5Canvas$I$Z.apply(this, [32, false]);
} else if (this.秘haveRaster$() || this.秘state == 0 ) {
p$1.秘getPixelsFromRaster$I.apply(this, [32]);
}return true;
default:
this.秘ensureRasterUpToDate$();
return false;
}
}, p$1);

Clazz_newMeth(C$, 'getAlphaRaster$',  function () {
return this.colorModel.getAlphaRaster$java_awt_image_WritableRaster(this.raster);
});

Clazz_newMeth(C$, 'getRGB$I$I',  function (x, y) {
var isStolen=this.秘isRasterDirty$Z(false);
if (isStolen && !this.秘haveRaster$() ) this.秘ensureRasterUpToDate$();
if (!isStolen && (this.秘haveCanvas$() || this.秘state == 0 ) && p$1.秘ensureCanGetRGBPixels.apply(this, [])  ) {
return (this.秘pix)[y * this.width + x];
}return this.colorModel.getRGB$O(this.raster.getDataElements$I$I$O(x, y, null));
});

Clazz_newMeth(C$, 'getRGB$I$I$I$I$IA$I$I',  function (startX, startY, w, h, rgbArray, offset, scansize) {
var isStolen=this.秘isRasterDirty$Z(false);
if (isStolen && !this.秘haveRaster$() ) this.秘ensureRasterUpToDate$();
if (!isStolen && (this.秘haveCanvas$() || this.秘state == 1  || this.秘state == 0 ) && p$1.秘ensureCanGetRGBPixels.apply(this, [])  ) {
var pixels=this.秘pix;
if (pixels != null ) {
if (pixels.length == this.秘wxh) {
for (var y=startY, yoff=offset; y < startY + h; y++, yoff+=scansize) for (var off=yoff, x=startX; x < startX + w; x++) rgbArray[off++]=pixels[y * this.width + x];


} else {
for (var y=startY, yoff=offset; y < startY + h; y++, yoff+=scansize) {
for (var off=yoff, x=startX, pt=(y * this.width) << 2; x < startX + w; x++) {
rgbArray[off++]=(pixels[pt++] << 16) | (pixels[pt++] << 8) | pixels[pt++] | (pixels[pt++] << 24) ;
}
}
}}} else {
var yoff=offset;
var off;
var data;
var nbands=this.raster.getNumBands$();
var dataType=this.raster.getDataBuffer$().getDataType$();
switch (dataType) {
case 0:
data=Clazz_array(Byte.TYPE, [nbands]);
break;
case 1:
data=Clazz_array(Short.TYPE, [nbands]);
break;
case 3:
data=Clazz_array(Integer.TYPE, [nbands]);
break;
case 4:
data=Clazz_array(Float.TYPE, [nbands]);
break;
case 5:
data=Clazz_array(Double.TYPE, [nbands]);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unknown data buffer type: " + dataType]);
}
if (rgbArray == null ) {
rgbArray=Clazz_array(Integer.TYPE, [offset + h * scansize]);
}for (var y=startY; y < startY + h; y++, yoff+=scansize) {
off=yoff;
for (var x=startX; x < startX + w; x++) {
rgbArray[off++]=this.colorModel.getRGB$O(this.raster.getDataElements$I$I$O(x, y, data));
}
}
}this.秘state|=2;
this.秘state&=~(5);
return rgbArray;
});

Clazz_newMeth(C$, 'setRGB$I$I$I',  function (x, y, rgb) {
var isStolen=this.秘isRasterDirty$Z(false);
if (isStolen && !this.秘haveRaster$() ) this.秘ensureRasterUpToDate$();
if (!isStolen && (this.秘haveCanvas$() || this.秘state == 1  || this.秘state == 0 ) && p$1.秘ensureCanGetRGBPixels.apply(this, [])  ) {
var pixels=this.秘pix;
pixels[y * this.width + x]=rgb;
} else {
this.raster.setDataElements$I$I$O(x, y, this.colorModel.getDataElements$I$O(rgb, null));
}});

Clazz_newMeth(C$, 'setRGB$I$I$I$I$IA$I$I',  function (startX, startY, w, h, rgbArray, offset, scansize) {
var isStolen=this.秘isRasterDirty$Z(false);
if (isStolen && !this.秘haveRaster$() ) this.秘ensureRasterUpToDate$();
if (!isStolen && (this.秘haveCanvas$() || this.秘state == 1  || this.秘state == 0 ) && p$1.秘ensureCanGetRGBPixels.apply(this, [])  ) {
var pixels=this.秘pix;
var width=this.width;
for (var y=startY, yoff=offset; y < startY + h; y++, yoff+=scansize) for (var x=startX, off=yoff; x < startX + w; x++) pixels[y * width + x]=rgbArray[off++];


} else {
var yoff=offset;
var off;
var pixel=null;
for (var y=startY; y < startY + h; y++, yoff+=scansize) {
off=yoff;
for (var x=startX; x < startX + w; x++) {
pixel=this.colorModel.getDataElements$I$O(rgbArray[off++], pixel);
this.raster.setDataElements$I$I$O(x, y, pixel);
}
}
}p$1.秘unsetGraphics.apply(this, []);
this.秘state|=2;
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.raster.getWidth$();
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.raster.getHeight$();
});

Clazz_newMeth(C$, 'getWidth$java_awt_image_ImageObserver',  function (observer) {
return this.raster.getWidth$();
});

Clazz_newMeth(C$, 'getHeight$java_awt_image_ImageObserver',  function (observer) {
return this.raster.getHeight$();
});

Clazz_newMeth(C$, 'getSource$',  function () {
if (this.osis == null ) {
if (this.properties == null ) {
this.properties=Clazz_new_($I$(11,1));
}this.osis=Clazz_new_($I$(12,1).c$$java_awt_image_BufferedImage$java_util_Hashtable,[this, this.properties]);
}return this.osis;
});

Clazz_newMeth(C$, 'getProperty$S$java_awt_image_ImageObserver',  function (name, observer) {
return this.getProperty$S(name);
});

Clazz_newMeth(C$, 'getProperty$S',  function (name) {
if (name == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["null property name is not allowed"]);
}if (this.properties == null ) {
return $I$(13).UndefinedProperty;
}var o=this.properties.get$O(name);
if (o == null ) {
o=$I$(13).UndefinedProperty;
}return o;
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
return this.createGraphics$();
});

Clazz_newMeth(C$, 'createGraphics$',  function () {
if (this.秘haveRaster$()) this.flush$();
return this.秘getImageGraphic$().create$();
});

Clazz_newMeth(C$, '秘getImageGraphic$',  function () {
if (this.秘canvas == null ) {
this.秘canvas=$I$(14,"createCanvas",[this.getWidth$(), this.getHeight$(), "img" + ++C$.imageCount]);
}if (this.秘g == null ) {
this.秘g=Clazz_new_($I$(15,1).c$$O,[this.秘canvas]);
}if (this.秘dataStolenAndHaveRaster$()) {
if (this.秘pix != null ) this.秘g.drawImageFromPixelsOrRaster$java_awt_Image$I$I$java_awt_image_ImageObserver(this, 0, 0, this);
}var pix=this.秘pix;

pix && (pix.img = this);
++this.gCount;
this.秘g.image=this;
this.秘state=4;
var g2d=this.秘g;
if (this.秘component != null ) {
g2d.setFont$java_awt_Font(this.秘component.getFont$());
g2d.setBackground$java_awt_Color(this.秘component.getBackground$());
g2d.setColor$java_awt_Color(this.秘component.getForeground$());
}return g2d;
});

Clazz_newMeth(C$, '秘graphicsDisposed$',  function () {
var doSync=(this.秘haveCanvas$() && this.秘isRasterDirty$Z(false) );
this.秘state=4;
if (doSync) {
p$1.秘syncRaster.apply(this, []);
}});

Clazz_newMeth(C$, 'flush$',  function () {
var setRasterState=p$1.秘syncRaster.apply(this, []);
if (this.秘haveRaster$() && this.秘pix == null  ) {
p$1.秘getPixelsFromRaster$I.apply(this, [0]);
}this.秘getImageGraphic$();
if (setRasterState) this.秘state|=2;
while (this.gCount-- > 0)this.秘g.dispose$();

});

Clazz_newMeth(C$, '秘syncRaster',  function () {
var isStolen=this.秘isRasterDirty$Z(false);
var haveRaster=this.秘haveRaster$();
if (isStolen && !haveRaster ) this.秘ensureRasterUpToDate$();
return (isStolen || haveRaster );
}, p$1);

Clazz_newMeth(C$, '_setImageNode$O$Z',  function (node, async) {
this.秘setImageNode$O$Z(node, async);
});

Clazz_newMeth(C$, '秘setImageNode$O$Z',  function (node, async) {
this.秘imgNode=node;
if (this.秘haveVideo$()) {
this.秘state|=5;
} else {
if ($I$(16).getAttr(node, "tagName") === "VIDEO" ) {
this.秘pix=null;
if (this.秘canvas == null ) {
this.秘getImageGraphic$().dispose$();
}this.秘canvas.getContext("2d").drawImage(this.秘imgNode, 0, 0, this.width, this.height);
this.秘state=13;
} else {
this.秘state=5;
}}});

Clazz_newMeth(C$, 'createImageNode',  function () {
var imgNode=this.秘imgNode;
if (imgNode == null ) {
var w=this.getWidth$();
var h=this.getHeight$();
var canvas=this.秘canvas;
if (canvas == null ) {
this.getGraphics$();
canvas=this.秘canvas;
}imgNode=canvas;
$I$(16).setSize(imgNode, w, h);
}return imgNode;
}, p$1);

Clazz_newMeth(C$, 'getSubimage$I$I$I$I',  function (x, y, w, h) {
return Clazz_new_(C$.c$$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable,[this.colorModel, this.raster.createWritableChild$I$I$I$I$I$I$IA(x, y, w, h, 0, 0, null), this.colorModel.isAlphaPremultiplied$(), this.properties]);
});

Clazz_newMeth(C$, 'isAlphaPremultiplied$',  function () {
return this.colorModel.isAlphaPremultiplied$();
});

Clazz_newMeth(C$, 'coerceData$Z',  function (isAlphaPremultiplied) {
if (this.colorModel.hasAlpha$() && this.colorModel.isAlphaPremultiplied$() != isAlphaPremultiplied  ) {
this.colorModel=this.colorModel.coerceData$java_awt_image_WritableRaster$Z(this.raster, isAlphaPremultiplied);
}});

Clazz_newMeth(C$, 'getSources$',  function () {
return null;
});

Clazz_newMeth(C$, 'getPropertyNames$',  function () {
return null;
});

Clazz_newMeth(C$, 'getMinX$',  function () {
return this.raster.getMinX$();
});

Clazz_newMeth(C$, 'getMinY$',  function () {
return this.raster.getMinY$();
});

Clazz_newMeth(C$, 'getSampleModel$',  function () {
return this.raster.getSampleModel$();
});

Clazz_newMeth(C$, 'getNumXTiles$',  function () {
return 1;
});

Clazz_newMeth(C$, 'getNumYTiles$',  function () {
return 1;
});

Clazz_newMeth(C$, 'getMinTileX$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getMinTileY$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getTileWidth$',  function () {
return this.raster.getWidth$();
});

Clazz_newMeth(C$, 'getTileHeight$',  function () {
return this.raster.getHeight$();
});

Clazz_newMeth(C$, 'getTileGridXOffset$',  function () {
return this.raster.getSampleModelTranslateX$();
});

Clazz_newMeth(C$, 'getTileGridYOffset$',  function () {
return this.raster.getSampleModelTranslateY$();
});

Clazz_newMeth(C$, 'getTile$I$I',  function (tileX, tileY) {
if (tileX == 0 && tileY == 0 ) {
return this.raster;
}throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["BufferedImages only have one tile with index 0,0"]);
});

Clazz_newMeth(C$, 'getData$',  function () {
this.raster.dataBuffer.秘setDoCheckImage$Z(false);
var width=this.raster.getWidth$();
var height=this.raster.getHeight$();
var startX=this.raster.getMinX$();
var startY=this.raster.getMinY$();
var wr=$I$(6,"createWritableRaster$java_awt_image_SampleModel$java_awt_Point",[this.raster.getSampleModel$(), Clazz_new_([this.raster.getSampleModelTranslateX$(), this.raster.getSampleModelTranslateY$()],$I$(17,1).c$$I$I)]);
var tdata=null;
for (var i=startY; i < startY + height; i++) {
tdata=this.raster.getDataElements$I$I$I$I$O(startX, i, width, 1, tdata);
wr.setDataElements$I$I$I$I$O(startX, i, width, 1, tdata);
}
this.raster.dataBuffer.秘setDoCheckImage$Z(true);
return wr;
});

Clazz_newMeth(C$, 'getData$java_awt_Rectangle',  function (rect) {
this.raster.dataBuffer.秘setDoCheckImage$Z(false);
var sm=this.raster.getSampleModel$();
var nsm=sm.createCompatibleSampleModel$I$I(rect.width, rect.height);
var wr=$I$(6,"createWritableRaster$java_awt_image_SampleModel$java_awt_Point",[nsm, rect.getLocation$()]);
var width=rect.width;
var height=rect.height;
var startX=rect.x;
var startY=rect.y;
var tdata=null;
for (var i=startY; i < startY + height; i++) {
tdata=this.raster.getDataElements$I$I$I$I$O(startX, i, width, 1, tdata);
wr.setDataElements$I$I$I$I$O(startX, i, width, 1, tdata);
}
this.raster.dataBuffer.秘setDoCheckImage$Z(true);
return wr;
});

Clazz_newMeth(C$, 'copyData$java_awt_image_WritableRaster',  function (outRaster) {
if (outRaster == null ) {
return this.getData$();
}this.raster.dataBuffer.秘setDoCheckImage$Z(false);
var width=outRaster.getWidth$();
var height=outRaster.getHeight$();
var startX=outRaster.getMinX$();
var startY=outRaster.getMinY$();
var tdata=null;
for (var i=startY; i < startY + height; i++) {
tdata=this.raster.getDataElements$I$I$I$I$O(startX, i, width, 1, tdata);
outRaster.setDataElements$I$I$I$I$O(startX, i, width, 1, tdata);
}
this.raster.dataBuffer.秘setDoCheckImage$Z(true);
return outRaster;
});

Clazz_newMeth(C$, 'setData$java_awt_image_Raster',  function (r) {
var width=r.getWidth$();
var height=r.getHeight$();
var startX=r.getMinX$();
var startY=r.getMinY$();
var tdata=null;
var rclip=Clazz_new_($I$(18,1).c$$I$I$I$I,[startX, startY, width, height]);
var bclip=Clazz_new_($I$(18,1).c$$I$I$I$I,[0, 0, this.raster.width, this.raster.height]);
var intersect=rclip.intersection$java_awt_Rectangle(bclip);
if (intersect.isEmpty$()) {
return;
}width=intersect.width;
height=intersect.height;
startX=intersect.x;
startY=intersect.y;
this.raster.dataBuffer.秘setDoCheckImage$Z(false);
for (var i=startY; i < startY + height; i++) {
tdata=r.getPixels$I$I$I$I$IA(startX, i, width, 1, tdata);
this.raster.setPixels$I$I$I$I$IA(startX, i, width, 1, tdata);
}
this.raster.dataBuffer.秘setDoCheckImage$Z(true);
this.秘state=2;
});

Clazz_newMeth(C$, 'addTileObserver$java_awt_image_TileObserver',  function (to) {
});

Clazz_newMeth(C$, 'removeTileObserver$java_awt_image_TileObserver',  function (to) {
});

Clazz_newMeth(C$, 'isTileWritable$I$I',  function (tileX, tileY) {
if (tileX == 0 && tileY == 0 ) {
return true;
}throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Only 1 tile in image"]);
});

Clazz_newMeth(C$, 'getWritableTileIndices$',  function () {
return Clazz_array($I$(17), -1, [Clazz_new_($I$(17,1).c$$I$I,[0, 0])]);
});

Clazz_newMeth(C$, 'hasTileWriters$',  function () {
return true;
});

Clazz_newMeth(C$, 'getWritableTile$I$I',  function (tileX, tileY) {
return this.raster;
});

Clazz_newMeth(C$, 'releaseWritableTile$I$I',  function (tileX, tileY) {
});

Clazz_newMeth(C$, 'getTransparency$',  function () {
return this.colorModel.getTransparency$();
});

Clazz_newMeth(C$, '秘setImageFromHTML5Canvas$swingjs_JSGraphics2D',  function (g) {
this.秘g=g;
this.width=this.raster.width;
this.height=this.raster.height;
p$1.秘updateStateFromHTML5Canvas$I$Z.apply(this, [0, true]);
});

Clazz_newMeth(C$, '秘updateStateFromHTML5Canvas$I$Z',  function (nBits, andSetImageNode) {
var g;
var node=null;
if ((g=this.秘g) == null  && (node=this.秘imgNode) == null  ) {
return;
}var canvas=(g == null  ? null : g.canvas ||null);
if (canvas == null ) {
canvas=$I$(16).createElement("canvas", null);

canvas.crossOrigin = "Anonymous";
}var w=this.width;
var h=this.height;
var data=$I$(14).getDataBufferBytes(canvas, node, w, h);
var buf=this.raster.getDataBuffer$();
this.秘pix=null;
var haveHTML5Pixels=false;
switch (this.imageType) {
case 1:
case 3:
case 2:
C$.toIntARGB$BA$IA$I(data, (this.秘pix=(buf).data), this.imageType == 1 ? 0 : -16777216);
if ((this.秘pix).length != this.秘wxh) this.秘pix=null;
break;
case -6:
(buf).data=data;
if (nBits != 32) {
this.秘pix=data;
haveHTML5Pixels=true;
}break;
case 4:
p$1.toInt3BGR$BA$IA.apply(this, [data, (buf).data]);
break;
case 5:
p$1.toByte3BGR$BA$BA.apply(this, [data, (buf).data]);
break;
case 6:
case 7:
p$1.toByteABGR$BA$BA.apply(this, [data, (buf).data]);
break;
case 10:
p$1.toByteGray$BA$BA.apply(this, [data, (buf).data]);
break;
case 11:
p$1.toUShortGray$BA$HA.apply(this, [data, (buf).data]);
break;
case 12:
case 13:
case 8:
case 9:
p$1.toRaster$BA.apply(this, [data]);
break;
}
if (this.秘pix == null ) {
C$.toIntARGB$BA$IA$I(data, (this.秘pix=Clazz_array(Integer.TYPE, [data.length >> 2])), -16777216);
}this.秘state=6;
this.秘state|=(haveHTML5Pixels ? 16 : 32);
this.秘imgNode=(andSetImageNode ? canvas : null);
if (andSetImageNode) {
this.秘state|=1;
}}, p$1);

Clazz_newMeth(C$, 'toIntARGB$BA$IA$I',  function (ctxData, iData, alpha) {
var n=ctxData.length >> 2;
for (var i=0, j=0; i < n; ) {
var argb=(ctxData[j++] << 16) | (ctxData[j++] << 8) | ctxData[j++] | alpha ;
iData[i++]=(ctxData[j++] == 0 ? 0 : argb);
}
}, 1);

Clazz_newMeth(C$, 'toByteABGR$BA$BA',  function (ctxData, buf) {
var n=ctxData.length;
for (var i=0, j=0; i < n; j+=4) {
buf[i++]=ctxData[j + 2];
buf[i++]=ctxData[j + 1];
buf[i++]=ctxData[j];
buf[i++]=ctxData[j + 3];
}
}, p$1);

Clazz_newMeth(C$, 'toByte3BGR$BA$BA',  function (ctxData, buf) {
var t=buf;
var n=(ctxData.length >> 2) * 3;
for (var i=0, j=0; i < n; j+=4) {
t[i++]=ctxData[j + 2];
t[i++]=ctxData[j + 1];
t[i++]=ctxData[j];
}
}, p$1);

Clazz_newMeth(C$, 'toRaster$BA',  function (ctxData) {
var cm=this.getColorModel$();
var iData=Clazz_array(Integer.TYPE, [ctxData.length >> 2]);
for (var i=0, pt=0, n=ctxData.length; i < n; i+=4) iData[pt++]=cm.getDataElement$IA$I(ctxData, i);

this.raster.setDataElements$I$I$I$I$O(0, 0, this.width, this.height, iData);
}, p$1);

Clazz_newMeth(C$, 'toUShortGray$BA$HA',  function (ctxData, buf) {
var pc=$I$(19).$$instance;
var n=ctxData.length >> 2;
for (var i=0, j=0; i < n; j++) {
var argb=(ctxData[j++] << 16) | (ctxData[j++] << 8) | ctxData[j++] | -16777216 ;
buf[i++]=(pc.rgbToPixel$I$java_awt_image_ColorModel(argb, null)|0);
}
}, p$1);

Clazz_newMeth(C$, 'toByteGray$BA$BA',  function (ctxData, buf) {
for (var i=0, p=0, n=buf.length; i < n; i++, p+=4) buf[i]=ctxData[p];

}, p$1);

Clazz_newMeth(C$, 'toInt3BGR$BA$IA',  function (ctxData, buf) {
var n=ctxData.length >> 2;
for (var i=0, j=0; i < n; ) {
var argb=(ctxData[j++]) | (ctxData[j++] << 8) | (ctxData[j++] << 16) | -16777216 ;
buf[i++]=(ctxData[j++] == 0 ? 0 : argb);
}
}, p$1);

Clazz_newMeth(C$, '秘isOpaque$',  function () {
switch (this.imageType) {
case 2:
case 3:
case 6:
case -6:
case 7:
return false;
case 1:
case 4:
case 5:
case 10:
case 11:
case 12:
case 13:
case 8:
case 9:
default:
return true;
}
});

Clazz_newMeth(C$, 'get秘pixFromRaster$',  function () {
if (!this.秘haveRaster$()) return null;
this.秘isRasterDirty$Z(true);
var r=this.raster;
switch (this.imageType) {
case 1:
case 2:
if ((r.dataBuffer).data.length != this.秘wxh) break;
return (r.dataBuffer).data;
case -6:
return this.秘pix;
}
this.秘haveNewPixels=true;
return p$1.秘getPixelsFromRaster$I.apply(this, [8]);
});

Clazz_newMeth(C$, '秘getPixelsFromRaster$I',  function (nbits) {
this.秘isRasterDirty$Z(true);
var wasUntrackable=(this.raster.dataBuffer.theTrackable.getState$() === $I$(1).UNTRACKABLE );
var n=this.秘wxh;
var b;
this.秘state&=~48;
switch (this.imageType) {
case -6:
b=(this.raster.getDataBuffer$()).getData$();
if (!wasUntrackable) this.raster.秘setStable$Z(true);
if (nbits == 32) {
var data=Clazz_array(Integer.TYPE, [n]);
C$.toIntARGB$BA$IA$I(b, data, -16777216);
this.秘state|=32;
} else {
this.秘state|=16;
}return this.秘pix=b;
case 1:
case 2:
if (nbits == 32) {
this.秘state|=32;
this.秘pix=(this.raster.getDataBuffer$()).getData$();
if (!wasUntrackable) this.raster.秘setStable$Z(true);
return this.秘pix;
}break;
}
var p=this.秘pix;
if (p == null  || p.length != n * 4 ) p=Clazz_array(Integer.TYPE, [n * 4]);
this.秘pix=p;
var cm=this.getColorModel$();
var isPacked=Clazz_instanceOf(cm, "java.awt.image.PackedColorModel");
var alpha=(!this.秘isOpaque$() ? 0 : cm.getNumColorComponents$() == 3 ? 255 : -1);
if (isPacked) {
var a=Clazz_array(Integer.TYPE, [n]);
this.raster.getDataElements$I$I$I$I$O(0, 0, this.width, this.height, a);
for (var i=0, pt=0; i < n; i++, pt+=4) {
cm.getComponents$I$IA$I(a[i], p, pt);
if ((alpha=cm.getAlpha$I(i)) != 0) p[pt + 3]=alpha;
}
} else {
var nc=cm.getNumComponents$();
this.raster.getPixels$I$I$I$I$IA(0, 0, this.width, this.height, p);
if (Clazz_instanceOf(cm, "java.awt.image.IndexColorModel")) {
var icm=cm;
var colors=icm.秘getColorMap$();
for (var i=n, pt=n * 4; i > 0; ) {
var index=(p[--i] << 2) + 4;
p[--pt]=colors[--index];
p[--pt]=colors[--index];
p[--pt]=colors[--index];
p[--pt]=colors[--index];
}
} else {
switch (nc) {
case 1:
for (var i=n, pt=n * 4; --i >= 0; ) {
var val=p[i] >> 8;
p[--pt]=255;
p[--pt]=val;
p[--pt]=val;
p[--pt]=val;
}
break;
case 3:
for (var i=n * 4, j=n * 3; --i >= 0; ) {
if (i % 4 == 3) p[i--]=255;
p[i]=p[--j];
}
break;
case 4:
this.getRaster$().getPixels$I$I$I$I$IA(0, 0, this.width, this.height, p);
break;
}
}}if (nbits == 32) {
var data=Clazz_array(Integer.TYPE, [n]);
C$.toIntARGB$BA$IA$I(p, data, -16777216);
this.秘state|=32;
} else {
this.秘state|=16;
}return p;
}, p$1);

Clazz_newMeth(C$, '秘getImageNode$I',  function (mode) {
if (this.秘isRasterDirty$Z(false)) this.秘state|=2;
switch (mode) {
default:
case 0:
return this.秘haveImage$() ? this.秘imgNode : this.秘dataStolenAndHaveRaster$() ? null : (this.秘haveRaster$() || this.秘canvas != null   ? this.秘canvas : p$1.createImageNode.apply(this, []));
case 2:
if (!this.秘isRasterDirty$Z(false)) return (this.秘canvas != null  && !this.秘haveVideo$()  ? this.秘canvas : this.秘imgNode != null  ? p$1.秘copyImageNode.apply(this, []) : p$1.createImageNode.apply(this, []));
case 1:
this.秘haveNewPixels=true;
p$1.秘getPixelsFromRaster$I.apply(this, [0]);
this.秘g=null;
this.秘getImageGraphic$();
var canvas=this.秘g.getCanvas$();
p$1.秘unsetGraphics.apply(this, []);
this.秘g=null;
return canvas;
}
});

Clazz_newMeth(C$, '秘copyImageNode',  function () {
if (this.秘haveVideo$()) return this.秘imgNode;
var node=$I$(16).createElement("img", null);
node.setAttribute("width", this.秘imgNode.getAttribute("width"));
node.setAttribute("height", this.秘imgNode.getAttribute("height"));
node.setAttribute("src", this.秘imgNode.getAttribute("src"));
return node;
}, p$1);

Clazz_newMeth(C$, '秘setPixels$IA',  function (argb) {
this.秘pix=argb;
this.秘state=4;
if (argb.length == this.秘wxh) {
this.秘state|=32;
switch (this.imageType) {
case 1:
case 3:
case 2:
(this.raster.dataBuffer).data=(this.raster).data=argb;
this.raster.秘setStable$Z(true);
this.秘state|=2;
break;
default:
break;
}
} else {
this.秘state|=16;
}});

Clazz_newMeth(C$, 'toString',  function () {
return ("BufferedImage@" + Integer.toHexString$I(this.hashCode$()) + ": type = " + this.imageType + " " + this.colorModel.toString() + " " + this.raster.toString() + " state:" + this.getStateString$() );
});

Clazz_newMeth(C$, '秘newPixelsFromMemorySource$O',  function (pixels) {
var img=pixels.img ||null;
if (img != null ) img.秘setPixels$IA(pixels);
}, 1);

Clazz_newMeth(C$, '秘getGraphicsColor$java_awt_Color',  function (c) {
if (this.hasColor) return c;
var pc;
switch (this.imageType) {
default:
case 11:
pc=$I$(19).$$instance;
break;
case 10:
pc=$I$(20).$instance;
break;
}
return Clazz_new_([pc.pixelToRgb$I$java_awt_image_ColorModel(pc.rgbToPixel$I$java_awt_image_ColorModel(c.getRGB$(), null), null)],$I$(21,1).c$$I);
});

Clazz_newMeth(C$, 'imageUpdate$java_awt_Image$I$I$I$I$I',  function (img, infoflags, x, y, width, height) {
return false;
});

C$.$static$=function(){C$.$static$=0;
C$.states=Clazz_array(String, -1, ["ImageOnly", "Raster", "Graphics", "Video", "8-bitPixels", "32-bitPixels"]);
C$.imageCount=0;
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[[0,'java.awt.color.ColorSpace','java.awt.image.DirectColorModel','sun.java2d.cmm.ColorTransform','sun.java2d.cmm.CMSManager','java.util.Collections','java.util.WeakHashMap']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ColorModel", null, null, 'java.awt.Transparency');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.transparency=3;
this.supportsAlpha=true;
this.isAlphaPremultiplied=false;
this.numComponents=-1;
this.numColorComponents=-1;
this.colorSpace=$I$(1).getInstance$I(1000);
this.colorSpaceType=5;
this.is_sRGB=true;
},1);

C$.$fields$=[['Z',['supportsAlpha','isAlphaPremultiplied','is_sRGB'],'I',['pixel_bits','transparency','numComponents','numColorComponents','colorSpaceType','maxBits','transferType'],'O',['nBits','int[]','colorSpace','java.awt.color.ColorSpace']]
,['O',['秘RGBdefault','java.awt.image.ColorModel','l8Tos8','byte[]','+s8Tol8','+l16Tos8','s8Tol16','short[]','g8Tos8Map','java.util.Map','+lg16Toog8Map','+g16Tos8Map','+lg16Toog16Map','GRAYspace','java.awt.color.ColorSpace']]]

Clazz_newMeth(C$, 'getRGBdefault$',  function () {
if (C$.秘RGBdefault == null ) {
C$.秘RGBdefault=Clazz_new_($I$(2,1).c$$I$I$I$I$I,[32, 16711680, 65280, 255, -16777216]);
}return C$.秘RGBdefault;
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (bits) {
;C$.$init$.apply(this);
this.pixel_bits=bits;
if (bits < 1) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of bits must be > 0"]);
}this.numComponents=4;
this.numColorComponents=3;
this.maxBits=bits;
this.transferType=C$.getDefaultTransferType$I(bits);
}, 1);

Clazz_newMeth(C$, 'c$$I$IA$java_awt_color_ColorSpace$Z$Z$I$I',  function (pixel_bits, bits, cspace, hasAlpha, isAlphaPremultiplied, transparency, transferType) {
;C$.$init$.apply(this);
this.colorSpace=cspace;
this.colorSpaceType=cspace.getType$();
this.numColorComponents=cspace.getNumComponents$();
this.numComponents=this.numColorComponents + (hasAlpha ? 1 : 0);
this.supportsAlpha=hasAlpha;
if (bits.length < this.numComponents) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of color/alpha components should be " + this.numComponents + " but length of bits array is " + bits.length ]);
}if (transparency < 1 || transparency > 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unknown transparency: " + transparency]);
}if (this.supportsAlpha == false ) {
this.isAlphaPremultiplied=false;
this.transparency=1;
} else {
this.isAlphaPremultiplied=isAlphaPremultiplied;
this.transparency=transparency;
}this.nBits=bits.clone$();
this.pixel_bits=pixel_bits;
if (pixel_bits <= 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of pixel bits must be > 0"]);
}this.maxBits=0;
for (var i=0; i < bits.length; i++) {
if (bits[i] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of bits must be >= 0"]);
}if (this.maxBits < bits[i]) {
this.maxBits=bits[i];
}}
if (this.maxBits == 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["There must be at least one component with > 0 pixel bits."]);
}if (cspace !== $I$(1).getInstance$I(1000) ) {
this.is_sRGB=false;
}this.transferType=transferType;
}, 1);

Clazz_newMeth(C$, 'hasAlpha$',  function () {
return this.supportsAlpha;
});

Clazz_newMeth(C$, 'isAlphaPremultiplied$',  function () {
return this.isAlphaPremultiplied;
});

Clazz_newMeth(C$, 'getTransferType$',  function () {
return this.transferType;
});

Clazz_newMeth(C$, 'getPixelSize$',  function () {
return this.pixel_bits;
});

Clazz_newMeth(C$, 'getComponentSize$I',  function (componentIdx) {
if (this.nBits == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Number of bits array is null."]);
}return this.nBits[componentIdx];
});

Clazz_newMeth(C$, 'getComponentSize$',  function () {
if (this.nBits != null ) {
return this.nBits.clone$();
}return null;
});

Clazz_newMeth(C$, 'getTransparency$',  function () {
return this.transparency;
});

Clazz_newMeth(C$, 'getNumComponents$',  function () {
return this.numComponents;
});

Clazz_newMeth(C$, 'getNumColorComponents$',  function () {
return this.numColorComponents;
});

Clazz_newMeth(C$, 'getRGB$I',  function (pixel) {
return (this.getAlpha$I(pixel) << 24) | (this.getRed$I(pixel) << 16) | (this.getGreen$I(pixel) << 8) | (this.getBlue$I(pixel) << 0) ;
});

Clazz_newMeth(C$, 'getRed$O',  function (inData) {
var pixel=0;
var length=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
length=bdata.length;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
length=sdata.length;
break;
case 3:
var idata=inData;
pixel=idata[0];
length=idata.length;
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
if (length == 1) {
return this.getRed$I(pixel);
} else {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
}});

Clazz_newMeth(C$, 'getGreen$O',  function (inData) {
var pixel=0;
var length=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
length=bdata.length;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
length=sdata.length;
break;
case 3:
var idata=inData;
pixel=idata[0];
length=idata.length;
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
if (length == 1) {
return this.getGreen$I(pixel);
} else {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
}});

Clazz_newMeth(C$, 'getBlue$O',  function (inData) {
var pixel=0;
var length=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
length=bdata.length;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
length=sdata.length;
break;
case 3:
var idata=inData;
pixel=idata[0];
length=idata.length;
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
if (length == 1) {
return this.getBlue$I(pixel);
} else {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
}});

Clazz_newMeth(C$, 'getAlpha$O',  function (inData) {
var pixel=0;
var length=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
length=bdata.length;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
length=sdata.length;
break;
case 3:
var idata=inData;
pixel=idata[0];
length=idata.length;
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
if (length == 1) {
return this.getAlpha$I(pixel);
} else {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
}});

Clazz_newMeth(C$, 'getRGB$O',  function (inData) {
return (this.getAlpha$O(inData) << 24) | (this.getRed$O(inData) << 16) | (this.getGreen$O(inData) << 8) | (this.getBlue$O(inData) << 0) ;
});

Clazz_newMeth(C$, 'getDataElements$I$O',  function (rgb, pixel) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model."]);
});

Clazz_newMeth(C$, 'getComponents$I$IA$I',  function (pixel, components, offset) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model."]);
});

Clazz_newMeth(C$, 'getComponents$O$IA$I',  function (pixel, components, offset) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model."]);
});

Clazz_newMeth(C$, 'getUnnormalizedComponents$FA$I$IA$I',  function (normComponents, normOffset, components, offset) {
if (this.colorSpace == null ) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model."]);
}if (this.nBits == null ) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported.  Unable to determine #bits per component."]);
}if ((normComponents.length - normOffset) < this.numComponents) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Incorrect number of components.  Expecting " + this.numComponents]);
}if (components == null ) {
components=Clazz_array(Integer.TYPE, [offset + this.numComponents]);
}if (this.supportsAlpha && this.isAlphaPremultiplied ) {
var normAlpha=normComponents[normOffset + this.numColorComponents];
for (var i=0; i < this.numColorComponents; i++) {
components[offset + i]=((normComponents[normOffset + i] * ((1 << this.nBits[i]) - 1) * normAlpha  + 0.5)|0);
}
components[offset + this.numColorComponents]=((normAlpha * ((1 << this.nBits[this.numColorComponents]) - 1) + 0.5)|0);
} else {
for (var i=0; i < this.numComponents; i++) {
components[offset + i]=((normComponents[normOffset + i] * ((1 << this.nBits[i]) - 1) + 0.5)|0);
}
}return components;
});

Clazz_newMeth(C$, 'getNormalizedComponents$IA$I$FA$I',  function (components, offset, normComponents, normOffset) {
if (this.colorSpace == null ) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model."]);
}if (this.nBits == null ) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported.  Unable to determine #bits per component."]);
}if ((components.length - offset) < this.numComponents) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Incorrect number of components.  Expecting " + this.numComponents]);
}if (normComponents == null ) {
normComponents=Clazz_array(Float.TYPE, [this.numComponents + normOffset]);
}if (this.supportsAlpha && this.isAlphaPremultiplied ) {
var normAlpha=components[offset + this.numColorComponents];
normAlpha/=((1 << this.nBits[this.numColorComponents]) - 1);
if (normAlpha != 0.0 ) {
for (var i=0; i < this.numColorComponents; i++) {
normComponents[normOffset + i]=(components[offset + i]) / (normAlpha * (((1 << this.nBits[i]) - 1)));
}
} else {
for (var i=0; i < this.numColorComponents; i++) {
normComponents[normOffset + i]=0.0;
}
}normComponents[normOffset + this.numColorComponents]=normAlpha;
} else {
for (var i=0; i < this.numComponents; i++) {
normComponents[normOffset + i]=(components[offset + i]) / (((1 << this.nBits[i]) - 1));
}
}return normComponents;
});

Clazz_newMeth(C$, 'getDataElement$IA$I',  function (components, offset) {
return this.getDataElementInt$IA$I(components, offset);
});

Clazz_newMeth(C$, 'getDataElementInt$IA$I',  function (components, offset) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model."]);
});

Clazz_newMeth(C$, 'getDataElements$IA$I$O',  function (components, offset, obj) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been implemented for this color model."]);
});

Clazz_newMeth(C$, 'getDataElement$FA$I',  function (normComponents, normOffset) {
var components=this.getUnnormalizedComponents$FA$I$IA$I(normComponents, normOffset, null, 0);
return this.getDataElement$IA$I(components, 0);
});

Clazz_newMeth(C$, 'getDataElements$FA$I$O',  function (normComponents, normOffset, obj) {
var components=this.getUnnormalizedComponents$FA$I$IA$I(normComponents, normOffset, null, 0);
return this.getDataElements$IA$I$O(components, 0, obj);
});

Clazz_newMeth(C$, 'getNormalizedComponents$O$FA$I',  function (pixel, normComponents, normOffset) {
var components=this.getComponents$O$IA$I(pixel, null, 0);
return this.getNormalizedComponents$IA$I$FA$I(components, 0, normComponents, normOffset);
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "java.awt.image.ColorModel"))) {
return false;
}var cm=obj;
if (this === cm ) {
return true;
}if (this.supportsAlpha != cm.hasAlpha$()  || this.isAlphaPremultiplied != cm.isAlphaPremultiplied$()   || this.pixel_bits != cm.getPixelSize$()  || this.transparency != cm.getTransparency$()  || this.numComponents != cm.getNumComponents$() ) {
return false;
}var nb=cm.getComponentSize$();
if ((this.nBits != null ) && (nb != null ) ) {
for (var i=0; i < this.numComponents; i++) {
if (this.nBits[i] != nb[i]) {
return false;
}}
} else {
return ((this.nBits == null ) && (nb == null ) );
}return true;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var result=0;
result=(this.supportsAlpha ? 2 : 3) + (this.isAlphaPremultiplied ? 4 : 5) + this.pixel_bits * 6  + this.transparency * 7 + this.numComponents * 8;
if (this.nBits != null ) {
for (var i=0; i < this.numComponents; i++) {
result=result + this.nBits[i] * (i + 9);
}
}return result;
});

Clazz_newMeth(C$, 'getColorSpace$',  function () {
return this.colorSpace;
});

Clazz_newMeth(C$, 'coerceData$java_awt_image_WritableRaster$Z',  function (raster, isAlphaPremultiplied) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
});

Clazz_newMeth(C$, 'isCompatibleRaster$java_awt_image_Raster',  function (raster) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been implemented for this ColorModel."]);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$I$I',  function (w, h) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
});

Clazz_newMeth(C$, 'createCompatibleSampleModel$I$I',  function (w, h) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
});

Clazz_newMeth(C$, 'isCompatibleSampleModel$java_awt_image_SampleModel',  function (sm) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method is not supported by this color model"]);
});

Clazz_newMeth(C$, 'finalize$',  function () {
});

Clazz_newMeth(C$, 'getAlphaRaster$java_awt_image_WritableRaster',  function (raster) {
return null;
});

Clazz_newMeth(C$, 'toString',  function () {
return ("ColorModel: #pixelBits = " + this.pixel_bits + " numComponents = " + this.numComponents + " color space = " + this.colorSpace + " transparency = " + this.transparency + " has alpha = " + this.supportsAlpha + " isAlphaPre = " + this.isAlphaPremultiplied );
});

Clazz_newMeth(C$, 'getDefaultTransferType$I',  function (pixel_bits) {
if (pixel_bits <= 8) {
return 0;
} else if (pixel_bits <= 16) {
return 1;
} else if (pixel_bits <= 32) {
return 3;
} else {
return 32;
}}, 1);

Clazz_newMeth(C$, 'isLinearRGBspace$java_awt_color_ColorSpace',  function (cs) {
return false;
}, 1);

Clazz_newMeth(C$, 'isLinearGRAYspace$java_awt_color_ColorSpace',  function (cs) {
return false;
}, 1);

Clazz_newMeth(C$, 'getLinearRGB8TosRGB8LUT$',  function () {
if (C$.l8Tos8 == null ) {
C$.l8Tos8=Clazz_array(Byte.TYPE, [256]);
var input;
var output;
for (var i=0; i <= 255; i++) {
input=(i) / 255.0;
if (input <= 0.0031308 ) {
output=input * 12.92;
} else {
output=1.055 * (Math.pow(input, (0.4166666666666667))) - 0.055;
}C$.l8Tos8[i]=(Math.round(output * 255.0)|0);
}
}return C$.l8Tos8;
}, 1);

Clazz_newMeth(C$, 'getsRGB8ToLinearRGB8LUT$',  function () {
if (C$.s8Tol8 == null ) {
C$.s8Tol8=Clazz_array(Byte.TYPE, [256]);
var input;
var output;
for (var i=0; i <= 255; i++) {
input=(i) / 255.0;
if (input <= 0.04045 ) {
output=input / 12.92;
} else {
output=Math.pow((input + 0.055) / 1.055, 2.4);
}C$.s8Tol8[i]=(Math.round(output * 255.0)|0);
}
}return C$.s8Tol8;
}, 1);

Clazz_newMeth(C$, 'getLinearRGB16TosRGB8LUT$',  function () {
if (C$.l16Tos8 == null ) {
C$.l16Tos8=Clazz_array(Byte.TYPE, [65536]);
var input;
var output;
for (var i=0; i <= 65535; i++) {
input=(i) / 65535.0;
if (input <= 0.0031308 ) {
output=input * 12.92;
} else {
output=1.055 * (Math.pow(input, (0.4166666666666667))) - 0.055;
}C$.l16Tos8[i]=(Math.round(output * 255.0)|0);
}
}return C$.l16Tos8;
}, 1);

Clazz_newMeth(C$, 'getsRGB8ToLinearRGB16LUT$',  function () {
if (C$.s8Tol16 == null ) {
C$.s8Tol16=Clazz_array(Short.TYPE, [256]);
var input;
var output;
for (var i=0; i <= 255; i++) {
input=(i) / 255.0;
if (input <= 0.04045 ) {
output=input / 12.92;
} else {
output=Math.pow((input + 0.055) / 1.055, 2.4);
}C$.s8Tol16[i]=(Math.round(output * 65535.0)|0);
}
}return C$.s8Tol16;
}, 1);

Clazz_newMeth(C$, 'getGray8TosRGB8LUT$java_awt_color_ICC_ColorSpace',  function (grayCS) {
if (C$.isLinearGRAYspace$java_awt_color_ColorSpace(grayCS)) {
return C$.getLinearRGB8TosRGB8LUT$();
}if (C$.g8Tos8Map != null ) {
var g8Tos8LUT=C$.g8Tos8Map.get$O(grayCS);
if (g8Tos8LUT != null ) {
return g8Tos8LUT;
}}var g8Tos8LUT=Clazz_array(Byte.TYPE, [256]);
for (var i=0; i <= 255; i++) {
g8Tos8LUT[i]=(i|0);
}
var transformList=Clazz_array($I$(3), [2]);
var mdl=$I$(4).getModule$();
var srgbCS=$I$(1).getInstance$I(1000);
transformList[0]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(grayCS.getProfile$(), -1, 1);
transformList[1]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(srgbCS.getProfile$(), -1, 2);
var t=mdl.createTransform$sun_java2d_cmm_ColorTransformA(transformList);
var tmp=t.colorConvert$BA$BA(g8Tos8LUT, null);
for (var i=0, j=2; i <= 255; i++, j+=3) {
g8Tos8LUT[i]=tmp[j];
}
if (C$.g8Tos8Map == null ) {
C$.g8Tos8Map=$I$(5,"synchronizedMap$java_util_Map",[Clazz_new_($I$(6,1).c$$I,[2])]);
}C$.g8Tos8Map.put$O$O(grayCS, g8Tos8LUT);
return g8Tos8LUT;
}, 1);

Clazz_newMeth(C$, 'getLinearGray16ToOtherGray8LUT$java_awt_color_ICC_ColorSpace',  function (grayCS) {
if (C$.lg16Toog8Map != null ) {
var lg16Toog8LUT=C$.lg16Toog8Map.get$O(grayCS);
if (lg16Toog8LUT != null ) {
return lg16Toog8LUT;
}}var tmp=Clazz_array(Short.TYPE, [65536]);
for (var i=0; i <= 65535; i++) {
tmp[i]=(i|0);
}
var transformList=Clazz_array($I$(3), [2]);
var mdl=$I$(4).getModule$();
var lgCS=$I$(1).getInstance$I(1003);
transformList[0]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(lgCS.getProfile$(), -1, 1);
transformList[1]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(grayCS.getProfile$(), -1, 2);
var t=mdl.createTransform$sun_java2d_cmm_ColorTransformA(transformList);
tmp=t.colorConvert$HA$HA(tmp, null);
var lg16Toog8LUT=Clazz_array(Byte.TYPE, [65536]);
for (var i=0; i <= 65535; i++) {
lg16Toog8LUT[i]=((((tmp[i] & 65535)) * (0.0038910506) + 0.5)|0);
}
if (C$.lg16Toog8Map == null ) {
C$.lg16Toog8Map=$I$(5,"synchronizedMap$java_util_Map",[Clazz_new_($I$(6,1).c$$I,[2])]);
}C$.lg16Toog8Map.put$O$O(grayCS, lg16Toog8LUT);
return lg16Toog8LUT;
}, 1);

Clazz_newMeth(C$, 'getGray16TosRGB8LUT$java_awt_color_ICC_ColorSpace',  function (grayCS) {
if (C$.isLinearGRAYspace$java_awt_color_ColorSpace(grayCS)) {
return C$.getLinearRGB16TosRGB8LUT$();
}if (C$.g16Tos8Map != null ) {
var g16Tos8LUT=C$.g16Tos8Map.get$O(grayCS);
if (g16Tos8LUT != null ) {
return g16Tos8LUT;
}}var tmp=Clazz_array(Short.TYPE, [65536]);
for (var i=0; i <= 65535; i++) {
tmp[i]=(i|0);
}
var transformList=Clazz_array($I$(3), [2]);
var mdl=$I$(4).getModule$();
var srgbCS=$I$(1).getInstance$I(1000);
transformList[0]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(grayCS.getProfile$(), -1, 1);
transformList[1]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(srgbCS.getProfile$(), -1, 2);
var t=mdl.createTransform$sun_java2d_cmm_ColorTransformA(transformList);
tmp=t.colorConvert$HA$HA(tmp, null);
var g16Tos8LUT=Clazz_array(Byte.TYPE, [65536]);
for (var i=0, j=2; i <= 65535; i++, j+=3) {
g16Tos8LUT[i]=((((tmp[j] & 65535)) * (0.0038910506) + 0.5)|0);
}
if (C$.g16Tos8Map == null ) {
C$.g16Tos8Map=$I$(5,"synchronizedMap$java_util_Map",[Clazz_new_($I$(6,1).c$$I,[2])]);
}C$.g16Tos8Map.put$O$O(grayCS, g16Tos8LUT);
return g16Tos8LUT;
}, 1);

Clazz_newMeth(C$, 'getLinearGray16ToOtherGray16LUT$java_awt_color_ICC_ColorSpace',  function (grayCS) {
if (C$.lg16Toog16Map != null ) {
var lg16Toog16LUT=C$.lg16Toog16Map.get$O(grayCS);
if (lg16Toog16LUT != null ) {
return lg16Toog16LUT;
}}var tmp=Clazz_array(Short.TYPE, [65536]);
for (var i=0; i <= 65535; i++) {
tmp[i]=(i|0);
}
var transformList=Clazz_array($I$(3), [2]);
var mdl=$I$(4).getModule$();
var lgCS=$I$(1).getInstance$I(1003);
transformList[0]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(lgCS.getProfile$(), -1, 1);
transformList[1]=mdl.createTransform$java_awt_color_ICC_Profile$I$I(grayCS.getProfile$(), -1, 2);
var t=mdl.createTransform$sun_java2d_cmm_ColorTransformA(transformList);
var lg16Toog16LUT=t.colorConvert$HA$HA(tmp, null);
if (C$.lg16Toog16Map == null ) {
C$.lg16Toog16Map=$I$(5,"synchronizedMap$java_util_Map",[Clazz_new_($I$(6,1).c$$I,[2])]);
}C$.lg16Toog16Map.put$O$O(grayCS, lg16Toog16LUT);
return lg16Toog16LUT;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.l8Tos8=null;
C$.s8Tol8=null;
C$.l16Tos8=null;
C$.s8Tol16=null;
C$.g8Tos8Map=null;
C$.lg16Toog8Map=null;
C$.g16Tos8Map=null;
C$.lg16Toog16Map=null;
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[[0,'sun.awt.image.SunWritableRaster',['sun.java2d.StateTrackable','.State'],'sun.java2d.StateTrackableDelegate']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DataBuffer");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.checkImageDepth=0;
},1);

C$.$fields$=[['I',['dataType','banks','offset','size','checkImageDepth'],'O',['+offsets','theTrackable','sun.java2d.StateTrackableDelegate','秘image','java.awt.image.BufferedImage']]
,['O',['dataTypeSize','int[]']]]

Clazz_newMeth(C$, '秘setUntrackable$',  function () {
this.theTrackable.setUntrackable$();
this.秘checkImage$();
});

Clazz_newMeth(C$, '秘setDoCheckImage$Z',  function (allowChecking) {
if (!allowChecking) this.秘checkImage$();
this.checkImageDepth=Math.max(0, this.checkImageDepth + (allowChecking ? -1 : 1));
});

Clazz_newMeth(C$, '秘checkImage$',  function () {
if (this.checkImageDepth == 0 && this.秘image != null  ) this.秘image.秘ensureRasterUpToDate$();
});

Clazz_newMeth(C$, 'getDataTypeSize$I',  function (type) {
if (type < 0 || type > 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unknown data type " + type]);
}return C$.dataTypeSize[type];
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (dataType, size) {
C$.c$$sun_java2d_StateTrackable_State$I$I.apply(this, [$I$(2).UNTRACKABLE, dataType, size]);
}, 1);

Clazz_newMeth(C$, 'c$$sun_java2d_StateTrackable_State$I$I',  function (initialState, dataType, size) {
;C$.$init$.apply(this);
this.theTrackable=$I$(3).createInstance$sun_java2d_StateTrackable_State(initialState);
this.dataType=dataType;
this.banks=1;
this.size=size;
this.offset=0;
this.offsets=Clazz_array(Integer.TYPE, [1]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I',  function (dataType, size, numBanks) {
C$.c$$sun_java2d_StateTrackable_State$I$I$I.apply(this, [$I$(2).UNTRACKABLE, dataType, size, numBanks]);
}, 1);

Clazz_newMeth(C$, 'c$$sun_java2d_StateTrackable_State$I$I$I',  function (initialState, dataType, size, numBanks) {
;C$.$init$.apply(this);
this.theTrackable=$I$(3).createInstance$sun_java2d_StateTrackable_State(initialState);
this.dataType=dataType;
this.banks=numBanks;
this.size=size;
this.offset=0;
this.offsets=Clazz_array(Integer.TYPE, [this.banks]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (dataType, size, numBanks, offset) {
C$.c$$sun_java2d_StateTrackable_State$I$I$I$I.apply(this, [$I$(2).UNTRACKABLE, dataType, size, numBanks, offset]);
}, 1);

Clazz_newMeth(C$, 'c$$sun_java2d_StateTrackable_State$I$I$I$I',  function (initialState, dataType, size, numBanks, offset) {
;C$.$init$.apply(this);
initialState=$I$(2).STABLE;
this.theTrackable=$I$(3).createInstance$sun_java2d_StateTrackable_State(initialState);
this.dataType=dataType;
this.banks=numBanks;
this.size=size;
this.offset=offset;
this.offsets=Clazz_array(Integer.TYPE, [numBanks]);
for (var i=0; i < numBanks; i++) {
this.offsets[i]=offset;
}
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$IA',  function (dataType, size, numBanks, offsets) {
C$.c$$sun_java2d_StateTrackable_State$I$I$I$IA.apply(this, [$I$(2).UNTRACKABLE, dataType, size, numBanks, offsets]);
}, 1);

Clazz_newMeth(C$, 'c$$sun_java2d_StateTrackable_State$I$I$I$IA',  function (initialState, dataType, size, numBanks, offsets) {
;C$.$init$.apply(this);
if (numBanks != offsets.length) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Number of banks does not match number of bank offsets"]);
}this.theTrackable=$I$(3).createInstance$sun_java2d_StateTrackable_State(initialState);
this.dataType=dataType;
this.banks=numBanks;
this.size=size;
this.offset=offsets[0];
this.offsets=offsets.clone$();
}, 1);

Clazz_newMeth(C$, 'getDataType$',  function () {
return this.dataType;
});

Clazz_newMeth(C$, 'getSize$',  function () {
return this.size;
});

Clazz_newMeth(C$, 'getOffset$',  function () {
return this.offset;
});

Clazz_newMeth(C$, 'getOffsets$',  function () {
return this.offsets.clone$();
});

Clazz_newMeth(C$, 'getNumBanks$',  function () {
return this.banks;
});

Clazz_newMeth(C$, 'getElem$I',  function (i) {
return this.getElem$I$I(0, i);
});

Clazz_newMeth(C$, 'setElem$I$I',  function (i, val) {
this.setElem$I$I$I(0, i, val);
});

Clazz_newMeth(C$, 'getElemFloat$I',  function (i) {
return this.getElem$I(i);
});

Clazz_newMeth(C$, 'getElemFloat$I$I',  function (bank, i) {
return this.getElem$I$I(bank, i);
});

Clazz_newMeth(C$, 'setElemFloat$I$F',  function (i, val) {
this.setElem$I$I(i, (val|0));
});

Clazz_newMeth(C$, 'setElemFloat$I$I$F',  function (bank, i, val) {
this.setElem$I$I$I(bank, i, (val|0));
});

Clazz_newMeth(C$, 'getElemDouble$I',  function (i) {
return this.getElem$I(i);
});

Clazz_newMeth(C$, 'getElemDouble$I$I',  function (bank, i) {
return this.getElem$I$I(bank, i);
});

Clazz_newMeth(C$, 'setElemDouble$I$D',  function (i, val) {
this.setElem$I$I(i, (val|0));
});

Clazz_newMeth(C$, 'setElemDouble$I$I$D',  function (bank, i, val) {
this.setElem$I$I$I(bank, i, (val|0));
});

Clazz_newMeth(C$, 'toIntArray$O',  function (obj) {
if (Clazz_instanceOf(obj, Clazz_array(Integer.TYPE, -1))) {
return obj;
} else if (obj == null ) {
return null;
} else if (Clazz_instanceOf(obj, Clazz_array(Short.TYPE, -1))) {
var sdata=obj;
var idata=Clazz_array(Integer.TYPE, [sdata.length]);
for (var i=0; i < sdata.length; i++) {
idata[i]=(sdata[i]|0) & 65535;
}
return idata;
} else if (Clazz_instanceOf(obj, Clazz_array(Byte.TYPE, -1))) {
var bdata=obj;
var idata=Clazz_array(Integer.TYPE, [bdata.length]);
for (var i=0; i < bdata.length; i++) {
idata[i]=255 & (bdata[i]|0);
}
return idata;
}return null;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.dataTypeSize=Clazz_array(Integer.TYPE, -1, [8, 16, 16, 32, 32, 64]);
{
$I$(1,"setDataStealer$sun_awt_image_DataStealer",[((P$.DataBuffer$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "DataBuffer$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'sun.awt.image.DataStealer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]]

Clazz_newMeth(C$, 'getData$java_awt_image_DataBufferByte$I',  function (dbb, bank) {
dbb.秘checkImage$();
return dbb.bankdata[bank];
});

Clazz_newMeth(C$, 'getData$java_awt_image_DataBufferUShort$I',  function (dbus, bank) {
dbus.秘checkImage$();
return dbus.bankdata[bank];
});

Clazz_newMeth(C$, 'getData$java_awt_image_DataBufferInt$I',  function (dbi, bank) {
dbi.秘checkImage$();
return dbi.bankdata[bank];
});

Clazz_newMeth(C$, 'getTrackable$java_awt_image_DataBuffer',  function (db) {
return db.theTrackable;
});

Clazz_newMeth(C$, 'setTrackable$java_awt_image_DataBuffer$sun_java2d_StateTrackableDelegate',  function (db, trackable) {
db.theTrackable=trackable;
});
})()
), Clazz_new_(P$.DataBuffer$1.$init$,[this, null]))]);
};
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[[0,['sun.java2d.StateTrackable','.State']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DataBufferInt", null, 'java.awt.image.DataBuffer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['data','int[]','bankdata','int[][]']]]

Clazz_newMeth(C$, 'c$$I',  function (size) {
;C$.superclazz.c$$sun_java2d_StateTrackable_State$I$I.apply(this,[$I$(1).UNTRACKABLE, 3, size]);C$.$init$.apply(this);
this.data=Clazz_array(Integer.TYPE, [size]);
this.bankdata=Clazz_array(Integer.TYPE, [1, null]);
this.bankdata[0]=this.data;
}, 1);

Clazz_newMeth(C$, 'c$$I$I',  function (size, numBanks) {
;C$.superclazz.c$$sun_java2d_StateTrackable_State$I$I$I.apply(this,[$I$(1).UNTRACKABLE, 3, size, numBanks]);C$.$init$.apply(this);
this.bankdata=Clazz_array(Integer.TYPE, [numBanks, null]);
for (var i=0; i < numBanks; i++) {
this.bankdata[i]=Clazz_array(Integer.TYPE, [size]);
}
this.data=this.bankdata[0];
}, 1);

Clazz_newMeth(C$, 'c$$IA$I',  function (dataArray, size) {
;C$.superclazz.c$$sun_java2d_StateTrackable_State$I$I.apply(this,[$I$(1).UNTRACKABLE, 3, size]);C$.$init$.apply(this);
this.data=dataArray;
this.bankdata=Clazz_array(Integer.TYPE, [1, null]);
this.bankdata[0]=this.data;
}, 1);

Clazz_newMeth(C$, 'c$$IA$I$I',  function (dataArray, size, offset) {
;C$.superclazz.c$$sun_java2d_StateTrackable_State$I$I$I$I.apply(this,[$I$(1).UNTRACKABLE, 3, size, 1, offset]);C$.$init$.apply(this);
this.data=dataArray;
this.bankdata=Clazz_array(Integer.TYPE, [1, null]);
this.bankdata[0]=this.data;
}, 1);

Clazz_newMeth(C$, 'c$$IAA$I',  function (dataArray, size) {
;C$.superclazz.c$$sun_java2d_StateTrackable_State$I$I$I.apply(this,[$I$(1).UNTRACKABLE, 3, size, dataArray.length]);C$.$init$.apply(this);
this.bankdata=dataArray.clone$();
this.data=this.bankdata[0];
}, 1);

Clazz_newMeth(C$, 'c$$IAA$I$IA',  function (dataArray, size, offsets) {
;C$.superclazz.c$$sun_java2d_StateTrackable_State$I$I$I$IA.apply(this,[$I$(1).UNTRACKABLE, 3, size, dataArray.length, offsets]);C$.$init$.apply(this);
this.bankdata=dataArray.clone$();
this.data=this.bankdata[0];
}, 1);

Clazz_newMeth(C$, 'getData$',  function () {
this.秘setUntrackable$();
return this.data;
});

Clazz_newMeth(C$, 'getData$I',  function (bank) {
this.秘setUntrackable$();
return this.bankdata[bank];
});

Clazz_newMeth(C$, 'getBankData$',  function () {
this.秘setUntrackable$();
return this.bankdata.clone$();
});

Clazz_newMeth(C$, 'getElem$I',  function (i) {
return this.data[i + this.offset];
});

Clazz_newMeth(C$, 'getElem$I$I',  function (bank, i) {
return this.bankdata[bank][i + this.offsets[bank]];
});

Clazz_newMeth(C$, 'setElem$I$I',  function (i, val) {
this.data[i + this.offset]=val;
this.theTrackable.markDirty$();
});

Clazz_newMeth(C$, 'setElem$I$I$I',  function (bank, i, val) {
this.bankdata[bank][i + this.offsets[bank]]=val;
this.theTrackable.markDirty$();
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),p$1={},I$=[[0,'java.awt.color.ColorSpace','java.awt.image.ColorModel','java.awt.image.Raster','java.util.Arrays']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DirectColorModel", null, 'java.awt.image.PackedColorModel');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['is_LinearRGB'],'I',['red_mask','green_mask','blue_mask','alpha_mask','lRGBprecision'],'O',['tosRGB8LUT','byte[]','+fromsRGB8LUT8','fromsRGB8LUT16','short[]']]]

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (bits, rmask, gmask, bmask) {
C$.c$$I$I$I$I$I.apply(this, [bits, rmask, gmask, bmask, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I$I',  function (bits, rmask, gmask, bmask, amask) {
;C$.superclazz.c$$java_awt_color_ColorSpace$I$I$I$I$I$Z$I$I.apply(this,[$I$(1).getInstance$I(1000), bits, rmask, gmask, bmask, amask, false, amask == 0 ? 1 : 3, $I$(2).getDefaultTransferType$I(bits)]);C$.$init$.apply(this);
p$1.setFields.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_color_ColorSpace$I$I$I$I$I$Z$I',  function (space, bits, rmask, gmask, bmask, amask, isAlphaPremultiplied, transferType) {
;C$.superclazz.c$$java_awt_color_ColorSpace$I$I$I$I$I$Z$I$I.apply(this,[space, bits, rmask, gmask, bmask, amask, isAlphaPremultiplied, amask == 0 ? 1 : 3, transferType]);C$.$init$.apply(this);
if ($I$(2).isLinearRGBspace$java_awt_color_ColorSpace(this.colorSpace)) {
this.is_LinearRGB=true;
if (this.maxBits <= 8) {
this.lRGBprecision=8;
this.tosRGB8LUT=$I$(2).getLinearRGB8TosRGB8LUT$();
this.fromsRGB8LUT8=$I$(2).getsRGB8ToLinearRGB8LUT$();
} else {
this.lRGBprecision=16;
this.tosRGB8LUT=$I$(2).getLinearRGB16TosRGB8LUT$();
this.fromsRGB8LUT16=$I$(2).getsRGB8ToLinearRGB16LUT$();
}} else if (!this.is_sRGB) {
for (var i=0; i < 3; i++) {
if ((space.getMinValue$I(i) != 0.0 ) || (space.getMaxValue$I(i) != 1.0 ) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal min/max RGB component value"]);
}}
}}, 1);

Clazz_newMeth(C$, 'getRedMask$',  function () {
return this.maskArray[0];
});

Clazz_newMeth(C$, 'getGreenMask$',  function () {
return this.maskArray[1];
});

Clazz_newMeth(C$, 'getBlueMask$',  function () {
return this.maskArray[2];
});

Clazz_newMeth(C$, 'getAlphaMask$',  function () {
if (this.supportsAlpha) {
return this.maskArray[3];
} else {
return 0;
}});

Clazz_newMeth(C$, 'getDefaultRGBComponents$I',  function (pixel) {
var components=this.getComponents$I$IA$I(pixel, null, 0);
var norm=this.getNormalizedComponents$IA$I$FA$I(components, 0, null, 0);
return this.colorSpace.toRGB$FA(norm);
}, p$1);

Clazz_newMeth(C$, 'getsRGBComponentFromsRGB$I$I',  function (pixel, idx) {
var c=((pixel & this.maskArray[idx]) >>> this.maskOffsets[idx]);
if (this.isAlphaPremultiplied) {
var a=((pixel & this.maskArray[3]) >>> this.maskOffsets[3]);
c=(a == 0) ? 0 : ((((c * this.scaleFactors[idx]) * 255.0 / (a * this.scaleFactors[3])) + 0.5)|0);
} else if (this.scaleFactors[idx] != 1.0 ) {
c=(((c * this.scaleFactors[idx]) + 0.5)|0);
}return c;
}, p$1);

Clazz_newMeth(C$, 'getsRGBComponentFromLinearRGB$I$I',  function (pixel, idx) {
var c=((pixel & this.maskArray[idx]) >>> this.maskOffsets[idx]);
if (this.isAlphaPremultiplied) {
var factor=((1 << this.lRGBprecision) - 1);
var a=((pixel & this.maskArray[3]) >>> this.maskOffsets[3]);
c=(a == 0) ? 0 : ((((c * this.scaleFactors[idx]) * factor / (a * this.scaleFactors[3])) + 0.5)|0);
} else if (this.nBits[idx] != this.lRGBprecision) {
if (this.lRGBprecision == 16) {
c=(((c * this.scaleFactors[idx] * 257.0 ) + 0.5)|0);
} else {
c=(((c * this.scaleFactors[idx]) + 0.5)|0);
}}return this.tosRGB8LUT[c] & 255;
}, p$1);

Clazz_newMeth(C$, 'getRed$I',  function (pixel) {
if (this.is_sRGB) {
return p$1.getsRGBComponentFromsRGB$I$I.apply(this, [pixel, 0]);
} else if (this.is_LinearRGB) {
return p$1.getsRGBComponentFromLinearRGB$I$I.apply(this, [pixel, 0]);
}var rgb=p$1.getDefaultRGBComponents$I.apply(this, [pixel]);
return ((rgb[0] * 255.0 + 0.5)|0);
});

Clazz_newMeth(C$, 'getGreen$I',  function (pixel) {
if (this.is_sRGB) {
return p$1.getsRGBComponentFromsRGB$I$I.apply(this, [pixel, 1]);
} else if (this.is_LinearRGB) {
return p$1.getsRGBComponentFromLinearRGB$I$I.apply(this, [pixel, 1]);
}var rgb=p$1.getDefaultRGBComponents$I.apply(this, [pixel]);
return ((rgb[1] * 255.0 + 0.5)|0);
});

Clazz_newMeth(C$, 'getBlue$I',  function (pixel) {
if (this.is_sRGB) {
return p$1.getsRGBComponentFromsRGB$I$I.apply(this, [pixel, 2]);
} else if (this.is_LinearRGB) {
return p$1.getsRGBComponentFromLinearRGB$I$I.apply(this, [pixel, 2]);
}var rgb=p$1.getDefaultRGBComponents$I.apply(this, [pixel]);
return ((rgb[2] * 255.0 + 0.5)|0);
});

Clazz_newMeth(C$, 'getAlpha$I',  function (pixel) {
if (!this.supportsAlpha) return 255;
var a=((pixel & this.maskArray[3]) >>> this.maskOffsets[3]);
if (this.scaleFactors[3] != 1.0 ) {
a=((a * this.scaleFactors[3] + 0.5)|0);
}return a;
});

Clazz_newMeth(C$, 'getRGB$I',  function (pixel) {
if (this.is_sRGB || this.is_LinearRGB ) {
return (this.getAlpha$I(pixel) << 24) | (this.getRed$I(pixel) << 16) | (this.getGreen$I(pixel) << 8) | (this.getBlue$I(pixel) << 0) ;
}var rgb=p$1.getDefaultRGBComponents$I.apply(this, [pixel]);
return (this.getAlpha$I(pixel) << 24) | ((((rgb[0] * 255.0 + 0.5)|0)) << 16) | ((((rgb[1] * 255.0 + 0.5)|0)) << 8) | ((((rgb[2] * 255.0 + 0.5)|0)) << 0) ;
});

Clazz_newMeth(C$, 'getRed$O',  function (inData) {
var pixel=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
break;
case 3:
var idata=inData;
pixel=idata[0];
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
return this.getRed$I(pixel);
});

Clazz_newMeth(C$, 'getGreen$O',  function (inData) {
var pixel=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
break;
case 3:
var idata=inData;
pixel=idata[0];
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
return this.getGreen$I(pixel);
});

Clazz_newMeth(C$, 'getBlue$O',  function (inData) {
var pixel=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
break;
case 3:
var idata=inData;
pixel=idata[0];
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
return this.getBlue$I(pixel);
});

Clazz_newMeth(C$, 'getAlpha$O',  function (inData) {
var pixel=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
break;
case 3:
var idata=inData;
pixel=idata[0];
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
return this.getAlpha$I(pixel);
});

Clazz_newMeth(C$, 'getRGB$O',  function (inData) {
var pixel=0;
switch (this.transferType) {
case 0:
var bdata=inData;
pixel=bdata[0] & 255;
break;
case 1:
var sdata=inData;
pixel=sdata[0] & 65535;
break;
case 3:
var idata=inData;
pixel=idata[0];
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
return this.getRGB$I(pixel);
});

Clazz_newMeth(C$, 'getDataElements$I$O',  function (rgb, pixel) {
var intpixel=null;
if (this.transferType == 3 && pixel != null  ) {
intpixel=pixel;
intpixel[0]=0;
} else {
intpixel=Clazz_array(Integer.TYPE, [1]);
}var defaultCM=$I$(2).getRGBdefault$();
if (this === defaultCM  || this.equals$O(defaultCM) ) {
intpixel[0]=rgb;
return intpixel;
}var red;
var grn;
var blu;
var alp;
red=(rgb >> 16) & 255;
grn=(rgb >> 8) & 255;
blu=rgb & 255;
if (this.is_sRGB || this.is_LinearRGB ) {
var precision;
var factor;
if (this.is_LinearRGB) {
if (this.lRGBprecision == 8) {
red=this.fromsRGB8LUT8[red] & 255;
grn=this.fromsRGB8LUT8[grn] & 255;
blu=this.fromsRGB8LUT8[blu] & 255;
precision=8;
factor=0.003921569;
} else {
red=this.fromsRGB8LUT16[red] & 65535;
grn=this.fromsRGB8LUT16[grn] & 65535;
blu=this.fromsRGB8LUT16[blu] & 65535;
precision=16;
factor=1.5259022E-5;
}} else {
precision=8;
factor=0.003921569;
}if (this.supportsAlpha) {
alp=(rgb >> 24) & 255;
if (this.isAlphaPremultiplied) {
factor*=(alp * (0.003921569));
precision=-1;
}if (this.nBits[3] != 8) {
alp=(((alp * (0.003921569) * ((1 << this.nBits[3]) - 1) ) + 0.5)|0);
if (alp > ((1 << this.nBits[3]) - 1)) {
alp=(1 << this.nBits[3]) - 1;
}}intpixel[0]=alp << this.maskOffsets[3];
}if (this.nBits[0] != precision) {
red=(((red * factor * ((1 << this.nBits[0]) - 1) ) + 0.5)|0);
}if (this.nBits[1] != precision) {
grn=(((grn * factor * ((1 << this.nBits[1]) - 1) ) + 0.5)|0);
}if (this.nBits[2] != precision) {
blu=(((blu * factor * ((1 << this.nBits[2]) - 1) ) + 0.5)|0);
}} else {
var norm=Clazz_array(Float.TYPE, [3]);
var factor=0.003921569;
norm[0]=red * factor;
norm[1]=grn * factor;
norm[2]=blu * factor;
norm=this.colorSpace.fromRGB$FA(norm);
if (this.supportsAlpha) {
alp=(rgb >> 24) & 255;
if (this.isAlphaPremultiplied) {
factor*=alp;
for (var i=0; i < 3; i++) {
norm[i]*=factor;
}
}if (this.nBits[3] != 8) {
alp=(((alp * (0.003921569) * ((1 << this.nBits[3]) - 1) ) + 0.5)|0);
if (alp > ((1 << this.nBits[3]) - 1)) {
alp=(1 << this.nBits[3]) - 1;
}}intpixel[0]=alp << this.maskOffsets[3];
}red=(((norm[0] * ((1 << this.nBits[0]) - 1)) + 0.5)|0);
grn=(((norm[1] * ((1 << this.nBits[1]) - 1)) + 0.5)|0);
blu=(((norm[2] * ((1 << this.nBits[2]) - 1)) + 0.5)|0);
}if (this.maxBits > 23) {
if (red > ((1 << this.nBits[0]) - 1)) {
red=(1 << this.nBits[0]) - 1;
}if (grn > ((1 << this.nBits[1]) - 1)) {
grn=(1 << this.nBits[1]) - 1;
}if (blu > ((1 << this.nBits[2]) - 1)) {
blu=(1 << this.nBits[2]) - 1;
}}intpixel[0]|=(red << this.maskOffsets[0]) | (grn << this.maskOffsets[1]) | (blu << this.maskOffsets[2]) ;
switch (this.transferType) {
case 0:
{
var bdata;
if (pixel == null ) {
bdata=Clazz_array(Byte.TYPE, [1]);
} else {
bdata=pixel;
}bdata[0]=((255 & intpixel[0])|0);
return bdata;
}case 1:
{
var sdata;
if (pixel == null ) {
sdata=Clazz_array(Short.TYPE, [1]);
} else {
sdata=pixel;
}sdata[0]=((intpixel[0] & 65535)|0);
return sdata;
}case 3:
return intpixel;
}
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
});

Clazz_newMeth(C$, 'getComponents$I$IA$I',  function (pixel, components, offset) {
if (components == null ) {
components=Clazz_array(Integer.TYPE, [offset + this.numComponents]);
}for (var i=0; i < this.numComponents; i++) {
components[offset + i]=(pixel & this.maskArray[i]) >>> this.maskOffsets[i];
}
return components;
});

Clazz_newMeth(C$, 'getComponents$O$IA$I',  function (pixel, components, offset) {
var intpixel=0;
switch (this.transferType) {
case 0:
var bdata=pixel;
intpixel=bdata[0] & 255;
break;
case 1:
var sdata=pixel;
intpixel=sdata[0] & 65535;
break;
case 3:
var idata=pixel;
intpixel=idata[0];
break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
return this.getComponents$I$IA$I(intpixel, components, offset);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$I$I',  function (w, h) {
if ((w <= 0) || (h <= 0) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Width (" + w + ") and height (" + h + ") cannot be <= 0" ]);
}var bandmasks;
if (this.supportsAlpha) {
bandmasks=Clazz_array(Integer.TYPE, [4]);
bandmasks[3]=this.alpha_mask;
} else {
bandmasks=Clazz_array(Integer.TYPE, [3]);
}bandmasks[0]=this.red_mask;
bandmasks[1]=this.green_mask;
bandmasks[2]=this.blue_mask;
if (this.pixel_bits > 16) {
return $I$(3).createPackedRaster$I$I$I$IA$java_awt_Point(3, w, h, bandmasks, null);
} else if (this.pixel_bits > 8) {
return $I$(3).createPackedRaster$I$I$I$IA$java_awt_Point(1, w, h, bandmasks, null);
} else {
return $I$(3).createPackedRaster$I$I$I$IA$java_awt_Point(0, w, h, bandmasks, null);
}});

Clazz_newMeth(C$, 'getDataElement$IA$I',  function (components, offset) {
var pixel=0;
for (var i=0; i < this.numComponents; i++) {
pixel|=((components[offset + i] << this.maskOffsets[i]) & this.maskArray[i]);
}
return pixel;
});

Clazz_newMeth(C$, 'getDataElements$IA$I$O',  function (components, offset, obj) {
var pixel=0;
for (var i=0; i < this.numComponents; i++) {
pixel|=((components[offset + i] << this.maskOffsets[i]) & this.maskArray[i]);
}
switch (this.transferType) {
case 0:
if (Clazz_instanceOf(obj, Clazz_array(Byte.TYPE, -1))) {
var bdata=obj;
bdata[0]=((pixel & 255)|0);
return bdata;
} else {
var bdata=Clazz_array(Byte.TYPE, -1, [($b$[0] = (pixel & 255), $b$[0])]);
return bdata;
}case 1:
if (Clazz_instanceOf(obj, Clazz_array(Short.TYPE, -1))) {
var sdata=obj;
sdata[0]=((pixel & 65535)|0);
return sdata;
} else {
var sdata=Clazz_array(Short.TYPE, -1, [($s$[0] = (pixel & 65535), $s$[0])]);
return sdata;
}case 3:
if (Clazz_instanceOf(obj, Clazz_array(Integer.TYPE, -1))) {
var idata=obj;
idata[0]=pixel;
return idata;
} else {
var idata=Clazz_array(Integer.TYPE, -1, [pixel]);
return idata;
}default:
throw Clazz_new_(Clazz_load('ClassCastException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
});

Clazz_newMeth(C$, 'coerceData$java_awt_image_WritableRaster$Z',  function (raster, isAlphaPremultiplied) {
if (!this.supportsAlpha || this.isAlphaPremultiplied$() == isAlphaPremultiplied  ) {
return this;
}var w=raster.getWidth$();
var h=raster.getHeight$();
var aIdx=this.numColorComponents;
var normAlpha;
var alphaScale=1.0 / (((1 << this.nBits[aIdx]) - 1));
var rminX=raster.getMinX$();
var rY=raster.getMinY$();
var rX;
var pixel=null;
var zpixel=null;
if (isAlphaPremultiplied) {
switch (this.transferType) {
case 0:
{
for (var y=0; y < h; y++, rY++) {
rX=rminX;
for (var x=0; x < w; x++, rX++) {
pixel=raster.getPixel$I$I$IA(rX, rY, pixel);
normAlpha=pixel[aIdx] * alphaScale;
if (normAlpha != 0.0 ) {
for (var c=0; c < aIdx; c++) {
pixel[c]=((pixel[c] * normAlpha + 0.5)|0);
}
raster.setPixel$I$I$IA(rX, rY, pixel);
} else {
if (zpixel == null ) {
zpixel=Clazz_array(Integer.TYPE, [this.numComponents]);
$I$(4).fill$IA$I(zpixel, 0);
}raster.setPixel$I$I$IA(rX, rY, zpixel);
}}
}
}break;
case 1:
{
for (var y=0; y < h; y++, rY++) {
rX=rminX;
for (var x=0; x < w; x++, rX++) {
pixel=raster.getPixel$I$I$IA(rX, rY, pixel);
normAlpha=pixel[aIdx] * alphaScale;
if (normAlpha != 0.0 ) {
for (var c=0; c < aIdx; c++) {
pixel[c]=((pixel[c] * normAlpha + 0.5)|0);
}
raster.setPixel$I$I$IA(rX, rY, pixel);
} else {
if (zpixel == null ) {
zpixel=Clazz_array(Integer.TYPE, [this.numComponents]);
$I$(4).fill$IA$I(zpixel, 0);
}raster.setPixel$I$I$IA(rX, rY, zpixel);
}}
}
}break;
case 3:
{
for (var y=0; y < h; y++, rY++) {
rX=rminX;
for (var x=0; x < w; x++, rX++) {
pixel=raster.getPixel$I$I$IA(rX, rY, pixel);
normAlpha=pixel[aIdx] * alphaScale;
if (normAlpha != 0.0 ) {
for (var c=0; c < aIdx; c++) {
pixel[c]=((pixel[c] * normAlpha + 0.5)|0);
}
raster.setPixel$I$I$IA(rX, rY, pixel);
} else {
if (zpixel == null ) {
zpixel=Clazz_array(Integer.TYPE, [this.numComponents]);
$I$(4).fill$IA$I(zpixel, 0);
}raster.setPixel$I$I$IA(rX, rY, zpixel);
}}
}
}break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
} else {
switch (this.transferType) {
case 0:
{
for (var y=0; y < h; y++, rY++) {
rX=rminX;
for (var x=0; x < w; x++, rX++) {
pixel=raster.getPixel$I$I$IA(rX, rY, pixel);
normAlpha=pixel[aIdx] * alphaScale;
if (normAlpha != 0.0 ) {
var invAlpha=1.0 / normAlpha;
for (var c=0; c < aIdx; c++) {
pixel[c]=((pixel[c] * invAlpha + 0.5)|0);
}
raster.setPixel$I$I$IA(rX, rY, pixel);
}}
}
}break;
case 1:
{
for (var y=0; y < h; y++, rY++) {
rX=rminX;
for (var x=0; x < w; x++, rX++) {
pixel=raster.getPixel$I$I$IA(rX, rY, pixel);
normAlpha=pixel[aIdx] * alphaScale;
if (normAlpha != 0 ) {
var invAlpha=1.0 / normAlpha;
for (var c=0; c < aIdx; c++) {
pixel[c]=((pixel[c] * invAlpha + 0.5)|0);
}
raster.setPixel$I$I$IA(rX, rY, pixel);
}}
}
}break;
case 3:
{
for (var y=0; y < h; y++, rY++) {
rX=rminX;
for (var x=0; x < w; x++, rX++) {
pixel=raster.getPixel$I$I$IA(rX, rY, pixel);
normAlpha=pixel[aIdx] * alphaScale;
if (normAlpha != 0 ) {
var invAlpha=1.0 / normAlpha;
for (var c=0; c < aIdx; c++) {
pixel[c]=((pixel[c] * invAlpha + 0.5)|0);
}
raster.setPixel$I$I$IA(rX, rY, pixel);
}}
}
}break;
default:
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["This method has not been " + "implemented for transferType " + this.transferType ]);
}
}return Clazz_new_(C$.c$$java_awt_color_ColorSpace$I$I$I$I$I$Z$I,[this.colorSpace, this.pixel_bits, this.maskArray[0], this.maskArray[1], this.maskArray[2], this.maskArray[3], isAlphaPremultiplied, this.transferType]);
});

Clazz_newMeth(C$, 'isCompatibleRaster$java_awt_image_Raster',  function (raster) {
var sm=raster.getSampleModel$();
var spsm;
if (Clazz_instanceOf(sm, "java.awt.image.SinglePixelPackedSampleModel")) {
spsm=sm;
} else {
return false;
}if (spsm.getNumBands$() != this.getNumComponents$()) {
return false;
}var bitMasks=spsm.getBitMasks$();
for (var i=0; i < this.numComponents; i++) {
if (bitMasks[i] != this.maskArray[i]) {
return false;
}}
return (raster.getTransferType$() == this.transferType);
});

Clazz_newMeth(C$, 'setFields',  function () {
this.red_mask=this.maskArray[0];
this.green_mask=this.maskArray[1];
this.blue_mask=this.maskArray[2];
if (this.supportsAlpha) {
this.alpha_mask=this.maskArray[3];
}}, p$1);

Clazz_newMeth(C$, 'toString',  function () {
return ("DirectColorModel: rmask=" + Integer.toHexString$I(this.red_mask) + " gmask=" + Integer.toHexString$I(this.green_mask) + " bmask=" + Integer.toHexString$I(this.blue_mask) + " amask=" + Integer.toHexString$I(this.alpha_mask) );
});
var $b$ = new Int8Array(1);
var $s$ = new Int16Array(1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ImageConsumer");

C$.$fields$=[[]
,['I',['RANDOMPIXELORDER','TOPDOWNLEFTRIGHT','COMPLETESCANLINES','SINGLEPASS','SINGLEFRAME','IMAGEERROR','SINGLEFRAMEDONE','STATICIMAGEDONE','IMAGEABORTED']]]

C$.$static$=function(){C$.$static$=0;
C$.RANDOMPIXELORDER=1;
C$.TOPDOWNLEFTRIGHT=2;
C$.COMPLETESCANLINES=4;
C$.SINGLEPASS=8;
C$.SINGLEFRAME=16;
C$.IMAGEERROR=1;
C$.SINGLEFRAMEDONE=2;
C$.STATICIMAGEDONE=3;
C$.IMAGEABORTED=4;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ImageObserver");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:15 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),p$1={};
/*c*/var C$=Clazz_newClass(P$, "PackedColorModel", null, 'java.awt.image.ColorModel');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['maskArray','int[]','+maskOffsets','scaleFactors','float[]']]]

Clazz_newMeth(C$, 'c$$java_awt_color_ColorSpace$I$IA$I$Z$I$I',  function (space, bits, colorMaskArray, alphaMask, isAlphaPremultiplied, trans, transferType) {
;C$.superclazz.c$$I$IA$java_awt_color_ColorSpace$Z$Z$I$I.apply(this,[bits, C$.createBitsArray$IA$I(colorMaskArray, alphaMask), space, (alphaMask == 0 ? false : true), isAlphaPremultiplied, trans, transferType]);C$.$init$.apply(this);
if (bits < 1 || bits > 32 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of bits must be between 1 and 32."]);
}this.maskArray=Clazz_array(Integer.TYPE, [this.numComponents]);
this.maskOffsets=Clazz_array(Integer.TYPE, [this.numComponents]);
this.scaleFactors=Clazz_array(Float.TYPE, [this.numComponents]);
for (var i=0; i < this.numColorComponents; i++) {
p$1.DecomposeMask$I$I$S.apply(this, [colorMaskArray[i], i, space.getName$I(i)]);
}
if (alphaMask != 0) {
p$1.DecomposeMask$I$I$S.apply(this, [alphaMask, this.numColorComponents, "alpha"]);
if (this.nBits[this.numComponents - 1] == 1) {
this.transparency=2;
}}}, 1);

Clazz_newMeth(C$, 'c$$java_awt_color_ColorSpace$I$I$I$I$I$Z$I$I',  function (space, bits, rmask, gmask, bmask, amask, isAlphaPremultiplied, trans, transferType) {
;C$.superclazz.c$$I$IA$java_awt_color_ColorSpace$Z$Z$I$I.apply(this,[bits, C$.createBitsArray$I$I$I$I(rmask, gmask, bmask, amask), space, (amask == 0 ? false : true), isAlphaPremultiplied, trans, transferType]);C$.$init$.apply(this);
if (space.getType$() != 5) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["ColorSpace must be TYPE_RGB."]);
}this.maskArray=Clazz_array(Integer.TYPE, [this.numComponents]);
this.maskOffsets=Clazz_array(Integer.TYPE, [this.numComponents]);
this.scaleFactors=Clazz_array(Float.TYPE, [this.numComponents]);
p$1.DecomposeMask$I$I$S.apply(this, [rmask, 0, "red"]);
p$1.DecomposeMask$I$I$S.apply(this, [gmask, 1, "green"]);
p$1.DecomposeMask$I$I$S.apply(this, [bmask, 2, "blue"]);
if (amask != 0) {
p$1.DecomposeMask$I$I$S.apply(this, [amask, 3, "alpha"]);
if (this.nBits[3] == 1) {
this.transparency=2;
}}}, 1);

Clazz_newMeth(C$, 'getMask$I',  function (index) {
return this.maskArray[index];
});

Clazz_newMeth(C$, 'getMasks$',  function () {
return this.maskArray.clone$();
});

Clazz_newMeth(C$, 'DecomposeMask$I$I$S',  function (mask, idx, componentName) {
var off=0;
var count=this.nBits[idx];
this.maskArray[idx]=mask;
if (mask != 0) {
while ((mask & 1) == 0){
mask>>>=1;
++off;
}
}if (off + count > this.pixel_bits) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[componentName + " mask " + Integer.toHexString$I(this.maskArray[idx]) + " overflows pixel (expecting " + this.pixel_bits + " bits" ]);
}this.maskOffsets[idx]=off;
if (count == 0) {
this.scaleFactors[idx]=256.0;
} else {
this.scaleFactors[idx]=255.0 / ((1 << count) - 1);
}}, p$1);

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "java.awt.image.PackedColorModel"))) {
return false;
}if (!C$.superclazz.prototype.equals$O.apply(this, [obj])) {
return false;
}var cm=obj;
var numC=cm.getNumComponents$();
if (numC != this.numComponents) {
return false;
}for (var i=0; i < numC; i++) {
if (this.maskArray[i] != cm.getMask$I(i)) {
return false;
}}
return true;
});

Clazz_newMeth(C$, 'createBitsArray$IA$I',  function (colorMaskArray, alphaMask) {
var numColors=colorMaskArray.length;
var numAlpha=(alphaMask == 0 ? 0 : 1);
var arr=Clazz_array(Integer.TYPE, [numColors + numAlpha]);
for (var i=0; i < numColors; i++) {
arr[i]=C$.countBits$I(colorMaskArray[i]);
if (arr[i] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Noncontiguous color mask (" + Integer.toHexString$I(colorMaskArray[i]) + "at index " + i ]);
}}
if (alphaMask != 0) {
arr[numColors]=C$.countBits$I(alphaMask);
if (arr[numColors] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Noncontiguous alpha mask (" + Integer.toHexString$I(alphaMask)]);
}}return arr;
}, 1);

Clazz_newMeth(C$, 'createBitsArray$I$I$I$I',  function (rmask, gmask, bmask, amask) {
var arr=Clazz_array(Integer.TYPE, [3 + (amask == 0 ? 0 : 1)]);
arr[0]=C$.countBits$I(rmask);
arr[1]=C$.countBits$I(gmask);
arr[2]=C$.countBits$I(bmask);
if (arr[0] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Noncontiguous red mask (" + Integer.toHexString$I(rmask)]);
} else if (arr[1] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Noncontiguous green mask (" + Integer.toHexString$I(gmask)]);
} else if (arr[2] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Noncontiguous blue mask (" + Integer.toHexString$I(bmask)]);
}if (amask != 0) {
arr[3]=C$.countBits$I(amask);
if (arr[3] < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Noncontiguous alpha mask (" + Integer.toHexString$I(amask)]);
}}return arr;
}, 1);

Clazz_newMeth(C$, 'countBits$I',  function (mask) {
var count=0;
if (mask != 0) {
while ((mask & 1) == 0){
mask>>>=1;
}
while ((mask & 1) == 1){
mask>>>=1;
++count;
}
}if (mask != 0) {
return -1;
}return count;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:16 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[[0,'java.awt.image.DataBufferByte','java.awt.image.DataBufferUShort','java.awt.image.DataBufferInt','java.awt.image.DataBuffer','java.awt.Point','java.awt.image.PixelInterleavedSampleModel','sun.awt.image.ByteInterleavedRaster','sun.awt.image.ShortInterleavedRaster','java.awt.image.BandedSampleModel','sun.awt.image.ByteBandedRaster','sun.awt.image.ShortBandedRaster','sun.awt.image.SunWritableRaster','java.awt.image.SinglePixelPackedSampleModel','sun.awt.image.IntegerInterleavedRaster','java.awt.image.MultiPixelPackedSampleModel','sun.awt.image.BytePackedRaster','java.awt.Rectangle']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Raster");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['minX','minY','width','height','sampleModelTranslateX','sampleModelTranslateY','numBands','numDataElements'],'O',['秘image','java.awt.image.BufferedImage','sampleModel','java.awt.image.SampleModel','dataBuffer','java.awt.image.DataBuffer','parent','java.awt.image.Raster']]]

Clazz_newMeth(C$, '秘setImage$java_awt_image_BufferedImage',  function (image) {
this.秘image=this.dataBuffer.秘image=image;
});

Clazz_newMeth(C$, 'createInterleavedRaster$I$I$I$I$java_awt_Point',  function (dataType, w, h, bands, location) {
var bandOffsets=Clazz_array(Integer.TYPE, [bands]);
for (var i=0; i < bands; i++) {
bandOffsets[i]=i;
}
return C$.createInterleavedRaster$I$I$I$I$I$IA$java_awt_Point(dataType, w, h, w * bands, bands, bandOffsets, location);
}, 1);

Clazz_newMeth(C$, 'createInterleavedRaster$I$I$I$I$I$IA$java_awt_Point',  function (dataType, w, h, scanlineStride, pixelStride, bandOffsets, location) {
var d;
var size=scanlineStride * (h - 1) + pixelStride * w;
switch (dataType) {
case 0:
d=Clazz_new_($I$(1,1).c$$I,[size]);
break;
case 1:
d=Clazz_new_($I$(2,1).c$$I,[size]);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
return C$.createInterleavedRaster$java_awt_image_DataBuffer$I$I$I$I$IA$java_awt_Point(d, w, h, scanlineStride, pixelStride, bandOffsets, location);
}, 1);

Clazz_newMeth(C$, 'createBandedRaster$I$I$I$I$java_awt_Point',  function (dataType, w, h, bands, location) {
if (bands < 1) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Number of bands (" + bands + ") must" + " be greater than 0" ]);
}var bankIndices=Clazz_array(Integer.TYPE, [bands]);
var bandOffsets=Clazz_array(Integer.TYPE, [bands]);
for (var i=0; i < bands; i++) {
bankIndices[i]=i;
bandOffsets[i]=0;
}
return C$.createBandedRaster$I$I$I$I$IA$IA$java_awt_Point(dataType, w, h, w, bankIndices, bandOffsets, location);
}, 1);

Clazz_newMeth(C$, 'createBandedRaster$I$I$I$I$IA$IA$java_awt_Point',  function (dataType, w, h, scanlineStride, bankIndices, bandOffsets, location) {
var d;
if (bankIndices == null ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Bank indices array is null"]);
}if (bandOffsets == null ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Band offsets array is null"]);
}var bands=bandOffsets.length;
var maxBank=bankIndices[0];
var maxBandOff=bandOffsets[0];
for (var i=1; i < bands; i++) {
if (bankIndices[i] > maxBank) {
maxBank=bankIndices[i];
}if (bandOffsets[i] > maxBandOff) {
maxBandOff=bandOffsets[i];
}}
var banks=maxBank + 1;
var size=maxBandOff + scanlineStride * (h - 1) + w;
switch (dataType) {
case 0:
d=Clazz_new_($I$(1,1).c$$I$I,[size, banks]);
break;
case 1:
d=Clazz_new_($I$(2,1).c$$I$I,[size, banks]);
break;
case 3:
d=Clazz_new_($I$(3,1).c$$I$I,[size, banks]);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
return C$.createBandedRaster$java_awt_image_DataBuffer$I$I$I$IA$IA$java_awt_Point(d, w, h, scanlineStride, bankIndices, bandOffsets, location);
}, 1);

Clazz_newMeth(C$, 'createPackedRaster$I$I$I$IA$java_awt_Point',  function (dataType, w, h, bandMasks, location) {
var d;
switch (dataType) {
case 0:
d=Clazz_new_($I$(1,1).c$$I,[w * h]);
break;
case 1:
d=Clazz_new_($I$(2,1).c$$I,[w * h]);
break;
case 3:
d=Clazz_new_($I$(3,1).c$$I,[w * h]);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
return C$.createPackedRaster$java_awt_image_DataBuffer$I$I$I$IA$java_awt_Point(d, w, h, w, bandMasks, location);
}, 1);

Clazz_newMeth(C$, 'createPackedRaster$I$I$I$I$I$java_awt_Point',  function (dataType, w, h, bands, bitsPerBand, location) {
var d;
if (bands <= 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of bands (" + bands + ") must be greater than 0" ]);
}if (bitsPerBand <= 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Bits per band (" + bitsPerBand + ") must be greater than 0" ]);
}if (bands != 1) {
var masks=Clazz_array(Integer.TYPE, [bands]);
var mask=(1 << bitsPerBand) - 1;
var shift=(bands - 1) * bitsPerBand;
if (shift + bitsPerBand > $I$(4).getDataTypeSize$I(dataType)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["bitsPerBand(" + bitsPerBand + ") * bands is " + " greater than data type " + "size." ]);
}switch (dataType) {
case 0:
case 1:
case 3:
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
for (var i=0; i < bands; i++) {
masks[i]=mask << shift;
shift=shift - bitsPerBand;
}
return C$.createPackedRaster$I$I$I$IA$java_awt_Point(dataType, w, h, masks, location);
} else {
var fw=w;
switch (dataType) {
case 0:
d=Clazz_new_([((Math.ceil(fw / ((8/bitsPerBand|0))))|0) * h],$I$(1,1).c$$I);
break;
case 1:
d=Clazz_new_([((Math.ceil(fw / ((16/bitsPerBand|0))))|0) * h],$I$(2,1).c$$I);
break;
case 3:
d=Clazz_new_([((Math.ceil(fw / ((32/bitsPerBand|0))))|0) * h],$I$(3,1).c$$I);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
return C$.createPackedRaster$java_awt_image_DataBuffer$I$I$I$java_awt_Point(d, w, h, bitsPerBand, location);
}}, 1);

Clazz_newMeth(C$, 'createInterleavedRaster$java_awt_image_DataBuffer$I$I$I$I$IA$java_awt_Point',  function (dataBuffer, w, h, scanlineStride, pixelStride, bandOffsets, location) {
if (dataBuffer == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["DataBuffer cannot be null"]);
}if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}var dataType=dataBuffer.getDataType$();
var csm=Clazz_new_($I$(6,1).c$$I$I$I$I$I$IA,[dataType, w, h, pixelStride, scanlineStride, bandOffsets]);
switch (dataType) {
case 0:
return Clazz_new_($I$(7,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[csm, dataBuffer, location]);
case 1:
return Clazz_new_($I$(8,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[csm, dataBuffer, location]);
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
}, 1);

Clazz_newMeth(C$, 'createBandedRaster$java_awt_image_DataBuffer$I$I$I$IA$IA$java_awt_Point',  function (dataBuffer, w, h, scanlineStride, bankIndices, bandOffsets, location) {
if (dataBuffer == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["DataBuffer cannot be null"]);
}if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}var dataType=dataBuffer.getDataType$();
var bands=bankIndices.length;
if (bandOffsets.length != bands) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["bankIndices.length != bandOffsets.length"]);
}var bsm=Clazz_new_($I$(9,1).c$$I$I$I$I$IA$IA,[dataType, w, h, scanlineStride, bankIndices, bandOffsets]);
switch (dataType) {
case 0:
return Clazz_new_($I$(10,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[bsm, dataBuffer, location]);
case 1:
return Clazz_new_($I$(11,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[bsm, dataBuffer, location]);
case 3:
return Clazz_new_($I$(12,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[bsm, dataBuffer, location]);
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
}, 1);

Clazz_newMeth(C$, 'createPackedRaster$java_awt_image_DataBuffer$I$I$I$IA$java_awt_Point',  function (dataBuffer, w, h, scanlineStride, bandMasks, location) {
if (dataBuffer == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["DataBuffer cannot be null"]);
}if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}var dataType=dataBuffer.getDataType$();
var sppsm=Clazz_new_($I$(13,1).c$$I$I$I$I$IA,[dataType, w, h, scanlineStride, bandMasks]);
switch (dataType) {
case 0:
return Clazz_new_($I$(7,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sppsm, dataBuffer, location]);
case 1:
return Clazz_new_($I$(8,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sppsm, dataBuffer, location]);
case 3:
return Clazz_new_($I$(14,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sppsm, dataBuffer, location]);
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}
}, 1);

Clazz_newMeth(C$, 'createPackedRaster$java_awt_image_DataBuffer$I$I$I$java_awt_Point',  function (dataBuffer, w, h, bitsPerPixel, location) {
if (dataBuffer == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["DataBuffer cannot be null"]);
}if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}var dataType=dataBuffer.getDataType$();
if (dataType != 0 && dataType != 1  && dataType != 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}if (dataBuffer.getNumBanks$() != 1) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["DataBuffer for packed Rasters must only have 1 bank."]);
}var mppsm=Clazz_new_($I$(15,1).c$$I$I$I$I,[dataType, w, h, bitsPerPixel]);
if (dataType == 0 && (bitsPerPixel == 1 || bitsPerPixel == 2  || bitsPerPixel == 4 ) ) {
return Clazz_new_($I$(16,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[mppsm, dataBuffer, location]);
} else {
return Clazz_new_($I$(12,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[mppsm, dataBuffer, location]);
}}, 1);

Clazz_newMeth(C$, 'createRaster$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sm, db, location) {
if ((sm == null ) || (db == null ) ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["SampleModel and DataBuffer cannot be null"]);
}if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}var dataType=sm.getDataType$();
if (Clazz_instanceOf(sm, "java.awt.image.PixelInterleavedSampleModel")) {
switch (dataType) {
case 0:
return Clazz_new_($I$(7,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
case 1:
return Clazz_new_($I$(8,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}
} else if (Clazz_instanceOf(sm, "java.awt.image.SinglePixelPackedSampleModel")) {
switch (dataType) {
case 0:
return Clazz_new_($I$(7,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
case 1:
return Clazz_new_($I$(8,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
case 3:
return Clazz_new_($I$(14,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}
} else if (Clazz_instanceOf(sm, "java.awt.image.MultiPixelPackedSampleModel") && dataType == 0  && sm.getSampleSize$I(0) < 8 ) {
return Clazz_new_($I$(16,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}, 1);

Clazz_newMeth(C$, 'createWritableRaster$java_awt_image_SampleModel$java_awt_Point',  function (sm, location) {
if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}return C$.createWritableRaster$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point(sm, sm.createDataBuffer$(), location);
}, 1);

Clazz_newMeth(C$, 'createWritableRaster$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sm, db, location) {
if ((sm == null ) || (db == null ) ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["SampleModel and DataBuffer cannot be null"]);
}if (location == null ) {
location=Clazz_new_($I$(5,1).c$$I$I,[0, 0]);
}var dataType=sm.getDataType$();
if (Clazz_instanceOf(sm, "java.awt.image.PixelInterleavedSampleModel")) {
switch (dataType) {
case 0:
return Clazz_new_($I$(7,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
case 1:
return Clazz_new_($I$(8,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}
} else if (Clazz_instanceOf(sm, "java.awt.image.SinglePixelPackedSampleModel")) {
switch (dataType) {
case 0:
return Clazz_new_($I$(7,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
case 1:
return Clazz_new_($I$(8,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
case 3:
return Clazz_new_($I$(14,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}
} else if (Clazz_instanceOf(sm, "java.awt.image.MultiPixelPackedSampleModel") && dataType == 0  && sm.getSampleSize$I(0) < 8 ) {
return Clazz_new_($I$(16,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}return Clazz_new_($I$(12,1).c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point,[sm, db, location]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_Point',  function (sampleModel, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_Raster.apply(this, [sampleModel, sampleModel.createDataBuffer$(), Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(17,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sampleModel, dataBuffer, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_Raster.apply(this, [sampleModel, dataBuffer, Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(17,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_Raster',  function (sampleModel, dataBuffer, aRegion, sampleModelTranslate, parent) {
;C$.$init$.apply(this);
if ((sampleModel == null ) || (dataBuffer == null ) || (aRegion == null ) || (sampleModelTranslate == null )  ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["SampleModel, dataBuffer, aRegion and sampleModelTranslate cannot be null"]);
}this.sampleModel=sampleModel;
this.dataBuffer=dataBuffer;
dataBuffer.秘image=this.秘image;
this.minX=aRegion.x;
this.minY=aRegion.y;
this.width=aRegion.width;
this.height=aRegion.height;
if (this.width <= 0 || this.height <= 0 ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["negative or zero " + ((this.width <= 0) ? "width" : "height")]);
}if ((this.minX + this.width) < this.minX) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["overflow condition for X coordinates of Raster"]);
}if ((this.minY + this.height) < this.minY) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["overflow condition for Y coordinates of Raster"]);
}this.sampleModelTranslateX=sampleModelTranslate.x;
this.sampleModelTranslateY=sampleModelTranslate.y;
this.numBands=sampleModel.getNumBands$();
this.numDataElements=sampleModel.getNumDataElements$();
this.parent=parent;
}, 1);

Clazz_newMeth(C$, 'getParent$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'getSampleModelTranslateX$',  function () {
return this.sampleModelTranslateX;
});

Clazz_newMeth(C$, 'getSampleModelTranslateY$',  function () {
return this.sampleModelTranslateY;
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$',  function () {
return Clazz_new_([this.sampleModel, Clazz_new_($I$(5,1).c$$I$I,[0, 0])],$I$(12,1).c$$java_awt_image_SampleModel$java_awt_Point);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$I$I',  function (w, h) {
if (w <= 0 || h <= 0 ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["negative " + ((w <= 0) ? "width" : "height")]);
}var sm=this.sampleModel.createCompatibleSampleModel$I$I(w, h);
return Clazz_new_([sm, Clazz_new_($I$(5,1).c$$I$I,[0, 0])],$I$(12,1).c$$java_awt_image_SampleModel$java_awt_Point);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$java_awt_Rectangle',  function (rect) {
if (rect == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Rect cannot be null"]);
}return this.createCompatibleWritableRaster$I$I$I$I(rect.x, rect.y, rect.width, rect.height);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$I$I$I$I',  function (x, y, w, h) {
var ret=this.createCompatibleWritableRaster$I$I(w, h);
return ret.createWritableChild$I$I$I$I$I$I$IA(0, 0, w, h, x, y, null);
});

Clazz_newMeth(C$, 'createTranslatedChild$I$I',  function (childMinX, childMinY) {
return this.createChild$I$I$I$I$I$I$IA(this.minX, this.minY, this.width, this.height, childMinX, childMinY, null);
});

Clazz_newMeth(C$, 'createChild$I$I$I$I$I$I$IA',  function (parentX, parentY, width, height, childMinX, childMinY, bandList) {
if (parentX < this.minX) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["parentX lies outside raster"]);
}if (parentY < this.minY) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["parentY lies outside raster"]);
}if ((parentX + width < parentX) || (parentX + width > this.width + this.minX) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(parentX + width) is outside raster"]);
}if ((parentY + height < parentY) || (parentY + height > this.height + this.minY) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(parentY + height) is outside raster"]);
}var subSampleModel;
if (bandList == null ) {
subSampleModel=this.sampleModel;
} else {
subSampleModel=this.sampleModel.createSubsetSampleModel$IA(bandList);
}var deltaX=childMinX - parentX;
var deltaY=childMinY - parentY;
return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_Raster,[subSampleModel, this.getDataBuffer$(), Clazz_new_($I$(17,1).c$$I$I$I$I,[childMinX, childMinY, width, height]), Clazz_new_($I$(5,1).c$$I$I,[this.sampleModelTranslateX + deltaX, this.sampleModelTranslateY + deltaY]), this]);
});

Clazz_newMeth(C$, 'getBounds$',  function () {
return Clazz_new_($I$(17,1).c$$I$I$I$I,[this.minX, this.minY, this.width, this.height]);
});

Clazz_newMeth(C$, 'getMinX$',  function () {
return this.minX;
});

Clazz_newMeth(C$, 'getMinY$',  function () {
return this.minY;
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'getNumBands$',  function () {
return this.numBands;
});

Clazz_newMeth(C$, 'getNumDataElements$',  function () {
return this.sampleModel.getNumDataElements$();
});

Clazz_newMeth(C$, 'getTransferType$',  function () {
return this.sampleModel.getTransferType$();
});

Clazz_newMeth(C$, 'getDataBuffer$',  function () {
this.dataBuffer.秘image=this.秘image;
return this.dataBuffer;
});

Clazz_newMeth(C$, 'getSampleModel$',  function () {
return this.sampleModel;
});

Clazz_newMeth(C$, 'getDataElements$I$I$O',  function (x, y, outData) {
return this.sampleModel.getDataElements$I$I$O$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, outData, this.dataBuffer);
});

Clazz_newMeth(C$, 'getDataElements$I$I$I$I$O',  function (x, y, w, h, outData) {
return this.sampleModel.getDataElements$I$I$I$I$O$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, outData, this.dataBuffer);
});

Clazz_newMeth(C$, 'getPixel$I$I$IA',  function (x, y, iArray) {
return this.sampleModel.getPixel$I$I$IA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, iArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getPixel$I$I$FA',  function (x, y, fArray) {
return this.sampleModel.getPixel$I$I$FA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, fArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getPixel$I$I$DA',  function (x, y, dArray) {
return this.sampleModel.getPixel$I$I$DA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, dArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$IA',  function (x, y, w, h, iArray) {
return this.sampleModel.getPixels$I$I$I$I$IA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, iArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$FA',  function (x, y, w, h, fArray) {
return this.sampleModel.getPixels$I$I$I$I$FA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, fArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$DA',  function (x, y, w, h, dArray) {
return this.sampleModel.getPixels$I$I$I$I$DA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, dArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getSample$I$I$I',  function (x, y, b) {
return this.sampleModel.getSample$I$I$I$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, b, this.dataBuffer);
});

Clazz_newMeth(C$, 'getSampleFloat$I$I$I',  function (x, y, b) {
return this.sampleModel.getSampleFloat$I$I$I$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, b, this.dataBuffer);
});

Clazz_newMeth(C$, 'getSampleDouble$I$I$I',  function (x, y, b) {
return this.sampleModel.getSampleDouble$I$I$I$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, b, this.dataBuffer);
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$IA',  function (x, y, w, h, b, iArray) {
return this.sampleModel.getSamples$I$I$I$I$I$IA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, b, iArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$FA',  function (x, y, w, h, b, fArray) {
return this.sampleModel.getSamples$I$I$I$I$I$FA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, b, fArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$DA',  function (x, y, w, h, b, dArray) {
return this.sampleModel.getSamples$I$I$I$I$I$DA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, b, dArray, this.dataBuffer);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:16 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "RenderedImage");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:16 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SampleModel");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['width','height','numBands','dataType'],'O',['秘pix','int[]']]]

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (dataType, w, h, numBands) {
;C$.$init$.apply(this);
var size=w * h;
if (w <= 0 || h <= 0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Width (" + w + ") and height (" + h + ") must be > 0" ]);
}if (size >= 2147483647 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Dimensions (width=" + w + " height=" + h + ") are too large" ]);
}if (dataType < 0 || (dataType > 3 && dataType != 32 ) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported dataType: " + dataType]);
}if (numBands <= 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Number of bands must be > 0"]);
}this.dataType=dataType;
this.width=w;
this.height=h;
this.numBands=numBands;
}, 1);

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

Clazz_newMeth(C$, 'getNumBands$',  function () {
return this.numBands;
});

Clazz_newMeth(C$, 'getDataType$',  function () {
return this.dataType;
});

Clazz_newMeth(C$, 'getTransferType$',  function () {
return this.dataType;
});

Clazz_newMeth(C$, 'getPixel$I$I$IA$java_awt_image_DataBuffer',  function (x, y, iArray, data) {
var pixels;
if (iArray != null ) pixels=iArray;
 else pixels=Clazz_array(Integer.TYPE, [this.numBands]);
for (var i=0; i < this.numBands; i++) {
pixels[i]=this.getSample$I$I$I$java_awt_image_DataBuffer(x, y, i, data);
}
return pixels;
});

Clazz_newMeth(C$, 'getDataElements$I$I$I$I$O$java_awt_image_DataBuffer',  function (x, y, w, h, obj, data) {
data.秘setDoCheckImage$Z(false);
var type=this.getTransferType$();
var numDataElems=this.getNumDataElements$();
var cnt=0;
var o=null;
switch (type) {
case 0:
var btemp;
var bdata;
if (obj == null ) bdata=Clazz_array(Byte.TYPE, [numDataElems * w * h ]);
 else bdata=obj;
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
o=this.getDataElements$I$I$O$java_awt_image_DataBuffer(j, i, o, data);
btemp=o;
for (var k=0; k < numDataElems; k++) {
bdata[cnt++]=btemp[k];
}
}
}
obj=bdata;
break;
case 1:
case 2:
var sdata;
var stemp;
if (obj == null ) sdata=Clazz_array(Short.TYPE, [numDataElems * w * h ]);
 else sdata=obj;
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
o=this.getDataElements$I$I$O$java_awt_image_DataBuffer(j, i, o, data);
stemp=o;
for (var k=0; k < numDataElems; k++) {
sdata[cnt++]=stemp[k];
}
}
}
obj=sdata;
break;
case 3:
var idata;
var itemp;
if (obj == null ) idata=Clazz_array(Integer.TYPE, [numDataElems * w * h ]);
 else idata=obj;
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
o=this.getDataElements$I$I$O$java_awt_image_DataBuffer(j, i, o, data);
itemp=o;
for (var k=0; k < numDataElems; k++) {
idata[cnt++]=itemp[k];
}
}
}
obj=idata;
break;
case 4:
var fdata;
var ftemp;
if (obj == null ) fdata=Clazz_array(Float.TYPE, [numDataElems * w * h ]);
 else fdata=obj;
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
o=this.getDataElements$I$I$O$java_awt_image_DataBuffer(j, i, o, data);
ftemp=o;
for (var k=0; k < numDataElems; k++) {
fdata[cnt++]=ftemp[k];
}
}
}
obj=fdata;
break;
case 5:
var ddata;
var dtemp;
if (obj == null ) ddata=Clazz_array(Double.TYPE, [numDataElems * w * h ]);
 else ddata=obj;
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
o=this.getDataElements$I$I$O$java_awt_image_DataBuffer(j, i, o, data);
dtemp=o;
for (var k=0; k < numDataElems; k++) {
ddata[cnt++]=dtemp[k];
}
}
}
obj=ddata;
break;
}
data.秘setDoCheckImage$Z(true);
return obj;
});

Clazz_newMeth(C$, 'setDataElements$I$I$I$I$O$java_awt_image_DataBuffer',  function (x, y, w, h, obj, data) {
data.秘setDoCheckImage$Z(false);
var cnt=0;
var type=this.getTransferType$();
var numDataElems=this.getNumDataElements$();
switch (type) {
case 0:
var barray=obj;
var btemp=Clazz_array(Byte.TYPE, [numDataElems]);
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
for (var k=0; k < numDataElems; k++) {
btemp[k]=barray[cnt++];
}
this.setDataElements$I$I$O$java_awt_image_DataBuffer(j, i, btemp, data);
}
}
break;
case 1:
case 2:
var sarray=obj;
var stemp=Clazz_array(Short.TYPE, [numDataElems]);
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
for (var k=0; k < numDataElems; k++) {
stemp[k]=sarray[cnt++];
}
this.setDataElements$I$I$O$java_awt_image_DataBuffer(j, i, stemp, data);
}
}
break;
case 3:
var iArray=obj;
var itemp=Clazz_array(Integer.TYPE, [numDataElems]);
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
for (var k=0; k < numDataElems; k++) {
itemp[k]=iArray[cnt++];
}
this.setDataElements$I$I$O$java_awt_image_DataBuffer(j, i, itemp, data);
}
}
break;
case 4:
var fArray=obj;
var ftemp=Clazz_array(Float.TYPE, [numDataElems]);
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
for (var k=0; k < numDataElems; k++) {
ftemp[k]=fArray[cnt++];
}
this.setDataElements$I$I$O$java_awt_image_DataBuffer(j, i, ftemp, data);
}
}
break;
case 5:
var dArray=obj;
var dtemp=Clazz_array(Double.TYPE, [numDataElems]);
for (var i=y; i < y + h; i++) {
for (var j=x; j < x + w; j++) {
for (var k=0; k < numDataElems; k++) {
dtemp[k]=dArray[cnt++];
}
this.setDataElements$I$I$O$java_awt_image_DataBuffer(j, i, dtemp, data);
}
}
break;
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'getPixel$I$I$FA$java_awt_image_DataBuffer',  function (x, y, fArray, data) {
var pixels;
if (fArray != null ) pixels=fArray;
 else pixels=Clazz_array(Float.TYPE, [this.numBands]);
for (var i=0; i < this.numBands; i++) pixels[i]=this.getSampleFloat$I$I$I$java_awt_image_DataBuffer(x, y, i, data);

return pixels;
});

Clazz_newMeth(C$, 'getPixel$I$I$DA$java_awt_image_DataBuffer',  function (x, y, dArray, data) {
var pixels;
if (dArray != null ) pixels=dArray;
 else pixels=Clazz_array(Double.TYPE, [this.numBands]);
for (var i=0; i < this.numBands; i++) pixels[i]=this.getSampleDouble$I$I$I$java_awt_image_DataBuffer(x, y, i, data);

return pixels;
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, iArray, data) {
data.秘setDoCheckImage$Z(false);
var pixels;
var Offset=0;
if (iArray != null ) pixels=iArray;
 else pixels=Clazz_array(Integer.TYPE, [this.numBands * w * h ]);
for (var i=y; i < (h + y); i++) {
for (var j=x; j < (w + x); j++) {
for (var k=0; k < this.numBands; k++) {
pixels[Offset++]=this.getSample$I$I$I$java_awt_image_DataBuffer(j, i, k, data);
}
}
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$FA$java_awt_image_DataBuffer',  function (x, y, w, h, fArray, data) {
data.秘setDoCheckImage$Z(false);
var pixels;
var Offset=0;
if (fArray != null ) pixels=fArray;
 else pixels=Clazz_array(Float.TYPE, [this.numBands * w * h ]);
for (var i=y; i < (h + y); i++) {
for (var j=x; j < (w + x); j++) {
for (var k=0; k < this.numBands; k++) {
pixels[Offset++]=this.getSampleFloat$I$I$I$java_awt_image_DataBuffer(j, i, k, data);
}
}
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$DA$java_awt_image_DataBuffer',  function (x, y, w, h, dArray, data) {
var pixels;
var Offset=0;
data.秘setDoCheckImage$Z(false);
if (dArray != null ) pixels=dArray;
 else pixels=Clazz_array(Double.TYPE, [this.numBands * w * h ]);
for (var i=y; i < (h + y); i++) {
for (var j=x; j < (w + x); j++) {
for (var k=0; k < this.numBands; k++) {
pixels[Offset++]=this.getSampleDouble$I$I$I$java_awt_image_DataBuffer(j, i, k, data);
}
}
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'getSampleFloat$I$I$I$java_awt_image_DataBuffer',  function (x, y, b, data) {
var sample;
sample=this.getSample$I$I$I$java_awt_image_DataBuffer(x, y, b, data);
return sample;
});

Clazz_newMeth(C$, 'getSampleDouble$I$I$I$java_awt_image_DataBuffer',  function (x, y, b, data) {
var sample;
sample=this.getSample$I$I$I$java_awt_image_DataBuffer(x, y, b, data);
return sample;
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, b, iArray, data) {
var pixels;
var Offset=0;
data.秘setDoCheckImage$Z(false);
if (iArray != null ) pixels=iArray;
 else pixels=Clazz_array(Integer.TYPE, [w * h]);
for (var i=y; i < (h + y); i++) {
for (var j=x; j < (w + x); j++) {
pixels[Offset++]=this.getSample$I$I$I$java_awt_image_DataBuffer(j, i, b, data);
}
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$FA$java_awt_image_DataBuffer',  function (x, y, w, h, b, fArray, data) {
var pixels;
var Offset=0;
data.秘setDoCheckImage$Z(false);
if (fArray != null ) pixels=fArray;
 else pixels=Clazz_array(Float.TYPE, [w * h]);
for (var i=y; i < (h + y); i++) {
for (var j=x; j < (w + x); j++) {
pixels[Offset++]=this.getSampleFloat$I$I$I$java_awt_image_DataBuffer(j, i, b, data);
}
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$DA$java_awt_image_DataBuffer',  function (x, y, w, h, b, dArray, data) {
var pixels;
var Offset=0;
data.秘setDoCheckImage$Z(false);
if (dArray != null ) pixels=dArray;
 else pixels=Clazz_array(Double.TYPE, [w * h]);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
pixels[Offset++]=this.getSampleDouble$I$I$I$java_awt_image_DataBuffer(j, i, b, data);
}
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'setPixel$I$I$IA$java_awt_image_DataBuffer',  function (x, y, iArray, data) {
for (var i=0; i < this.numBands; i++) this.setSample$I$I$I$I$java_awt_image_DataBuffer(x, y, i, iArray[i], data);

});

Clazz_newMeth(C$, 'setPixel$I$I$FA$java_awt_image_DataBuffer',  function (x, y, fArray, data) {
for (var i=0; i < this.numBands; i++) this.setSample$I$I$I$F$java_awt_image_DataBuffer(x, y, i, fArray[i], data);

});

Clazz_newMeth(C$, 'setPixel$I$I$DA$java_awt_image_DataBuffer',  function (x, y, dArray, data) {
for (var i=0; i < this.numBands; i++) this.setSample$I$I$I$D$java_awt_image_DataBuffer(x, y, i, dArray[i], data);

});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, iArray, data) {
var Offset=0;
data.秘setDoCheckImage$Z(false);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
for (var k=0; k < this.numBands; k++) {
this.setSample$I$I$I$I$java_awt_image_DataBuffer(j, i, k, iArray[Offset++], data);
}
}
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$FA$java_awt_image_DataBuffer',  function (x, y, w, h, fArray, data) {
var Offset=0;
data.秘setDoCheckImage$Z(false);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
for (var k=0; k < this.numBands; k++) {
this.setSample$I$I$I$F$java_awt_image_DataBuffer(j, i, k, fArray[Offset++], data);
}
}
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$DA$java_awt_image_DataBuffer',  function (x, y, w, h, dArray, data) {
var Offset=0;
data.秘setDoCheckImage$Z(false);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
for (var k=0; k < this.numBands; k++) {
this.setSample$I$I$I$D$java_awt_image_DataBuffer(j, i, k, dArray[Offset++], data);
}
}
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setSample$I$I$I$F$java_awt_image_DataBuffer',  function (x, y, b, s, data) {
var sample=(s|0);
this.setSample$I$I$I$I$java_awt_image_DataBuffer(x, y, b, sample, data);
});

Clazz_newMeth(C$, 'setSample$I$I$I$D$java_awt_image_DataBuffer',  function (x, y, b, s, data) {
var sample=(s|0);
this.setSample$I$I$I$I$java_awt_image_DataBuffer(x, y, b, sample, data);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, b, iArray, data) {
var Offset=0;
data.秘setDoCheckImage$Z(false);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
this.setSample$I$I$I$I$java_awt_image_DataBuffer(j, i, b, iArray[Offset++], data);
}
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$FA$java_awt_image_DataBuffer',  function (x, y, w, h, b, fArray, data) {
var Offset=0;
data.秘setDoCheckImage$Z(false);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
this.setSample$I$I$I$F$java_awt_image_DataBuffer(j, i, b, fArray[Offset++], data);
}
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$DA$java_awt_image_DataBuffer',  function (x, y, w, h, b, dArray, data) {
var Offset=0;
data.秘setDoCheckImage$Z(false);
for (var i=y; i < (y + h); i++) {
for (var j=x; j < (x + w); j++) {
this.setSample$I$I$I$D$java_awt_image_DataBuffer(j, i, b, dArray[Offset++], data);
}
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:16 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),p$1={},I$=[[0,'java.awt.image.DataBufferByte','java.awt.image.DataBufferUShort','java.awt.image.DataBufferInt','java.util.Arrays']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SinglePixelPackedSampleModel", null, 'java.awt.image.SampleModel');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['maxBitSize','scanlineStride'],'O',['bitMasks','int[]','+bitOffsets','+bitSizes']]]

Clazz_newMeth(C$, 'c$$I$I$I$IA',  function (dataType, w, h, bitMasks) {
C$.c$$I$I$I$I$IA.apply(this, [dataType, w, h, w, bitMasks]);
if (dataType != 0 && dataType != 1  && dataType != 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I$IA',  function (dataType, w, h, scanlineStride, bitMasks) {
;C$.superclazz.c$$I$I$I$I.apply(this,[dataType, w, h, bitMasks.length]);C$.$init$.apply(this);
if (dataType != 0 && dataType != 1  && dataType != 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unsupported data type " + dataType]);
}this.dataType=dataType;
this.bitMasks=bitMasks.clone$();
this.scanlineStride=scanlineStride;
this.bitOffsets=Clazz_array(Integer.TYPE, [this.numBands]);
this.bitSizes=Clazz_array(Integer.TYPE, [this.numBands]);
this.maxBitSize=0;
for (var i=0; i < this.numBands; i++) {
var bitOffset=0;
var bitSize=0;
var mask;
mask=bitMasks[i];
if (mask != 0) {
while ((mask & 1) == 0){
mask=mask >>> 1;
++bitOffset;
}
while ((mask & 1) == 1){
mask=mask >>> 1;
++bitSize;
}
if (mask != 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Mask " + bitMasks[i] + " must be contiguous" ]);
}}this.bitOffsets[i]=bitOffset;
this.bitSizes[i]=bitSize;
if (bitSize > this.maxBitSize) {
this.maxBitSize=bitSize;
}}
}, 1);

Clazz_newMeth(C$, 'getNumDataElements$',  function () {
return 1;
});

Clazz_newMeth(C$, 'getBufferSize',  function () {
var size=this.scanlineStride * (this.height - 1) + this.width;
return size;
}, p$1);

Clazz_newMeth(C$, 'createCompatibleSampleModel$I$I',  function (w, h) {
var sampleModel=Clazz_new_(C$.c$$I$I$I$IA,[this.dataType, w, h, this.bitMasks]);
return sampleModel;
});

Clazz_newMeth(C$, 'createDataBuffer$',  function () {
var dataBuffer=null;
var size=Long.$ival(p$1.getBufferSize.apply(this, []));
switch (this.dataType) {
case 0:
dataBuffer=Clazz_new_($I$(1,1).c$$I,[size]);
break;
case 1:
dataBuffer=Clazz_new_($I$(2,1).c$$I,[size]);
break;
case 3:
dataBuffer=Clazz_new_($I$(3,1).c$$I,[size]);
break;
}
return dataBuffer;
});

Clazz_newMeth(C$, 'getSampleSize$',  function () {
var mask;
var sampleSize=Clazz_array(Integer.TYPE, [this.numBands]);
for (var i=0; i < this.numBands; i++) {
sampleSize[i]=0;
mask=this.bitMasks[i] >>> this.bitOffsets[i];
while ((mask & 1) != 0){
++sampleSize[i];
mask=mask >>> 1;
}
}
return sampleSize;
});

Clazz_newMeth(C$, 'getSampleSize$I',  function (band) {
var sampleSize=0;
var mask=this.bitMasks[band] >>> this.bitOffsets[band];
while ((mask & 1) != 0){
++sampleSize;
mask=mask >>> 1;
}
return sampleSize;
});

Clazz_newMeth(C$, 'getOffset$I$I',  function (x, y) {
var offset=y * this.scanlineStride + x;
return offset;
});

Clazz_newMeth(C$, 'getBitOffsets$',  function () {
return this.bitOffsets.clone$();
});

Clazz_newMeth(C$, 'getBitMasks$',  function () {
return this.bitMasks.clone$();
});

Clazz_newMeth(C$, 'getScanlineStride$',  function () {
return this.scanlineStride;
});

Clazz_newMeth(C$, 'createSubsetSampleModel$IA',  function (bands) {
if (bands.length > this.numBands) throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["There are only " + this.numBands + " bands" ]);
var newBitMasks=Clazz_array(Integer.TYPE, [bands.length]);
for (var i=0; i < bands.length; i++) newBitMasks[i]=this.bitMasks[bands[i]];

return Clazz_new_(C$.c$$I$I$I$I$IA,[this.dataType, this.width, this.height, this.scanlineStride, newBitMasks]);
});

Clazz_newMeth(C$, 'getDataElements$I$I$O$java_awt_image_DataBuffer',  function (x, y, obj, data) {
if ((x < 0) || (y < 0) || (x >= this.width) || (y >= this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}data.秘setDoCheckImage$Z(false);
var type=this.getTransferType$();
switch (type) {
case 0:
var bdata;
if (obj == null ) bdata=Clazz_array(Byte.TYPE, [1]);
 else bdata=obj;
bdata[0]=(data.getElem$I(y * this.scanlineStride + x)|0);
obj=bdata;
break;
case 1:
var sdata;
if (obj == null ) sdata=Clazz_array(Short.TYPE, [1]);
 else sdata=obj;
sdata[0]=(data.getElem$I(y * this.scanlineStride + x)|0);
obj=sdata;
break;
case 3:
var idata;
if (obj == null ) idata=Clazz_array(Integer.TYPE, [1]);
 else idata=obj;
idata[0]=data.getElem$I(y * this.scanlineStride + x);
obj=idata;
break;
}
data.秘setDoCheckImage$Z(true);
return obj;
});

Clazz_newMeth(C$, 'getPixel$I$I$IA$java_awt_image_DataBuffer',  function (x, y, iArray, data) {
if ((x < 0) || (y < 0) || (x >= this.width) || (y >= this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}var pixels;
if (iArray == null ) {
pixels=Clazz_array(Integer.TYPE, [this.numBands]);
} else {
pixels=iArray;
}var value=data.getElem$I(y * this.scanlineStride + x);
for (var i=0; i < this.numBands; i++) {
pixels[i]=(value & this.bitMasks[i]) >>> this.bitOffsets[i];
}
return pixels;
});

Clazz_newMeth(C$, 'getPixels$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, iArray, data) {
if ((x < 0) || (y < 0) || (x + w > this.width) || (y + h > this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}data.秘setDoCheckImage$Z(false);
var pixels;
if (iArray != null ) {
pixels=iArray;
} else {
pixels=Clazz_array(Integer.TYPE, [w * h * this.numBands ]);
}var lineOffset=y * this.scanlineStride + x;
var dstOffset=0;
for (var i=0; i < h; i++) {
for (var j=0; j < w; j++) {
var value=data.getElem$I(lineOffset + j);
for (var k=0; k < this.numBands; k++) {
pixels[dstOffset++]=((value & this.bitMasks[k]) >>> this.bitOffsets[k]);
}
}
lineOffset+=this.scanlineStride;
}
data.秘setDoCheckImage$Z(true);
return pixels;
});

Clazz_newMeth(C$, 'getSample$I$I$I$java_awt_image_DataBuffer',  function (x, y, b, data) {
if ((x < 0) || (y < 0) || (x >= this.width) || (y >= this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}var sample=data.getElem$I(y * this.scanlineStride + x);
return ((sample & this.bitMasks[b]) >>> this.bitOffsets[b]);
});

Clazz_newMeth(C$, 'getSamples$I$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, b, iArray, data) {
if ((x < 0) || (y < 0) || (x + w > this.width) || (y + h > this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}data.秘setDoCheckImage$Z(false);
var samples;
if (iArray != null ) {
samples=iArray;
} else {
samples=Clazz_array(Integer.TYPE, [w * h]);
}var lineOffset=y * this.scanlineStride + x;
var dstOffset=0;
for (var i=0; i < h; i++) {
for (var j=0; j < w; j++) {
var value=data.getElem$I(lineOffset + j);
samples[dstOffset++]=((value & this.bitMasks[b]) >>> this.bitOffsets[b]);
}
lineOffset+=this.scanlineStride;
}
data.秘setDoCheckImage$Z(true);
return samples;
});

Clazz_newMeth(C$, 'setDataElements$I$I$O$java_awt_image_DataBuffer',  function (x, y, obj, data) {
if ((x < 0) || (y < 0) || (x >= this.width) || (y >= this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}data.秘setDoCheckImage$Z(false);
var type=this.getTransferType$();
switch (type) {
case 0:
var barray=obj;
data.setElem$I$I(y * this.scanlineStride + x, ((barray[0]|0)) & 255);
break;
case 1:
var sarray=obj;
data.setElem$I$I(y * this.scanlineStride + x, ((sarray[0]|0)) & 65535);
break;
case 3:
var iarray=obj;
data.setElem$I$I(y * this.scanlineStride + x, iarray[0]);
break;
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setPixel$I$I$IA$java_awt_image_DataBuffer',  function (x, y, iArray, data) {
if ((x < 0) || (y < 0) || (x >= this.width) || (y >= this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}var lineOffset=y * this.scanlineStride + x;
var value=data.getElem$I(lineOffset);
for (var i=0; i < this.numBands; i++) {
value&=~this.bitMasks[i];
value|=((iArray[i] << this.bitOffsets[i]) & this.bitMasks[i]);
}
data.setElem$I$I(lineOffset, value);
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, iArray, data) {
if ((x < 0) || (y < 0) || (x + w > this.width) || (y + h > this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}data.秘setDoCheckImage$Z(false);
var lineOffset=y * this.scanlineStride + x;
var srcOffset=0;
for (var i=0; i < h; i++) {
for (var j=0; j < w; j++) {
var value=data.getElem$I(lineOffset + j);
for (var k=0; k < this.numBands; k++) {
value&=~this.bitMasks[k];
var srcValue=iArray[srcOffset++];
value|=((srcValue << this.bitOffsets[k]) & this.bitMasks[k]);
}
data.setElem$I$I(lineOffset + j, value);
}
lineOffset+=this.scanlineStride;
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'setSample$I$I$I$I$java_awt_image_DataBuffer',  function (x, y, b, s, data) {
if ((x < 0) || (y < 0) || (x >= this.width) || (y >= this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}var value=data.getElem$I(y * this.scanlineStride + x);
value&=~this.bitMasks[b];
value|=(s << this.bitOffsets[b]) & this.bitMasks[b];
data.setElem$I$I(y * this.scanlineStride + x, value);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$IA$java_awt_image_DataBuffer',  function (x, y, w, h, b, iArray, data) {
if ((x < 0) || (y < 0) || (x + w > this.width) || (y + h > this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}data.秘setDoCheckImage$Z(false);
var lineOffset=y * this.scanlineStride + x;
var srcOffset=0;
for (var i=0; i < h; i++) {
for (var j=0; j < w; j++) {
var value=data.getElem$I(lineOffset + j);
value&=~this.bitMasks[b];
var sample=iArray[srcOffset++];
value|=(sample << this.bitOffsets[b]) & this.bitMasks[b];
data.setElem$I$I(lineOffset + j, value);
}
lineOffset+=this.scanlineStride;
}
data.秘setDoCheckImage$Z(true);
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if ((o == null ) || !(Clazz_instanceOf(o, "java.awt.image.SinglePixelPackedSampleModel")) ) {
return false;
}var that=o;
return this.width == that.width && this.height == that.height  && this.numBands == that.numBands  && this.dataType == that.dataType  && $I$(4).equals$IA$IA(this.bitMasks, that.bitMasks)  && $I$(4).equals$IA$IA(this.bitOffsets, that.bitOffsets)  && $I$(4).equals$IA$IA(this.bitSizes, that.bitSizes)  && this.maxBitSize == that.maxBitSize  && this.scanlineStride == that.scanlineStride ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var hash=0;
hash=this.width;
hash<<=8;
hash^=this.height;
hash<<=8;
hash^=this.numBands;
hash<<=8;
hash^=this.dataType;
hash<<=8;
for (var i=0; i < this.bitMasks.length; i++) {
hash^=this.bitMasks[i];
hash<<=8;
}
for (var i=0; i < this.bitOffsets.length; i++) {
hash^=this.bitOffsets[i];
hash<<=8;
}
for (var i=0; i < this.bitSizes.length; i++) {
hash^=this.bitSizes[i];
hash<<=8;
}
hash^=this.maxBitSize;
hash<<=8;
hash^=this.scanlineStride;
return hash;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:16 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.image"),I$=[[0,'java.awt.Rectangle','java.awt.Point',['sun.java2d.StateTrackable','.State'],'sun.java2d.StateTrackableDelegate']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "WritableRaster", null, 'java.awt.image.Raster');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_Point',  function (sampleModel, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster.apply(this, [sampleModel, sampleModel.createDataBuffer$(), Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(1,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sampleModel, dataBuffer, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster.apply(this, [sampleModel, dataBuffer, Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(1,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster',  function (sampleModel, dataBuffer, aRegion, sampleModelTranslate, parent) {
;C$.superclazz.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_Raster.apply(this,[sampleModel, dataBuffer, aRegion, sampleModelTranslate, parent]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getWritableParent$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'createWritableTranslatedChild$I$I',  function (childMinX, childMinY) {
return this.createWritableChild$I$I$I$I$I$I$IA(this.minX, this.minY, this.width, this.height, childMinX, childMinY, null);
});

Clazz_newMeth(C$, 'createWritableChild$I$I$I$I$I$I$IA',  function (parentX, parentY, w, h, childMinX, childMinY, bandList) {
if (parentX < this.minX) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["parentX lies outside raster"]);
}if (parentY < this.minY) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["parentY lies outside raster"]);
}if ((parentX + w < parentX) || (parentX + w > this.width + this.minX) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(parentX + width) is outside raster"]);
}if ((parentY + h < parentY) || (parentY + h > this.height + this.minY) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(parentY + height) is outside raster"]);
}var sm;
if (bandList != null ) {
sm=this.sampleModel.createSubsetSampleModel$IA(bandList);
} else {
sm=this.sampleModel;
}var deltaX=childMinX - parentX;
var deltaY=childMinY - parentY;
return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster,[sm, this.getDataBuffer$(), Clazz_new_($I$(1,1).c$$I$I$I$I,[childMinX, childMinY, w, h]), Clazz_new_($I$(2,1).c$$I$I,[this.sampleModelTranslateX + deltaX, this.sampleModelTranslateY + deltaY]), this]);
});

Clazz_newMeth(C$, 'setDataElements$I$I$O',  function (x, y, inData) {
this.sampleModel.setDataElements$I$I$O$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, inData, this.dataBuffer);
});

Clazz_newMeth(C$, 'setDataElements$I$I$java_awt_image_Raster',  function (x, y, inRaster) {
var dstOffX=x + inRaster.getMinX$();
var dstOffY=y + inRaster.getMinY$();
var width=inRaster.getWidth$();
var height=inRaster.getHeight$();
if ((dstOffX < this.minX) || (dstOffY < this.minY) || (dstOffX + width > this.minX + this.width) || (dstOffY + height > this.minY + this.height)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}var srcOffX=inRaster.getMinX$();
var srcOffY=inRaster.getMinY$();
var tdata=null;
for (var startY=0; startY < height; startY++) {
tdata=inRaster.getDataElements$I$I$I$I$O(srcOffX, srcOffY + startY, width, 1, tdata);
this.setDataElements$I$I$I$I$O(dstOffX, dstOffY + startY, width, 1, tdata);
}
});

Clazz_newMeth(C$, 'setDataElements$I$I$I$I$O',  function (x, y, w, h, inData) {
this.sampleModel.setDataElements$I$I$I$I$O$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, inData, this.dataBuffer);
});

Clazz_newMeth(C$, 'setRect$java_awt_image_Raster',  function (srcRaster) {
this.setRect$I$I$java_awt_image_Raster(0, 0, srcRaster);
});

Clazz_newMeth(C$, 'setRect$I$I$java_awt_image_Raster',  function (dx, dy, srcRaster) {
this.dataBuffer.秘checkImage$();
var width=srcRaster.getWidth$();
var height=srcRaster.getHeight$();
var srcOffX=srcRaster.getMinX$();
var srcOffY=srcRaster.getMinY$();
var dstOffX=dx + srcOffX;
var dstOffY=dy + srcOffY;
if (dstOffX < this.minX) {
var skipX=this.minX - dstOffX;
width-=skipX;
srcOffX+=skipX;
dstOffX=this.minX;
}if (dstOffY < this.minY) {
var skipY=this.minY - dstOffY;
height-=skipY;
srcOffY+=skipY;
dstOffY=this.minY;
}if (dstOffX + width > this.minX + this.width) {
width=this.minX + this.width - dstOffX;
}if (dstOffY + height > this.minY + this.height) {
height=this.minY + this.height - dstOffY;
}if (width <= 0 || height <= 0 ) {
return;
}switch (srcRaster.getSampleModel$().getDataType$()) {
case 0:
case 2:
case 1:
case 3:
var iData=null;
for (var startY=0; startY < height; startY++) {
iData=srcRaster.getPixels$I$I$I$I$IA(srcOffX, srcOffY + startY, width, 1, iData);
this.setPixels$I$I$I$I$IA(dstOffX, dstOffY + startY, width, 1, iData);
}
break;
case 4:
var fData=null;
for (var startY=0; startY < height; startY++) {
fData=srcRaster.getPixels$I$I$I$I$FA(srcOffX, srcOffY + startY, width, 1, fData);
this.setPixels$I$I$I$I$FA(dstOffX, dstOffY + startY, width, 1, fData);
}
break;
case 5:
var dData=null;
for (var startY=0; startY < height; startY++) {
dData=srcRaster.getPixels$I$I$I$I$DA(srcOffX, srcOffY + startY, width, 1, dData);
this.setPixels$I$I$I$I$DA(dstOffX, dstOffY + startY, width, 1, dData);
}
break;
}
});

Clazz_newMeth(C$, 'setPixel$I$I$IA',  function (x, y, iArray) {
this.sampleModel.setPixel$I$I$IA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, iArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setPixel$I$I$FA',  function (x, y, fArray) {
this.sampleModel.setPixel$I$I$FA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, fArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setPixel$I$I$DA',  function (x, y, dArray) {
this.sampleModel.setPixel$I$I$DA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, dArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$IA',  function (x, y, w, h, iArray) {
this.sampleModel.setPixels$I$I$I$I$IA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, iArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$FA',  function (x, y, w, h, fArray) {
this.sampleModel.setPixels$I$I$I$I$FA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, fArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$DA',  function (x, y, w, h, dArray) {
this.sampleModel.setPixels$I$I$I$I$DA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, dArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setSample$I$I$I$I',  function (x, y, b, s) {
this.sampleModel.setSample$I$I$I$I$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, b, s, this.dataBuffer);
});

Clazz_newMeth(C$, 'setSample$I$I$I$F',  function (x, y, b, s) {
this.sampleModel.setSample$I$I$I$F$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, b, s, this.dataBuffer);
});

Clazz_newMeth(C$, 'setSample$I$I$I$D',  function (x, y, b, s) {
this.sampleModel.setSample$I$I$I$D$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, b, s, this.dataBuffer);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$IA',  function (x, y, w, h, b, iArray) {
this.sampleModel.setSamples$I$I$I$I$I$IA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, b, iArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$FA',  function (x, y, w, h, b, fArray) {
this.sampleModel.setSamples$I$I$I$I$I$FA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, b, fArray, this.dataBuffer);
});

Clazz_newMeth(C$, 'setSamples$I$I$I$I$I$DA',  function (x, y, w, h, b, dArray) {
this.sampleModel.setSamples$I$I$I$I$I$DA$java_awt_image_DataBuffer(x - this.sampleModelTranslateX, y - this.sampleModelTranslateY, w, h, b, dArray, this.dataBuffer);
});

Clazz_newMeth(C$, '秘setStable$Z',  function (stable) {
if (this.dataBuffer.theTrackable.getState$() !== $I$(3).STABLE ) this.dataBuffer.theTrackable=$I$(4,"createInstance$sun_java2d_StateTrackable_State",[$I$(3).STABLE]);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:16 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ComponentPeer");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ContainerPeer", null, null, 'java.awt.peer.ComponentPeer');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "FramePeer", null, null, 'java.awt.peer.WindowPeer');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "KeyboardFocusManagerPeer");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "LightweightPeer", null, null, 'java.awt.peer.ComponentPeer');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.awt.peer"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "WindowPeer", null, null, 'java.awt.peer.ContainerPeer');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.beans"),I$=[[0,'java.util.HashMap','java.util.ArrayList','java.util.Collections']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ChangeListenerMap");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['map','java.util.Map']]]

Clazz_newMeth(C$, 'add$S$java_util_EventListener',  function (name, listener) {
if (this.map == null ) {
this.map=Clazz_new_($I$(1,1));
}var array=this.map.get$O(name);
var size=(array != null ) ? array.length : 0;
var clone=this.newArray$I(size + 1);
clone[size]=listener;
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, clone, 0, size);
}this.map.put$O$O(name, clone);
});

Clazz_newMeth(C$, 'remove$S$java_util_EventListener',  function (name, listener) {
if (this.map != null ) {
var array=this.map.get$O(name);
if (array != null ) {
for (var i=0; i < array.length; i++) {
if (listener.equals$O(array[i])) {
var size=array.length - 1;
if (size > 0) {
var clone=this.newArray$I(size);
System.arraycopy$O$I$O$I$I(array, 0, clone, 0, i);
System.arraycopy$O$I$O$I$I(array, i + 1, clone, i, size - i);
this.map.put$O$O(name, clone);
} else {
this.map.remove$O(name);
if (this.map.isEmpty$()) {
this.map=null;
}}break;
}}
}}});

Clazz_newMeth(C$, 'get$S',  function (name) {
return (this.map != null ) ? this.map.get$O(name) : null;
});

Clazz_newMeth(C$, 'set$S$java_util_EventListenerA',  function (name, listeners) {
if (listeners != null ) {
if (this.map == null ) {
this.map=Clazz_new_($I$(1,1));
}this.map.put$O$O(name, listeners);
} else if (this.map != null ) {
this.map.remove$O(name);
if (this.map.isEmpty$()) {
this.map=null;
}}});

Clazz_newMeth(C$, 'getListeners$',  function () {
if (this.map == null ) {
return this.newArray$I(0);
}var list=Clazz_new_($I$(2,1));
var listeners=this.map.get$O(null);
if (listeners != null ) {
for (var listener, $listener = 0, $$listener = listeners; $listener<$$listener.length&&((listener=($$listener[$listener])),1);$listener++) {
list.add$O(listener);
}
}for (var entry, $entry = this.map.entrySet$().iterator$(); $entry.hasNext$()&&((entry=($entry.next$())),1);) {
var name=entry.getKey$();
if (name != null ) {
for (var listener, $listener = 0, $$listener = entry.getValue$(); $listener<$$listener.length&&((listener=($$listener[$listener])),1);$listener++) {
list.add$O(this.newProxy$S$java_util_EventListener(name, listener));
}
}}
return list.toArray$OA(this.newArray$I(list.size$()));
});

Clazz_newMeth(C$, 'getListeners$S',  function (name) {
if (name != null ) {
var listeners=this.get$S(name);
if (listeners != null ) {
return listeners.clone$();
}}return this.newArray$I(0);
});

Clazz_newMeth(C$, 'hasListeners$S',  function (name) {
if (this.map == null ) {
return false;
}var array=this.map.get$O(null);
return (array != null ) || ((name != null ) && (null != this.map.get$O(name) ) ) ;
});

Clazz_newMeth(C$, 'getEntries$',  function () {
return (this.map != null ) ? this.map.entrySet$() : $I$(3).emptySet$();
});

Clazz_newMeth(C$, 'extract$java_util_EventListener',  function (listener) {
while (Clazz_instanceOf(listener, "java.util.EventListenerProxy")){
var proxy=listener;
listener=proxy.getListener$();
}
return listener;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.beans"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "PropertyChangeEvent", null, 'java.util.EventObject');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['propertyName'],'O',['newValue','java.lang.Object','+oldValue','+propagationId']]]

Clazz_newMeth(C$, 'c$$O$S$O$O',  function (source, propertyName, oldValue, newValue) {
;C$.superclazz.c$$O.apply(this,[source]);C$.$init$.apply(this);
this.propertyName=propertyName;
this.newValue=newValue;
this.oldValue=oldValue;
}, 1);

Clazz_newMeth(C$, 'getPropertyName$',  function () {
return this.propertyName;
});

Clazz_newMeth(C$, 'getNewValue$',  function () {
return this.newValue;
});

Clazz_newMeth(C$, 'getOldValue$',  function () {
return this.oldValue;
});

Clazz_newMeth(C$, 'setPropagationId$O',  function (propagationId) {
this.propagationId=propagationId;
});

Clazz_newMeth(C$, 'getPropagationId$',  function () {
return this.propagationId;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.beans"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "PropertyChangeListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.beans"),p$1={},I$=[[0,'java.beans.PropertyChangeListener','java.beans.PropertyChangeListenerProxy',['java.beans.PropertyChangeSupport','.PropertyChangeListenerMap'],'java.beans.PropertyChangeEvent','java.beans.IndexedPropertyChangeEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PropertyChangeSupport", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['PropertyChangeListenerMap',26]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.map=Clazz_new_($I$(3,1));
this.doDebug=false;
this.debugTarget=null;
},1);

C$.$fields$=[['Z',['doDebug'],'S',['debugTarget'],'O',['map','java.beans.PropertyChangeSupport.PropertyChangeListenerMap','source','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$O',  function (sourceBean) {
;C$.$init$.apply(this);
if (sourceBean == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}this.source=sourceBean;
this.doDebug=(this.debugTarget != null  && this.source.getClass$().getName$().indexOf$S(this.debugTarget) >= 0 );
}, 1);

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (listener == null ) {
return;
}if (Clazz_instanceOf(listener, "java.beans.PropertyChangeListenerProxy")) {
var proxy=listener;
this.addPropertyChangeListener$S$java_beans_PropertyChangeListener(proxy.getPropertyName$(), proxy.getListener$());
} else {
this.map.add$S$java_util_EventListener(null, listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (listener == null ) {
return;
}if (Clazz_instanceOf(listener, "java.beans.PropertyChangeListenerProxy")) {
var proxy=listener;
this.removePropertyChangeListener$S$java_beans_PropertyChangeListener(proxy.getPropertyName$(), proxy.getListener$());
} else {
this.map.remove$S$java_util_EventListener(null, listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
return this.map.getListeners$();
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
if (listener == null  || propertyName == null  ) {
return;
}if (this.doDebug) {
var target=listener.getClass$().getName$();
if (target.indexOf$S(this.debugTarget) >= 0) System.out.println$S("PropChangeSupport adding " + this.source.getClass$().getSimpleName$() + " " + propertyName + " for " + listener.getClass$().getSimpleName$() );
}listener=this.map.extract$java_util_EventListener(listener);
if (listener != null ) {
this.map.add$S$java_util_EventListener(propertyName, listener);
}});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
if (listener == null  || propertyName == null  ) {
return;
}listener=this.map.extract$java_util_EventListener(listener);
if (listener != null ) {
this.map.remove$S$java_util_EventListener(propertyName, listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S',  function (propertyName) {
return this.map.getListeners$S(propertyName);
});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O',  function (propertyName, oldValue, newValue) {
if (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) {
return;
}this.firePropertyChange$java_beans_PropertyChangeEvent(Clazz_new_($I$(4,1).c$$O$S$O$O,[this.source, propertyName, oldValue, newValue]));
});

Clazz_newMeth(C$, 'firePropertyChange$S$I$I',  function (propertyName, oldValue, newValue) {
if (oldValue == newValue) {
return;
}this.firePropertyChange$S$O$O(propertyName, Integer.valueOf$I(oldValue), Integer.valueOf$I(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$S$Z$Z',  function (propertyName, oldValue, newValue) {
if (oldValue == newValue ) {
return;
}this.firePropertyChange$S$O$O(propertyName, Boolean.valueOf$Z(oldValue), Boolean.valueOf$Z(newValue));
});

Clazz_newMeth(C$, 'firePropertyChange$java_beans_PropertyChangeEvent',  function (evt) {
var oldValue=evt.getOldValue$();
var newValue=evt.getNewValue$();
var propertyName=evt.getPropertyName$();
if (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) {
return;
}var common=this.map.get$S(null);
var named=(propertyName != null ) ? this.map.get$S(propertyName) : null;
p$1.fire$java_beans_PropertyChangeListenerA$java_beans_PropertyChangeEvent.apply(this, [common, evt]);
p$1.fire$java_beans_PropertyChangeListenerA$java_beans_PropertyChangeEvent.apply(this, [named, evt]);
});

Clazz_newMeth(C$, 'fire$java_beans_PropertyChangeListenerA$java_beans_PropertyChangeEvent',  function (listeners, event) {
if (listeners != null ) {
for (var i=0, n=listeners.length; i < n; i++) {
if (this.doDebug) {
var target=listeners[i].getClass$().getName$();
if (target.indexOf$S(this.debugTarget) >= 0) System.out.println$S("PChS firing " + this.source.getClass$().getSimpleName$() + " " + event.getPropertyName$() + " to " + listeners[i].getClass$().getSimpleName$() );
}listeners[i].propertyChange$java_beans_PropertyChangeEvent(event);
}
}}, p$1);

Clazz_newMeth(C$, 'fireIndexedPropertyChange$S$I$O$O',  function (propertyName, index, oldValue, newValue) {
this.firePropertyChange$java_beans_PropertyChangeEvent(Clazz_new_($I$(5,1).c$$O$S$O$O$I,[this.source, propertyName, oldValue, newValue, index]));
});

Clazz_newMeth(C$, 'fireIndexedPropertyChange$S$I$I$I',  function (propertyName, index, oldValue, newValue) {
if (oldValue == newValue) {
return;
}this.fireIndexedPropertyChange$S$I$O$O(propertyName, index, Integer.valueOf$I(oldValue), Integer.valueOf$I(newValue));
});

Clazz_newMeth(C$, 'fireIndexedPropertyChange$S$I$Z$Z',  function (propertyName, index, oldValue, newValue) {
if (oldValue == newValue ) {
return;
}this.fireIndexedPropertyChange$S$I$O$O(propertyName, index, Boolean.valueOf$Z(oldValue), Boolean.valueOf$Z(newValue));
});

Clazz_newMeth(C$, 'hasListeners$S',  function (propertyName) {
return this.map.hasListeners$S(propertyName);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.PropertyChangeSupport, "PropertyChangeListenerMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.beans.ChangeListenerMap');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['EMPTY','java.beans.PropertyChangeListener[]']]]

Clazz_newMeth(C$, 'newArray$I',  function (length) {
return (0 < length) ? Clazz_array($I$(1), [length]) : C$.EMPTY;
});

Clazz_newMeth(C$, ['newProxy$S$java_beans_PropertyChangeListener','newProxy$S$java_util_EventListener'],  function (name, listener) {
return Clazz_new_($I$(2,1).c$$S$java_beans_PropertyChangeListener,[name, listener]);
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY=Clazz_array($I$(1), -1, []);
};

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:17 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,p$1={};
/*c*/var C$=Clazz_newClass(P$, "AbstractStringBuilder", null, null, ['Appendable', 'CharSequence']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['秘s']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (capacity) {
;C$.$init$.apply(this);
this.秘s="";
}, 1);

Clazz_newMeth(C$, 'length$',  function () {
return this.秘s.length$();
});

Clazz_newMeth(C$, 'capacity$',  function () {
return 2147483647;
});

Clazz_newMeth(C$, 'ensureCapacity$I',  function (minimumCapacity) {
});

Clazz_newMeth(C$, 'ensureCapacityInternal$I',  function (minimumCapacity) {
}, p$1);

Clazz_newMeth(C$, 'expandCapacity$I',  function (minimumCapacity) {
});

Clazz_newMeth(C$, 'trimToSize$',  function () {
});

Clazz_newMeth(C$, 'setLength$I',  function (newLength) {
if (newLength < 0) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[newLength]);
p$1.ensureCapacityInternal$I.apply(this, [newLength]);
if (this.秘s.length$() > newLength) this.秘s=this.秘s.substring$I$I(0, newLength);
});

Clazz_newMeth(C$, 'charAt$I',  function (index) {
if ((index < 0) || (index >= this.秘s.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);
return this.秘s.charAt$I(index);
});

Clazz_newMeth(C$, 'codePointAt$I',  function (index) {
if ((index < 0) || (index >= this.秘s.length$()) ) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);
}return this.秘s.codePointAt$I(index);
});

Clazz_newMeth(C$, 'codePointBefore$I',  function (index) {
var i=index - 1;
if ((i < 0) || (i >= this.秘s.length$()) ) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);
}return this.秘s.codePointAt$I(i);
});

Clazz_newMeth(C$, 'codePointCount$I$I',  function (beginIndex, endIndex) {
if (beginIndex < 0 || endIndex > this.秘s.length$()  || beginIndex > endIndex ) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException'));
}return endIndex - beginIndex;
});

Clazz_newMeth(C$, 'offsetByCodePoints$I$I',  function (index, codePointOffset) {
if (index < 0 || index + codePointOffset > this.秘s.length$() ) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException'));
}return index + codePointOffset;
});

Clazz_newMeth(C$, 'getChars$I$I$CA$I',  function (srcBegin, srcEnd, dst, pt) {
if (srcBegin < 0) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[srcBegin]);
if ((srcEnd < 0) || (srcEnd > this.秘s.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[srcEnd]);
if (srcBegin > srcEnd || pt < 0  || pt + (srcEnd - srcBegin) > dst.length ) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$S,[srcBegin > srcEnd ? "srcBegin > srcEnd" : pt < 0 ? "pt < 0" : "pt + len > dst.length"]);
}var s=this.秘s;
for (var i=srcBegin; i < srcEnd; i++) {

dst[pt++] = s[i];
}
});

Clazz_newMeth(C$, 'setCharAt$I$C',  function (index, ch) {
if ((index < 0) || (index >= this.秘s.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);

this.秘s = this.秘s.substring(0, index) + ch + this.秘s.substring(index + 1);
});

Clazz_newMeth(C$, 'append$O',  function (obj) {

this.秘s += (obj == null ? null : obj.toString());
return this;
});

Clazz_newMeth(C$, 'append$S',  function (str) {

this.秘s += str;
return this;
});

Clazz_newMeth(C$, 'append$StringBuffer',  function (sb) {
if (sb == null ) return this.appendNull$();

this.秘s += sb.秘s;
return this;
});

Clazz_newMeth(C$, 'append$AbstractStringBuilder',  function (asb) {
if (asb == null ) return this.appendNull$();
return this.append$S(asb.toString());
});

Clazz_newMeth(C$, 'append$CharSequence',  function (s) {
if (s == null ) return this.appendNull$();
if (Clazz_instanceOf(s, "java.lang.String")) return this.append$S(s);
if (Clazz_instanceOf(s, "java.lang.AbstractStringBuilder")) return this.append$S((s).toString());
return this.append$S(s.toString());
});

Clazz_newMeth(C$, 'appendNull$',  function () {

this.秘s += "null";
return this;
});

Clazz_newMeth(C$, 'append$CharSequence$I$I',  function (cs, start, end) {
if (cs == null ) cs="null";
if ((start < 0) || (start > end) || (end > cs.length$())  ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["start " + start + ", end " + end + ", s.length() " + cs.length$() ]);
if (Clazz_instanceOf(cs, "java.lang.String")) {
return this.append$S((cs).substring$I$I(start, end));
}if (Clazz_instanceOf(cs, "java.lang.AbstractStringBuilder")) {
return this.append$S((cs).substring$I$I(start, end));
}for (var i=start; i < end; i++) {
var c=cs.charAt$I(i);

this.秘s += c;
}
return this;
});

Clazz_newMeth(C$, 'append$CA',  function (str) {

this.秘s += str.join("");
return this;
});

Clazz_newMeth(C$, 'append$CA$I$I',  function (str, offset, len) {

this.秘s += str.slice(offset, offset + len).join("");
return this;
});

Clazz_newMeth(C$, 'append$Z',  function (b) {

this.秘s += b;
return this;
});

Clazz_newMeth(C$, 'append$C',  function (c) {

this.秘s += c;
return this;
});

Clazz_newMeth(C$, 'append$I',  function (i) {

this.秘s += i;
return this;
});

Clazz_newMeth(C$, 'append$J',  function (l) {
var s=Long.toString$J(l);

this.秘s += s;
return this;
});

Clazz_newMeth(C$, 'append$F',  function (f) {

this.秘s += f;
return this;
});

Clazz_newMeth(C$, 'append$D',  function (d) {

this.秘s += d;
return this;
});

Clazz_newMeth(C$, 'delete$I$I',  function (start, end) {
if (start < 0) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[start]);
if (end > this.秘s.length$()) end=this.秘s.length$();
if (start > end) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException'));

this.秘s = this.秘s.substring(0, start)+this.秘s.substring(end);
return this;
});

Clazz_newMeth(C$, 'appendCodePoint$I',  function (c) {
try {

this.秘s += String.fromCodePoint(c);
} catch (t) {
throw Clazz_new_(Clazz_load('IllegalArgumentException'));
}
return this;
});

Clazz_newMeth(C$, 'deleteCharAt$I',  function (index) {
if ((index < 0) || (index >= this.秘s.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);

this.秘s = this.秘s.substring(0, index) + this.秘s.substring(index + 1);
return this;
});

Clazz_newMeth(C$, 'replace$I$I$S',  function (start, end, str) {
if (start < 0) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[start]);
var len=this.秘s.length$();
if (start > len) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$S,["start > length()"]);
if (start > end) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$S,["start > end"]);
if (end > len) end=len;

this.秘s = this.秘s.substring(0, start) + str + this.秘s.substring(end);
return this;
});

Clazz_newMeth(C$, 'substring$I',  function (start) {
return this.substring$I$I(start, this.秘s.length$());
});

Clazz_newMeth(C$, 'subSequence$I$I',  function (start, end) {
return this.substring$I$I(start, end);
});

Clazz_newMeth(C$, 'substring$I$I',  function (start, end) {
if (start < 0) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[start]);
if (end > this.秘s.length$()) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[end]);
if (start > end) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[end - start]);
{
return this.秘s.substring(start, end);
}
});

Clazz_newMeth(C$, 'insert$I$CA$I$I',  function (index, str, offset, len) {
if ((index < 0) || (index > this.秘s.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);
if ((offset < 0) || (len < 0) || (offset + len > str.length)  ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$S,["offset " + offset + ", len " + len + ", str.length " + str.length ]);

this.秘s = this.秘s.substring(0, index) + str.slice(offset, offset + len).join("") + this.秘s.substring(index);
return this;
});

Clazz_newMeth(C$, 'insert$I$O',  function (index, obj) {
return this.insert$I$S(index, "" + obj);
});

Clazz_newMeth(C$, 'insert$I$S',  function (index, str) {
if ((index < 0) || (index > this.秘s.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);
if (str == null ) str="null";

this.秘s = this.秘s.substring(0, index) + str + this.秘s.substring(index);
return this;
});

Clazz_newMeth(C$, 'insert$I$CA',  function (index, str) {
if ((index < 0) || (index > this.length$()) ) throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);

this.秘s = this.秘s.substring(0, index) + str.join() + this.秘s.substring(index);
return this;
});

Clazz_newMeth(C$, 'insert$I$CharSequence',  function (index, s) {
if (s == null ) s="null";
if (Clazz_instanceOf(s, "java.lang.String")) return this.insert$I$S(index, s);
if (Clazz_instanceOf(s, "java.lang.AbstractStringBuilder")) return this.insert$I$S(index, (s).toString());
return this.insert$I$CharSequence$I$I(index, s, 0, s.length$());
});

Clazz_newMeth(C$, 'insert$I$CharSequence$I$I',  function (index, cs, start, end) {
if (cs == null ) cs="null";
if ((index < 0) || (index > this.length$()) ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["index " + index]);
if ((start < 0) || (end < 0) || (start > end) || (end > cs.length$())  ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["start " + start + ", end " + end + ", s.length() " + cs.length$() ]);
if (Clazz_instanceOf(cs, "java.lang.String")) return this.insert$I$S(index, (cs).substring$I$I(start, end));
if (Clazz_instanceOf(cs, "java.lang.AbstractStringBuilder")) return this.insert$I$S(index, (cs).substring$I$I(start, end));
var c=Clazz_array(Character.TYPE, [end - start]);
for (var i=start, pt=0; i < end; i++) c[pt++]=cs.charAt$I(i);

return this.insert$I$CA(index, c);
});

Clazz_newMeth(C$, 'insert$I$Z',  function (index, b) {
return this.insert$I$S(index, b ? "true" : "false");
});

Clazz_newMeth(C$, 'insert$I$C',  function (index, c) {

this.秘s = this.秘s.substring(0, index) + c + this.秘s.substring(index);
return this;
});

Clazz_newMeth(C$, 'insert$I$I',  function (index, i) {
return this.insert$I$S(index, "" + i);
});

Clazz_newMeth(C$, 'insert$I$J',  function (index, l) {
return this.insert$I$S(index, "" + Long.$s(l));
});

Clazz_newMeth(C$, 'insert$I$F',  function (index, f) {
return this.insert$I$S(index, "" + new Float(f).toString());
});

Clazz_newMeth(C$, 'insert$I$D',  function (index, d) {
return this.insert$I$S(index, "" + new Double(d).toString());
});

Clazz_newMeth(C$, 'indexOf$S',  function (str) {
return this.indexOf$S$I(str, 0);
});

Clazz_newMeth(C$, 'indexOf$S$I',  function (str, fromIndex) {
{
return this.秘s.indexOf(str, fromIndex);
}
});

Clazz_newMeth(C$, 'lastIndexOf$S',  function (str) {
return this.lastIndexOf$S$I(str, this.秘s.length$());
});

Clazz_newMeth(C$, 'lastIndexOf$S$I',  function (str, fromIndex) {
{
return this.秘s.lastIndexOf(str, fromIndex);
}
});

Clazz_newMeth(C$, 'reverse$',  function () {

this.秘s.split("").reverse().join("");
return this;
});

Clazz_newMeth(C$, 'getValue$',  function () {
{
return this.秘s.split("");
}
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,p$1={},I$=[[0,'java.lang.reflect.Method','java.util.Arrays','Class','java.util.Collections','java.util.ArrayList','sun.misc.CompoundEnumeration','java.util.Enumeration','java.lang.reflect.TypeVariable','swingjs.JSUtil','java.lang.reflect.Field','java.lang.reflect.Constructor','java.net.URL','java.io.File',['sun.reflect.annotation.AnnotationParser','.JSAnnotationObject'],'Void','java.util.HashMap','java.util.Objects','sun.reflect.annotation.AnnotationParser','sun.reflect.annotation.AnnotationSupport','sun.reflect.annotation.AnnotationType','java.util.LinkedHashMap',['Class','.AnnotationData'],'Package','java.util.stream.Collectors','java.lang.annotation.Annotation','java.util.function.Function']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Class", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['MethodArray',8],['AnnotationData',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.modifiers=-1;
this.fieldAnnMap=null;
this.enumConstants=null;
this.enumConstantDirectory=null;
},1);

C$.$fields$=[['I',['modifiers'],'S',['name'],'O',['$clazz$','java.lang.Object','$methodList$','String[]','fields','java.lang.reflect.Field[]','implementz','Class[]','fieldAnnMap','java.util.Map','declaredFields','java.lang.reflect.Field[]','$members$','java.lang.reflect.Method[]','$constructors$','java.lang.reflect.Constructor[]','enumConstants','_.T[]','enumConstantDirectory','java.util.Map','annotationData','Class.AnnotationData','annotationType','sun.reflect.annotation.AnnotationType','annotations','java.util.Map','+declaredAnnotations']]
,['O',['NO_PARAMETERS','Class[]','+UNKNOWN_PARAMETERS']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return (this.isInterface$() ? "interface " : (this.isPrimitive$() ? "" : "class ")) + this.getName$();
});

Clazz_newMeth(C$, 'forName$S',  function (className) {
return C$.forName0$S$Z$ClassLoader(className, true, null);
}, 1);

Clazz_newMeth(C$, 'forName$S$Z$ClassLoader',  function (name, initialize, loader) {
return C$.forName0$S$Z$ClassLoader(name, initialize, loader);
}, 1);

Clazz_newMeth(C$, 'forName0$S$Z$ClassLoader',  function (name, initialize, loader) {
{
return Clazz_forName(name, initialize, loader);
}
}, 1);

Clazz_newMeth(C$, 'newInstance$',  function () {
var c=this.$clazz$;
{
return new c;
}
});

Clazz_newMeth(C$, 'isInstance$O',  function (obj) {
var c=this.$clazz$;
{
return Clazz_instanceOf(obj, c);
}
});

Clazz_newMeth(C$, 'isAssignableFrom$Class',  function (cls) {
if (cls == null ) return false;
var a=cls.$clazz$;
var me=this.$clazz$;
return Clazz_instanceOf(a, me) ||false;
});

Clazz_newMeth(C$, 'isInterface$',  function () {
var me=this.$clazz$;
{
return me.$isInterface;
}
});

Clazz_newMeth(C$, 'isArray$',  function () {
var me=this.$clazz$;
{
return !!me.__ARRAYTYPE;
}
});

Clazz_newMeth(C$, 'isPrimitive$',  function () {
{
return !!this.__PRIMITIVE;
}
});

Clazz_newMeth(C$, 'isAnnotation$',  function () {
var me=this.$clazz$;
{
return !!me.$getMembers$;
}
});

Clazz_newMeth(C$, 'isEnum$',  function () {
var me=this.$clazz$;
{
return !!me.$isEnum;
}
});

Clazz_newMeth(C$, 'isSynthetic$',  function () {
return false;
});

Clazz_newMeth(C$, 'getName$',  function () {
if (this.name == null ) this.name=p$1.getName0.apply(this, []);
return this.name;
});

Clazz_newMeth(C$, 'getName0',  function () {
var code="";

code = this.$clazz$.__CLASS_NAME$__ || this.$clazz$.__CLASS_NAME__;
if (code) return (code.indexOf(".") < 0 ? "java.lang." + code : code);
code = this.$clazz$.__PARAMCODE;
switch (code) {
case "S":
code="String";
break;
case "I":
code="Integer";
break;
case "H":
code="Short";
break;
case "B":
code="Byte";
break;
case "J":
code="Long";
break;
case "C":
code="Character";
break;
case "O":
code="Object";
break;
default:
return null;
}
return "java.lang." + code;
}, p$1);

Clazz_newMeth(C$, 'getClassLoader$',  function () {
var cl=this.getClassLoader0$();

cl.baseClass = this;
return cl;
});

Clazz_newMeth(C$, 'getClassLoader0$',  function () {
var loader=null;

var baseFolder = Clazz._Loader.getJ2SLibBase();
loader = Clazz._Loader.requireLoaderByBase(baseFolder);
var me = this;
loader.getResourceAsStream$S = function(s) { return me.getResourceAsStream$S(s.indexOf("/") == 0 ? s : "/" + s) };
loader.getResource$S = function(s) { return me.getResource$S(s.indexOf("/") == 0 ? s : "/" + s) };
loader.getResources$S = function(s) { return me.getResources$S(s) };
loader.getParent$ = function() {return null};
return loader;
});

Clazz_newMeth(C$, 'getResources$S',  function (name) {
var url1=this.getResource$S(name);
var url2=(name.indexOf$S("/") == 0 ? null : this.getClassLoader$().getResource$S(name));
var e;
if (url1 == null  && url2 == null  ) {
e=$I$(4).emptyEnumeration$();
} else {
var list=Clazz_new_($I$(5,1).c$$I,[2]);
if (url1 != null ) list.add$O(url1);
if (url2 != null  && !url2.equals$O(url1) ) list.add$O(url2);
e=$I$(4).enumeration$java_util_Collection(list);
}return Clazz_new_([Clazz_array($I$(7), -1, [null, e])],$I$(6,1).c$$java_util_EnumerationA);
});

Clazz_newMeth(C$, 'getTypeParameters$',  function () {
return Clazz_array($I$(8), [0]);
});

Clazz_newMeth(C$, 'getSuperclass$',  function () {
{
if (this.$clazz$ == java.lang.Object) return null;
return Clazz_getClass(this.$clazz$.superclazz || java.lang.Object);
}
});

Clazz_newMeth(C$, 'getInterfaces$',  function () {
if (this.implementz == null ) {
var a=Clazz_array(Class, [0]);
var me=this.$clazz$;
var list=me.implementz ||null;
if (list != null ) {
for (var i=0, n=list.length; i < n; i++) {

a.push(Clazz_getClass(list[i]));
}
}this.implementz=a;
}return this.implementz;
});

Clazz_newMeth(C$, 'getComponentType$',  function () {
return null;
});

Clazz_newMeth(C$, 'getModifiers$',  function () {
return (this.modifiers >= 0 ? this.modifiers : 1 | (this.isEnum$() ? 16384 : this.isInterface$() ? 512 : 0) | (this.isAnnotation$() ? 8192 : 0) );
});

Clazz_newMeth(C$, '_setModifiers$I',  function (m) {
this.modifiers=m;
});

Clazz_newMeth(C$, 'getSigners$',  function () {
$I$(9).notImplemented$S(null);
return Clazz_array(java.lang.Object, [0]);
});

Clazz_newMeth(C$, 'setSigners$OA',  function (signers) {
$I$(9).notImplemented$S(null);
});

Clazz_newMeth(C$, 'getDeclaringClass$',  function () {
$I$(9).notImplemented$S(null);
return null;
});

Clazz_newMeth(C$, 'getSimpleName$',  function () {
if (this.isArray$()) return this.getComponentType$().getSimpleName$() + "[]";
var name="";
{
name = (this.$clazz$.__ANON ? "" : this.$clazz$.__CLASS_NAME__);
name || (name = this.$clazz$.name);
}
return name.substring$I(name.lastIndexOf$S(".") + 1);
});

Clazz_newMeth(C$, 'getCanonicalName$',  function () {
if (this.isArray$()) {
var canonicalName=this.getComponentType$().getCanonicalName$();
if (canonicalName != null ) return canonicalName + "[]";
 else return null;
}if (p$1.isLocalOrAnonymousClass.apply(this, [])) return null;
var name=null;

name = this.$clazz$.__CLASS_NAME__ || null;
return name;
});

Clazz_newMeth(C$, 'isAnonymousClass$',  function () {
return "".equals$O(this.getSimpleName$());
});

Clazz_newMeth(C$, 'isLocalClass$',  function () {
{
return !!this.$clazz$.__LOCAL;
}
});

Clazz_newMeth(C$, 'isLocalOrAnonymousClass',  function () {
{
return !!this.$clazz$.__ISANON || !!this.$clazz$.__LOCAL;
}
}, p$1);

Clazz_newMeth(C$, 'getClasses$',  function () {
var list=Clazz_new_($I$(5,1));
var currentClass=this;
while (currentClass != null ){
var members=currentClass.getDeclaredClasses$();
for (var i=0; i < members.length; i++) {
list.add$O(members[i]);
}
currentClass=currentClass.getSuperclass$();
}
return list.toArray$OA(Clazz_array(Class, [list.size$()]));
});

Clazz_newMeth(C$, 'getFields$',  function () {
if (this.fields != null ) return this.fields;
this.fields=Clazz_array($I$(10), [0]);
p$1.addAllFields$java_lang_reflect_FieldA$Z.apply(this, [this.fields, true]);
return this.fields;
});

Clazz_newMeth(C$, 'addAllFields$java_lang_reflect_FieldA$Z',  function (fields, recurse) {
var cl=this.$clazz$ ||null;

Clazz._initClass(cl,1,1,0);
p$1.addFields$O$java_lang_reflect_FieldA$I.apply(this, [cl, fields, 0]);
p$1.addFields$O$java_lang_reflect_FieldA$I.apply(this, [cl, fields, 8]);
if (!recurse) return;
var c=this.getSuperclass$();
if (c != null ) p$1.addAllFields$java_lang_reflect_FieldA$Z.apply(c, [fields, true]);
}, p$1);

Clazz_newMeth(C$, 'getFieldAnnMap$O',  function (cl) {
p$1.initAnnotationsIfNecessary.apply(this, []);
return this.fieldAnnMap;
});

Clazz_newMeth(C$, 'getMethods$',  function () {
return (p$1.privateGetPublicMethods$Z.apply(this, [true]));
});

Clazz_newMeth(C$, 'getConstructors$',  function () {
return (p$1.privateGetConstructors.apply(this, []));
});

Clazz_newMeth(C$, 'getField$S',  function (name) {
this.getFields$();
for (var i=this.fields.length; --i >= 0; ) {
if (this.fields[i].jsName == name) return this.fields[i];
}
throw Clazz_new_(Clazz_load('NoSuchFieldException').c$$S,["field " + name]);
});

Clazz_newMeth(C$, 'addFields$O$java_lang_reflect_FieldA$I',  function (cl, f, modifiers) {
var fieldNames=Clazz._getFieldNames(cl, !!modifiers) || [] ||null;
var types=Clazz._getFieldTypes(cl, !!modifiers) || [] ||null;
for (var i=0; i < fieldNames.length; i++) {
p$1.addField$java_lang_reflect_FieldA$S$I$S.apply(this, [f, fieldNames[i], modifiers, types[i]]);
}
}, p$1);

Clazz_newMeth(C$, 'excludeField$S',  function (name) {
return (name === "prototype"  || name.startsWith$S("__")  || name.startsWith$S("$") && name.endsWith$S("$")   || name === "$isInterface"   || name === "$isEnum"   || name === "implementz"  );
});

Clazz_newMeth(C$, 'addField$java_lang_reflect_FieldA$S$I$S',  function (fields, name, modifiers, type) {
var f=Clazz_new_($I$(10,1).c$$Class$S$I,[this, name, modifiers]);
f._setTypeString$S(type);

fields.push(f);
}, p$1);

Clazz_newMeth(C$, 'getMethod$S$ClassA',  function (name, paramTypes) {
var m=Clazz_new_($I$(1,1).c$$Class$S$ClassA$Class$ClassA$I,[this, name, paramTypes, null, null, 1]);
if (!this.isInterface$()) {
var o=this.$clazz$;
var isStatic=false;
var qname=m.getSignature$();

if (o[qname]) { isStatic = true;
o = o[qname];
} else { o = o.prototype && o.prototype[qname];
}
if (o == null ) throw Clazz_new_(Clazz_load('NoSuchMethodException').c$$S,[this.getName$() + "." + qname ]);
m._setJSMethod$O$I(o, (isStatic ? 8 : 0));
}return m;
});

Clazz_newMeth(C$, 'getConstructor$ClassA',  function (parameterTypes) {
return Clazz_new_([this, parameterTypes, Clazz_array(Class, [0]), 0],$I$(11,1).c$$Class$ClassA$ClassA$I);
});

Clazz_newMeth(C$, 'getDeclaredClasses$',  function () {
return p$1.getDeclaredClasses0.apply(this, []);
});

Clazz_newMeth(C$, 'getDeclaredFields$',  function () {
if (this.declaredFields != null ) return this.declaredFields;
this.declaredFields=Clazz_array($I$(10), [0]);
p$1.addAllFields$java_lang_reflect_FieldA$Z.apply(this, [this.declaredFields, false]);
return this.declaredFields;
});

Clazz_newMeth(C$, 'getDeclaredMethods$',  function () {
return (p$1.privateGetPublicMethods$Z.apply(this, [false]));
});

Clazz_newMeth(C$, 'getDeclaredConstructors$',  function () {
return this.getConstructors$();
});

Clazz_newMeth(C$, 'getDeclaredField$S',  function (name) {
return this.getField$S(name);
});

Clazz_newMeth(C$, 'getDeclaredMethod$S$ClassA',  function (name, parameterTypes) {
return this.getMethod$S$ClassA(name, parameterTypes);
});

Clazz_newMeth(C$, 'getDeclaredConstructor$ClassA',  function (parameterTypes) {
return this.getConstructor$ClassA(parameterTypes);
});

Clazz_newMeth(C$, 'getResourceAsStream$S',  function (name) {
var clazzName=this.$clazz$ && (this.$clazz$.__CLASS_NAME$__ ||  this.$clazz$.__CLASS_NAME__)||"";
if (clazzName === ""  && !name.startsWith$S("/") ) name="/" + name;
var data=null;
if (name == null  || Clazz_getClass($I$(12)) == null  ) return null;
name=name.replace$C$C("\\", "/");
var baseFolder=null;
var fname=name;
var url=null;
if (name.startsWith$S($I$(13).temporaryDirectory)) {
data=$I$(9).getCachedFileData$S$Z(name, true);
if (data == null ) return null;
} else {

if (arguments.length == 2 && name.indexOf ('/') != 0) { // additional argument
name = "/" + name;
} if (name.indexOf ('/') == 0) { if (arguments.length == 2)  // additional argument
baseFolder = arguments[1];
if (!baseFolder) baseFolder = Clazz._Loader.getJ2SLibBase();
if (baseFolder.charAt(baseFolder.length - 1) != '/') baseFolder += "/";
fname = baseFolder + name.substring (1);
} else { baseFolder = Clazz._Loader.getJ2SLibBase(); // getClass().getClassLoader() uses full path
fname = baseFolder;
if (this.$_$base == null) { // getClass().getResource() will be here
var pkgs = clazzName.split(".");
if (fname.charAt(fname.length - 1) != '/') fname += "/";
var map = Clazz._allPackage;
for (var i = 0; i < pkgs.length - 1; i++) { if (!(map = map[pkgs[i]])) break;
fname += pkgs[i] + "/";
} } fname += name;
} var javapath = fname;
try { //	      if (fname.indexOf(":/") < 0) {
//	        var d = document.location.href.split("#")[0].split("?")[0].split("/");
//        	d[d.length - 1] = fname;
//        	fname = d.join("/");
//	      }
Clazz_load("java.net.URL");
url = Clazz_new_(java.net.URL.c$$S,["file:/" + fname]);
} catch (e) { return null;
} var fileCache = J2S.getSetJavaFileCache(null);
data = fileCache && fileCache.get$O(javapath);
}if (data == null ) data=$I$(9).J2S.getFileData(fname.toString(), null, true, true);
{
if (data == null || data == Boolean.FALSE || data == "error" || data.indexOf && data.indexOf("[Exception") == 0) return null;
var bytes = (data.__BYTESIZE == 1 ? data : J2S._strToBytes(data));
Clazz_load("java.io.BufferedInputStream");
Clazz_load("java.io.ByteArrayInputStream");
var is = Clazz_new_(java.io.BufferedInputStream.c$$java_io_InputStream, [Clazz_new_(java.io.ByteArrayInputStream.c$$BA, [bytes])]);
is.url = url;
url._streamData = bytes;
return is;
}
});

Clazz_newMeth(C$, 'getResource$S',  function (name) {
{
var stream = this.getResourceAsStream$S(name);
return(stream ? stream.url : null);
}
});

Clazz_newMeth(C$, 'getPrimitiveOrStringClass$S',  function (name) {
switch (name) {
case "S":
case "String":
return Clazz_getClass(String);
case "Z":
case "boolean":
return Boolean.TYPE;
case "B":
case "byte":
return Byte.TYPE;
case "C":
case "char":
return Character.TYPE;
case "H":
case "short":
return Short.TYPE;
case "I":
case "int":
return Integer.TYPE;
case "J":
case "long":
return Long.TYPE;
case "F":
case "float":
return Float.TYPE;
case "D":
case "double":
return Double.TYPE;
case "O":
return Clazz_getClass(java.lang.Object);
default:
return null;
}
}, 1);

Clazz_newMeth(C$, 'privateGetPublicMethods$Z',  function (isAll) {
if (this.isAnnotation$()) {
if (this.$members$ == null ) {
this.$members$=$I$(14).createMethods$Class(this);
}return this.$members$;
}var ms;
if (this.$methodList$ != null ) {
ms=Clazz_array($I$(1), [this.$methodList$.length]);
for (var i=ms.length; --i >= 0; ) {
ms[i]=Clazz_new_([this, this.$methodList$[i], null, Clazz_getClass($I$(15)), null, 1],$I$(1,1).c$$Class$S$ClassA$Class$ClassA$I);
}
return ms;
}ms=Clazz_array($I$(1), [0]);
var attr=null;
var o=null;

var p = this.$clazz$.prototype;
for (attr in p) { o = p[attr]; if ( typeof o == "function" && o.exName && !o.__CLASS_NAME__ && o != this.$clazz$[attr] && (isAll || o.exClazz == this.$clazz$) && !o.exName.startsWith("c$") ) { // there are polynormical methods.
var m=Clazz_new_([this, attr, Class.UNKNOWN_PARAMETERS, Clazz_getClass($I$(15)), Class.NO_PARAMETERS, 1],$I$(1,1).c$$Class$S$ClassA$Class$ClassA$I);
m._setJSMethod$O$I(o, 1);

ms.push(m);
}} p = this.$clazz$;
for (attr in p) { o = p[attr];if ( typeof o == "function" && o.exName && !o.__CLASS_NAME__ && (isAll || o.exClazz == this.$clazz$) && o.exName.indexOf("$") != 0 && !o.exName.startsWith("c$") ) {
m=Clazz_new_([this, attr, Class.UNKNOWN_PARAMETERS, Clazz_getClass($I$(15)), Class.NO_PARAMETERS, 1],$I$(1,1).c$$Class$S$ClassA$Class$ClassA$I);
m._setJSMethod$O$I(o, 8);

ms.push(m);
}}
return ms;
}, p$1);

Clazz_newMeth(C$, 'privateGetConstructors',  function () {
var ms;
if (this.$constructors$ != null ) {
ms=Clazz_array($I$(11), [this.$constructors$.length]);
for (var i=ms.length; --i >= 0; ) {
ms[i]=Clazz_new_([this, this.$constructors$[i].getParameterTypes$(), null, 1],$I$(11,1).c$$Class$ClassA$ClassA$I);
}
return ms;
}ms=Clazz_array($I$(11), [0]);
var attr=null;
var o=null;

var p = this.$clazz$;
for (attr in p) { o = p[attr]; if ( typeof o == "function" && o.exName && o.exName.startsWith("c$") && !o.__CLASS_NAME__ && (o.exClazz == this.$clazz$) ) {
var m=Clazz_new_($I$(11,1).c$$Class$ClassA$ClassA$I,[this, Class.UNKNOWN_PARAMETERS, null, 1]);
m._setJSMethod$O$I(o, 1);

ms.push(m);
}}
return ms;
}, p$1);

Clazz_newMeth(C$, 'arrayContentsEq$OA$OA',  function (a1, a2) {
if (a1 == null ) {
return a2 == null  || a2.length == 0 ;
}if (a2 == null ) {
return a1.length == 0;
}if (a1.length != a2.length) {
return false;
}for (var i=0; i < a1.length; i++) {
if (a1[i] !== a2[i] ) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'getDeclaredClasses0',  function () {
return $I$(14).getDeclaredClasses$O(this.$clazz$);
}, p$1);

Clazz_newMeth(C$, 'argumentTypesToString$ClassA',  function (parameterTypes) {
if (parameterTypes == null ) return "$";
var s="";
for (var i=0; i < parameterTypes.length; i++) s+="$" + (Clazz._getParamCode(parameterTypes[i]) ||null);

return s;
}, 1);

Clazz_newMeth(C$, 'getEnumConstants$',  function () {
return this.getEnumConstantsShared$();
});

Clazz_newMeth(C$, 'getEnumConstantsShared$',  function () {
if (this.enumConstants == null ) {
if (this.isEnum$()) this.enumConstants=this.$clazz$.values$() ||null;
}return this.enumConstants;
});

Clazz_newMeth(C$, 'enumConstantDirectory$',  function () {
if (this.enumConstantDirectory == null ) {
var universe=this.getEnumConstantsShared$();
if (universe == null ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[this.getName$() + " is not an enum type"]);
var m=Clazz_new_($I$(16,1).c$$I,[2 * universe.length]);
for (var constant, $constant = 0, $$constant = universe; $constant<$$constant.length&&((constant=($$constant[$constant])),1);$constant++) m.put$O$O((constant).name$(), constant);

this.enumConstantDirectory=m;
}return this.enumConstantDirectory;
});

Clazz_newMeth(C$, 'cast$O',  function (obj) {
if (obj != null  && !this.isInstance$O(obj) ) throw Clazz_new_(Clazz_load('ClassCastException').c$$S,[p$1.cannotCastMsg$O.apply(this, [obj])]);
return obj;
});

Clazz_newMeth(C$, 'cannotCastMsg$O',  function (obj) {
return "Cannot cast " + obj.getClass$().getName$() + " to " + this.getName$() ;
}, p$1);

Clazz_newMeth(C$, 'asSubclass$Class',  function (clazz) {
if (clazz.isAssignableFrom$Class(this)) return this;
 else throw Clazz_new_(Clazz_load('ClassCastException').c$$S,[this.toString()]);
});

Clazz_newMeth(C$, 'getAnnotation$Class',  function (annotationClass) {
$I$(17).requireNonNull$O(annotationClass);
p$1.initAnnotationsIfNecessary.apply(this, []);
return (this.annotations == null  ? null : this.annotations.get$O(annotationClass));
});

Clazz_newMeth(C$, 'getAnnotations$',  function () {
p$1.initAnnotationsIfNecessary.apply(this, []);
return this.annotations.values$().toArray$OA($I$(18).getEmptyAnnotationArray$());
});

Clazz_newMeth(C$, 'getAnnotationsByType$Class',  function (annotationClass) {
$I$(17).requireNonNull$O(annotationClass);
var annotationData=p$1.annotationData.apply(this, []);
return $I$(19).getAssociatedAnnotations$java_util_Map$Class$Class(annotationData.declaredAnnotations, this, annotationClass);
});

Clazz_newMeth(C$, 'annotationData',  function () {
var annotationData=this.annotationData;
if (annotationData != null ) {
return annotationData;
}return annotationData=p$1.createAnnotationData$I.apply(this, [0]);
}, p$1);

Clazz_newMeth(C$, 'createAnnotationData$I',  function (classRedefinedCount) {
var declaredAnnotations=$I$(18).parseAnnotations$S$Class$Z(null, this, false);
var superClass=this.getSuperclass$();
var annotations=null;
if (superClass != null ) {
var superAnnotations=p$1.annotationData.apply(superClass, []).annotations;
for (var e, $e = superAnnotations.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
var annotationClass=e.getKey$();
if ($I$(20).getInstance$Class(annotationClass).isInherited$()) {
if (annotations == null ) {
annotations=Clazz_new_([((Math.max(declaredAnnotations.size$(), Math.min(12, declaredAnnotations.size$() + superAnnotations.size$())) * 4 + 2)/3|0)],$I$(21,1).c$$I);
}annotations.put$O$O(annotationClass, e.getValue$());
}}
}if (annotations == null ) {
annotations=declaredAnnotations;
} else {
annotations.putAll$java_util_Map(declaredAnnotations);
}return Clazz_new_($I$(22,1).c$$java_util_Map$java_util_Map$I,[annotations, declaredAnnotations, classRedefinedCount]);
}, p$1);

Clazz_newMeth(C$, 'setAnnotationResult$sun_reflect_annotation_AnnotationType',  function (type) {
this.annotationType=type;
});

Clazz_newMeth(C$, 'annotationType$',  function () {
return (this.isAnnotation$() ? this : null);
});

Clazz_newMeth(C$, 'getAnnotationType$',  function () {
return this.annotationType;
});

Clazz_newMeth(C$, 'getDeclaredAnnotationMap$',  function () {
return p$1.annotationData.apply(this, []).declaredAnnotations;
});

Clazz_newMeth(C$, 'getDeclaredAnnotations$',  function () {
p$1.initAnnotationsIfNecessary.apply(this, []);
return this.declaredAnnotations.values$().toArray$OA($I$(18).getEmptyAnnotationArray$());
});

Clazz_newMeth(C$, 'initAnnotationsIfNecessary',  function () {
if (this.annotations != null ) return;
this.declaredAnnotations=$I$(18).parseAnnotations$S$Class$Z(null, this, false);
var superClass=this.getSuperclass$();
if (superClass == null ) {
this.annotations=this.declaredAnnotations;
} else {
this.annotations=Clazz_new_($I$(16,1));
p$1.initAnnotationsIfNecessary.apply(superClass, []);
for (var e, $e = superClass.annotations.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
var annotationClass=e.getKey$();
if ($I$(20).getInstance$Class(annotationClass).isInherited$()) this.annotations.put$O$O(annotationClass, e.getValue$());
}
this.annotations.putAll$java_util_Map(this.declaredAnnotations);
}}, p$1);

Clazz_newMeth(C$, 'setAnnotationType$sun_reflect_annotation_AnnotationType',  function (type) {
this.annotationType=type;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var name=null;

name = this.$clazz$.__CLASS_NAME__ || this.$clazz$.toString();
return name.hashCode$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
{
return o && o.__CLASS_NAME__ == "java.lang.Class" && o.$clazz$ == this.$clazz$;
}
});

Clazz_newMeth(C$, 'getArgumentArray$ClassA$OA$Z',  function (types, args, isProxy) {
var a=Clazz_array(java.lang.Object, [args == null  ? 0 : args.length]);
if (args != null  && (types != null  || isProxy ) ) for (var i=args.length; --i >= 0; ) a[i]=(isProxy ? args[i] : (types[i].__PRIMITIVE && args[i].valueOf ? args[i].valueOf() : args[i]) ||null);

return a;
}, 1);

Clazz_newMeth(C$, 'getPackage$',  function () {
return $I$(23).getPackage$Class(this);
});

Clazz_newMeth(C$, 'getJ2SSuperclassFor$Class',  function (cl) {
var c=null;
{
c = cl.getSuperclass$ && cl.getSuperclass$();
}
if (c == null  && cl !== Clazz_getClass(java.lang.Object)  ) {
c=Clazz_getClass(java.lang.Object);
}return c;
}, 1);

Clazz_newMeth(C$, 'getDeclaredAnnotation$Class',  function (annotationClass) {
$I$(17).requireNonNull$O(annotationClass);
for (var annotation, $annotation = 0, $$annotation = this.getDeclaredAnnotations$(); $annotation<$$annotation.length&&((annotation=($$annotation[$annotation])),1);$annotation++) {
if (annotationClass.equals$O(annotation.annotationType$())) {
return annotationClass.cast$O(annotation);
}}
return null;
});

Clazz_newMeth(C$, 'getDeclaredAnnotationsByType$Class',  function (annotationClass) {
$I$(17).requireNonNull$O(annotationClass);
return $I$(19,"getDirectlyAndIndirectlyPresent$java_util_Map$Class",[$I$(2,"stream$OA",[this.getDeclaredAnnotations$()]).collect$java_util_stream_Collector($I$(24,"toMap$java_util_function_Function$java_util_function_Function$java_util_function_BinaryOperator$java_util_function_Supplier",[(function($$){((
(function(){/*m*/var C$=Clazz_newClass(P$, "Class$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Function', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_M*/
Clazz_newMeth(C$, 'apply$O',  function (t) { return t.annotationType$.apply(t,[])});
})()
)); return Clazz_new_(Class$lambda1.$init$,[this, null])})($I$(25)), $I$(26).identity$(), ((Class$lambda2$||(Class$lambda2$=(((P$.Class$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "Class$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.BinaryOperator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['apply$java_lang_annotation_Annotation$java_lang_annotation_Annotation','apply$O$O'],  function (first, second) { return (first);});
})()
), Clazz_new_(Class$lambda2.$init$,[this, null])))))), ((P$.Class$lambda3||
(function(){/*m*/var C$=Clazz_newClass(P$, "Class$lambda3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Supplier', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_C*/
Clazz_newMeth(C$, 'get$',  function () { return Clazz_new_($I$(21,1),[])});
})()
), Clazz_new_(Class$lambda3.$init$,[this, null]))])), annotationClass]);
});

Clazz_newMeth(C$, 'isAnnotationPresent$Class',  function (annotationClass) {
if (annotationClass == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
return this.getAnnotation$Class(annotationClass) != null ;
});

C$.$static$=function(){C$.$static$=0;
C$.NO_PARAMETERS=Clazz_array(Class, [0]);
C$.UNKNOWN_PARAMETERS=Clazz_array(Class, [0]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Class, "MethodArray", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['length'],'O',['methods','java.lang.reflect.Method[]']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.methods=Clazz_array($I$(1), [20]);
this.length=0;
}, 1);

Clazz_newMeth(C$, 'add$java_lang_reflect_Method',  function (m) {
if (this.length == this.methods.length) {
this.methods=$I$(2).copyOf$OA$I(this.methods, 2 * this.methods.length);
}this.methods[this.length++]=m;
});

Clazz_newMeth(C$, 'addAll$java_lang_reflect_MethodA',  function (ma) {
for (var i=0; i < ma.length; i++) {
this.add$java_lang_reflect_Method(ma[i]);
}
});

Clazz_newMeth(C$, 'addAll$Class_MethodArray',  function (ma) {
for (var i=0; i < ma.length$(); i++) {
this.add$java_lang_reflect_Method(ma.get$I(i));
}
});

Clazz_newMeth(C$, 'addIfNotPresent$java_lang_reflect_Method',  function (newMethod) {
for (var i=0; i < this.length; i++) {
var m=this.methods[i];
if (m === newMethod  || (m != null  && m.equals$O(newMethod) ) ) {
return;
}}
this.add$java_lang_reflect_Method(newMethod);
});

Clazz_newMeth(C$, 'addAllIfNotPresent$Class_MethodArray',  function (newMethods) {
for (var i=0; i < newMethods.length$(); i++) {
var m=newMethods.get$I(i);
if (m != null ) {
this.addIfNotPresent$java_lang_reflect_Method(m);
}}
});

Clazz_newMeth(C$, 'length$',  function () {
return this.length;
});

Clazz_newMeth(C$, 'get$I',  function (i) {
return this.methods[i];
});

Clazz_newMeth(C$, 'removeByNameAndSignature$java_lang_reflect_Method',  function (toRemove) {
for (var i=0; i < this.length; i++) {
var m=this.methods[i];
if (m != null  && m.getName$() == toRemove.getName$()  && $I$(3,"arrayContentsEq$OA$OA",[m.getParameterTypes$(), toRemove.getParameterTypes$()]) ) {
this.methods[i]=null;
}}
});

Clazz_newMeth(C$, 'compactAndTrim$',  function () {
var newPos=0;
for (var pos=0; pos < this.length; pos++) {
var m=this.methods[pos];
if (m != null ) {
if (pos != newPos) {
this.methods[newPos]=m;
}++newPos;
}}
if (newPos != this.methods.length) {
this.methods=$I$(2).copyOf$OA$I(this.methods, newPos);
}});

Clazz_newMeth(C$, 'getArray$',  function () {
return this.methods;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Class, "AnnotationData", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['annotations','java.util.Map','+declaredAnnotations']]]

Clazz_newMeth(C$, 'c$$java_util_Map$java_util_Map$I',  function (annotations, declaredAnnotations, redefinedCount) {
;C$.$init$.apply(this);
this.annotations=annotations;
this.declaredAnnotations=declaredAnnotations;
}, 1);

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,I$=[];
/*c*/var C$=Clazz_newClass(P$, "Enum", null, null, ['Comparable', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['ordinal'],'S',['name']]]

Clazz_newMeth(C$, 'name$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'ordinal$',  function () {
return this.ordinal;
});

Clazz_newMeth(C$, 'c$$S$I',  function (name, ordinal) {
;C$.$init$.apply(this);
this.name=name;
this.ordinal=ordinal;
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return this.name;
});

Clazz_newMeth(C$, 'equals$O',  function (other) {
return this === other ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return C$.superclazz.prototype.hashCode$.apply(this, []);
});

Clazz_newMeth(C$, 'clone$',  function () {
throw Clazz_new_(Clazz_load('CloneNotSupportedException'));
});

Clazz_newMeth(C$, ['compareTo$Enum','compareTo$O'],  function (o) {
var other=o;
var self=this;
if (self.getClass$() !== other.getClass$()  && self.getDeclaringClass$() !== other.getDeclaringClass$()  ) throw Clazz_new_(Clazz_load('ClassCastException'));
return self.ordinal - other.ordinal;
});

Clazz_newMeth(C$, 'getDeclaringClass$',  function () {
var clazz=this.getClass$();
var zuper=clazz.getSuperclass$();
return ((zuper === Clazz_getClass(C$) ) ? clazz : zuper);
});

Clazz_newMeth(C$, 'valueOf$Class$S',  function (enumType, name) {
var result=null;
{
result = enumType.$clazz$[name];
}
if (result != null ) return result;
if (name == null ) throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Name is null"]);
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["No enum const " + enumType + "." + name ]);
}, 1);

Clazz_newMeth(C$, 'finalize$',  function () {
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,I$=[[0,'java.util.Objects','java.util.Spliterators']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Iterable");
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
for (var t, $t = this.iterator$(); $t.hasNext$()&&((t=($t.next$())),1);) {
action.accept$O(t);
}
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(2,"spliteratorUnknownSize$java_util_Iterator$I",[this.iterator$(), 0]);
});
};})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,I$=[[0,'Thread','swingjs.JSToolkit','Shutdown','ApplicationShutdownHooks','java.util.StringTokenizer','java.io.File','UnsatisfiedLinkError']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Runtime");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['currentRuntime','Runtime']]]

Clazz_newMeth(C$, 'getRuntime$',  function () {
return C$.currentRuntime;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'exit$I',  function (status) {
$I$(1).currentThread$().getThreadGroup$().秘exit$();
var v=!swingjs.JSToolkit ? null :$I$(2).getAppletViewer$();
if (v != null ) v.exit$();
$I$(3).exit$I(status);
});

Clazz_newMeth(C$, 'addShutdownHook$Thread',  function (hook) {
$I$(4).add$Thread(hook);
});

Clazz_newMeth(C$, 'removeShutdownHook$Thread',  function (hook) {
return $I$(4).remove$Thread(hook);
});

Clazz_newMeth(C$, 'halt$I',  function (status) {
var sm=System.getSecurityManager$();
if (sm != null ) {
sm.checkExit$I(status);
}$I$(3).halt$I(status);
});

Clazz_newMeth(C$, 'runFinalizersOnExit$Z',  function (value) {
var security=System.getSecurityManager$();
if (security != null ) {
try {
security.checkExit$I(0);
} catch (e) {
if (Clazz_exceptionOf(e,"SecurityException")){
throw Clazz_new_(Clazz_load('SecurityException').c$$S,["runFinalizersOnExit"]);
} else {
throw e;
}
}
}$I$(3).setRunFinalizersOnExit$Z(value);
}, 1);

Clazz_newMeth(C$, 'exec$S',  function (command) {
return this.exec$S$SA$java_io_File(command, null, null);
});

Clazz_newMeth(C$, 'exec$S$SA',  function (command, envp) {
return this.exec$S$SA$java_io_File(command, envp, null);
});

Clazz_newMeth(C$, 'exec$S$SA$java_io_File',  function (command, envp, dir) {
if (command.length$() == 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Empty command"]);
var st=Clazz_new_($I$(5,1).c$$S,[command]);
var cmdarray=Clazz_array(String, [st.countTokens$()]);
for (var i=0; st.hasMoreTokens$(); i++) cmdarray[i]=st.nextToken$();

return this.exec$SA$SA$java_io_File(cmdarray, envp, dir);
});

Clazz_newMeth(C$, 'exec$SA',  function (cmdarray) {
return this.exec$SA$SA$java_io_File(cmdarray, null, null);
});

Clazz_newMeth(C$, 'exec$SA$SA',  function (cmdarray, envp) {
return this.exec$SA$SA$java_io_File(cmdarray, envp, null);
});

Clazz_newMeth(C$, 'exec$SA$SA$java_io_File',  function (cmdarray, envp, dir) {

alert("Runtime.exec is not implemented. "+cmdarray[0]);
return null;
});

Clazz_newMeth(C$, 'availableProcessors$',  function () {
return 2147483647;
});

Clazz_newMeth(C$, 'freeMemory$',  function () {
return 2147483647;
});

Clazz_newMeth(C$, 'totalMemory$',  function () {
return 2147483647;
});

Clazz_newMeth(C$, 'maxMemory$',  function () {
return 2147483647;
});

Clazz_newMeth(C$, 'gc$',  function () {
});

Clazz_newMeth(C$, 'runFinalization0$',  function () {
}, 1);

Clazz_newMeth(C$, 'runFinalization$',  function () {
C$.runFinalization0$();
});

Clazz_newMeth(C$, 'traceInstructions$Z',  function (on) {
});

Clazz_newMeth(C$, 'traceMethodCalls$Z',  function (on) {
});

Clazz_newMeth(C$, 'load$S',  function (filename) {
this.load0$Class$S(null, filename);
});

Clazz_newMeth(C$, 'load0$Class$S',  function (fromClass, filename) {
if (!(Clazz_new_($I$(6,1).c$$S,[filename]).isAbsolute$())) {
throw Clazz_new_($I$(7,1).c$$S,["Expecting an absolute path of the library: " + filename]);
}ClassLoader.loadLibrary$Class$S$Z(fromClass, filename, true);
});

Clazz_newMeth(C$, 'loadLibrary$S',  function (libname) {
this.loadLibrary0$Class$S(null, libname);
});

Clazz_newMeth(C$, 'loadLibrary0$Class$S',  function (fromClass, libname) {
if (libname.indexOf$I($I$(6).separatorChar.$c()) != -1) {
throw Clazz_new_($I$(7,1).c$$S,["Directory separator should not appear in library name: " + libname]);
}ClassLoader.loadLibrary$Class$S$Z(fromClass, libname, false);
});

Clazz_newMeth(C$, 'getLocalizedInputStream$java_io_InputStream',  function ($in) {
return $in;
});

Clazz_newMeth(C$, 'getLocalizedOutputStream$java_io_OutputStream',  function (out) {
return out;
});

C$.$static$=function(){C$.$static$=0;
C$.currentRuntime=Clazz_new_(C$);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,I$=[[0,'InternalError','java.util.Hashtable','Thread','swingjs.JSUtil']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Shutdown");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['Z',['runFinalizersOnExit','秘isHalted'],'I',['state','currentRunningHook'],'O',['groupHooks','java.util.Map','lock','java.lang.Object','+haltLock']]]

Clazz_newMeth(C$, 'setRunFinalizersOnExit$Z',  function (run) {
{
C$.runFinalizersOnExit=run;
}}, 1);

Clazz_newMeth(C$, 'add$I$Z$Runnable',  function (slot, registerShutdownInProgress, hook) {
{
var hooks=C$.getHooks$Z(true);
if (hooks[slot] != null ) throw Clazz_new_($I$(1,1).c$$S,["Shutdown hook at slot " + slot + " already registered" ]);
if (!registerShutdownInProgress) {
if (C$.state > 0) throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Shutdown in progress"]);
} else {
if (C$.state > 1 || (C$.state == 1 && slot <= C$.currentRunningHook ) ) throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Shutdown in progress"]);
}hooks[slot]=hook;
}}, 1);

Clazz_newMeth(C$, 'getHooks$Z',  function (andCreate) {
if (C$.groupHooks == null ) {
if (!andCreate) return null;
C$.groupHooks=Clazz_new_($I$(2,1));
}var g=$I$(3).currentThread$().getThreadGroup$();
var hooks=C$.groupHooks.get$O($I$(4).getJSID$O(g));
if (hooks == null ) {
if (!andCreate) return null;
C$.groupHooks.put$O$O($I$(4).getJSID$O(g), hooks=Clazz_array(Runnable, [10]));
}return hooks;
}, 1);

Clazz_newMeth(C$, 'runHooks$',  function () {
var hooks=C$.getHooks$Z(false);
if (hooks == null ) return;
for (var i=0; i < 10; i++) {
try {
var hook;
{
C$.currentRunningHook=i;
hook=hooks[i];
}if (hook != null ) hook.run$();
} catch (t) {
if (Clazz_instanceOf(t, "java.lang.ThreadDeath")) {
var td=t;
throw td;
}}
}
}, 1);

Clazz_newMeth(C$, 'halt$I',  function (status) {
{
if (!C$.秘isHalted) {
C$.秘isHalted=true;
System.out.println$S("Shutdown(" + status + ") on " + $I$(3).currentThread$().getThreadGroup$().getName$() );
}}}, 1);

Clazz_newMeth(C$, 'sequence$',  function () {
{
if (C$.state != 1) return;
}C$.runHooks$();
{
C$.state=2;
}}, 1);

Clazz_newMeth(C$, 'exit$I',  function (status) {
var runMoreFinalizers=false;
{
if (status != 0) C$.runFinalizersOnExit=false;
switch (C$.state) {
case 0:
C$.state=1;
break;
case 1:
break;
case 2:
if (status != 0) {
C$.halt$I(status);
} else {
runMoreFinalizers=C$.runFinalizersOnExit;
}break;
}
}if (runMoreFinalizers) {
C$.halt$I(status);
}{
C$.sequence$();
C$.halt$I(status);
}}, 1);

Clazz_newMeth(C$, 'shutdown$',  function () {
{
switch (C$.state) {
case 0:
C$.state=1;
break;
case 1:
case 2:
break;
}
}{
C$.sequence$();
}}, 1);

C$.$static$=function(){C$.$static$=0;
C$.state=0;
C$.runFinalizersOnExit=false;
C$.currentRunningHook=0;
C$.lock=null;
C$.haltLock=null;
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,I$=[];
/*c*/var C$=Clazz_newClass(P$, "StringBuffer", null, 'AbstractStringBuilder', ['java.io.Serializable', 'CharSequence']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$I.apply(this,[16]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (capacity) {
;C$.superclazz.c$$I.apply(this,[capacity]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (str) {
;C$.superclazz.c$$I.apply(this,[str.length$() + 16]);C$.$init$.apply(this);
this.append$S(str);
}, 1);

Clazz_newMeth(C$, 'c$$CharSequence',  function (seq) {
C$.c$$I.apply(this, [seq.length$() + 16]);
this.append$CharSequence(seq);
}, 1);

Clazz_newMeth(C$, 'append$O',  function (obj) {
return C$.superclazz.prototype.append$O.apply(this, [obj]);
});

Clazz_newMeth(C$, 'append$S',  function (str) {
return C$.superclazz.prototype.append$S.apply(this, [str]);
});

Clazz_newMeth(C$, 'append$StringBuffer',  function (sb) {
return C$.superclazz.prototype.append$S.apply(this, [sb == null  ? "null" : "" + sb]);
});

Clazz_newMeth(C$, 'append$AbstractStringBuilder',  function (asb) {
return C$.superclazz.prototype.append$S.apply(this, [asb == null  ? "null" : "" + asb]);
});

Clazz_newMeth(C$, 'append$CharSequence',  function (s) {
return C$.superclazz.prototype.append$S.apply(this, [s == null  ? "null" : "" + s]);
});

Clazz_newMeth(C$, 'append$CharSequence$I$I',  function (s, start, end) {
return C$.superclazz.prototype.append$CharSequence$I$I.apply(this, [s, start, end]);
});

Clazz_newMeth(C$, 'append$CA',  function (str) {
return C$.superclazz.prototype.append$CA.apply(this, [str]);
});

Clazz_newMeth(C$, 'append$CA$I$I',  function (str, offset, len) {
return C$.superclazz.prototype.append$CA$I$I.apply(this, [str, offset, len]);
});

Clazz_newMeth(C$, 'append$Z',  function (b) {
return C$.superclazz.prototype.append$S.apply(this, [b ? "true" : "false"]);
});

Clazz_newMeth(C$, 'append$C',  function (c) {
return C$.superclazz.prototype.append$C.apply(this, [c]);
});

Clazz_newMeth(C$, 'append$I',  function (i) {
return C$.superclazz.prototype.append$I.apply(this, [i]);
});

Clazz_newMeth(C$, 'appendCodePoint$I',  function (codePoint) {
return C$.superclazz.prototype.appendCodePoint$I.apply(this, [codePoint]);
});

Clazz_newMeth(C$, 'append$J',  function (lng) {
return C$.superclazz.prototype.append$J.apply(this, [lng]);
});

Clazz_newMeth(C$, 'append$F',  function (f) {
return C$.superclazz.prototype.append$F.apply(this, [f]);
});

Clazz_newMeth(C$, 'append$D',  function (d) {
return C$.superclazz.prototype.append$D.apply(this, [d]);
});

Clazz_newMeth(C$, 'delete$I$I',  function (start, end) {
return C$.superclazz.prototype.delete$I$I.apply(this, [start, end]);
});

Clazz_newMeth(C$, 'deleteCharAt$I',  function (index) {
return C$.superclazz.prototype.deleteCharAt$I.apply(this, [index]);
});

Clazz_newMeth(C$, 'replace$I$I$S',  function (start, end, str) {
return C$.superclazz.prototype.replace$I$I$S.apply(this, [start, end, str]);
});

Clazz_newMeth(C$, 'insert$I$CA$I$I',  function (index, str, offset, len) {
return C$.superclazz.prototype.insert$I$CA$I$I.apply(this, [index, str, offset, len]);
});

Clazz_newMeth(C$, 'insert$I$O',  function (offset, obj) {
return C$.superclazz.prototype.insert$I$S.apply(this, [offset, "" + obj]);
});

Clazz_newMeth(C$, 'insert$I$S',  function (offset, str) {
return C$.superclazz.prototype.insert$I$S.apply(this, [offset, str]);
});

Clazz_newMeth(C$, 'insert$I$CA',  function (offset, str) {
return C$.superclazz.prototype.insert$I$CA.apply(this, [offset, str]);
});

Clazz_newMeth(C$, 'insert$I$CharSequence',  function (index, s) {
return C$.superclazz.prototype.insert$I$S.apply(this, [index, s == null  ? "null" : "" + s]);
});

Clazz_newMeth(C$, 'insert$I$CharSequence$I$I',  function (dstOffset, s, start, end) {
return C$.superclazz.prototype.insert$I$CharSequence$I$I.apply(this, [dstOffset, s, start, end]);
});

Clazz_newMeth(C$, 'insert$I$Z',  function (offset, b) {
return C$.superclazz.prototype.insert$I$Z.apply(this, [offset, b]);
});

Clazz_newMeth(C$, 'insert$I$C',  function (offset, c) {
return C$.superclazz.prototype.insert$I$C.apply(this, [offset, c]);
});

Clazz_newMeth(C$, 'insert$I$I',  function (offset, i) {
return C$.superclazz.prototype.insert$I$I.apply(this, [offset, i]);
});

Clazz_newMeth(C$, 'insert$I$J',  function (offset, l) {
return C$.superclazz.prototype.insert$I$J.apply(this, [offset, l]);
});

Clazz_newMeth(C$, 'insert$I$F',  function (offset, f) {
return C$.superclazz.prototype.insert$I$F.apply(this, [offset, f]);
});

Clazz_newMeth(C$, 'insert$I$D',  function (offset, d) {
return C$.superclazz.prototype.insert$I$D.apply(this, [offset, d]);
});

Clazz_newMeth(C$, 'reverse$',  function () {
return C$.superclazz.prototype.reverse$.apply(this, []);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.秘s;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:21 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,I$=[];
/*c*/var C$=Clazz_newClass(P$, "StringBuilder", null, 'AbstractStringBuilder', ['java.io.Serializable', 'CharSequence']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$I.apply(this,[16]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (capacity) {
;C$.superclazz.c$$I.apply(this,[capacity]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (str) {
;C$.superclazz.c$$I.apply(this,[str.length$() + 16]);C$.$init$.apply(this);
this.append$S(str);
}, 1);

Clazz_newMeth(C$, 'c$$CharSequence',  function (seq) {
C$.c$$I.apply(this, [seq.length$() + 16]);
this.append$CharSequence(seq);
}, 1);

Clazz_newMeth(C$, 'append$O',  function (obj) {
return C$.superclazz.prototype.append$O.apply(this, [obj]);
});

Clazz_newMeth(C$, 'append$S',  function (str) {
return C$.superclazz.prototype.append$S.apply(this, [str]);
});

Clazz_newMeth(C$, 'append$StringBuffer',  function (sb) {
return C$.superclazz.prototype.append$StringBuffer.apply(this, [sb]);
});

Clazz_newMeth(C$, 'append$CharSequence',  function (s) {
return C$.superclazz.prototype.append$CharSequence.apply(this, [s]);
});

Clazz_newMeth(C$, 'append$CharSequence$I$I',  function (s, start, end) {
return C$.superclazz.prototype.append$CharSequence$I$I.apply(this, [s, start, end]);
});

Clazz_newMeth(C$, 'append$CA',  function (str) {
return C$.superclazz.prototype.append$CA.apply(this, [str]);
});

Clazz_newMeth(C$, 'append$CA$I$I',  function (str, offset, len) {
return C$.superclazz.prototype.append$CA$I$I.apply(this, [str, offset, len]);
});

Clazz_newMeth(C$, 'append$Z',  function (b) {
return C$.superclazz.prototype.append$Z.apply(this, [b]);
});

Clazz_newMeth(C$, 'append$C',  function (c) {
return C$.superclazz.prototype.append$C.apply(this, [c]);
});

Clazz_newMeth(C$, 'append$I',  function (i) {
return C$.superclazz.prototype.append$I.apply(this, [i]);
});

Clazz_newMeth(C$, 'append$J',  function (lng) {
return C$.superclazz.prototype.append$J.apply(this, [lng]);
});

Clazz_newMeth(C$, 'append$F',  function (f) {
return C$.superclazz.prototype.append$F.apply(this, [f]);
});

Clazz_newMeth(C$, 'append$D',  function (d) {
return C$.superclazz.prototype.append$D.apply(this, [d]);
});

Clazz_newMeth(C$, 'appendCodePoint$I',  function (codePoint) {
return C$.superclazz.prototype.appendCodePoint$I.apply(this, [codePoint]);
});

Clazz_newMeth(C$, 'delete$I$I',  function (start, end) {
return C$.superclazz.prototype.delete$I$I.apply(this, [start, end]);
});

Clazz_newMeth(C$, 'deleteCharAt$I',  function (index) {
return C$.superclazz.prototype.deleteCharAt$I.apply(this, [index]);
});

Clazz_newMeth(C$, 'replace$I$I$S',  function (start, end, str) {
return C$.superclazz.prototype.replace$I$I$S.apply(this, [start, end, str]);
});

Clazz_newMeth(C$, 'insert$I$CA$I$I',  function (index, str, offset, len) {
return C$.superclazz.prototype.insert$I$CA$I$I.apply(this, [index, str, offset, len]);
});

Clazz_newMeth(C$, 'insert$I$O',  function (offset, obj) {
return C$.superclazz.prototype.insert$I$O.apply(this, [offset, obj]);
});

Clazz_newMeth(C$, 'insert$I$S',  function (offset, str) {
return C$.superclazz.prototype.insert$I$S.apply(this, [offset, str]);
});

Clazz_newMeth(C$, 'insert$I$CA',  function (offset, str) {
return C$.superclazz.prototype.insert$I$CA.apply(this, [offset, str]);
});

Clazz_newMeth(C$, 'insert$I$CharSequence',  function (dstOffset, s) {
return C$.superclazz.prototype.insert$I$CharSequence.apply(this, [dstOffset, s]);
});

Clazz_newMeth(C$, 'insert$I$CharSequence$I$I',  function (dstOffset, s, start, end) {
return C$.superclazz.prototype.insert$I$CharSequence$I$I.apply(this, [dstOffset, s, start, end]);
});

Clazz_newMeth(C$, 'insert$I$Z',  function (offset, b) {
return C$.superclazz.prototype.insert$I$Z.apply(this, [offset, b]);
});

Clazz_newMeth(C$, 'insert$I$C',  function (offset, c) {
return C$.superclazz.prototype.insert$I$C.apply(this, [offset, c]);
});

Clazz_newMeth(C$, 'insert$I$I',  function (offset, i) {
return C$.superclazz.prototype.insert$I$I.apply(this, [offset, i]);
});

Clazz_newMeth(C$, 'insert$I$J',  function (offset, l) {
return C$.superclazz.prototype.insert$I$J.apply(this, [offset, l]);
});

Clazz_newMeth(C$, 'insert$I$F',  function (offset, f) {
return C$.superclazz.prototype.insert$I$F.apply(this, [offset, f]);
});

Clazz_newMeth(C$, 'insert$I$D',  function (offset, d) {
return C$.superclazz.prototype.insert$I$D.apply(this, [offset, d]);
});

Clazz_newMeth(C$, 'indexOf$S',  function (str) {
return C$.superclazz.prototype.indexOf$S.apply(this, [str]);
});

Clazz_newMeth(C$, 'indexOf$S$I',  function (str, fromIndex) {
return C$.superclazz.prototype.indexOf$S$I.apply(this, [str, fromIndex]);
});

Clazz_newMeth(C$, 'lastIndexOf$S',  function (str) {
return C$.superclazz.prototype.lastIndexOf$S.apply(this, [str]);
});

Clazz_newMeth(C$, 'lastIndexOf$S$I',  function (str, fromIndex) {
return C$.superclazz.prototype.lastIndexOf$S$I.apply(this, [str, fromIndex]);
});

Clazz_newMeth(C$, 'reverse$',  function () {
return C$.superclazz.prototype.reverse$.apply(this, []);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.秘s;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:21 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,p$1={},I$=[[0,'swingjs.JSThreadGroup','swingjs.JSUtil','ThreadLocal','ThreadGroup','swingjs.JSToolkit','ThreadDeath','NoSuchMethodError','java.util.HashMap',['Thread','.State']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Thread", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'Runnable');
C$.$classes$=[['State',25],['UncaughtExceptionHandler',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.priority=5;
this.daemon=false;
this.threadLocals=null;
this.inheritableThreadLocals=null;
this.threadStatus=0;
},1);

C$.$fields$=[['Z',['daemon','stopBeforeStart','started','interrupted','stopped'],'I',['priority','threadStatus'],'J',['tid'],'S',['name'],'O',['target','Runnable','group','ThreadGroup','threadLocals','ThreadLocal.ThreadLocalMap','+inheritableThreadLocals','parkBlocker','java.lang.Object','throwableFromStop','Throwable','me','Thread','uncaughtExceptionHandler','Thread.UncaughtExceptionHandler']]
,['I',['threadInitNumber'],'J',['threadSeqNumber'],'O',['秘thisThread','javajs.util.JSThread','defaultUncaughtExceptionHandler','Thread.UncaughtExceptionHandler']]]

Clazz_newMeth(C$, 'nextThreadNum$',  function () {
return C$.threadInitNumber++;
}, 1);

Clazz_newMeth(C$, 'nextThreadID$',  function () {
return (C$.threadSeqNumber=Long.$inc(C$.threadSeqNumber,1));
}, 1);

Clazz_newMeth(C$, 'currentThread$',  function () {
var t=C$.秘thisThread;
if (t === "working" ) return null;
if (t == null ) {
C$.秘thisThread="working";
C$.秘thisThread=Clazz_new_(C$.c$$S,["master"]);
var name=J2S._applets["master"]._id ||null;
var g=Clazz_new_($I$(1,1).c$$ThreadGroup$S,[null, name]);
C$.秘thisThread=Clazz_new_(Clazz_load("javajs.util.JSThread").c$$ThreadGroup$S, [g, name]) ||null;
C$.秘thisThread.setPriority$I(5);
}return C$.秘thisThread;
}, 1);

Clazz_newMeth(C$, 'yield$',  function () {
$I$(2).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'sleep$J',  function (millis) {
$I$(2).notImplemented$S(null);
throw Clazz_new_(Clazz_load('InterruptedException').c$$S,["SwingJS does not implement Thread.sleep(long)"]);
}, 1);

Clazz_newMeth(C$, 'sleep$J$I',  function (millis, nanos) {
if (Long.$lt(millis,0 )) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["timeout value is negative"]);
}if (nanos < 0 || nanos > 999999 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["nanosecond timeout value out of range"]);
}if (nanos >= 500000 || (nanos != 0 && Long.$eq(millis,0 ) ) ) {
(millis=Long.$inc(millis,1));
}$I$(2).notImplemented$S(null);
throw Clazz_new_(Clazz_load('InterruptedException').c$$S,["SwingJS does not implement Thread.sleep(long,int)"]);
}, 1);

Clazz_newMeth(C$, 'init$ThreadGroup$Runnable$S$J',  function (g, target, name, stackSize) {
p$1.init$ThreadGroup$Runnable$S$J$O.apply(this, [g, target, name, stackSize, null]);
}, p$1);

Clazz_newMeth(C$, 'init$ThreadGroup$Runnable$S$J$O',  function (g, target, name, stackSize, acc) {
var parent=(C$.秘thisThread == null  ? null : C$.秘thisThread);
if (g == null ) {
if (g == null  && parent != null   && !parent.equals$O("working") ) {
g=parent.getThreadGroup$();
}}if (g == null ) {
g=this.newThreadGroup$ThreadGroup$S(null, name);
parent=this;
}g.addUnstarted$();
this.group=g;
this.priority=parent.getPriority$();
this.name=name;
this.target=target;
this.setPriority$I(this.priority);
if (parent.inheritableThreadLocals != null ) this.inheritableThreadLocals=$I$(3).createInheritedMap$ThreadLocal_ThreadLocalMap(parent.inheritableThreadLocals);
this.tid=C$.nextThreadID$();
this.me=this;
}, p$1);

Clazz_newMeth(C$, 'newThreadGroup$ThreadGroup$S',  function (group, name) {
return Clazz_new_($I$(4,1).c$$ThreadGroup$S,[group, name]);
});

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [null, null, "Thread-" + C$.nextThreadNum$(), 0]);
}, 1);

Clazz_newMeth(C$, 'c$$Runnable',  function (target) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [null, target, "Thread-" + C$.nextThreadNum$(), 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$Runnable',  function (group, target) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [group, target, "Thread-" + C$.nextThreadNum$(), 0]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [null, null, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S',  function (group, name) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [group, null, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$Runnable$S',  function (target, name) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [null, target, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$Runnable$S',  function (group, target, name) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [group, target, name, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$Runnable$S$J',  function (group, target, name, stackSize) {
;C$.$init$.apply(this);
p$1.init$ThreadGroup$Runnable$S$J.apply(this, [group, target, name, stackSize]);
}, 1);

Clazz_newMeth(C$, 'start$',  function () {
if (this.threadStatus != 0 || this !== this.me  ) throw Clazz_new_(Clazz_load('IllegalThreadStateException'));
this.group.add$Thread(this);
p$1.start0.apply(this, []);
if (this.stopBeforeStart) {
p$1.stop0$O.apply(this, [this.throwableFromStop]);
}});

Clazz_newMeth(C$, 'start0',  function () {
this.started=true;
C$.currentThread$().getThreadGroup$().秘transferJ2SInfo$ThreadGroup(this.getThreadGroup$());
$I$(5).startThread$Thread(this);
}, p$1);

Clazz_newMeth(C$, 'run$',  function () {
if (this.target != null ) {
this.target.run$();
}});

Clazz_newMeth(C$, 'stop$',  function () {
if ((this.threadStatus != 0) && !this.isAlive$() ) {
return;
}p$1.stop1$Throwable.apply(this, [Clazz_new_($I$(6,1))]);
});

Clazz_newMeth(C$, 'stop$Throwable',  function (obj) {
p$1.stop1$Throwable.apply(this, [obj]);
});

Clazz_newMeth(C$, 'stop1$Throwable',  function (th) {
if (this.threadStatus != 0) {
this.resume$();
p$1.stop0$O.apply(this, [th]);
} else {
if (th == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}this.stopBeforeStart=true;
this.throwableFromStop=th;
}}, p$1);

Clazz_newMeth(C$, 'interrupt$',  function () {
p$1.interrupt0.apply(this, []);
});

Clazz_newMeth(C$, 'interrupted$',  function () {
return p$1.isInterruptedB$Z.apply(C$.currentThread$(), [true]);
}, 1);

Clazz_newMeth(C$, 'isInterrupted$',  function () {
return p$1.isInterruptedB$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'isInterruptedB$Z',  function (clearInterrupted) {
var wasInt=this.interrupted;
if (clearInterrupted) this.interrupted=false;
return wasInt;
}, p$1);

Clazz_newMeth(C$, 'destroy$',  function () {
throw Clazz_new_($I$(7,1));
});

Clazz_newMeth(C$, 'isAlive$',  function () {
return this.started && !this.stopped ;
});

Clazz_newMeth(C$, 'suspend$',  function () {
this.checkAccess$();
p$1.suspend0.apply(this, []);
});

Clazz_newMeth(C$, 'resume$',  function () {
this.checkAccess$();
p$1.resume0.apply(this, []);
});

Clazz_newMeth(C$, 'setPriority$I',  function (newPriority) {
var g;
this.checkAccess$();
if (newPriority > 10 || newPriority < 1 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException'));
}if ((g=this.getThreadGroup$()) != null ) {
if (newPriority > g.getMaxPriority$()) {
newPriority=g.getMaxPriority$();
}p$1.setPriority0$I.apply(this, [this.priority=newPriority]);
}});

Clazz_newMeth(C$, 'getPriority$',  function () {
return this.priority;
});

Clazz_newMeth(C$, 'setName$S',  function (name) {
this.checkAccess$();
this.name=name;
});

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'getThreadGroup$',  function () {
return this.group;
});

Clazz_newMeth(C$, 'activeCount$',  function () {
return C$.currentThread$().getThreadGroup$().activeCount$();
}, 1);

Clazz_newMeth(C$, 'enumerate$ThreadA',  function (tarray) {
return C$.currentThread$().getThreadGroup$().enumerate$ThreadA(tarray);
}, 1);

Clazz_newMeth(C$, 'countStackFrames$',  function () {
return 0;
});

Clazz_newMeth(C$, 'join$J',  function (millis) {
if (Long.$lt(millis,0 )) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["timeout value is negative"]);
}$I$(2).notImplemented$S(null);
});

Clazz_newMeth(C$, 'join$J$I',  function (millis, nanos) {
if (Long.$lt(millis,0 )) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["timeout value is negative"]);
}if (nanos < 0 || nanos > 999999 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["nanosecond timeout value out of range"]);
}if (nanos >= 500000 || (nanos != 0 && Long.$eq(millis,0 ) ) ) {
(millis=Long.$inc(millis,1));
}this.join$J(millis);
});

Clazz_newMeth(C$, 'join$',  function () {
this.join$J(0);
});

Clazz_newMeth(C$, 'dumpStack$',  function () {
Clazz_new_(Clazz_load('Exception').c$$S,["Stack trace"]).printStackTrace$();
}, 1);

Clazz_newMeth(C$, 'setDaemon$Z',  function (on) {
this.checkAccess$();
if (this.isAlive$()) {
throw Clazz_new_(Clazz_load('IllegalThreadStateException'));
}this.daemon=on;
});

Clazz_newMeth(C$, 'isDaemon$',  function () {
return this.daemon;
});

Clazz_newMeth(C$, 'checkAccess$',  function () {
});

Clazz_newMeth(C$, 'toString',  function () {
var group=this.getThreadGroup$();
if (group != null ) {
return "Thread[" + this.getName$() + "," + this.getPriority$() + "," + group.getName$() + "]" ;
} else {
return "Thread[" + this.getName$() + "," + this.getPriority$() + "," + "" + "]" ;
}});

Clazz_newMeth(C$, 'getContextClassLoader$',  function () {
var cl=Clazz_getClass($I$(2)).getClassLoader$();

cl.baseClass = {getName$:function(){return ""}};
return cl;
});

Clazz_newMeth(C$, 'setContextClassLoader$ClassLoader',  function (cl) {
});

Clazz_newMeth(C$, 'holdsLock$O',  function (obj) {
return false;
}, 1);

Clazz_newMeth(C$, 'getStackTrace$',  function () {
return (Clazz_new_(Clazz_load('Exception'))).getStackTrace$();
});

Clazz_newMeth(C$, 'getAllStackTraces$',  function () {
var threads=C$.getThreads$();
var traces=C$.dumpThreads$ThreadA(threads);
var m=Clazz_new_($I$(8,1).c$$I,[threads.length]);
for (var i=0; i < threads.length; i++) {
var stackTrace=traces[i];
if (stackTrace != null ) {
m.put$O$O(threads[i], stackTrace);
}}
return m;
}, 1);

Clazz_newMeth(C$, 'dumpThreads$ThreadA',  function (threads) {
return null;
}, 1);

Clazz_newMeth(C$, 'getThreads$',  function () {
return null;
}, 1);

Clazz_newMeth(C$, 'getId$',  function () {
return this.tid;
});

Clazz_newMeth(C$, 'getState$',  function () {
switch (this.threadStatus) {
case 0:
return $I$(9).NEW;
case 1:
return $I$(9).RUNNABLE;
case 2:
default:
return $I$(9).TERMINATED;
case 3:
return $I$(9).TIMED_WAITING;
case 4:
return $I$(9).WAITING;
}
});

Clazz_newMeth(C$, 'setDefaultUncaughtExceptionHandler$Thread_UncaughtExceptionHandler',  function (eh) {
C$.defaultUncaughtExceptionHandler=eh;
}, 1);

Clazz_newMeth(C$, 'getDefaultUncaughtExceptionHandler$',  function () {
return C$.defaultUncaughtExceptionHandler;
}, 1);

Clazz_newMeth(C$, 'getUncaughtExceptionHandler$',  function () {
return this.uncaughtExceptionHandler != null  ? this.uncaughtExceptionHandler : this.group;
});

Clazz_newMeth(C$, 'setUncaughtExceptionHandler$Thread_UncaughtExceptionHandler',  function (eh) {
this.checkAccess$();
this.uncaughtExceptionHandler=eh;
});

Clazz_newMeth(C$, 'setPriority0$I',  function (newPriority) {
}, p$1);

Clazz_newMeth(C$, 'stop0$O',  function (o) {
this.stopped=true;
}, p$1);

Clazz_newMeth(C$, 'suspend0',  function () {
}, p$1);

Clazz_newMeth(C$, 'resume0',  function () {
}, p$1);

Clazz_newMeth(C$, 'interrupt0',  function () {
this.interrupted=true;
}, p$1);
;
(function(){/*e*/var C$=Clazz_newClass(P$.Thread, "State", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "NEW", 0, []);
Clazz_newEnumConst($vals, C$.c$, "RUNNABLE", 1, []);
Clazz_newEnumConst($vals, C$.c$, "BLOCKED", 2, []);
Clazz_newEnumConst($vals, C$.c$, "WAITING", 3, []);
Clazz_newEnumConst($vals, C$.c$, "TIMED_WAITING", 4, []);
Clazz_newEnumConst($vals, C$.c$, "TERMINATED", 5, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.Thread, "UncaughtExceptionHandler", function(){
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:21 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.lang,p$1={},I$=[[0,'Thread','java.util.Arrays','java.util.ArrayList']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ThreadGroup", null, null, [['Thread','Thread.UncaughtExceptionHandler']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.maxPriority=10;
this.nUnstartedThreads=0;
},1);

C$.$fields$=[['Z',['destroyed','daemon','vmAllowSuspension','秘systemExited'],'I',['maxPriority','nUnstartedThreads','nthreads','ngroups'],'S',['name'],'O',['parent','ThreadGroup','threads','Thread[]','groups','ThreadGroup[]','秘html5Applet','swingjs.api.js.HTML5Applet','秘appletViewer','swingjs.JSAppletViewer','秘timerQueue','java.util.ArrayList']]]

Clazz_newMeth(C$, 'c$$S',  function (name) {
C$.c$$ThreadGroup$S.apply(this, [$I$(1).currentThread$().getThreadGroup$(), name]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S',  function (parent, name) {
;C$.$init$.apply(this);
this.name=name;
this.parent=parent;
if (parent != null ) {
this.maxPriority=parent.maxPriority;
this.daemon=parent.daemon;
this.vmAllowSuspension=parent.vmAllowSuspension;
p$1.add$ThreadGroup.apply(parent, [this]);
}}, 1);

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'getParent$',  function () {
if (this.parent != null ) this.parent.checkAccess$();
return this.parent;
});

Clazz_newMeth(C$, 'getMaxPriority$',  function () {
return this.maxPriority;
});

Clazz_newMeth(C$, 'isDaemon$',  function () {
return this.daemon;
});

Clazz_newMeth(C$, 'isDestroyed$',  function () {
return this.destroyed;
});

Clazz_newMeth(C$, 'setDaemon$Z',  function (daemon) {
this.checkAccess$();
this.daemon=daemon;
});

Clazz_newMeth(C$, 'setMaxPriority$I',  function (pri) {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess$();
if (pri < 1 || pri > 10 ) {
return;
}this.maxPriority=(this.parent != null ) ? Math.min(pri, this.parent.maxPriority) : pri;
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}for (var i=0; i < ngroupsSnapshot; i++) {
groupsSnapshot[i].setMaxPriority$I(pri);
}
});

Clazz_newMeth(C$, 'parentOf$ThreadGroup',  function (g) {
for (; g != null ; g=g.parent) {
if (g === this ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'checkAccess$',  function () {
});

Clazz_newMeth(C$, 'activeCount$',  function () {
var result;
var ngroupsSnapshot;
var groupsSnapshot;
{
if (this.destroyed) {
return 0;
}result=this.nthreads;
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}for (var i=0; i < ngroupsSnapshot; i++) {
result+=groupsSnapshot[i].activeCount$();
}
return result;
});

Clazz_newMeth(C$, 'enumerate$ThreadA',  function (list) {
this.checkAccess$();
return p$1.enumerate$ThreadA$I$Z.apply(this, [list, 0, true]);
});

Clazz_newMeth(C$, 'enumerate$ThreadA$Z',  function (list, recurse) {
this.checkAccess$();
return p$1.enumerate$ThreadA$I$Z.apply(this, [list, 0, recurse]);
});

Clazz_newMeth(C$, 'enumerate$ThreadA$I$Z',  function (list, n, recurse) {
var ngroupsSnapshot=0;
var groupsSnapshot=null;
{
if (this.destroyed) {
return 0;
}var nt=this.nthreads;
if (nt > list.length - n) {
nt=list.length - n;
}for (var i=0; i < nt; i++) {
if (this.threads[i].isAlive$()) {
list[n++]=this.threads[i];
}}
if (recurse) {
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}}if (recurse) {
for (var i=0; i < ngroupsSnapshot; i++) {
n=p$1.enumerate$ThreadA$I$Z.apply(groupsSnapshot[i], [list, n, true]);
}
}return n;
}, p$1);

Clazz_newMeth(C$, 'activeGroupCount$',  function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
if (this.destroyed) {
return 0;
}ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}var n=ngroupsSnapshot;
for (var i=0; i < ngroupsSnapshot; i++) {
n+=groupsSnapshot[i].activeGroupCount$();
}
return n;
});

Clazz_newMeth(C$, 'enumerate$ThreadGroupA',  function (list) {
this.checkAccess$();
return p$1.enumerate$ThreadGroupA$I$Z.apply(this, [list, 0, true]);
});

Clazz_newMeth(C$, 'enumerate$ThreadGroupA$Z',  function (list, recurse) {
this.checkAccess$();
return p$1.enumerate$ThreadGroupA$I$Z.apply(this, [list, 0, recurse]);
});

Clazz_newMeth(C$, 'enumerate$ThreadGroupA$I$Z',  function (list, n, recurse) {
var ngroupsSnapshot=0;
var groupsSnapshot=null;
{
if (this.destroyed) {
return 0;
}var ng=this.ngroups;
if (ng > list.length - n) {
ng=list.length - n;
}if (ng > 0) {
System.arraycopy$O$I$O$I$I(this.groups, 0, list, n, ng);
n+=ng;
}if (recurse) {
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}}if (recurse) {
for (var i=0; i < ngroupsSnapshot; i++) {
n=p$1.enumerate$ThreadGroupA$I$Z.apply(groupsSnapshot[i], [list, n, true]);
}
}return n;
}, p$1);

Clazz_newMeth(C$, 'stop$',  function () {
if (p$1.stopOrSuspend$Z.apply(this, [false])) $I$(1).currentThread$().stop$();
});

Clazz_newMeth(C$, 'interrupt$',  function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess$();
for (var i=0; i < this.nthreads; i++) {
this.threads[i].interrupt$();
}
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}for (var i=0; i < ngroupsSnapshot; i++) {
groupsSnapshot[i].interrupt$();
}
});

Clazz_newMeth(C$, 'suspend$',  function () {
if (p$1.stopOrSuspend$Z.apply(this, [true])) $I$(1).currentThread$().suspend$();
});

Clazz_newMeth(C$, 'stopOrSuspend$Z',  function (suspend) {
var suicide=false;
var us=$I$(1).currentThread$();
var ngroupsSnapshot;
var groupsSnapshot=null;
{
this.checkAccess$();
for (var i=0; i < this.nthreads; i++) {
if (this.threads[i] === us ) suicide=true;
 else if (suspend) this.threads[i].suspend$();
 else this.threads[i].stop$();
}
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
}}for (var i=0; i < ngroupsSnapshot; i++) suicide=p$1.stopOrSuspend$Z.apply(groupsSnapshot[i], [suspend]) || suicide ;

return suicide;
}, p$1);

Clazz_newMeth(C$, 'resume$',  function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess$();
for (var i=0; i < this.nthreads; i++) {
this.threads[i].resume$();
}
ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}}for (var i=0; i < ngroupsSnapshot; i++) {
groupsSnapshot[i].resume$();
}
});

Clazz_newMeth(C$, 'destroy$',  function () {
var ngroupsSnapshot;
var groupsSnapshot;
{
this.checkAccess$();
if (this.destroyed || (this.nthreads > 0) ) {
throw Clazz_new_(Clazz_load('IllegalThreadStateException'));
}ngroupsSnapshot=this.ngroups;
if (this.groups != null ) {
groupsSnapshot=$I$(2).copyOf$OA$I(this.groups, ngroupsSnapshot);
} else {
groupsSnapshot=null;
}if (this.parent != null ) {
this.destroyed=true;
this.ngroups=0;
this.groups=null;
this.nthreads=0;
this.threads=null;
}}for (var i=0; i < ngroupsSnapshot; i+=1) {
groupsSnapshot[i].destroy$();
}
if (this.parent != null ) {
p$1.remove$ThreadGroup.apply(this.parent, [this]);
}});

Clazz_newMeth(C$, 'add$ThreadGroup',  function (g) {
{
if (this.destroyed) {
throw Clazz_new_(Clazz_load('IllegalThreadStateException'));
}if (this.groups == null ) {
this.groups=Clazz_array(C$, [4]);
} else if (this.ngroups == this.groups.length) {
this.groups=$I$(2).copyOf$OA$I(this.groups, this.ngroups * 2);
}this.groups[this.ngroups]=g;
++this.ngroups;
}}, p$1);

Clazz_newMeth(C$, 'remove$ThreadGroup',  function (g) {
{
if (this.destroyed) {
return;
}for (var i=0; i < this.ngroups; i++) {
if (this.groups[i] === g ) {
this.ngroups-=1;
System.arraycopy$O$I$O$I$I(this.groups, i + 1, this.groups, i, this.ngroups - i);
this.groups[this.ngroups]=null;
break;
}}
if (this.nthreads == 0) {
this.notifyAll$();
}if (this.daemon && (this.nthreads == 0) && (this.nUnstartedThreads == 0) && (this.ngroups == 0)  ) {
this.destroy$();
}}}, p$1);

Clazz_newMeth(C$, 'addUnstarted$',  function () {
{
if (this.destroyed) {
throw Clazz_new_(Clazz_load('IllegalThreadStateException'));
}++this.nUnstartedThreads;
}});

Clazz_newMeth(C$, 'add$Thread',  function (t) {
{
if (this.destroyed) {
throw Clazz_new_(Clazz_load('IllegalThreadStateException'));
}if (this.threads == null ) {
this.threads=Clazz_array($I$(1), [4]);
} else if (this.nthreads == this.threads.length) {
this.threads=$I$(2).copyOf$OA$I(this.threads, this.nthreads * 2);
}this.threads[this.nthreads]=t;
++this.nthreads;
--this.nUnstartedThreads;
}});

Clazz_newMeth(C$, 'remove$Thread',  function (t) {
{
if (this.destroyed) {
return;
}for (var i=0; i < this.nthreads; i++) {
if (this.threads[i] === t ) {
System.arraycopy$O$I$O$I$I(this.threads, i + 1, this.threads, i, --this.nthreads - i);
this.threads[this.nthreads]=null;
break;
}}
if (this.nthreads == 0) {
this.notifyAll$();
}if (this.daemon && (this.nthreads == 0) && (this.nUnstartedThreads == 0) && (this.ngroups == 0)  ) {
this.destroy$();
}}});

Clazz_newMeth(C$, 'uncaughtException$Thread$Throwable',  function (t, e) {
if (this.parent != null ) {
this.parent.uncaughtException$Thread$Throwable(t, e);
} else {
var ueh=$I$(1).getDefaultUncaughtExceptionHandler$();
if (ueh != null ) {
ueh.uncaughtException$Thread$Throwable(t, e);
} else if (!(Clazz_instanceOf(e, "java.lang.ThreadDeath"))) {
System.err.print$S("Exception in thread \"" + t.getName$() + "\" " );
e.printStackTrace$java_io_PrintStream(System.err);
}}});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[name=" + this.getName$() + ",maxpri=" + this.maxPriority + ",html5Applet=" + this.秘html5Applet + "]" ;
});

Clazz_newMeth(C$, '秘getTimerQueue$',  function () {
return (this.秘systemExited ? null : this.秘timerQueue == null  ? (this.秘timerQueue=Clazz_new_($I$(3,1))) : this.秘timerQueue);
});

Clazz_newMeth(C$, '秘exit$',  function () {
var q=this.秘systemExited ? null : this.秘timerQueue;
if (q != null ) for (var i=q.size$(); --i >= 0; ) {
var t=q.get$I(i);
try {
t.stop$();
} catch (e) {
}
}
this.秘systemExited=true;
});

Clazz_newMeth(C$, '秘transferJ2SInfo$ThreadGroup',  function (g) {
g.秘appletViewer=this.秘appletViewer;
g.秘html5Applet=this.秘html5Applet;
g.秘timerQueue=this.秘timerQueue;
});

Clazz_newMeth(C$, '秘getAppletViewer$',  function () {
var a=this.秘appletViewer;
if (a == null ) {

a = this.秘html5Applet._appletPanel;
this.秘appletViewer=a;
}return a;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:21 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.net"),p$1={},I$=[[0,'java.util.Hashtable','java.net.Parts','java.net.URI','javajs.util.AjaxURLConnection','Error','javajs.util.AjaxURLStreamHandlerFactory']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "URL");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.port=-1;
this.hashCode=-1;
},1);

C$.$fields$=[['I',['port','hashCode'],'S',['protocol','host','file','query','authority','path','userInfo','ref'],'O',['handler','java.net.URLStreamHandler','_streamData','java.lang.Object']]
,['O',['秘factory','java.net.URLStreamHandlerFactory','handlers','java.util.Hashtable','streamHandlerLock','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$S$S$I$S',  function (protocol, host, port, file) {
C$.c$$S$S$I$S$java_net_URLStreamHandler.apply(this, [protocol, host, port, file, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S',  function (protocol, host, file) {
C$.c$$S$S$I$S.apply(this, [protocol, host, -1, file]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$I$S$java_net_URLStreamHandler',  function (protocol, host, port, file, handler) {
;C$.$init$.apply(this);
protocol=protocol.toLowerCase$();
this.protocol=protocol;
if (host != null ) {
if (host.indexOf$I(":") >= 0 && !host.startsWith$S("[") ) {
host="[" + host + "]" ;
}this.host=host;
if (port < -1) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["Invalid port number :" + port]);
}this.port=port;
this.authority=(port == -1) ? host : host + ":" + port ;
}var parts=Clazz_new_($I$(2,1).c$$S,[file]);
this.path=parts.getPath$();
this.query=parts.getQuery$();
if (this.query != null ) {
this.file=this.path + "?" + this.query ;
} else {
this.file=this.path;
}this.ref=parts.getRef$();
if (handler == null  && (handler=C$.getURLStreamHandler$S(protocol)) == null  ) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["unknown protocol: " + protocol]);
}this.handler=handler;
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (spec) {
C$.c$$java_net_URL$S$java_net_URLStreamHandler.apply(this, [null, spec, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_net_URL$S',  function (context, spec) {
C$.c$$java_net_URL$S$java_net_URLStreamHandler.apply(this, [context, spec, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_net_URL$S$java_net_URLStreamHandler',  function (context, spec, handler) {
;C$.$init$.apply(this);
spec=spec.trim$();
var original=spec;
var i;
var limit;
var c;
var start=0;
var newProtocol=null;
var aRef=false;
var isRelative=false;
try {
limit=spec.length$();
if (spec.regionMatches$Z$I$S$I$I(true, start, "url:", 0, 4)) {
start+=4;
}if (start < spec.length$() && spec.charAt$I(start) == "#" ) {
aRef=true;
}for (i=start; !aRef && (i < limit) && ((c=spec.charAt$I(i).$c()) != 47 )  ; i++) {
if (c == 58 ) {
var s=spec.substring$I$I(start, i).toLowerCase$();
if (p$1.isValidProtocol$S.apply(this, [s])) {
newProtocol=s;
start=i + 1;
}break;
}}
this.protocol=newProtocol;
if ((context != null ) && ((newProtocol == null ) || newProtocol.equalsIgnoreCase$S(context.protocol) ) ) {
if (handler == null ) {
handler=context.handler;
}if (context.path != null  && context.path.startsWith$S("/") ) newProtocol=null;
if (newProtocol == null ) {
this.protocol=context.protocol;
this.authority=context.authority;
this.userInfo=context.userInfo;
this.host=context.host;
this.port=context.port;
this.file=context.file;
this.path=context.path;
isRelative=true;
}}if (this.protocol == null ) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["no protocol: " + original]);
}if (handler == null  && (handler=C$.getURLStreamHandler$S(this.protocol)) == null  ) {
throw Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,["unknown protocol: " + this.protocol]);
}this.handler=handler;
i=spec.indexOf$I$I("#", start);
if (i >= 0) {
this.ref=spec.substring$I$I(i + 1, limit);
limit=i;
}if (isRelative && start == limit ) {
this.query=context.query;
if (this.ref == null ) {
this.ref=context.ref;
}}handler.parseURL$java_net_URL$S$I$I(this, spec, start, limit);
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"java.net.MalformedURLException")){
var e = e$$;
{
throw e;
}
} else if (Clazz_exceptionOf(e$$,"Exception")){
var e = e$$;
{
var exception=Clazz_new_(Clazz_load('java.net.MalformedURLException').c$$S,[e.getMessage$()]);
exception.initCause$Throwable(e);
throw exception;
}
} else {
throw e$$;
}
}
}, 1);

Clazz_newMeth(C$, 'isValidProtocol$S',  function (protocol) {
var len=protocol.length$();
if (len < 1) return false;
var c=protocol.charAt$I(0);
if (!Character.isLetter$C(c)) return false;
for (var i=1; i < len; i++) {
c=protocol.charAt$I(i);
if (!Character.isLetterOrDigit$C(c) && c != "."  && c != "+"  && c != "-" ) {
return false;
}}
return true;
}, p$1);

Clazz_newMeth(C$, 'set5$S$S$I$S$S',  function (protocol, host, port, file, ref) {
{
this.protocol=protocol;
this.host=host;
this.authority=port == -1 ? host : host + ":" + port ;
this.port=port;
this.file=file;
this.ref=ref;
this.hashCode=-1;
var q=file.lastIndexOf$I("?");
if (q != -1) {
this.query=file.substring$I(q + 1);
this.path=file.substring$I$I(0, q);
} else this.path=file;
}});

Clazz_newMeth(C$, 'set$S$S$I$S$S$S$S$S',  function (protocol, host, port, authority, userInfo, path, query, ref) {
{
this.protocol=protocol;
this.host=host;
this.port=port;
this.file=query == null  ? path : path + "?" + query ;
this.userInfo=userInfo;
this.path=path;
this.ref=ref;
this.hashCode=-1;
this.query=query;
this.authority=authority;
}});

Clazz_newMeth(C$, 'getQuery$',  function () {
return this.query;
});

Clazz_newMeth(C$, 'getPath$',  function () {
return this.path;
});

Clazz_newMeth(C$, 'getUserInfo$',  function () {
return this.userInfo;
});

Clazz_newMeth(C$, 'getAuthority$',  function () {
return this.authority;
});

Clazz_newMeth(C$, 'getPort$',  function () {
return this.port;
});

Clazz_newMeth(C$, 'getDefaultPort$',  function () {
return this.handler.getDefaultPort$();
});

Clazz_newMeth(C$, 'getProtocol$',  function () {
return this.protocol;
});

Clazz_newMeth(C$, 'getHost$',  function () {
return this.host;
});

Clazz_newMeth(C$, 'getFile$',  function () {
return this.file;
});

Clazz_newMeth(C$, 'getRef$',  function () {
return this.ref;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "java.net.URL"))) return false;
var u2=obj;
return this.handler.equals2$java_net_URL$java_net_URL(this, u2);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
if (this.hashCode != -1) return this.hashCode;
this.hashCode=this.handler.hashCode$java_net_URL(this);
return this.hashCode;
});

Clazz_newMeth(C$, 'sameFile$java_net_URL',  function (other) {
return this.handler.sameFile$java_net_URL$java_net_URL(this, other);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.handler.toExternalForm$java_net_URL(this);
});

Clazz_newMeth(C$, 'toExternalForm$',  function () {
return this.handler.toExternalForm$java_net_URL(this);
});

Clazz_newMeth(C$, 'toURI$',  function () {
var uri=Clazz_new_([this.toString()],$I$(3,1).c$$S);
uri.秘bytes=this._streamData;
return uri;
});

Clazz_newMeth(C$, 'openConnection$',  function () {
return this.handler.openConnection$java_net_URL(this);
});

Clazz_newMeth(C$, 'openStream$',  function () {
return this.openConnection$().getInputStream$();
});

Clazz_newMeth(C$, 'getBytesAsync$java_util_function_Function',  function (whenDone) {
try {
this.openConnection$().getBytesAsync$java_util_function_Function(whenDone);
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
whenDone.apply$O(null);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getContent$',  function () {
var bis=$I$(4).getAttachedStreamData$java_net_URL$Z(this, false);
return (bis == null  ? this.openConnection$().getInputStream$() : bis);
});

Clazz_newMeth(C$, 'setURLStreamHandlerFactory$java_net_URLStreamHandlerFactory',  function (fac) {
{
if (C$.秘factory != null ) {
throw Clazz_new_($I$(5,1).c$$S,["factory already defined"]);
}var security=System.getSecurityManager$();
if (security != null ) {
security.checkSetFactory$();
}C$.handlers.clear$();
C$.秘factory=fac;
}}, 1);

Clazz_newMeth(C$, 'getURLStreamHandler$S',  function (protocol) {
var handler=C$.handlers.get$O(protocol);
if (handler == null ) {
if (C$.秘factory == null ) {
try {
C$.setURLStreamHandlerFactory$java_net_URLStreamHandlerFactory(Clazz_new_($I$(6,1)));
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
}if (C$.秘factory != null ) {
handler=C$.秘factory.createURLStreamHandler$S(protocol);
}}return handler;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.handlers=Clazz_new_($I$(1,1));
C$.streamHandlerLock= Clazz_new_();
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:22 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.net"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "URLStreamHandlerFactory");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:23 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "CharacterIterator", null, null, 'Cloneable');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Arrays','java.lang.reflect.Array','OutOfMemoryError','java.util.Objects','StringBuilder']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractCollection", null, null, 'java.util.Collection');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.size$() == 0;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
var it=this.iterator$();
if (o == null ) {
while (it.hasNext$())if (it.next$() == null ) return true;

} else {
while (it.hasNext$())if (o.equals$O(it.next$())) return true;

}return false;
});

Clazz_newMeth(C$, 'toArray$',  function () {
var r=Clazz_array(java.lang.Object, [this.size$()]);
var it=this.iterator$();
for (var i=0; i < r.length; i++) {
if (!it.hasNext$()) return $I$(1).copyOf$OA$I(r, i);
r[i]=it.next$();
}
return it.hasNext$() ? C$.finishToArray$OA$java_util_Iterator(r, it) : r;
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var size=this.size$();
var r=a.length >= size ? a : Clazz_array(a.getClass$().getComponentType$(), size);
var it=this.iterator$();
for (var i=0; i < r.length; i++) {
if (!it.hasNext$()) {
if (a === r ) {
r[i]=null;
} else if (a.length < i) {
return $I$(1).copyOf$OA$I(r, i);
} else {
System.arraycopy$O$I$O$I$I(r, 0, a, 0, i);
if (a.length > i) {
a[i]=null;
}}return a;
}r[i]=it.next$();
}
return it.hasNext$() ? C$.finishToArray$OA$java_util_Iterator(r, it) : r;
});

Clazz_newMeth(C$, 'finishToArray$OA$java_util_Iterator',  function (r, it) {
var i=r.length;
while (it.hasNext$()){
var cap=r.length;
if (i == cap) {
var newCap=cap + (cap >> 1) + 1 ;
if (newCap - 2147483639 > 0) newCap=C$.hugeCapacity$I(cap + 1);
r=$I$(1).copyOf$OA$I(r, newCap);
}r[i++]=it.next$();
}
return (i == r.length) ? r : $I$(1).copyOf$OA$I(r, i);
}, 1);

Clazz_newMeth(C$, 'hugeCapacity$I',  function (minCapacity) {
if (minCapacity < 0) throw Clazz_new_($I$(3,1).c$$S,["Required array size too large"]);
return (minCapacity > 2147483639) ? 2147483647 : 2147483639;
}, 1);

Clazz_newMeth(C$, 'add$O',  function (e) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
var it=this.iterator$();
if (o == null ) {
while (it.hasNext$()){
if (it.next$() == null ) {
it.remove$();
return true;
}}
} else {
while (it.hasNext$()){
if (o.equals$O(it.next$())) {
it.remove$();
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
for (var e, $e = c.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) if (!this.contains$O(e)) return false;

return true;
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (c) {
var modified=false;
for (var e, $e = c.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) if (this.add$O(e)) modified=true;

return modified;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
$I$(4).requireNonNull$O(c);
var modified=false;
var it=this.iterator$();
while (it.hasNext$()){
if (c.contains$O(it.next$())) {
it.remove$();
modified=true;
}}
return modified;
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (c) {
$I$(4).requireNonNull$O(c);
var modified=false;
var it=this.iterator$();
while (it.hasNext$()){
if (!c.contains$O(it.next$())) {
it.remove$();
modified=true;
}}
return modified;
});

Clazz_newMeth(C$, 'clear$',  function () {
var it=this.iterator$();
while (it.hasNext$()){
it.next$();
it.remove$();
}
});

Clazz_newMeth(C$, 'toString',  function () {
var it=this.iterator$();
if (!it.hasNext$()) return "[]";
var sb=Clazz_new_($I$(5,1));
sb.append$C("[");
for (; ; ) {
var e=it.next$();
sb.append$O(e === this  ? "(this Collection)" : e);
if (!it.hasNext$()) return sb.append$C("]").toString();
sb.append$C(",").append$C(" ");
}
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},p$2={},I$=[[0,['java.util.AbstractList','.Itr'],['java.util.AbstractList','.ListItr'],'java.util.RandomAccessSubList','java.util.SubList']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractList", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractCollection', 'java.util.List');
C$.$classes$=[['Itr',2],['ListItr',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.modCount=0;
},1);

C$.$fields$=[['I',['modCount']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'add$O',  function (e) {
this.add$I$O(this.size$(), e);
return true;
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
var it=this.listIterator$();
if (o == null ) {
while (it.hasNext$())if (it.next$() == null ) return it.previousIndex$();

} else {
while (it.hasNext$())if (o.equals$O(it.next$())) return it.previousIndex$();

}return -1;
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
var it=this.listIterator$I(this.size$());
if (o == null ) {
while (it.hasPrevious$())if (it.previous$() == null ) return it.nextIndex$();

} else {
while (it.hasPrevious$())if (o.equals$O(it.previous$())) return it.nextIndex$();

}return -1;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.removeRange$I$I(0, this.size$());
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
p$1.rangeCheckForAdd$I.apply(this, [index]);
var modified=false;
for (var e, $e = c.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
this.add$I$O(index++, e);
modified=true;
}
return modified;
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(1,1),[this, null]);
});

Clazz_newMeth(C$, 'listIterator$',  function () {
return this.listIterator$I(0);
});

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
p$1.rangeCheckForAdd$I.apply(this, [index]);
return Clazz_new_($I$(2,1).c$$I,[this, null, index]);
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
return (Clazz_instanceOf(this, "java.util.RandomAccess") ? Clazz_new_($I$(3,1).c$$java_util_AbstractList$I$I,[this, fromIndex, toIndex]) : Clazz_new_($I$(4,1).c$$java_util_AbstractList$I$I,[this, fromIndex, toIndex]));
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.List"))) return false;
var e1=this.listIterator$();
var e2=(o).listIterator$();
while (e1.hasNext$() && e2.hasNext$() ){
var o1=e1.next$();
var o2=e2.next$();
if (!(o1 == null  ? o2 == null  : o1.equals$O(o2))) return false;
}
return !(e1.hasNext$() || e2.hasNext$() );
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var hashCode=1;
for (var e, $e = this.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) hashCode=(31 * hashCode + (e == null  ? 0 : e.hashCode$())) & -1;

return hashCode;
});

Clazz_newMeth(C$, 'removeRange$I$I',  function (fromIndex, toIndex) {
var it=this.listIterator$I(fromIndex);
for (var i=0, n=toIndex - fromIndex; i < n; i++) {
it.next$();
it.remove$();
}
});

Clazz_newMeth(C$, 'rangeCheckForAdd$I',  function (index) {
if (index < 0 || index > this.size$() ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'outOfBoundsMsg$I',  function (index) {
return "Index: " + index + ", Size: " + this.size$() ;
}, p$1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractList, "Itr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.cursor=0;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.AbstractList'].modCount;
},1);

C$.$fields$=[['I',['cursor','lastRet','expectedModCount']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.cursor != this.b$['java.util.AbstractCollection'].size$.apply(this.b$['java.util.AbstractCollection'], []);
});

Clazz_newMeth(C$, 'next$',  function () {
this.checkForComodification$();
try {
var i=this.cursor;
var next=this.b$['java.util.AbstractList'].get$I.apply(this.b$['java.util.AbstractList'], [i]);
this.lastRet=i;
this.cursor=i + 1;
return next;
} catch (e) {
if (Clazz_exceptionOf(e,"IndexOutOfBoundsException")){
this.checkForComodification$();
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'remove$',  function () {
if (this.lastRet < 0) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
try {
this.b$['java.util.AbstractList'].remove$I.apply(this.b$['java.util.AbstractList'], [this.lastRet]);
if (this.lastRet < this.cursor) --this.cursor;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.AbstractList'].modCount;
} catch (e) {
if (Clazz_exceptionOf(e,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'checkForComodification$',  function () {
if (this.b$['java.util.AbstractList'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractList, "ListItr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.AbstractList','.Itr'], 'java.util.ListIterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I',  function (index) {
Clazz_super_(C$, this);
this.cursor=index;
}, 1);

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.cursor != 0;
});

Clazz_newMeth(C$, 'previous$',  function () {
this.checkForComodification$();
try {
var i=this.cursor - 1;
var previous=this.b$['java.util.AbstractList'].get$I.apply(this.b$['java.util.AbstractList'], [i]);
this.lastRet=this.cursor=i;
return previous;
} catch (e) {
if (Clazz_exceptionOf(e,"IndexOutOfBoundsException")){
this.checkForComodification$();
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.cursor;
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.cursor - 1;
});

Clazz_newMeth(C$, 'set$O',  function (e) {
if (this.lastRet < 0) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
try {
this.b$['java.util.AbstractList'].set$I$O.apply(this.b$['java.util.AbstractList'], [this.lastRet, e]);
this.expectedModCount=this.b$['java.util.AbstractList'].modCount;
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$, 'add$O',  function (e) {
this.checkForComodification$();
try {
var i=this.cursor;
this.b$['java.util.AbstractList'].add$I$O.apply(this.b$['java.util.AbstractList'], [i, e]);
this.lastRet=-1;
this.cursor=i + 1;
this.expectedModCount=this.b$['java.util.AbstractList'].modCount;
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.AbstractMap','java.util.AbstractSet','java.util.AbstractCollection','StringBuilder']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'java.util.Map');
C$.$classes$=[['SimpleEntry',9],['SimpleImmutableEntry',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.keySet=null;
this.values=null;
},1);

C$.$fields$=[['O',['keySet','java.util.Set','values','java.util.Collection']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.entrySet$().size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.size$() == 0;
});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
var i=this.entrySet$().iterator$();
if (value == null ) {
while (i.hasNext$()){
var e=i.next$();
if (e.getValue$() == null ) return true;
}
} else {
while (i.hasNext$()){
var e=i.next$();
if (value.equals$O(e.getValue$())) return true;
}
}return false;
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
var i=this.entrySet$().iterator$();
if (key == null ) {
while (i.hasNext$()){
var e=i.next$();
if (e.getKey$() == null ) return true;
}
} else {
while (i.hasNext$()){
var e=i.next$();
if (key.equals$O(e.getKey$())) return true;
}
}return false;
});

Clazz_newMeth(C$, 'get$O',  function (key) {
var i=this.entrySet$().iterator$();
if (key == null ) {
while (i.hasNext$()){
var e=i.next$();
if (e.getKey$() == null ) return e.getValue$();
}
} else {
while (i.hasNext$()){
var e=i.next$();
if (key.equals$O(e.getKey$())) return e.getValue$();
}
}return null;
});

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
var i=this.entrySet$().iterator$();
var correctEntry=null;
if (key == null ) {
while (correctEntry == null  && i.hasNext$() ){
var e=i.next$();
if (e.getKey$() == null ) correctEntry=e;
}
} else {
while (correctEntry == null  && i.hasNext$() ){
var e=i.next$();
if (key.equals$O(e.getKey$())) correctEntry=e;
}
}var oldValue=null;
if (correctEntry != null ) {
oldValue=correctEntry.getValue$();
i.remove$();
}return oldValue;
});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (m) {
for (var e, $e = m.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) this.put$O$O(e.getKey$(), e.getValue$());

});

Clazz_newMeth(C$, 'clear$',  function () {
this.entrySet$().clear$();
});

Clazz_newMeth(C$, 'keySet$',  function () {
if (this.keySet == null ) {
this.keySet=((P$.AbstractMap$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "AbstractMap$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractSet'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return ((P$.AbstractMap$1$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "AbstractMap$1$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=this.b$['java.util.AbstractMap'].entrySet$.apply(this.b$['java.util.AbstractMap'], []).iterator$();
},1);

C$.$fields$=[['O',['i','java.util.Iterator']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.i.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.i.next$().getKey$();
});

Clazz_newMeth(C$, 'remove$',  function () {
this.i.remove$();
});
})()
), Clazz_new_(P$.AbstractMap$1$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.AbstractMap'].size$.apply(this.b$['java.util.AbstractMap'], []);
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.b$['java.util.AbstractMap'].isEmpty$.apply(this.b$['java.util.AbstractMap'], []);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.AbstractMap'].clear$.apply(this.b$['java.util.AbstractMap'], []);
});

Clazz_newMeth(C$, 'contains$O',  function (k) {
return this.b$['java.util.AbstractMap'].containsKey$O.apply(this.b$['java.util.AbstractMap'], [k]);
});
})()
), Clazz_new_($I$(2,1),[this, null],P$.AbstractMap$1));
}return this.keySet;
});

Clazz_newMeth(C$, 'values$',  function () {
if (this.values == null ) {
this.values=((P$.AbstractMap$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "AbstractMap$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.util.AbstractCollection'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return ((P$.AbstractMap$2$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "AbstractMap$2$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=this.b$['java.util.AbstractMap'].entrySet$.apply(this.b$['java.util.AbstractMap'], []).iterator$();
},1);

C$.$fields$=[['O',['i','java.util.Iterator']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.i.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.i.next$().getValue$();
});

Clazz_newMeth(C$, 'remove$',  function () {
this.i.remove$();
});
})()
), Clazz_new_(P$.AbstractMap$2$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.AbstractMap'].size$.apply(this.b$['java.util.AbstractMap'], []);
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.b$['java.util.AbstractMap'].isEmpty$.apply(this.b$['java.util.AbstractMap'], []);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.AbstractMap'].clear$.apply(this.b$['java.util.AbstractMap'], []);
});

Clazz_newMeth(C$, 'contains$O',  function (v) {
return this.b$['java.util.AbstractMap'].containsValue$O.apply(this.b$['java.util.AbstractMap'], [v]);
});
})()
), Clazz_new_($I$(3,1),[this, null],P$.AbstractMap$2));
}return this.values;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Map"))) return false;
var m=o;
if (m.size$() != this.size$()) return false;
try {
var i=this.entrySet$().iterator$();
while (i.hasNext$()){
var e=i.next$();
var key=e.getKey$();
var value=e.getValue$();
if (value == null ) {
if (!(m.get$O(key) == null  && m.containsKey$O(key) )) return false;
} else {
if (!value.equals$O(m.get$O(key))) return false;
}}
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"ClassCastException")){
var unused = e$$;
{
return false;
}
} else if (Clazz_exceptionOf(e$$,"NullPointerException")){
var unused = e$$;
{
return false;
}
} else {
throw e$$;
}
}
return true;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var h=0;
var i=this.entrySet$().iterator$();
while (i.hasNext$())h+=i.next$().hashCode$();

return h;
});

Clazz_newMeth(C$, 'toString',  function () {
var i=this.entrySet$().iterator$();
if (!i.hasNext$()) return "{}";
var sb=Clazz_new_($I$(4,1));
sb.append$C("{");
for (; ; ) {
var e=i.next$();
var key=e.getKey$();
var value=e.getValue$();
sb.append$O(key === this  ? "(this Map)" : key);
sb.append$C("=");
sb.append$O(value === this  ? "(this Map)" : value);
if (!i.hasNext$()) return sb.append$C("}").toString();
sb.append$C(",").append$C(" ");
}
});

Clazz_newMeth(C$, 'clone$',  function () {
var result=Clazz_clone(this);
result.keySet=null;
result.values=null;
return result;
});

Clazz_newMeth(C$, 'eq$O$O',  function (o1, o2) {
return o1 == null  ? o2 == null  : o1.equals$O(o2);
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractMap, "SimpleEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry'], 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['key','<K>','value','<V>']]]

Clazz_newMeth(C$, 'c$$O$O',  function (key, value) {
;C$.$init$.apply(this);
this.key=key;
this.value=value;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map_Entry',  function (entry) {
;C$.$init$.apply(this);
this.key=entry.getKey$();
this.value=entry.getValue$();
}, 1);

Clazz_newMeth(C$, 'getKey$',  function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue$',  function () {
return this.value;
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
var oldValue=this.value;
this.value=value;
return oldValue;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
return $I$(1,"eq$O$O",[this.key, e.getKey$()]) && $I$(1,"eq$O$O",[this.value, e.getValue$()]) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return (this.key == null  ? 0 : this.key.hashCode$()) ^ (this.value == null  ? 0 : this.value.hashCode$());
});

Clazz_newMeth(C$, 'toString',  function () {
return this.key + "=" + this.value ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractMap, "SimpleImmutableEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry'], 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['key','<K>','value','<V>']]]

Clazz_newMeth(C$, 'c$$O$O',  function (key, value) {
;C$.$init$.apply(this);
this.key=key;
this.value=value;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map_Entry',  function (entry) {
;C$.$init$.apply(this);
this.key=entry.getKey$();
this.value=entry.getValue$();
}, 1);

Clazz_newMeth(C$, 'getKey$',  function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue$',  function () {
return this.value;
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
return $I$(1,"eq$O$O",[this.key, e.getKey$()]) && $I$(1,"eq$O$O",[this.value, e.getValue$()]) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return (this.key == null  ? 0 : this.key.hashCode$()) ^ (this.value == null  ? 0 : this.value.hashCode$());
});

Clazz_newMeth(C$, 'toString',  function () {
return this.key + "=" + this.value ;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*c*/var C$=Clazz_newClass(P$, "AbstractSequentialList", null, 'java.util.AbstractList');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'get$I',  function (index) {
try {
return this.listIterator$I(index).next$();
} catch (exc) {
if (Clazz_exceptionOf(exc,"java.util.NoSuchElementException")){
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
} else {
throw exc;
}
}
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
try {
var e=this.listIterator$I(index);
var oldVal=e.next$();
e.set$O(element);
return oldVal;
} catch (exc) {
if (Clazz_exceptionOf(exc,"java.util.NoSuchElementException")){
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
} else {
throw exc;
}
}
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
try {
this.listIterator$I(index).add$O(element);
} catch (exc) {
if (Clazz_exceptionOf(exc,"java.util.NoSuchElementException")){
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
} else {
throw exc;
}
}
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
try {
var e=this.listIterator$I(index);
var outCast=e.next$();
e.remove$();
return outCast;
} catch (exc) {
if (Clazz_exceptionOf(exc,"java.util.NoSuchElementException")){
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
} else {
throw exc;
}
}
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
try {
var modified=false;
var e1=this.listIterator$I(index);
var e2=c.iterator$();
while (e2.hasNext$()){
e1.add$O(e2.next$());
modified=true;
}
return modified;
} catch (exc) {
if (Clazz_exceptionOf(exc,"java.util.NoSuchElementException")){
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
} else {
throw exc;
}
}
});

Clazz_newMeth(C$, 'iterator$',  function () {
return this.listIterator$();
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractSet", null, 'java.util.AbstractCollection', 'java.util.Set');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Set"))) return false;
var c=o;
if (c.size$() != this.size$()) return false;
try {
return this.containsAll$java_util_Collection(c);
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"ClassCastException")){
var unused = e$$;
{
return false;
}
} else if (Clazz_exceptionOf(e$$,"NullPointerException")){
var unused = e$$;
{
return false;
}
} else {
throw e$$;
}
}
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var h=0;
var i=this.iterator$();
while (i.hasNext$()){
var obj=i.next$();
if (obj != null ) h+=obj.hashCode$();
}
return h;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
$I$(1).requireNonNull$O(c);
var modified=false;
if (this.size$() > c.size$()) {
for (var i=c.iterator$(); i.hasNext$(); ) modified=!!(modified|(this.remove$O(i.next$())));

} else {
for (var i=this.iterator$(); i.hasNext$(); ) {
if (c.contains$O(i.next$())) {
i.remove$();
modified=true;
}}
}return modified;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},p$2={},I$=[[0,'java.util.Objects','java.util.ArrayList',['java.util.ArrayList','.ArrayListSpliterator'],'java.util.Arrays','OutOfMemoryError','InternalError',['java.util.ArrayList','.ListItr'],['java.util.ArrayList','.Itr'],['java.util.ArrayList','.SubList'],'java.util.BitSet']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ArrayList", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractList', ['java.util.List', 'java.util.RandomAccess', 'Cloneable', 'java.io.Serializable']);
C$.$classes$=[['Itr',2],['ListItr',2],['SubList',2],['ArrayListSpliterator',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['size'],'O',['+elementData']]
,['O',['EMPTY_ELEMENTDATA','Object[]','+DEFAULTCAPACITY_EMPTY_ELEMENTDATA']]]

Clazz_newMeth(C$, 'c$$I',  function (initialCapacity) {
Clazz_super_(C$, this);
if (initialCapacity > 0) {
this.elementData=Clazz_array(java.lang.Object, [initialCapacity]);
} else if (initialCapacity == 0) {
this.elementData=C$.EMPTY_ELEMENTDATA;
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal Capacity: " + initialCapacity]);
}}, 1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.elementData=C$.DEFAULTCAPACITY_EMPTY_ELEMENTDATA;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection',  function (c) {
Clazz_super_(C$, this);
this.elementData=c.toArray$();
if ((this.size=this.elementData.length) != 0) {
if (this.elementData.getClass$() !== Clazz_array(java.lang.Object, -1) ) this.elementData=$I$(4,"copyOf$OA$I$Class",[this.elementData, this.size, Clazz_array(java.lang.Object, -1)]);
} else {
this.elementData=C$.EMPTY_ELEMENTDATA;
}}, 1);

Clazz_newMeth(C$, 'trimToSize$',  function () {
++this.modCount;
if (this.size < this.elementData.length) {
this.elementData=(this.size == 0) ? C$.EMPTY_ELEMENTDATA : $I$(4).copyOf$OA$I(this.elementData, this.size);
}});

Clazz_newMeth(C$, 'ensureCapacity$I',  function (minCapacity) {
var minExpand=(this.elementData !== C$.DEFAULTCAPACITY_EMPTY_ELEMENTDATA ) ? 0 : 10;
if (minCapacity > minExpand) {
p$1.ensureExplicitCapacity$I.apply(this, [minCapacity]);
}});

Clazz_newMeth(C$, 'ensureCapacityInternal$I',  function (minCapacity) {
if (this.elementData === C$.DEFAULTCAPACITY_EMPTY_ELEMENTDATA ) {
minCapacity=Math.max(10, minCapacity);
}p$1.ensureExplicitCapacity$I.apply(this, [minCapacity]);
}, p$1);

Clazz_newMeth(C$, 'ensureExplicitCapacity$I',  function (minCapacity) {
++this.modCount;
if (minCapacity - this.elementData.length > 0) p$1.grow$I.apply(this, [minCapacity]);
}, p$1);

Clazz_newMeth(C$, 'grow$I',  function (minCapacity) {
var oldCapacity=this.elementData.length;
var newCapacity=oldCapacity + (oldCapacity >> 1);
if (newCapacity - minCapacity < 0) newCapacity=minCapacity;
if (newCapacity - 2147483639 > 0) newCapacity=C$.hugeCapacity$I(minCapacity);
this.elementData=$I$(4).copyOf$OA$I(this.elementData, newCapacity);
}, p$1);

Clazz_newMeth(C$, 'hugeCapacity$I',  function (minCapacity) {
if (minCapacity < 0) throw Clazz_new_($I$(5,1));
return (minCapacity > 2147483639) ? 2147483647 : 2147483639;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.size;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.size == 0;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.indexOf$O(o) >= 0;
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
if (o == null ) {
for (var i=0; i < this.size; i++) if (this.elementData[i] == null ) return i;

} else {
for (var i=0; i < this.size; i++) if (o.equals$O(this.elementData[i])) return i;

}return -1;
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
if (o == null ) {
for (var i=this.size - 1; i >= 0; i--) if (this.elementData[i] == null ) return i;

} else {
for (var i=this.size - 1; i >= 0; i--) if (o.equals$O(this.elementData[i])) return i;

}return -1;
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
var v=Clazz_clone(this);
v.elementData=$I$(4).copyOf$OA$I(this.elementData, this.size);
v.modCount=0;
return v;
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(6,1).c$$Throwable,[e]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'toArray$',  function () {
return $I$(4).copyOf$OA$I(this.elementData, this.size);
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
if (a.length < this.size) return $I$(4,"copyOf$OA$I$Class",[this.elementData, this.size, a.getClass$()]);
System.arraycopy$O$I$O$I$I(this.elementData, 0, a, 0, this.size);
if (a.length > this.size) a[this.size]=null;
return a;
});

Clazz_newMeth(C$, 'elementData$I',  function (index) {
return this.elementData[index];
});

Clazz_newMeth(C$, 'get$I',  function (index) {
p$1.rangeCheck$I.apply(this, [index]);
return this.elementData$I(index);
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
p$1.rangeCheck$I.apply(this, [index]);
var oldValue=this.elementData$I(index);
this.elementData[index]=element;
return oldValue;
});

Clazz_newMeth(C$, 'add$O',  function (e) {
p$1.ensureCapacityInternal$I.apply(this, [this.size + 1]);
this.elementData[this.size++]=e;
return true;
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
p$1.rangeCheckForAdd$I.apply(this, [index]);
p$1.ensureCapacityInternal$I.apply(this, [this.size + 1]);
System.arraycopy$O$I$O$I$I(this.elementData, index, this.elementData, index + 1, this.size - index);
this.elementData[index]=element;
++this.size;
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
p$1.rangeCheck$I.apply(this, [index]);
++this.modCount;
var oldValue=this.elementData$I(index);
var numMoved=this.size - index - 1 ;
if (numMoved > 0) System.arraycopy$O$I$O$I$I(this.elementData, index + 1, this.elementData, index, numMoved);
this.elementData[--this.size]=null;
return oldValue;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (o == null ) {
for (var index=0; index < this.size; index++) if (this.elementData[index] == null ) {
p$1.fastRemove$I.apply(this, [index]);
return true;
}
} else {
for (var index=0; index < this.size; index++) if (o.equals$O(this.elementData[index])) {
p$1.fastRemove$I.apply(this, [index]);
return true;
}
}return false;
});

Clazz_newMeth(C$, 'fastRemove$I',  function (index) {
++this.modCount;
var numMoved=this.size - index - 1 ;
if (numMoved > 0) System.arraycopy$O$I$O$I$I(this.elementData, index + 1, this.elementData, index, numMoved);
this.elementData[--this.size]=null;
}, p$1);

Clazz_newMeth(C$, 'clear$',  function () {
++this.modCount;
for (var i=0; i < this.size; i++) this.elementData[i]=null;

this.size=0;
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (c) {
var a=c.toArray$();
var numNew=a.length;
p$1.ensureCapacityInternal$I.apply(this, [this.size + numNew]);
System.arraycopy$O$I$O$I$I(a, 0, this.elementData, this.size, numNew);
this.size+=numNew;
return numNew != 0;
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
p$1.rangeCheckForAdd$I.apply(this, [index]);
var a=c.toArray$();
var numNew=a.length;
p$1.ensureCapacityInternal$I.apply(this, [this.size + numNew]);
var numMoved=this.size - index;
if (numMoved > 0) System.arraycopy$O$I$O$I$I(this.elementData, index, this.elementData, index + numNew, numMoved);
System.arraycopy$O$I$O$I$I(a, 0, this.elementData, index, numNew);
this.size+=numNew;
return numNew != 0;
});

Clazz_newMeth(C$, 'removeRange$I$I',  function (fromIndex, toIndex) {
++this.modCount;
var numMoved=this.size - toIndex;
System.arraycopy$O$I$O$I$I(this.elementData, toIndex, this.elementData, fromIndex, numMoved);
var newSize=this.size - (toIndex - fromIndex);
for (var i=newSize; i < this.size; i++) {
this.elementData[i]=null;
}
this.size=newSize;
});

Clazz_newMeth(C$, 'rangeCheck$I',  function (index) {
if (index >= this.size) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'rangeCheckForAdd$I',  function (index) {
if (index > this.size || index < 0 ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'outOfBoundsMsg$I',  function (index) {
return "Index: " + index + ", Size: " + this.size ;
}, p$1);

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
$I$(1).requireNonNull$O(c);
return p$1.batchRemove$java_util_Collection$Z.apply(this, [c, false]);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (c) {
$I$(1).requireNonNull$O(c);
return p$1.batchRemove$java_util_Collection$Z.apply(this, [c, true]);
});

Clazz_newMeth(C$, 'batchRemove$java_util_Collection$Z',  function (c, complement) {
var elementData=this.elementData;
var r=0;
var w=0;
var modified=false;
try {
for (; r < this.size; r++) if (c.contains$O(elementData[r]) == complement ) elementData[w++]=elementData[r];

} finally {
if (r != this.size) {
System.arraycopy$O$I$O$I$I(elementData, r, elementData, w, this.size - r);
w+=this.size - r;
}if (w != this.size) {
for (var i=w; i < this.size; i++) elementData[i]=null;

this.modCount+=this.size - w;
this.size=w;
modified=true;
}}
return modified;
}, p$1);

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
var expectedModCount=this.modCount;
s.defaultWriteObject$();
s.writeInt$I(this.size);
for (var i=0; i < this.size; i++) {
s.writeObject$O(this.elementData[i]);
}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (s) {
this.elementData=C$.EMPTY_ELEMENTDATA;
s.defaultReadObject$();
s.readInt$();
if (this.size > 0) {
p$1.ensureCapacityInternal$I.apply(this, [this.size]);
var a=this.elementData;
for (var i=0; i < this.size; i++) {
a[i]=s.readObject$();
}
}}, p$1);

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
if (index < 0 || index > this.size ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
return Clazz_new_($I$(7,1).c$$I,[this, null, index]);
});

Clazz_newMeth(C$, 'listIterator$',  function () {
return Clazz_new_($I$(7,1).c$$I,[this, null, 0]);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(8,1),[this, null]);
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
C$.subListRangeCheck$I$I$I(fromIndex, toIndex, this.size);
return Clazz_new_($I$(9,1).c$$java_util_AbstractList$I$I$I,[this, null, this, 0, fromIndex, toIndex]);
});

Clazz_newMeth(C$, 'subListRangeCheck$I$I$I',  function (fromIndex, toIndex, size) {
if (fromIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex = " + fromIndex]);
if (toIndex > size) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["toIndex = " + toIndex]);
if (fromIndex > toIndex) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["fromIndex(" + fromIndex + ") > toIndex(" + toIndex + ")" ]);
}, 1);

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
var expectedModCount=this.modCount;
var elementData=this.elementData;
var size=this.size;
for (var i=0; this.modCount == expectedModCount && i < size ; i++) {
action.accept$O(elementData[i]);
}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(3,1).c$$java_util_ArrayList$I$I$I,[this, 0, -1, 0]);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
$I$(1).requireNonNull$O(filter);
var removeCount=0;
var removeSet=Clazz_new_($I$(10,1).c$$I,[this.size]);
var expectedModCount=this.modCount;
var size=this.size;
for (var i=0; this.modCount == expectedModCount && i < size ; i++) {
var element=this.elementData[i];
if (filter.test$O(element)) {
removeSet.set$I(i);
++removeCount;
}}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}var anyToRemove=removeCount > 0;
if (anyToRemove) {
var newSize=size - removeCount;
for (var i=0, j=0; (i < size) && (j < newSize) ; i++, j++) {
i=removeSet.nextClearBit$I(i);
this.elementData[j]=this.elementData[i];
}
for (var k=newSize; k < size; k++) {
this.elementData[k]=null;
}
this.size=newSize;
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}++this.modCount;
}return anyToRemove;
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
$I$(1).requireNonNull$O(operator);
var expectedModCount=this.modCount;
var size=this.size;
for (var i=0; this.modCount == expectedModCount && i < size ; i++) {
this.elementData[i]=operator.apply$O(this.elementData[i]);
}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}++this.modCount;
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
var expectedModCount=this.modCount;
$I$(4).sort$OA$I$I$java_util_Comparator(this.elementData, 0, this.size, c);
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}++this.modCount;
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_ELEMENTDATA=Clazz_array(java.lang.Object, -1, []);
C$.DEFAULTCAPACITY_EMPTY_ELEMENTDATA=Clazz_array(java.lang.Object, -1, []);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.ArrayList, "Itr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.ArrayList'].modCount;
},1);

C$.$fields$=[['I',['cursor','lastRet','expectedModCount']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.cursor != this.b$['java.util.ArrayList'].size;
});

Clazz_newMeth(C$, 'next$',  function () {
this.checkForComodification$();
var i=this.cursor;
if (i >= this.b$['java.util.ArrayList'].size) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
var elementData=this.b$['java.util.ArrayList'].elementData;
if (i >= elementData.length) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.cursor=i + 1;
return elementData[this.lastRet=i];
});

Clazz_newMeth(C$, 'remove$',  function () {
if (this.lastRet < 0) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
try {
this.b$['java.util.ArrayList'].remove$I.apply(this.b$['java.util.ArrayList'], [this.lastRet]);
this.cursor=this.lastRet;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.ArrayList'].modCount;
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (consumer) {
$I$(1).requireNonNull$O(consumer);
var size=this.b$['java.util.ArrayList'].size;
var i=this.cursor;
if (i >= size) {
return;
}var elementData=this.b$['java.util.ArrayList'].elementData;
if (i >= elementData.length) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}while (i != size && this.b$['java.util.ArrayList'].modCount == this.expectedModCount ){
consumer.accept$O(elementData[i++]);
}
this.cursor=i;
this.lastRet=i - 1;
this.checkForComodification$();
});

Clazz_newMeth(C$, 'checkForComodification$',  function () {
if (this.b$['java.util.ArrayList'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.ArrayList, "ListItr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.ArrayList','.Itr'], 'java.util.ListIterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I',  function (index) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.cursor=index;
}, 1);

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.cursor != 0;
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.cursor;
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.cursor - 1;
});

Clazz_newMeth(C$, 'previous$',  function () {
this.checkForComodification$();
var i=this.cursor - 1;
if (i < 0) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
var elementData=this.b$['java.util.ArrayList'].elementData;
if (i >= elementData.length) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.cursor=i;
return elementData[this.lastRet=i];
});

Clazz_newMeth(C$, 'set$O',  function (e) {
if (this.lastRet < 0) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
try {
this.b$['java.util.ArrayList'].set$I$O.apply(this.b$['java.util.ArrayList'], [this.lastRet, e]);
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$, 'add$O',  function (e) {
this.checkForComodification$();
try {
var i=this.cursor;
this.b$['java.util.ArrayList'].add$I$O.apply(this.b$['java.util.ArrayList'], [i, e]);
this.cursor=i + 1;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.ArrayList'].modCount;
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.ArrayList, "SubList", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractList', 'java.util.RandomAccess');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['parentOffset','offset','size'],'O',['parent','java.util.AbstractList']]]

Clazz_newMeth(C$, 'c$$java_util_AbstractList$I$I$I',  function (parent, offset, fromIndex, toIndex) {
Clazz_super_(C$, this);
this.parent=parent;
this.parentOffset=fromIndex;
this.offset=offset + fromIndex;
this.size=toIndex - fromIndex;
this.modCount=this.b$['java.util.ArrayList'].modCount;
}, 1);

Clazz_newMeth(C$, 'set$I$O',  function (index, e) {
p$1.rangeCheck$I.apply(this, [index]);
p$1.checkForComodification.apply(this, []);
var oldValue=this.b$['java.util.ArrayList'].elementData$I.apply(this.b$['java.util.ArrayList'], [this.offset + index]);
this.b$['java.util.ArrayList'].elementData[this.offset + index]=e;
return oldValue;
});

Clazz_newMeth(C$, 'get$I',  function (index) {
p$1.rangeCheck$I.apply(this, [index]);
p$1.checkForComodification.apply(this, []);
return this.b$['java.util.ArrayList'].elementData$I.apply(this.b$['java.util.ArrayList'], [this.offset + index]);
});

Clazz_newMeth(C$, 'size$',  function () {
p$1.checkForComodification.apply(this, []);
return this.size;
});

Clazz_newMeth(C$, 'add$I$O',  function (index, e) {
p$1.rangeCheckForAdd$I.apply(this, [index]);
p$1.checkForComodification.apply(this, []);
this.parent.add$I$O(this.parentOffset + index, e);
this.modCount=this.parent.modCount;
++this.size;
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
p$1.rangeCheck$I.apply(this, [index]);
p$1.checkForComodification.apply(this, []);
var result=this.parent.remove$I(this.parentOffset + index);
this.modCount=this.parent.modCount;
--this.size;
return result;
});

Clazz_newMeth(C$, 'removeRange$I$I',  function (fromIndex, toIndex) {
p$1.checkForComodification.apply(this, []);
this.parent.removeRange$I$I(this.parentOffset + fromIndex, this.parentOffset + toIndex);
this.modCount=this.parent.modCount;
this.size-=toIndex - fromIndex;
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (c) {
return this.addAll$I$java_util_Collection(this.size, c);
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
p$1.rangeCheckForAdd$I.apply(this, [index]);
var cSize=c.size$();
if (cSize == 0) return false;
p$1.checkForComodification.apply(this, []);
this.parent.addAll$I$java_util_Collection(this.parentOffset + index, c);
this.modCount=this.parent.modCount;
this.size+=cSize;
return true;
});

Clazz_newMeth(C$, 'iterator$',  function () {
return this.listIterator$();
});

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
p$1.checkForComodification.apply(this, []);
p$1.rangeCheckForAdd$I.apply(this, [index]);
var offset=this.offset;
return ((P$.ArrayList$SubList$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "ArrayList$SubList$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.ListIterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.cursor=index;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.ArrayList'].modCount;
},1);

C$.$fields$=[['I',['cursor','lastRet','expectedModCount']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.cursor != this.b$['java.util.ArrayList.SubList'].size;
});

Clazz_newMeth(C$, 'next$',  function () {
this.checkForComodification$();
var i=this.cursor;
if (i >= this.b$['java.util.ArrayList.SubList'].size) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
var elementData=this.b$['java.util.ArrayList'].elementData;
if (this.$finals$.offset + i >= elementData.length) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.cursor=i + 1;
return elementData[this.$finals$.offset + (this.lastRet=i)];
});

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.cursor != 0;
});

Clazz_newMeth(C$, 'previous$',  function () {
this.checkForComodification$();
var i=this.cursor - 1;
if (i < 0) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
var elementData=this.b$['java.util.ArrayList'].elementData;
if (this.$finals$.offset + i >= elementData.length) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.cursor=i;
return elementData[this.$finals$.offset + (this.lastRet=i)];
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (consumer) {
$I$(1).requireNonNull$O(consumer);
var size=this.b$['java.util.ArrayList.SubList'].size;
var i=this.cursor;
if (i >= size) {
return;
}var elementData=this.b$['java.util.ArrayList'].elementData;
if (this.$finals$.offset + i >= elementData.length) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}while (i != size && this.b$['java.util.ArrayList.SubList'].modCount == this.expectedModCount ){
consumer.accept$O(elementData[this.$finals$.offset + (i++)]);
}
this.lastRet=this.cursor=i;
this.checkForComodification$();
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.cursor;
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.cursor - 1;
});

Clazz_newMeth(C$, 'remove$',  function () {
if (this.lastRet < 0) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
try {
this.b$['java.util.ArrayList.SubList'].remove$I.apply(this.b$['java.util.ArrayList.SubList'], [this.lastRet]);
this.cursor=this.lastRet;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.ArrayList'].modCount;
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$, 'set$O',  function (e) {
if (this.lastRet < 0) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
try {
this.b$['java.util.ArrayList'].set$I$O.apply(this.b$['java.util.ArrayList'], [this.$finals$.offset + this.lastRet, e]);
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$, 'add$O',  function (e) {
this.checkForComodification$();
try {
var i=this.cursor;
this.b$['java.util.ArrayList.SubList'].add$I$O.apply(this.b$['java.util.ArrayList.SubList'], [i, e]);
this.cursor=i + 1;
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.ArrayList'].modCount;
} catch (ex) {
if (Clazz_exceptionOf(ex,"IndexOutOfBoundsException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
} else {
throw ex;
}
}
});

Clazz_newMeth(C$, 'checkForComodification$',  function () {
if (this.expectedModCount != this.b$['java.util.ArrayList'].modCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});
})()
), Clazz_new_(P$.ArrayList$SubList$1.$init$,[this, {offset:offset}]));
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
$I$(2).subListRangeCheck$I$I$I(fromIndex, toIndex, this.size);
return Clazz_new_(C$.c$$java_util_AbstractList$I$I$I,[this, null, this, this.offset, fromIndex, toIndex]);
});

Clazz_newMeth(C$, 'rangeCheck$I',  function (index) {
if (index < 0 || index >= this.size ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'rangeCheckForAdd$I',  function (index) {
if (index < 0 || index > this.size ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'outOfBoundsMsg$I',  function (index) {
return "Index: " + index + ", Size: " + this.size ;
}, p$1);

Clazz_newMeth(C$, 'checkForComodification',  function () {
if (this.b$['java.util.ArrayList'].modCount != this.modCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}, p$1);

Clazz_newMeth(C$, 'spliterator$',  function () {
p$1.checkForComodification.apply(this, []);
return Clazz_new_($I$(3,1).c$$java_util_ArrayList$I$I$I,[this.b$['java.util.ArrayList'], this.offset, this.offset + this.size, this.modCount]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.ArrayList, "ArrayListSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index','fence','expectedModCount'],'O',['list','java.util.ArrayList']]]

Clazz_newMeth(C$, 'c$$java_util_ArrayList$I$I$I',  function (list, origin, fence, expectedModCount) {
;C$.$init$.apply(this);
this.list=list;
this.index=origin;
this.fence=fence;
this.expectedModCount=expectedModCount;
}, 1);

Clazz_newMeth(C$, 'getFence',  function () {
var hi;
var lst;
if ((hi=this.fence) < 0) {
if ((lst=this.list) == null ) hi=this.fence=0;
 else {
this.expectedModCount=lst.modCount;
hi=this.fence=lst.size;
}}return hi;
}, p$2);

Clazz_newMeth(C$, 'trySplit$',  function () {
var hi=p$2.getFence.apply(this, []);
var lo=this.index;
var mid=(lo + hi) >>> 1;
return (lo >= mid) ? null : Clazz_new_(C$.c$$java_util_ArrayList$I$I$I,[this.list, lo, this.index=mid, this.expectedModCount]);
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var hi=p$2.getFence.apply(this, []);
var i=this.index;
if (i < hi) {
this.index=i + 1;
var e=this.list.elementData[i];
action.accept$O(e);
if (this.list.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}return false;
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
var i;
var hi;
var mc;
var lst;
var a;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if ((lst=this.list) != null  && (a=lst.elementData) != null  ) {
if ((hi=this.fence) < 0) {
mc=lst.modCount;
hi=lst.size;
} else mc=this.expectedModCount;
if ((i=this.index) >= 0 && (this.index=hi) <= a.length ) {
for (; i < hi; ++i) {
var e=a[i];
action.accept$O(e);
}
if (lst.modCount == mc) return;
}}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
return (p$2.getFence.apply(this, []) - this.index);
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return 16464;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects','java.util.Arrays','java.util.Spliterators','java.util.DualPivotQuicksort','java.util.concurrent.ForkJoinPool',['java.util.ArraysParallelSortHelpers','.FJByte','.Sorter'],['java.util.ArraysParallelSortHelpers','.FJChar','.Sorter'],['java.util.ArraysParallelSortHelpers','.FJShort','.Sorter'],['java.util.ArraysParallelSortHelpers','.FJInt','.Sorter'],['java.util.ArraysParallelSortHelpers','.FJLong','.Sorter'],['java.util.ArraysParallelSortHelpers','.FJFloat','.Sorter'],['java.util.ArraysParallelSortHelpers','.FJDouble','.Sorter'],'java.util.TimSort',['java.util.Arrays','.NaturalOrder'],['java.util.ArraysParallelSortHelpers','.FJObject','.Sorter'],'java.lang.reflect.Array',['java.util.Arrays','.LegacyMergeSort'],'java.util.ComparableTimSort',['java.util.ArrayPrefixHelpers','.CumulateTask'],['java.util.ArrayPrefixHelpers','.LongCumulateTask'],['java.util.ArrayPrefixHelpers','.DoubleCumulateTask'],['java.util.ArrayPrefixHelpers','.IntCumulateTask'],['java.util.Arrays','.ArrayList'],'StringBuilder','java.util.HashSet','java.util.stream.IntStream','java.util.stream.StreamSupport']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Arrays", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['NaturalOrder',24],['LegacyMergeSort',24],['ArrayList',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'rangeCheck$I$I$I',  function (arrayLength, fromIndex, toIndex) {
if (fromIndex > toIndex) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["fromIndex(" + fromIndex + ") > toIndex(" + toIndex + ")" ]);
}if (fromIndex < 0) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[fromIndex]);
}if (toIndex > arrayLength) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[toIndex]);
}}, 1);

Clazz_newMeth(C$, 'sort$IA',  function (a) {
$I$(4).sort$IA$I$I$IA$I$I(a, 0, a.length - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$IA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$IA$I$I$IA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$JA',  function (a) {
$I$(4).sort$JA$I$I$JA$I$I(a, 0, a.length - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$JA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$JA$I$I$JA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$HA',  function (a) {
$I$(4).sort$HA$I$I$HA$I$I(a, 0, a.length - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$HA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$HA$I$I$HA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$CA',  function (a) {
$I$(4).sort$CA$I$I$CA$I$I(a, 0, a.length - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$CA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$CA$I$I$CA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$BA',  function (a) {
$I$(4).sort$BA$I$I(a, 0, a.length - 1);
}, 1);

Clazz_newMeth(C$, 'sort$BA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$BA$I$I(a, fromIndex, toIndex - 1);
}, 1);

Clazz_newMeth(C$, 'sort$FA',  function (a) {
$I$(4).sort$FA$I$I$FA$I$I(a, 0, a.length - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$FA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$FA$I$I$FA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$DA',  function (a) {
$I$(4).sort$DA$I$I$DA$I$I(a, 0, a.length - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'sort$DA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
$I$(4).sort$DA$I$I$DA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'parallelSort$BA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$BA$I$I(a, 0, n - 1);
 else Clazz_new_([null, a, Clazz_array(Byte.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(6,1).c$$java_util_concurrent_CountedCompleter$BA$BA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$BA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$BA$I$I(a, fromIndex, toIndex - 1);
 else Clazz_new_([null, a, Clazz_array(Byte.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(6,1).c$$java_util_concurrent_CountedCompleter$BA$BA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$CA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$CA$I$I$CA$I$I(a, 0, n - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Character.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(7,1).c$$java_util_concurrent_CountedCompleter$CA$CA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$CA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$CA$I$I$CA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Character.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(7,1).c$$java_util_concurrent_CountedCompleter$CA$CA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$HA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$HA$I$I$HA$I$I(a, 0, n - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Short.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(8,1).c$$java_util_concurrent_CountedCompleter$HA$HA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$HA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$HA$I$I$HA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Short.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(8,1).c$$java_util_concurrent_CountedCompleter$HA$HA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$IA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$IA$I$I$IA$I$I(a, 0, n - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Integer.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(9,1).c$$java_util_concurrent_CountedCompleter$IA$IA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$IA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$IA$I$I$IA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Integer.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(9,1).c$$java_util_concurrent_CountedCompleter$IA$IA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$JA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$JA$I$I$JA$I$I(a, 0, n - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Long.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(10,1).c$$java_util_concurrent_CountedCompleter$JA$JA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$JA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$JA$I$I$JA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Long.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(10,1).c$$java_util_concurrent_CountedCompleter$JA$JA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$FA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$FA$I$I$FA$I$I(a, 0, n - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Float.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(11,1).c$$java_util_concurrent_CountedCompleter$FA$FA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$FA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$FA$I$I$FA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Float.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(11,1).c$$java_util_concurrent_CountedCompleter$FA$FA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$DA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$DA$I$I$DA$I$I(a, 0, n - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Double.TYPE, [n]), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(12,1).c$$java_util_concurrent_CountedCompleter$DA$DA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$DA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(4).sort$DA$I$I$DA$I$I(a, fromIndex, toIndex - 1, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(Double.TYPE, [n]), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g],$I$(12,1).c$$java_util_concurrent_CountedCompleter$DA$DA$I$I$I$I).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$ComparableA',  function (a) {
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(13,"sort$OA$I$I$java_util_Comparator$OA$I$I",[a, 0, n, $I$(14).INSTANCE, null, 0, 0]);
 else Clazz_new_([null, a, Clazz_array(a.getClass$().getComponentType$(), n), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g, $I$(14).INSTANCE],$I$(15,1).c$$java_util_concurrent_CountedCompleter$OA$OA$I$I$I$I$java_util_Comparator).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$ComparableA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(13,"sort$OA$I$I$java_util_Comparator$OA$I$I",[a, fromIndex, toIndex, $I$(14).INSTANCE, null, 0, 0]);
 else Clazz_new_([null, a, Clazz_array(a.getClass$().getComponentType$(), n), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g, $I$(14).INSTANCE],$I$(15,1).c$$java_util_concurrent_CountedCompleter$OA$OA$I$I$I$I$java_util_Comparator).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$OA$java_util_Comparator',  function (a, cmp) {
if (cmp == null ) cmp=$I$(14).INSTANCE;
var n=a.length;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(13).sort$OA$I$I$java_util_Comparator$OA$I$I(a, 0, n, cmp, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(a.getClass$().getComponentType$(), n), 0, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g, cmp],$I$(15,1).c$$java_util_concurrent_CountedCompleter$OA$OA$I$I$I$I$java_util_Comparator).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelSort$OA$I$I$java_util_Comparator',  function (a, fromIndex, toIndex, cmp) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
if (cmp == null ) cmp=$I$(14).INSTANCE;
var n=toIndex - fromIndex;
var p;
var g;
if (n <= 8192 || (p=$I$(5).getCommonPoolParallelism$()) == 1 ) $I$(13).sort$OA$I$I$java_util_Comparator$OA$I$I(a, fromIndex, toIndex, cmp, null, 0, 0);
 else Clazz_new_([null, a, Clazz_array(a.getClass$().getComponentType$(), n), fromIndex, n, 0, ((g=(n/(p << 2)|0)) <= 8192) ? 8192 : g, cmp],$I$(15,1).c$$java_util_concurrent_CountedCompleter$OA$OA$I$I$I$I$java_util_Comparator).invoke$();
}, 1);

Clazz_newMeth(C$, 'sort$OA',  function (a) {
if ($I$(17).userRequested) C$.legacyMergeSort$OA(a);
 else $I$(18).sort$OA$I$I$OA$I$I(a, 0, a.length, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'legacyMergeSort$OA',  function (a) {
var aux=a.clone$();
C$.mergeSort$OA$OA$I$I$I(aux, a, 0, a.length, 0);
}, 1);

Clazz_newMeth(C$, 'sort$OA$I$I',  function (a, fromIndex, toIndex) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
if ($I$(17).userRequested) C$.legacyMergeSort$OA$I$I(a, fromIndex, toIndex);
 else $I$(18).sort$OA$I$I$OA$I$I(a, fromIndex, toIndex, null, 0, 0);
}, 1);

Clazz_newMeth(C$, 'legacyMergeSort$OA$I$I',  function (a, fromIndex, toIndex) {
var aux=C$.copyOfRange$OA$I$I(a, fromIndex, toIndex);
C$.mergeSort$OA$OA$I$I$I(aux, a, fromIndex, toIndex, -fromIndex);
}, 1);

Clazz_newMeth(C$, 'mergeSort$OA$OA$I$I$I',  function (src, dest, low, high, off) {
var length=high - low;
if (length < 7) {
for (var i=low; i < high; i++) for (var j=i; j > low && (dest[j - 1]).compareTo$O(dest[j]) > 0 ; j--) C$.swap$OA$I$I(dest, j, j - 1);


return;
}var destLow=low;
var destHigh=high;
low+=off;
high+=off;
var mid=(low + high) >>> 1;
C$.mergeSort$OA$OA$I$I$I(dest, src, low, mid, -off);
C$.mergeSort$OA$OA$I$I$I(dest, src, mid, high, -off);
if ((src[mid - 1]).compareTo$O(src[mid]) <= 0) {
System.arraycopy$O$I$O$I$I(src, low, dest, destLow, length);
return;
}for (var i=destLow, p=low, q=mid; i < destHigh; i++) {
if (q >= high || p < mid && (src[p]).compareTo$O(src[q]) <= 0  ) dest[i]=src[p++];
 else dest[i]=src[q++];
}
}, 1);

Clazz_newMeth(C$, 'swap$OA$I$I',  function (x, a, b) {
var t=x[a];
x[a]=x[b];
x[b]=t;
}, 1);

Clazz_newMeth(C$, 'sort$OA$java_util_Comparator',  function (a, c) {
if (c == null ) {
C$.sort$OA(a);
} else {
if ($I$(17).userRequested) C$.legacyMergeSort$OA$java_util_Comparator(a, c);
 else $I$(13).sort$OA$I$I$java_util_Comparator$OA$I$I(a, 0, a.length, c, null, 0, 0);
}}, 1);

Clazz_newMeth(C$, 'legacyMergeSort$OA$java_util_Comparator',  function (a, c) {
var aux=a.clone$();
if (c == null ) C$.mergeSort$OA$OA$I$I$I(aux, a, 0, a.length, 0);
 else C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(aux, a, 0, a.length, 0, c);
}, 1);

Clazz_newMeth(C$, 'sort$OA$I$I$java_util_Comparator',  function (a, fromIndex, toIndex, c) {
if (c == null ) {
C$.sort$OA$I$I(a, fromIndex, toIndex);
} else {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
if ($I$(17).userRequested) C$.legacyMergeSort$OA$I$I$java_util_Comparator(a, fromIndex, toIndex, c);
 else $I$(13).sort$OA$I$I$java_util_Comparator$OA$I$I(a, fromIndex, toIndex, c, null, 0, 0);
}}, 1);

Clazz_newMeth(C$, 'legacyMergeSort$OA$I$I$java_util_Comparator',  function (a, fromIndex, toIndex, c) {
var aux=C$.copyOfRange$OA$I$I(a, fromIndex, toIndex);
if (c == null ) C$.mergeSort$OA$OA$I$I$I(aux, a, fromIndex, toIndex, -fromIndex);
 else C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(aux, a, fromIndex, toIndex, -fromIndex, c);
}, 1);

Clazz_newMeth(C$, 'mergeSort$OA$OA$I$I$I$java_util_Comparator',  function (src, dest, low, high, off, c) {
var length=high - low;
if (length < 7) {
for (var i=low; i < high; i++) for (var j=i; j > low && c.compare$O$O(dest[j - 1], dest[j]) > 0 ; j--) C$.swap$OA$I$I(dest, j, j - 1);


return;
}var destLow=low;
var destHigh=high;
low+=off;
high+=off;
var mid=(low + high) >>> 1;
C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(dest, src, low, mid, -off, c);
C$.mergeSort$OA$OA$I$I$I$java_util_Comparator(dest, src, mid, high, -off, c);
if (c.compare$O$O(src[mid - 1], src[mid]) <= 0) {
System.arraycopy$O$I$O$I$I(src, low, dest, destLow, length);
return;
}for (var i=destLow, p=low, q=mid; i < destHigh; i++) {
if (q >= high || p < mid && c.compare$O$O(src[p], src[q]) <= 0  ) dest[i]=src[p++];
 else dest[i]=src[q++];
}
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$OA$java_util_function_BinaryOperator',  function (array, op) {
$I$(1).requireNonNull$O(op);
if (array.length > 0) Clazz_new_($I$(19,1).c$$java_util_ArrayPrefixHelpers_CumulateTask$java_util_function_BinaryOperator$OA$I$I,[null, op, array, 0, array.length]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$OA$I$I$java_util_function_BinaryOperator',  function (array, fromIndex, toIndex, op) {
$I$(1).requireNonNull$O(op);
C$.rangeCheck$I$I$I(array.length, fromIndex, toIndex);
if (fromIndex < toIndex) Clazz_new_($I$(19,1).c$$java_util_ArrayPrefixHelpers_CumulateTask$java_util_function_BinaryOperator$OA$I$I,[null, op, array, fromIndex, toIndex]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$JA$java_util_function_LongBinaryOperator',  function (array, op) {
$I$(1).requireNonNull$O(op);
if (array.length > 0) Clazz_new_($I$(20,1).c$$java_util_ArrayPrefixHelpers_LongCumulateTask$java_util_function_LongBinaryOperator$JA$I$I,[null, op, array, 0, array.length]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$JA$I$I$java_util_function_LongBinaryOperator',  function (array, fromIndex, toIndex, op) {
$I$(1).requireNonNull$O(op);
C$.rangeCheck$I$I$I(array.length, fromIndex, toIndex);
if (fromIndex < toIndex) Clazz_new_($I$(20,1).c$$java_util_ArrayPrefixHelpers_LongCumulateTask$java_util_function_LongBinaryOperator$JA$I$I,[null, op, array, fromIndex, toIndex]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$DA$java_util_function_DoubleBinaryOperator',  function (array, op) {
$I$(1).requireNonNull$O(op);
if (array.length > 0) Clazz_new_($I$(21,1).c$$java_util_ArrayPrefixHelpers_DoubleCumulateTask$java_util_function_DoubleBinaryOperator$DA$I$I,[null, op, array, 0, array.length]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$DA$I$I$java_util_function_DoubleBinaryOperator',  function (array, fromIndex, toIndex, op) {
$I$(1).requireNonNull$O(op);
C$.rangeCheck$I$I$I(array.length, fromIndex, toIndex);
if (fromIndex < toIndex) Clazz_new_($I$(21,1).c$$java_util_ArrayPrefixHelpers_DoubleCumulateTask$java_util_function_DoubleBinaryOperator$DA$I$I,[null, op, array, fromIndex, toIndex]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$IA$java_util_function_IntBinaryOperator',  function (array, op) {
$I$(1).requireNonNull$O(op);
if (array.length > 0) Clazz_new_($I$(22,1).c$$java_util_ArrayPrefixHelpers_IntCumulateTask$java_util_function_IntBinaryOperator$IA$I$I,[null, op, array, 0, array.length]).invoke$();
}, 1);

Clazz_newMeth(C$, 'parallelPrefix$IA$I$I$java_util_function_IntBinaryOperator',  function (array, fromIndex, toIndex, op) {
$I$(1).requireNonNull$O(op);
C$.rangeCheck$I$I$I(array.length, fromIndex, toIndex);
if (fromIndex < toIndex) Clazz_new_($I$(22,1).c$$java_util_ArrayPrefixHelpers_IntCumulateTask$java_util_function_IntBinaryOperator$IA$I$I,[null, op, array, fromIndex, toIndex]).invoke$();
}, 1);

Clazz_newMeth(C$, 'binarySearch$JA$J',  function (a, key) {
return C$.binarySearch0$JA$I$I$J(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$JA$I$I$J',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$JA$I$I$J(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$JA$I$I$J',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (Long.$lt(midVal,key )) low=mid + 1;
 else if (Long.$gt(midVal,key )) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$IA$I',  function (a, key) {
return C$.binarySearch0$IA$I$I$I(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$IA$I$I$I',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$IA$I$I$I(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$IA$I$I$I',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (midVal < key) low=mid + 1;
 else if (midVal > key) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$HA$H',  function (a, key) {
return C$.binarySearch0$HA$I$I$H(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$HA$I$I$H',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$HA$I$I$H(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$HA$I$I$H',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (midVal < key) low=mid + 1;
 else if (midVal > key) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$CA$C',  function (a, key) {
return C$.binarySearch0$CA$I$I$C(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$CA$I$I$C',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$CA$I$I$C(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$CA$I$I$C',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (midVal < key) low=mid + 1;
 else if (midVal > key) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$BA$B',  function (a, key) {
return C$.binarySearch0$BA$I$I$B(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$BA$I$I$B',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$BA$I$I$B(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$BA$I$I$B',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (midVal < key) low=mid + 1;
 else if (midVal > key) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$DA$D',  function (a, key) {
return C$.binarySearch0$DA$I$I$D(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$DA$I$I$D',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$DA$I$I$D(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$DA$I$I$D',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (midVal < key ) low=mid + 1;
 else if (midVal > key ) high=mid - 1;
 else {
var midBits=Double.doubleToLongBits$D(midVal);
var keyBits=Double.doubleToLongBits$D(key);
if (Long.$eq(midBits,keyBits )) return mid;
 else if (Long.$lt(midBits,keyBits )) low=mid + 1;
 else high=mid - 1;
}}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$FA$F',  function (a, key) {
return C$.binarySearch0$FA$I$I$F(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$FA$I$I$F',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$FA$I$I$F(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$FA$I$I$F',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
if (midVal < key ) low=mid + 1;
 else if (midVal > key ) high=mid - 1;
 else {
var midBits=Float.floatToIntBits$F(midVal);
var keyBits=Float.floatToIntBits$F(key);
if (midBits == keyBits) return mid;
 else if (midBits < keyBits) low=mid + 1;
 else high=mid - 1;
}}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$OA$O',  function (a, key) {
return C$.binarySearch0$OA$I$I$O(a, 0, a.length, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch$OA$I$I$O',  function (a, fromIndex, toIndex, key) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$OA$I$I$O(a, fromIndex, toIndex, key);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$OA$I$I$O',  function (a, fromIndex, toIndex, key) {
var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
var cmp=midVal.compareTo$O(key);
if (cmp < 0) low=mid + 1;
 else if (cmp > 0) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'binarySearch$OA$O$java_util_Comparator',  function (a, key, c) {
return C$.binarySearch0$OA$I$I$O$java_util_Comparator(a, 0, a.length, key, c);
}, 1);

Clazz_newMeth(C$, 'binarySearch$OA$I$I$O$java_util_Comparator',  function (a, fromIndex, toIndex, key, c) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
return C$.binarySearch0$OA$I$I$O$java_util_Comparator(a, fromIndex, toIndex, key, c);
}, 1);

Clazz_newMeth(C$, 'binarySearch0$OA$I$I$O$java_util_Comparator',  function (a, fromIndex, toIndex, key, c) {
if (c == null ) {
return C$.binarySearch0$OA$I$I$O(a, fromIndex, toIndex, key);
}var low=fromIndex;
var high=toIndex - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=a[mid];
var cmp=c.compare$O$O(midVal, key);
if (cmp < 0) low=mid + 1;
 else if (cmp > 0) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'equals$JA$JA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (Long.$ne(a[i],a2[i] )) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$IA$IA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$HA$HA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$CA$CA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$BA$BA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (a[i] != a2[i]) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$ZA$ZA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (a[i] != a2[i] ) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$DA$DA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (Long.$ne(Double.doubleToLongBits$D(a[i]),Double.doubleToLongBits$D(a2[i]) )) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$FA$FA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) if (Float.floatToIntBits$F(a[i]) != Float.floatToIntBits$F(a2[i])) return false;

return true;
}, 1);

Clazz_newMeth(C$, 'equals$OA$OA',  function (a, a2) {
if (a === a2 ) return true;
if (a == null  || a2 == null  ) return false;
var length=a.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) {
var o1=a[i];
var o2=a2[i];
if (!(o1 == null  ? o2 == null  : o1.equals$O(o2))) return false;
}
return true;
}, 1);

Clazz_newMeth(C$, 'fill$JA$J',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$JA$I$I$J',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$IA$I',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$IA$I$I$I',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$HA$H',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$HA$I$I$H',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$CA$C',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$CA$I$I$C',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$BA$B',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$BA$I$I$B',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$ZA$Z',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$ZA$I$I$Z',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$DA$D',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$DA$I$I$D',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$FA$F',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$FA$I$I$F',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$OA$O',  function (a, val) {
for (var i=0, len=a.length; i < len; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'fill$OA$I$I$O',  function (a, fromIndex, toIndex, val) {
C$.rangeCheck$I$I$I(a.length, fromIndex, toIndex);
for (var i=fromIndex; i < toIndex; i++) a[i]=val;

}, 1);

Clazz_newMeth(C$, 'copyOf$OA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}return C$.copyOf$OA$I$Class(original, newLength, original.getClass$());
}, 1);

Clazz_newMeth(C$, 'copyOf$OA$I$Class',  function (original, newLength, newType) {
var copy=(newType === Clazz_array(java.lang.Object, -1) ) ? Clazz_array(java.lang.Object, [newLength]) : Clazz_array(newType.getComponentType$(), newLength);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$BA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Byte.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$HA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Short.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$IA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Integer.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$JA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Long.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$CA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Character.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$FA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Float.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$DA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Double.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOf$ZA$I',  function (original, newLength) {
if (newLength <= original.length) {

return Clazz_array(-1, original, 0, newLength);
}var copy=Clazz_array(Boolean.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, 0, copy, 0, Math.min(original.length, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$OA$I$I',  function (original, from, to) {
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}return C$.copyOfRange$OA$I$I$Class(original, from, to, original.getClass$());
}, 1);

Clazz_newMeth(C$, 'copyOfRange$OA$I$I$Class',  function (original, from, to, newType) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
var copy=(newType === Clazz_array(java.lang.Object, -1) ) ? Clazz_array(java.lang.Object, [newLength]) : Clazz_array(newType.getComponentType$(), newLength);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$BA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Byte.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$HA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Short.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$IA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Integer.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$JA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Long.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$CA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Character.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$FA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Float.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$DA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Double.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'copyOfRange$ZA$I$I',  function (original, from, to) {
var newLength=to - from;
if (newLength < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[from + " > " + to ]);
if (to <= original.length) {

return Clazz_array(-1, original, from, to);
}var copy=Clazz_array(Boolean.TYPE, [newLength]);
System.arraycopy$O$I$O$I$I(original, from, copy, 0, Math.min(original.length - from, newLength));
return copy;
}, 1);

Clazz_newMeth(C$, 'asList$OA',  function (a) {
return Clazz_new_($I$(23,1).c$$OA,[a]);
}, 1);

Clazz_newMeth(C$, 'hashCode$JA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) {
var elementHash=Long.$ival((Long.$xor(element,(Long.$usr(element,32)))));
result=31 * result + elementHash;
}
return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$IA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + element;

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$HA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + element;

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$CA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + element.$c();

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$BA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + element;

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$ZA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + (element ? 1231 : 1237);

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$FA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + Float.floatToIntBits$F(element);

return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$DA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) {
var bits=Double.doubleToLongBits$D(element);
result=31 * result + Long.$ival((Long.$xor(bits,(Long.$usr(bits,32)))));
}
return result;
}, 1);

Clazz_newMeth(C$, 'hashCode$OA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=31 * result + (element == null  ? 0 : element.hashCode$());

return result;
}, 1);

Clazz_newMeth(C$, 'deepHashCode$OA',  function (a) {
if (a == null ) return 0;
var result=1;
for (var element, $element = 0, $$element = a; $element<$$element.length&&((element=($$element[$element])),1);$element++) {
var elementHash=0;
if (Clazz_instanceOf(element, Clazz_array(java.lang.Object, -1))) elementHash=C$.deepHashCode$OA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Byte.TYPE, -1))) elementHash=C$.hashCode$BA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Short.TYPE, -1))) elementHash=C$.hashCode$HA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Integer.TYPE, -1))) elementHash=C$.hashCode$IA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Long.TYPE, -1))) elementHash=C$.hashCode$JA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Character.TYPE, -1))) elementHash=C$.hashCode$CA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Float.TYPE, -1))) elementHash=C$.hashCode$FA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Double.TYPE, -1))) elementHash=C$.hashCode$DA(element);
 else if (Clazz_instanceOf(element, Clazz_array(Boolean.TYPE, -1))) elementHash=C$.hashCode$ZA(element);
 else if (element != null ) elementHash=element.hashCode$();
result=31 * result + elementHash;
}
return result;
}, 1);

Clazz_newMeth(C$, 'deepEquals$OA$OA',  function (a1, a2) {
if (a1 === a2 ) return true;
if (a1 == null  || a2 == null  ) return false;
var length=a1.length;
if (a2.length != length) return false;
for (var i=0; i < length; i++) {
var e1=a1[i];
var e2=a2[i];
if (e1 === e2 ) continue;
if (e1 == null ) return false;
var eq=C$.deepEquals0$O$O(e1, e2);
if (!eq) return false;
}
return true;
}, 1);

Clazz_newMeth(C$, 'deepEquals0$O$O',  function (e1, e2) {
Clazz_assert(C$, this, function(){return e1 != null });
var eq;
if (Clazz_instanceOf(e1, Clazz_array(java.lang.Object, -1)) && Clazz_instanceOf(e2, Clazz_array(java.lang.Object, -1)) ) eq=C$.deepEquals$OA$OA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Byte.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Byte.TYPE, -1)) ) eq=C$.equals$BA$BA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Short.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Short.TYPE, -1)) ) eq=C$.equals$HA$HA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Integer.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Integer.TYPE, -1)) ) eq=C$.equals$IA$IA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Long.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Long.TYPE, -1)) ) eq=C$.equals$JA$JA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Character.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Character.TYPE, -1)) ) eq=C$.equals$CA$CA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Float.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Float.TYPE, -1)) ) eq=C$.equals$FA$FA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Double.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Double.TYPE, -1)) ) eq=C$.equals$DA$DA(e1, e2);
 else if (Clazz_instanceOf(e1, Clazz_array(Boolean.TYPE, -1)) && Clazz_instanceOf(e2, Clazz_array(Boolean.TYPE, -1)) ) eq=C$.equals$ZA$ZA(e1, e2);
 else eq=e1.equals$O(e2);
return eq;
}, 1);

Clazz_newMeth(C$, 'toString$JA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$J(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$IA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$I(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$HA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$I(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$CA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$C(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$BA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$I(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$ZA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$Z(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$FA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$F(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$DA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$D(a[i]);
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'toString$OA',  function (a) {
if (a == null ) return "null";
var iMax=a.length - 1;
if (iMax == -1) return "[]";
var b=Clazz_new_($I$(24,1));
b.append$C("[");
for (var i=0; ; i++) {
b.append$S(String.valueOf$O(a[i]));
if (i == iMax) return b.append$C("]").toString();
b.append$S(", ");
}
}, 1);

Clazz_newMeth(C$, 'deepToString$OA',  function (a) {
if (a == null ) return "null";
var bufLen=20 * a.length;
if (a.length != 0 && bufLen <= 0 ) bufLen=2147483647;
var buf=Clazz_new_($I$(24,1).c$$I,[bufLen]);
C$.deepToString$OA$StringBuilder$java_util_Set(a, buf, Clazz_new_($I$(25,1)));
return buf.toString();
}, 1);

Clazz_newMeth(C$, 'deepToString$OA$StringBuilder$java_util_Set',  function (a, buf, dejaVu) {
if (a == null ) {
buf.append$S("null");
return;
}var iMax=a.length - 1;
if (iMax == -1) {
buf.append$S("[]");
return;
}dejaVu.add$O(a);
buf.append$C("[");
for (var i=0; ; i++) {
var element=a[i];
if (element == null ) {
buf.append$S("null");
} else {
var eClass=element.getClass$();
if (eClass.isArray$()) {
if (eClass === Clazz_array(Byte.TYPE, -1) ) buf.append$S(C$.toString$BA(element));
 else if (eClass === Clazz_array(Short.TYPE, -1) ) buf.append$S(C$.toString$HA(element));
 else if (eClass === Clazz_array(Integer.TYPE, -1) ) buf.append$S(C$.toString$IA(element));
 else if (eClass === Clazz_array(Long.TYPE, -1) ) buf.append$S(C$.toString$JA(element));
 else if (eClass === Clazz_array(Character.TYPE, -1) ) buf.append$S(C$.toString$CA(element));
 else if (eClass === Clazz_array(Float.TYPE, -1) ) buf.append$S(C$.toString$FA(element));
 else if (eClass === Clazz_array(Double.TYPE, -1) ) buf.append$S(C$.toString$DA(element));
 else if (eClass === Clazz_array(Boolean.TYPE, -1) ) buf.append$S(C$.toString$ZA(element));
 else {
if (dejaVu.contains$O(element)) buf.append$S("[...]");
 else C$.deepToString$OA$StringBuilder$java_util_Set(element, buf, dejaVu);
}} else {
buf.append$S(element.toString());
}}if (i == iMax) break;
buf.append$S(", ");
}
buf.append$C("]");
dejaVu.remove$O(a);
}, 1);

Clazz_newMeth(C$, 'setAll$OA$java_util_function_IntFunction',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
for (var i=0; i < array.length; i++) array[i]=generator.apply$I(i);

}, 1);

Clazz_newMeth(C$, 'parallelSetAll$OA$java_util_function_IntFunction',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
$I$(26).range$I$I(0, array.length).parallel$().forEach$java_util_function_IntConsumer(((P$.Arrays$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Arrays$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.IntConsumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['accept$I','accept$O'],  function (i) {
this.$finals$.array[i]=this.$finals$.generator.apply$I.apply(this.$finals$.generator, [i]);
});
})()
), Clazz_new_(P$.Arrays$lambda1.$init$,[this, {array:array,generator:generator}])));
}, 1);

Clazz_newMeth(C$, 'setAll$IA$java_util_function_IntUnaryOperator',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
for (var i=0; i < array.length; i++) array[i]=generator.applyAsInt$I(i);

}, 1);

Clazz_newMeth(C$, 'parallelSetAll$IA$java_util_function_IntUnaryOperator',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
$I$(26).range$I$I(0, array.length).parallel$().forEach$java_util_function_IntConsumer(((P$.Arrays$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "Arrays$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.IntConsumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['accept$I','accept$O'],  function (i) {
this.$finals$.array[i]=this.$finals$.generator.applyAsInt$I.apply(this.$finals$.generator, [i]);
});
})()
), Clazz_new_(P$.Arrays$lambda2.$init$,[this, {array:array,generator:generator}])));
}, 1);

Clazz_newMeth(C$, 'setAll$JA$java_util_function_IntToLongFunction',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
for (var i=0; i < array.length; i++) array[i]=generator.applyAsLong$I(i);

}, 1);

Clazz_newMeth(C$, 'parallelSetAll$JA$java_util_function_IntToLongFunction',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
$I$(26).range$I$I(0, array.length).parallel$().forEach$java_util_function_IntConsumer(((P$.Arrays$lambda3||
(function(){/*m*/var C$=Clazz_newClass(P$, "Arrays$lambda3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.IntConsumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['accept$I','accept$O'],  function (i) {
this.$finals$.array[i]=this.$finals$.generator.applyAsLong$I.apply(this.$finals$.generator, [i]);
});
})()
), Clazz_new_(P$.Arrays$lambda3.$init$,[this, {array:array,generator:generator}])));
}, 1);

Clazz_newMeth(C$, 'setAll$DA$java_util_function_IntToDoubleFunction',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
for (var i=0; i < array.length; i++) array[i]=generator.applyAsDouble$I(i);

}, 1);

Clazz_newMeth(C$, 'parallelSetAll$DA$java_util_function_IntToDoubleFunction',  function (array, generator) {
$I$(1).requireNonNull$O(generator);
$I$(26).range$I$I(0, array.length).parallel$().forEach$java_util_function_IntConsumer(((P$.Arrays$lambda4||
(function(){/*m*/var C$=Clazz_newClass(P$, "Arrays$lambda4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.IntConsumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['accept$I','accept$O'],  function (i) {
this.$finals$.array[i]=this.$finals$.generator.applyAsDouble$I.apply(this.$finals$.generator, [i]);
});
})()
), Clazz_new_(P$.Arrays$lambda4.$init$,[this, {generator:generator,array:array}])));
}, 1);

Clazz_newMeth(C$, 'spliterator$OA',  function (array) {
return $I$(3).spliterator$OA$I(array, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$OA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(3).spliterator$OA$I$I$I(array, startInclusive, endExclusive, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$IA',  function (array) {
return $I$(3).spliterator$IA$I(array, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$IA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(3).spliterator$IA$I$I$I(array, startInclusive, endExclusive, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$JA',  function (array) {
return $I$(3).spliterator$JA$I(array, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$JA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(3).spliterator$JA$I$I$I(array, startInclusive, endExclusive, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$DA',  function (array) {
return $I$(3).spliterator$DA$I(array, 1040);
}, 1);

Clazz_newMeth(C$, 'spliterator$DA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(3).spliterator$DA$I$I$I(array, startInclusive, endExclusive, 1040);
}, 1);

Clazz_newMeth(C$, 'stream$OA',  function (array) {
return C$.stream$OA$I$I(array, 0, array.length);
}, 1);

Clazz_newMeth(C$, 'stream$OA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(27,"stream$java_util_Spliterator$Z",[C$.spliterator$OA$I$I(array, startInclusive, endExclusive), false]);
}, 1);

Clazz_newMeth(C$, 'stream$IA',  function (array) {
return C$.stream$IA$I$I(array, 0, array.length);
}, 1);

Clazz_newMeth(C$, 'stream$IA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(27,"intStream$java_util_Spliterator_OfInt$Z",[C$.spliterator$IA$I$I(array, startInclusive, endExclusive), false]);
}, 1);

Clazz_newMeth(C$, 'stream$JA',  function (array) {
return C$.stream$JA$I$I(array, 0, array.length);
}, 1);

Clazz_newMeth(C$, 'stream$JA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(27,"longStream$java_util_Spliterator_OfLong$Z",[C$.spliterator$JA$I$I(array, startInclusive, endExclusive), false]);
}, 1);

Clazz_newMeth(C$, 'stream$DA',  function (array) {
return C$.stream$DA$I$I(array, 0, array.length);
}, 1);

Clazz_newMeth(C$, 'stream$DA$I$I',  function (array, startInclusive, endExclusive) {
return $I$(27,"doubleStream$java_util_Spliterator_OfDouble$Z",[C$.spliterator$DA$I$I(array, startInclusive, endExclusive), false]);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Arrays, "NaturalOrder", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Comparator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['INSTANCE','java.util.Arrays.NaturalOrder']]]

Clazz_newMeth(C$, 'compare$O$O',  function (first, second) {
return (first).compareTo$O(second);
});

C$.$static$=function(){C$.$static$=0;
C$.INSTANCE=Clazz_new_(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Arrays, "LegacyMergeSort", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['Z',['userRequested']]]

C$.$static$=function(){C$.$static$=0;
C$.userRequested=false;
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Arrays, "ArrayList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', ['java.util.RandomAccess', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['a','_.E[]']]]

Clazz_newMeth(C$, 'c$$OA',  function (array) {
Clazz_super_(C$, this);
this.a=$I$(1).requireNonNull$O(array);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.a.length;
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.a.clone$();
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var size=this.size$();
if (a.length < size) return $I$(2,"copyOf$OA$I$Class",[this.a, size, a.getClass$()]);
System.arraycopy$O$I$O$I$I(this.a, 0, a, 0, size);
if (a.length > size) a[size]=null;
return a;
});

Clazz_newMeth(C$, 'get$I',  function (index) {
return this.a[index];
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
var oldValue=this.a[index];
this.a[index]=element;
return oldValue;
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
var a=this.a;
if (o == null ) {
for (var i=0; i < a.length; i++) if (a[i] == null ) return i;

} else {
for (var i=0; i < a.length; i++) if (o.equals$O(a[i])) return i;

}return -1;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.indexOf$O(o) != -1;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(3).spliterator$OA$I(this.a, 16);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
for (var e, $e = 0, $$e = this.a; $e<$$e.length&&((e=($$e[$e])),1);$e++) {
action.accept$O(e);
}
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
$I$(1).requireNonNull$O(operator);
var a=this.a;
for (var i=0; i < a.length; i++) {
a[i]=operator.apply$O(a[i]);
}
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
$I$(2).sort$OA$java_util_Comparator(this.a, c);
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.util.Arrays','javajs.util.SB','java.util.stream.StreamSupport','java.util.Spliterators','java.nio.ByteBuffer','java.nio.ByteOrder']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BitSet", null, null, ['Cloneable', 'javajs.api.JSONEncodable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.wordsInUse=0;
this.sizeIsSticky=false;
},1);

C$.$fields$=[['Z',['sizeIsSticky'],'I',['wordsInUse'],'O',['+words']]
,['O',['emptyBitmap','int[]']]]

Clazz_newMeth(C$, 'wordIndex$I',  function (bitIndex) {
return bitIndex >> 5;
}, 1);

Clazz_newMeth(C$, 'recalculateWordsInUse$',  function () {
var i;
for (i=this.wordsInUse - 1; i >= 0; i--) if (this.words[i] != 0) break;

this.wordsInUse=i + 1;
});

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
p$1.initWords$I.apply(this, [32]);
this.sizeIsSticky=false;
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (nbits) {
C$.c$.apply(this, []);
this.init$I(nbits);
}, 1);

Clazz_newMeth(C$, 'valueOf$JA',  function (longs) {
var n;
for (n=longs.length; n > 0 && Long.$eq(longs[n - 1],0 ) ; n--) ;
var words=Clazz_array(Integer.TYPE, [n * 2]);
var len=-1;
var last;
for (var i=0, pt=0; i < n; i++) {
var l=longs[i];
words[pt++]=Long.$ival(l);
words[pt++]=(last=Long.$ival((Long.$sr(l,32))));
if (last != 0) len=pt;
}
var bs=Clazz_new_(C$.c$$IA,[words]);
if (len < words.length) --bs.wordsInUse;
return bs;
}, 1);

Clazz_newMeth(C$, 'valueOf$java_nio_LongBuffer',  function (lb) {
lb=lb.slice$();
var n;
for (n=lb.remaining$(); n > 0 && Long.$eq(lb.get$I(n - 1),0 ) ; n--) ;
var words=Clazz_array(Long.TYPE, [n]);
lb.get$JA(words);
return C$.valueOf$JA(words);
}, 1);

Clazz_newMeth(C$, 'c$$IA',  function (words) {
;C$.$init$.apply(this);
this.words=words;
this.wordsInUse=words.length;
}, 1);

Clazz_newMeth(C$, 'init$I',  function (nbits) {
if (nbits < 0) throw Clazz_new_(Clazz_load('NegativeArraySizeException').c$$S,["nbits < 0: " + nbits]);
p$1.initWords$I.apply(this, [nbits]);
this.sizeIsSticky=true;
});

Clazz_newMeth(C$, 'initWords$I',  function (nbits) {
this.words=Clazz_array(Integer.TYPE, [C$.wordIndex$I(nbits - 1) + 1]);
}, p$1);

Clazz_newMeth(C$, 'ensureCapacity$I',  function (wordsRequired) {
if (this.words.length < wordsRequired) {
var request=Math.max(2 * this.words.length, wordsRequired);
p$1.setLength$I.apply(this, [request]);
this.sizeIsSticky=false;
}}, p$1);

Clazz_newMeth(C$, 'expandTo$I',  function (wordIndex) {
var wordsRequired=wordIndex + 1;
if (this.wordsInUse < wordsRequired) {
p$1.ensureCapacity$I.apply(this, [wordsRequired]);
this.wordsInUse=wordsRequired;
}});

Clazz_newMeth(C$, 'set$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
this.expandTo$I(wordIndex);
this.words[wordIndex]|=(1 << bitIndex);
});

Clazz_newMeth(C$, 'setBitTo$I$Z',  function (bitIndex, value) {
if (value) this.set$I(bitIndex);
 else this.clear$I(bitIndex);
});

Clazz_newMeth(C$, 'setBits$I$I',  function (fromIndex, toIndex) {
if (fromIndex == toIndex) return;
var startWordIndex=C$.wordIndex$I(fromIndex);
var endWordIndex=C$.wordIndex$I(toIndex - 1);
this.expandTo$I(endWordIndex);
var firstWordMask=-1 << fromIndex;
var lastWordMask=-1 >>> -toIndex;
if (startWordIndex == endWordIndex) {
this.words[startWordIndex]|=(firstWordMask & lastWordMask);
} else {
this.words[startWordIndex]|=firstWordMask;
for (var i=startWordIndex + 1; i < endWordIndex; i++) this.words[i]=-1;

this.words[endWordIndex]|=lastWordMask;
}});

Clazz_newMeth(C$, 'clear$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
if (wordIndex >= this.wordsInUse) return;
this.words[wordIndex]&=~(1 << bitIndex);
this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'clearBits$I$I',  function (fromIndex, toIndex) {
if (fromIndex == toIndex) return;
var startWordIndex=C$.wordIndex$I(fromIndex);
if (startWordIndex >= this.wordsInUse) return;
var endWordIndex=C$.wordIndex$I(toIndex - 1);
if (endWordIndex >= this.wordsInUse) {
toIndex=this.length$();
endWordIndex=this.wordsInUse - 1;
}var firstWordMask=-1 << fromIndex;
var lastWordMask=-1 >>> -toIndex;
if (startWordIndex == endWordIndex) {
this.words[startWordIndex]&=~(firstWordMask & lastWordMask);
} else {
this.words[startWordIndex]&=~firstWordMask;
for (var i=startWordIndex + 1; i < endWordIndex; i++) this.words[i]=0;

this.words[endWordIndex]&=~lastWordMask;
}this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'clearAll$',  function () {
while (this.wordsInUse > 0)this.words[--this.wordsInUse]=0;

});

Clazz_newMeth(C$, 'get$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
return (wordIndex < this.wordsInUse) && ((this.words[wordIndex] & (1 << bitIndex)) != 0) ;
});

Clazz_newMeth(C$, 'nextSetBit$I',  function (fromIndex) {
if (fromIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex < 0: " + fromIndex]);
var u=C$.wordIndex$I(fromIndex);
if (u >= this.wordsInUse) return -1;
var word=this.words[u] & (-1 << fromIndex);
while (true){
if (word != 0) return (u * 32) + Integer.numberOfTrailingZeros$I(word);
if (++u == this.wordsInUse) return -1;
word=this.words[u];
}
});

Clazz_newMeth(C$, 'nextClearBit$I',  function (fromIndex) {
if (fromIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex < 0: " + fromIndex]);
var u=C$.wordIndex$I(fromIndex);
if (u >= this.wordsInUse) return fromIndex;
var word=~this.words[u] & (-1 << fromIndex);
while (true){
if (word != 0) return (u * 32) + Integer.numberOfTrailingZeros$I(word);
if (++u == this.wordsInUse) return this.wordsInUse * 32;
word=~this.words[u];
}
});

Clazz_newMeth(C$, 'length$',  function () {
if (this.wordsInUse == 0) return 0;
return 32 * (this.wordsInUse - 1) + (32 - Integer.numberOfLeadingZeros$I(this.words[this.wordsInUse - 1]));
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.wordsInUse == 0;
});

Clazz_newMeth(C$, 'intersects$java_util_BitSet',  function (set) {
for (var i=Math.min(this.wordsInUse, set.wordsInUse) - 1; i >= 0; i--) if ((this.words[i] & set.words[i]) != 0) return true;

return false;
});

Clazz_newMeth(C$, 'cardinality$',  function () {
var sum=0;
for (var i=0; i < this.wordsInUse; i++) sum+=Integer.bitCount$I(this.words[i]);

return sum;
});

Clazz_newMeth(C$, 'and$java_util_BitSet',  function (set) {
if (this === set ) return;
while (this.wordsInUse > set.wordsInUse)this.words[--this.wordsInUse]=0;

for (var i=0; i < this.wordsInUse; i++) this.words[i]&=set.words[i];

this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'or$java_util_BitSet',  function (set) {
if (this === set ) return;
var wordsInCommon=Math.min(this.wordsInUse, set.wordsInUse);
if (this.wordsInUse < set.wordsInUse) {
p$1.ensureCapacity$I.apply(this, [set.wordsInUse]);
this.wordsInUse=set.wordsInUse;
}for (var i=0; i < wordsInCommon; i++) this.words[i]|=set.words[i];

if (wordsInCommon < set.wordsInUse) System.arraycopy$O$I$O$I$I(set.words, wordsInCommon, this.words, wordsInCommon, this.wordsInUse - wordsInCommon);
});

Clazz_newMeth(C$, 'xor$java_util_BitSet',  function (set) {
var wordsInCommon=Math.min(this.wordsInUse, set.wordsInUse);
if (this.wordsInUse < set.wordsInUse) {
p$1.ensureCapacity$I.apply(this, [set.wordsInUse]);
this.wordsInUse=set.wordsInUse;
}for (var i=0; i < wordsInCommon; i++) this.words[i]^=set.words[i];

if (wordsInCommon < set.wordsInUse) System.arraycopy$O$I$O$I$I(set.words, wordsInCommon, this.words, wordsInCommon, set.wordsInUse - wordsInCommon);
this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'andNot$java_util_BitSet',  function (set) {
for (var i=Math.min(this.wordsInUse, set.wordsInUse) - 1; i >= 0; i--) this.words[i]&=~set.words[i];

this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var h=1234;
for (var i=this.wordsInUse; --i >= 0; ) (h=Long.$xor(h,(this.words[i] * (i + 1))));

return Long.$ival((Long.$xor((Long.$sr(h,32)),h)));
});

Clazz_newMeth(C$, 'size$',  function () {
return this.words.length * 32;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "java.util.BitSet"))) return false;
if (this === obj ) return true;
var set=obj;
if (this.wordsInUse != set.wordsInUse) return false;
for (var i=0; i < this.wordsInUse; i++) if (this.words[i] != set.words[i]) return false;

return true;
});

Clazz_newMeth(C$, 'clone$',  function () {
if (!this.sizeIsSticky && this.wordsInUse != this.words.length ) this.words=$I$(1).copyOf$IA$I(this.words, this.wordsInUse);
return C$.copy$java_util_BitSet(this);
});

Clazz_newMeth(C$, 'setLength$I',  function (n) {
if (n == this.words.length) return;
var a=Clazz_array(Integer.TYPE, [n]);
System.arraycopy$O$I$O$I$I(this.words, 0, a, 0, this.wordsInUse);
this.words=a;
}, p$1);

Clazz_newMeth(C$, 'toString',  function () {
return C$.escape$java_util_BitSet$C$C(this, "(", ")");
});

Clazz_newMeth(C$, 'copy$java_util_BitSet',  function (bitsetToCopy) {
var bs=Clazz_new_(C$);
var wordCount=bitsetToCopy.wordsInUse;
if (wordCount == 0) {
bs.words=C$.emptyBitmap;
} else {
bs.words=Clazz_array(Integer.TYPE, [bs.wordsInUse=wordCount]);
System.arraycopy$O$I$O$I$I(bitsetToCopy.words, 0, bs.words, 0, wordCount);
}return bs;
}, 1);

Clazz_newMeth(C$, 'cardinalityN$I',  function (max) {
var n=this.cardinality$();
for (var i=this.length$(); --i >= max; ) if (this.get$I(i)) --n;

return n;
});

Clazz_newMeth(C$, 'toJSON$',  function () {
var numBits=(this.wordsInUse > 128 ? this.cardinality$() : this.wordsInUse * 32);
var b=$I$(2).newN$I(6 * numBits + 2);
b.appendC$C("[");
var i=this.nextSetBit$I(0);
if (i != -1) {
b.appendI$I(i);
for (i=this.nextSetBit$I(i + 1); i >= 0; i=this.nextSetBit$I(i + 1)) {
var endOfRun=this.nextClearBit$I(i);
do {
b.append$S(", ").appendI$I(i);
} while (++i < endOfRun);
}
}b.appendC$C("]");
return b.toString();
});

Clazz_newMeth(C$, 'escape$java_util_BitSet$C$C',  function (bs, chOpen, chClose) {
if (bs == null ) return chOpen + "{}" + chClose ;
var s=Clazz_new_($I$(2,1));
s.append$S(chOpen + "{");
var imax=bs.length$();
var iLast=-1;
var iFirst=-2;
var i=-1;
while (++i <= imax){
var isSet=bs.get$I(i);
if (i == imax || iLast >= 0 && !isSet  ) {
if (iLast >= 0 && iFirst != iLast ) s.append$S((iFirst == iLast - 1 ? " " : ":") + iLast);
if (i == imax) break;
iLast=-1;
}if (bs.get$I(i)) {
if (iLast < 0) {
s.append$S((iFirst == -2 ? "" : " ") + i);
iFirst=i;
}iLast=i;
}}
s.append$S("}").appendC$C(chClose);
return s.toString();
}, 1);

Clazz_newMeth(C$, 'unescape$S',  function (str) {
var ch;
var len;
if (str == null  || (len=(str=str.trim$()).length$()) < 4  || str.equalsIgnoreCase$S("({null})")  || (ch=str.charAt$I(0)) != "(" && ch != "["   || str.charAt$I(len - 1) != (ch == "(" ? ")" : "]")  || str.charAt$I(1) != "{"  || str.indexOf$I("}") != len - 2 ) return null;
len-=2;
for (var i=len; --i >= 2; ) if ((((ch=str.charAt$I(i)).$c()) < 48  || ch.$c() > 57  ) && ch != " "  && ch != "\t"  && ch != ":" ) return null;

var lastN=len;
while (48 <= ((ch=str.charAt$I(--lastN)).$c())  && ch.$c() <= 57  ){
}
if (++lastN == len) lastN=0;
 else try {
lastN=Integer.parseInt$S(str.substring$I$I(lastN, len));
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
return null;
} else {
throw e;
}
}
var bs=Clazz_new_(C$.c$$I,[lastN]);
lastN=-1;
var iPrev=-1;
var iThis=-2;
for (var i=2; i <= len; i++) {
switch ((ch=str.charAt$I(i)).$c()) {
case 9:
case 32:
case 125:
if (iThis < 0) break;
if (iThis < lastN) return null;
lastN=iThis;
if (iPrev < 0) iPrev=iThis;
bs.setBits$I$I(iPrev, iThis + 1);
iPrev=-1;
iThis=-2;
break;
case 58:
iPrev=lastN=iThis;
iThis=-2;
break;
default:
if (48 <= ch.$c()  && ch.$c() <= 57  ) {
if (iThis < 0) iThis=0;
iThis=(iThis * 10) + (ch.$c() - 48);
}}
}
return (iPrev >= 0 ? null : bs);
}, 1);

Clazz_newMeth(C$, 'flip$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
this.expandTo$I(wordIndex);
this.words[wordIndex]^=(1 << bitIndex);
});

Clazz_newMeth(C$, 'flip$I$I',  function (fromIndex, toIndex) {
if (fromIndex == toIndex) return;
var startWordIndex=C$.wordIndex$I(fromIndex);
var endWordIndex=C$.wordIndex$I(toIndex - 1);
this.expandTo$I(endWordIndex);
var firstWordMask=-1 << fromIndex;
var lastWordMask=-1 >>> -toIndex;
if (startWordIndex == endWordIndex) {
this.words[startWordIndex]^=(firstWordMask & lastWordMask);
} else {
this.words[startWordIndex]^=firstWordMask;
for (var i=startWordIndex + 1; i < endWordIndex; i++) this.words[i]^=-1;

this.words[endWordIndex]^=lastWordMask;
}});

Clazz_newMeth(C$, 'set$I$Z',  function (bitIndex, value) {
this.setBitTo$I$Z(bitIndex, value);
});

Clazz_newMeth(C$, 'set$I$I',  function (fromIndex, toIndex) {
this.setBits$I$I(fromIndex, toIndex);
});

Clazz_newMeth(C$, 'set$I$I$Z',  function (fromIndex, toIndex, value) {
if (value) this.set$I$I(fromIndex, toIndex);
 else this.clear$I$I(fromIndex, toIndex);
});

Clazz_newMeth(C$, 'clear$I$I',  function (fromIndex, toIndex) {
this.clearBits$I$I(fromIndex, toIndex);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.clearAll$();
});

Clazz_newMeth(C$, 'get$I$I',  function (fromIndex, toIndex) {
var len=this.length$();
if (len <= fromIndex || fromIndex == toIndex ) return Clazz_new_(C$.c$$I,[0]);
if (toIndex > len) toIndex=len;
var result=Clazz_new_(C$.c$$I,[toIndex - fromIndex]);
var targetWords=C$.wordIndex$I(toIndex - fromIndex - 1 ) + 1;
var sourceIndex=C$.wordIndex$I(fromIndex);
var wordAligned=((fromIndex & 31) == 0);
for (var i=0; i < targetWords - 1; i++, sourceIndex++) result.words[i]=wordAligned ? this.words[sourceIndex] : (this.words[sourceIndex] >>> fromIndex) | (this.words[sourceIndex + 1] << -fromIndex);

var lastWordMask=-1 >>> -toIndex;
result.words[targetWords - 1]=((toIndex - 1) & 31) < (fromIndex & 31) ? ((this.words[sourceIndex] >>> fromIndex) | (this.words[sourceIndex + 1] & lastWordMask) << -fromIndex) : ((this.words[sourceIndex] & lastWordMask) >>> fromIndex);
result.wordsInUse=targetWords;
result.recalculateWordsInUse$();
return result;
});

Clazz_newMeth(C$, 'toLongArray$',  function () {
var a=Clazz_array(Long.TYPE, [((this.words.length + 1)/2|0)]);
for (var i=0, pt=0, n=this.words.length; i < n; i+=2) {
var l=(i == n - 1 ? 0 : this.words[i + 1]);
a[pt++]=Long.$or((Long.$sl(l,32)),(Long.$and(this.words[i],4294967295)));
}
return a;
});

Clazz_newMeth(C$, 'valueOf$IA',  function (longs) {
var n;
for (n=longs.length; n > 0 && longs[n - 1] == 0 ; n--) ;
return Clazz_new_(C$.c$$IA,[$I$(1).copyOf$IA$I(longs, n)]);
}, 1);

Clazz_newMeth(C$, 'previousSetBit$I',  function (fromIndex) {
if (fromIndex < 0) {
if (fromIndex == -1) return -1;
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex < -1: " + fromIndex]);
}var u=C$.wordIndex$I(fromIndex);
if (u >= this.wordsInUse) return this.length$() - 1;
var word=this.words[u] & (-1 >>> -(fromIndex + 1));
while (true){
if (word != 0) return (u + 1) * 32 - 1 - Integer.numberOfLeadingZeros$I(word);
if (u-- == 0) return -1;
word=this.words[u];
}
});

Clazz_newMeth(C$, 'previousClearBit$I',  function (fromIndex) {
if (fromIndex < 0) {
if (fromIndex == -1) return -1;
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex < -1: " + fromIndex]);
}var u=C$.wordIndex$I(fromIndex);
if (u >= this.wordsInUse) return fromIndex;
var word=~this.words[u] & (-1 >>> -(fromIndex + 1));
while (true){
if (word != 0) return (u + 1) * 32 - 1 - Integer.numberOfLeadingZeros$I(word);
if (u-- == 0) return -1;
word=~this.words[u];
}
});

Clazz_newMeth(C$, 'stream$',  function () {
return $I$(3,"intStream$java_util_function_Supplier$I$Z",[((P$.BitSet$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "BitSet$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Supplier', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'get$',  function () { return ($I$(4,"spliterator$java_util_PrimitiveIterator_OfInt$J$I",[Clazz_new_(P$.BitSet$1BitSetIterator.$init$,[this, null]), this.b$['java.util.BitSet'].cardinality$.apply(this.b$['java.util.BitSet'], []), 21]));});
})()
), Clazz_new_(P$.BitSet$lambda1.$init$,[this, null])), 16469, false]);
});

Clazz_newMeth(C$, 'toIntArray$',  function () {
return $I$(1).copyOf$IA$I(this.words, this.wordsInUse);
});

Clazz_newMeth(C$, 'valueOf$java_nio_IntBuffer',  function (lb) {
lb=lb.slice$();
var n;
for (n=lb.remaining$(); n > 0 && lb.get$I(n - 1) == 0 ; n--) ;
var words=Clazz_array(Integer.TYPE, [n]);
lb.get$IA(words);
return Clazz_new_(C$.c$$IA,[words]);
}, 1);

Clazz_newMeth(C$, 'valueOf$BA',  function (bytes) {
return C$.valueOf$java_nio_ByteBuffer($I$(5).wrap$BA(bytes));
}, 1);

Clazz_newMeth(C$, 'valueOf$java_nio_ByteBuffer',  function (bb) {
bb=bb.slice$().order$java_nio_ByteOrder($I$(6).LITTLE_ENDIAN);
var n;
for (n=bb.remaining$(); n > 0 && bb.get$I(n - 1) == 0 ; n--) ;
var words=Clazz_array(Integer.TYPE, [((n + 7)/4|0)]);
bb.limit$I(n);
var i=0;
while (bb.remaining$() >= 4)words[i++]=bb.getInt$();

for (var remaining=bb.remaining$(), j=0; j < remaining; j++) words[i]=Long.$ival(Long.$or(words[i],(Long.$sl((Long.$and(bb.get$(),255)),(j << 3)))));

return Clazz_new_(C$.c$$IA,[words]);
}, 1);

Clazz_newMeth(C$, 'toByteArray$',  function () {
var n=this.wordsInUse;
if (n == 0) return Clazz_array(Byte.TYPE, [0]);
var len=4 * (n - 1);
for (var x=this.words[n - 1]; x != 0; x>>>=8) ++len;

var bytes=Clazz_array(Byte.TYPE, [len]);
var bb=$I$(5).wrap$BA(bytes).order$java_nio_ByteOrder($I$(6).LITTLE_ENDIAN);
for (var i=0; i < n - 1; i++) bb.putInt$I(this.words[i]);

for (var x=this.words[n - 1]; x != 0; x>>>=8) bb.put$B(($b$[0] = (x & 255), $b$[0]));

return bytes;
});

C$.$static$=function(){C$.$static$=0;
C$.emptyBitmap=Clazz_array(Integer.TYPE, [0]);
};
var $b$ = new Int8Array(1);
;
(function(){/*l*/var C$=Clazz_newClass(P$, "BitSet$1BitSetIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, [['java.util.PrimitiveIterator','java.util.PrimitiveIterator.OfInt']], 2);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.next=this.b$['java.util.BitSet'].nextSetBit$I.apply(this.b$['java.util.BitSet'], [0]);
},1);

C$.$fields$=[['I',['next']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.next != -1;
});

Clazz_newMeth(C$, 'nextInt$',  function () {
if (this.next != -1) {
var ret=this.next;
this.next=this.b$['java.util.BitSet'].nextSetBit$I.apply(this.b$['java.util.BitSet'], [this.next + 1]);
return ret;
} else {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
}});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:33 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects','java.util.Spliterators','java.util.stream.StreamSupport']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Collection", null, null, 'Iterable');

C$.$clinit$=2;
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
$I$(1).requireNonNull$O(filter);
var removed=false;
var each=this.iterator$();
while (each.hasNext$()){
if (filter.test$O(each.next$())) {
each.remove$();
removed=true;
}}
return removed;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(2).spliterator$java_util_Collection$I(this, 0);
});

Clazz_newMeth(C$, 'stream$',  function () {
return $I$(3,"stream$java_util_Spliterator$Z",[this.spliterator$(), false]);
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return $I$(3,"stream$java_util_Spliterator$Z",[this.spliterator$(), true]);
});
};})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},p$2={},p$3={},p$4={},p$5={},p$6={},p$7={},p$8={},p$9={},p$10={},p$11={},p$12={},p$13={},p$14={},p$15={},p$16={},p$17={},I$=[[0,'java.util.TreeSet',['java.util.Collections','.UnmodifiableNavigableSet'],['java.util.Collections','.UnmodifiableNavigableSet','.EmptyNavigableSet'],['java.util.Collections','.UnmodifiableRandomAccessList'],['java.util.Collections','.UnmodifiableList'],'java.util.Objects',['java.util.Collections','.UnmodifiableMap','.UnmodifiableEntrySet'],'java.util.Collections',['java.util.Collections','.UnmodifiableMap','.UnmodifiableEntrySet','.UnmodifiableEntry'],['java.util.Collections','.UnmodifiableMap','.UnmodifiableEntrySet','.UnmodifiableEntrySetSpliterator'],'java.util.stream.StreamSupport','java.util.Arrays','java.util.TreeMap',['java.util.Collections','.UnmodifiableNavigableMap'],['java.util.Collections','.UnmodifiableNavigableMap','.EmptyNavigableMap'],['java.util.Collections','.SynchronizedRandomAccessList'],['java.util.Collections','.SynchronizedList'],['java.util.Collections','.SynchronizedSet'],['java.util.Collections','.SynchronizedCollection'],['java.util.Collections','.SynchronizedNavigableSet'],['java.util.AbstractMap','.SimpleImmutableEntry'],['java.util.Collections','.CheckedMap','.CheckedEntrySet'],['java.util.Collections','.CheckedMap','.CheckedEntrySet','.CheckedEntry'],'java.util.ArrayList','java.util.Spliterators','java.lang.reflect.Array','java.util.stream.IntStream','java.util.Comparator',['java.util.Collections','.EmptySet'],['java.util.Collections','.EmptyList'],['java.util.Collections','.EmptyMap'],'java.util.Random',['java.util.Collections','.UnmodifiableCollection'],['java.util.Collections','.UnmodifiableSet'],['java.util.Collections','.UnmodifiableSortedSet'],['java.util.Collections','.UnmodifiableMap'],['java.util.Collections','.UnmodifiableSortedMap'],['java.util.Collections','.SynchronizedSortedSet'],['java.util.Collections','.SynchronizedMap'],['java.util.Collections','.SynchronizedSortedMap'],['java.util.Collections','.SynchronizedNavigableMap'],['java.util.Collections','.CheckedCollection'],['java.util.Collections','.CheckedQueue'],['java.util.Collections','.CheckedSet'],['java.util.Collections','.CheckedSortedSet'],['java.util.Collections','.CheckedNavigableSet'],['java.util.Collections','.CheckedRandomAccessList'],['java.util.Collections','.CheckedList'],['java.util.Collections','.CheckedMap'],['java.util.Collections','.CheckedSortedMap'],['java.util.Collections','.CheckedNavigableMap'],['java.util.Collections','.EmptyIterator'],['java.util.Collections','.EmptyListIterator'],['java.util.Collections','.EmptyEnumeration'],['java.util.Collections','.SingletonSet'],['java.util.Collections','.SingletonList'],['java.util.Collections','.SingletonMap'],['java.util.Collections','.CopiesList'],['java.util.Collections','.ReverseComparator'],['java.util.Collections','.ReverseComparator2'],['java.util.Collections','.SetFromMap'],['java.util.Collections','.AsLIFOQueue']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Collections", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['UnmodifiableCollection',8],['UnmodifiableSet',8],['UnmodifiableSortedSet',8],['UnmodifiableNavigableSet',8],['UnmodifiableList',8],['UnmodifiableRandomAccessList',8],['UnmodifiableMap',10],['UnmodifiableSortedMap',8],['UnmodifiableNavigableMap',8],['SynchronizedCollection',8],['SynchronizedSet',8],['SynchronizedSortedSet',8],['SynchronizedNavigableSet',8],['SynchronizedList',8],['SynchronizedRandomAccessList',8],['SynchronizedMap',10],['SynchronizedSortedMap',8],['SynchronizedNavigableMap',8],['CheckedCollection',8],['CheckedQueue',8],['CheckedSet',8],['CheckedSortedSet',8],['CheckedNavigableSet',8],['CheckedList',8],['CheckedRandomAccessList',8],['CheckedMap',10],['CheckedSortedMap',8],['CheckedNavigableMap',8],['EmptyIterator',10],['EmptyListIterator',10],['EmptyEnumeration',10],['EmptySet',10],['EmptyList',10],['EmptyMap',10],['SingletonSet',10],['SingletonList',10],['SingletonMap',10],['CopiesList',10],['ReverseComparator',10],['ReverseComparator2',10],['SetFromMap',10],['AsLIFOQueue',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['r','java.util.Random','EMPTY_SET','java.util.Set','EMPTY_LIST','java.util.List','EMPTY_MAP','java.util.Map']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'sort$java_util_List',  function (list) {
list.sort$java_util_Comparator(null);
}, 1);

Clazz_newMeth(C$, 'sort$java_util_List$java_util_Comparator',  function (list, c) {
list.sort$java_util_Comparator(c);
}, 1);

Clazz_newMeth(C$, 'binarySearch$java_util_List$O',  function (list, key) {
if (Clazz_instanceOf(list, "java.util.RandomAccess") || list.size$() < 5000 ) return C$.indexedBinarySearch$java_util_List$O(list, key);
 else return C$.iteratorBinarySearch$java_util_List$O(list, key);
}, 1);

Clazz_newMeth(C$, 'indexedBinarySearch$java_util_List$O',  function (list, key) {
var low=0;
var high=list.size$() - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=list.get$I(mid);
var cmp=midVal.compareTo$O(key);
if (cmp < 0) low=mid + 1;
 else if (cmp > 0) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'iteratorBinarySearch$java_util_List$O',  function (list, key) {
var low=0;
var high=list.size$() - 1;
var i=list.listIterator$();
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=C$.get$java_util_ListIterator$I(i, mid);
var cmp=midVal.compareTo$O(key);
if (cmp < 0) low=mid + 1;
 else if (cmp > 0) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'get$java_util_ListIterator$I',  function (i, index) {
var obj=null;
var pos=i.nextIndex$();
if (pos <= index) {
do {
obj=i.next$();
} while (pos++ < index);
} else {
do {
obj=i.previous$();
} while (--pos > index);
}return obj;
}, 1);

Clazz_newMeth(C$, 'binarySearch$java_util_List$O$java_util_Comparator',  function (list, key, c) {
if (c == null ) return C$.binarySearch$java_util_List$O(list, key);
if (Clazz_instanceOf(list, "java.util.RandomAccess") || list.size$() < 5000 ) return C$.indexedBinarySearch$java_util_List$O$java_util_Comparator(list, key, c);
 else return C$.iteratorBinarySearch$java_util_List$O$java_util_Comparator(list, key, c);
}, 1);

Clazz_newMeth(C$, 'indexedBinarySearch$java_util_List$O$java_util_Comparator',  function (l, key, c) {
var low=0;
var high=l.size$() - 1;
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=l.get$I(mid);
var cmp=c.compare$O$O(midVal, key);
if (cmp < 0) low=mid + 1;
 else if (cmp > 0) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'iteratorBinarySearch$java_util_List$O$java_util_Comparator',  function (l, key, c) {
var low=0;
var high=l.size$() - 1;
var i=l.listIterator$();
while (low <= high){
var mid=(low + high) >>> 1;
var midVal=C$.get$java_util_ListIterator$I(i, mid);
var cmp=c.compare$O$O(midVal, key);
if (cmp < 0) low=mid + 1;
 else if (cmp > 0) high=mid - 1;
 else return mid;
}
return -(low + 1);
}, 1);

Clazz_newMeth(C$, 'reverse$java_util_List',  function (list) {
var size=list.size$();
if (size < 18 || Clazz_instanceOf(list, "java.util.RandomAccess") ) {
for (var i=0, mid=size >> 1, j=size - 1; i < mid; i++, j--) C$.swap$java_util_List$I$I(list, i, j);

} else {
var fwd=list.listIterator$();
var rev=list.listIterator$I(size);
for (var i=0, mid=list.size$() >> 1; i < mid; i++) {
var tmp=fwd.next$();
fwd.set$O(rev.previous$());
rev.set$O(tmp);
}
}}, 1);

Clazz_newMeth(C$, 'shuffle$java_util_List',  function (list) {
var rnd=C$.r;
if (rnd == null ) C$.r=rnd=Clazz_new_($I$(32,1));
C$.shuffle$java_util_List$java_util_Random(list, rnd);
}, 1);

Clazz_newMeth(C$, 'shuffle$java_util_List$java_util_Random',  function (list, rnd) {
var size=list.size$();
if (size < 5 || Clazz_instanceOf(list, "java.util.RandomAccess") ) {
for (var i=size; i > 1; i--) C$.swap$java_util_List$I$I(list, i - 1, rnd.nextInt$I(i));

} else {
var arr=list.toArray$();
for (var i=size; i > 1; i--) C$.swap$OA$I$I(arr, i - 1, rnd.nextInt$I(i));

var it=list.listIterator$();
for (var i=0; i < arr.length; i++) {
it.next$();
it.set$O(arr[i]);
}
}}, 1);

Clazz_newMeth(C$, 'swap$java_util_List$I$I',  function (list, i, j) {
var l=list;
l.set$I$O(i, l.set$I$O(j, l.get$I(i)));
}, 1);

Clazz_newMeth(C$, 'swap$OA$I$I',  function (arr, i, j) {
var tmp=arr[i];
arr[i]=arr[j];
arr[j]=tmp;
}, 1);

Clazz_newMeth(C$, 'fill$java_util_List$O',  function (list, obj) {
var size=list.size$();
if (size < 25 || Clazz_instanceOf(list, "java.util.RandomAccess") ) {
for (var i=0; i < size; i++) list.set$I$O(i, obj);

} else {
var itr=list.listIterator$();
for (var i=0; i < size; i++) {
itr.next$();
itr.set$O(obj);
}
}}, 1);

Clazz_newMeth(C$, 'copy$java_util_List$java_util_List',  function (dest, src) {
var srcSize=src.size$();
if (srcSize > dest.size$()) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Source does not fit in dest"]);
if (srcSize < 10 || (Clazz_instanceOf(src, "java.util.RandomAccess") && Clazz_instanceOf(dest, "java.util.RandomAccess") ) ) {
for (var i=0; i < srcSize; i++) dest.set$I$O(i, src.get$I(i));

} else {
var di=dest.listIterator$();
var si=src.listIterator$();
for (var i=0; i < srcSize; i++) {
di.next$();
di.set$O(si.next$());
}
}}, 1);

Clazz_newMeth(C$, 'min$java_util_Collection',  function (coll) {
var i=coll.iterator$();
var candidate=i.next$();
while (i.hasNext$()){
var next=i.next$();
if (next.compareTo$O(candidate) < 0) candidate=next;
}
return candidate;
}, 1);

Clazz_newMeth(C$, 'min$java_util_Collection$java_util_Comparator',  function (coll, comp) {
if (comp == null ) return C$.min$java_util_Collection(coll);
var i=coll.iterator$();
var candidate=i.next$();
while (i.hasNext$()){
var next=i.next$();
if (comp.compare$O$O(next, candidate) < 0) candidate=next;
}
return candidate;
}, 1);

Clazz_newMeth(C$, 'max$java_util_Collection',  function (coll) {
var i=coll.iterator$();
var candidate=i.next$();
while (i.hasNext$()){
var next=i.next$();
if (next.compareTo$O(candidate) > 0) candidate=next;
}
return candidate;
}, 1);

Clazz_newMeth(C$, 'max$java_util_Collection$java_util_Comparator',  function (coll, comp) {
if (comp == null ) return C$.max$java_util_Collection(coll);
var i=coll.iterator$();
var candidate=i.next$();
while (i.hasNext$()){
var next=i.next$();
if (comp.compare$O$O(next, candidate) > 0) candidate=next;
}
return candidate;
}, 1);

Clazz_newMeth(C$, 'rotate$java_util_List$I',  function (list, distance) {
if (Clazz_instanceOf(list, "java.util.RandomAccess") || list.size$() < 100 ) C$.rotate1$java_util_List$I(list, distance);
 else C$.rotate2$java_util_List$I(list, distance);
}, 1);

Clazz_newMeth(C$, 'rotate1$java_util_List$I',  function (list, distance) {
var size=list.size$();
if (size == 0) return;
distance=distance % size;
if (distance < 0) distance+=size;
if (distance == 0) return;
for (var cycleStart=0, nMoved=0; nMoved != size; cycleStart++) {
var displaced=list.get$I(cycleStart);
var i=cycleStart;
do {
i+=distance;
if (i >= size) i-=size;
displaced=list.set$I$O(i, displaced);
++nMoved;
} while (i != cycleStart);
}
}, 1);

Clazz_newMeth(C$, 'rotate2$java_util_List$I',  function (list, distance) {
var size=list.size$();
if (size == 0) return;
var mid=-distance % size;
if (mid < 0) mid+=size;
if (mid == 0) return;
C$.reverse$java_util_List(list.subList$I$I(0, mid));
C$.reverse$java_util_List(list.subList$I$I(mid, size));
C$.reverse$java_util_List(list);
}, 1);

Clazz_newMeth(C$, 'replaceAll$java_util_List$O$O',  function (list, oldVal, newVal) {
var result=false;
var size=list.size$();
if (size < 11 || Clazz_instanceOf(list, "java.util.RandomAccess") ) {
if (oldVal == null ) {
for (var i=0; i < size; i++) {
if (list.get$I(i) == null ) {
list.set$I$O(i, newVal);
result=true;
}}
} else {
for (var i=0; i < size; i++) {
if (oldVal.equals$O(list.get$I(i))) {
list.set$I$O(i, newVal);
result=true;
}}
}} else {
var itr=list.listIterator$();
if (oldVal == null ) {
for (var i=0; i < size; i++) {
if (itr.next$() == null ) {
itr.set$O(newVal);
result=true;
}}
} else {
for (var i=0; i < size; i++) {
if (oldVal.equals$O(itr.next$())) {
itr.set$O(newVal);
result=true;
}}
}}return result;
}, 1);

Clazz_newMeth(C$, 'indexOfSubList$java_util_List$java_util_List',  function (source, target) {
var sourceSize=source.size$();
var targetSize=target.size$();
var maxCandidate=sourceSize - targetSize;
if (sourceSize < 35 || (Clazz_instanceOf(source, "java.util.RandomAccess") && Clazz_instanceOf(target, "java.util.RandomAccess") ) ) {
 nextCand : for (var candidate=0; candidate <= maxCandidate; candidate++) {
for (var i=0, j=candidate; i < targetSize; i++, j++) if (!C$.eq$O$O(target.get$I(i), source.get$I(j))) continue nextCand;

return candidate;
}
} else {
var si=source.listIterator$();
 nextCand : for (var candidate=0; candidate <= maxCandidate; candidate++) {
var ti=target.listIterator$();
for (var i=0; i < targetSize; i++) {
if (!C$.eq$O$O(ti.next$(), si.next$())) {
for (var j=0; j < i; j++) si.previous$();

continue nextCand;
}}
return candidate;
}
}return -1;
}, 1);

Clazz_newMeth(C$, 'lastIndexOfSubList$java_util_List$java_util_List',  function (source, target) {
var sourceSize=source.size$();
var targetSize=target.size$();
var maxCandidate=sourceSize - targetSize;
if (sourceSize < 35 || Clazz_instanceOf(source, "java.util.RandomAccess") ) {
 nextCand : for (var candidate=maxCandidate; candidate >= 0; candidate--) {
for (var i=0, j=candidate; i < targetSize; i++, j++) if (!C$.eq$O$O(target.get$I(i), source.get$I(j))) continue nextCand;

return candidate;
}
} else {
if (maxCandidate < 0) return -1;
var si=source.listIterator$I(maxCandidate);
 nextCand : for (var candidate=maxCandidate; candidate >= 0; candidate--) {
var ti=target.listIterator$();
for (var i=0; i < targetSize; i++) {
if (!C$.eq$O$O(ti.next$(), si.next$())) {
if (candidate != 0) {
for (var j=0; j <= i + 1; j++) si.previous$();

}continue nextCand;
}}
return candidate;
}
}return -1;
}, 1);

Clazz_newMeth(C$, 'unmodifiableCollection$java_util_Collection',  function (c) {
return Clazz_new_($I$(33,1).c$$java_util_Collection,[c]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableSet$java_util_Set',  function (s) {
return Clazz_new_($I$(34,1).c$$java_util_Set,[s]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableSortedSet$java_util_SortedSet',  function (s) {
return Clazz_new_($I$(35,1).c$$java_util_SortedSet,[s]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableNavigableSet$java_util_NavigableSet',  function (s) {
return Clazz_new_($I$(2,1).c$$java_util_NavigableSet,[s]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableList$java_util_List',  function (list) {
return (Clazz_instanceOf(list, "java.util.RandomAccess") ? Clazz_new_($I$(4,1).c$$java_util_List,[list]) : Clazz_new_($I$(5,1).c$$java_util_List,[list]));
}, 1);

Clazz_newMeth(C$, 'unmodifiableMap$java_util_Map',  function (m) {
return Clazz_new_($I$(36,1).c$$java_util_Map,[m]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableSortedMap$java_util_SortedMap',  function (m) {
return Clazz_new_($I$(37,1).c$$java_util_SortedMap,[m]);
}, 1);

Clazz_newMeth(C$, 'unmodifiableNavigableMap$java_util_NavigableMap',  function (m) {
return Clazz_new_($I$(14,1).c$$java_util_NavigableMap,[m]);
}, 1);

Clazz_newMeth(C$, 'synchronizedCollection$java_util_Collection',  function (c) {
return Clazz_new_($I$(19,1).c$$java_util_Collection,[c]);
}, 1);

Clazz_newMeth(C$, 'synchronizedCollection$java_util_Collection$O',  function (c, mutex) {
return Clazz_new_($I$(19,1).c$$java_util_Collection$O,[c, mutex]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSet$java_util_Set',  function (s) {
return Clazz_new_($I$(18,1).c$$java_util_Set,[s]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSet$java_util_Set$O',  function (s, mutex) {
return Clazz_new_($I$(18,1).c$$java_util_Set$O,[s, mutex]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSortedSet$java_util_SortedSet',  function (s) {
return Clazz_new_($I$(38,1).c$$java_util_SortedSet,[s]);
}, 1);

Clazz_newMeth(C$, 'synchronizedNavigableSet$java_util_NavigableSet',  function (s) {
return Clazz_new_($I$(20,1).c$$java_util_NavigableSet,[s]);
}, 1);

Clazz_newMeth(C$, 'synchronizedList$java_util_List',  function (list) {
return (Clazz_instanceOf(list, "java.util.RandomAccess") ? Clazz_new_($I$(16,1).c$$java_util_List,[list]) : Clazz_new_($I$(17,1).c$$java_util_List,[list]));
}, 1);

Clazz_newMeth(C$, 'synchronizedList$java_util_List$O',  function (list, mutex) {
return (Clazz_instanceOf(list, "java.util.RandomAccess") ? Clazz_new_($I$(16,1).c$$java_util_List$O,[list, mutex]) : Clazz_new_($I$(17,1).c$$java_util_List$O,[list, mutex]));
}, 1);

Clazz_newMeth(C$, 'synchronizedMap$java_util_Map',  function (m) {
return Clazz_new_($I$(39,1).c$$java_util_Map,[m]);
}, 1);

Clazz_newMeth(C$, 'synchronizedSortedMap$java_util_SortedMap',  function (m) {
return Clazz_new_($I$(40,1).c$$java_util_SortedMap,[m]);
}, 1);

Clazz_newMeth(C$, 'synchronizedNavigableMap$java_util_NavigableMap',  function (m) {
return Clazz_new_($I$(41,1).c$$java_util_NavigableMap,[m]);
}, 1);

Clazz_newMeth(C$, 'checkedCollection$java_util_Collection$Class',  function (c, type) {
return Clazz_new_($I$(42,1).c$$java_util_Collection$Class,[c, type]);
}, 1);

Clazz_newMeth(C$, 'zeroLengthArray$Class',  function (type) {
return Clazz_array(type, 0);
}, 1);

Clazz_newMeth(C$, 'checkedQueue$java_util_Queue$Class',  function (queue, type) {
return Clazz_new_($I$(43,1).c$$java_util_Queue$Class,[queue, type]);
}, 1);

Clazz_newMeth(C$, 'checkedSet$java_util_Set$Class',  function (s, type) {
return Clazz_new_($I$(44,1).c$$java_util_Set$Class,[s, type]);
}, 1);

Clazz_newMeth(C$, 'checkedSortedSet$java_util_SortedSet$Class',  function (s, type) {
return Clazz_new_($I$(45,1).c$$java_util_SortedSet$Class,[s, type]);
}, 1);

Clazz_newMeth(C$, 'checkedNavigableSet$java_util_NavigableSet$Class',  function (s, type) {
return Clazz_new_($I$(46,1).c$$java_util_NavigableSet$Class,[s, type]);
}, 1);

Clazz_newMeth(C$, 'checkedList$java_util_List$Class',  function (list, type) {
return (Clazz_instanceOf(list, "java.util.RandomAccess") ? Clazz_new_($I$(47,1).c$$java_util_List$Class,[list, type]) : Clazz_new_($I$(48,1).c$$java_util_List$Class,[list, type]));
}, 1);

Clazz_newMeth(C$, 'checkedMap$java_util_Map$Class$Class',  function (m, keyType, valueType) {
return Clazz_new_($I$(49,1).c$$java_util_Map$Class$Class,[m, keyType, valueType]);
}, 1);

Clazz_newMeth(C$, 'checkedSortedMap$java_util_SortedMap$Class$Class',  function (m, keyType, valueType) {
return Clazz_new_($I$(50,1).c$$java_util_SortedMap$Class$Class,[m, keyType, valueType]);
}, 1);

Clazz_newMeth(C$, 'checkedNavigableMap$java_util_NavigableMap$Class$Class',  function (m, keyType, valueType) {
return Clazz_new_($I$(51,1).c$$java_util_NavigableMap$Class$Class,[m, keyType, valueType]);
}, 1);

Clazz_newMeth(C$, 'emptyIterator$',  function () {
return $I$(52).EMPTY_ITERATOR;
}, 1);

Clazz_newMeth(C$, 'emptyListIterator$',  function () {
return $I$(53).$EMPTY_ITERATOR;
}, 1);

Clazz_newMeth(C$, 'emptyEnumeration$',  function () {
return $I$(54).EMPTY_ENUMERATION;
}, 1);

Clazz_newMeth(C$, 'emptySet$',  function () {
return C$.EMPTY_SET;
}, 1);

Clazz_newMeth(C$, 'emptySortedSet$',  function () {
return $I$(2).EMPTY_NAVIGABLE_SET;
}, 1);

Clazz_newMeth(C$, 'emptyNavigableSet$',  function () {
return $I$(2).EMPTY_NAVIGABLE_SET;
}, 1);

Clazz_newMeth(C$, 'emptyList$',  function () {
return C$.EMPTY_LIST;
}, 1);

Clazz_newMeth(C$, 'emptyMap$',  function () {
return C$.EMPTY_MAP;
}, 1);

Clazz_newMeth(C$, 'emptySortedMap$',  function () {
return $I$(14).EMPTY_NAVIGABLE_MAP;
}, 1);

Clazz_newMeth(C$, 'emptyNavigableMap$',  function () {
return $I$(14).EMPTY_NAVIGABLE_MAP;
}, 1);

Clazz_newMeth(C$, 'singleton$O',  function (o) {
return Clazz_new_($I$(55,1).c$$O,[o]);
}, 1);

Clazz_newMeth(C$, 'singletonIterator$O',  function (e) {
return ((P$.Collections$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.hasNext=true;
},1);

C$.$fields$=[['Z',['hasNext']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.hasNext;
});

Clazz_newMeth(C$, 'next$',  function () {
if (this.hasNext) {
this.hasNext=false;
return this.$finals$.e;
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'remove$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
if (this.hasNext) {
action.accept$O(this.$finals$.e);
this.hasNext=false;
}});
})()
), Clazz_new_(P$.Collections$1.$init$,[this, {e:e}]));
}, 1);

Clazz_newMeth(C$, 'singletonSpliterator$O',  function (element) {
return ((P$.Collections$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Spliterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.est=1;
},1);

C$.$fields$=[['J',['est']]]

Clazz_newMeth(C$, 'trySplit$',  function () {
return null;
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (consumer) {
$I$(6).requireNonNull$O(consumer);
if (Long.$gt(this.est,0 )) {
(this.est=Long.$inc(this.est,-1));
consumer.accept$O(this.$finals$.element);
return true;
}return false;
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (consumer) {
this.tryAdvance$java_util_function_Consumer(consumer);
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
return this.est;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
var value=(this.$finals$.element != null ) ? 256 : 0;
return value | 64 | 16384 | 1024 | 1 | 16 ;
});
})()
), Clazz_new_(P$.Collections$2.$init$,[this, {element:element}]));
}, 1);

Clazz_newMeth(C$, 'singletonList$O',  function (o) {
return Clazz_new_($I$(56,1).c$$O,[o]);
}, 1);

Clazz_newMeth(C$, 'singletonMap$O$O',  function (key, value) {
return Clazz_new_($I$(57,1).c$$O$O,[key, value]);
}, 1);

Clazz_newMeth(C$, 'nCopies$I$O',  function (n, o) {
if (n < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["List length = " + n]);
return Clazz_new_($I$(58,1).c$$I$O,[n, o]);
}, 1);

Clazz_newMeth(C$, 'reverseOrder$',  function () {
return $I$(59).REVERSE_ORDER;
}, 1);

Clazz_newMeth(C$, 'reverseOrder$java_util_Comparator',  function (cmp) {
if (cmp == null ) return C$.reverseOrder$();
if (Clazz_instanceOf(cmp, "java.util.Collections.ReverseComparator2")) return (cmp).cmp;
return Clazz_new_($I$(60,1).c$$java_util_Comparator,[cmp]);
}, 1);

Clazz_newMeth(C$, 'enumeration$java_util_Collection',  function (c) {
return ((P$.Collections$3||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=c.iterator$();
},1);

C$.$fields$=[['O',['i','java.util.Iterator']]]

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return this.i.hasNext$();
});

Clazz_newMeth(C$, 'nextElement$',  function () {
return this.i.next$();
});
})()
), Clazz_new_(P$.Collections$3.$init$,[this, null]));
}, 1);

Clazz_newMeth(C$, 'list$java_util_Enumeration',  function (e) {
var l=Clazz_new_($I$(24,1));
while (e.hasMoreElements$())l.add$O(e.nextElement$());

return l;
}, 1);

Clazz_newMeth(C$, 'eq$O$O',  function (o1, o2) {
return o1 == null  ? o2 == null  : o1.equals$O(o2);
}, 1);

Clazz_newMeth(C$, 'frequency$java_util_Collection$O',  function (c, o) {
var result=0;
if (o == null ) {
for (var e, $e = c.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) if (e == null ) ++result;

} else {
for (var e, $e = c.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) if (o.equals$O(e)) ++result;

}return result;
}, 1);

Clazz_newMeth(C$, 'disjoint$java_util_Collection$java_util_Collection',  function (c1, c2) {
var contains=c2;
var iterate=c1;
if (Clazz_instanceOf(c1, "java.util.Set")) {
iterate=c2;
contains=c1;
} else if (!(Clazz_instanceOf(c2, "java.util.Set"))) {
var c1size=c1.size$();
var c2size=c2.size$();
if (c1size == 0 || c2size == 0 ) {
return true;
}if (c1size > c2size) {
iterate=c2;
contains=c1;
}}for (var e, $e = iterate.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
if (contains.contains$O(e)) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'addAll$java_util_Collection$OA',  function (c, elements) {
var result=false;
for (var element, $element = 0, $$element = elements; $element<$$element.length&&((element=($$element[$element])),1);$element++) result=!!(result|(c.add$O(element)));

return result;
}, 1);

Clazz_newMeth(C$, 'newSetFromMap$java_util_Map',  function (map) {
return Clazz_new_($I$(61,1).c$$java_util_Map,[map]);
}, 1);

Clazz_newMeth(C$, 'asLifoQueue$java_util_Deque',  function (deque) {
return Clazz_new_($I$(62,1).c$$java_util_Deque,[deque]);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_SET=Clazz_new_($I$(29,1));
C$.EMPTY_LIST=Clazz_new_($I$(30,1));
C$.EMPTY_MAP=Clazz_new_($I$(31,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableCollection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Collection', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['c','java.util.Collection']]]

Clazz_newMeth(C$, 'c$$java_util_Collection',  function (c) {
;C$.$init$.apply(this);
if (c == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
this.c=c;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.c.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.c.isEmpty$();
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.c.contains$O(o);
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.c.toArray$();
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
return this.c.toArray$OA(a);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.c.toString();
});

Clazz_newMeth(C$, 'iterator$',  function () {
return ((P$.Collections$UnmodifiableCollection$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$UnmodifiableCollection$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=this.b$['java.util.Collections.UnmodifiableCollection'].c.iterator$();
},1);

C$.$fields$=[['O',['i','java.util.Iterator']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.i.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.i.next$();
});

Clazz_newMeth(C$, 'remove$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
this.i.forEachRemaining$java_util_function_Consumer(action);
});
})()
), Clazz_new_(P$.Collections$UnmodifiableCollection$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'add$O',  function (e) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (coll) {
return this.c.containsAll$java_util_Collection(coll);
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (coll) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (coll) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (coll) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'clear$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
this.c.forEach$java_util_function_Consumer(action);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return this.c.spliterator$();
});

Clazz_newMeth(C$, 'stream$',  function () {
return this.c.stream$();
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return this.c.parallelStream$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableCollection'], ['java.util.Set', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_Set',  function (s) {
;C$.superclazz.c$$java_util_Collection.apply(this,[s]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.c.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.c.hashCode$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableSortedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableSet'], ['java.util.SortedSet', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['ss','java.util.SortedSet']]]

Clazz_newMeth(C$, 'c$$java_util_SortedSet',  function (s) {
;C$.superclazz.c$$java_util_Set.apply(this,[s]);C$.$init$.apply(this);
this.ss=s;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
return this.ss.comparator$();
});

Clazz_newMeth(C$, 'subSet$O$O',  function (fromElement, toElement) {
return Clazz_new_(C$.c$$java_util_SortedSet,[this.ss.subSet$O$O(fromElement, toElement)]);
});

Clazz_newMeth(C$, 'headSet$O',  function (toElement) {
return Clazz_new_(C$.c$$java_util_SortedSet,[this.ss.headSet$O(toElement)]);
});

Clazz_newMeth(C$, 'tailSet$O',  function (fromElement) {
return Clazz_new_(C$.c$$java_util_SortedSet,[this.ss.tailSet$O(fromElement)]);
});

Clazz_newMeth(C$, 'first$',  function () {
return this.ss.first$();
});

Clazz_newMeth(C$, 'last$',  function () {
return this.ss.last$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableNavigableSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableSortedSet'], ['java.util.NavigableSet', 'java.io.Serializable']);
C$.$classes$=[['EmptyNavigableSet',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['+ns']]
,['O',['EMPTY_NAVIGABLE_SET','java.util.NavigableSet']]]

Clazz_newMeth(C$, 'c$$java_util_NavigableSet',  function (s) {
;C$.superclazz.c$$java_util_SortedSet.apply(this,[s]);C$.$init$.apply(this);
this.ns=s;
}, 1);

Clazz_newMeth(C$, 'lower$O',  function (e) {
return this.ns.lower$O(e);
});

Clazz_newMeth(C$, 'floor$O',  function (e) {
return this.ns.floor$O(e);
});

Clazz_newMeth(C$, 'ceiling$O',  function (e) {
return this.ns.ceiling$O(e);
});

Clazz_newMeth(C$, 'higher$O',  function (e) {
return this.ns.higher$O(e);
});

Clazz_newMeth(C$, 'pollFirst$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'pollLast$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'descendingSet$',  function () {
return Clazz_new_(C$.c$$java_util_NavigableSet,[this.ns.descendingSet$()]);
});

Clazz_newMeth(C$, 'descendingIterator$',  function () {
return this.descendingSet$().iterator$();
});

Clazz_newMeth(C$, 'subSet$O$Z$O$Z',  function (fromElement, fromInclusive, toElement, toInclusive) {
return Clazz_new_(C$.c$$java_util_NavigableSet,[this.ns.subSet$O$Z$O$Z(fromElement, fromInclusive, toElement, toInclusive)]);
});

Clazz_newMeth(C$, 'headSet$O$Z',  function (toElement, inclusive) {
return Clazz_new_(C$.c$$java_util_NavigableSet,[this.ns.headSet$O$Z(toElement, inclusive)]);
});

Clazz_newMeth(C$, 'tailSet$O$Z',  function (fromElement, inclusive) {
return Clazz_new_(C$.c$$java_util_NavigableSet,[this.ns.tailSet$O$Z(fromElement, inclusive)]);
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_NAVIGABLE_SET=Clazz_new_($I$(3,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.UnmodifiableNavigableSet, "EmptyNavigableSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableNavigableSet'], 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$java_util_NavigableSet.apply(this,[Clazz_new_($I$(1,1))]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'readResolve',  function () {
return $I$(2).EMPTY_NAVIGABLE_SET;
}, p$1);
})()

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableCollection'], 'java.util.List');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['list','java.util.List']]]

Clazz_newMeth(C$, 'c$$java_util_List',  function (list) {
;C$.superclazz.c$$java_util_Collection.apply(this,[list]);C$.$init$.apply(this);
this.list=list;
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.list.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.list.hashCode$();
});

Clazz_newMeth(C$, 'get$I',  function (index) {
return this.list.get$I(index);
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
return this.list.indexOf$O(o);
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
return this.list.lastIndexOf$O(o);
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'listIterator$',  function () {
return this.listIterator$I(0);
});

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
return ((P$.Collections$UnmodifiableList$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$UnmodifiableList$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.ListIterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=this.b$['java.util.Collections.UnmodifiableList'].list.listIterator$I(index);
},1);

C$.$fields$=[['O',['i','java.util.ListIterator']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.i.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.i.next$();
});

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.i.hasPrevious$();
});

Clazz_newMeth(C$, 'previous$',  function () {
return this.i.previous$();
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.i.nextIndex$();
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.i.previousIndex$();
});

Clazz_newMeth(C$, 'remove$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'set$O',  function (e) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'add$O',  function (e) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
this.i.forEachRemaining$java_util_function_Consumer(action);
});
})()
), Clazz_new_(P$.Collections$UnmodifiableList$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
return Clazz_new_(C$.c$$java_util_List,[this.list.subList$I$I(fromIndex, toIndex)]);
});

Clazz_newMeth(C$, 'readResolve',  function () {
return (Clazz_instanceOf(this.list, "java.util.RandomAccess") ? Clazz_new_($I$(4,1).c$$java_util_List,[this.list]) : this);
}, p$2);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableRandomAccessList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableList'], 'java.util.RandomAccess');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_List',  function (list) {
;C$.superclazz.c$$java_util_List.apply(this,[list]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
return Clazz_new_(C$.c$$java_util_List,[this.list.subList$I$I(fromIndex, toIndex)]);
});

Clazz_newMeth(C$, 'writeReplace',  function () {
return Clazz_new_($I$(5,1).c$$java_util_List,[this.list]);
}, p$3);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Map', 'java.io.Serializable']);
C$.$classes$=[['UnmodifiableEntrySet',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['m','java.util.Map','keySet','java.util.Set','+entrySet','values','java.util.Collection']]]

Clazz_newMeth(C$, 'c$$java_util_Map',  function (m) {
;C$.$init$.apply(this);
if (m == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
this.m=m;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.m.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.m.isEmpty$();
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
return this.m.containsKey$O(key);
});

Clazz_newMeth(C$, 'containsValue$O',  function (val) {
return this.m.containsValue$O(val);
});

Clazz_newMeth(C$, 'get$O',  function (key) {
return this.m.get$O(key);
});

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (m) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'clear$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'keySet$',  function () {
if (this.keySet == null ) this.keySet=$I$(8,"unmodifiableSet$java_util_Set",[this.m.keySet$()]);
return this.keySet;
});

Clazz_newMeth(C$, 'entrySet$',  function () {
if (this.entrySet == null ) this.entrySet=Clazz_new_([this.m.entrySet$()],$I$(7,1).c$$java_util_Set);
return this.entrySet;
});

Clazz_newMeth(C$, 'values$',  function () {
if (this.values == null ) this.values=$I$(8,"unmodifiableCollection$java_util_Collection",[this.m.values$()]);
return this.values;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.m.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.m.hashCode$();
});

Clazz_newMeth(C$, 'toString',  function () {
return this.m.toString();
});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (k, defaultValue) {
return (this.m).getOrDefault$O$O(k, defaultValue);
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
this.m.forEach$java_util_function_BiConsumer(action);
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.UnmodifiableMap, "UnmodifiableEntrySet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableSet']);
C$.$classes$=[['UnmodifiableEntrySetSpliterator',24],['UnmodifiableEntry',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_Set',  function (s) {
;C$.superclazz.c$$java_util_Set.apply(this,[s]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'entryConsumer$java_util_function_Consumer',  function (action) {
return ((P$.Collections$UnmodifiableMap$UnmodifiableEntrySet$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$UnmodifiableMap$UnmodifiableEntrySet$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Consumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['accept$java_util_Map_Entry','accept$O'],  function (e) { return (this.$finals$.action.accept$O(Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[e])));});
})()
), Clazz_new_(P$.Collections$UnmodifiableMap$UnmodifiableEntrySet$lambda1.$init$,[this, {action:action}]));
}, 1);

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
this.c.forEach$java_util_function_Consumer(C$.entryConsumer$java_util_function_Consumer(action));
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_([this.c.spliterator$()],$I$(10,1).c$$java_util_Spliterator);
});

Clazz_newMeth(C$, 'stream$',  function () {
return $I$(11,"stream$java_util_Spliterator$Z",[this.spliterator$(), false]);
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return $I$(11,"stream$java_util_Spliterator$Z",[this.spliterator$(), true]);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return ((P$.Collections$UnmodifiableMap$UnmodifiableEntrySet$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$UnmodifiableMap$UnmodifiableEntrySet$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=this.b$['java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet'].c.iterator$();
},1);

C$.$fields$=[['O',['i','java.util.Iterator']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.i.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return Clazz_new_([this.i.next$()],$I$(9,1).c$$java_util_Map_Entry);
});

Clazz_newMeth(C$, 'remove$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});
})()
), Clazz_new_(P$.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'toArray$',  function () {
var a=this.c.toArray$();
for (var i=0; i < a.length; i++) a[i]=Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[a[i]]);

return a;
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var arr=this.c.toArray$OA(a.length == 0 ? a : $I$(12).copyOf$OA$I(a, 0));
for (var i=0; i < arr.length; i++) arr[i]=Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[arr[i]]);

if (arr.length > a.length) return arr;
System.arraycopy$O$I$O$I$I(arr, 0, a, 0, arr.length);
if (a.length > arr.length) a[arr.length]=null;
return a;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
return this.c.contains$O(Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[o]));
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (coll) {
for (var e, $e = coll.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
if (!this.contains$O(e)) return false;
}
return true;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Set"))) return false;
var s=o;
if (s.size$() != this.c.size$()) return false;
return this.containsAll$java_util_Collection(s);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.UnmodifiableMap.UnmodifiableEntrySet, "UnmodifiableEntrySetSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['s','java.util.Spliterator']]]

Clazz_newMeth(C$, 'c$$java_util_Spliterator',  function (s) {
;C$.$init$.apply(this);
this.s=s;
}, 1);

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
return this.s.tryAdvance$java_util_function_Consumer($I$(7).entryConsumer$java_util_function_Consumer(action));
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
this.s.forEachRemaining$java_util_function_Consumer($I$(7).entryConsumer$java_util_function_Consumer(action));
});

Clazz_newMeth(C$, 'trySplit$',  function () {
var split=this.s.trySplit$();
return split == null  ? null : Clazz_new_(C$.c$$java_util_Spliterator,[split]);
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
return this.s.estimateSize$();
});

Clazz_newMeth(C$, 'getExactSizeIfKnown$',  function () {
return this.s.getExactSizeIfKnown$();
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return this.s.characteristics$();
});

Clazz_newMeth(C$, 'hasCharacteristics$I',  function (characteristics) {
return this.s.hasCharacteristics$I(characteristics);
});

Clazz_newMeth(C$, 'getComparator$',  function () {
return this.s.getComparator$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.UnmodifiableMap.UnmodifiableEntrySet, "UnmodifiableEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['e','java.util.Map.Entry']]]

Clazz_newMeth(C$, 'c$$java_util_Map_Entry',  function (e) {
;C$.$init$.apply(this);
this.e=$I$(6).requireNonNull$O(e);
}, 1);

Clazz_newMeth(C$, 'getKey$',  function () {
return this.e.getKey$();
});

Clazz_newMeth(C$, 'getValue$',  function () {
return this.e.getValue$();
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.e.hashCode$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (this === o ) return true;
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var t=o;
return $I$(8,"eq$O$O",[this.e.getKey$(), t.getKey$()]) && $I$(8,"eq$O$O",[this.e.getValue$(), t.getValue$()]) ;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.e.toString();
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableSortedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableMap'], ['java.util.SortedMap', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['sm','java.util.SortedMap']]]

Clazz_newMeth(C$, 'c$$java_util_SortedMap',  function (m) {
;C$.superclazz.c$$java_util_Map.apply(this,[m]);C$.$init$.apply(this);
this.sm=m;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
return this.sm.comparator$();
});

Clazz_newMeth(C$, 'subMap$O$O',  function (fromKey, toKey) {
return Clazz_new_(C$.c$$java_util_SortedMap,[this.sm.subMap$O$O(fromKey, toKey)]);
});

Clazz_newMeth(C$, 'headMap$O',  function (toKey) {
return Clazz_new_(C$.c$$java_util_SortedMap,[this.sm.headMap$O(toKey)]);
});

Clazz_newMeth(C$, 'tailMap$O',  function (fromKey) {
return Clazz_new_(C$.c$$java_util_SortedMap,[this.sm.tailMap$O(fromKey)]);
});

Clazz_newMeth(C$, 'firstKey$',  function () {
return this.sm.firstKey$();
});

Clazz_newMeth(C$, 'lastKey$',  function () {
return this.sm.lastKey$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "UnmodifiableNavigableMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableSortedMap'], ['java.util.NavigableMap', 'java.io.Serializable']);
C$.$classes$=[['EmptyNavigableMap',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['nm','java.util.NavigableMap']]
,['O',['EMPTY_NAVIGABLE_MAP','java.util.Collections.UnmodifiableNavigableMap.EmptyNavigableMap']]]

Clazz_newMeth(C$, 'c$$java_util_NavigableMap',  function (m) {
;C$.superclazz.c$$java_util_SortedMap.apply(this,[m]);C$.$init$.apply(this);
this.nm=m;
}, 1);

Clazz_newMeth(C$, 'lowerKey$O',  function (key) {
return this.nm.lowerKey$O(key);
});

Clazz_newMeth(C$, 'floorKey$O',  function (key) {
return this.nm.floorKey$O(key);
});

Clazz_newMeth(C$, 'ceilingKey$O',  function (key) {
return this.nm.ceilingKey$O(key);
});

Clazz_newMeth(C$, 'higherKey$O',  function (key) {
return this.nm.higherKey$O(key);
});

Clazz_newMeth(C$, 'lowerEntry$O',  function (key) {
var lower=this.nm.lowerEntry$O(key);
return (null != lower ) ? Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[lower]) : null;
});

Clazz_newMeth(C$, 'floorEntry$O',  function (key) {
var floor=this.nm.floorEntry$O(key);
return (null != floor ) ? Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[floor]) : null;
});

Clazz_newMeth(C$, 'ceilingEntry$O',  function (key) {
var ceiling=this.nm.ceilingEntry$O(key);
return (null != ceiling ) ? Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[ceiling]) : null;
});

Clazz_newMeth(C$, 'higherEntry$O',  function (key) {
var higher=this.nm.higherEntry$O(key);
return (null != higher ) ? Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[higher]) : null;
});

Clazz_newMeth(C$, 'firstEntry$',  function () {
var first=this.nm.firstEntry$();
return (null != first ) ? Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[first]) : null;
});

Clazz_newMeth(C$, 'lastEntry$',  function () {
var last=this.nm.lastEntry$();
return (null != last ) ? Clazz_new_($I$(9,1).c$$java_util_Map_Entry,[last]) : null;
});

Clazz_newMeth(C$, 'pollFirstEntry$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'pollLastEntry$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'descendingMap$',  function () {
return $I$(8,"unmodifiableNavigableMap$java_util_NavigableMap",[this.nm.descendingMap$()]);
});

Clazz_newMeth(C$, 'navigableKeySet$',  function () {
return $I$(8,"unmodifiableNavigableSet$java_util_NavigableSet",[this.nm.navigableKeySet$()]);
});

Clazz_newMeth(C$, 'descendingKeySet$',  function () {
return $I$(8,"unmodifiableNavigableSet$java_util_NavigableSet",[this.nm.descendingKeySet$()]);
});

Clazz_newMeth(C$, 'subMap$O$Z$O$Z',  function (fromKey, fromInclusive, toKey, toInclusive) {
return $I$(8,"unmodifiableNavigableMap$java_util_NavigableMap",[this.nm.subMap$O$Z$O$Z(fromKey, fromInclusive, toKey, toInclusive)]);
});

Clazz_newMeth(C$, 'headMap$O$Z',  function (toKey, inclusive) {
return $I$(8,"unmodifiableNavigableMap$java_util_NavigableMap",[this.nm.headMap$O$Z(toKey, inclusive)]);
});

Clazz_newMeth(C$, 'tailMap$O$Z',  function (fromKey, inclusive) {
return $I$(8,"unmodifiableNavigableMap$java_util_NavigableMap",[this.nm.tailMap$O$Z(fromKey, inclusive)]);
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_NAVIGABLE_MAP=Clazz_new_($I$(15,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.UnmodifiableNavigableMap, "EmptyNavigableMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.UnmodifiableNavigableMap'], 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$java_util_NavigableMap.apply(this,[Clazz_new_($I$(13,1))]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'navigableKeySet$',  function () {
return $I$(8).emptyNavigableSet$();
});

Clazz_newMeth(C$, 'readResolve',  function () {
return $I$(14).EMPTY_NAVIGABLE_MAP;
}, p$4);
})()

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedCollection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Collection', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['c','java.util.Collection','mutex','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$java_util_Collection',  function (c) {
;C$.$init$.apply(this);
this.c=$I$(6).requireNonNull$O(c);
this.mutex=this;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection$O',  function (c, mutex) {
;C$.$init$.apply(this);
this.c=$I$(6).requireNonNull$O(c);
this.mutex=$I$(6).requireNonNull$O(mutex);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
{
return this.c.size$();
}});

Clazz_newMeth(C$, 'isEmpty$',  function () {
{
return this.c.isEmpty$();
}});

Clazz_newMeth(C$, 'contains$O',  function (o) {
{
return this.c.contains$O(o);
}});

Clazz_newMeth(C$, 'toArray$',  function () {
{
return this.c.toArray$();
}});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
{
return this.c.toArray$OA(a);
}});

Clazz_newMeth(C$, 'iterator$',  function () {
return this.c.iterator$();
});

Clazz_newMeth(C$, 'add$O',  function (e) {
{
return this.c.add$O(e);
}});

Clazz_newMeth(C$, 'remove$O',  function (o) {
{
return this.c.remove$O(o);
}});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (coll) {
{
return this.c.containsAll$java_util_Collection(coll);
}});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (coll) {
{
return this.c.addAll$java_util_Collection(coll);
}});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (coll) {
{
return this.c.removeAll$java_util_Collection(coll);
}});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (coll) {
{
return this.c.retainAll$java_util_Collection(coll);
}});

Clazz_newMeth(C$, 'clear$',  function () {
{
this.c.clear$();
}});

Clazz_newMeth(C$, 'toString',  function () {
{
return this.c.toString();
}});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (consumer) {
{
this.c.forEach$java_util_function_Consumer(consumer);
}});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
{
return this.c.removeIf$java_util_function_Predicate(filter);
}});

Clazz_newMeth(C$, 'spliterator$',  function () {
return this.c.spliterator$();
});

Clazz_newMeth(C$, 'stream$',  function () {
return this.c.stream$();
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return this.c.parallelStream$();
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
{
s.defaultWriteObject$();
}}, p$5);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedCollection'], 'java.util.Set');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_Set',  function (s) {
;C$.superclazz.c$$java_util_Collection.apply(this,[s]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Set$O',  function (s, mutex) {
;C$.superclazz.c$$java_util_Collection$O.apply(this,[s, mutex]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (this === o ) return true;
{
return this.c.equals$O(o);
}});

Clazz_newMeth(C$, 'hashCode$',  function () {
{
return this.c.hashCode$();
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedSortedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedSet'], 'java.util.SortedSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['ss','java.util.SortedSet']]]

Clazz_newMeth(C$, 'c$$java_util_SortedSet',  function (s) {
;C$.superclazz.c$$java_util_Set.apply(this,[s]);C$.$init$.apply(this);
this.ss=s;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_SortedSet$O',  function (s, mutex) {
;C$.superclazz.c$$java_util_Set$O.apply(this,[s, mutex]);C$.$init$.apply(this);
this.ss=s;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
{
return this.ss.comparator$();
}});

Clazz_newMeth(C$, 'subSet$O$O',  function (fromElement, toElement) {
{
return Clazz_new_(C$.c$$java_util_SortedSet$O,[this.ss.subSet$O$O(fromElement, toElement), this.mutex]);
}});

Clazz_newMeth(C$, 'headSet$O',  function (toElement) {
{
return Clazz_new_(C$.c$$java_util_SortedSet$O,[this.ss.headSet$O(toElement), this.mutex]);
}});

Clazz_newMeth(C$, 'tailSet$O',  function (fromElement) {
{
return Clazz_new_(C$.c$$java_util_SortedSet$O,[this.ss.tailSet$O(fromElement), this.mutex]);
}});

Clazz_newMeth(C$, 'first$',  function () {
{
return this.ss.first$();
}});

Clazz_newMeth(C$, 'last$',  function () {
{
return this.ss.last$();
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedNavigableSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedSortedSet'], 'java.util.NavigableSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['ns','java.util.NavigableSet']]]

Clazz_newMeth(C$, 'c$$java_util_NavigableSet',  function (s) {
;C$.superclazz.c$$java_util_SortedSet.apply(this,[s]);C$.$init$.apply(this);
this.ns=s;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_NavigableSet$O',  function (s, mutex) {
;C$.superclazz.c$$java_util_SortedSet$O.apply(this,[s, mutex]);C$.$init$.apply(this);
this.ns=s;
}, 1);

Clazz_newMeth(C$, 'lower$O',  function (e) {
{
return this.ns.lower$O(e);
}});

Clazz_newMeth(C$, 'floor$O',  function (e) {
{
return this.ns.floor$O(e);
}});

Clazz_newMeth(C$, 'ceiling$O',  function (e) {
{
return this.ns.ceiling$O(e);
}});

Clazz_newMeth(C$, 'higher$O',  function (e) {
{
return this.ns.higher$O(e);
}});

Clazz_newMeth(C$, 'pollFirst$',  function () {
{
return this.ns.pollFirst$();
}});

Clazz_newMeth(C$, 'pollLast$',  function () {
{
return this.ns.pollLast$();
}});

Clazz_newMeth(C$, 'descendingSet$',  function () {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.descendingSet$(), this.mutex]);
}});

Clazz_newMeth(C$, 'descendingIterator$',  function () {
{
return this.descendingSet$().iterator$();
}});

Clazz_newMeth(C$, 'subSet$O$O',  function (fromElement, toElement) {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.subSet$O$Z$O$Z(fromElement, true, toElement, false), this.mutex]);
}});

Clazz_newMeth(C$, 'headSet$O',  function (toElement) {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.headSet$O$Z(toElement, false), this.mutex]);
}});

Clazz_newMeth(C$, 'tailSet$O',  function (fromElement) {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.tailSet$O$Z(fromElement, true), this.mutex]);
}});

Clazz_newMeth(C$, 'subSet$O$Z$O$Z',  function (fromElement, fromInclusive, toElement, toInclusive) {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.subSet$O$Z$O$Z(fromElement, fromInclusive, toElement, toInclusive), this.mutex]);
}});

Clazz_newMeth(C$, 'headSet$O$Z',  function (toElement, inclusive) {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.headSet$O$Z(toElement, inclusive), this.mutex]);
}});

Clazz_newMeth(C$, 'tailSet$O$Z',  function (fromElement, inclusive) {
{
return Clazz_new_(C$.c$$java_util_NavigableSet$O,[this.ns.tailSet$O$Z(fromElement, inclusive), this.mutex]);
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedCollection'], 'java.util.List');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['list','java.util.List']]]

Clazz_newMeth(C$, 'c$$java_util_List',  function (list) {
;C$.superclazz.c$$java_util_Collection.apply(this,[list]);C$.$init$.apply(this);
this.list=list;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List$O',  function (list, mutex) {
;C$.superclazz.c$$java_util_Collection$O.apply(this,[list, mutex]);C$.$init$.apply(this);
this.list=list;
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (this === o ) return true;
{
return this.list.equals$O(o);
}});

Clazz_newMeth(C$, 'hashCode$',  function () {
{
return this.list.hashCode$();
}});

Clazz_newMeth(C$, 'get$I',  function (index) {
{
return this.list.get$I(index);
}});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
{
return this.list.set$I$O(index, element);
}});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
{
this.list.add$I$O(index, element);
}});

Clazz_newMeth(C$, 'remove$I',  function (index) {
{
return this.list.remove$I(index);
}});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
{
return this.list.indexOf$O(o);
}});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
{
return this.list.lastIndexOf$O(o);
}});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
{
return this.list.addAll$I$java_util_Collection(index, c);
}});

Clazz_newMeth(C$, 'listIterator$',  function () {
return this.list.listIterator$();
});

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
return this.list.listIterator$I(index);
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
{
return Clazz_new_(C$.c$$java_util_List$O,[this.list.subList$I$I(fromIndex, toIndex), this.mutex]);
}});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
{
this.list.replaceAll$java_util_function_UnaryOperator(operator);
}});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
{
this.list.sort$java_util_Comparator(c);
}});

Clazz_newMeth(C$, 'readResolve',  function () {
return (Clazz_instanceOf(this.list, "java.util.RandomAccess") ? Clazz_new_($I$(16,1).c$$java_util_List,[this.list]) : this);
}, p$6);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedRandomAccessList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedList'], 'java.util.RandomAccess');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_List',  function (list) {
;C$.superclazz.c$$java_util_List.apply(this,[list]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_List$O',  function (list, mutex) {
;C$.superclazz.c$$java_util_List$O.apply(this,[list, mutex]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
{
return Clazz_new_(C$.c$$java_util_List$O,[this.list.subList$I$I(fromIndex, toIndex), this.mutex]);
}});

Clazz_newMeth(C$, 'writeReplace',  function () {
return Clazz_new_($I$(17,1).c$$java_util_List,[this.list]);
}, p$7);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Map', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['m','java.util.Map','mutex','java.lang.Object','keySet','java.util.Set','+entrySet','values','java.util.Collection']]]

Clazz_newMeth(C$, 'c$$java_util_Map',  function (m) {
;C$.$init$.apply(this);
this.m=$I$(6).requireNonNull$O(m);
this.mutex=this;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map$O',  function (m, mutex) {
;C$.$init$.apply(this);
this.m=m;
this.mutex=mutex;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
{
return this.m.size$();
}});

Clazz_newMeth(C$, 'isEmpty$',  function () {
{
return this.m.isEmpty$();
}});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
{
return this.m.containsKey$O(key);
}});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
{
return this.m.containsValue$O(value);
}});

Clazz_newMeth(C$, 'get$O',  function (key) {
{
return this.m.get$O(key);
}});

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
{
return this.m.put$O$O(key, value);
}});

Clazz_newMeth(C$, 'remove$O',  function (key) {
{
return this.m.remove$O(key);
}});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (map) {
{
this.m.putAll$java_util_Map(map);
}});

Clazz_newMeth(C$, 'clear$',  function () {
{
this.m.clear$();
}});

Clazz_newMeth(C$, 'keySet$',  function () {
{
if (this.keySet == null ) this.keySet=Clazz_new_([this.m.keySet$(), this.mutex],$I$(18,1).c$$java_util_Set$O);
return this.keySet;
}});

Clazz_newMeth(C$, 'entrySet$',  function () {
{
if (this.entrySet == null ) this.entrySet=Clazz_new_([this.m.entrySet$(), this.mutex],$I$(18,1).c$$java_util_Set$O);
return this.entrySet;
}});

Clazz_newMeth(C$, 'values$',  function () {
{
if (this.values == null ) this.values=Clazz_new_([this.m.values$(), this.mutex],$I$(19,1).c$$java_util_Collection$O);
return this.values;
}});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (this === o ) return true;
{
return this.m.equals$O(o);
}});

Clazz_newMeth(C$, 'hashCode$',  function () {
{
return this.m.hashCode$();
}});

Clazz_newMeth(C$, 'toString',  function () {
{
return this.m.toString();
}});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (k, defaultValue) {
{
return this.m.getOrDefault$O$O(k, defaultValue);
}});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
{
this.m.forEach$java_util_function_BiConsumer(action);
}});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
{
this.m.replaceAll$java_util_function_BiFunction($function);
}});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
{
return this.m.putIfAbsent$O$O(key, value);
}});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
{
return this.m.remove$O$O(key, value);
}});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
{
return this.m.replace$O$O$O(key, oldValue, newValue);
}});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
{
return this.m.replace$O$O(key, value);
}});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
{
return this.m.computeIfAbsent$O$java_util_function_Function(key, mappingFunction);
}});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
{
return this.m.computeIfPresent$O$java_util_function_BiFunction(key, remappingFunction);
}});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
{
return this.m.compute$O$java_util_function_BiFunction(key, remappingFunction);
}});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
{
return this.m.merge$O$O$java_util_function_BiFunction(key, value, remappingFunction);
}});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
{
s.defaultWriteObject$();
}}, p$8);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedSortedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedMap'], 'java.util.SortedMap');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['sm','java.util.SortedMap']]]

Clazz_newMeth(C$, 'c$$java_util_SortedMap',  function (m) {
;C$.superclazz.c$$java_util_Map.apply(this,[m]);C$.$init$.apply(this);
this.sm=m;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_SortedMap$O',  function (m, mutex) {
;C$.superclazz.c$$java_util_Map$O.apply(this,[m, mutex]);C$.$init$.apply(this);
this.sm=m;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
{
return this.sm.comparator$();
}});

Clazz_newMeth(C$, 'subMap$O$O',  function (fromKey, toKey) {
{
return Clazz_new_(C$.c$$java_util_SortedMap$O,[this.sm.subMap$O$O(fromKey, toKey), this.mutex]);
}});

Clazz_newMeth(C$, 'headMap$O',  function (toKey) {
{
return Clazz_new_(C$.c$$java_util_SortedMap$O,[this.sm.headMap$O(toKey), this.mutex]);
}});

Clazz_newMeth(C$, 'tailMap$O',  function (fromKey) {
{
return Clazz_new_(C$.c$$java_util_SortedMap$O,[this.sm.tailMap$O(fromKey), this.mutex]);
}});

Clazz_newMeth(C$, 'firstKey$',  function () {
{
return this.sm.firstKey$();
}});

Clazz_newMeth(C$, 'lastKey$',  function () {
{
return this.sm.lastKey$();
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SynchronizedNavigableMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.SynchronizedSortedMap'], 'java.util.NavigableMap');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['nm','java.util.NavigableMap']]]

Clazz_newMeth(C$, 'c$$java_util_NavigableMap',  function (m) {
;C$.superclazz.c$$java_util_SortedMap.apply(this,[m]);C$.$init$.apply(this);
this.nm=m;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_NavigableMap$O',  function (m, mutex) {
;C$.superclazz.c$$java_util_SortedMap$O.apply(this,[m, mutex]);C$.$init$.apply(this);
this.nm=m;
}, 1);

Clazz_newMeth(C$, 'lowerEntry$O',  function (key) {
{
return this.nm.lowerEntry$O(key);
}});

Clazz_newMeth(C$, 'lowerKey$O',  function (key) {
{
return this.nm.lowerKey$O(key);
}});

Clazz_newMeth(C$, 'floorEntry$O',  function (key) {
{
return this.nm.floorEntry$O(key);
}});

Clazz_newMeth(C$, 'floorKey$O',  function (key) {
{
return this.nm.floorKey$O(key);
}});

Clazz_newMeth(C$, 'ceilingEntry$O',  function (key) {
{
return this.nm.ceilingEntry$O(key);
}});

Clazz_newMeth(C$, 'ceilingKey$O',  function (key) {
{
return this.nm.ceilingKey$O(key);
}});

Clazz_newMeth(C$, 'higherEntry$O',  function (key) {
{
return this.nm.higherEntry$O(key);
}});

Clazz_newMeth(C$, 'higherKey$O',  function (key) {
{
return this.nm.higherKey$O(key);
}});

Clazz_newMeth(C$, 'firstEntry$',  function () {
{
return this.nm.firstEntry$();
}});

Clazz_newMeth(C$, 'lastEntry$',  function () {
{
return this.nm.lastEntry$();
}});

Clazz_newMeth(C$, 'pollFirstEntry$',  function () {
{
return this.nm.pollFirstEntry$();
}});

Clazz_newMeth(C$, 'pollLastEntry$',  function () {
{
return this.nm.pollLastEntry$();
}});

Clazz_newMeth(C$, 'descendingMap$',  function () {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.descendingMap$(), this.mutex]);
}});

Clazz_newMeth(C$, 'keySet$',  function () {
return this.navigableKeySet$();
});

Clazz_newMeth(C$, 'navigableKeySet$',  function () {
{
return Clazz_new_([this.nm.navigableKeySet$(), this.mutex],$I$(20,1).c$$java_util_NavigableSet$O);
}});

Clazz_newMeth(C$, 'descendingKeySet$',  function () {
{
return Clazz_new_([this.nm.descendingKeySet$(), this.mutex],$I$(20,1).c$$java_util_NavigableSet$O);
}});

Clazz_newMeth(C$, 'subMap$O$O',  function (fromKey, toKey) {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.subMap$O$Z$O$Z(fromKey, true, toKey, false), this.mutex]);
}});

Clazz_newMeth(C$, 'headMap$O',  function (toKey) {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.headMap$O$Z(toKey, false), this.mutex]);
}});

Clazz_newMeth(C$, 'tailMap$O',  function (fromKey) {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.tailMap$O$Z(fromKey, true), this.mutex]);
}});

Clazz_newMeth(C$, 'subMap$O$Z$O$Z',  function (fromKey, fromInclusive, toKey, toInclusive) {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.subMap$O$Z$O$Z(fromKey, fromInclusive, toKey, toInclusive), this.mutex]);
}});

Clazz_newMeth(C$, 'headMap$O$Z',  function (toKey, inclusive) {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.headMap$O$Z(toKey, inclusive), this.mutex]);
}});

Clazz_newMeth(C$, 'tailMap$O$Z',  function (fromKey, inclusive) {
{
return Clazz_new_(C$.c$$java_util_NavigableMap$O,[this.nm.tailMap$O$Z(fromKey, inclusive), this.mutex]);
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedCollection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Collection', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['c','java.util.Collection','type','Class','zeroLengthElementArray','_.E[]']]]

Clazz_newMeth(C$, 'typeCheck$O',  function (o) {
if (o != null  && !this.type.isInstance$O(o) ) throw Clazz_new_(Clazz_load('ClassCastException').c$$S,[p$9.badElementMsg$O.apply(this, [o])]);
return o;
});

Clazz_newMeth(C$, 'badElementMsg$O',  function (o) {
return "Attempt to insert " + o.getClass$() + " element into collection with element type " + this.type ;
}, p$9);

Clazz_newMeth(C$, 'c$$java_util_Collection$Class',  function (c, type) {
;C$.$init$.apply(this);
this.c=$I$(6).requireNonNull$O$S(c, "c");
this.type=$I$(6).requireNonNull$O$S(type, "type");
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.c.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.c.isEmpty$();
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.c.contains$O(o);
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.c.toArray$();
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
return this.c.toArray$OA(a);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.c.toString();
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
return this.c.remove$O(o);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.c.clear$();
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (coll) {
return this.c.containsAll$java_util_Collection(coll);
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (coll) {
return this.c.removeAll$java_util_Collection(coll);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (coll) {
return this.c.retainAll$java_util_Collection(coll);
});

Clazz_newMeth(C$, 'iterator$',  function () {
var it=this.c.iterator$();
return ((P$.Collections$CheckedCollection$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$CheckedCollection$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.$finals$.it.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.$finals$.it.next$();
});

Clazz_newMeth(C$, 'remove$',  function () {
this.$finals$.it.remove$();
});
})()
), Clazz_new_(P$.Collections$CheckedCollection$1.$init$,[this, {it:it}]));
});

Clazz_newMeth(C$, 'add$O',  function (e) {
return this.c.add$O(this.typeCheck$O(e));
});

Clazz_newMeth(C$, 'zeroLengthElementArray',  function () {
return this.zeroLengthElementArray != null  ? this.zeroLengthElementArray : (this.zeroLengthElementArray=$I$(8).zeroLengthArray$Class(this.type));
}, p$9);

Clazz_newMeth(C$, 'checkedCopyOf$java_util_Collection',  function (coll) {
var a;
try {
var z=p$9.zeroLengthElementArray.apply(this, []);
a=coll.toArray$OA(z);
if (a.getClass$() !== z.getClass$() ) a=$I$(12,"copyOf$OA$I$Class",[a, a.length, z.getClass$()]);
} catch (ignore) {
if (Clazz_exceptionOf(ignore,"ArrayStoreException")){
a=coll.toArray$().clone$();
for (var o, $o = 0, $$o = a; $o<$$o.length&&((o=($$o[$o])),1);$o++) this.typeCheck$O(o);

} else {
throw ignore;
}
}
return $I$(12).asList$OA(a);
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (coll) {
return this.c.addAll$java_util_Collection(this.checkedCopyOf$java_util_Collection(coll));
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
this.c.forEach$java_util_function_Consumer(action);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
return this.c.removeIf$java_util_function_Predicate(filter);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return this.c.spliterator$();
});

Clazz_newMeth(C$, 'stream$',  function () {
return this.c.stream$();
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return this.c.parallelStream$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedQueue", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedCollection'], ['java.util.Queue', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['queue','java.util.Queue']]]

Clazz_newMeth(C$, 'c$$java_util_Queue$Class',  function (queue, elementType) {
;C$.superclazz.c$$java_util_Collection$Class.apply(this,[queue, elementType]);C$.$init$.apply(this);
this.queue=queue;
}, 1);

Clazz_newMeth(C$, 'element$',  function () {
return this.queue.element$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.c.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.c.hashCode$();
});

Clazz_newMeth(C$, 'peek$',  function () {
return this.queue.peek$();
});

Clazz_newMeth(C$, 'poll$',  function () {
return this.queue.poll$();
});

Clazz_newMeth(C$, 'remove$',  function () {
return this.queue.remove$();
});

Clazz_newMeth(C$, 'offer$O',  function (e) {
return this.queue.offer$O(this.typeCheck$O(e));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedCollection'], ['java.util.Set', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_Set$Class',  function (s, elementType) {
;C$.superclazz.c$$java_util_Collection$Class.apply(this,[s, elementType]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.c.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.c.hashCode$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedSortedSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedSet'], ['java.util.SortedSet', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['ss','java.util.SortedSet']]]

Clazz_newMeth(C$, 'c$$java_util_SortedSet$Class',  function (s, type) {
;C$.superclazz.c$$java_util_Set$Class.apply(this,[s, type]);C$.$init$.apply(this);
this.ss=s;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
return this.ss.comparator$();
});

Clazz_newMeth(C$, 'first$',  function () {
return this.ss.first$();
});

Clazz_newMeth(C$, 'last$',  function () {
return this.ss.last$();
});

Clazz_newMeth(C$, 'subSet$O$O',  function (fromElement, toElement) {
return $I$(8,"checkedSortedSet$java_util_SortedSet$Class",[this.ss.subSet$O$O(fromElement, toElement), this.type]);
});

Clazz_newMeth(C$, 'headSet$O',  function (toElement) {
return $I$(8,"checkedSortedSet$java_util_SortedSet$Class",[this.ss.headSet$O(toElement), this.type]);
});

Clazz_newMeth(C$, 'tailSet$O',  function (fromElement) {
return $I$(8,"checkedSortedSet$java_util_SortedSet$Class",[this.ss.tailSet$O(fromElement), this.type]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedNavigableSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedSortedSet'], ['java.util.NavigableSet', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['ns','java.util.NavigableSet']]]

Clazz_newMeth(C$, 'c$$java_util_NavigableSet$Class',  function (s, type) {
;C$.superclazz.c$$java_util_SortedSet$Class.apply(this,[s, type]);C$.$init$.apply(this);
this.ns=s;
}, 1);

Clazz_newMeth(C$, 'lower$O',  function (e) {
return this.ns.lower$O(e);
});

Clazz_newMeth(C$, 'floor$O',  function (e) {
return this.ns.floor$O(e);
});

Clazz_newMeth(C$, 'ceiling$O',  function (e) {
return this.ns.ceiling$O(e);
});

Clazz_newMeth(C$, 'higher$O',  function (e) {
return this.ns.higher$O(e);
});

Clazz_newMeth(C$, 'pollFirst$',  function () {
return this.ns.pollFirst$();
});

Clazz_newMeth(C$, 'pollLast$',  function () {
return this.ns.pollLast$();
});

Clazz_newMeth(C$, 'descendingSet$',  function () {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.descendingSet$(), this.type]);
});

Clazz_newMeth(C$, 'descendingIterator$',  function () {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.descendingSet$(), this.type]).iterator$();
});

Clazz_newMeth(C$, 'subSet$O$O',  function (fromElement, toElement) {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.subSet$O$Z$O$Z(fromElement, true, toElement, false), this.type]);
});

Clazz_newMeth(C$, 'headSet$O',  function (toElement) {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.headSet$O$Z(toElement, false), this.type]);
});

Clazz_newMeth(C$, 'tailSet$O',  function (fromElement) {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.tailSet$O$Z(fromElement, true), this.type]);
});

Clazz_newMeth(C$, 'subSet$O$Z$O$Z',  function (fromElement, fromInclusive, toElement, toInclusive) {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.subSet$O$Z$O$Z(fromElement, fromInclusive, toElement, toInclusive), this.type]);
});

Clazz_newMeth(C$, 'headSet$O$Z',  function (toElement, inclusive) {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.headSet$O$Z(toElement, inclusive), this.type]);
});

Clazz_newMeth(C$, 'tailSet$O$Z',  function (fromElement, inclusive) {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.ns.tailSet$O$Z(fromElement, inclusive), this.type]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedCollection'], 'java.util.List');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['list','java.util.List']]]

Clazz_newMeth(C$, 'c$$java_util_List$Class',  function (list, type) {
;C$.superclazz.c$$java_util_Collection$Class.apply(this,[list, type]);C$.$init$.apply(this);
this.list=list;
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.list.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.list.hashCode$();
});

Clazz_newMeth(C$, 'get$I',  function (index) {
return this.list.get$I(index);
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
return this.list.remove$I(index);
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
return this.list.indexOf$O(o);
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
return this.list.lastIndexOf$O(o);
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
return this.list.set$I$O(index, this.typeCheck$O(element));
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
this.list.add$I$O(index, this.typeCheck$O(element));
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
return this.list.addAll$I$java_util_Collection(index, this.checkedCopyOf$java_util_Collection(c));
});

Clazz_newMeth(C$, 'listIterator$',  function () {
return this.listIterator$I(0);
});

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
var i=this.list.listIterator$I(index);
return ((P$.Collections$CheckedList$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$CheckedList$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.ListIterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.$finals$.i.hasNext$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.$finals$.i.next$();
});

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.$finals$.i.hasPrevious$();
});

Clazz_newMeth(C$, 'previous$',  function () {
return this.$finals$.i.previous$();
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.$finals$.i.nextIndex$();
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.$finals$.i.previousIndex$();
});

Clazz_newMeth(C$, 'remove$',  function () {
this.$finals$.i.remove$();
});

Clazz_newMeth(C$, 'set$O',  function (e) {
this.$finals$.i.set$O(this.b$['java.util.Collections.CheckedCollection'].typeCheck$O.apply(this.b$['java.util.Collections.CheckedCollection'], [e]));
});

Clazz_newMeth(C$, 'add$O',  function (e) {
this.$finals$.i.add$O(this.b$['java.util.Collections.CheckedCollection'].typeCheck$O.apply(this.b$['java.util.Collections.CheckedCollection'], [e]));
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
this.$finals$.i.forEachRemaining$java_util_function_Consumer(action);
});
})()
), Clazz_new_(P$.Collections$CheckedList$1.$init$,[this, {i:i}]));
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
return Clazz_new_(C$.c$$java_util_List$Class,[this.list.subList$I$I(fromIndex, toIndex), this.type]);
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
$I$(6).requireNonNull$O(operator);
this.list.replaceAll$java_util_function_UnaryOperator(((P$.Collections$CheckedList$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$CheckedList$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.UnaryOperator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'apply$O',  function (e) { return (this.b$['java.util.Collections.CheckedCollection'].typeCheck$O.apply(this.b$['java.util.Collections.CheckedCollection'], [this.$finals$.operator.apply$O.apply(this.$finals$.operator, [e])]));});
})()
), Clazz_new_(P$.Collections$CheckedList$lambda1.$init$,[this, {operator:operator}])));
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
this.list.sort$java_util_Comparator(c);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedRandomAccessList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedList'], 'java.util.RandomAccess');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_List$Class',  function (list, type) {
;C$.superclazz.c$$java_util_List$Class.apply(this,[list, type]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
return Clazz_new_(C$.c$$java_util_List$Class,[this.list.subList$I$I(fromIndex, toIndex), this.type]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Map', 'java.io.Serializable']);
C$.$classes$=[['CheckedEntrySet',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['m','java.util.Map','keyType','Class','+valueType','entrySet','java.util.Set']]]

Clazz_newMeth(C$, 'typeCheck$O$O',  function (key, value) {
if (key != null  && !this.keyType.isInstance$O(key) ) throw Clazz_new_(Clazz_load('ClassCastException').c$$S,[p$12.badKeyMsg$O.apply(this, [key])]);
if (value != null  && !this.valueType.isInstance$O(value) ) throw Clazz_new_(Clazz_load('ClassCastException').c$$S,[p$12.badValueMsg$O.apply(this, [value])]);
}, p$12);

Clazz_newMeth(C$, 'typeCheck$java_util_function_BiFunction',  function (func) {
$I$(6).requireNonNull$O(func);
return ((P$.Collections$CheckedMap$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$CheckedMap$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.BiFunction', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'apply$O$O',  function (k, v) {
var newValue=this.$finals$.func.apply$O$O(k, v);
p$12.typeCheck$O$O.apply(this.b$['java.util.Collections.CheckedMap'], [k, newValue]);
return newValue;
});
})()
), Clazz_new_(P$.Collections$CheckedMap$lambda1.$init$,[this, {func:func}]));
}, p$12);

Clazz_newMeth(C$, 'badKeyMsg$O',  function (key) {
return "Attempt to insert " + key.getClass$() + " key into map with key type " + this.keyType ;
}, p$12);

Clazz_newMeth(C$, 'badValueMsg$O',  function (value) {
return "Attempt to insert " + value.getClass$() + " value into map with value type " + this.valueType ;
}, p$12);

Clazz_newMeth(C$, 'c$$java_util_Map$Class$Class',  function (m, keyType, valueType) {
;C$.$init$.apply(this);
this.m=$I$(6).requireNonNull$O(m);
this.keyType=$I$(6).requireNonNull$O(keyType);
this.valueType=$I$(6).requireNonNull$O(valueType);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.m.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.m.isEmpty$();
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
return this.m.containsKey$O(key);
});

Clazz_newMeth(C$, 'containsValue$O',  function (v) {
return this.m.containsValue$O(v);
});

Clazz_newMeth(C$, 'get$O',  function (key) {
return this.m.get$O(key);
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
return this.m.remove$O(key);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.m.clear$();
});

Clazz_newMeth(C$, 'keySet$',  function () {
return this.m.keySet$();
});

Clazz_newMeth(C$, 'values$',  function () {
return this.m.values$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.m.equals$O(o) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.m.hashCode$();
});

Clazz_newMeth(C$, 'toString',  function () {
return this.m.toString();
});

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
p$12.typeCheck$O$O.apply(this, [key, value]);
return this.m.put$O$O(key, value);
});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (t) {
var entries=t.entrySet$().toArray$();
var checked=Clazz_new_($I$(24,1).c$$I,[entries.length]);
for (var o, $o = 0, $$o = entries; $o<$$o.length&&((o=($$o[$o])),1);$o++) {
var e=o;
var k=e.getKey$();
var v=e.getValue$();
p$12.typeCheck$O$O.apply(this, [k, v]);
checked.add$O(Clazz_new_($I$(21,1).c$$O$O,[k, v]));
}
for (var e, $e = checked.iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) this.m.put$O$O(e.getKey$(), e.getValue$());

});

Clazz_newMeth(C$, 'entrySet$',  function () {
if (this.entrySet == null ) this.entrySet=Clazz_new_([this.m.entrySet$(), this.valueType],$I$(22,1).c$$java_util_Set$Class);
return this.entrySet;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
this.m.forEach$java_util_function_BiConsumer(action);
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
this.m.replaceAll$java_util_function_BiFunction(p$12.typeCheck$java_util_function_BiFunction.apply(this, [$function]));
});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
p$12.typeCheck$O$O.apply(this, [key, value]);
return this.m.putIfAbsent$O$O(key, value);
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
return this.m.remove$O$O(key, value);
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
p$12.typeCheck$O$O.apply(this, [key, newValue]);
return this.m.replace$O$O$O(key, oldValue, newValue);
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
p$12.typeCheck$O$O.apply(this, [key, value]);
return this.m.replace$O$O(key, value);
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
$I$(6).requireNonNull$O(mappingFunction);
return this.m.computeIfAbsent$O$java_util_function_Function(key, ((P$.Collections$CheckedMap$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$CheckedMap$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Function', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'apply$O',  function (k) {
var value=this.$finals$.mappingFunction.apply$O(k);
p$12.typeCheck$O$O.apply(this.b$['java.util.Collections.CheckedMap'], [k, value]);
return value;
});
})()
), Clazz_new_(P$.Collections$CheckedMap$lambda2.$init$,[this, {mappingFunction:mappingFunction}])));
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
return this.m.computeIfPresent$O$java_util_function_BiFunction(key, p$12.typeCheck$java_util_function_BiFunction.apply(this, [remappingFunction]));
});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
return this.m.compute$O$java_util_function_BiFunction(key, p$12.typeCheck$java_util_function_BiFunction.apply(this, [remappingFunction]));
});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
$I$(6).requireNonNull$O(remappingFunction);
return this.m.merge$O$O$java_util_function_BiFunction(key, value, ((P$.Collections$CheckedMap$lambda3||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$CheckedMap$lambda3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.BiFunction', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'apply$O$O',  function (v1, v2) {
var newValue=this.$finals$.remappingFunction.apply$O$O(v1, v2);
p$12.typeCheck$O$O.apply(this.b$['java.util.Collections.CheckedMap'], [null, newValue]);
return newValue;
});
})()
), Clazz_new_(P$.Collections$CheckedMap$lambda3.$init$,[this, {remappingFunction:remappingFunction}])));
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.CheckedMap, "CheckedEntrySet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Set');
C$.$classes$=[['CheckedEntry',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['s','java.util.Set','valueType','Class']]]

Clazz_newMeth(C$, 'c$$java_util_Set$Class',  function (s, valueType) {
;C$.$init$.apply(this);
this.s=s;
this.valueType=valueType;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.s.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.s.isEmpty$();
});

Clazz_newMeth(C$, 'toString',  function () {
return this.s.toString();
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.s.hashCode$();
});

Clazz_newMeth(C$, 'clear$',  function () {
this.s.clear$();
});

Clazz_newMeth(C$, ['add$java_util_Map_Entry','add$O'],  function (e) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (coll) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'iterator$',  function () {
var i=this.s.iterator$();
var valueType=this.valueType;
return ((P$.Collections$CheckedMap$CheckedEntrySet$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Collections$CheckedMap$CheckedEntrySet$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Iterator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.$finals$.i.hasNext$();
});

Clazz_newMeth(C$, 'remove$',  function () {
this.$finals$.i.remove$();
});

Clazz_newMeth(C$, 'next$',  function () {
return $I$(22,"checkedEntry$java_util_Map_Entry$Class",[this.$finals$.i.next$(), this.$finals$.valueType]);
});
})()
), Clazz_new_(P$.Collections$CheckedMap$CheckedEntrySet$1.$init$,[this, {i:i,valueType:valueType}]));
});

Clazz_newMeth(C$, 'toArray$',  function () {
var source=this.s.toArray$();
var dest=(Clazz_getClass($I$(23)).isInstance$O(source.getClass$().getComponentType$()) ? source : Clazz_array(java.lang.Object, [source.length]));
for (var i=0; i < source.length; i++) dest[i]=C$.checkedEntry$java_util_Map_Entry$Class(source[i], this.valueType);

return dest;
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var arr=this.s.toArray$OA(a.length == 0 ? a : $I$(12).copyOf$OA$I(a, 0));
for (var i=0; i < arr.length; i++) arr[i]=C$.checkedEntry$java_util_Map_Entry$Class(arr[i], this.valueType);

if (arr.length > a.length) return arr;
System.arraycopy$O$I$O$I$I(arr, 0, a, 0, arr.length);
if (a.length > arr.length) a[arr.length]=null;
return a;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
return this.s.contains$O((Clazz_instanceOf(e, "java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry")) ? e : C$.checkedEntry$java_util_Map_Entry$Class(e, this.valueType));
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
for (var o, $o = c.iterator$(); $o.hasNext$()&&((o=($o.next$())),1);) if (!this.contains$O(o)) return false;

return true;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
return this.s.remove$O(Clazz_new_($I$(21,1).c$$java_util_Map_Entry,[o]));
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
return p$11.batchRemove$java_util_Collection$Z.apply(this, [c, false]);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (c) {
return p$11.batchRemove$java_util_Collection$Z.apply(this, [c, true]);
});

Clazz_newMeth(C$, 'batchRemove$java_util_Collection$Z',  function (c, complement) {
$I$(6).requireNonNull$O(c);
var modified=false;
var it=this.iterator$();
while (it.hasNext$()){
if (c.contains$O(it.next$()) != complement ) {
it.remove$();
modified=true;
}}
return modified;
}, p$11);

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Set"))) return false;
var that=o;
return that.size$() == this.s.size$() && this.containsAll$java_util_Collection(that) ;
});

Clazz_newMeth(C$, 'checkedEntry$java_util_Map_Entry$Class',  function (e, valueType) {
return Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[e, valueType]);
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections.CheckedMap.CheckedEntrySet, "CheckedEntry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['e','java.util.Map.Entry','valueType','Class']]]

Clazz_newMeth(C$, 'c$$java_util_Map_Entry$Class',  function (e, valueType) {
;C$.$init$.apply(this);
this.e=$I$(6).requireNonNull$O(e);
this.valueType=$I$(6).requireNonNull$O(valueType);
}, 1);

Clazz_newMeth(C$, 'getKey$',  function () {
return this.e.getKey$();
});

Clazz_newMeth(C$, 'getValue$',  function () {
return this.e.getValue$();
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.e.hashCode$();
});

Clazz_newMeth(C$, 'toString',  function () {
return this.e.toString();
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
if (value != null  && !this.valueType.isInstance$O(value) ) throw Clazz_new_(Clazz_load('ClassCastException').c$$S,[p$10.badValueMsg$O.apply(this, [value])]);
return this.e.setValue$O(value);
});

Clazz_newMeth(C$, 'badValueMsg$O',  function (value) {
return "Attempt to insert " + value.getClass$() + " value into map with value type " + this.valueType ;
}, p$10);

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
return this.e.equals$O(Clazz_new_($I$(21,1).c$$java_util_Map_Entry,[o]));
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedSortedMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedMap'], ['java.util.SortedMap', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['sm','java.util.SortedMap']]]

Clazz_newMeth(C$, 'c$$java_util_SortedMap$Class$Class',  function (m, keyType, valueType) {
;C$.superclazz.c$$java_util_Map$Class$Class.apply(this,[m, keyType, valueType]);C$.$init$.apply(this);
this.sm=m;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
return this.sm.comparator$();
});

Clazz_newMeth(C$, 'firstKey$',  function () {
return this.sm.firstKey$();
});

Clazz_newMeth(C$, 'lastKey$',  function () {
return this.sm.lastKey$();
});

Clazz_newMeth(C$, 'subMap$O$O',  function (fromKey, toKey) {
return $I$(8,"checkedSortedMap$java_util_SortedMap$Class$Class",[this.sm.subMap$O$O(fromKey, toKey), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'headMap$O',  function (toKey) {
return $I$(8,"checkedSortedMap$java_util_SortedMap$Class$Class",[this.sm.headMap$O(toKey), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'tailMap$O',  function (fromKey) {
return $I$(8,"checkedSortedMap$java_util_SortedMap$Class$Class",[this.sm.tailMap$O(fromKey), this.keyType, this.valueType]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CheckedNavigableMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.CheckedSortedMap'], ['java.util.NavigableMap', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['nm','java.util.NavigableMap']]]

Clazz_newMeth(C$, 'c$$java_util_NavigableMap$Class$Class',  function (m, keyType, valueType) {
;C$.superclazz.c$$java_util_SortedMap$Class$Class.apply(this,[m, keyType, valueType]);C$.$init$.apply(this);
this.nm=m;
}, 1);

Clazz_newMeth(C$, 'comparator$',  function () {
return this.nm.comparator$();
});

Clazz_newMeth(C$, 'firstKey$',  function () {
return this.nm.firstKey$();
});

Clazz_newMeth(C$, 'lastKey$',  function () {
return this.nm.lastKey$();
});

Clazz_newMeth(C$, 'lowerEntry$O',  function (key) {
var lower=this.nm.lowerEntry$O(key);
return (null != lower ) ? Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[lower, this.valueType]) : null;
});

Clazz_newMeth(C$, 'lowerKey$O',  function (key) {
return this.nm.lowerKey$O(key);
});

Clazz_newMeth(C$, 'floorEntry$O',  function (key) {
var floor=this.nm.floorEntry$O(key);
return (null != floor ) ? Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[floor, this.valueType]) : null;
});

Clazz_newMeth(C$, 'floorKey$O',  function (key) {
return this.nm.floorKey$O(key);
});

Clazz_newMeth(C$, 'ceilingEntry$O',  function (key) {
var ceiling=this.nm.ceilingEntry$O(key);
return (null != ceiling ) ? Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[ceiling, this.valueType]) : null;
});

Clazz_newMeth(C$, 'ceilingKey$O',  function (key) {
return this.nm.ceilingKey$O(key);
});

Clazz_newMeth(C$, 'higherEntry$O',  function (key) {
var higher=this.nm.higherEntry$O(key);
return (null != higher ) ? Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[higher, this.valueType]) : null;
});

Clazz_newMeth(C$, 'higherKey$O',  function (key) {
return this.nm.higherKey$O(key);
});

Clazz_newMeth(C$, 'firstEntry$',  function () {
var first=this.nm.firstEntry$();
return (null != first ) ? Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[first, this.valueType]) : null;
});

Clazz_newMeth(C$, 'lastEntry$',  function () {
var last=this.nm.lastEntry$();
return (null != last ) ? Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[last, this.valueType]) : null;
});

Clazz_newMeth(C$, 'pollFirstEntry$',  function () {
var entry=this.nm.pollFirstEntry$();
return (null == entry ) ? null : Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[entry, this.valueType]);
});

Clazz_newMeth(C$, 'pollLastEntry$',  function () {
var entry=this.nm.pollLastEntry$();
return (null == entry ) ? null : Clazz_new_($I$(23,1).c$$java_util_Map_Entry$Class,[entry, this.valueType]);
});

Clazz_newMeth(C$, 'descendingMap$',  function () {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.descendingMap$(), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'keySet$',  function () {
return this.navigableKeySet$();
});

Clazz_newMeth(C$, 'navigableKeySet$',  function () {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.nm.navigableKeySet$(), this.keyType]);
});

Clazz_newMeth(C$, 'descendingKeySet$',  function () {
return $I$(8,"checkedNavigableSet$java_util_NavigableSet$Class",[this.nm.descendingKeySet$(), this.keyType]);
});

Clazz_newMeth(C$, 'subMap$O$O',  function (fromKey, toKey) {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.subMap$O$Z$O$Z(fromKey, true, toKey, false), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'headMap$O',  function (toKey) {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.headMap$O$Z(toKey, false), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'tailMap$O',  function (fromKey) {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.tailMap$O$Z(fromKey, true), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'subMap$O$Z$O$Z',  function (fromKey, fromInclusive, toKey, toInclusive) {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.subMap$O$Z$O$Z(fromKey, fromInclusive, toKey, toInclusive), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'headMap$O$Z',  function (toKey, inclusive) {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.headMap$O$Z(toKey, inclusive), this.keyType, this.valueType]);
});

Clazz_newMeth(C$, 'tailMap$O$Z',  function (fromKey, inclusive) {
return $I$(8,"checkedNavigableMap$java_util_NavigableMap$Class$Class",[this.nm.tailMap$O$Z(fromKey, inclusive), this.keyType, this.valueType]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "EmptyIterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['EMPTY_ITERATOR','java.util.Collections.EmptyIterator']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return false;
});

Clazz_newMeth(C$, 'next$',  function () {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'remove$',  function () {
throw Clazz_new_(Clazz_load('IllegalStateException'));
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_ITERATOR=Clazz_new_(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "EmptyListIterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.Collections','.EmptyIterator'], 'java.util.ListIterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['$EMPTY_ITERATOR','java.util.Collections.EmptyListIterator']]]

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return false;
});

Clazz_newMeth(C$, 'previous$',  function () {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return 0;
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return -1;
});

Clazz_newMeth(C$, 'set$O',  function (e) {
throw Clazz_new_(Clazz_load('IllegalStateException'));
});

Clazz_newMeth(C$, 'add$O',  function (e) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

C$.$static$=function(){C$.$static$=0;
C$.$EMPTY_ITERATOR=Clazz_new_(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "EmptyEnumeration", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Enumeration');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['EMPTY_ENUMERATION','java.util.Collections.EmptyEnumeration']]]

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return false;
});

Clazz_newMeth(C$, 'nextElement$',  function () {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY_ENUMERATION=Clazz_new_(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "EmptySet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractSet', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return $I$(8).emptyIterator$();
});

Clazz_newMeth(C$, 'size$',  function () {
return 0;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return true;
});

Clazz_newMeth(C$, 'contains$O',  function (obj) {
return false;
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
return c.isEmpty$();
});

Clazz_newMeth(C$, 'toArray$',  function () {
return Clazz_array(java.lang.Object, [0]);
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
if (a.length > 0) a[0]=null;
return a;
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
$I$(6).requireNonNull$O(filter);
return false;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(25).emptySpliterator$();
});

Clazz_newMeth(C$, 'readResolve',  function () {
return $I$(8).EMPTY_SET;
}, p$13);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "EmptyList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', ['java.util.RandomAccess', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return $I$(8).emptyIterator$();
});

Clazz_newMeth(C$, 'listIterator$',  function () {
return $I$(8).emptyListIterator$();
});

Clazz_newMeth(C$, 'size$',  function () {
return 0;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return true;
});

Clazz_newMeth(C$, 'contains$O',  function (obj) {
return false;
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
return c.isEmpty$();
});

Clazz_newMeth(C$, 'toArray$',  function () {
return Clazz_array(java.lang.Object, [0]);
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
if (a.length > 0) a[0]=null;
return a;
});

Clazz_newMeth(C$, 'get$I',  function (index) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return (Clazz_instanceOf(o, "java.util.List")) && (o).isEmpty$() ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return 1;
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
$I$(6).requireNonNull$O(filter);
return false;
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
$I$(6).requireNonNull$O(operator);
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(6).requireNonNull$O(action);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(25).emptySpliterator$();
});

Clazz_newMeth(C$, 'readResolve',  function () {
return $I$(8).EMPTY_LIST;
}, p$14);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "EmptyMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractMap', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return 0;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return true;
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
return false;
});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
return false;
});

Clazz_newMeth(C$, 'get$O',  function (key) {
return null;
});

Clazz_newMeth(C$, 'keySet$',  function () {
return $I$(8).emptySet$();
});

Clazz_newMeth(C$, 'values$',  function () {
return $I$(8).emptySet$();
});

Clazz_newMeth(C$, 'entrySet$',  function () {
return $I$(8).emptySet$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return (Clazz_instanceOf(o, "java.util.Map")) && (o).isEmpty$() ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (k, defaultValue) {
return defaultValue;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
$I$(6).requireNonNull$O(action);
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
$I$(6).requireNonNull$O($function);
});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'readResolve',  function () {
return $I$(8).EMPTY_MAP;
}, p$15);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SingletonSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractSet', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['element','<E>']]]

Clazz_newMeth(C$, 'c$$O',  function (e) {
Clazz_super_(C$, this);
this.element=e;
}, 1);

Clazz_newMeth(C$, 'iterator$',  function () {
return $I$(8).singletonIterator$O(this.element);
});

Clazz_newMeth(C$, 'size$',  function () {
return 1;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return $I$(8).eq$O$O(o, this.element);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
action.accept$O(this.element);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(8).singletonSpliterator$O(this.element);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SingletonList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', ['java.util.RandomAccess', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['element','<E>']]]

Clazz_newMeth(C$, 'c$$O',  function (obj) {
Clazz_super_(C$, this);
this.element=obj;
}, 1);

Clazz_newMeth(C$, 'iterator$',  function () {
return $I$(8).singletonIterator$O(this.element);
});

Clazz_newMeth(C$, 'size$',  function () {
return 1;
});

Clazz_newMeth(C$, 'contains$O',  function (obj) {
return $I$(8).eq$O$O(obj, this.element);
});

Clazz_newMeth(C$, 'get$I',  function (index) {
if (index != 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index + ", Size: 1" ]);
return this.element;
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
action.accept$O(this.element);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(8).singletonSpliterator$O(this.element);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SingletonMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractMap', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['k','<K>','v','<V>','$keySet','java.util.Set','+entrySet','$values','java.util.Collection']]]

Clazz_newMeth(C$, 'c$$O$O',  function (key, value) {
Clazz_super_(C$, this);
this.k=key;
this.v=value;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return 1;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return false;
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
return $I$(8).eq$O$O(key, this.k);
});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
return $I$(8).eq$O$O(value, this.v);
});

Clazz_newMeth(C$, 'get$O',  function (key) {
return ($I$(8).eq$O$O(key, this.k) ? this.v : null);
});

Clazz_newMeth(C$, 'keySet$',  function () {
if (this.$keySet == null ) this.$keySet=$I$(8).singleton$O(this.k);
return this.$keySet;
});

Clazz_newMeth(C$, 'entrySet$',  function () {
if (this.entrySet == null ) this.entrySet=$I$(8,"singleton$O",[Clazz_new_($I$(21,1).c$$O$O,[this.k, this.v])]);
return this.entrySet;
});

Clazz_newMeth(C$, 'values$',  function () {
if (this.$values == null ) this.$values=$I$(8).singleton$O(this.v);
return this.$values;
});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (key, defaultValue) {
return $I$(8).eq$O$O(key, this.k) ? this.v : defaultValue;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
action.accept$O$O(this.k, this.v);
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "CopiesList", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractList', ['java.util.RandomAccess', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['n'],'O',['element','<E>']]]

Clazz_newMeth(C$, 'c$$I$O',  function (n, e) {
Clazz_super_(C$, this);
Clazz_assert(C$, this, function(){return n >= 0});
this.n=n;
this.element=e;
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.n;
});

Clazz_newMeth(C$, 'contains$O',  function (obj) {
return this.n != 0 && $I$(8).eq$O$O(obj, this.element) ;
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
return this.contains$O(o) ? 0 : -1;
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
return this.contains$O(o) ? this.n - 1 : -1;
});

Clazz_newMeth(C$, 'get$I',  function (index) {
if (index < 0 || index >= this.n ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index + ", Size: " + this.n ]);
return this.element;
});

Clazz_newMeth(C$, 'toArray$',  function () {
var a=Clazz_array(java.lang.Object, [this.n]);
if (this.element != null ) $I$(12).fill$OA$I$I$O(a, 0, this.n, this.element);
return a;
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var n=this.n;
if (a.length < n) {
a=Clazz_array(a.getClass$().getComponentType$(), n);
if (this.element != null ) $I$(12).fill$OA$I$I$O(a, 0, n, this.element);
} else {
$I$(12).fill$OA$I$I$O(a, 0, n, this.element);
if (a.length > n) a[n]=null;
}return a;
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
if (fromIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex = " + fromIndex]);
if (toIndex > this.n) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["toIndex = " + toIndex]);
if (fromIndex > toIndex) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["fromIndex(" + fromIndex + ") > toIndex(" + toIndex + ")" ]);
return Clazz_new_(C$.c$$I$O,[toIndex - fromIndex, this.element]);
});

Clazz_newMeth(C$, 'stream$',  function () {
return $I$(27).range$I$I(0, this.n).mapToObj$java_util_function_IntFunction(((P$.Collections$CopiesList$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$CopiesList$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.IntFunction', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['apply$I','apply$O'],  function (i) { return (this.b$['java.util.Collections.CopiesList'].element);});
})()
), Clazz_new_(P$.Collections$CopiesList$lambda1.$init$,[this, null])));
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return $I$(27).range$I$I(0, this.n).parallel$().mapToObj$java_util_function_IntFunction(((P$.Collections$CopiesList$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "Collections$CopiesList$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.IntFunction', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['apply$I','apply$O'],  function (i) { return (this.b$['java.util.Collections.CopiesList'].element);});
})()
), Clazz_new_(P$.Collections$CopiesList$lambda2.$init$,[this, null])));
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return this.stream$().spliterator$();
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "ReverseComparator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Comparator', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['REVERSE_ORDER','java.util.Collections.ReverseComparator']]]

Clazz_newMeth(C$, ['compare$Comparable$Comparable','compare$O$O'],  function (c1, c2) {
return c2.compareTo$O(c1);
});

Clazz_newMeth(C$, 'readResolve',  function () {
return $I$(8).reverseOrder$();
}, p$16);

Clazz_newMeth(C$, 'reversed$',  function () {
return $I$(28).naturalOrder$();
});

C$.$static$=function(){C$.$static$=0;
C$.REVERSE_ORDER=Clazz_new_(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "ReverseComparator2", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.util.Comparator', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['cmp','java.util.Comparator']]]

Clazz_newMeth(C$, 'c$$java_util_Comparator',  function (cmp) {
;C$.$init$.apply(this);
Clazz_assert(C$, this, function(){return cmp != null });
this.cmp=cmp;
}, 1);

Clazz_newMeth(C$, 'compare$O$O',  function (t1, t2) {
return this.cmp.compare$O$O(t2, t1);
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return (o === this ) || (Clazz_instanceOf(o, "java.util.Collections.ReverseComparator2") && this.cmp.equals$O((o).cmp) ) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.cmp.hashCode$() ^ -2147483648;
});

Clazz_newMeth(C$, 'reversed$',  function () {
return this.cmp;
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "SetFromMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractSet', ['java.util.Set', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['m','java.util.Map','s','java.util.Set']]]

Clazz_newMeth(C$, 'c$$java_util_Map',  function (map) {
Clazz_super_(C$, this);
if (!map.isEmpty$()) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Map is non-empty"]);
this.m=map;
this.s=map.keySet$();
}, 1);

Clazz_newMeth(C$, 'clear$',  function () {
this.m.clear$();
});

Clazz_newMeth(C$, 'size$',  function () {
return this.m.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.m.isEmpty$();
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.m.containsKey$O(o);
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
return this.m.remove$O(o) != null ;
});

Clazz_newMeth(C$, 'add$O',  function (e) {
return this.m.put$O$O(e, Boolean.TRUE) == null ;
});

Clazz_newMeth(C$, 'iterator$',  function () {
return this.s.iterator$();
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.s.toArray$();
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
return this.s.toArray$OA(a);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.s.toString();
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.s.hashCode$();
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return o === this  || this.s.equals$O(o) ;
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
return this.s.containsAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
return this.s.removeAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (c) {
return this.s.retainAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
this.s.forEach$java_util_function_Consumer(action);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
return this.s.removeIf$java_util_function_Predicate(filter);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return this.s.spliterator$();
});

Clazz_newMeth(C$, 'stream$',  function () {
return this.s.stream$();
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return this.s.parallelStream$();
});

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (stream) {
stream.defaultReadObject$();
this.s=this.m.keySet$();
}, p$17);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Collections, "AsLIFOQueue", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.util.AbstractQueue', ['java.util.Queue', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['q','java.util.Deque']]]

Clazz_newMeth(C$, 'c$$java_util_Deque',  function (q) {
Clazz_super_(C$, this);
this.q=q;
}, 1);

Clazz_newMeth(C$, 'add$O',  function (e) {
this.q.addFirst$O(e);
return true;
});

Clazz_newMeth(C$, 'offer$O',  function (e) {
return this.q.offerFirst$O(e);
});

Clazz_newMeth(C$, 'poll$',  function () {
return this.q.pollFirst$();
});

Clazz_newMeth(C$, 'remove$',  function () {
return this.q.removeFirst$();
});

Clazz_newMeth(C$, 'peek$',  function () {
return this.q.peekFirst$();
});

Clazz_newMeth(C$, 'element$',  function () {
return this.q.getFirst$();
});

Clazz_newMeth(C$, 'clear$',  function () {
this.q.clear$();
});

Clazz_newMeth(C$, 'size$',  function () {
return this.q.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.q.isEmpty$();
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.q.contains$O(o);
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
return this.q.remove$O(o);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return this.q.iterator$();
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.q.toArray$();
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
return this.q.toArray$OA(a);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.q.toString();
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
return this.q.containsAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
return this.q.removeAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (c) {
return this.q.retainAll$java_util_Collection(c);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
this.q.forEach$java_util_function_Consumer(action);
});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
return this.q.removeIf$java_util_function_Predicate(filter);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return this.q.spliterator$();
});

Clazz_newMeth(C$, 'stream$',  function () {
return this.q.stream$();
});

Clazz_newMeth(C$, 'parallelStream$',  function () {
return this.q.parallelStream$();
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Collections','java.util.Objects',['java.util.Comparators','.NaturalOrderComparator'],['java.util.Comparators','.NullComparator']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Comparator");

Clazz_newMeth(C$, 'reverseOrder$',  function () {
return $I$(1).reverseOrder$();
}, 1);

Clazz_newMeth(C$, 'naturalOrder$',  function () {
return $I$(3).INSTANCE;
}, 1);

Clazz_newMeth(C$, 'nullsFirst$java_util_Comparator',  function (comparator) {
return Clazz_new_($I$(4,1).c$$Z$java_util_Comparator,[true, comparator]);
}, 1);

Clazz_newMeth(C$, 'nullsLast$java_util_Comparator',  function (comparator) {
return Clazz_new_($I$(4,1).c$$Z$java_util_Comparator,[false, comparator]);
}, 1);

Clazz_newMeth(C$, 'comparing$java_util_function_Function$java_util_Comparator',  function (keyExtractor, keyComparator) {
$I$(2).requireNonNull$O(keyExtractor);
$I$(2).requireNonNull$O(keyComparator);
return ((P$.Comparator$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "Comparator$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'compare$O$O',  function (c1, c2) { return (this.$finals$.keyComparator.compare$O$O.apply(this.$finals$.keyComparator, [this.$finals$.keyExtractor.apply$O.apply(this.$finals$.keyExtractor, [c1]), this.$finals$.keyExtractor.apply$O.apply(this.$finals$.keyExtractor, [c2])]));});
})()
), Clazz_new_(P$.Comparator$lambda2.$init$,[this, {keyComparator:keyComparator,keyExtractor:keyExtractor}]));
}, 1);

Clazz_newMeth(C$, 'comparing$java_util_function_Function',  function (keyExtractor) {
$I$(2).requireNonNull$O(keyExtractor);
return ((P$.Comparator$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Comparator$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Comparator', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'compare$O$O',  function (c1, c2) {
return this.$finals$.keyExtractor.apply$O(c1).compareTo$O(this.$finals$.keyExtractor.apply$O(c2));
});
})()
), Clazz_new_(P$.Comparator$1.$init$,[this, {keyExtractor:keyExtractor}]));
}, 1);

Clazz_newMeth(C$, 'comparingInt$java_util_function_ToIntFunction',  function (keyExtractor) {
$I$(2).requireNonNull$O(keyExtractor);
return ((P$.Comparator$lambda3||
(function(){/*m*/var C$=Clazz_newClass(P$, "Comparator$lambda3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'compare$O$O',  function (c1, c2) { return (Integer.compare$I$I(this.$finals$.keyExtractor.applyAsInt$O.apply(this.$finals$.keyExtractor, [c1]), this.$finals$.keyExtractor.applyAsInt$O.apply(this.$finals$.keyExtractor, [c2])));});
})()
), Clazz_new_(P$.Comparator$lambda3.$init$,[this, {keyExtractor:keyExtractor}]));
}, 1);

Clazz_newMeth(C$, 'comparingLong$java_util_function_ToLongFunction',  function (keyExtractor) {
$I$(2).requireNonNull$O(keyExtractor);
return ((P$.Comparator$lambda4||
(function(){/*m*/var C$=Clazz_newClass(P$, "Comparator$lambda4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'compare$O$O',  function (c1, c2) { return (Long.compare$J$J(this.$finals$.keyExtractor.applyAsLong$O.apply(this.$finals$.keyExtractor, [c1]), this.$finals$.keyExtractor.applyAsLong$O.apply(this.$finals$.keyExtractor, [c2])));});
})()
), Clazz_new_(P$.Comparator$lambda4.$init$,[this, {keyExtractor:keyExtractor}]));
}, 1);

Clazz_newMeth(C$, 'comparingDouble$java_util_function_ToDoubleFunction',  function (keyExtractor) {
$I$(2).requireNonNull$O(keyExtractor);
return ((P$.Comparator$lambda5||
(function(){/*m*/var C$=Clazz_newClass(P$, "Comparator$lambda5", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'compare$O$O',  function (c1, c2) { return (Double.compare$D$D(this.$finals$.keyExtractor.applyAsDouble$O.apply(this.$finals$.keyExtractor, [c1]), this.$finals$.keyExtractor.applyAsDouble$O.apply(this.$finals$.keyExtractor, [c2])));});
})()
), Clazz_new_(P$.Comparator$lambda5.$init$,[this, {keyExtractor:keyExtractor}]));
}, 1);
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'reversed$',  function () {
return $I$(1).reverseOrder$java_util_Comparator(this);
});

Clazz_newMeth(C$, 'thenComparing$java_util_Comparator',  function (other_) {
$I$(2).requireNonNull$O(other_);
return ((P$.Comparator$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Comparator$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'compare$O$O',  function (c1, c2) {
var res=this.b$['java.util.Comparator'].compare$O$O.apply(this.b$['java.util.Comparator'], [c1, c2]);
return (res != 0) ? res : this.$finals$.other_.compare$O$O.apply(this.$finals$.other_, [c1, c2]);
});
})()
), Clazz_new_(P$.Comparator$lambda1.$init$,[this, {other_:other_}]));
});

Clazz_newMeth(C$, 'thenComparing$java_util_function_Function$java_util_Comparator',  function (keyExtractor, keyComparator) {
return this.thenComparing$java_util_Comparator(C$.comparing$java_util_function_Function$java_util_Comparator(keyExtractor, keyComparator));
});

Clazz_newMeth(C$, 'thenComparing$java_util_function_Function',  function (keyExtractor) {
return this.thenComparing$java_util_Comparator(C$.comparing$java_util_function_Function(keyExtractor));
});

Clazz_newMeth(C$, 'thenComparingInt$java_util_function_ToIntFunction',  function (keyExtractor) {
return this.thenComparing$java_util_Comparator(C$.comparingInt$java_util_function_ToIntFunction(keyExtractor));
});

Clazz_newMeth(C$, 'thenComparingLong$java_util_function_ToLongFunction',  function (keyExtractor) {
return this.thenComparing$java_util_Comparator(C$.comparingLong$java_util_function_ToLongFunction(keyExtractor));
});

Clazz_newMeth(C$, 'thenComparingDouble$java_util_function_ToDoubleFunction',  function (keyExtractor) {
return this.thenComparing$java_util_Comparator(C$.comparingDouble$java_util_function_ToDoubleFunction(keyExtractor));
});
};})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Deque", null, null, 'java.util.Queue');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*c*/var C$=Clazz_newClass(P$, "Dictionary");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:34 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Enumeration");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*i*/var C$=Clazz_newInterface(P$, "EventListener");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*c*/var C$=Clazz_newClass(P$, "EventObject", null, null, 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['source','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$O',  function (source) {
;C$.$init$.apply(this);
if (source == null ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["null source"]);
this.source=source;
}, 1);

Clazz_newMeth(C$, 'getSource$',  function () {
return this.source;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[source=" + this.source + "]" ;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects',['java.util.HashMap','.KeyIterator'],'java.util.Map','java.util.HashMap',['java.util.HashMap','.KeySpliterator'],['java.util.HashMap','.ValueIterator'],['java.util.HashMap','.ValueSpliterator'],['java.util.HashMap','.EntryIterator'],['java.util.HashMap','.EntrySpliterator'],['java.util.HashMap','.Node'],['java.util.HashMap','.KeySet'],['java.util.HashMap','.Values'],['java.util.HashMap','.EntrySet'],'InternalError',['java.util.HashMap','.TreeNode']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "HashMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractMap', ['java.util.Map', 'Cloneable', 'java.io.Serializable']);
C$.$classes$=[['Node',8],['KeySet',16],['Values',16],['EntrySet',16],['HashIterator',1024],['KeyIterator',16],['ValueIterator',16],['EntryIterator',16],['HashMapSpliterator',8],['KeySpliterator',24],['ValueSpliterator',24],['EntrySpliterator',24],['TreeNode',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.秘allowJS=false;
},1);

C$.$fields$=[['Z',['秘allowJS'],'F',['loadFactor'],'I',['size','modCount','threshold'],'O',['秘m','java.util.Map','table','java.util.HashMap.Node[]','entrySet','java.util.Set']]
,['Z',['USE_SIMPLE']]]

Clazz_newMeth(C$, 'hash$O',  function (key) {
var h;
return (key == null ) ? 0 : (h=key.hashCode$()) ^ (h >>> 16);
}, 1);

Clazz_newMeth(C$, 'comparableClassFor$O',  function (x) {
if (Clazz_instanceOf(x, "java.lang.Comparable")) {
return x.getClass$();
}return null;
}, 1);

Clazz_newMeth(C$, 'compareComparables$Class$O$O',  function (kc, k, x) {
return (x == null  || x.getClass$() !== kc   ? 0 : (k).compareTo$O(x));
}, 1);

Clazz_newMeth(C$, 'tableSizeFor$I',  function (cap) {
var n=cap - 1;
n|=n >>> 1;
n|=n >>> 2;
n|=n >>> 4;
n|=n >>> 8;
n|=n >>> 16;
return (n < 0) ? 1 : (n >= 1073741824) ? 1073741824 : n + 1;
}, 1);

Clazz_newMeth(C$, 'c$$I$F',  function (initialCapacity, loadFactor) {
Clazz_super_(C$, this);
if (initialCapacity < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal initial capacity: " + initialCapacity]);
if (initialCapacity > 1073741824) initialCapacity=1073741824;
if (loadFactor <= 0  || Float.isNaN$F(loadFactor) ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal load factor: " + new Float(loadFactor).toString()]);
this.loadFactor=loadFactor;
this.threshold=C$.tableSizeFor$I(initialCapacity);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialCapacity) {
C$.c$$I$F.apply(this, [initialCapacity, 0.75]);
this.秘allowJS=true;
this.秘setJS$();
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.秘allowJS=true;
this.秘setJS$();
this.loadFactor=0.75;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map',  function (m) {
Clazz_super_(C$, this);
this.秘allowJS=(m.allowJS ||false);
this.秘setJS$();
this.loadFactor=0.75;
this.putMapEntries$java_util_Map$Z(m, false);
}, 1);

Clazz_newMeth(C$, 'putMapEntries$java_util_Map$Z',  function (mOriginal, evict) {
var n=mOriginal.size$();
if (n == 0) return;
var key=null;
var value=null;
if ($I$(3).秘isSimple$java_util_Map(this) && $I$(3).秘isSimple$java_util_Map(mOriginal) ) {
var me=this;

mOriginal.秘m.forEach(function(value, key) {
me.putVal$I$O$O$Z$Z$I(0, key, value, false, evict, $I$(3).秘hasKey$java_util_Map$O(me, key));

});
return;
}if (this.table == null ) {
var ft=(n / this.loadFactor) + 1.0;
var t=((ft < 1.07374182E9 ) ? (ft|0) : 1073741824);
if (t > this.threshold) this.threshold=C$.tableSizeFor$I(t);
} else if (n > this.threshold) this.resize$();
if ($I$(3).秘isSimple$java_util_Map(mOriginal)) {
var me=this;

mOriginal.秘m.forEach(function(value, key) {
me.putVal$I$O$O$Z$Z$I(C$.hash$O(key), key, value, false, evict, 0);

});
return;
}this.秘m=null;
for (var e, $e = mOriginal.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
key=e.getKey$();
value=e.getValue$();
this.putVal$I$O$O$Z$Z$I(C$.hash$O(key), key, value, false, evict, 0);
}
});

Clazz_newMeth(C$, 'size$',  function () {
return (this.秘m && this.秘m.size ||this.size);
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.size$() == 0;
});

Clazz_newMeth(C$, 'get$O',  function (key) {
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:
var v=null;

v = this.秘m.get(key);
return v;
}
var e;
return (e=this.getNode$I$O(C$.hash$O(key), key)) == null  ? null : e.value;
});

Clazz_newMeth(C$, 'getNode$I$O',  function (hash, key) {
var tab;
var first;
var e;
var n;
var k;
if ((tab=this.table) != null  && (n=tab.length) > 0  && (first=tab[(n - 1) & hash]) != null  ) {
if (first.hash == hash && ((k=first.key) === key  || (key != null  && key.equals$O(k) ) ) ) return first;
if ((e=first.next_) != null ) {
if (Clazz_instanceOf(first, "java.util.HashMap.TreeNode")) return (first).getTreeNode$I$O(hash, key);
do {
if (e.hash == hash && ((k=e.key) === key  || (key != null  && key.equals$O(k) ) ) ) return e;
} while ((e=e.next_) != null );
}}return null;
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return false;
case 3:
return true;
}
return this.getNode$I$O(C$.hash$O(key), key) != null ;
});

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
var type=$I$(3).秘hasKey$java_util_Map$O(this, key);
switch (type) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
case 3:
return this.putVal$I$O$O$Z$Z$I(1, key, value, false, true, type);
}
return this.putVal$I$O$O$Z$Z$I(C$.hash$O(key), key, value, false, true, 0);
});

Clazz_newMeth(C$, 'putVal$I$O$O$Z$Z$I',  function (hash, key, value, onlyIfAbsent, evict, mode) {
switch (mode) {
case 2:

this.秘m.set(key, value);
++this.modCount;
return null;
case 3:
var v0=(hash == 0 ? null : this.秘m.get(key) ||null);
if (!onlyIfAbsent || v0 == null  ) {

this.秘m.set(key, value);
}return v0;
case 0:
break;
}
var tab;
var p;
var n;
var i;
if ((tab=this.table) == null  || (n=tab.length) == 0 ) n=(tab=this.resize$()).length;
if ((p=tab[i=(n - 1) & hash]) == null ) tab[i]=this.newNode$I$O$O$java_util_HashMap_Node(hash, key, value, null);
 else {
var e;
var k;
if (p.hash == hash && ((k=p.key) === key  || (key != null  && key.equals$O(k) ) ) ) e=p;
 else if (Clazz_instanceOf(p, "java.util.HashMap.TreeNode")) e=(p).putTreeVal$java_util_HashMap$java_util_HashMap_NodeA$I$O$O(this, tab, hash, key, value);
 else {
for (var binCount=0; ; ++binCount) {
if ((e=p.next_) == null ) {
p.next_=this.newNode$I$O$O$java_util_HashMap_Node(hash, key, value, null);
if (binCount >= 7) this.treeifyBin$java_util_HashMap_NodeA$I(tab, hash);
break;
}if (e.hash == hash && ((k=e.key) === key  || (key != null  && key.equals$O(k) ) ) ) break;
p=e;
}
}if (e != null ) {
var oldValue=e.value;
if (!onlyIfAbsent || oldValue == null  ) e.value=value;
this.afterNodeAccess$java_util_HashMap_Node(e);
return oldValue;
}}++this.modCount;
if (++this.size > this.threshold) this.resize$();
this.afterNodeInsertion$Z(evict);
return null;
});

Clazz_newMeth(C$, 'resize$',  function () {
var oldTab=this.table;
var oldCap=(oldTab == null ) ? 0 : oldTab.length;
var oldThr=this.threshold;
var newCap;
var newThr=0;
if (oldCap > 0) {
if (oldCap >= 1073741824) {
this.threshold=2147483647;
return oldTab;
} else if ((newCap=oldCap << 1) < 1073741824 && oldCap >= 16 ) newThr=oldThr << 1;
} else if (oldThr > 0) newCap=oldThr;
 else {
newCap=16;
newThr=12;
}if (newThr == 0) {
var ft=newCap * this.loadFactor;
newThr=(newCap < 1073741824 && ft < 1.07374182E9   ? (ft|0) : 2147483647);
}this.threshold=newThr;
var newTab=Clazz_array($I$(10), [newCap]);
this.table=newTab;
if (oldTab != null ) {
for (var j=0; j < oldCap; ++j) {
var e;
if ((e=oldTab[j]) != null ) {
oldTab[j]=null;
if (e.next_ == null ) newTab[e.hash & (newCap - 1)]=e;
 else if (Clazz_instanceOf(e, "java.util.HashMap.TreeNode")) (e).split$java_util_HashMap$java_util_HashMap_NodeA$I$I(this, newTab, j, oldCap);
 else {
var loHead=null;
var loTail=null;
var hiHead=null;
var hiTail=null;
var next;
do {
next=e.next_;
if ((e.hash & oldCap) == 0) {
if (loTail == null ) loHead=e;
 else loTail.next_=e;
loTail=e;
} else {
if (hiTail == null ) hiHead=e;
 else hiTail.next_=e;
hiTail=e;
}} while ((e=next) != null );
if (loTail != null ) {
loTail.next_=null;
newTab[j]=loHead;
}if (hiTail != null ) {
hiTail.next_=null;
newTab[j + oldCap]=hiHead;
}}}}
}return newTab;
});

Clazz_newMeth(C$, 'treeifyBin$java_util_HashMap_NodeA$I',  function (tab, hash) {
var n;
var index;
var e;
if (tab == null  || (n=tab.length) < 64 ) this.resize$();
 else if ((e=tab[index=(n - 1) & hash]) != null ) {
var hd=null;
var tl=null;
do {
var p=this.replacementTreeNode$java_util_HashMap_Node$java_util_HashMap_Node(e, null);
if (tl == null ) hd=p;
 else {
p.prev=tl;
tl.next_=p;
}tl=p;
} while ((e=e.next_) != null );
if ((tab[index]=hd) != null ) hd.treeify$java_util_HashMap_NodeA(tab);
}});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (m) {
this.putMapEntries$java_util_Map$Z(m, true);
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:
return this.removeNode$I$O$O$Z$Z$I(1, key, null, false, true, 3);
}
var e;
return (e=this.removeNode$I$O$O$Z$Z$I(C$.hash$O(key), key, null, false, true, 0)) == null  ? null : e.value;
});

Clazz_newMeth(C$, 'removeNode$I$O$O$Z$Z$I',  function (hash, key, value, matchValue, movable, mode) {
var v;
if (mode == 3) {
v=(hash == 1 || matchValue  ? this.秘m.get(key) ||null : null);
if (!matchValue || v === value   || (value != null  && value.equals$O(v) ) ) {

this.秘m["delete"](key);
++this.modCount;
switch (hash) {
case 1:
return v;
case 3:
return "true";
}
}return null;
}var tab;
var p;
var n;
var index;
if ((tab=this.table) != null  && (n=tab.length) > 0  && (p=tab[index=(n - 1) & hash]) != null  ) {
var node=null;
var e;
var k;
if (p.hash == hash && ((k=p.key) === key  || (key != null  && key.equals$O(k) ) ) ) node=p;
 else if ((e=p.next_) != null ) {
if (Clazz_instanceOf(p, "java.util.HashMap.TreeNode")) node=(p).getTreeNode$I$O(hash, key);
 else {
do {
if (e.hash == hash && ((k=e.key) === key  || (key != null  && key.equals$O(k) ) ) ) {
node=e;
break;
}p=e;
} while ((e=e.next_) != null );
}}if (node != null  && (!matchValue || (v=node.value) === value   || (value != null  && value.equals$O(v) ) ) ) {
if (Clazz_instanceOf(node, "java.util.HashMap.TreeNode")) (node).removeTreeNode$java_util_HashMap$java_util_HashMap_NodeA$Z(this, tab, movable);
 else if (node === p ) tab[index]=node.next_;
 else p.next_=node.next_;
++this.modCount;
--this.size;
this.afterNodeRemoval$java_util_HashMap_Node(node);
return node;
}}return null;
});

Clazz_newMeth(C$, 'clear$',  function () {
var tab;
++this.modCount;
if ($I$(3).秘isSimple$java_util_Map(this)) {

this.秘m.clear();
}this.秘setJS$();
if ((tab=this.table) != null  && this.size > 0 ) {
this.size=0;
for (var i=0; i < tab.length; ++i) tab[i]=null;

}});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
if (this.size$() == 0) return false;
if ($I$(3).秘isSimple$java_util_Map(this)) {
var m=this.秘m;

var iter = m.values();
for (var n = iter.next(); !n.done; n = iter.next()) { if (n.value == value || n.value.equals$O(value)) { return true;
} }
} else {
var tab;
var v;
if ((tab=this.table) != null ) {
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) {
if ((v=e.value) === value  || (value != null  && value.equals$O(v) ) ) return true;
}
}
}}return false;
});

Clazz_newMeth(C$, 'keySet$',  function () {
var ks;
return (ks=this.keySet) == null  ? (this.keySet=Clazz_new_($I$(11,1),[this, null])) : ks;
});

Clazz_newMeth(C$, 'values$',  function () {
var vs;
return (vs=this.values) == null  ? (this.values=Clazz_new_($I$(12,1),[this, null])) : vs;
});

Clazz_newMeth(C$, 'entrySet$',  function () {
var es;
return (es=this.entrySet) == null  ? (this.entrySet=Clazz_new_($I$(13,1),[this, null])) : es;
});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (key, defaultValue) {
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return defaultValue;
case 3:
var v=null;

v = this.秘m.get(key);
return (v == null  ? defaultValue : v);
}
var e;
return (e=this.getNode$I$O(C$.hash$O(key), key)) == null  ? defaultValue : e.value;
});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
var type=$I$(3).秘hasKey$java_util_Map$O(this, key);
switch (type) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 3:
case 2:
return this.putVal$I$O$O$Z$Z$I(1, key, value, true, true, type);
}
return this.putVal$I$O$O$Z$Z$I(C$.hash$O(key), key, value, true, true, 0);
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return false;
case 3:
return this.removeNode$I$O$O$Z$Z$I(3, key, value, true, true, 3) != null ;
}
return this.removeNode$I$O$O$Z$Z$I(C$.hash$O(key), key, value, true, true, 0) != null ;
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
var v=null;
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return false;
case 3:

v = this.秘m.get(key);
if (v == null  ? oldValue == null  : v.equals$O(oldValue)) {

this.秘m.set(key, newValue);
return true;
}return false;
}
var e;
if ((e=this.getNode$I$O(C$.hash$O(key), key)) != null  && ((v=e.value) === oldValue  || (v != null  && v.equals$O(oldValue) ) ) ) {
e.value=newValue;
this.afterNodeAccess$java_util_HashMap_Node(e);
return true;
}return false;
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:
var v=null;

v = this.秘m.get(key); this.秘m.set(key, value);
return v;
}
var e;
if ((e=this.getNode$I$O(C$.hash$O(key), key)) != null ) {
var oldValue=e.value;
e.value=value;
this.afterNodeAccess$java_util_HashMap_Node(e);
return oldValue;
}return null;
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
if (mappingFunction == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var v=null;
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
v=mappingFunction.apply$O(key);
if (v == null ) return null;
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 3:
v=null;

v = this.秘m.get(key);
if (v != null ) return v;
v=mappingFunction.apply$O(key);
if (v != null ) this.putVal$I$O$O$Z$Z$I(0, key, v, false, true, 3);
return v;
case 2:
v=mappingFunction.apply$O(key);
if (v != null ) this.putVal$I$O$O$Z$Z$I(0, key, v, false, true, 2);
return v;
}
var hash=C$.hash$O(key);
var tab;
var first;
var n;
var i;
var binCount=0;
var t=null;
var old=null;
if (this.size > this.threshold || (tab=this.table) == null   || (n=tab.length) == 0 ) n=(tab=this.resize$()).length;
if ((first=tab[i=(n - 1) & hash]) != null ) {
if (Clazz_instanceOf(first, "java.util.HashMap.TreeNode")) old=(t=first).getTreeNode$I$O(hash, key);
 else {
var e=first;
var k;
do {
if (e.hash == hash && ((k=e.key) === key  || (key != null  && key.equals$O(k) ) ) ) {
old=e;
break;
}++binCount;
} while ((e=e.next_) != null );
}var oldValue;
if (old != null  && (oldValue=old.value) != null  ) {
this.afterNodeAccess$java_util_HashMap_Node(old);
return oldValue;
}}if (v == null  && (v=mappingFunction.apply$O(key)) == null  ) {
return null;
} else if (old != null ) {
old.value=v;
this.afterNodeAccess$java_util_HashMap_Node(old);
return v;
} else if (t != null ) {
t.putTreeVal$java_util_HashMap$java_util_HashMap_NodeA$I$O$O(this, tab, hash, key, v);
} else {
tab[i]=this.newNode$I$O$O$java_util_HashMap_Node(hash, key, v, first);
if (binCount >= 7) this.treeifyBin$java_util_HashMap_NodeA$I(tab, hash);
}++this.modCount;
++this.size;
this.afterNodeInsertion$Z(true);
return v;
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
if (remappingFunction == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var v=null;
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:

v = this.秘m.get(key);
if (v != null ) {
v=remappingFunction.apply$O$O(key, v);
if (v == null ) {
this.removeNode$I$O$O$Z$Z$I(0, key, v, false, true, 3);
} else {
this.putVal$I$O$O$Z$Z$I(0, key, v, false, true, 3);
}}return v;
}
var e;
var hash=C$.hash$O(key);
if ((e=this.getNode$I$O(hash, key)) != null  && (v=e.value) != null  ) {
v=remappingFunction.apply$O$O(key, v);
if (v != null ) {
e.value=v;
this.afterNodeAccess$java_util_HashMap_Node(e);
return v;
} else this.removeNode$I$O$O$Z$Z$I(hash, key, null, false, true, 0);
}return null;
});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
if (remappingFunction == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var v=null;
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
v=remappingFunction.apply$O$O(key, null);
if (v == null ) return null;
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
if ((v=remappingFunction.apply$O$O(key, v)) != null ) this.putVal$I$O$O$Z$Z$I(0, key, v, false, true, 2);
return v;
case 3:

v = this.秘m.get(key);
if ((v=remappingFunction.apply$O$O(key, v)) == null ) this.removeNode$I$O$O$Z$Z$I(0, key, null, false, true, 3);
 else this.putVal$I$O$O$Z$Z$I(0, key, v, false, true, 3);
return v;
}
var hash=C$.hash$O(key);
var tab;
var first;
var n;
var i;
var binCount=0;
var t=null;
var old=null;
if (this.size > this.threshold || (tab=this.table) == null   || (n=tab.length) == 0 ) n=(tab=this.resize$()).length;
if ((first=tab[i=(n - 1) & hash]) != null ) {
if (Clazz_instanceOf(first, "java.util.HashMap.TreeNode")) old=(t=first).getTreeNode$I$O(hash, key);
 else {
var e=first;
var k;
do {
if (e.hash == hash && ((k=e.key) === key  || (key != null  && key.equals$O(k) ) ) ) {
old=e;
break;
}++binCount;
} while ((e=e.next_) != null );
}}if (v == null  && old != null  ) v=old.value;
v=remappingFunction.apply$O$O(key, v);
if (old != null ) {
if (v != null ) {
old.value=v;
this.afterNodeAccess$java_util_HashMap_Node(old);
} else this.removeNode$I$O$O$Z$Z$I(hash, key, null, false, true, 0);
} else if (v != null ) {
if (t != null ) t.putTreeVal$java_util_HashMap$java_util_HashMap_NodeA$I$O$O(this, tab, hash, key, v);
 else {
tab[i]=this.newNode$I$O$O$java_util_HashMap_Node(hash, key, v, first);
if (binCount >= 7) this.treeifyBin$java_util_HashMap_NodeA$I(tab, hash);
}++this.modCount;
++this.size;
this.afterNodeInsertion$Z(true);
}return v;
});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
if (value == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (remappingFunction == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var v=null;
switch ($I$(3).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
value=remappingFunction.apply$O$O(null, value);
if (value != null ) this.putVal$I$O$O$Z$Z$I(0, key, value, false, true, 2);
return value;
case 3:

v = this.秘m.get(key);
if (v != null ) value=remappingFunction.apply$O$O(v, value);
if (value == null ) {
this.removeNode$I$O$O$Z$Z$I(0, key, null, false, true, 3);
} else {
this.putVal$I$O$O$Z$Z$I(0, key, value, false, true, 3);
}return value;
}
var hash=C$.hash$O(key);
var tab;
var first;
var n;
var i;
var binCount=0;
var t=null;
var old=null;
if (this.size > this.threshold || (tab=this.table) == null   || (n=tab.length) == 0 ) n=(tab=this.resize$()).length;
if ((first=tab[i=(n - 1) & hash]) != null ) {
if (Clazz_instanceOf(first, "java.util.HashMap.TreeNode")) old=(t=first).getTreeNode$I$O(hash, key);
 else {
var e=first;
var k;
do {
if (e.hash == hash && ((k=e.key) === key  || (key != null  && key.equals$O(k) ) ) ) {
old=e;
break;
}++binCount;
} while ((e=e.next_) != null );
}}if (old != null ) {
if (old.value != null ) v=remappingFunction.apply$O$O(old.value, value);
 else v=value;
if (v != null ) {
old.value=v;
this.afterNodeAccess$java_util_HashMap_Node(old);
} else this.removeNode$I$O$O$Z$Z$I(hash, key, null, false, true, 0);
return v;
}if (value != null ) {
if (t != null ) t.putTreeVal$java_util_HashMap$java_util_HashMap_NodeA$I$O$O(this, tab, hash, key, value);
 else {
tab[i]=this.newNode$I$O$O$java_util_HashMap_Node(hash, key, value, first);
if (binCount >= 7) this.treeifyBin$java_util_HashMap_NodeA$I(tab, hash);
}++this.modCount;
++this.size;
this.afterNodeInsertion$Z(true);
}return value;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.size$() == 0) return;
var mc=this.modCount;
if ($I$(3).秘isSimple$java_util_Map(this)) {
var m=this.秘m;

m.forEach(function(value,key){ action.accept$O$O(key, value); });
} else {
var tab;
if ((tab=this.table) != null ) {
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) action.accept$O$O(e.key, e.value);

}
}}if (this.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function (f) {
if (f == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.size$() == 0) return;
var mc=this.modCount;
if ($I$(3).秘isSimple$java_util_Map(this)) {
var m=this.秘m;

m.forEach(function(value,key){ m.set(key, f.apply$O$O(key, value)); });
} else {
var tab;
if ((tab=this.table) != null ) {
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) {
e.value=f.apply$O$O(e.key, e.value);
}
}
}}if (this.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'clone$',  function () {
var result;
try {
result=C$.superclazz.prototype.clone$.apply(this, []);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(14,1).c$$Throwable,[e]);
} else {
throw e;
}
}
result.reinitialize$();
result.putMapEntries$java_util_Map$Z(this, false);
return result;
});

Clazz_newMeth(C$, 'loadFactor$',  function () {
return this.loadFactor;
});

Clazz_newMeth(C$, 'capacity$',  function () {
return (this.table != null ) ? this.table.length : (this.threshold > 0) ? this.threshold : 16;
});

Clazz_newMeth(C$, 'newNode$I$O$O$java_util_HashMap_Node',  function (hash, key, value, next) {
return Clazz_new_($I$(10,1).c$$I$O$O$java_util_HashMap_Node,[hash, key, value, next]);
});

Clazz_newMeth(C$, 'getJSEntry$java_util_Map_Entry',  function (e) {
return ((P$.HashMap$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "HashMap$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['java.util.Map','java.util.Map.Entry']], 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getKey$',  function () {
var node=this.$finals$.e;
return (1 ? node.value[0] :null);
});

Clazz_newMeth(C$, 'getValue$',  function () {
var node=this.$finals$.e;
return (1 ? node.value[1] :null);
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
return this.b$['java.util.HashMap'].put$O$O.apply(this.b$['java.util.HashMap'], [this.getKey$(), value]);
});
})()
), Clazz_new_(P$.HashMap$1.$init$,[this, {e:e}]));
});

Clazz_newMeth(C$, 'replacementNode$java_util_HashMap_Node$java_util_HashMap_Node',  function (p, next) {
return Clazz_new_($I$(10,1).c$$I$O$O$java_util_HashMap_Node,[p.hash, p.key, p.value, next]);
});

Clazz_newMeth(C$, 'newTreeNode$I$O$O$java_util_HashMap_Node',  function (hash, key, value, next) {
return Clazz_new_($I$(15,1).c$$I$O$O$java_util_HashMap_Node,[hash, key, value, next]);
});

Clazz_newMeth(C$, 'replacementTreeNode$java_util_HashMap_Node$java_util_HashMap_Node',  function (p, next) {
return Clazz_new_($I$(15,1).c$$I$O$O$java_util_HashMap_Node,[p.hash, p.key, p.value, next]);
});

Clazz_newMeth(C$, 'reinitialize$',  function () {
this.table=null;
this.entrySet=null;
this.keySet=null;
this.values=null;
this.modCount=0;
this.threshold=0;
this.秘setJS$();
this.size=0;
});

Clazz_newMeth(C$, 'afterNodeAccess$java_util_HashMap_Node',  function (p) {
});

Clazz_newMeth(C$, 'afterNodeInsertion$Z',  function (evict) {
});

Clazz_newMeth(C$, 'afterNodeRemoval$java_util_HashMap_Node',  function (p) {
});

Clazz_newMeth(C$, 'internalWriteEntries$java_io_ObjectOutputStream',  function (s) {
var tab;
if (this.size > 0 && (tab=this.table) != null  ) {
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) {
s.writeObject$O(e.key);
s.writeObject$O(e.value);
}
}
}});

Clazz_newMeth(C$, '秘setJS$',  function () {
this.秘m=(this.秘allowJS && C$.USE_SIMPLE  ? new Map() ||null : null);
});

C$.$static$=function(){C$.$static$=0;
C$.USE_SIMPLE=true;
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "Node", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['hash'],'O',['key','<K>','value','<V>','next_','java.util.HashMap.Node']]]

Clazz_newMeth(C$, 'c$$I$O$O$java_util_HashMap_Node',  function (hash, key, value, next) {
;C$.$init$.apply(this);
this.hash=hash;
this.key=key;
this.value=value;
this.next_=next;
}, 1);

Clazz_newMeth(C$, 'getKey$',  function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue$',  function () {
return this.value;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.key + "=" + this.value ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return $I$(1).hashCode$O(this.key) ^ $I$(1).hashCode$O(this.value);
});

Clazz_newMeth(C$, 'setValue$O',  function (newValue) {
var oldValue=this.value;
this.value=newValue;
return oldValue;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return (o != null  && (o === this  || Clazz_instanceOf(o, "java.util.Map.Entry") && $I$(1,"equals$O$O",[this.key, (o).getKey$()]) && $I$(1,"equals$O$O",[this.value, (o).getValue$()])   ) );
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "KeySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.HashMap'].size;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.HashMap'].clear$.apply(this.b$['java.util.HashMap'], []);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(2,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.HashMap'].containsKey$O.apply(this.b$['java.util.HashMap'], [o]);
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
switch ($I$(3).秘hasKey$java_util_Map$O(this.b$['java.util.HashMap'], key)) {
case 0:
break;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this.b$['java.util.HashMap']);
break;
case 2:
return false;
case 3:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [3, key, null, false, true, 3]) != null ;
}
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(4).hash$O(key), key, null, false, true, 0]) != null ;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(5,1).c$$java_util_HashMap$I$I$I$I,[this.b$['java.util.HashMap'], 0, -1, 0, 0]);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.size$() == 0) return;
var mc=this.b$['java.util.HashMap'].modCount;
if ($I$(3).秘isSimple$java_util_Map(this.b$['java.util.HashMap'])) {
var m=this.b$['java.util.HashMap'].秘m;

m.forEach(function(value, key){ action.accept$O(key); });
} else {
var tab;
if ((tab=this.b$['java.util.HashMap'].table) != null ) {
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) action.accept$O(e.key);

}
}}if (this.b$['java.util.HashMap'].modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "Values", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractCollection');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.HashMap'].size$.apply(this.b$['java.util.HashMap'], []);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.HashMap'].clear$.apply(this.b$['java.util.HashMap'], []);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(6,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.HashMap'].containsValue$O.apply(this.b$['java.util.HashMap'], [o]);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(7,1).c$$java_util_HashMap$I$I$I$I,[this.b$['java.util.HashMap'], 0, -1, 0, 0]);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.size$() == 0) return;
var mc=this.b$['java.util.HashMap'].modCount;
if ($I$(3).秘isSimple$java_util_Map(this.b$['java.util.HashMap'])) {
var m=this.b$['java.util.HashMap'].秘m;

m.forEach(function(value){ action.accept$O(value); });
} else {
var tab;
if ((tab=this.b$['java.util.HashMap'].table) != null ) {
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) action.accept$O(e.value);

}
}}if (this.b$['java.util.HashMap'].modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "EntrySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.HashMap'].size$.apply(this.b$['java.util.HashMap'], []);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.HashMap'].clear$.apply(this.b$['java.util.HashMap'], []);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(8,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
var key=e.getKey$();
if (!this.b$['java.util.HashMap'].containsKey$O.apply(this.b$['java.util.HashMap'], [key])) return false;
if ($I$(3).秘isSimple$java_util_Map(this.b$['java.util.HashMap'])) {
var value=e.getValue$();
var v=this.b$['java.util.HashMap'].get$O.apply(this.b$['java.util.HashMap'], [key]);
return (value === v  || value != null  && value.equals$O(v)  );
}var candidate=this.b$['java.util.HashMap'].getNode$I$O.apply(this.b$['java.util.HashMap'], [$I$(4).hash$O(key), key]);
return candidate != null  && candidate.equals$O(e) ;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) {
return false;
}var e=o;
var key=e.getKey$();
var value=e.getValue$();
switch ($I$(3).秘hasKey$java_util_Map$O(this.b$['java.util.HashMap'], key)) {
default:
case 0:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(4).hash$O(key), key, value, true, true, 0]) != null ;
case 1:
$I$(3).秘ensureJavaMap$java_util_Map(this.b$['java.util.HashMap']);
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(4).hash$O(key), key, value, true, true, 0]) != null ;
case 2:
return false;
case 3:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [3, key, value, true, true, 3]) != null ;
}
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(9,1).c$$java_util_HashMap$I$I$I$I,[this.b$['java.util.HashMap'], 0, -1, 0, 0]);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.size$() == 0) return;
var tab;
if ((tab=this.b$['java.util.HashMap'].table) != null ) {
var mc=this.b$['java.util.HashMap'].modCount;
for (var i=0; i < tab.length; ++i) {
for (var e=tab[i]; e != null ; e=e.next_) action.accept$O(e);

}
if (this.b$['java.util.HashMap'].modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "HashIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isSimple'],'I',['expectedModCount','index'],'O',['jsMapIterator','java.util.Iterator','next_','java.util.HashMap.Node','+current']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.expectedModCount=this.b$['java.util.HashMap'].modCount;
this.current=this.next_=null;
this.isSimple=$I$(3).秘isSimple$java_util_Map(this.b$['java.util.HashMap']);
if (this.isSimple) {
var m=this.b$['java.util.HashMap'].秘m;

this.jsMapIterator = m.entries();
this.next_ = this.jsMapIterator.next();
} else {
var t=this.b$['java.util.HashMap'].table;
this.index=0;
if (t != null  && this.b$['java.util.HashMap'].size > 0 ) {
do {
} while (this.index < t.length && (this.next_=t[this.index++]) == null  );
}}}, 1);

Clazz_newMeth(C$, 'hasNext$',  function () {
if (this.isSimple) {
return this.next_ != null  && (!this.next_.done &&true) ;
} else {
return this.next_ != null ;
}});

Clazz_newMeth(C$, 'nextNode$',  function () {
if (this.b$['java.util.HashMap'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
var e=this.next_;
if (e == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.current=e;
if (this.isSimple) {
this.next_=this.jsMapIterator.next() ||null;
} else {
var t;
if ((this.next_=this.current.next_) == null  && (t=this.b$['java.util.HashMap'].table) != null  ) {
do {
} while (this.index < t.length && (this.next_=t[this.index++]) == null  );
}}return e;
});

Clazz_newMeth(C$, 'remove$',  function () {
var p=this.current;
if (p == null ) throw Clazz_new_(Clazz_load('IllegalStateException'));
if (this.b$['java.util.HashMap'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.current=null;
var key=null;
if (this.isSimple) {

key = p.value[0];
this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [0, key, null, false, false, 3]);
} else {
key=p.key;
this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(4).hash$O(key), key, null, false, false, 0]);
}this.expectedModCount=this.b$['java.util.HashMap'].modCount;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "KeyIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.HashMap','.HashIterator'], 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
var n=this.nextNode$();
if (this.isSimple) {
return (1 ? n.value[0] :null);
} else {
return n.key;
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "ValueIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.HashMap','.HashIterator'], 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
var n=this.nextNode$();
if (this.isSimple) {
return (1 ? n.value[1] :null);
} else {
return n.value;
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "EntryIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.HashMap','.HashIterator'], 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
var e=this.nextNode$();
if (this.isSimple) {
return this.b$['java.util.HashMap'].getJSEntry$java_util_Map_Entry.apply(this.b$['java.util.HashMap'], [e]);
} else {
return e;
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "HashMapSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isSimple'],'I',['index','fence','est','expectedModCount'],'O',['map','java.util.HashMap','current','java.util.HashMap.Node','jsMapIterator','java.util.Iterator']]]

Clazz_newMeth(C$, 'c$$java_util_HashMap$I$I$I$I',  function (map, origin, fence, est, expectedModCount) {
;C$.$init$.apply(this);
this.map=map;
this.index=origin;
this.fence=fence;
this.est=est;
this.expectedModCount=expectedModCount;
this.isSimple=$I$(3).秘isSimple$java_util_Map(map);
if (this.isSimple) {
var m=map.秘m;

this.jsMapIterator = m.entries();
}}, 1);

Clazz_newMeth(C$, 'getFence$',  function () {
var hi;
if ((hi=this.fence) < 0) {
var m=this.map;
this.est=m.size$();
this.expectedModCount=m.modCount;
var tab=m.table;
hi=this.fence=(tab == null ) ? 0 : tab.length;
}return hi;
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
this.getFence$();
return this.est;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "KeySpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.HashMap','.HashMapSpliterator'], 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_HashMap$I$I$I$I',  function (m, origin, fence, est, expectedModCount) {
;C$.superclazz.c$$java_util_HashMap$I$I$I$I.apply(this,[m, origin, fence, est, expectedModCount]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'trySplit$',  function () {
if (this.isSimple) return null;
var hi=this.getFence$();
var lo=this.index;
var mid=(lo + hi) >>> 1;
return (lo >= mid || this.current != null  ) ? null : Clazz_new_(C$.c$$java_util_HashMap$I$I$I$I,[this.map, lo, this.index=mid, this.est>>>=1, this.expectedModCount]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var m=this.map;
var i;
var hi;
var mc;
var tab=m.table;
if ((hi=this.fence) < 0) {
mc=this.expectedModCount=m.modCount;
hi=this.fence=(tab == null ) ? 0 : tab.length;
} else mc=this.expectedModCount;
var p=null;
if (this.isSimple) {
while (true){
var k=null;

p = this.jsMapIterator.next(); if (p.done) p = null; else k = p.value[0];
if (p == null ) break;
action.accept$O(k);
}
} else if (tab != null  && tab.length >= hi  && (i=this.index) >= 0  && (i < (this.index=hi) || this.current != null  ) ) {
p=this.current;
this.current=null;
do {
if (p == null ) p=tab[i++];
 else {
action.accept$O(p.key);
p=p.next_;
}} while (p != null  || i < hi );
}if (m.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var k=null;
var p=null;
if (this.isSimple) {

p = this.jsMapIterator.next(); if (p.done) p = null; else k = p.value[0];
if (p != null ) {
action.accept$O(k);
return true;
}} else {
var hi;
var tab=this.map.table;
if (tab != null  && tab.length >= (hi=this.getFence$())  && this.index >= 0 ) {
while (this.current != null  || this.index < hi ){
if (this.current == null ) this.current=tab[this.index++];
 else {
k=this.current.key;
this.current=this.current.next_;
action.accept$O(k);
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}}
}}return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return (this.fence < 0 || this.est == this.map.size$()  ? 64 : 0) | 1;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "ValueSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.HashMap','.HashMapSpliterator'], 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_HashMap$I$I$I$I',  function (m, origin, fence, est, expectedModCount) {
;C$.superclazz.c$$java_util_HashMap$I$I$I$I.apply(this,[m, origin, fence, est, expectedModCount]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'trySplit$',  function () {
if (this.isSimple) return null;
var hi=this.getFence$();
var lo=this.index;
var mid=(lo + hi) >>> 1;
return (lo >= mid || this.current != null  ) ? null : Clazz_new_(C$.c$$java_util_HashMap$I$I$I$I,[this.map, lo, this.index=mid, this.est>>>=1, this.expectedModCount]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var m=this.map;
var i;
var hi;
var mc;
var tab=m.table;
if ((hi=this.fence) < 0) {
mc=this.expectedModCount=m.modCount;
hi=this.fence=(tab == null ) ? 0 : tab.length;
} else mc=this.expectedModCount;
var p=null;
if (this.isSimple) {
while (true){
var v=null;

p = this.jsMapIterator.next(); if (p.done) p = null; else v = p.value[1];
if (p == null ) break;
action.accept$O(v);
}
} else if (tab != null  && tab.length >= hi  && (i=this.index) >= 0  && (i < (this.index=hi) || this.current != null  ) ) {
p=this.current;
this.current=null;
do {
if (p == null ) p=tab[i++];
 else {
action.accept$O(p.value);
p=p.next_;
}} while (p != null  || i < hi );
}if (m.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var v=null;
var p=null;
if (this.isSimple) {

p = this.jsMapIterator.next(); if (p.done) p = null; else v = p.value[1];
if (p != null ) {
action.accept$O(v);
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}} else {
var hi;
var tab=this.map.table;
if (tab != null  && tab.length >= (hi=this.getFence$())  && this.index >= 0 ) {
while (this.current != null  || this.index < hi ){
if (this.current == null ) this.current=tab[this.index++];
 else {
v=this.current.value;
this.current=this.current.next_;
action.accept$O(v);
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}}
}}return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return (this.fence < 0 || this.est == this.map.size$()  ? 64 : 0);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "EntrySpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.HashMap','.HashMapSpliterator'], 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_HashMap$I$I$I$I',  function (m, origin, fence, est, expectedModCount) {
;C$.superclazz.c$$java_util_HashMap$I$I$I$I.apply(this,[m, origin, fence, est, expectedModCount]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'trySplit$',  function () {
if (this.isSimple) return null;
var hi=this.getFence$();
var lo=this.index;
var mid=(lo + hi) >>> 1;
return (lo >= mid || this.current != null  ) ? null : Clazz_new_(C$.c$$java_util_HashMap$I$I$I$I,[this.map, lo, this.index=mid, this.est>>>=1, this.expectedModCount]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
var i;
var hi;
var mc;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var m=this.map;
var tab=m.table;
if ((hi=this.fence) < 0) {
mc=this.expectedModCount=m.modCount;
hi=this.fence=(tab == null ) ? 0 : tab.length;
} else mc=this.expectedModCount;
var p=null;
if (this.isSimple) {
while (true){

p = this.jsMapIterator.next(); if (p.done) p = null;
if (p == null ) break;
action.accept$O(this.map.getJSEntry$java_util_Map_Entry(p));
}
} else if (tab != null  && tab.length >= hi  && (i=this.index) >= 0  && (i < (this.index=hi) || this.current != null  ) ) {
p=this.current;
this.current=null;
do {
if (p == null ) p=tab[i++];
 else {
action.accept$O(p);
p=p.next_;
}} while (p != null  || i < hi );
}if (m.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
var hi;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var tab=this.map.table;
var p=null;
if (this.isSimple) {

p = this.jsMapIterator.next(); if (p.done) p = null;
if (p != null ) {
action.accept$O(this.map.getJSEntry$java_util_Map_Entry(p));
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}} else if (tab != null  && tab.length >= (hi=this.getFence$())  && this.index >= 0 ) {
while (this.current != null  || this.index < hi ){
if (this.current == null ) this.current=tab[this.index++];
 else {
var e=this.current;
this.current=this.current.next_;
action.accept$O(e);
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return (this.fence < 0 || this.est == this.map.size$()  ? 64 : 0) | 1;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.HashMap, "TreeNode", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.LinkedHashMap','.Entry']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['red'],'O',['parent','java.util.HashMap.TreeNode','+left','+right','+prev']]]

Clazz_newMeth(C$, 'c$$I$O$O$java_util_HashMap_Node',  function (hash, key, val, next) {
;C$.superclazz.c$$I$O$O$java_util_HashMap_Node.apply(this,[hash, key, val, next]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'root$',  function () {
for (var r=this, p; ; ) {
if ((p=r.parent) == null ) return r;
r=p;
}
});

Clazz_newMeth(C$, 'moveRootToFront$java_util_HashMap_NodeA$java_util_HashMap_TreeNode',  function (tab, root) {
var n;
if (root != null  && tab != null   && (n=tab.length) > 0 ) {
var index=(n - 1) & root.hash;
var first=tab[index];
if (root !== first ) {
var rn;
tab[index]=root;
var rp=root.prev;
if ((rn=root.next_) != null ) (rn).prev=rp;
if (rp != null ) rp.next_=rn;
if (first != null ) first.prev=root;
root.next_=first;
root.prev=null;
}Clazz_assert(C$, this, function(){return C$.checkInvariants$java_util_HashMap_TreeNode(root)});
}}, 1);

Clazz_newMeth(C$, 'find$I$O$Class',  function (h, k, kc) {
var p=this;
do {
var ph;
var dir;
var pk;
var pl=p.left;
var pr=p.right;
var q;
if ((ph=p.hash) > h) p=pl;
 else if (ph < h) p=pr;
 else if ((pk=p.key) === k  || (k != null  && k.equals$O(pk) ) ) return p;
 else if (pl == null ) p=pr;
 else if (pr == null ) p=pl;
 else if ((kc != null  || (kc=$I$(4).comparableClassFor$O(k)) != null  ) && (dir=$I$(4).compareComparables$Class$O$O(kc, k, pk)) != 0 ) p=(dir < 0) ? pl : pr;
 else if ((q=pr.find$I$O$Class(h, k, kc)) != null ) return q;
 else p=pl;
} while (p != null );
return null;
});

Clazz_newMeth(C$, 'getTreeNode$I$O',  function (h, k) {
return ((this.parent != null ) ? this.root$() : this).find$I$O$Class(h, k, null);
});

Clazz_newMeth(C$, 'tieBreakOrder$O$O',  function (a, b) {
var d;
if (a == null  || b == null   || (d=a.getClass$().getName$().compareTo$S(b.getClass$().getName$())) == 0 ) d=(System.identityHashCode$O(a) <= System.identityHashCode$O(b) ? -1 : 1);
return d;
}, 1);

Clazz_newMeth(C$, 'treeify$java_util_HashMap_NodeA',  function (tab) {
var root=null;
for (var x=this, next; x != null ; x=next) {
next=x.next_;
x.left=x.right=null;
if (root == null ) {
x.parent=null;
x.red=false;
root=x;
} else {
var k=x.key;
var h=x.hash;
var kc=null;
for (var p=root; ; ) {
var dir;
var ph;
var pk=p.key;
if ((ph=p.hash) > h) dir=-1;
 else if (ph < h) dir=1;
 else if ((kc == null  && (kc=$I$(4).comparableClassFor$O(k)) == null  ) || (dir=$I$(4).compareComparables$Class$O$O(kc, k, pk)) == 0 ) dir=C$.tieBreakOrder$O$O(k, pk);
var xp=p;
if ((p=(dir <= 0) ? p.left : p.right) == null ) {
x.parent=xp;
if (dir <= 0) xp.left=x;
 else xp.right=x;
root=C$.balanceInsertion$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, x);
break;
}}
}}
C$.moveRootToFront$java_util_HashMap_NodeA$java_util_HashMap_TreeNode(tab, root);
});

Clazz_newMeth(C$, 'untreeify$java_util_HashMap',  function (map) {
var hd=null;
var tl=null;
for (var q=this; q != null ; q=q.next_) {
var p=map.replacementNode$java_util_HashMap_Node$java_util_HashMap_Node(q, null);
if (tl == null ) hd=p;
 else tl.next_=p;
tl=p;
}
return hd;
});

Clazz_newMeth(C$, 'putTreeVal$java_util_HashMap$java_util_HashMap_NodeA$I$O$O',  function (map, tab, h, k, v) {
var kc=null;
var searched=false;
var root=(this.parent != null ) ? this.root$() : this;
for (var p=root; ; ) {
var dir;
var ph;
var pk;
if ((ph=p.hash) > h) dir=-1;
 else if (ph < h) dir=1;
 else if ((pk=p.key) === k  || (k != null  && k.equals$O(pk) ) ) return p;
 else if ((kc == null  && (kc=$I$(4).comparableClassFor$O(k)) == null  ) || (dir=$I$(4).compareComparables$Class$O$O(kc, k, pk)) == 0 ) {
if (!searched) {
var q;
var ch;
searched=true;
if (((ch=p.left) != null  && (q=ch.find$I$O$Class(h, k, kc)) != null  ) || ((ch=p.right) != null  && (q=ch.find$I$O$Class(h, k, kc)) != null  ) ) return q;
}dir=C$.tieBreakOrder$O$O(k, pk);
}var xp=p;
if ((p=(dir <= 0) ? p.left : p.right) == null ) {
var xpn=xp.next_;
var x=map.newTreeNode$I$O$O$java_util_HashMap_Node(h, k, v, xpn);
if (dir <= 0) xp.left=x;
 else xp.right=x;
xp.next_=x;
x.parent=x.prev=xp;
if (xpn != null ) (xpn).prev=x;
C$.moveRootToFront$java_util_HashMap_NodeA$java_util_HashMap_TreeNode(tab, C$.balanceInsertion$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, x));
return null;
}}
});

Clazz_newMeth(C$, 'removeTreeNode$java_util_HashMap$java_util_HashMap_NodeA$Z',  function (map, tab, movable) {
var n;
if (tab == null  || (n=tab.length) == 0 ) return;
var index=(n - 1) & this.hash;
var first=tab[index];
var root=first;
var rl;
var succ=this.next_;
var pred=this.prev;
if (pred == null ) tab[index]=first=succ;
 else pred.next_=succ;
if (succ != null ) succ.prev=pred;
if (first == null ) return;
if (root.parent != null ) root=root.root$();
if (root == null  || root.right == null   || (rl=root.left) == null   || rl.left == null  ) {
tab[index]=first.untreeify$java_util_HashMap(map);
return;
}var p=this;
var pl=this.left;
var pr=this.right;
var replacement;
if (pl != null  && pr != null  ) {
var s=pr;
var sl;
while ((sl=s.left) != null )s=sl;

var c=s.red;
s.red=p.red;
p.red=c;
var sr=s.right;
var pp=p.parent;
if (s === pr ) {
p.parent=s;
s.right=p;
} else {
var sp=s.parent;
if ((p.parent=sp) != null ) {
if (s === sp.left ) sp.left=p;
 else sp.right=p;
}if ((s.right=pr) != null ) pr.parent=s;
}p.left=null;
if ((p.right=sr) != null ) sr.parent=p;
if ((s.left=pl) != null ) pl.parent=s;
if ((s.parent=pp) == null ) root=s;
 else if (p === pp.left ) pp.left=s;
 else pp.right=s;
if (sr != null ) replacement=sr;
 else replacement=p;
} else if (pl != null ) replacement=pl;
 else if (pr != null ) replacement=pr;
 else replacement=p;
if (replacement !== p ) {
var pp=replacement.parent=p.parent;
if (pp == null ) root=replacement;
 else if (p === pp.left ) pp.left=replacement;
 else pp.right=replacement;
p.left=p.right=p.parent=null;
}var r=p.red ? root : C$.balanceDeletion$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, replacement);
if (replacement === p ) {
var pp=p.parent;
p.parent=null;
if (pp != null ) {
if (p === pp.left ) pp.left=null;
 else if (p === pp.right ) pp.right=null;
}}if (movable) C$.moveRootToFront$java_util_HashMap_NodeA$java_util_HashMap_TreeNode(tab, r);
});

Clazz_newMeth(C$, 'split$java_util_HashMap$java_util_HashMap_NodeA$I$I',  function (map, tab, index, bit) {
var b=this;
var loHead=null;
var loTail=null;
var hiHead=null;
var hiTail=null;
var lc=0;
var hc=0;
for (var e=b, next; e != null ; e=next) {
next=e.next_;
e.next_=null;
if ((e.hash & bit) == 0) {
if ((e.prev=loTail) == null ) loHead=e;
 else loTail.next_=e;
loTail=e;
++lc;
} else {
if ((e.prev=hiTail) == null ) hiHead=e;
 else hiTail.next_=e;
hiTail=e;
++hc;
}}
if (loHead != null ) {
if (lc <= 6) tab[index]=loHead.untreeify$java_util_HashMap(map);
 else {
tab[index]=loHead;
if (hiHead != null ) loHead.treeify$java_util_HashMap_NodeA(tab);
}}if (hiHead != null ) {
if (hc <= 6) tab[index + bit]=hiHead.untreeify$java_util_HashMap(map);
 else {
tab[index + bit]=hiHead;
if (loHead != null ) hiHead.treeify$java_util_HashMap_NodeA(tab);
}}});

Clazz_newMeth(C$, 'rotateLeft$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode',  function (root, p) {
var r;
var pp;
var rl;
if (p != null  && (r=p.right) != null  ) {
if ((rl=p.right=r.left) != null ) rl.parent=p;
if ((pp=r.parent=p.parent) == null ) (root=r).red=false;
 else if (pp.left === p ) pp.left=r;
 else pp.right=r;
r.left=p;
p.parent=r;
}return root;
}, 1);

Clazz_newMeth(C$, 'rotateRight$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode',  function (root, p) {
var l;
var pp;
var lr;
if (p != null  && (l=p.left) != null  ) {
if ((lr=p.left=l.right) != null ) lr.parent=p;
if ((pp=l.parent=p.parent) == null ) (root=l).red=false;
 else if (pp.right === p ) pp.right=l;
 else pp.left=l;
l.right=p;
p.parent=l;
}return root;
}, 1);

Clazz_newMeth(C$, 'balanceInsertion$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode',  function (root, x) {
x.red=true;
for (var xp, xpp, xppl, xppr; ; ) {
if ((xp=x.parent) == null ) {
x.red=false;
return x;
} else if (!xp.red || (xpp=xp.parent) == null  ) return root;
if (xp === (xppl=xpp.left) ) {
if ((xppr=xpp.right) != null  && xppr.red ) {
xppr.red=false;
xp.red=false;
xpp.red=true;
x=xpp;
} else {
if (x === xp.right ) {
root=C$.rotateLeft$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, x=xp);
xpp=(xp=x.parent) == null  ? null : xp.parent;
}if (xp != null ) {
xp.red=false;
if (xpp != null ) {
xpp.red=true;
root=C$.rotateRight$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xpp);
}}}} else {
if (xppl != null  && xppl.red ) {
xppl.red=false;
xp.red=false;
xpp.red=true;
x=xpp;
} else {
if (x === xp.left ) {
root=C$.rotateRight$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, x=xp);
xpp=(xp=x.parent) == null  ? null : xp.parent;
}if (xp != null ) {
xp.red=false;
if (xpp != null ) {
xpp.red=true;
root=C$.rotateLeft$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xpp);
}}}}}
}, 1);

Clazz_newMeth(C$, 'balanceDeletion$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode',  function (root, x) {
for (var xp, xpl, xpr; ; ) {
if (x == null  || x === root  ) return root;
 else if ((xp=x.parent) == null ) {
x.red=false;
return x;
} else if (x.red) {
x.red=false;
return root;
} else if ((xpl=xp.left) === x ) {
if ((xpr=xp.right) != null  && xpr.red ) {
xpr.red=false;
xp.red=true;
root=C$.rotateLeft$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xp);
xpr=(xp=x.parent) == null  ? null : xp.right;
}if (xpr == null ) x=xp;
 else {
var sl=xpr.left;
var sr=xpr.right;
if ((sr == null  || !sr.red ) && (sl == null  || !sl.red ) ) {
xpr.red=true;
x=xp;
} else {
if (sr == null  || !sr.red ) {
if (sl != null ) sl.red=false;
xpr.red=true;
root=C$.rotateRight$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xpr);
xpr=(xp=x.parent) == null  ? null : xp.right;
}if (xpr != null ) {
xpr.red=(xp == null ) ? false : xp.red;
if ((sr=xpr.right) != null ) sr.red=false;
}if (xp != null ) {
xp.red=false;
root=C$.rotateLeft$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xp);
}x=root;
}}} else {
if (xpl != null  && xpl.red ) {
xpl.red=false;
xp.red=true;
root=C$.rotateRight$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xp);
xpl=(xp=x.parent) == null  ? null : xp.left;
}if (xpl == null ) x=xp;
 else {
var sl=xpl.left;
var sr=xpl.right;
if ((sl == null  || !sl.red ) && (sr == null  || !sr.red ) ) {
xpl.red=true;
x=xp;
} else {
if (sl == null  || !sl.red ) {
if (sr != null ) sr.red=false;
xpl.red=true;
root=C$.rotateLeft$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xpl);
xpl=(xp=x.parent) == null  ? null : xp.left;
}if (xpl != null ) {
xpl.red=(xp == null ) ? false : xp.red;
if ((sl=xpl.left) != null ) sl.red=false;
}if (xp != null ) {
xp.red=false;
root=C$.rotateRight$java_util_HashMap_TreeNode$java_util_HashMap_TreeNode(root, xp);
}x=root;
}}}}
}, 1);

Clazz_newMeth(C$, 'checkInvariants$java_util_HashMap_TreeNode',  function (t) {
var tp=t.parent;
var tl=t.left;
var tr=t.right;
var tb=t.prev;
var tn=t.next_;
if (tb != null  && tb.next_ !== t  ) return false;
if (tn != null  && tn.prev !== t  ) return false;
if (tp != null  && t !== tp.left   && t !== tp.right  ) return false;
if (tl != null  && (tl.parent !== t  || tl.hash > t.hash ) ) return false;
if (tr != null  && (tr.parent !== t  || tr.hash < t.hash ) ) return false;
if (t.red && tl != null   && tl.red  && tr != null   && tr.red ) return false;
if (tl != null  && !C$.checkInvariants$java_util_HashMap_TreeNode(tl) ) return false;
if (tr != null  && !C$.checkInvariants$java_util_HashMap_TreeNode(tr) ) return false;
return true;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.util.HashMap','java.util.LinkedHashMap','InternalError',['java.util.HashMap','.KeySpliterator']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "HashSet", null, 'java.util.AbstractSet', ['java.util.Set', 'Cloneable', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['map','java.util.HashMap']]
,['O',['PRESENT','java.lang.Object']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.map=Clazz_new_($I$(1,1));
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection',  function (c) {
Clazz_super_(C$, this);
this.map=Clazz_new_([Math.max(((c.size$() / 0.75)|0) + 1, 16)],$I$(1,1).c$$I);
this.addAll$java_util_Collection(c);
}, 1);

Clazz_newMeth(C$, 'c$$I$F',  function (initialCapacity, loadFactor) {
Clazz_super_(C$, this);
this.map=Clazz_new_($I$(1,1).c$$I$F,[initialCapacity, loadFactor]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialCapacity) {
Clazz_super_(C$, this);
this.map=Clazz_new_($I$(1,1).c$$I,[initialCapacity]);
}, 1);

Clazz_newMeth(C$, 'c$$I$F$Z',  function (initialCapacity, loadFactor, dummy) {
Clazz_super_(C$, this);
this.map=Clazz_new_($I$(2,1).c$$I$F,[initialCapacity, loadFactor]);
}, 1);

Clazz_newMeth(C$, 'iterator$',  function () {
return this.map.keySet$().iterator$();
});

Clazz_newMeth(C$, 'size$',  function () {
return this.map.size$();
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.map.isEmpty$();
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.map.containsKey$O(o);
});

Clazz_newMeth(C$, 'add$O',  function (e) {
return this.map.put$O$O(e, C$.PRESENT) == null ;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
return this.map.remove$O(o) === C$.PRESENT ;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.map.clear$();
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
var newSet=Clazz_clone(this);
newSet.map=this.map.clone$();
return newSet;
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(3,1).c$$Throwable,[e]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
s.defaultWriteObject$();
s.writeInt$I(this.map.capacity$());
s.writeFloat$F(this.map.loadFactor$());
s.writeInt$I(this.map.size$());
for (var e, $e = this.map.keySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) s.writeObject$O(e);

}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (s) {
s.defaultReadObject$();
var capacity=s.readInt$();
if (capacity < 0) {
throw Clazz_new_(Clazz_load('java.io.InvalidObjectException').c$$S,["Illegal capacity: " + capacity]);
}var loadFactor=s.readFloat$();
if (loadFactor <= 0  || Float.isNaN$F(loadFactor) ) {
throw Clazz_new_(Clazz_load('java.io.InvalidObjectException').c$$S,["Illegal load factor: " + new Float(loadFactor).toString()]);
}var size=s.readInt$();
if (size < 0) {
throw Clazz_new_(Clazz_load('java.io.InvalidObjectException').c$$S,["Illegal size: " + size]);
}capacity=(Math.min(size * Math.min(1 / loadFactor, 4.0), 1073741824)|0);
this.map=(Clazz_instanceOf((this), "java.util.LinkedHashSet") ? Clazz_new_($I$(2,1).c$$I$F,[capacity, loadFactor]) : Clazz_new_($I$(1,1).c$$I$F,[capacity, loadFactor]));
for (var i=0; i < size; i++) {
var e=s.readObject$();
this.map.put$O$O(e, C$.PRESENT);
}
}, p$1);

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(4,1).c$$java_util_HashMap$I$I$I$I,[this.map, 0, -1, 0, 0]);
});

C$.$static$=function(){C$.$static$=0;
C$.PRESENT= Clazz_new_();
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.util.Map','java.util.Objects',['java.util.Hashtable','.Entry'],'InternalError','StringBuilder','java.util.Collections',['java.util.Hashtable','.Enumerator'],['java.util.Hashtable','.KeySet'],['java.util.Hashtable','.EntrySet'],['java.util.Hashtable','.ValueCollection'],'java.util.HashMap']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Hashtable", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.Dictionary', ['java.util.Map', 'Cloneable', 'java.io.Serializable']);
C$.$classes$=[['KeySet',2],['EntrySet',2],['ValueCollection',2],['Entry',10],['Enumerator',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.秘allowJS=false;
this.modCount=0;
},1);

C$.$fields$=[['Z',['秘allowJS'],'F',['loadFactor'],'I',['count','threshold','modCount'],'O',['秘m','java.util.Map','table','java.util.Hashtable.Entry[]','keySet','java.util.Set','+entrySet','values','java.util.Collection']]]

Clazz_newMeth(C$, 'c$$I$F',  function (initialCapacity, loadFactor) {
Clazz_super_(C$, this);
if (initialCapacity < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal Capacity: " + initialCapacity]);
if (loadFactor <= 0  || Float.isNaN$F(loadFactor) ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal Load: " + new Float(loadFactor).toString()]);
if (initialCapacity == 0) initialCapacity=1;
this.loadFactor=loadFactor;
this.table=Clazz_array($I$(3), [initialCapacity]);
this.threshold=(Math.min(initialCapacity * loadFactor, 2147483640)|0);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialCapacity) {
C$.c$$I$F.apply(this, [initialCapacity, 0.75]);
this.秘allowJS=true;
this.秘setJS$();
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$F.apply(this, [11, 0.75]);
this.秘allowJS=true;
this.秘setJS$();
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map',  function (t) {
C$.c$$I$F.apply(this, [Math.max(2 * t.size$(), 11), 0.75]);
this.秘allowJS=(t.allowJS ||false);
this.putAll$java_util_Map(t);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return (this.秘m && this.秘m.size ||this.count);
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.size$() == 0;
});

Clazz_newMeth(C$, 'keys$',  function () {
return p$1.getEnumeration$I.apply(this, [0]);
});

Clazz_newMeth(C$, 'elements$',  function () {
return p$1.getEnumeration$I.apply(this, [1]);
});

Clazz_newMeth(C$, 'contains$O',  function (value) {
if (value == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}if (this.size$() == 0) return false;
if ($I$(1).秘isSimple$java_util_Map(this)) {
var m=this.秘m;

var iter = m.values(); for (var n = iter.next(); !n.done; n = iter.next()) { if (n.value == value || n.value.equals$O(value)) { return true; } }
} else {
var tab=this.table;
for (var i=tab.length; i-- > 0; ) {
for (var e=tab[i]; e != null ; e=e.next_) {
if (e.value.equals$O(value)) {
return true;
}}
}
}return false;
});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
return this.contains$O(value);
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return false;
case 3:
return true;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
for (var e=tab[index]; e != null ; e=e.next_) {
if ((e.hash == hash) && e.key.equals$O(key) ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'get$O',  function (key) {
if (key == null ) return null;
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:
var v=null;

v = this.秘m.get(key);
return v;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
for (var e=tab[index]; e != null ; e=e.next_) {
if ((e.hash == hash) && e.key.equals$O(key) ) {
return e.value;
}}
return null;
});

Clazz_newMeth(C$, 'rehash$',  function () {
var oldCapacity=this.table.length;
var oldMap=this.table;
var newCapacity=(oldCapacity << 1) + 1;
if (newCapacity - 2147483639 > 0) {
if (oldCapacity == 2147483639) return;
newCapacity=2147483639;
}var newMap=Clazz_array($I$(3), [newCapacity]);
++this.modCount;
this.threshold=(Math.min(newCapacity * this.loadFactor, 2147483640)|0);
this.table=newMap;
for (var i=oldCapacity; i-- > 0; ) {
for (var old=oldMap[i]; old != null ; ) {
var e=old;
old=old.next_;
var index=(e.hash & 2147483647) % newCapacity;
e.next_=newMap[index];
newMap[index]=e;
}
}
});

Clazz_newMeth(C$, 'addEntry$I$O$O$I',  function (hash, key, value, index) {
++this.modCount;
var tab=this.table;
if (this.count >= this.threshold) {
this.rehash$();
tab=this.table;
hash=key.hashCode$();
index=(hash & 2147483647) % tab.length;
}var e=tab[index];
tab[index]=Clazz_new_($I$(3,1).c$$I$O$O$java_util_Hashtable_Entry,[hash, key, value, e]);
++this.count;
}, p$1);

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
if (value == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:

this.秘m.set(key, value);
++this.modCount;
return null;
case 3:
var v0=null;

v0 = this.秘m.get(key); this.秘m.set(key, value);
++this.modCount;
return v0;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var entry=tab[index];
for (; entry != null ; entry=entry.next_) {
if ((entry.hash == hash) && entry.key.equals$O(key) ) {
var old=entry.value;
entry.value=value;
return old;
}}
p$1.addEntry$I$O$O$I.apply(this, [hash, key, value, index]);
return null;
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
if (key == null ) throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Hashtable key may not be null"]);
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:
var v0=null;

v0 = this.秘m.get(key); this.秘m["delete"](key);
++this.modCount;
return v0;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if ((e.hash == hash) && e.key.equals$O(key) ) {
++this.modCount;
if (prev != null ) {
prev.next_=e.next_;
} else {
tab[index]=e.next_;
}--this.count;
var oldValue=e.value;
e.value=null;
return oldValue;
}}
return null;
});

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (t) {
var key=null;
var value=null;
if ($I$(1).秘isSimple$java_util_Map(t)) {
var me=this;

t.秘m.forEach(function(value, key) {
me.put$O$O(key, value);

});
return;
}for (var e, $e = t.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) this.put$O$O(e.getKey$(), e.getValue$());

});

Clazz_newMeth(C$, 'clear$',  function () {
var tab=this.table;
++this.modCount;
if ($I$(1).秘isSimple$java_util_Map(this)) {

this.秘m.clear();
}this.秘setJS$();
for (var index=tab.length; --index >= 0; ) tab[index]=null;

this.count=0;
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
var t=Clazz_clone(this);
t.table=Clazz_array($I$(3), [this.table.length]);
for (var i=this.table.length; i-- > 0; ) {
t.table[i]=(this.table[i] != null ) ? this.table[i].clone$() : null;
}
t.keySet=null;
t.entrySet=null;
t.values=null;
t.modCount=0;
if ($I$(1).秘isSimple$java_util_Map(this)) {
t.秘setJS$();
var me=this;

me.秘m.forEach(function(value, key) { t.秘m.set(key, value); t.modCount++; });
} else {
t.秘m=null;
}return t;
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(4,1).c$$Throwable,[e]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'toString',  function () {
var max=this.size$() - 1;
if (max == -1) return "{}";
var sb=Clazz_new_($I$(5,1));
var it=this.entrySet$().iterator$();
sb.append$C("{");
for (var i=0; ; i++) {
var e=it.next$();
var key=e.getKey$();
var value=e.getValue$();
sb.append$S(key === this  ? "(this Map)" : key.toString());
sb.append$C("=");
sb.append$S(value === this  ? "(this Map)" : value.toString());
if (i == max) return sb.append$C("}").toString();
sb.append$S(", ");
}
});

Clazz_newMeth(C$, 'getEnumeration$I',  function (type) {
if (this.size$() == 0) {
return $I$(6).emptyEnumeration$();
} else {
return Clazz_new_($I$(7,1).c$$I$Z,[this, null, type, false]);
}}, p$1);

Clazz_newMeth(C$, 'getIterator$I',  function (type) {
if (this.size$() == 0) {
return $I$(6).emptyIterator$();
} else {
return Clazz_new_($I$(7,1).c$$I$Z,[this, null, type, true]);
}}, p$1);

Clazz_newMeth(C$, 'keySet$',  function () {
if (this.keySet == null ) this.keySet=Clazz_new_($I$(8,1),[this, null]);
return this.keySet;
});

Clazz_newMeth(C$, 'entrySet$',  function () {
if (this.entrySet == null ) this.entrySet=Clazz_new_($I$(9,1),[this, null]);
return this.entrySet;
});

Clazz_newMeth(C$, 'values$',  function () {
if (this.values == null ) this.values=Clazz_new_($I$(10,1),[this, null]);
return this.values;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) return true;
if (!(Clazz_instanceOf(o, "java.util.Map"))) return false;
var t=o;
if (t.size$() != this.size$()) return false;
try {
var i=this.entrySet$().iterator$();
while (i.hasNext$()){
var e=i.next$();
var key=e.getKey$();
var value=e.getValue$();
if (value == null ) {
if (!(t.get$O(key) == null  && t.containsKey$O(key) )) return false;
} else {
if (!value.equals$O(t.get$O(key))) return false;
}}
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"ClassCastException")){
var unused = e$$;
{
return false;
}
} else if (Clazz_exceptionOf(e$$,"NullPointerException")){
var unused = e$$;
{
return false;
}
} else {
throw e$$;
}
}
return true;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var h=0;
if (this.count == 0 || this.loadFactor < 0  ) return h;
this.loadFactor=-this.loadFactor;
var tab=this.table;
for (var entry, $entry = 0, $$entry = tab; $entry<$$entry.length&&((entry=($$entry[$entry])),1);$entry++) {
while (entry != null ){
h+=entry.hashCode$();
entry=entry.next_;
}
}
this.loadFactor=-this.loadFactor;
return h;
});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (key, defaultValue) {
var result=this.get$O(key);
return (null == result ) ? defaultValue : result;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.size$() == 0) return;
var expectedModCount=this.modCount;
if ($I$(1).秘isSimple$java_util_Map(this)) {
var m=this.秘m;

m.forEach(function(value,key){ action.accept$O$O(key, value); });
} else {
var tab=this.table;
for (var entry, $entry = 0, $$entry = tab; $entry<$$entry.length&&((entry=($$entry[$entry])),1);$entry++) {
while (entry != null ){
action.accept$O$O(entry.key, entry.value);
entry=entry.next_;
}
}
}if (expectedModCount != this.modCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function (f) {
$I$(2).requireNonNull$O(f);
if (this.size$() == 0) return;
var v;
var key=null;
var value=null;
var expectedModCount=this.modCount;
if ($I$(1).秘isSimple$java_util_Map(this)) {
var m=this.秘m;

m.forEach(function(value,key){
v=f.apply$O$O(key, value);
if (v == null ) throw Clazz_new_(Clazz_load('NullPointerException'));

m.set(key, value);
});
} else {
var tab=this.table;
for (var entry, $entry = 0, $$entry = tab; $entry<$$entry.length&&((entry=($$entry[$entry])),1);$entry++) {
while (entry != null ){
v=f.apply$O$O(entry.key, entry.value);
if (v == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
entry.value=v;
entry=entry.next_;
}
}
}if (expectedModCount != this.modCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
$I$(2).requireNonNull$O(value);
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:

this.秘m.set(key, value);
++this.modCount;
return null;
case 3:
var v0=null;

v0 = this.秘m.get(key);
return v0;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var entry=tab[index];
for (; entry != null ; entry=entry.next_) {
if ((entry.hash == hash) && entry.key.equals$O(key) ) {
var old=entry.value;
if (old == null ) {
entry.value=value;
}return old;
}}
p$1.addEntry$I$O$O$I.apply(this, [hash, key, value, index]);
return null;
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
$I$(2).requireNonNull$O(value);
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return false;
case 3:
if (!this.get$O(key).equals$O(value)) return false;

this.秘m["delete"](key);
++this.modCount;
return true;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if ((e.hash == hash) && e.key.equals$O(key) && e.value.equals$O(value)  ) {
++this.modCount;
if (prev != null ) {
prev.next_=e.next_;
} else {
tab[index]=e.next_;
}--this.count;
e.value=null;
return true;
}}
return false;
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
$I$(2).requireNonNull$O(oldValue);
$I$(2).requireNonNull$O(newValue);
var v=null;
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return false;
case 3:

v = this.秘m.get(key);
if (v == null  ? oldValue == null  : v.equals$O(oldValue)) {

this.秘m.set(key, newValue);
return true;
}return false;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (; e != null ; e=e.next_) {
if ((e.hash == hash) && e.key.equals$O(key) ) {
if (e.value.equals$O(oldValue)) {
e.value=newValue;
return true;
} else {
return false;
}}}
return false;
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:
var v=null;

v = this.秘m.get(key);
this.秘m.set(key, value);
return v;
}
$I$(2).requireNonNull$O(value);
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (; e != null ; e=e.next_) {
if ((e.hash == hash) && e.key.equals$O(key) ) {
var oldValue=e.value;
e.value=value;
return oldValue;
}}
return null;
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
$I$(2).requireNonNull$O(mappingFunction);
var v=null;
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
v=mappingFunction.apply$O(key);
if (v == null ) return null;
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 3:

v = this.秘m.get(key);
if (v != null ) return v;
case 2:
v=mappingFunction.apply$O(key);
if (v != null ) {

this.秘m.set(key, v);
}return v;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (; e != null ; e=e.next_) {
if (e.hash == hash && e.key.equals$O(key) ) {
return e.value;
}}
var newValue=mappingFunction.apply$O(key);
if (newValue != null ) {
p$1.addEntry$I$O$O$I.apply(this, [hash, key, newValue, index]);
}return newValue;
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
$I$(2).requireNonNull$O(remappingFunction);
var v=null;
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 2:
return null;
case 3:

v = this.秘m.get(key);
if (v != null ) {
v=remappingFunction.apply$O$O(key, v);
if (v == null ) {

this.秘m["delete"](key);
} else {

this.秘m.set(key, v);
}}return v;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if (e.hash == hash && e.key.equals$O(key) ) {
var newValue=remappingFunction.apply$O$O(key, e.value);
if (newValue == null ) {
++this.modCount;
if (prev != null ) {
prev.next_=e.next_;
} else {
tab[index]=e.next_;
}--this.count;
} else {
e.value=newValue;
}return newValue;
}}
return null;
});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
$I$(2).requireNonNull$O(remappingFunction);
var v=null;
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
v=remappingFunction.apply$O$O(key, null);
if (v == null ) return null;
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 3:

v = this.秘m.get(key);
if ((v=remappingFunction.apply$O$O(key, v)) == null ) {

this.秘m["delete"](key);
++this.modCount;
} else {

this.秘m.set(key, v);
}return v;
case 2:
if ((v=remappingFunction.apply$O$O(key, v)) != null ) {

this.秘m.set(key, v);
++this.modCount;
}return v;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if (e.hash == hash && $I$(2).equals$O$O(e.key, key) ) {
var newValue=remappingFunction.apply$O$O(key, e.value);
if (newValue == null ) {
++this.modCount;
if (prev != null ) {
prev.next_=e.next_;
} else {
tab[index]=e.next_;
}--this.count;
} else {
e.value=newValue;
}return newValue;
}}
var newValue=remappingFunction.apply$O$O(key, null);
if (newValue != null ) {
p$1.addEntry$I$O$O$I.apply(this, [hash, key, newValue, index]);
}return newValue;
});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
if (value == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (remappingFunction == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var v=null;
switch ($I$(1).秘hasKey$java_util_Map$O(this, key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this);
break;
case 3:

v = this.秘m.get(key);
value=remappingFunction.apply$O$O(v, value);
if (value == null ) {

this.秘m["delete"](key);
++this.modCount;
} else {

this.秘m.set(key, value);
}return value;
case 2:
value=remappingFunction.apply$O$O(null, value);
if (value != null ) this.put$O$O(key, value);
return value;
}
var tab=this.table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if (e.hash == hash && e.key.equals$O(key) ) {
var newValue=remappingFunction.apply$O$O(e.value, value);
if (newValue == null ) {
++this.modCount;
if (prev != null ) {
prev.next_=e.next_;
} else {
tab[index]=e.next_;
}--this.count;
} else {
e.value=newValue;
}return newValue;
}}
if (value != null ) {
p$1.addEntry$I$O$O$I.apply(this, [hash, key, value, index]);
}return value;
});

Clazz_newMeth(C$, '秘setJS$',  function () {
this.秘m=(this.秘allowJS && $I$(11).USE_SIMPLE  ? new Map() ||null : null);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Hashtable, "KeySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return p$1.getIterator$I.apply(this.b$['java.util.Hashtable'], [0]);
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.Hashtable'].size$.apply(this.b$['java.util.Hashtable'], []);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.Hashtable'].containsKey$O.apply(this.b$['java.util.Hashtable'], [o]);
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
return this.b$['java.util.Hashtable'].remove$O.apply(this.b$['java.util.Hashtable'], [o]) != null ;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.Hashtable'].clear$.apply(this.b$['java.util.Hashtable'], []);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Hashtable, "EntrySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return p$1.getIterator$I.apply(this.b$['java.util.Hashtable'], [2]);
});

Clazz_newMeth(C$, ['add$java_util_Map_Entry','add$O'],  function (o) {
return C$.superclazz.prototype.add$O.apply(this, [o]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var entry=o;
var key=entry.getKey$();
switch ($I$(1).秘hasKey$java_util_Map$O(this.b$['java.util.Hashtable'], key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this.b$['java.util.Hashtable']);
break;
case 3:
var value=entry.getValue$();
var v=this.b$['java.util.Hashtable'].get$O.apply(this.b$['java.util.Hashtable'], [key]);
return (value === v  || value != null  && value.equals$O(key)  );
case 2:
return false;
}
var tab=this.b$['java.util.Hashtable'].table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
for (var e=tab[index]; e != null ; e=e.next_) if (e.hash == hash && e.equals$O(entry) ) return true;

return false;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var entry=o;
var key=entry.getKey$();
switch ($I$(1).秘hasKey$java_util_Map$O(this.b$['java.util.Hashtable'], key)) {
case 0:
break;
case 1:
$I$(1).秘ensureJavaMap$java_util_Map(this.b$['java.util.Hashtable']);
break;
case 3:
var value=entry.getValue$();
if (value == null ) return false;
var v=this.b$['java.util.Hashtable'].get$O.apply(this.b$['java.util.Hashtable'], [key]);
if (v === value  || v.equals$O(value) ) {
this.b$['java.util.Hashtable'].remove$O.apply(this.b$['java.util.Hashtable'], [key]);
return true;
}return false;
case 2:
return false;
}
var tab=this.b$['java.util.Hashtable'].table;
var hash=key.hashCode$();
var index=(hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if (e.hash == hash && e.equals$O(entry) ) {
++this.b$['java.util.Hashtable'].modCount;
if (prev != null ) prev.next_=e.next_;
 else tab[index]=e.next_;
--this.b$['java.util.Hashtable'].count;
e.value=null;
return true;
}}
return false;
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.Hashtable'].size$.apply(this.b$['java.util.Hashtable'], []);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.Hashtable'].clear$.apply(this.b$['java.util.Hashtable'], []);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Hashtable, "ValueCollection", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractCollection');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return p$1.getIterator$I.apply(this.b$['java.util.Hashtable'], [1]);
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.Hashtable'].size$.apply(this.b$['java.util.Hashtable'], []);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.Hashtable'].containsValue$O.apply(this.b$['java.util.Hashtable'], [o]);
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.Hashtable'].clear$.apply(this.b$['java.util.Hashtable'], []);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Hashtable, "Entry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['hash'],'O',['key','<K>','value','<V>','next_','java.util.Hashtable.Entry']]]

Clazz_newMeth(C$, 'c$$I$O$O$java_util_Hashtable_Entry',  function (hash, key, value, next) {
;C$.$init$.apply(this);
this.hash=hash;
this.key=key;
this.value=value;
this.next_=next;
}, 1);

Clazz_newMeth(C$, 'clone$',  function () {
return Clazz_new_(C$.c$$I$O$O$java_util_Hashtable_Entry,[this.hash, this.key, this.value, (this.next_ == null  ? null : this.next_.clone$())]);
});

Clazz_newMeth(C$, 'getKey$',  function () {
return this.key;
});

Clazz_newMeth(C$, 'getValue$',  function () {
return this.value;
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
if (value == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var oldValue=this.value;
this.value=value;
return oldValue;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
return (this.key == null  ? e.getKey$() == null  : this.key.equals$O(e.getKey$())) && (this.value == null  ? e.getValue$() == null  : this.value.equals$O(e.getValue$())) ;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.hash ^ $I$(2).hashCode$O(this.value);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.key.toString() + "=" + this.value.toString() ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Hashtable, "Enumerator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, ['java.util.Enumeration', 'java.util.Iterator']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.table=this.b$['java.util.Hashtable'].table;
this.index=this.table.length;
},1);

C$.$fields$=[['Z',['isIterator'],'I',['index','type','expectedModCount'],'O',['table','java.util.Hashtable.Entry[]','next_','java.util.Hashtable.Entry','+current','jsMapIterator','java.util.Iterator']]]

Clazz_newMeth(C$, 'c$$I$Z',  function (type, iterator) {
;C$.$init$.apply(this);
this.type=type;
this.isIterator=iterator;
this.expectedModCount=this.b$['java.util.Hashtable'].modCount;
if ($I$(1).秘isSimple$java_util_Map(this.b$['java.util.Hashtable'])) {
var m=this.b$['java.util.Hashtable'].秘m;

this.jsMapIterator = m.entries();
this.next_ = this.jsMapIterator.next();
}}, 1);

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
if ($I$(1).秘isSimple$java_util_Map(this.b$['java.util.Hashtable'])) {
return this.next_ && !this.next_.done &&true;
} else {
var e=this.next_;
var i=this.index;
var t=this.table;
while (e == null  && i > 0 ){
e=t[--i];
}
this.next_=e;
this.index=i;
return e != null ;
}});

Clazz_newMeth(C$, 'nextElement$',  function () {
var node=this.next_;
if ($I$(1).秘isSimple$java_util_Map(this.b$['java.util.Hashtable'])) {
var t=this.type;
this.current=node;
this.next_=this.jsMapIterator.next() ||null;
if (node != null ) {
var k=null;
var v=null;
var done=false;

done = node.done;
if (!done) { if (t < 2) return node.value[t];
k = node.value[0];
v = node.value[1];
}
if (!done) {
return ((P$.Hashtable$Enumerator$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Hashtable$Enumerator$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load(['java.util.Hashtable','.Entry']), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'setValue$O',  function (value) {
var m=this.b$['java.util.Hashtable'].modCount;
var v=this.b$['java.util.Hashtable'].put$O$O.apply(this.b$['java.util.Hashtable'], [this.getKey$(), value]);
this.b$['java.util.Hashtable'].modCount=m;
return v;
});
})()
), Clazz_new_($I$(3,1).c$$I$O$O$java_util_Hashtable_Entry,[this, null, 0, k, v, null],P$.Hashtable$Enumerator$1));
}}} else {
var i=this.index;
var t=this.table;
while (node == null  && i > 0 ){
node=t[--i];
}
this.next_=node;
this.index=i;
if (node != null ) {
var e=this.current=this.next_;
this.next_=e.next_;
return this.type == 0 ? e.key : (this.type == 1 ? e.value : e);
}}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException').c$$S,["Hashtable Enumerator"]);
});

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.hasMoreElements$();
});

Clazz_newMeth(C$, 'next$',  function () {
if (this.b$['java.util.Hashtable'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return this.nextElement$();
});

Clazz_newMeth(C$, 'remove$',  function () {
if (!this.isIterator) throw Clazz_new_(Clazz_load('UnsupportedOperationException'));
var p=this.current;
if (p == null ) throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Hashtable Enumerator"]);
if (this.b$['java.util.Hashtable'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
if ($I$(1).秘isSimple$java_util_Map(this.b$['java.util.Hashtable'])) {
var key=null;

key = p.value[0];
this.b$['java.util.Hashtable'].remove$O.apply(this.b$['java.util.Hashtable'], [key]);
++this.expectedModCount;
} else {
{
var tab=this.b$['java.util.Hashtable'].table;
var index=(this.current.hash & 2147483647) % tab.length;
var e=tab[index];
for (var prev=null; e != null ; prev=e, e=e.next_) {
if (e === this.current ) {
++this.b$['java.util.Hashtable'].modCount;
++this.expectedModCount;
if (prev == null ) tab[index]=e.next_;
 else prev.next_=e.next_;
--this.b$['java.util.Hashtable'].count;
this.current=null;
return;
}}
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}}});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.util.IdentityHashMap',['java.util.IdentityHashMap','.EntryIterator','.Entry'],['java.util.IdentityHashMap','.KeyIterator'],'java.util.Objects','java.lang.reflect.Array',['java.util.IdentityHashMap','.KeySpliterator'],['java.util.IdentityHashMap','.ValueIterator'],['java.util.IdentityHashMap','.ValueSpliterator'],['java.util.IdentityHashMap','.EntryIterator'],['java.util.AbstractMap','.SimpleEntry'],['java.util.IdentityHashMap','.EntrySpliterator'],['java.util.AbstractMap','.SimpleImmutableEntry'],'InternalError',['java.util.IdentityHashMap','.KeySet'],['java.util.IdentityHashMap','.Values'],['java.util.IdentityHashMap','.EntrySet']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "IdentityHashMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractMap', ['java.util.Map', 'java.io.Serializable', 'Cloneable']);
C$.$classes$=[['IdentityHashMapIterator',1026],['KeyIterator',2],['ValueIterator',2],['EntryIterator',2],['KeySet',2],['Values',2],['EntrySet',2],['IdentityHashMapSpliterator',8],['KeySpliterator',24],['ValueSpliterator',24],['EntrySpliterator',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['size','modCount'],'O',['table','Object[]','entrySet','java.util.Set']]
,['O',['NULL_KEY','java.lang.Object']]]

Clazz_newMeth(C$, 'maskNull$O',  function (key) {
return (key == null  ? C$.NULL_KEY : key);
}, 1);

Clazz_newMeth(C$, 'unmaskNull$O',  function (key) {
return (key === C$.NULL_KEY  ? null : key);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
p$1.init$I.apply(this, [32]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (expectedMaxSize) {
Clazz_super_(C$, this);
if (expectedMaxSize < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["expectedMaxSize is negative: " + expectedMaxSize]);
p$1.init$I.apply(this, [C$.capacity$I(expectedMaxSize)]);
}, 1);

Clazz_newMeth(C$, 'capacity$I',  function (expectedMaxSize) {
return (expectedMaxSize > 178956970) ? 536870912 : (expectedMaxSize <= 2) ? 4 : Integer.highestOneBit$I(expectedMaxSize + (expectedMaxSize << 1));
}, 1);

Clazz_newMeth(C$, 'init$I',  function (initCapacity) {
this.table=Clazz_array(java.lang.Object, [2 * initCapacity]);
}, p$1);

Clazz_newMeth(C$, 'c$$java_util_Map',  function (m) {
C$.c$$I.apply(this, [(((1 + m.size$()) * 1.1)|0)]);
this.putAll$java_util_Map(m);
}, 1);

Clazz_newMeth(C$, 'size$',  function () {
return this.size;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.size == 0;
});

Clazz_newMeth(C$, 'hash$O$I',  function (x, length) {
var h=System.identityHashCode$O(x);
return ((h << 1) - (h << 8)) & (length - 1);
}, 1);

Clazz_newMeth(C$, 'nextKeyIndex$I$I',  function (i, len) {
return (i + 2 < len ? i + 2 : 0);
}, 1);

Clazz_newMeth(C$, 'get$O',  function (key) {
var k=C$.maskNull$O(key);
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
while (true){
var item=tab[i];
if (item === k ) return tab[i + 1];
if (item == null ) return null;
i=C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
var k=C$.maskNull$O(key);
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
while (true){
var item=tab[i];
if (item === k ) return true;
if (item == null ) return false;
i=C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
var tab=this.table;
for (var i=1; i < tab.length; i+=2) if (tab[i] === value  && tab[i - 1] != null  ) return true;

return false;
});

Clazz_newMeth(C$, 'containsMapping$O$O',  function (key, value) {
var k=C$.maskNull$O(key);
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
while (true){
var item=tab[i];
if (item === k ) return tab[i + 1] === value ;
if (item == null ) return false;
i=C$.nextKeyIndex$I$I(i, len);
}
}, p$1);

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
var k=C$.maskNull$O(key);
 retryAfterResize : for (; ; ) {
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
for (var item; (item=tab[i]) != null ; i=C$.nextKeyIndex$I$I(i, len)) {
if (item === k ) {
var oldValue=tab[i + 1];
tab[i + 1]=value;
return oldValue;
}}
var s=this.size + 1;
if (s + (s << 1) > len && p$1.resize$I.apply(this, [len]) ) continue retryAfterResize;
++this.modCount;
tab[i]=k;
tab[i + 1]=value;
this.size=s;
return null;
}
});

Clazz_newMeth(C$, 'resize$I',  function (newCapacity) {
var newLength=newCapacity * 2;
var oldTable=this.table;
var oldLength=oldTable.length;
if (oldLength == 1073741824) {
if (this.size == 536870911) throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Capacity exhausted."]);
return false;
}if (oldLength >= newLength) return false;
var newTable=Clazz_array(java.lang.Object, [newLength]);
for (var j=0; j < oldLength; j+=2) {
var key=oldTable[j];
if (key != null ) {
var value=oldTable[j + 1];
oldTable[j]=null;
oldTable[j + 1]=null;
var i=C$.hash$O$I(key, newLength);
while (newTable[i] != null )i=C$.nextKeyIndex$I$I(i, newLength);

newTable[i]=key;
newTable[i + 1]=value;
}}
this.table=newTable;
return true;
}, p$1);

Clazz_newMeth(C$, 'putAll$java_util_Map',  function (m) {
var n=m.size$();
if (n == 0) return;
if (n > this.size) p$1.resize$I.apply(this, [C$.capacity$I(n)]);
for (var e, $e = m.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) this.put$O$O(e.getKey$(), e.getValue$());

});

Clazz_newMeth(C$, 'remove$O',  function (key) {
var k=C$.maskNull$O(key);
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
while (true){
var item=tab[i];
if (item === k ) {
++this.modCount;
--this.size;
var oldValue=tab[i + 1];
tab[i + 1]=null;
tab[i]=null;
p$1.closeDeletion$I.apply(this, [i]);
return oldValue;
}if (item == null ) return null;
i=C$.nextKeyIndex$I$I(i, len);
}
});

Clazz_newMeth(C$, 'removeMapping$O$O',  function (key, value) {
var k=C$.maskNull$O(key);
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
while (true){
var item=tab[i];
if (item === k ) {
if (tab[i + 1] !== value ) return false;
++this.modCount;
--this.size;
tab[i]=null;
tab[i + 1]=null;
p$1.closeDeletion$I.apply(this, [i]);
return true;
}if (item == null ) return false;
i=C$.nextKeyIndex$I$I(i, len);
}
}, p$1);

Clazz_newMeth(C$, 'closeDeletion$I',  function (d) {
var tab=this.table;
var len=tab.length;
var item;
for (var i=C$.nextKeyIndex$I$I(d, len); (item=tab[i]) != null ; i=C$.nextKeyIndex$I$I(i, len)) {
var r=C$.hash$O$I(item, len);
if ((i < r && (r <= d || d <= i ) ) || (r <= d && d <= i ) ) {
tab[d]=item;
tab[d + 1]=tab[i + 1];
tab[i]=null;
tab[i + 1]=null;
d=i;
}}
}, p$1);

Clazz_newMeth(C$, 'clear$',  function () {
++this.modCount;
var tab=this.table;
for (var i=0; i < tab.length; i++) tab[i]=null;

this.size=0;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (o === this ) {
return true;
} else if (Clazz_instanceOf(o, "java.util.IdentityHashMap")) {
var m=o;
if (m.size$() != this.size) return false;
var tab=m.table;
for (var i=0; i < tab.length; i+=2) {
var k=tab[i];
if (k != null  && !p$1.containsMapping$O$O.apply(this, [k, tab[i + 1]]) ) return false;
}
return true;
} else if (Clazz_instanceOf(o, "java.util.Map")) {
var m=o;
return this.entrySet$().equals$O(m.entrySet$());
} else {
return false;
}});

Clazz_newMeth(C$, 'hashCode$',  function () {
var result=0;
var tab=this.table;
for (var i=0; i < tab.length; i+=2) {
var key=tab[i];
if (key != null ) {
var k=C$.unmaskNull$O(key);
result+=System.identityHashCode$O(k) ^ System.identityHashCode$O(tab[i + 1]);
}}
return result;
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
var m=C$.superclazz.prototype.clone$.apply(this, []);
m.entrySet=null;
m.table=this.table.clone$();
return m;
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(13,1).c$$Throwable,[e]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'keySet$',  function () {
var ks=this.keySet;
if (ks != null ) return ks;
 else return this.keySet=Clazz_new_($I$(14,1),[this, null]);
});

Clazz_newMeth(C$, 'values$',  function () {
var vs=this.values;
if (vs != null ) return vs;
 else return this.values=Clazz_new_($I$(15,1),[this, null]);
});

Clazz_newMeth(C$, 'entrySet$',  function () {
var es=this.entrySet;
if (es != null ) return es;
 else return this.entrySet=Clazz_new_($I$(16,1),[this, null]);
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
s.defaultWriteObject$();
s.writeInt$I(this.size);
var tab=this.table;
for (var i=0; i < tab.length; i+=2) {
var key=tab[i];
if (key != null ) {
s.writeObject$O(C$.unmaskNull$O(key));
s.writeObject$O(tab[i + 1]);
}}
}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (s) {
s.defaultReadObject$();
var size=s.readInt$();
if (size < 0) throw Clazz_new_(Clazz_load('java.io.StreamCorruptedException').c$$S,["Illegal mappings count: " + size]);
p$1.init$I.apply(this, [C$.capacity$I(size)]);
for (var i=0; i < size; i++) {
var key=s.readObject$();
var value=s.readObject$();
p$1.putForCreate$O$O.apply(this, [key, value]);
}
}, p$1);

Clazz_newMeth(C$, 'putForCreate$O$O',  function (key, value) {
var k=C$.maskNull$O(key);
var tab=this.table;
var len=tab.length;
var i=C$.hash$O$I(k, len);
var item;
while ((item=tab[i]) != null ){
if (item === k ) throw Clazz_new_(Clazz_load('java.io.StreamCorruptedException'));
i=C$.nextKeyIndex$I$I(i, len);
}
tab[i]=k;
tab[i + 1]=value;
}, p$1);

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
$I$(4).requireNonNull$O(action);
var expectedModCount=this.modCount;
var t=this.table;
for (var index=0; index < t.length; index+=2) {
var k=t[index];
if (k != null ) {
action.accept$O$O(C$.unmaskNull$O(k), t[index + 1]);
}if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}}
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
$I$(4).requireNonNull$O($function);
var expectedModCount=this.modCount;
var t=this.table;
for (var index=0; index < t.length; index+=2) {
var k=t[index];
if (k != null ) {
t[index + 1]=$function.apply$O$O(C$.unmaskNull$O(k), t[index + 1]);
}if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}}
});

C$.$static$=function(){C$.$static$=0;
C$.NULL_KEY= Clazz_new_();
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "IdentityHashMapIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.index=(this.b$['java.util.IdentityHashMap'].size != 0 ? 0 : this.b$['java.util.IdentityHashMap'].table.length);
this.expectedModCount=this.b$['java.util.IdentityHashMap'].modCount;
this.lastReturnedIndex=-1;
this.traversalTable=this.b$['java.util.IdentityHashMap'].table;
},1);

C$.$fields$=[['Z',['indexValid'],'I',['index','expectedModCount','lastReturnedIndex'],'O',['traversalTable','Object[]']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
var tab=this.traversalTable;
for (var i=this.index; i < tab.length; i+=2) {
var key=tab[i];
if (key != null ) {
this.index=i;
return this.indexValid=true;
}}
this.index=tab.length;
return false;
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
if (this.b$['java.util.IdentityHashMap'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
if (!this.indexValid && !this.hasNext$() ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.indexValid=false;
this.lastReturnedIndex=this.index;
this.index+=2;
return this.lastReturnedIndex;
});

Clazz_newMeth(C$, 'remove$',  function () {
if (this.lastReturnedIndex == -1) throw Clazz_new_(Clazz_load('IllegalStateException'));
if (this.b$['java.util.IdentityHashMap'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.expectedModCount=++this.b$['java.util.IdentityHashMap'].modCount;
var deletedSlot=this.lastReturnedIndex;
this.lastReturnedIndex=-1;
this.index=deletedSlot;
this.indexValid=false;
var tab=this.traversalTable;
var len=tab.length;
var d=deletedSlot;
var key=tab[d];
tab[d]=null;
tab[d + 1]=null;
if (tab !== this.b$['java.util.IdentityHashMap'].table ) {
this.b$['java.util.IdentityHashMap'].remove$O.apply(this.b$['java.util.IdentityHashMap'], [key]);
this.expectedModCount=this.b$['java.util.IdentityHashMap'].modCount;
return;
}--this.b$['java.util.IdentityHashMap'].size;
var item;
for (var i=$I$(1).nextKeyIndex$I$I(d, len); (item=tab[i]) != null ; i=$I$(1).nextKeyIndex$I$I(i, len)) {
var r=$I$(1).hash$O$I(item, len);
if ((i < r && (r <= d || d <= i ) ) || (r <= d && d <= i ) ) {
if (i < deletedSlot && d >= deletedSlot  && this.traversalTable === this.b$['java.util.IdentityHashMap'].table  ) {
var remaining=len - deletedSlot;
var newTable=Clazz_array(java.lang.Object, [remaining]);
System.arraycopy$O$I$O$I$I(tab, deletedSlot, newTable, 0, remaining);
this.traversalTable=newTable;
this.index=0;
}tab[d]=item;
tab[d + 1]=tab[i + 1];
tab[i]=null;
tab[i + 1]=null;
d=i;
}}
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "KeyIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.IdentityHashMap','.IdentityHashMapIterator']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
return $I$(1,"unmaskNull$O",[this.traversalTable[this.nextIndex$()]]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "ValueIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.IdentityHashMap','.IdentityHashMapIterator']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
return this.traversalTable[this.nextIndex$() + 1];
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "EntryIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.IdentityHashMap','.IdentityHashMapIterator']);
C$.$classes$=[['Entry',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['lastReturnedEntry','java.util.IdentityHashMap.EntryIterator.Entry']]]

Clazz_newMeth(C$, 'next$',  function () {
this.lastReturnedEntry=Clazz_new_([this, null, this.nextIndex$()],$I$(2,1).c$$I);
return this.lastReturnedEntry;
});

Clazz_newMeth(C$, 'remove$',  function () {
this.lastReturnedIndex=((null == this.lastReturnedEntry ) ? -1 : this.lastReturnedEntry.index);
C$.superclazz.prototype.remove$.apply(this, []);
this.lastReturnedEntry.index=this.lastReturnedIndex;
this.lastReturnedEntry=null;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap.EntryIterator, "Entry", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, [['java.util.Map','java.util.Map.Entry']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index']]]

Clazz_newMeth(C$, 'c$$I',  function (index) {
;C$.$init$.apply(this);
this.index=index;
}, 1);

Clazz_newMeth(C$, 'getKey$',  function () {
p$1.checkIndexForEntryUse.apply(this, []);
return $I$(1).unmaskNull$O(this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index]);
});

Clazz_newMeth(C$, 'getValue$',  function () {
p$1.checkIndexForEntryUse.apply(this, []);
return this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index + 1];
});

Clazz_newMeth(C$, 'setValue$O',  function (value) {
p$1.checkIndexForEntryUse.apply(this, []);
var oldValue=this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index + 1];
this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index + 1]=value;
if (this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable !== this.b$['java.util.IdentityHashMap'].table ) this.b$['java.util.IdentityHashMap'].put$O$O.apply(this.b$['java.util.IdentityHashMap'], [this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index], value]);
return oldValue;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
if (this.index < 0) return C$.superclazz.prototype.equals$O.apply(this, [o]);
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
return (e.getKey$() === $I$(1).unmaskNull$O(this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index])  && e.getValue$() === this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index + 1]  );
});

Clazz_newMeth(C$, 'hashCode$',  function () {
if (this.b$['java.util.IdentityHashMap.EntryIterator'].lastReturnedIndex < 0) return C$.superclazz.prototype.hashCode$.apply(this, []);
return (System.identityHashCode$O($I$(1).unmaskNull$O(this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index])) ^ System.identityHashCode$O(this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index + 1]));
});

Clazz_newMeth(C$, 'toString',  function () {
if (this.index < 0) return C$.superclazz.prototype.toString.apply(this, []);
return ($I$(1).unmaskNull$O(this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index]) + "=" + this.b$['java.util.IdentityHashMap.EntryIterator'].traversalTable[this.index + 1] );
});

Clazz_newMeth(C$, 'checkIndexForEntryUse',  function () {
if (this.index < 0) throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Entry was removed"]);
}, p$1);

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "KeySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(3,1),[this, null]);
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.IdentityHashMap'].size;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.IdentityHashMap'].containsKey$O.apply(this.b$['java.util.IdentityHashMap'], [o]);
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
var oldSize=this.b$['java.util.IdentityHashMap'].size;
this.b$['java.util.IdentityHashMap'].remove$O.apply(this.b$['java.util.IdentityHashMap'], [o]);
return this.b$['java.util.IdentityHashMap'].size != oldSize;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
$I$(4).requireNonNull$O(c);
var modified=false;
for (var i=this.iterator$(); i.hasNext$(); ) {
if (c.contains$O(i.next$())) {
i.remove$();
modified=true;
}}
return modified;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.IdentityHashMap'].clear$.apply(this.b$['java.util.IdentityHashMap'], []);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var result=0;
for (var key, $key = this.iterator$(); $key.hasNext$()&&((key=($key.next$())),1);) result+=System.identityHashCode$O(key);

return result;
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.toArray$OA(Clazz_array(java.lang.Object, [0]));
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var expectedModCount=this.b$['java.util.IdentityHashMap'].modCount;
var size=this.size$();
if (a.length < size) a=Clazz_array(a.getClass$().getComponentType$(), size);
var tab=this.b$['java.util.IdentityHashMap'].table;
var ti=0;
for (var si=0; si < tab.length; si+=2) {
var key;
if ((key=tab[si]) != null ) {
if (ti >= size) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}a[ti++]=$I$(1).unmaskNull$O(key);
}}
if (ti < size || expectedModCount != this.b$['java.util.IdentityHashMap'].modCount ) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}if (ti < a.length) {
a[ti]=null;
}return a;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(6,1).c$$java_util_IdentityHashMap$I$I$I$I,[this.b$['java.util.IdentityHashMap'], 0, -1, 0, 0]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "Values", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractCollection');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(7,1),[this, null]);
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.IdentityHashMap'].size;
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.IdentityHashMap'].containsValue$O.apply(this.b$['java.util.IdentityHashMap'], [o]);
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
for (var i=this.iterator$(); i.hasNext$(); ) {
if (i.next$() === o ) {
i.remove$();
return true;
}}
return false;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.IdentityHashMap'].clear$.apply(this.b$['java.util.IdentityHashMap'], []);
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.toArray$OA(Clazz_array(java.lang.Object, [0]));
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var expectedModCount=this.b$['java.util.IdentityHashMap'].modCount;
var size=this.size$();
if (a.length < size) a=Clazz_array(a.getClass$().getComponentType$(), size);
var tab=this.b$['java.util.IdentityHashMap'].table;
var ti=0;
for (var si=0; si < tab.length; si+=2) {
if (tab[si] != null ) {
if (ti >= size) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}a[ti++]=tab[si + 1];
}}
if (ti < size || expectedModCount != this.b$['java.util.IdentityHashMap'].modCount ) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}if (ti < a.length) {
a[ti]=null;
}return a;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(8,1).c$$java_util_IdentityHashMap$I$I$I$I,[this.b$['java.util.IdentityHashMap'], 0, -1, 0, 0]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "EntrySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(9,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var entry=o;
return p$1.containsMapping$O$O.apply(this.b$['java.util.IdentityHashMap'], [entry.getKey$(), entry.getValue$()]);
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var entry=o;
return p$1.removeMapping$O$O.apply(this.b$['java.util.IdentityHashMap'], [entry.getKey$(), entry.getValue$()]);
});

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.IdentityHashMap'].size;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.IdentityHashMap'].clear$.apply(this.b$['java.util.IdentityHashMap'], []);
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
$I$(4).requireNonNull$O(c);
var modified=false;
for (var i=this.iterator$(); i.hasNext$(); ) {
if (c.contains$O(i.next$())) {
i.remove$();
modified=true;
}}
return modified;
});

Clazz_newMeth(C$, 'toArray$',  function () {
return this.toArray$OA(Clazz_array(java.lang.Object, [0]));
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
var expectedModCount=this.b$['java.util.IdentityHashMap'].modCount;
var size=this.size$();
if (a.length < size) a=Clazz_array(a.getClass$().getComponentType$(), size);
var tab=this.b$['java.util.IdentityHashMap'].table;
var ti=0;
for (var si=0; si < tab.length; si+=2) {
var key;
if ((key=tab[si]) != null ) {
if (ti >= size) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}a[ti++]=Clazz_new_([$I$(1).unmaskNull$O(key), tab[si + 1]],$I$(10,1).c$$O$O);
}}
if (ti < size || expectedModCount != this.b$['java.util.IdentityHashMap'].modCount ) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}if (ti < a.length) {
a[ti]=null;
}return a;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(11,1).c$$java_util_IdentityHashMap$I$I$I$I,[this.b$['java.util.IdentityHashMap'], 0, -1, 0, 0]);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "IdentityHashMapSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index','fence','est','expectedModCount'],'O',['map','java.util.IdentityHashMap']]]

Clazz_newMeth(C$, 'c$$java_util_IdentityHashMap$I$I$I$I',  function (map, origin, fence, est, expectedModCount) {
;C$.$init$.apply(this);
this.map=map;
this.index=origin;
this.fence=fence;
this.est=est;
this.expectedModCount=expectedModCount;
}, 1);

Clazz_newMeth(C$, 'getFence$',  function () {
var hi;
if ((hi=this.fence) < 0) {
this.est=this.map.size;
this.expectedModCount=this.map.modCount;
hi=this.fence=this.map.table.length;
}return hi;
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
this.getFence$();
return this.est;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "KeySpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.IdentityHashMap','.IdentityHashMapSpliterator'], 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_IdentityHashMap$I$I$I$I',  function (map, origin, fence, est, expectedModCount) {
;C$.superclazz.c$$java_util_IdentityHashMap$I$I$I$I.apply(this,[map, origin, fence, est, expectedModCount]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'trySplit$',  function () {
var hi=this.getFence$();
var lo=this.index;
var mid=((lo + hi) >>> 1) & ~1;
return (lo >= mid) ? null : Clazz_new_(C$.c$$java_util_IdentityHashMap$I$I$I$I,[this.map, lo, this.index=mid, this.est>>>=1, this.expectedModCount]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var i;
var hi;
var mc;
var key;
var m;
var a;
if ((m=this.map) != null  && (a=m.table) != null   && (i=this.index) >= 0  && (this.index=hi=this.getFence$()) <= a.length ) {
for (; i < hi; i+=2) {
if ((key=a[i]) != null ) action.accept$O($I$(1).unmaskNull$O(key));
}
if (m.modCount == this.expectedModCount) return;
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var a=this.map.table;
var hi=this.getFence$();
while (this.index < hi){
var key=a[this.index];
this.index+=2;
if (key != null ) {
action.accept$O($I$(1).unmaskNull$O(key));
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}}
return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return (this.fence < 0 || this.est == this.map.size  ? 64 : 0) | 1;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "ValueSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.IdentityHashMap','.IdentityHashMapSpliterator'], 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_IdentityHashMap$I$I$I$I',  function (m, origin, fence, est, expectedModCount) {
;C$.superclazz.c$$java_util_IdentityHashMap$I$I$I$I.apply(this,[m, origin, fence, est, expectedModCount]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'trySplit$',  function () {
var hi=this.getFence$();
var lo=this.index;
var mid=((lo + hi) >>> 1) & ~1;
return (lo >= mid) ? null : Clazz_new_(C$.c$$java_util_IdentityHashMap$I$I$I$I,[this.map, lo, this.index=mid, this.est>>>=1, this.expectedModCount]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var i;
var hi;
var mc;
var m;
var a;
if ((m=this.map) != null  && (a=m.table) != null   && (i=this.index) >= 0  && (this.index=hi=this.getFence$()) <= a.length ) {
for (; i < hi; i+=2) {
if (a[i] != null ) {
var v=a[i + 1];
action.accept$O(v);
}}
if (m.modCount == this.expectedModCount) return;
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var a=this.map.table;
var hi=this.getFence$();
while (this.index < hi){
var key=a[this.index];
var v=a[this.index + 1];
this.index+=2;
if (key != null ) {
action.accept$O(v);
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}}
return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return (this.fence < 0 || this.est == this.map.size  ? 64 : 0);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.IdentityHashMap, "EntrySpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.IdentityHashMap','.IdentityHashMapSpliterator'], 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_util_IdentityHashMap$I$I$I$I',  function (m, origin, fence, est, expectedModCount) {
;C$.superclazz.c$$java_util_IdentityHashMap$I$I$I$I.apply(this,[m, origin, fence, est, expectedModCount]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'trySplit$',  function () {
var hi=this.getFence$();
var lo=this.index;
var mid=((lo + hi) >>> 1) & ~1;
return (lo >= mid) ? null : Clazz_new_(C$.c$$java_util_IdentityHashMap$I$I$I$I,[this.map, lo, this.index=mid, this.est>>>=1, this.expectedModCount]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var i;
var hi;
var mc;
var m;
var a;
if ((m=this.map) != null  && (a=m.table) != null   && (i=this.index) >= 0  && (this.index=hi=this.getFence$()) <= a.length ) {
for (; i < hi; i+=2) {
var key=a[i];
if (key != null ) {
var k=$I$(1).unmaskNull$O(key);
var v=a[i + 1];
action.accept$O(Clazz_new_($I$(12,1).c$$O$O,[k, v]));
}}
if (m.modCount == this.expectedModCount) return;
}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var a=this.map.table;
var hi=this.getFence$();
while (this.index < hi){
var key=a[this.index];
var v=a[this.index + 1];
this.index+=2;
if (key != null ) {
var k=$I$(1).unmaskNull$O(key);
action.accept$O(Clazz_new_($I$(12,1).c$$O$O,[k, v]));
if (this.map.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}}
return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return (this.fence < 0 || this.est == this.map.size  ? 64 : 0) | 1;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:35 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Iterator");
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'remove$',  function () {
throw Clazz_new_(Clazz_load('UnsupportedOperationException').c$$S,["remove"]);
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
while (this.hasNext$())action.accept$O(this.next$());

});
};})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,['java.util.LinkedHashMap','.LinkedKeyIterator'],'java.util.Map','java.util.HashMap','java.util.Spliterators',['java.util.LinkedHashMap','.LinkedValueIterator'],['java.util.LinkedHashMap','.LinkedEntryIterator'],['java.util.LinkedHashMap','.Entry'],['java.util.HashMap','.TreeNode'],['java.util.LinkedHashMap','.LinkedKeySet'],['java.util.LinkedHashMap','.LinkedValues'],['java.util.LinkedHashMap','.LinkedEntrySet']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "LinkedHashMap", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.HashMap', 'java.util.Map');
C$.$classes$=[['Entry',8],['LinkedKeySet',16],['LinkedValues',16],['LinkedEntrySet',16],['LinkedHashIterator',1024],['LinkedKeyIterator',16],['LinkedValueIterator',16],['LinkedEntryIterator',16]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['accessOrder'],'O',['head','java.util.LinkedHashMap.Entry','+tail']]]

Clazz_newMeth(C$, 'linkNodeLast$java_util_LinkedHashMap_Entry',  function (p) {
var last=this.tail;
this.tail=p;
if (last == null ) this.head=p;
 else {
p.before=last;
last.after=p;
}}, p$1);

Clazz_newMeth(C$, 'transferLinks$java_util_LinkedHashMap_Entry$java_util_LinkedHashMap_Entry',  function (src, dst) {
var b=dst.before=src.before;
var a=dst.after=src.after;
if (b == null ) this.head=dst;
 else b.after=dst;
if (a == null ) this.tail=dst;
 else a.before=dst;
}, p$1);

Clazz_newMeth(C$, 'reinitialize$',  function () {
C$.superclazz.prototype.reinitialize$.apply(this, []);
this.head=this.tail=null;
});

Clazz_newMeth(C$, 'newNode$I$O$O$java_util_HashMap_Node',  function (hash, key, value, e) {
var p=Clazz_new_($I$(7,1).c$$I$O$O$java_util_HashMap_Node,[hash, key, value, e]);
p$1.linkNodeLast$java_util_LinkedHashMap_Entry.apply(this, [p]);
return p;
});

Clazz_newMeth(C$, 'replacementNode$java_util_HashMap_Node$java_util_HashMap_Node',  function (p, next) {
var q=p;
var t=Clazz_new_($I$(7,1).c$$I$O$O$java_util_HashMap_Node,[q.hash, q.key, q.value, next]);
p$1.transferLinks$java_util_LinkedHashMap_Entry$java_util_LinkedHashMap_Entry.apply(this, [q, t]);
return t;
});

Clazz_newMeth(C$, 'newTreeNode$I$O$O$java_util_HashMap_Node',  function (hash, key, value, next) {
var p=Clazz_new_($I$(8,1).c$$I$O$O$java_util_HashMap_Node,[hash, key, value, next]);
p$1.linkNodeLast$java_util_LinkedHashMap_Entry.apply(this, [p]);
return p;
});

Clazz_newMeth(C$, 'replacementTreeNode$java_util_HashMap_Node$java_util_HashMap_Node',  function (p, next) {
var q=p;
var t=Clazz_new_($I$(8,1).c$$I$O$O$java_util_HashMap_Node,[q.hash, q.key, q.value, next]);
p$1.transferLinks$java_util_LinkedHashMap_Entry$java_util_LinkedHashMap_Entry.apply(this, [q, t]);
return t;
});

Clazz_newMeth(C$, 'afterNodeRemoval$java_util_HashMap_Node',  function (e) {
var p=e;
var b=p.before;
var a=p.after;
p.before=p.after=null;
if (b == null ) this.head=a;
 else b.after=a;
if (a == null ) this.tail=b;
 else a.before=b;
});

Clazz_newMeth(C$, 'afterNodeInsertion$Z',  function (evict) {
var first;
if (evict && (first=this.head) != null   && this.removeEldestEntry$java_util_Map_Entry(first) ) {
var key=first.key;
this.removeNode$I$O$O$Z$Z$I($I$(3).hash$O(key), key, null, false, true, 0);
}});

Clazz_newMeth(C$, 'afterNodeAccess$java_util_HashMap_Node',  function (e) {
var last;
if (this.accessOrder && (last=this.tail) !== e  ) {
var p=e;
var b=p.before;
var a=p.after;
p.after=null;
if (b == null ) this.head=a;
 else b.after=a;
if (a != null ) a.before=b;
 else last=b;
if (last == null ) this.head=p;
 else {
p.before=last;
last.after=p;
}this.tail=p;
++this.modCount;
}});

Clazz_newMeth(C$, 'internalWriteEntries$java_io_ObjectOutputStream',  function (s) {
for (var e=this.head; e != null ; e=e.after) {
s.writeObject$O(e.key);
s.writeObject$O(e.value);
}
});

Clazz_newMeth(C$, 'c$$I$F',  function (initialCapacity, loadFactor) {
;C$.superclazz.c$$I$F.apply(this,[initialCapacity, loadFactor]);C$.$init$.apply(this);
this.accessOrder=false;
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialCapacity) {
;C$.superclazz.c$$I.apply(this,[initialCapacity]);C$.$init$.apply(this);
this.accessOrder=false;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.accessOrder=false;
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Map',  function (m) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.accessOrder=false;
this.putMapEntries$java_util_Map$Z(m, false);
}, 1);

Clazz_newMeth(C$, 'c$$I$F$Z',  function (initialCapacity, loadFactor, accessOrder) {
;C$.superclazz.c$$I$F.apply(this,[initialCapacity, loadFactor]);C$.$init$.apply(this);
this.accessOrder=accessOrder;
}, 1);

Clazz_newMeth(C$, 'containsValue$O',  function (value) {
for (var e=this.head; e != null ; e=e.after) {
var v=e.value;
if (v === value  || (value != null  && value.equals$O(v) ) ) return true;
}
return false;
});

Clazz_newMeth(C$, 'get$O',  function (key) {
var e;
if ((e=this.getNode$I$O($I$(3).hash$O(key), key)) == null ) return null;
if (this.accessOrder) this.afterNodeAccess$java_util_HashMap_Node(e);
return e.value;
});

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (key, defaultValue) {
var e;
if ((e=this.getNode$I$O($I$(3).hash$O(key), key)) == null ) return defaultValue;
if (this.accessOrder) this.afterNodeAccess$java_util_HashMap_Node(e);
return e.value;
});

Clazz_newMeth(C$, 'clear$',  function () {
C$.superclazz.prototype.clear$.apply(this, []);
this.head=this.tail=null;
});

Clazz_newMeth(C$, 'removeEldestEntry$java_util_Map_Entry',  function (eldest) {
return false;
});

Clazz_newMeth(C$, 'keySet$',  function () {
var ks;
return (ks=this.keySet) == null  ? (this.keySet=Clazz_new_($I$(9,1),[this, null])) : ks;
});

Clazz_newMeth(C$, 'values$',  function () {
var vs;
return (vs=this.values) == null  ? (this.values=Clazz_new_($I$(10,1),[this, null])) : vs;
});

Clazz_newMeth(C$, 'entrySet$',  function () {
var es;
return (es=this.entrySet) == null  ? (this.entrySet=Clazz_new_($I$(11,1),[this, null])) : es;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var mc=this.modCount;
for (var e=this.head; e != null ; e=e.after) action.accept$O$O(e.key, e.value);

if (this.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
if ($function == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var mc=this.modCount;
for (var e=this.head; e != null ; e=e.after) e.value=$function.apply$O$O(e.key, e.value);

if (this.modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, '秘setJS$',  function () {
this.秘m=null;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "Entry", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.util.HashMap','.Node']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['before','java.util.LinkedHashMap.Entry','+after']]]

Clazz_newMeth(C$, 'c$$I$O$O$java_util_HashMap_Node',  function (hash, key, value, next) {
;C$.superclazz.c$$I$O$O$java_util_HashMap_Node.apply(this,[hash, key, value, next]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedKeySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.LinkedHashMap'].size;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.LinkedHashMap'].clear$.apply(this.b$['java.util.LinkedHashMap'], []);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(1,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.HashMap'].containsKey$O.apply(this.b$['java.util.HashMap'], [o]);
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
switch ($I$(2).秘hasKey$java_util_Map$O(this.b$['java.util.LinkedHashMap'], key)) {
case 3:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [3, key, null, false, true, 3]) != null ;
default:
case 1:
case 2:
return false;
case 0:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(3).hash$O(key), key, null, false, true, 0]) != null ;
}
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(4).spliterator$java_util_Collection$I(this, 81);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var mc=this.b$['java.util.LinkedHashMap'].modCount;
for (var e=this.b$['java.util.LinkedHashMap'].head; e != null ; e=e.after) action.accept$O(e.key);

if (this.b$['java.util.LinkedHashMap'].modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedValues", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractCollection');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.LinkedHashMap'].size;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.LinkedHashMap'].clear$.apply(this.b$['java.util.LinkedHashMap'], []);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(5,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.b$['java.util.LinkedHashMap'].containsValue$O.apply(this.b$['java.util.LinkedHashMap'], [o]);
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(4).spliterator$java_util_Collection$I(this, 80);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var mc=this.b$['java.util.LinkedHashMap'].modCount;
for (var e=this.b$['java.util.LinkedHashMap'].head; e != null ; e=e.after) action.accept$O(e.value);

if (this.b$['java.util.LinkedHashMap'].modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedEntrySet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'java.util.AbstractSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'size$',  function () {
return this.b$['java.util.LinkedHashMap'].size;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.b$['java.util.LinkedHashMap'].clear$.apply(this.b$['java.util.LinkedHashMap'], []);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(6,1),[this, null]);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
if (!(Clazz_instanceOf(o, "java.util.Map.Entry"))) return false;
var e=o;
var key=e.getKey$();
var candidate=this.b$['java.util.HashMap'].getNode$I$O.apply(this.b$['java.util.HashMap'], [$I$(3).hash$O(key), key]);
return candidate != null  && candidate.equals$O(e) ;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (Clazz_instanceOf(o, "java.util.Map.Entry")) {
var e=o;
var key=e.getKey$();
var value=e.getValue$();
switch ($I$(2).秘hasKey$java_util_Map$O(this.b$['java.util.LinkedHashMap'], key)) {
case 3:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [3, key, value, true, true, 3]) != null ;
case 1:
case 2:
return false;
case 0:
return this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(3).hash$O(key), key, value, true, true, 0]) != null ;
}
}return false;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(4).spliterator$java_util_Collection$I(this, 81);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var mc=this.b$['java.util.LinkedHashMap'].modCount;
for (var e=this.b$['java.util.LinkedHashMap'].head; e != null ; e=e.after) action.accept$O(e);

if (this.b$['java.util.LinkedHashMap'].modCount != mc) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedHashIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['expectedModCount'],'O',['nextItem','java.util.LinkedHashMap.Entry','+current']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.nextItem=this.b$['java.util.LinkedHashMap'].head;
this.expectedModCount=this.b$['java.util.LinkedHashMap'].modCount;
this.current=null;
}, 1);

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.nextItem != null ;
});

Clazz_newMeth(C$, 'nextNode$',  function () {
var e=this.nextItem;
if (this.b$['java.util.LinkedHashMap'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
if (e == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.current=e;
this.nextItem=e.after;
return e;
});

Clazz_newMeth(C$, 'remove$',  function () {
var p=this.current;
if (p == null ) throw Clazz_new_(Clazz_load('IllegalStateException'));
if (this.b$['java.util.LinkedHashMap'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
this.current=null;
var key=p.key;
this.b$['java.util.HashMap'].removeNode$I$O$O$Z$Z$I.apply(this.b$['java.util.HashMap'], [$I$(3).hash$O(key), key, null, false, false, 0]);
this.expectedModCount=this.b$['java.util.LinkedHashMap'].modCount;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedKeyIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.LinkedHashMap','.LinkedHashIterator'], 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
return this.nextNode$().getKey$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedValueIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.LinkedHashMap','.LinkedHashIterator'], 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
return this.nextNode$().value;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedHashMap, "LinkedEntryIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.LinkedHashMap','.LinkedHashIterator'], 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'next$',  function () {
return this.nextNode$();
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.util.Objects',['java.util.LinkedList','.ListItr'],'java.util.Spliterators',['java.util.LinkedList','.Node'],['java.util.LinkedList','.DescendingIterator'],'InternalError','java.lang.reflect.Array',['java.util.LinkedList','.LLSpliterator']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "LinkedList", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractSequentialList', ['java.util.List', 'java.util.Deque', 'Cloneable', 'java.io.Serializable']);
C$.$classes$=[['ListItr',2],['Node',10],['DescendingIterator',2],['LLSpliterator',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.size=0;
},1);

C$.$fields$=[['I',['size'],'O',['first','java.util.LinkedList.Node','+last']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection',  function (c) {
C$.c$.apply(this, []);
this.addAll$java_util_Collection(c);
}, 1);

Clazz_newMeth(C$, 'linkFirst$O',  function (e) {
var f=this.first;
var newNode=Clazz_new_($I$(4,1).c$$java_util_LinkedList_Node$O$java_util_LinkedList_Node,[null, e, f]);
this.first=newNode;
if (f == null ) this.last=newNode;
 else f.prev=newNode;
++this.size;
++this.modCount;
}, p$1);

Clazz_newMeth(C$, 'linkLast$O',  function (e) {
var l=this.last;
var newNode=Clazz_new_($I$(4,1).c$$java_util_LinkedList_Node$O$java_util_LinkedList_Node,[l, e, null]);
this.last=newNode;
if (l == null ) this.first=newNode;
 else l.next_=newNode;
++this.size;
++this.modCount;
});

Clazz_newMeth(C$, 'linkBefore$O$java_util_LinkedList_Node',  function (e, succ) {
var pred=succ.prev;
var newNode=Clazz_new_($I$(4,1).c$$java_util_LinkedList_Node$O$java_util_LinkedList_Node,[pred, e, succ]);
succ.prev=newNode;
if (pred == null ) this.first=newNode;
 else pred.next_=newNode;
++this.size;
++this.modCount;
});

Clazz_newMeth(C$, 'unlinkFirst$java_util_LinkedList_Node',  function (f) {
var element=f.item;
var next=f.next_;
f.item=null;
f.next_=null;
this.first=next;
if (next == null ) this.last=null;
 else next.prev=null;
--this.size;
++this.modCount;
return element;
}, p$1);

Clazz_newMeth(C$, 'unlinkLast$java_util_LinkedList_Node',  function (l) {
var element=l.item;
var prev=l.prev;
l.item=null;
l.prev=null;
this.last=prev;
if (prev == null ) this.first=null;
 else prev.next_=null;
--this.size;
++this.modCount;
return element;
}, p$1);

Clazz_newMeth(C$, 'unlink$java_util_LinkedList_Node',  function (x) {
var element=x.item;
var next=x.next_;
var prev=x.prev;
if (prev == null ) {
this.first=next;
} else {
prev.next_=next;
x.prev=null;
}if (next == null ) {
this.last=prev;
} else {
next.prev=prev;
x.next_=null;
}x.item=null;
--this.size;
++this.modCount;
return element;
});

Clazz_newMeth(C$, 'getFirst$',  function () {
var f=this.first;
if (f == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
return f.item;
});

Clazz_newMeth(C$, 'getLast$',  function () {
var l=this.last;
if (l == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
return l.item;
});

Clazz_newMeth(C$, 'removeFirst$',  function () {
var f=this.first;
if (f == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
return p$1.unlinkFirst$java_util_LinkedList_Node.apply(this, [f]);
});

Clazz_newMeth(C$, 'removeLast$',  function () {
var l=this.last;
if (l == null ) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
return p$1.unlinkLast$java_util_LinkedList_Node.apply(this, [l]);
});

Clazz_newMeth(C$, 'addFirst$O',  function (e) {
p$1.linkFirst$O.apply(this, [e]);
});

Clazz_newMeth(C$, 'addLast$O',  function (e) {
this.linkLast$O(e);
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.indexOf$O(o) != -1;
});

Clazz_newMeth(C$, 'size$',  function () {
return this.size;
});

Clazz_newMeth(C$, 'add$O',  function (e) {
this.linkLast$O(e);
return true;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
if (o == null ) {
for (var x=this.first; x != null ; x=x.next_) {
if (x.item == null ) {
this.unlink$java_util_LinkedList_Node(x);
return true;
}}
} else {
for (var x=this.first; x != null ; x=x.next_) {
if (o.equals$O(x.item)) {
this.unlink$java_util_LinkedList_Node(x);
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (c) {
return this.addAll$I$java_util_Collection(this.size, c);
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
p$1.checkPositionIndex$I.apply(this, [index]);
var a=c.toArray$();
var numNew=a.length;
if (numNew == 0) return false;
var pred;
var succ;
if (index == this.size) {
succ=null;
pred=this.last;
} else {
succ=this.node$I(index);
pred=succ.prev;
}for (var o, $o = 0, $$o = a; $o<$$o.length&&((o=($$o[$o])),1);$o++) {
var e=o;
var newNode=Clazz_new_($I$(4,1).c$$java_util_LinkedList_Node$O$java_util_LinkedList_Node,[pred, e, null]);
if (pred == null ) this.first=newNode;
 else pred.next_=newNode;
pred=newNode;
}
if (succ == null ) {
this.last=pred;
} else {
pred.next_=succ;
succ.prev=pred;
}this.size+=numNew;
++this.modCount;
return true;
});

Clazz_newMeth(C$, 'clear$',  function () {
for (var x=this.first; x != null ; ) {
var next=x.next_;
x.item=null;
x.next_=null;
x.prev=null;
x=next;
}
this.first=this.last=null;
this.size=0;
++this.modCount;
});

Clazz_newMeth(C$, 'get$I',  function (index) {
p$1.checkElementIndex$I.apply(this, [index]);
return this.node$I(index).item;
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
p$1.checkElementIndex$I.apply(this, [index]);
var x=this.node$I(index);
var oldVal=x.item;
x.item=element;
return oldVal;
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
p$1.checkPositionIndex$I.apply(this, [index]);
if (index == this.size) this.linkLast$O(element);
 else this.linkBefore$O$java_util_LinkedList_Node(element, this.node$I(index));
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
p$1.checkElementIndex$I.apply(this, [index]);
return this.unlink$java_util_LinkedList_Node(this.node$I(index));
});

Clazz_newMeth(C$, 'isElementIndex$I',  function (index) {
return index >= 0 && index < this.size ;
}, p$1);

Clazz_newMeth(C$, 'isPositionIndex$I',  function (index) {
return index >= 0 && index <= this.size ;
}, p$1);

Clazz_newMeth(C$, 'outOfBoundsMsg$I',  function (index) {
return "Index: " + index + ", Size: " + this.size ;
}, p$1);

Clazz_newMeth(C$, 'checkElementIndex$I',  function (index) {
if (!p$1.isElementIndex$I.apply(this, [index])) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'checkPositionIndex$I',  function (index) {
if (!p$1.isPositionIndex$I.apply(this, [index])) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[p$1.outOfBoundsMsg$I.apply(this, [index])]);
}, p$1);

Clazz_newMeth(C$, 'node$I',  function (index) {
if (index < (this.size >> 1)) {
var x=this.first;
for (var i=0; i < index; i++) x=x.next_;

return x;
} else {
var x=this.last;
for (var i=this.size - 1; i > index; i--) x=x.prev;

return x;
}});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
var index=0;
if (o == null ) {
for (var x=this.first; x != null ; x=x.next_) {
if (x.item == null ) return index;
++index;
}
} else {
for (var x=this.first; x != null ; x=x.next_) {
if (o.equals$O(x.item)) return index;
++index;
}
}return -1;
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
var index=this.size;
if (o == null ) {
for (var x=this.last; x != null ; x=x.prev) {
--index;
if (x.item == null ) return index;
}
} else {
for (var x=this.last; x != null ; x=x.prev) {
--index;
if (o.equals$O(x.item)) return index;
}
}return -1;
});

Clazz_newMeth(C$, 'peek$',  function () {
var f=this.first;
return (f == null ) ? null : f.item;
});

Clazz_newMeth(C$, 'element$',  function () {
return this.getFirst$();
});

Clazz_newMeth(C$, 'poll$',  function () {
var f=this.first;
return (f == null ) ? null : p$1.unlinkFirst$java_util_LinkedList_Node.apply(this, [f]);
});

Clazz_newMeth(C$, 'remove$',  function () {
return this.removeFirst$();
});

Clazz_newMeth(C$, 'offer$O',  function (e) {
return this.add$O(e);
});

Clazz_newMeth(C$, 'offerFirst$O',  function (e) {
this.addFirst$O(e);
return true;
});

Clazz_newMeth(C$, 'offerLast$O',  function (e) {
this.addLast$O(e);
return true;
});

Clazz_newMeth(C$, 'peekFirst$',  function () {
var f=this.first;
return (f == null ) ? null : f.item;
});

Clazz_newMeth(C$, 'peekLast$',  function () {
var l=this.last;
return (l == null ) ? null : l.item;
});

Clazz_newMeth(C$, 'pollFirst$',  function () {
var f=this.first;
return (f == null ) ? null : p$1.unlinkFirst$java_util_LinkedList_Node.apply(this, [f]);
});

Clazz_newMeth(C$, 'pollLast$',  function () {
var l=this.last;
return (l == null ) ? null : p$1.unlinkLast$java_util_LinkedList_Node.apply(this, [l]);
});

Clazz_newMeth(C$, 'push$O',  function (e) {
this.addFirst$O(e);
});

Clazz_newMeth(C$, 'pop$',  function () {
return this.removeFirst$();
});

Clazz_newMeth(C$, 'removeFirstOccurrence$O',  function (o) {
return this.remove$O(o);
});

Clazz_newMeth(C$, 'removeLastOccurrence$O',  function (o) {
if (o == null ) {
for (var x=this.last; x != null ; x=x.prev) {
if (x.item == null ) {
this.unlink$java_util_LinkedList_Node(x);
return true;
}}
} else {
for (var x=this.last; x != null ; x=x.prev) {
if (o.equals$O(x.item)) {
this.unlink$java_util_LinkedList_Node(x);
return true;
}}
}return false;
});

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
p$1.checkPositionIndex$I.apply(this, [index]);
return Clazz_new_($I$(2,1).c$$I,[this, null, index]);
});

Clazz_newMeth(C$, 'descendingIterator$',  function () {
return Clazz_new_($I$(5,1),[this, null]);
});

Clazz_newMeth(C$, 'superClone',  function () {
try {
return Clazz_clone(this);
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(6,1).c$$Throwable,[e]);
} else {
throw e;
}
}
}, p$1);

Clazz_newMeth(C$, 'clone$',  function () {
var clone=p$1.superClone.apply(this, []);
clone.first=clone.last=null;
clone.size=0;
clone.modCount=0;
for (var x=this.first; x != null ; x=x.next_) clone.add$O(x.item);

return clone;
});

Clazz_newMeth(C$, 'toArray$',  function () {
var result=Clazz_array(java.lang.Object, [this.size]);
var i=0;
for (var x=this.first; x != null ; x=x.next_) result[i++]=x.item;

return result;
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
if (a.length < this.size) a=Clazz_array(a.getClass$().getComponentType$(), this.size);
var i=0;
var result=a;
for (var x=this.first; x != null ; x=x.next_) result[i++]=x.item;

if (a.length > this.size) a[this.size]=null;
return a;
});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
s.defaultWriteObject$();
s.writeInt$I(this.size);
for (var x=this.first; x != null ; x=x.next_) s.writeObject$O(x.item);

}, p$1);

Clazz_newMeth(C$, 'readObject$java_io_ObjectInputStream',  function (s) {
s.defaultReadObject$();
var size=s.readInt$();
for (var i=0; i < size; i++) this.linkLast$O(s.readObject$());

}, p$1);

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(8,1).c$$java_util_LinkedList$I$I,[this, -1, 0]);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedList, "ListItr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.ListIterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.expectedModCount=this.b$['java.util.LinkedList'].modCount;
},1);

C$.$fields$=[['I',['nextIndex','expectedModCount'],'O',['lastReturned','java.util.LinkedList.Node','+next']]]

Clazz_newMeth(C$, 'c$$I',  function (index) {
;C$.$init$.apply(this);
this.next=(index == this.b$['java.util.LinkedList'].size) ? null : this.b$['java.util.LinkedList'].node$I.apply(this.b$['java.util.LinkedList'], [index]);
this.nextIndex=index;
}, 1);

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.nextIndex < this.b$['java.util.LinkedList'].size;
});

Clazz_newMeth(C$, 'next$',  function () {
this.checkForComodification$();
if (!this.hasNext$()) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.lastReturned=this.next;
this.next=this.next.next_;
++this.nextIndex;
return this.lastReturned.item;
});

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.nextIndex > 0;
});

Clazz_newMeth(C$, 'previous$',  function () {
this.checkForComodification$();
if (!this.hasPrevious$()) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.lastReturned=this.next=(this.next == null ) ? this.b$['java.util.LinkedList'].last : this.next.prev;
--this.nextIndex;
return this.lastReturned.item;
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.nextIndex;
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.nextIndex - 1;
});

Clazz_newMeth(C$, 'remove$',  function () {
this.checkForComodification$();
if (this.lastReturned == null ) throw Clazz_new_(Clazz_load('IllegalStateException'));
var lastNext=this.lastReturned.next_;
this.b$['java.util.LinkedList'].unlink$java_util_LinkedList_Node.apply(this.b$['java.util.LinkedList'], [this.lastReturned]);
if (this.next === this.lastReturned ) this.next=lastNext;
 else --this.nextIndex;
this.lastReturned=null;
++this.expectedModCount;
});

Clazz_newMeth(C$, 'set$O',  function (e) {
if (this.lastReturned == null ) throw Clazz_new_(Clazz_load('IllegalStateException'));
this.checkForComodification$();
this.lastReturned.item=e;
});

Clazz_newMeth(C$, 'add$O',  function (e) {
this.checkForComodification$();
this.lastReturned=null;
if (this.next == null ) this.b$['java.util.LinkedList'].linkLast$O.apply(this.b$['java.util.LinkedList'], [e]);
 else this.b$['java.util.LinkedList'].linkBefore$O$java_util_LinkedList_Node.apply(this.b$['java.util.LinkedList'], [e, this.next]);
++this.nextIndex;
++this.expectedModCount;
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
while (this.b$['java.util.LinkedList'].modCount == this.expectedModCount && this.nextIndex < this.b$['java.util.LinkedList'].size ){
action.accept$O(this.next.item);
this.lastReturned=this.next;
this.next=this.next.next_;
++this.nextIndex;
}
this.checkForComodification$();
});

Clazz_newMeth(C$, 'checkForComodification$',  function () {
if (this.b$['java.util.LinkedList'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedList, "Node", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['item','<E>','next_','java.util.LinkedList.Node','+prev']]]

Clazz_newMeth(C$, 'c$$java_util_LinkedList_Node$O$java_util_LinkedList_Node',  function (prev, element, next) {
;C$.$init$.apply(this);
this.item=element;
this.next_=next;
this.prev=prev;
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedList, "DescendingIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.itr=Clazz_new_([this, null, this.b$['java.util.LinkedList'].size$.apply(this.b$['java.util.LinkedList'], [])],$I$(2,1).c$$I);
},1);

C$.$fields$=[['O',['itr','java.util.LinkedList.ListItr']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.itr.hasPrevious$();
});

Clazz_newMeth(C$, 'next$',  function () {
return this.itr.previous$();
});

Clazz_newMeth(C$, 'remove$',  function () {
this.itr.remove$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.LinkedList, "LLSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['est','expectedModCount','batch'],'O',['list','java.util.LinkedList','current','java.util.LinkedList.Node']]]

Clazz_newMeth(C$, 'c$$java_util_LinkedList$I$I',  function (list, est, expectedModCount) {
;C$.$init$.apply(this);
this.list=list;
this.est=est;
this.expectedModCount=expectedModCount;
}, 1);

Clazz_newMeth(C$, 'getEst$',  function () {
var s;
var lst;
if ((s=this.est) < 0) {
if ((lst=this.list) == null ) s=this.est=0;
 else {
this.expectedModCount=lst.modCount;
this.current=lst.first;
s=this.est=lst.size;
}}return s;
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
return this.getEst$();
});

Clazz_newMeth(C$, 'trySplit$',  function () {
var p;
var s=this.getEst$();
if (s > 1 && (p=this.current) != null  ) {
var n=this.batch + 1024;
if (n > s) n=s;
if (n > 33554432) n=33554432;
var a=Clazz_array(java.lang.Object, [n]);
var j=0;
do {
a[j++]=p.item;
} while ((p=p.next_) != null  && j < n );
this.current=p;
this.batch=j;
this.est=s - j;
return $I$(3).spliterator$OA$I$I$I(a, 0, j, 16);
}return null;
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
var p;
var n;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if ((n=this.getEst$()) > 0 && (p=this.current) != null  ) {
this.current=null;
this.est=0;
do {
var e=p.item;
p=p.next_;
action.accept$O(e);
} while (p != null  && --n > 0 );
}if (this.list.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
var p;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (this.getEst$() > 0 && (p=this.current) != null  ) {
--this.est;
var e=p.item;
this.current=p.next_;
action.accept$O(e);
if (this.list.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}return false;
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return 16464;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects','java.util.Arrays','java.util.Spliterators','java.util.ImmutableCollections',['java.util.ImmutableCollections','.List12'],['java.util.ImmutableCollections','.ListN']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "List", null, null, 'java.util.Collection');

C$.$clinit$=2;

Clazz_newMeth(C$, 'of$',  function () {
return $I$(4).emptyList$();
}, 1);

Clazz_newMeth(C$, 'of$O',  function (e1) {
return Clazz_new_($I$(5,1).c$$O,[e1]);
}, 1);

Clazz_newMeth(C$, 'of$O$O',  function (e1, e2) {
return Clazz_new_($I$(5,1).c$$O$O,[e1, e2]);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O',  function (e1, e2, e3) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O',  function (e1, e2, e3, e4) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O',  function (e1, e2, e3, e4, e5) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7, e8) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7, e8])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7, e8, e9) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7, e8, e9])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7, e8, e9, e10) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7, e8, e9, e10])],$I$(6,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$OA',  function (elements) {
switch (elements.length) {
case 0:
return $I$(4).emptyList$();
case 1:
return Clazz_new_($I$(5,1).c$$O,[elements[0]]);
case 2:
return Clazz_new_($I$(5,1).c$$O$O,[elements[0], elements[1]]);
default:
return Clazz_new_($I$(6,1).c$$OA,[elements]);
}
}, 1);

Clazz_newMeth(C$, 'copyOf$java_util_Collection',  function (coll) {
return $I$(4).listCopy$java_util_Collection(coll);
}, 1);
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
$I$(1).requireNonNull$O(operator);
var li=this.listIterator$();
while (li.hasNext$()){
li.set$O(operator.apply$O(li.next$()));
}
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
var a=this.toArray$();
$I$(2).sort$OA$java_util_Comparator(a, c);
var i=this.listIterator$();
for (var e, $e = 0, $$e = a; $e<$$e.length&&((e=($$e[$e])),1);$e++) {
i.next$();
i.set$O(e);
}
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(3).spliterator$java_util_Collection$I(this, 16);
});
};})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ListIterator", null, null, 'java.util.Iterator');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.util.HashMap','java.util.Locale','sun.util.locale.InternalLocaleBuilder','sun.util.locale.ParseStatus','sun.util.locale.LanguageTag','sun.util.locale.LocaleMatcher',['java.util.Locale','.Cache'],'sun.util.locale.BaseLocale',['java.util.Locale','.LocaleKey'],['java.util.Locale','.Category'],'java.util.PropertyPermission','sun.util.locale.provider.LocaleServiceProviderPool','sun.util.locale.LocaleExtensions','java.util.Collections','StringBuilder','java.util.spi.LocaleNameProvider',['java.util.Locale','.LocaleNameGetter'],'sun.util.locale.provider.LocaleProviderAdapter','java.util.ArrayList','java.util.Arrays','java.text.MessageFormat','InternalError','java.util.StringTokenizer','sun.util.locale.LocaleUtils',['java.util.Locale','.FilteringMode']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Locale", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['Cloneable', 'java.io.Serializable']);
C$.$classes$=[['Cache',10],['LocaleKey',26],['LocaleNameGetter',10],['Category',25],['Builder',25],['FilteringMode',25],['LanguageRange',25]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.hashCodeValue=0;
},1);

C$.$fields$=[['I',['hashCodeValue'],'S',['str','languageTag'],'O',['baseLocale','sun.util.locale.BaseLocale','localeExtensions','sun.util.locale.LocaleExtensions']]
,['O',['LOCALECACHE','java.util.Locale.Cache','ENGLISH','java.util.Locale','+FRENCH','+GERMAN','+ITALIAN','+JAPANESE','+KOREAN','+CHINESE','+SIMPLIFIED_CHINESE','+TRADITIONAL_CHINESE','+FRANCE','+GERMANY','+ITALY','+JAPAN','+KOREA','+CHINA','+PRC','+TAIWAN','+UK','+US','+CANADA','+CANADA_FRENCH','+ROOT','+defaultLocale','+defaultDisplayLocale','+defaultFormatLocale','isoLanguages','String[]','+isoCountries']]]

Clazz_newMeth(C$, 'c$$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions',  function (baseLocale, extensions) {
;C$.$init$.apply(this);
this.baseLocale=baseLocale;
this.localeExtensions=extensions;
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S',  function (language, country, variant) {
;C$.$init$.apply(this);
if (language == null  || country == null   || variant == null  ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}this.baseLocale=$I$(8,"getInstance$S$S$S$S",[C$.convertOldISOCodes$S(language), "", country, variant]);
this.localeExtensions=C$.getCompatibilityExtensions$S$S$S$S(language, "", country, variant);
}, 1);

Clazz_newMeth(C$, 'c$$S$S',  function (language, country) {
C$.c$$S$S$S.apply(this, [language, country, ""]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (language) {
C$.c$$S$S$S.apply(this, [language, "", ""]);
}, 1);

Clazz_newMeth(C$, 'createConstant$S$S',  function (lang, country) {
var base=$I$(8).createInstance$S$S(lang, country);
return C$.getInstance$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(base, null);
}, 1);

Clazz_newMeth(C$, 'getInstance$S$S$S',  function (language, country, variant) {
return C$.getInstance$S$S$S$S$sun_util_locale_LocaleExtensions(language, "", country, variant, null);
}, 1);

Clazz_newMeth(C$, 'getInstance$S$S$S$S$sun_util_locale_LocaleExtensions',  function (language, script, country, variant, extensions) {
if (language == null  || script == null   || country == null   || variant == null  ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}if (extensions == null ) {
extensions=C$.getCompatibilityExtensions$S$S$S$S(language, script, country, variant);
}var baseloc=$I$(8).getInstance$S$S$S$S(language, script, country, variant);
return C$.getInstance$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(baseloc, extensions);
}, 1);

Clazz_newMeth(C$, 'getInstance$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions',  function (baseloc, extensions) {
var key=Clazz_new_($I$(9,1).c$$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions,[baseloc, extensions]);
return C$.LOCALECACHE.get$java_util_Locale_LocaleKey(key);
}, 1);

Clazz_newMeth(C$, 'getDefault$',  function () {
return C$.defaultLocale;
}, 1);

Clazz_newMeth(C$, 'getDefault$java_util_Locale_Category',  function (category) {
switch (category) {
case $I$(10).DISPLAY:
if (C$.defaultDisplayLocale == null ) {
{
if (C$.defaultDisplayLocale == null ) {
C$.defaultDisplayLocale=C$.initDefault$java_util_Locale_Category(category);
}}}return C$.defaultDisplayLocale;
case $I$(10).FORMAT:
if (C$.defaultFormatLocale == null ) {
{
if (C$.defaultFormatLocale == null ) {
C$.defaultFormatLocale=C$.initDefault$java_util_Locale_Category(category);
}}}return C$.defaultFormatLocale;
default:
Clazz_assert(C$, this, function(){return false}, function(){return "Unknown Category"});
}
return C$.getDefault$();
}, 1);

Clazz_newMeth(C$, 'initDefault$',  function () {
var language;
var region;
var script;
var country;
var variant;
language=System.getProperty$S$S("user.language", "en");
region=System.getProperty$S("user.region");
if (region != null ) {
var i=region.indexOf$I("_");
if (i >= 0) {
country=region.substring$I$I(0, i);
variant=region.substring$I(i + 1);
} else {
country=region;
variant="";
}script="";
} else {
script=System.getProperty$S$S("user.script", "");
country=System.getProperty$S$S("user.country", "");
variant=System.getProperty$S$S("user.variant", "");
}return C$.getInstance$S$S$S$S$sun_util_locale_LocaleExtensions(language, script, country, variant, null);
}, 1);

Clazz_newMeth(C$, 'initDefault$java_util_Locale_Category',  function (category) {
return C$.getInstance$S$S$S$S$sun_util_locale_LocaleExtensions(System.getProperty$S$S(category.languageKey, C$.defaultLocale.getLanguage$()), System.getProperty$S$S(category.scriptKey, C$.defaultLocale.getScript$()), System.getProperty$S$S(category.countryKey, C$.defaultLocale.getCountry$()), System.getProperty$S$S(category.variantKey, C$.defaultLocale.getVariant$()), null);
}, 1);

Clazz_newMeth(C$, 'setDefault$java_util_Locale',  function (newLocale) {
C$.setDefault$java_util_Locale_Category$java_util_Locale($I$(10).DISPLAY, newLocale);
C$.setDefault$java_util_Locale_Category$java_util_Locale($I$(10).FORMAT, newLocale);
C$.defaultLocale=newLocale;
}, 1);

Clazz_newMeth(C$, 'setDefault$java_util_Locale_Category$java_util_Locale',  function (category, newLocale) {
if (category == null ) throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Category cannot be NULL"]);
if (newLocale == null ) throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Can\'t set default locale to NULL"]);
var sm=System.getSecurityManager$();
if (sm != null ) sm.checkPermission$java_security_Permission(Clazz_new_($I$(11,1).c$$S$S,["user.language", "write"]));
switch (category) {
case $I$(10).DISPLAY:
C$.defaultDisplayLocale=newLocale;
break;
case $I$(10).FORMAT:
C$.defaultFormatLocale=newLocale;
break;
default:
Clazz_assert(C$, this, function(){return false}, function(){return "Unknown Category"});
}
}, 1);

Clazz_newMeth(C$, 'getAvailableLocales$',  function () {
return $I$(12).getAllAvailableLocales$();
}, 1);

Clazz_newMeth(C$, 'getISOCountries$',  function () {
if (C$.isoCountries == null ) {
C$.isoCountries=C$.getISO2Table$S("ADANDAEAREAFAFGAGATGAIAIAALALBAMARMANANTAOAGOAQATAARARGASASMATAUTAUAUSAWABWAXALAAZAZEBABIHBBBRBBDBGDBEBELBFBFABGBGRBHBHRBIBDIBJBENBLBLMBMBMUBNBRNBOBOLBQBESBRBRABSBHSBTBTNBVBVTBWBWABYBLRBZBLZCACANCCCCKCDCODCFCAFCGCOGCHCHECICIVCKCOKCLCHLCMCMRCNCHNCOCOLCRCRICUCUBCVCPVCWCUWCXCXRCYCYPCZCZEDEDEUDJDJIDKDNKDMDMADODOMDZDZAECECUEEESTEGEGYEHESHERERIESESPETETHFIFINFJFJIFKFLKFMFSMFOFROFRFRAGAGABGBGBRGDGRDGEGEOGFGUFGGGGYGHGHAGIGIBGLGRLGMGMBGNGINGPGLPGQGNQGRGRCGSSGSGTGTMGUGUMGWGNBGYGUYHKHKGHMHMDHNHNDHRHRVHTHTIHUHUNIDIDNIEIRLILISRIMIMNININDIOIOTIQIRQIRIRNISISLITITAJEJEYJMJAMJOJORJPJPNKEKENKGKGZKHKHMKIKIRKMCOMKNKNAKPPRKKRKORKWKWTKYCYMKZKAZLALAOLBLBNLCLCALILIELKLKALRLBRLSLSOLTLTULULUXLVLVALYLBYMAMARMCMCOMDMDAMEMNEMFMAFMGMDGMHMHLMKMKDMLMLIMMMMRMNMNGMOMACMPMNPMQMTQMRMRTMSMSRMTMLTMUMUSMVMDVMWMWIMXMEXMYMYSMZMOZNANAMNCNCLNENERNFNFKNGNGANINICNLNLDNONORNPNPLNRNRUNUNIUNZNZLOMOMNPAPANPEPERPFPYFPGPNGPHPHLPKPAKPLPOLPMSPMPNPCNPRPRIPSPSEPTPRTPWPLWPYPRYQAQATREREUROROURSSRBRURUSRWRWASASAUSBSLBSCSYCSDSDNSESWESGSGPSHSHNSISVNSJSJMSKSVKSLSLESMSMRSNSENSOSOMSRSURSSSSDSTSTPSVSLVSXSXMSYSYRSZSWZTCTCATDTCDTFATFTGTGOTHTHATJTJKTKTKLTLTLSTMTKMTNTUNTOTONTRTURTTTTOTVTUVTWTWNTZTZAUAUKRUGUGAUMUMIUSUSAUYURYUZUZBVAVATVCVCTVEVENVGVGBVIVIRVNVNMVUVUTWFWLFWSWSMYEYEMYTMYTZAZAFZMZMBZWZWE");
}var result=Clazz_array(String, [C$.isoCountries.length]);
System.arraycopy$O$I$O$I$I(C$.isoCountries, 0, result, 0, C$.isoCountries.length);
return result;
}, 1);

Clazz_newMeth(C$, 'getISOLanguages$',  function () {
if (C$.isoLanguages == null ) {
C$.isoLanguages=C$.getISO2Table$S("aaaarababkaeaveafafrakakaamamhanargararaasasmavavaayaymazazebabakbebelbgbulbhbihbibisbmbambnbenbobodbrbrebsboscacatcechechchacocoscrcrecscescuchucvchvcycymdadandedeudvdivdzdzoeeeweelellenengeoepoesspaetesteueusfafasfffulfifinfjfijfofaofrfrafyfrygaglegdglaglglggngrngugujgvglvhahauhehebhihinhohmohrhrvhthathuhunhyhyehzheriainaidindieileigiboiiiiiikipkinindioidoisislititaiuikuiwhebjajpnjiyidjvjavkakatkgkonkikikkjkuakkkazklkalkmkhmknkankokorkrkaukskaskukurkvkomkwcorkykirlalatlbltzlgluglilimlnlinlolaoltlitlulublvlavmgmlgmhmahmimrimkmkdmlmalmnmonmomolmrmarmsmsamtmltmymyananaunbnobndndenenepngndonlnldnnnnononornrnblnvnavnynyaocociojojiomormororiososspapanpipliplpolpspusptporququermrohrnrunroronrurusrwkinsasanscsrdsdsndsesmesgsagsisinskslkslslvsmsmosnsnasosomsqsqisrsrpsssswstsotsusunsvsweswswatatamteteltgtgkththatitirtktuktltgltntsntotontrturtstsotttattwtwitytahuguigukukrururduzuzbvevenvivievovolwawlnwowolxhxhoyiyidyoyorzazhazhzhozuzul");
}var result=Clazz_array(String, [C$.isoLanguages.length]);
System.arraycopy$O$I$O$I$I(C$.isoLanguages, 0, result, 0, C$.isoLanguages.length);
return result;
}, 1);

Clazz_newMeth(C$, 'getISO2Table$S',  function (table) {
var len=(table.length$()/5|0);
var isoTable=Clazz_array(String, [len]);
for (var i=0, j=0; i < len; i++, j+=5) {
isoTable[i]=table.substring$I$I(j, j + 2);
}
return isoTable;
}, 1);

Clazz_newMeth(C$, 'getLanguage$',  function () {
return this.baseLocale.getLanguage$();
});

Clazz_newMeth(C$, 'getScript$',  function () {
return this.baseLocale.getScript$();
});

Clazz_newMeth(C$, 'getCountry$',  function () {
return this.baseLocale.getRegion$();
});

Clazz_newMeth(C$, 'getVariant$',  function () {
return this.baseLocale.getVariant$();
});

Clazz_newMeth(C$, 'hasExtensions$',  function () {
return this.localeExtensions != null ;
});

Clazz_newMeth(C$, 'stripExtensions$',  function () {
return this.hasExtensions$() ? C$.getInstance$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(this.baseLocale, null) : this;
});

Clazz_newMeth(C$, 'getExtension$C',  function (key) {
if (!$I$(13).isValidKey$C(key)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Ill-formed extension key: " + key]);
}return this.hasExtensions$() ? this.localeExtensions.getExtensionValue$Character(Character.valueOf$C(key)) : null;
});

Clazz_newMeth(C$, 'getExtensionKeys$',  function () {
if (!this.hasExtensions$()) {
return $I$(14).emptySet$();
}return this.localeExtensions.getKeys$();
});

Clazz_newMeth(C$, 'getUnicodeLocaleAttributes$',  function () {
if (!this.hasExtensions$()) {
return $I$(14).emptySet$();
}return this.localeExtensions.getUnicodeLocaleAttributes$();
});

Clazz_newMeth(C$, 'getUnicodeLocaleType$S',  function (key) {
if (!C$.isUnicodeExtensionKey$S(key)) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Ill-formed Unicode locale key: " + key]);
}return this.hasExtensions$() ? this.localeExtensions.getUnicodeLocaleType$S(key) : null;
});

Clazz_newMeth(C$, 'getUnicodeLocaleKeys$',  function () {
if (this.localeExtensions == null ) {
return $I$(14).emptySet$();
}return this.localeExtensions.getUnicodeLocaleKeys$();
});

Clazz_newMeth(C$, 'getBaseLocale$',  function () {
return this.baseLocale;
});

Clazz_newMeth(C$, 'getLocaleExtensions$',  function () {
return this.localeExtensions;
});

Clazz_newMeth(C$, 'toString',  function () {
if (this.str == null ) {
var l=(this.baseLocale.getLanguage$().length$() != 0);
var s=(this.baseLocale.getScript$().length$() != 0);
var r=(this.baseLocale.getRegion$().length$() != 0);
var v=(this.baseLocale.getVariant$().length$() != 0);
var e=(this.localeExtensions != null  && this.localeExtensions.getID$().length$() != 0 );
var result=Clazz_new_([this.baseLocale.getLanguage$()],$I$(15,1).c$$S);
if (r || (l && (v || s || e  ) ) ) {
result.append$C("_").append$S(this.baseLocale.getRegion$());
}if (v && (l || r ) ) {
result.append$C("_").append$S(this.baseLocale.getVariant$());
}if (s && (l || r ) ) {
result.append$S("_#").append$S(this.baseLocale.getScript$());
}if (e && (l || r ) ) {
result.append$C("_");
if (!s) {
result.append$C("#");
}result.append$S(this.localeExtensions.getID$());
}this.str=result.toString();
}return this.str;
});

Clazz_newMeth(C$, 'toLanguageTag$',  function () {
if (this.languageTag != null ) {
return this.languageTag;
}var tag=$I$(5).parseLocale$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(this.baseLocale, this.localeExtensions);
var buf=Clazz_new_($I$(15,1));
var subtag=tag.getLanguage$();
if (subtag.length$() > 0) {
buf.append$S($I$(5).canonicalizeLanguage$S(subtag));
}subtag=tag.getScript$();
if (subtag.length$() > 0) {
buf.append$S("-");
buf.append$S($I$(5).canonicalizeScript$S(subtag));
}subtag=tag.getRegion$();
if (subtag.length$() > 0) {
buf.append$S("-");
buf.append$S($I$(5).canonicalizeRegion$S(subtag));
}var subtags=tag.getVariants$();
for (var s, $s = subtags.iterator$(); $s.hasNext$()&&((s=($s.next$())),1);) {
buf.append$S("-");
buf.append$S(s);
}
subtags=tag.getExtensions$();
for (var s, $s = subtags.iterator$(); $s.hasNext$()&&((s=($s.next$())),1);) {
buf.append$S("-");
buf.append$S($I$(5).canonicalizeExtension$S(s));
}
subtag=tag.getPrivateuse$();
if (subtag.length$() > 0) {
if (buf.length$() > 0) {
buf.append$S("-");
}buf.append$S("x").append$S("-");
buf.append$S(subtag);
}var langTag=buf.toString();
{
if (this.languageTag == null ) {
this.languageTag=langTag;
}}return this.languageTag;
});

Clazz_newMeth(C$, 'forLanguageTag$S',  function (languageTag) {
var tag=$I$(5).parse$S$sun_util_locale_ParseStatus(languageTag, null);
var bldr=Clazz_new_($I$(3,1));
bldr.setLanguageTag$sun_util_locale_LanguageTag(tag);
var base=bldr.getBaseLocale$();
var exts=bldr.getLocaleExtensions$();
if (exts == null  && base.getVariant$().length$() > 0 ) {
exts=C$.getCompatibilityExtensions$S$S$S$S(base.getLanguage$(), base.getScript$(), base.getRegion$(), base.getVariant$());
}return C$.getInstance$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(base, exts);
}, 1);

Clazz_newMeth(C$, 'getISO3Language$',  function () {
var lang=this.baseLocale.getLanguage$();
if (lang.length$() == 3) {
return lang;
}var language3=C$.getISO3Code$S$S(lang, "aaaarababkaeaveafafrakakaamamhanargararaasasmavavaayaymazazebabakbebelbgbulbhbihbibisbmbambnbenbobodbrbrebsboscacatcechechchacocoscrcrecscescuchucvchvcycymdadandedeudvdivdzdzoeeeweelellenengeoepoesspaetesteueusfafasfffulfifinfjfijfofaofrfrafyfrygaglegdglaglglggngrngugujgvglvhahauhehebhihinhohmohrhrvhthathuhunhyhyehzheriainaidindieileigiboiiiiiikipkinindioidoisislititaiuikuiwhebjajpnjiyidjvjavkakatkgkonkikikkjkuakkkazklkalkmkhmknkankokorkrkaukskaskukurkvkomkwcorkykirlalatlbltzlgluglilimlnlinlolaoltlitlulublvlavmgmlgmhmahmimrimkmkdmlmalmnmonmomolmrmarmsmsamtmltmymyananaunbnobndndenenepngndonlnldnnnnononornrnblnvnavnynyaocociojojiomormororiososspapanpipliplpolpspusptporququermrohrnrunroronrurusrwkinsasanscsrdsdsndsesmesgsagsisinskslkslslvsmsmosnsnasosomsqsqisrsrpsssswstsotsusunsvsweswswatatamteteltgtgkththatitirtktuktltgltntsntotontrturtstsotttattwtwitytahuguigukukrururduzuzbvevenvivievovolwawlnwowolxhxhoyiyidyoyorzazhazhzhozuzul");
if (language3 == null ) {
throw Clazz_new_(Clazz_load('java.util.MissingResourceException').c$$S$S$S,["Couldn't find 3-letter language code for " + lang, "FormatData_" + this.toString(), "ShortLanguage"]);
}return language3;
});

Clazz_newMeth(C$, 'getISO3Country$',  function () {
var country3=C$.getISO3Code$S$S(this.baseLocale.getRegion$(), "ADANDAEAREAFAFGAGATGAIAIAALALBAMARMANANTAOAGOAQATAARARGASASMATAUTAUAUSAWABWAXALAAZAZEBABIHBBBRBBDBGDBEBELBFBFABGBGRBHBHRBIBDIBJBENBLBLMBMBMUBNBRNBOBOLBQBESBRBRABSBHSBTBTNBVBVTBWBWABYBLRBZBLZCACANCCCCKCDCODCFCAFCGCOGCHCHECICIVCKCOKCLCHLCMCMRCNCHNCOCOLCRCRICUCUBCVCPVCWCUWCXCXRCYCYPCZCZEDEDEUDJDJIDKDNKDMDMADODOMDZDZAECECUEEESTEGEGYEHESHERERIESESPETETHFIFINFJFJIFKFLKFMFSMFOFROFRFRAGAGABGBGBRGDGRDGEGEOGFGUFGGGGYGHGHAGIGIBGLGRLGMGMBGNGINGPGLPGQGNQGRGRCGSSGSGTGTMGUGUMGWGNBGYGUYHKHKGHMHMDHNHNDHRHRVHTHTIHUHUNIDIDNIEIRLILISRIMIMNININDIOIOTIQIRQIRIRNISISLITITAJEJEYJMJAMJOJORJPJPNKEKENKGKGZKHKHMKIKIRKMCOMKNKNAKPPRKKRKORKWKWTKYCYMKZKAZLALAOLBLBNLCLCALILIELKLKALRLBRLSLSOLTLTULULUXLVLVALYLBYMAMARMCMCOMDMDAMEMNEMFMAFMGMDGMHMHLMKMKDMLMLIMMMMRMNMNGMOMACMPMNPMQMTQMRMRTMSMSRMTMLTMUMUSMVMDVMWMWIMXMEXMYMYSMZMOZNANAMNCNCLNENERNFNFKNGNGANINICNLNLDNONORNPNPLNRNRUNUNIUNZNZLOMOMNPAPANPEPERPFPYFPGPNGPHPHLPKPAKPLPOLPMSPMPNPCNPRPRIPSPSEPTPRTPWPLWPYPRYQAQATREREUROROURSSRBRURUSRWRWASASAUSBSLBSCSYCSDSDNSESWESGSGPSHSHNSISVNSJSJMSKSVKSLSLESMSMRSNSENSOSOMSRSURSSSSDSTSTPSVSLVSXSXMSYSYRSZSWZTCTCATDTCDTFATFTGTGOTHTHATJTJKTKTKLTLTLSTMTKMTNTUNTOTONTRTURTTTTOTVTUVTWTWNTZTZAUAUKRUGUGAUMUMIUSUSAUYURYUZUZBVAVATVCVCTVEVENVGVGBVIVIRVNVNMVUVUTWFWLFWSWSMYEYEMYTMYTZAZAFZMZMBZWZWE");
if (country3 == null ) {
throw Clazz_new_(Clazz_load('java.util.MissingResourceException').c$$S$S$S,["Couldn't find 3-letter country code for " + this.baseLocale.getRegion$(), "FormatData_" + this.toString(), "ShortCountry"]);
}return country3;
});

Clazz_newMeth(C$, 'getISO3Code$S$S',  function (iso2Code, table) {
var codeLength=iso2Code.length$();
if (codeLength == 0) {
return "";
}var tableLength=table.length$();
var index=tableLength;
if (codeLength == 2) {
var c1=iso2Code.charAt$I(0);
var c2=iso2Code.charAt$I(1);
for (index=0; index < tableLength; index+=5) {
if (table.charAt$I(index) == c1 && table.charAt$I(index + 1) == c2 ) {
break;
}}
}return index < tableLength ? table.substring$I$I(index + 2, index + 5) : null;
}, 1);

Clazz_newMeth(C$, 'getDisplayLanguage$',  function () {
return this.getDisplayLanguage$java_util_Locale(C$.getDefault$java_util_Locale_Category($I$(10).DISPLAY));
});

Clazz_newMeth(C$, 'getDisplayLanguage$java_util_Locale',  function (inLocale) {
return p$1.getDisplayString$S$java_util_Locale$I.apply(this, [this.baseLocale.getLanguage$(), inLocale, 0]);
});

Clazz_newMeth(C$, 'getDisplayScript$',  function () {
return this.getDisplayScript$java_util_Locale(C$.getDefault$java_util_Locale_Category($I$(10).DISPLAY));
});

Clazz_newMeth(C$, 'getDisplayScript$java_util_Locale',  function (inLocale) {
return p$1.getDisplayString$S$java_util_Locale$I.apply(this, [this.baseLocale.getScript$(), inLocale, 3]);
});

Clazz_newMeth(C$, 'getDisplayCountry$',  function () {
return this.getDisplayCountry$java_util_Locale(C$.getDefault$java_util_Locale_Category($I$(10).DISPLAY));
});

Clazz_newMeth(C$, 'getDisplayCountry$java_util_Locale',  function (inLocale) {
return p$1.getDisplayString$S$java_util_Locale$I.apply(this, [this.baseLocale.getRegion$(), inLocale, 1]);
});

Clazz_newMeth(C$, 'getDisplayString$S$java_util_Locale$I',  function (code, inLocale, type) {
if (code.length$() == 0) {
return "";
}if (inLocale == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}var pool=$I$(12,"getPool$Class",[Clazz_getClass($I$(16))]);
var key=(type == 2 ? "%%" + code : code);
var result=pool.getLocalizedObject$sun_util_locale_provider_LocaleServiceProviderPool_LocalizedObjectGetter$java_util_Locale$S$OA($I$(17).INSTANCE, inLocale, key, Clazz_array(java.lang.Object, -1, [Integer.valueOf$I(type), code]));
if (result != null ) {
return result;
}return code;
}, p$1);

Clazz_newMeth(C$, 'getDisplayVariant$',  function () {
return this.getDisplayVariant$java_util_Locale(C$.getDefault$java_util_Locale_Category($I$(10).DISPLAY));
});

Clazz_newMeth(C$, 'getDisplayVariant$java_util_Locale',  function (inLocale) {
if (this.baseLocale.getVariant$().length$() == 0) return "";
var lr=$I$(18).forJRE$().getLocaleResources$java_util_Locale(inLocale);
var names=p$1.getDisplayVariantArray$java_util_Locale.apply(this, [inLocale]);
return C$.formatList$SA$S$S(names, lr.getLocaleName$S("ListPattern"), lr.getLocaleName$S("ListCompositionPattern"));
});

Clazz_newMeth(C$, 'getDisplayName$',  function () {
return this.getDisplayName$java_util_Locale(C$.getDefault$java_util_Locale_Category($I$(10).DISPLAY));
});

Clazz_newMeth(C$, 'getDisplayName$java_util_Locale',  function (inLocale) {
var lr=$I$(18).forJRE$().getLocaleResources$java_util_Locale(inLocale);
var languageName=this.getDisplayLanguage$java_util_Locale(inLocale);
var scriptName=this.getDisplayScript$java_util_Locale(inLocale);
var countryName=this.getDisplayCountry$java_util_Locale(inLocale);
var variantNames=p$1.getDisplayVariantArray$java_util_Locale.apply(this, [inLocale]);
var displayNamePattern=lr.getLocaleName$S("DisplayNamePattern");
var listPattern=lr.getLocaleName$S("ListPattern");
var listCompositionPattern=lr.getLocaleName$S("ListCompositionPattern");
var mainName=null;
var qualifierNames=null;
if (languageName.length$() == 0 && scriptName.length$() == 0  && countryName.length$() == 0 ) {
if (variantNames.length == 0) {
return "";
} else {
return C$.formatList$SA$S$S(variantNames, listPattern, listCompositionPattern);
}}var names=Clazz_new_($I$(19,1).c$$I,[4]);
if (languageName.length$() != 0) {
names.add$O(languageName);
}if (scriptName.length$() != 0) {
names.add$O(scriptName);
}if (countryName.length$() != 0) {
names.add$O(countryName);
}if (variantNames.length != 0) {
names.addAll$java_util_Collection($I$(20).asList$OA(variantNames));
}mainName=names.get$I(0);
var numNames=names.size$();
qualifierNames=(numNames > 1) ? names.subList$I$I(1, numNames).toArray$OA(Clazz_array(String, [numNames - 1])) : Clazz_array(String, [0]);
var displayNames=Clazz_array(java.lang.Object, -1, [ new Integer(qualifierNames.length != 0 ? 2 : 1), mainName, qualifierNames.length != 0 ? C$.formatList$SA$S$S(qualifierNames, listPattern, listCompositionPattern) : null]);
if (displayNamePattern != null ) {
return Clazz_new_($I$(21,1).c$$S,[displayNamePattern]).format$O(displayNames);
} else {
var result=Clazz_new_($I$(15,1));
result.append$S(displayNames[1]);
if (displayNames.length > 2) {
result.append$S(" (");
result.append$S(displayNames[2]);
result.append$C(")");
}return result.toString();
}});

Clazz_newMeth(C$, 'clone$',  function () {
try {
var that=Clazz_clone(this);
return that;
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(22,1).c$$Throwable,[e]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var hc=this.hashCodeValue;
if (hc == 0) {
hc=this.baseLocale.hashCode$();
if (this.localeExtensions != null ) {
hc^=this.localeExtensions.hashCode$();
}this.hashCodeValue=hc;
}return hc;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) return true;
if (!(Clazz_instanceOf(obj, "java.util.Locale"))) return false;
var otherBase=(obj).baseLocale;
if (!this.baseLocale.equals$O(otherBase)) {
return false;
}if (this.localeExtensions == null ) {
return (obj).localeExtensions == null ;
}return this.localeExtensions.equals$O((obj).localeExtensions);
});

Clazz_newMeth(C$, 'getDisplayVariantArray$java_util_Locale',  function (inLocale) {
var tokenizer=Clazz_new_([this.baseLocale.getVariant$(), "_"],$I$(23,1).c$$S$S);
var names=Clazz_array(String, [tokenizer.countTokens$()]);
for (var i=0; i < names.length; ++i) {
names[i]=p$1.getDisplayString$S$java_util_Locale$I.apply(this, [tokenizer.nextToken$(), inLocale, 2]);
}
return names;
}, p$1);

Clazz_newMeth(C$, 'formatList$SA$S$S',  function (stringList, listPattern, listCompositionPattern) {
if (listPattern == null  || listCompositionPattern == null  ) {
var result=Clazz_new_($I$(15,1));
for (var i=0; i < stringList.length; ++i) {
if (i > 0) {
result.append$C(",");
}result.append$S(stringList[i]);
}
return result.toString();
}if (stringList.length > 3) {
var format=Clazz_new_($I$(21,1).c$$S,[listCompositionPattern]);
stringList=C$.composeList$java_text_MessageFormat$SA(format, stringList);
}var args=Clazz_array(java.lang.Object, [stringList.length + 1]);
System.arraycopy$O$I$O$I$I(stringList, 0, args, 1, stringList.length);
args[0]= new Integer(stringList.length);
var format=Clazz_new_($I$(21,1).c$$S,[listPattern]);
return format.format$O(args);
}, 1);

Clazz_newMeth(C$, 'composeList$java_text_MessageFormat$SA',  function (format, list) {
if (list.length <= 3) return list;
var listItems=Clazz_array(String, -1, [list[0], list[1]]);
var newItem=format.format$O(listItems);
var newList=Clazz_array(String, [list.length - 1]);
System.arraycopy$O$I$O$I$I(list, 2, newList, 1, newList.length - 1);
newList[0]=newItem;
return C$.composeList$java_text_MessageFormat$SA(format, newList);
}, 1);

Clazz_newMeth(C$, 'isUnicodeExtensionKey$S',  function (s) {
return (s.length$() == 2) && $I$(24).isAlphaNumericString$S(s) ;
}, 1);

Clazz_newMeth(C$, 'readResolve',  function () {
return C$.getInstance$S$S$S$S$sun_util_locale_LocaleExtensions(this.baseLocale.getLanguage$(), this.baseLocale.getScript$(), this.baseLocale.getRegion$(), this.baseLocale.getVariant$(), this.localeExtensions);
}, p$1);

Clazz_newMeth(C$, 'convertOldISOCodes$S',  function (language) {
language=$I$(24).toLowerString$S(language).intern$();
if (language === "he" ) {
return "iw";
} else if (language === "yi" ) {
return "ji";
} else if (language === "id" ) {
return "in";
} else {
return language;
}}, 1);

Clazz_newMeth(C$, 'getCompatibilityExtensions$S$S$S$S',  function (language, script, country, variant) {
var extensions=null;
if ($I$(24).caseIgnoreMatch$S$S(language, "ja") && script.length$() == 0  && $I$(24).caseIgnoreMatch$S$S(country, "jp")  && "JP".equals$O(variant) ) {
extensions=$I$(13).CALENDAR_JAPANESE;
} else if ($I$(24).caseIgnoreMatch$S$S(language, "th") && script.length$() == 0  && $I$(24).caseIgnoreMatch$S$S(country, "th")  && "TH".equals$O(variant) ) {
extensions=$I$(13).NUMBER_THAI;
}return extensions;
}, 1);

Clazz_newMeth(C$, 'filter$java_util_List$java_util_Collection$java_util_Locale_FilteringMode',  function (priorityList, locales, mode) {
return $I$(6).filter$java_util_List$java_util_Collection$java_util_Locale_FilteringMode(priorityList, locales, mode);
}, 1);

Clazz_newMeth(C$, 'filter$java_util_List$java_util_Collection',  function (priorityList, locales) {
return C$.filter$java_util_List$java_util_Collection$java_util_Locale_FilteringMode(priorityList, locales, $I$(25).AUTOSELECT_FILTERING);
}, 1);

Clazz_newMeth(C$, 'filterTags$java_util_List$java_util_Collection$java_util_Locale_FilteringMode',  function (priorityList, tags, mode) {
return $I$(6).filterTags$java_util_List$java_util_Collection$java_util_Locale_FilteringMode(priorityList, tags, mode);
}, 1);

Clazz_newMeth(C$, 'filterTags$java_util_List$java_util_Collection',  function (priorityList, tags) {
return C$.filterTags$java_util_List$java_util_Collection$java_util_Locale_FilteringMode(priorityList, tags, $I$(25).AUTOSELECT_FILTERING);
}, 1);

Clazz_newMeth(C$, 'lookup$java_util_List$java_util_Collection',  function (priorityList, locales) {
return $I$(6).lookup$java_util_List$java_util_Collection(priorityList, locales);
}, 1);

Clazz_newMeth(C$, 'lookupTag$java_util_List$java_util_Collection',  function (priorityList, tags) {
return $I$(6).lookupTag$java_util_List$java_util_Collection(priorityList, tags);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.LOCALECACHE=Clazz_new_($I$(7,1));
C$.ENGLISH=C$.createConstant$S$S("en", "");
C$.FRENCH=C$.createConstant$S$S("fr", "");
C$.GERMAN=C$.createConstant$S$S("de", "");
C$.ITALIAN=C$.createConstant$S$S("it", "");
C$.JAPANESE=C$.createConstant$S$S("ja", "");
C$.KOREAN=C$.createConstant$S$S("ko", "");
C$.CHINESE=C$.createConstant$S$S("zh", "");
C$.SIMPLIFIED_CHINESE=C$.createConstant$S$S("zh", "CN");
C$.TRADITIONAL_CHINESE=C$.createConstant$S$S("zh", "TW");
C$.FRANCE=C$.createConstant$S$S("fr", "FR");
C$.GERMANY=C$.createConstant$S$S("de", "DE");
C$.ITALY=C$.createConstant$S$S("it", "IT");
C$.JAPAN=C$.createConstant$S$S("ja", "JP");
C$.KOREA=C$.createConstant$S$S("ko", "KR");
C$.CHINA=C$.SIMPLIFIED_CHINESE;
C$.PRC=C$.SIMPLIFIED_CHINESE;
C$.TAIWAN=C$.TRADITIONAL_CHINESE;
C$.UK=C$.createConstant$S$S("en", "GB");
C$.US=C$.createConstant$S$S("en", "US");
C$.CANADA=C$.createConstant$S$S("en", "CA");
C$.CANADA_FRENCH=C$.createConstant$S$S("fr", "CA");
C$.ROOT=C$.createConstant$S$S("", "");
C$.defaultLocale=C$.initDefault$();
C$.defaultDisplayLocale=null;
C$.defaultFormatLocale=null;
C$.isoLanguages=null;
C$.isoCountries=null;
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Locale, "Cache", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.cache=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['O',['cache','java.util.HashMap']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'get$java_util_Locale_LocaleKey',  function (key) {
var loc=this.cache.get$O(key.toString());
if (loc == null ) this.cache.put$O$O(key.toString(), loc=this.createObject$java_util_Locale_LocaleKey(key));
return loc;
});

Clazz_newMeth(C$, 'createObject$java_util_Locale_LocaleKey',  function (key) {
return Clazz_new_($I$(2,1).c$$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions,[key.base, key.exts]);
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Locale, "LocaleKey", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['hash'],'S',['strRep'],'O',['base','sun.util.locale.BaseLocale','exts','sun.util.locale.LocaleExtensions']]]

Clazz_newMeth(C$, 'toString',  function () {
return this.strRep;
});

Clazz_newMeth(C$, 'c$$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions',  function (baseLocale, extensions) {
;C$.$init$.apply(this);
this.base=baseLocale;
this.exts=extensions;
this.strRep=this.base.toString() + (this.exts == null  ? "" : this.exts.toString());
var h=this.base.hashCode$();
if (this.exts != null ) {
h^=this.exts.hashCode$();
}this.hash=h;
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) {
return true;
}if (!(Clazz_instanceOf(obj, "java.util.Locale.LocaleKey"))) {
return false;
}var other=obj;
if (this.hash != other.hash || !this.base.equals$O(other.base) ) {
return false;
}if (this.exts == null ) {
return other.exts == null ;
}return this.exts.equals$O(other.exts);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.hash;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Locale, "LocaleNameGetter", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['sun.util.locale.provider.LocaleServiceProviderPool','sun.util.locale.provider.LocaleServiceProviderPool.LocalizedObjectGetter']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['INSTANCE','java.util.Locale.LocaleNameGetter']]]

Clazz_newMeth(C$, ['getObject$java_util_spi_LocaleNameProvider$java_util_Locale$S$OA','getObject$java_util_spi_LocaleServiceProvider$java_util_Locale$S$OA'],  function (localeNameProvider, locale, key, params) {
Clazz_assert(C$, this, function(){return params.length == 2});
var type=(params[0]).$c();
var code=params[1];
switch (type) {
case 0:
return localeNameProvider.getDisplayLanguage$S$java_util_Locale(code, locale);
case 1:
return localeNameProvider.getDisplayCountry$S$java_util_Locale(code, locale);
case 2:
return localeNameProvider.getDisplayVariant$S$java_util_Locale(code, locale);
case 3:
return localeNameProvider.getDisplayScript$S$java_util_Locale(code, locale);
default:
Clazz_assert(C$, this, function(){return false});
}
return null;
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.INSTANCE=Clazz_new_(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*e*/var C$=Clazz_newClass(P$.Locale, "Category", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['languageKey','scriptKey','countryKey','variantKey']]]

Clazz_newMeth(C$, 'c$$S$S$S$S',  function (languageKey, scriptKey, countryKey, variantKey) {
;C$.$init$.apply(this);
this.languageKey=languageKey;
this.scriptKey=scriptKey;
this.countryKey=countryKey;
this.variantKey=variantKey;
}, 1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$$S$S$S$S, "DISPLAY", 0, ["user.language.display", "user.script.display", "user.country.display", "user.variant.display"]);
Clazz_newEnumConst($vals, C$.c$$S$S$S$S, "FORMAT", 1, ["user.language.format", "user.script.format", "user.country.format", "user.variant.format"]);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Locale, "Builder", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['localeBuilder','sun.util.locale.InternalLocaleBuilder']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.localeBuilder=Clazz_new_($I$(3,1));
}, 1);

Clazz_newMeth(C$, 'setLocale$java_util_Locale',  function (locale) {
try {
this.localeBuilder.setLocale$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(locale.baseLocale, locale.localeExtensions);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'setLanguageTag$S',  function (languageTag) {
var sts=Clazz_new_($I$(4,1));
var tag=$I$(5).parse$S$sun_util_locale_ParseStatus(languageTag, sts);
if (sts.isError$()) {
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[sts.getErrorMessage$(), sts.getErrorIndex$()]);
}this.localeBuilder.setLanguageTag$sun_util_locale_LanguageTag(tag);
return this;
});

Clazz_newMeth(C$, 'setLanguage$S',  function (language) {
try {
this.localeBuilder.setLanguage$S(language);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'setScript$S',  function (script) {
try {
this.localeBuilder.setScript$S(script);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'setRegion$S',  function (region) {
try {
this.localeBuilder.setRegion$S(region);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'setVariant$S',  function (variant) {
try {
this.localeBuilder.setVariant$S(variant);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'setExtension$C$S',  function (key, value) {
try {
this.localeBuilder.setExtension$C$S(key, value);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'setUnicodeLocaleKeyword$S$S',  function (key, type) {
try {
this.localeBuilder.setUnicodeLocaleKeyword$S$S(key, type);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'addUnicodeLocaleAttribute$S',  function (attribute) {
try {
this.localeBuilder.addUnicodeLocaleAttribute$S(attribute);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'removeUnicodeLocaleAttribute$S',  function (attribute) {
try {
this.localeBuilder.removeUnicodeLocaleAttribute$S(attribute);
} catch (e) {
if (Clazz_exceptionOf(e,"sun.util.locale.LocaleSyntaxException")){
throw Clazz_new_(Clazz_load('java.util.IllformedLocaleException').c$$S$I,[e.getMessage$(), e.getErrorIndex$()]);
} else {
throw e;
}
}
return this;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.localeBuilder.clear$();
return this;
});

Clazz_newMeth(C$, 'clearExtensions$',  function () {
this.localeBuilder.clearExtensions$();
return this;
});

Clazz_newMeth(C$, 'build$',  function () {
var baseloc=this.localeBuilder.getBaseLocale$();
var extensions=this.localeBuilder.getLocaleExtensions$();
if (extensions == null  && baseloc.getVariant$().length$() > 0 ) {
extensions=$I$(2,"getCompatibilityExtensions$S$S$S$S",[baseloc.getLanguage$(), baseloc.getScript$(), baseloc.getRegion$(), baseloc.getVariant$()]);
}return $I$(2).getInstance$sun_util_locale_BaseLocale$sun_util_locale_LocaleExtensions(baseloc, extensions);
});
})()
;
(function(){/*e*/var C$=Clazz_newClass(P$.Locale, "FilteringMode", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "AUTOSELECT_FILTERING", 0, []);
Clazz_newEnumConst($vals, C$.c$, "EXTENDED_FILTERING", 1, []);
Clazz_newEnumConst($vals, C$.c$, "IGNORE_EXTENDED_RANGES", 2, []);
Clazz_newEnumConst($vals, C$.c$, "MAP_EXTENDED_RANGES", 3, []);
Clazz_newEnumConst($vals, C$.c$, "REJECT_EXTENDED_RANGES", 4, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Locale, "LanguageRange", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.hash=0;
},1);

C$.$fields$=[['D',['weight'],'I',['hash'],'S',['range']]]

Clazz_newMeth(C$, 'c$$S',  function (range) {
C$.c$$S$D.apply(this, [range, 1.0]);
}, 1);

Clazz_newMeth(C$, 'c$$S$D',  function (range, weight) {
;C$.$init$.apply(this);
if (range == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}if (weight < 0.0  || weight > 1.0  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["weight=" + new Double(weight).toString()]);
}range=range.toLowerCase$();
var isIllFormed=false;
var subtags=range.split$S("-");
if (C$.isSubtagIllFormed$S$Z(subtags[0], true) || range.endsWith$S("-") ) {
isIllFormed=true;
} else {
for (var i=1; i < subtags.length; i++) {
if (C$.isSubtagIllFormed$S$Z(subtags[i], false)) {
isIllFormed=true;
break;
}}
}if (isIllFormed) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["range=" + range]);
}this.range=range;
this.weight=weight;
}, 1);

Clazz_newMeth(C$, 'isSubtagIllFormed$S$Z',  function (subtag, isFirstSubtag) {
if (subtag.equals$O("") || subtag.length$() > 8 ) {
return true;
} else if (subtag.equals$O("*")) {
return false;
}var charArray=subtag.toCharArray$();
if (isFirstSubtag) {
for (var c, $c = 0, $$c = charArray; $c<$$c.length&&((c=($$c[$c])),1);$c++) {
if (c < "a" || c > "z" ) {
return true;
}}
} else {
for (var c, $c = 0, $$c = charArray; $c<$$c.length&&((c=($$c[$c])),1);$c++) {
if (c < "0" || (c > "9" && c < "a" )  || c > "z" ) {
return true;
}}
}return false;
}, 1);

Clazz_newMeth(C$, 'getRange$',  function () {
return this.range;
});

Clazz_newMeth(C$, 'getWeight$',  function () {
return this.weight;
});

Clazz_newMeth(C$, 'parse$S',  function (ranges) {
return $I$(6).parse$S(ranges);
}, 1);

Clazz_newMeth(C$, 'parse$S$java_util_Map',  function (ranges, map) {
return C$.mapEquivalents$java_util_List$java_util_Map(C$.parse$S(ranges), map);
}, 1);

Clazz_newMeth(C$, 'mapEquivalents$java_util_List$java_util_Map',  function (priorityList, map) {
return $I$(6).mapEquivalents$java_util_List$java_util_Map(priorityList, map);
}, 1);

Clazz_newMeth(C$, 'hashCode$',  function () {
if (this.hash == 0) {
var result=17;
result=37 * result + this.range.hashCode$();
var bitsWeight=Double.doubleToLongBits$D(this.weight);
result=37 * result + Long.$ival((Long.$xor(bitsWeight,(Long.$usr(bitsWeight,32)))));
this.hash=result;
}return this.hash;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) {
return true;
}if (!(Clazz_instanceOf(obj, "java.util.Locale.LanguageRange"))) {
return false;
}var other=obj;
return this.hash == other.hash && this.range.equals$O(other.range)  && this.weight == other.weight  ;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Objects']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Map", function(){
});
C$.$classes$=[['Entry',9]];

Clazz_newMeth(C$, '秘ensureJavaMap$java_util_Map',  function (map) {

if (map.秘m) { var m = map.秘m;
map.秘m = null;
m.forEach(function(value, key){map.put$O$O(key, value);});
m.clear();
}
}, 1);

Clazz_newMeth(C$, '秘isSimple$java_util_Map',  function (map) {
{
return !!map.秘m;
}
}, 1);

Clazz_newMeth(C$, '秘hasKey$java_util_Map$O',  function (map, key) {
{
return (!map.秘m ? 0 : key != null && typeof key != "string" ? 1 : map.秘m.has(key) ? 3 : 2);
}
}, 1);

Clazz_newMeth(C$, '秘set$java_util_Map$O$O',  function (map, key, value) {

map.秘m.set(key == null ? null : key + "", value)
}, 1);

Clazz_newMeth(C$, '秘get$O$O',  function (map, key) {
{
return map.秘m.get(key == null ? null : key + "")
}
}, 1);
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'getOrDefault$O$O',  function (key, defaultValue) {
var v;
return (((v=this.get$O(key)) != null ) || this.containsKey$O(key) ) ? v : defaultValue;
});

Clazz_newMeth(C$, 'forEach$java_util_function_BiConsumer',  function (action) {
$I$(1).requireNonNull$O(action);
for (var entry, $entry = this.entrySet$().iterator$(); $entry.hasNext$()&&((entry=($entry.next$())),1);) {
var k;
var v;
try {
k=entry.getKey$();
v=entry.getValue$();
} catch (ise) {
if (Clazz_exceptionOf(ise,"IllegalStateException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException').c$$Throwable,[ise]);
} else {
throw ise;
}
}
action.accept$O$O(k, v);
}
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_BiFunction',  function ($function) {
$I$(1).requireNonNull$O($function);
for (var entry, $entry = this.entrySet$().iterator$(); $entry.hasNext$()&&((entry=($entry.next$())),1);) {
var k;
var v;
try {
k=entry.getKey$();
v=entry.getValue$();
} catch (ise) {
if (Clazz_exceptionOf(ise,"IllegalStateException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException').c$$Throwable,[ise]);
} else {
throw ise;
}
}
v=$function.apply$O$O(k, v);
try {
entry.setValue$O(v);
} catch (ise) {
if (Clazz_exceptionOf(ise,"IllegalStateException")){
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException').c$$Throwable,[ise]);
} else {
throw ise;
}
}
}
});

Clazz_newMeth(C$, 'putIfAbsent$O$O',  function (key, value) {
var v=this.get$O(key);
if (v == null ) {
v=this.put$O$O(key, value);
}return v;
});

Clazz_newMeth(C$, 'remove$O$O',  function (key, value) {
var curValue=this.get$O(key);
if (!$I$(1).equals$O$O(curValue, value) || (curValue == null  && !this.containsKey$O(key) ) ) {
return false;
}this.remove$O(key);
return true;
});

Clazz_newMeth(C$, 'replace$O$O$O',  function (key, oldValue, newValue) {
var curValue=this.get$O(key);
if (!$I$(1).equals$O$O(curValue, oldValue) || (curValue == null  && !this.containsKey$O(key) ) ) {
return false;
}this.put$O$O(key, newValue);
return true;
});

Clazz_newMeth(C$, 'replace$O$O',  function (key, value) {
var curValue;
if (((curValue=this.get$O(key)) != null ) || this.containsKey$O(key) ) {
curValue=this.put$O$O(key, value);
}return curValue;
});

Clazz_newMeth(C$, 'computeIfAbsent$O$java_util_function_Function',  function (key, mappingFunction) {
$I$(1).requireNonNull$O(mappingFunction);
var v;
if ((v=this.get$O(key)) == null ) {
var newValue;
if ((newValue=mappingFunction.apply$O(key)) != null ) {
this.put$O$O(key, newValue);
return newValue;
}}return v;
});

Clazz_newMeth(C$, 'computeIfPresent$O$java_util_function_BiFunction',  function (key, remappingFunction) {
$I$(1).requireNonNull$O(remappingFunction);
var oldValue;
if ((oldValue=this.get$O(key)) != null ) {
var newValue=remappingFunction.apply$O$O(key, oldValue);
if (newValue != null ) {
this.put$O$O(key, newValue);
return newValue;
} else {
this.remove$O(key);
return null;
}} else {
return null;
}});

Clazz_newMeth(C$, 'compute$O$java_util_function_BiFunction',  function (key, remappingFunction) {
$I$(1).requireNonNull$O(remappingFunction);
var oldValue=this.get$O(key);
var newValue=remappingFunction.apply$O$O(key, oldValue);
if (newValue == null ) {
if (oldValue != null  || this.containsKey$O(key) ) {
this.remove$O(key);
return null;
} else {
return null;
}} else {
this.put$O$O(key, newValue);
return newValue;
}});

Clazz_newMeth(C$, 'merge$O$O$java_util_function_BiFunction',  function (key, value, remappingFunction) {
$I$(1).requireNonNull$O(remappingFunction);
$I$(1).requireNonNull$O(value);
var oldValue=this.get$O(key);
var newValue=(oldValue == null ) ? value : remappingFunction.apply$O$O(oldValue, value);
if (newValue == null ) {
this.remove$O(key);
} else {
this.put$O$O(key, newValue);
}return newValue;
});
};;
(function(){/*i*/var C$=Clazz_newInterface(P$.Map, "Entry", function(){
});

Clazz_newMeth(C$, 'comparingByKey$',  function () {
return ((P$.Map$Entry$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Map$Entry$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['compare$java_util_Map_Entry$java_util_Map_Entry','compare$O$O'],  function (c1, c2) { return (c1.getKey$.apply(c1, []).compareTo$O.apply(c1.getKey$.apply(c1, []), [c2.getKey$.apply(c2, [])]));});
})()
), Clazz_new_(P$.Map$Entry$lambda1.$init$,[this, null]));
}, 1);

Clazz_newMeth(C$, 'comparingByValue$',  function () {
return ((P$.Map$Entry$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "Map$Entry$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['compare$java_util_Map_Entry$java_util_Map_Entry','compare$O$O'],  function (c1, c2) { return (c1.getValue$.apply(c1, []).compareTo$O.apply(c1.getValue$.apply(c1, []), [c2.getValue$.apply(c2, [])]));});
})()
), Clazz_new_(P$.Map$Entry$lambda2.$init$,[this, null]));
}, 1);

Clazz_newMeth(C$, 'comparingByKey$java_util_Comparator',  function (cmp) {
$I$(1).requireNonNull$O(cmp);
return ((P$.Map$Entry$lambda3||
(function(){/*m*/var C$=Clazz_newClass(P$, "Map$Entry$lambda3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['compare$java_util_Map_Entry$java_util_Map_Entry','compare$O$O'],  function (c1, c2) { return (this.$finals$.cmp.compare$O$O.apply(this.$finals$.cmp, [c1.getKey$.apply(c1, []), c2.getKey$.apply(c2, [])]));});
})()
), Clazz_new_(P$.Map$Entry$lambda3.$init$,[this, {cmp:cmp}]));
}, 1);

Clazz_newMeth(C$, 'comparingByValue$java_util_Comparator',  function (cmp) {
$I$(1).requireNonNull$O(cmp);
return ((P$.Map$Entry$lambda4||
(function(){/*m*/var C$=Clazz_newClass(P$, "Map$Entry$lambda4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.io.Serializable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['compare$java_util_Map_Entry$java_util_Map_Entry','compare$O$O'],  function (c1, c2) { return (this.$finals$.cmp.compare$O$O.apply(this.$finals$.cmp, [c1.getValue$.apply(c1, []), c2.getValue$.apply(c2, [])]));});
})()
), Clazz_new_(P$.Map$Entry$lambda4.$init$,[this, {cmp:cmp}]));
}, 1);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'AssertionError','java.util.Arrays']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Objects");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
throw Clazz_new_($I$(1,1).c$$O,["No java.util.Objects instances for you!"]);
}, 1);

Clazz_newMeth(C$, 'equals$O$O',  function (a, b) {
return (a === b ) || (a != null  && a.equals$O(b) ) ;
}, 1);

Clazz_newMeth(C$, 'deepEquals$O$O',  function (a, b) {
if (a === b ) return true;
 else if (a == null  || b == null  ) return false;
 else return $I$(2).deepEquals0$O$O(a, b);
}, 1);

Clazz_newMeth(C$, 'hashCode$O',  function (o) {
return o != null  ? o.hashCode$() : 0;
}, 1);

Clazz_newMeth(C$, 'hash$OA',  function (values) {
return $I$(2).hashCode$OA(values);
}, 1);

Clazz_newMeth(C$, 'toString$O',  function (o) {
return String.valueOf$O(o);
}, 1);

Clazz_newMeth(C$, 'toString$O$S',  function (o, nullDefault) {
return (o != null ) ? o.toString() : nullDefault;
}, 1);

Clazz_newMeth(C$, 'compare$O$O$java_util_Comparator',  function (a, b, c) {
return (a === b ) ? 0 : c.compare$O$O(a, b);
}, 1);

Clazz_newMeth(C$, 'requireNonNull$O',  function (obj) {
if (obj == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
return obj;
}, 1);

Clazz_newMeth(C$, 'requireNonNullElse$O$O',  function (obj, defaultObj) {
return (obj != null ) ? obj : C$.requireNonNull$O$S(defaultObj, "defaultObj");
}, 1);

Clazz_newMeth(C$, 'requireNonNullElseGet$O$java_util_function_Supplier',  function (obj, supplier) {
return (obj != null ) ? obj : C$.requireNonNull$O$S(C$.requireNonNull$O$S(supplier, "supplier").get$(), "supplier.get()");
}, 1);

Clazz_newMeth(C$, 'requireNonNull$O$S',  function (obj, message) {
if (obj == null ) throw Clazz_new_(Clazz_load('NullPointerException').c$$S,[message]);
return obj;
}, 1);

Clazz_newMeth(C$, 'isNull$O',  function (obj) {
return obj == null ;
}, 1);

Clazz_newMeth(C$, 'nonNull$O',  function (obj) {
return obj != null ;
}, 1);

Clazz_newMeth(C$, 'requireNonNull$O$java_util_function_Supplier',  function (obj, messageSupplier) {
if (obj == null ) throw Clazz_new_(Clazz_load('NullPointerException').c$$S,[messageSupplier.get$()]);
return obj;
}, 1);

Clazz_newMeth(C$, 'checkIndex$I$I',  function (index, length) {
if (index < 0 || index >= length ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException'));
return index;
}, 1);

Clazz_newMeth(C$, 'checkFromToIndex$I$I$I',  function (fromIndex, toIndex, length) {
if (fromIndex < 0 || toIndex < fromIndex  || toIndex >= length ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException'));
return fromIndex;
}, 1);

Clazz_newMeth(C$, 'checkFromIndexSize$I$I$I',  function (fromIndex, size, length) {
if (fromIndex < 0 || fromIndex + size < length  || fromIndex >= length ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException'));
return fromIndex;
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:37 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Queue", null, null, 'java.util.Collection');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:37 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[];
/*i*/var C$=Clazz_newInterface(P$, "RandomAccess");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:37 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,I$=[[0,'java.util.Spliterators','java.util.ImmutableCollections',['java.util.ImmutableCollections','.Set12'],['java.util.ImmutableCollections','.SetN'],'java.util.HashSet']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Set", null, null, 'java.util.Collection');

C$.$clinit$=2;

Clazz_newMeth(C$, 'of$',  function () {
return $I$(2).emptySet$();
}, 1);

Clazz_newMeth(C$, 'of$O',  function (e1) {
return Clazz_new_($I$(3,1).c$$O,[e1]);
}, 1);

Clazz_newMeth(C$, 'of$O$O',  function (e1, e2) {
return Clazz_new_($I$(3,1).c$$O$O,[e1, e2]);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O',  function (e1, e2, e3) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O',  function (e1, e2, e3, e4) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O',  function (e1, e2, e3, e4, e5) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7, e8) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7, e8])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7, e8, e9) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7, e8, e9])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$O$O$O$O$O$O$O$O$O$O',  function (e1, e2, e3, e4, e5, e6, e7, e8, e9, e10) {
return Clazz_new_([Clazz_array(java.lang.Object, -1, [e1, e2, e3, e4, e5, e6, e7, e8, e9, e10])],$I$(4,1).c$$OA);
}, 1);

Clazz_newMeth(C$, 'of$OA',  function (elements) {
switch (elements.length) {
case 0:
return $I$(2).emptySet$();
case 1:
return Clazz_new_($I$(3,1).c$$O,[elements[0]]);
case 2:
return Clazz_new_($I$(3,1).c$$O$O,[elements[0], elements[1]]);
default:
return Clazz_new_($I$(4,1).c$$OA,[elements]);
}
}, 1);

Clazz_newMeth(C$, 'copyOf$java_util_Collection',  function (coll) {
if (Clazz_instanceOf(coll, "java.util.ImmutableCollections.AbstractImmutableSet")) {
return coll;
} else {
return C$.of$OA(Clazz_new_($I$(5,1).c$$java_util_Collection,[coll]).toArray$());
}}, 1);
C$.$defaults$ = function(C$){

Clazz_newMeth(C$, 'spliterator$',  function () {
return $I$(1).spliterator$java_util_Collection$I(this, 1);
});
};})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:37 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={};
/*c*/var C$=Clazz_newClass(P$, "StringTokenizer", null, null, 'java.util.Enumeration');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.hasSurrogates=false;
},1);

C$.$fields$=[['Z',['retDelims','delimsChanged','hasSurrogates'],'I',['currentPosition','newPosition','maxPosition','maxDelimCodePoint'],'S',['str','delimiters'],'O',['delimiterCodePoints','int[]']]]

Clazz_newMeth(C$, 'setMaxDelimCodePoint',  function () {
if (this.delimiters == null ) {
this.maxDelimCodePoint=0;
return;
}var m=0;
var c;
var count=0;
for (var i=0; i < this.delimiters.length$(); i+=Character.charCount$I(c)) {
c=this.delimiters.charAt$I(i).$c();
if (c >= 55296  && c <= 57343  ) {
c=this.delimiters.codePointAt$I(i);
this.hasSurrogates=true;
}if (m < c) m=c;
++count;
}
this.maxDelimCodePoint=m;
if (this.hasSurrogates) {
this.delimiterCodePoints=Clazz_array(Integer.TYPE, [count]);
for (var i=0, j=0; i < count; i++, j+=Character.charCount$I(c)) {
c=this.delimiters.codePointAt$I(j);
this.delimiterCodePoints[i]=c;
}
}}, p$1);

Clazz_newMeth(C$, 'c$$S$S$Z',  function (str, delim, returnDelims) {
;C$.$init$.apply(this);
this.currentPosition=0;
this.newPosition=-1;
this.delimsChanged=false;
this.str=str;
this.maxPosition=str.length$();
this.delimiters=delim;
this.retDelims=returnDelims;
p$1.setMaxDelimCodePoint.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$$S$S',  function (str, delim) {
C$.c$$S$S$Z.apply(this, [str, delim, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (str) {
C$.c$$S$S$Z.apply(this, [str, " \t\n\r\f", false]);
}, 1);

Clazz_newMeth(C$, 'skipDelimiters$I',  function (startPos) {
if (this.delimiters == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
var position=startPos;
while (!this.retDelims && position < this.maxPosition ){
if (!this.hasSurrogates) {
var c=this.str.charAt$I(position);
if ((c.$c() > this.maxDelimCodePoint ) || (this.delimiters.indexOf$I(c) < 0) ) break;
++position;
} else {
var c=this.str.codePointAt$I(position);
if ((c > this.maxDelimCodePoint) || !p$1.isDelimiter$I.apply(this, [c]) ) {
break;
}position+=Character.charCount$I(c);
}}
return position;
}, p$1);

Clazz_newMeth(C$, 'scanToken$I',  function (startPos) {
var position=startPos;
while (position < this.maxPosition){
if (!this.hasSurrogates) {
var c=this.str.charAt$I(position);
if ((c.$c() <= this.maxDelimCodePoint ) && (this.delimiters.indexOf$I(c) >= 0) ) break;
++position;
} else {
var c=this.str.codePointAt$I(position);
if ((c <= this.maxDelimCodePoint) && p$1.isDelimiter$I.apply(this, [c]) ) break;
position+=Character.charCount$I(c);
}}
if (this.retDelims && (startPos == position) ) {
if (!this.hasSurrogates) {
var c=this.str.charAt$I(position);
if ((c.$c() <= this.maxDelimCodePoint ) && (this.delimiters.indexOf$I(c) >= 0) ) ++position;
} else {
var c=this.str.codePointAt$I(position);
if ((c <= this.maxDelimCodePoint) && p$1.isDelimiter$I.apply(this, [c]) ) position+=Character.charCount$I(c);
}}return position;
}, p$1);

Clazz_newMeth(C$, 'isDelimiter$I',  function (codePoint) {
for (var i=0; i < this.delimiterCodePoints.length; i++) {
if (this.delimiterCodePoints[i] == codePoint) {
return true;
}}
return false;
}, p$1);

Clazz_newMeth(C$, 'hasMoreTokens$',  function () {
this.newPosition=p$1.skipDelimiters$I.apply(this, [this.currentPosition]);
return (this.newPosition < this.maxPosition);
});

Clazz_newMeth(C$, 'nextToken$',  function () {
this.currentPosition=(this.newPosition >= 0 && !this.delimsChanged ) ? this.newPosition : p$1.skipDelimiters$I.apply(this, [this.currentPosition]);
this.delimsChanged=false;
this.newPosition=-1;
if (this.currentPosition >= this.maxPosition) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
var start=this.currentPosition;
this.currentPosition=p$1.scanToken$I.apply(this, [this.currentPosition]);
return this.str.substring$I$I(start, this.currentPosition);
});

Clazz_newMeth(C$, 'nextToken$S',  function (delim) {
this.delimiters=delim;
this.delimsChanged=true;
p$1.setMaxDelimCodePoint.apply(this, []);
return this.nextToken$();
});

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return this.hasMoreTokens$();
});

Clazz_newMeth(C$, 'nextElement$',  function () {
return this.nextToken$();
});

Clazz_newMeth(C$, 'countTokens$',  function () {
var count=0;
var currpos=this.currentPosition;
while (currpos < this.maxPosition){
currpos=p$1.skipDelimiters$I.apply(this, [currpos]);
if (currpos >= this.maxPosition) break;
currpos=p$1.scanToken$I.apply(this, [currpos]);
++count;
}
return count;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:38 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},I$=[[0,'java.lang.reflect.Array']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "TimSort");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.minGallop=7;
this.stackSize=0;
},1);

C$.$fields$=[['I',['minGallop','tmpBase','tmpLen','stackSize'],'O',['a','_.T[]','c','java.util.Comparator','tmp','_.T[]','runBase','int[]','+runLen']]]

Clazz_newMeth(C$, 'c$$OA$java_util_Comparator$OA$I$I',  function (a, c, work, workBase, workLen) {
;C$.$init$.apply(this);
this.a=a;
this.c=c;
var len=a.length;
var tlen=(len < 512) ? len >>> 1 : 256;
if (work == null  || workLen < tlen  || workBase + tlen > work.length ) {
var newArray=Clazz_array(a.getClass$().getComponentType$(), tlen);
this.tmp=newArray;
this.tmpBase=0;
this.tmpLen=tlen;
} else {
this.tmp=work;
this.tmpBase=workBase;
this.tmpLen=workLen;
}var stackLen=(len < 120 ? 5 : len < 1542 ? 10 : len < 119151 ? 24 : 49);
this.runBase=Clazz_array(Integer.TYPE, [stackLen]);
this.runLen=Clazz_array(Integer.TYPE, [stackLen]);
}, 1);

Clazz_newMeth(C$, 'sort$OA$I$I$java_util_Comparator$OA$I$I',  function (a, lo, hi, c, work, workBase, workLen) {
Clazz_assert(C$, this, function(){return c != null  && a != null   && lo >= 0  && lo <= hi  && hi <= a.length });
var nRemaining=hi - lo;
if (nRemaining < 2) return;
if (nRemaining < 32) {
var initRunLen=C$.countRunAndMakeAscending$OA$I$I$java_util_Comparator(a, lo, hi, c);
C$.binarySort$OA$I$I$I$java_util_Comparator(a, lo, hi, lo + initRunLen, c);
return;
}var ts=Clazz_new_(C$.c$$OA$java_util_Comparator$OA$I$I,[a, c, work, workBase, workLen]);
var minRun=C$.minRunLength$I(nRemaining);
do {
var runLen=C$.countRunAndMakeAscending$OA$I$I$java_util_Comparator(a, lo, hi, c);
if (runLen < minRun) {
var force=nRemaining <= minRun ? nRemaining : minRun;
C$.binarySort$OA$I$I$I$java_util_Comparator(a, lo, lo + force, lo + runLen, c);
runLen=force;
}p$1.pushRun$I$I.apply(ts, [lo, runLen]);
p$1.mergeCollapse.apply(ts, []);
lo+=runLen;
nRemaining-=runLen;
} while (nRemaining != 0);
Clazz_assert(C$, this, function(){return lo == hi});
p$1.mergeForceCollapse.apply(ts, []);
Clazz_assert(C$, this, function(){return ts.stackSize == 1});
}, 1);

Clazz_newMeth(C$, 'binarySort$OA$I$I$I$java_util_Comparator',  function (a, lo, hi, start, c) {
Clazz_assert(C$, this, function(){return lo <= start && start <= hi });
if (start == lo) ++start;
for (; start < hi; start++) {
var pivot=a[start];
var left=lo;
var right=start;
Clazz_assert(C$, this, function(){return left <= right});
while (left < right){
var mid=(left + right) >>> 1;
if (c.compare$O$O(pivot, a[mid]) < 0) right=mid;
 else left=mid + 1;
}
Clazz_assert(C$, this, function(){return left == right});
var n=start - left;
switch (n) {
case 2:
a[left + 2]=a[left + 1];
case 1:
a[left + 1]=a[left];
break;
default:
System.arraycopy$O$I$O$I$I(a, left, a, left + 1, n);
}
a[left]=pivot;
}
}, 1);

Clazz_newMeth(C$, 'countRunAndMakeAscending$OA$I$I$java_util_Comparator',  function (a, lo, hi, c) {
Clazz_assert(C$, this, function(){return lo < hi});
var runHi=lo + 1;
if (runHi == hi) return 1;
if (c.compare$O$O(a[runHi++], a[lo]) < 0) {
while (runHi < hi && c.compare$O$O(a[runHi], a[runHi - 1]) < 0 )++runHi;

C$.reverseRange$OA$I$I(a, lo, runHi);
} else {
while (runHi < hi && c.compare$O$O(a[runHi], a[runHi - 1]) >= 0 )++runHi;

}return runHi - lo;
}, 1);

Clazz_newMeth(C$, 'reverseRange$OA$I$I',  function (a, lo, hi) {
--hi;
while (lo < hi){
var t=a[lo];
a[lo++]=a[hi];
a[hi--]=t;
}
}, 1);

Clazz_newMeth(C$, 'minRunLength$I',  function (n) {
Clazz_assert(C$, this, function(){return n >= 0});
var r=0;
while (n >= 32){
r|=(n & 1);
n>>=1;
}
return n + r;
}, 1);

Clazz_newMeth(C$, 'pushRun$I$I',  function (runBase, runLen) {
this.runBase[this.stackSize]=runBase;
this.runLen[this.stackSize]=runLen;
++this.stackSize;
}, p$1);

Clazz_newMeth(C$, 'mergeCollapse',  function () {
while (this.stackSize > 1){
var n=this.stackSize - 2;
if (n > 0 && this.runLen[n - 1] <= this.runLen[n] + this.runLen[n + 1] ) {
if (this.runLen[n - 1] < this.runLen[n + 1]) --n;
p$1.mergeAt$I.apply(this, [n]);
} else if (this.runLen[n] <= this.runLen[n + 1]) {
p$1.mergeAt$I.apply(this, [n]);
} else {
break;
}}
}, p$1);

Clazz_newMeth(C$, 'mergeForceCollapse',  function () {
while (this.stackSize > 1){
var n=this.stackSize - 2;
if (n > 0 && this.runLen[n - 1] < this.runLen[n + 1] ) --n;
p$1.mergeAt$I.apply(this, [n]);
}
}, p$1);

Clazz_newMeth(C$, 'mergeAt$I',  function (i) {
Clazz_assert(C$, this, function(){return this.stackSize >= 2});
Clazz_assert(C$, this, function(){return i >= 0});
Clazz_assert(C$, this, function(){return i == this.stackSize - 2 || i == this.stackSize - 3 });
var base1=this.runBase[i];
var len1=this.runLen[i];
var base2=this.runBase[i + 1];
var len2=this.runLen[i + 1];
Clazz_assert(C$, this, function(){return len1 > 0 && len2 > 0 });
Clazz_assert(C$, this, function(){return base1 + len1 == base2});
this.runLen[i]=len1 + len2;
if (i == this.stackSize - 3) {
this.runBase[i + 1]=this.runBase[i + 2];
this.runLen[i + 1]=this.runLen[i + 2];
}--this.stackSize;
var k=C$.gallopRight$O$OA$I$I$I$java_util_Comparator(this.a[base2], this.a, base1, len1, 0, this.c);
Clazz_assert(C$, this, function(){return k >= 0});
base1+=k;
len1-=k;
if (len1 == 0) return;
len2=C$.gallopLeft$O$OA$I$I$I$java_util_Comparator(this.a[base1 + len1 - 1], this.a, base2, len2, len2 - 1, this.c);
Clazz_assert(C$, this, function(){return len2 >= 0});
if (len2 == 0) return;
if (len1 <= len2) p$1.mergeLo$I$I$I$I.apply(this, [base1, len1, base2, len2]);
 else p$1.mergeHi$I$I$I$I.apply(this, [base1, len1, base2, len2]);
}, p$1);

Clazz_newMeth(C$, 'gallopLeft$O$OA$I$I$I$java_util_Comparator',  function (key, a, base, len, hint, c) {
Clazz_assert(C$, this, function(){return len > 0 && hint >= 0  && hint < len });
var lastOfs=0;
var ofs=1;
if (c.compare$O$O(key, a[base + hint]) > 0) {
var maxOfs=len - hint;
while (ofs < maxOfs && c.compare$O$O(key, a[base + hint + ofs ]) > 0 ){
lastOfs=ofs;
ofs=(ofs << 1) + 1;
if (ofs <= 0) ofs=maxOfs;
}
if (ofs > maxOfs) ofs=maxOfs;
lastOfs+=hint;
ofs+=hint;
} else {
var maxOfs=hint + 1;
while (ofs < maxOfs && c.compare$O$O(key, a[base + hint - ofs]) <= 0 ){
lastOfs=ofs;
ofs=(ofs << 1) + 1;
if (ofs <= 0) ofs=maxOfs;
}
if (ofs > maxOfs) ofs=maxOfs;
var tmp=lastOfs;
lastOfs=hint - ofs;
ofs=hint - tmp;
}Clazz_assert(C$, this, function(){return -1 <= lastOfs && lastOfs < ofs  && ofs <= len });
++lastOfs;
while (lastOfs < ofs){
var m=lastOfs + ((ofs - lastOfs) >>> 1);
if (c.compare$O$O(key, a[base + m]) > 0) lastOfs=m + 1;
 else ofs=m;
}
Clazz_assert(C$, this, function(){return lastOfs == ofs});
return ofs;
}, 1);

Clazz_newMeth(C$, 'gallopRight$O$OA$I$I$I$java_util_Comparator',  function (key, a, base, len, hint, c) {
Clazz_assert(C$, this, function(){return len > 0 && hint >= 0  && hint < len });
var ofs=1;
var lastOfs=0;
if (c.compare$O$O(key, a[base + hint]) < 0) {
var maxOfs=hint + 1;
while (ofs < maxOfs && c.compare$O$O(key, a[base + hint - ofs]) < 0 ){
lastOfs=ofs;
ofs=(ofs << 1) + 1;
if (ofs <= 0) ofs=maxOfs;
}
if (ofs > maxOfs) ofs=maxOfs;
var tmp=lastOfs;
lastOfs=hint - ofs;
ofs=hint - tmp;
} else {
var maxOfs=len - hint;
while (ofs < maxOfs && c.compare$O$O(key, a[base + hint + ofs ]) >= 0 ){
lastOfs=ofs;
ofs=(ofs << 1) + 1;
if (ofs <= 0) ofs=maxOfs;
}
if (ofs > maxOfs) ofs=maxOfs;
lastOfs+=hint;
ofs+=hint;
}Clazz_assert(C$, this, function(){return -1 <= lastOfs && lastOfs < ofs  && ofs <= len });
++lastOfs;
while (lastOfs < ofs){
var m=lastOfs + ((ofs - lastOfs) >>> 1);
if (c.compare$O$O(key, a[base + m]) < 0) ofs=m;
 else lastOfs=m + 1;
}
Clazz_assert(C$, this, function(){return lastOfs == ofs});
return ofs;
}, 1);

Clazz_newMeth(C$, 'mergeLo$I$I$I$I',  function (base1, len1, base2, len2) {
Clazz_assert(C$, this, function(){return len1 > 0 && len2 > 0  && base1 + len1 == base2 });
var a=this.a;
var tmp=p$1.ensureCapacity$I.apply(this, [len1]);
var cursor1=this.tmpBase;
var cursor2=base2;
var dest=base1;
System.arraycopy$O$I$O$I$I(a, base1, tmp, cursor1, len1);
a[dest++]=a[cursor2++];
if (--len2 == 0) {
System.arraycopy$O$I$O$I$I(tmp, cursor1, a, dest, len1);
return;
}if (len1 == 1) {
System.arraycopy$O$I$O$I$I(a, cursor2, a, dest, len2);
a[dest + len2]=tmp[cursor1];
return;
}var c=this.c;
var minGallop=this.minGallop;
 outer : while (true){
var count1=0;
var count2=0;
do {
Clazz_assert(C$, this, function(){return len1 > 1 && len2 > 0 });
if (c.compare$O$O(a[cursor2], tmp[cursor1]) < 0) {
a[dest++]=a[cursor2++];
++count2;
count1=0;
if (--len2 == 0) break outer;
} else {
a[dest++]=tmp[cursor1++];
++count1;
count2=0;
if (--len1 == 1) break outer;
}} while ((count1 | count2) < minGallop);
do {
Clazz_assert(C$, this, function(){return len1 > 1 && len2 > 0 });
count1=C$.gallopRight$O$OA$I$I$I$java_util_Comparator(a[cursor2], tmp, cursor1, len1, 0, c);
if (count1 != 0) {
System.arraycopy$O$I$O$I$I(tmp, cursor1, a, dest, count1);
dest+=count1;
cursor1+=count1;
len1-=count1;
if (len1 <= 1) break outer;
}a[dest++]=a[cursor2++];
if (--len2 == 0) break outer;
count2=C$.gallopLeft$O$OA$I$I$I$java_util_Comparator(tmp[cursor1], a, cursor2, len2, 0, c);
if (count2 != 0) {
System.arraycopy$O$I$O$I$I(a, cursor2, a, dest, count2);
dest+=count2;
cursor2+=count2;
len2-=count2;
if (len2 == 0) break outer;
}a[dest++]=tmp[cursor1++];
if (--len1 == 1) break outer;
--minGallop;
} while (!!(count1 >= 7 | count2 >= 7));
if (minGallop < 0) minGallop=0;
minGallop+=2;
}
this.minGallop=minGallop < 1 ? 1 : minGallop;
if (len1 == 1) {
Clazz_assert(C$, this, function(){return len2 > 0});
System.arraycopy$O$I$O$I$I(a, cursor2, a, dest, len2);
a[dest + len2]=tmp[cursor1];
} else if (len1 == 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Comparison method violates its general contract!"]);
} else {
Clazz_assert(C$, this, function(){return len2 == 0});
Clazz_assert(C$, this, function(){return len1 > 1});
System.arraycopy$O$I$O$I$I(tmp, cursor1, a, dest, len1);
}}, p$1);

Clazz_newMeth(C$, 'mergeHi$I$I$I$I',  function (base1, len1, base2, len2) {
Clazz_assert(C$, this, function(){return len1 > 0 && len2 > 0  && base1 + len1 == base2 });
var a=this.a;
var tmp=p$1.ensureCapacity$I.apply(this, [len2]);
var tmpBase=this.tmpBase;
System.arraycopy$O$I$O$I$I(a, base2, tmp, tmpBase, len2);
var cursor1=base1 + len1 - 1;
var cursor2=tmpBase + len2 - 1;
var dest=base2 + len2 - 1;
a[dest--]=a[cursor1--];
if (--len1 == 0) {
System.arraycopy$O$I$O$I$I(tmp, tmpBase, a, dest - (len2 - 1), len2);
return;
}if (len2 == 1) {
dest-=len1;
cursor1-=len1;
System.arraycopy$O$I$O$I$I(a, cursor1 + 1, a, dest + 1, len1);
a[dest]=tmp[cursor2];
return;
}var c=this.c;
var minGallop=this.minGallop;
 outer : while (true){
var count1=0;
var count2=0;
do {
Clazz_assert(C$, this, function(){return len1 > 0 && len2 > 1 });
if (c.compare$O$O(tmp[cursor2], a[cursor1]) < 0) {
a[dest--]=a[cursor1--];
++count1;
count2=0;
if (--len1 == 0) break outer;
} else {
a[dest--]=tmp[cursor2--];
++count2;
count1=0;
if (--len2 == 1) break outer;
}} while ((count1 | count2) < minGallop);
do {
Clazz_assert(C$, this, function(){return len1 > 0 && len2 > 1 });
count1=len1 - C$.gallopRight$O$OA$I$I$I$java_util_Comparator(tmp[cursor2], a, base1, len1, len1 - 1, c);
if (count1 != 0) {
dest-=count1;
cursor1-=count1;
len1-=count1;
System.arraycopy$O$I$O$I$I(a, cursor1 + 1, a, dest + 1, count1);
if (len1 == 0) break outer;
}a[dest--]=tmp[cursor2--];
if (--len2 == 1) break outer;
count2=len2 - C$.gallopLeft$O$OA$I$I$I$java_util_Comparator(a[cursor1], tmp, tmpBase, len2, len2 - 1, c);
if (count2 != 0) {
dest-=count2;
cursor2-=count2;
len2-=count2;
System.arraycopy$O$I$O$I$I(tmp, cursor2 + 1, a, dest + 1, count2);
if (len2 <= 1) break outer;
}a[dest--]=a[cursor1--];
if (--len1 == 0) break outer;
--minGallop;
} while (!!(count1 >= 7 | count2 >= 7));
if (minGallop < 0) minGallop=0;
minGallop+=2;
}
this.minGallop=minGallop < 1 ? 1 : minGallop;
if (len2 == 1) {
Clazz_assert(C$, this, function(){return len1 > 0});
dest-=len1;
cursor1-=len1;
System.arraycopy$O$I$O$I$I(a, cursor1 + 1, a, dest + 1, len1);
a[dest]=tmp[cursor2];
} else if (len2 == 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Comparison method violates its general contract!"]);
} else {
Clazz_assert(C$, this, function(){return len1 == 0});
Clazz_assert(C$, this, function(){return len2 > 0});
System.arraycopy$O$I$O$I$I(tmp, tmpBase, a, dest - (len2 - 1), len2);
}}, p$1);

Clazz_newMeth(C$, 'ensureCapacity$I',  function (minCapacity) {
if (this.tmpLen < minCapacity) {
var newSize=minCapacity;
newSize|=newSize >> 1;
newSize|=newSize >> 2;
newSize|=newSize >> 4;
newSize|=newSize >> 8;
newSize|=newSize >> 16;
++newSize;
if (newSize < 0) newSize=minCapacity;
 else newSize=Math.min(newSize, this.a.length >>> 1);
var newArray=Clazz_array(this.a.getClass$().getComponentType$(), newSize);
this.tmp=newArray;
this.tmpLen=newSize;
this.tmpBase=0;
}return this.tmp;
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:38 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=java.util,p$1={},p$2={},I$=[[0,'java.util.Objects','java.util.Arrays','OutOfMemoryError','InternalError','java.util.Collections',['java.util.Vector','.ListItr'],['java.util.Vector','.Itr'],'java.util.BitSet',['java.util.Vector','.VectorSpliterator']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Vector", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.AbstractList', ['java.util.List', 'java.util.RandomAccess', 'Cloneable', 'java.io.Serializable']);
C$.$classes$=[['Itr',2],['ListItr',16],['VectorSpliterator',24]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['elementCount','capacityIncrement'],'O',['elementData','Object[]']]]

Clazz_newMeth(C$, 'c$$I$I',  function (initialCapacity, capacityIncrement) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
if (initialCapacity < 0) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Illegal Capacity: " + initialCapacity]);
this.elementData=Clazz_array(java.lang.Object, [initialCapacity]);
this.capacityIncrement=capacityIncrement;
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialCapacity) {
C$.c$$I$I.apply(this, [initialCapacity, 0]);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I.apply(this, [10]);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Collection',  function (c) {
Clazz_super_(C$, this);
this.elementData=c.toArray$();
this.elementCount=this.elementData.length;
if (this.elementData.getClass$() !== Clazz_array(java.lang.Object, -1) ) this.elementData=$I$(2,"copyOf$OA$I$Class",[this.elementData, this.elementCount, Clazz_array(java.lang.Object, -1)]);
}, 1);

Clazz_newMeth(C$, 'copyInto$OA',  function (anArray) {
System.arraycopy$O$I$O$I$I(this.elementData, 0, anArray, 0, this.elementCount);
});

Clazz_newMeth(C$, 'trimToSize$',  function () {
++this.modCount;
var oldCapacity=this.elementData.length;
if (this.elementCount < oldCapacity) {
this.elementData=$I$(2).copyOf$OA$I(this.elementData, this.elementCount);
}});

Clazz_newMeth(C$, 'ensureCapacity$I',  function (minCapacity) {
if (minCapacity > 0) {
++this.modCount;
p$2.ensureCapacityHelper$I.apply(this, [minCapacity]);
}});

Clazz_newMeth(C$, 'ensureCapacityHelper$I',  function (minCapacity) {
if (minCapacity - this.elementData.length > 0) p$2.grow$I.apply(this, [minCapacity]);
}, p$2);

Clazz_newMeth(C$, 'grow$I',  function (minCapacity) {
var oldCapacity=this.elementData.length;
var newCapacity=oldCapacity + ((this.capacityIncrement > 0) ? this.capacityIncrement : oldCapacity);
if (newCapacity - minCapacity < 0) newCapacity=minCapacity;
if (newCapacity - 2147483639 > 0) newCapacity=C$.hugeCapacity$I(minCapacity);
this.elementData=$I$(2).copyOf$OA$I(this.elementData, newCapacity);
}, p$2);

Clazz_newMeth(C$, 'hugeCapacity$I',  function (minCapacity) {
if (minCapacity < 0) throw Clazz_new_($I$(3,1));
return (minCapacity > 2147483639) ? 2147483647 : 2147483639;
}, 1);

Clazz_newMeth(C$, 'setSize$I',  function (newSize) {
++this.modCount;
if (newSize > this.elementCount) {
p$2.ensureCapacityHelper$I.apply(this, [newSize]);
} else {
for (var i=newSize; i < this.elementCount; i++) {
this.elementData[i]=null;
}
}this.elementCount=newSize;
});

Clazz_newMeth(C$, 'capacity$',  function () {
return this.elementData.length;
});

Clazz_newMeth(C$, 'size$',  function () {
return this.elementCount;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.elementCount == 0;
});

Clazz_newMeth(C$, 'elements$',  function () {
return ((P$.Vector$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Vector$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.count=0;
},1);

C$.$fields$=[['I',['count']]]

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return this.count < this.b$['java.util.Vector'].elementCount;
});

Clazz_newMeth(C$, 'nextElement$',  function () {
{
if (this.count < this.b$['java.util.Vector'].elementCount) {
return this.b$['java.util.Vector'].elementData$I.apply(this.b$['java.util.Vector'], [this.count++]);
}}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException').c$$S,["Vector Enumeration"]);
});
})()
), Clazz_new_(P$.Vector$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'contains$O',  function (o) {
return this.indexOf$O$I(o, 0) >= 0;
});

Clazz_newMeth(C$, 'indexOf$O',  function (o) {
return this.indexOf$O$I(o, 0);
});

Clazz_newMeth(C$, 'indexOf$O$I',  function (o, index) {
if (o == null ) {
for (var i=index; i < this.elementCount; i++) if (this.elementData[i] == null ) return i;

} else {
for (var i=index; i < this.elementCount; i++) if (o.equals$O(this.elementData[i])) return i;

}return -1;
});

Clazz_newMeth(C$, 'lastIndexOf$O',  function (o) {
return this.lastIndexOf$O$I(o, this.elementCount - 1);
});

Clazz_newMeth(C$, 'lastIndexOf$O$I',  function (o, index) {
if (index >= this.elementCount) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,[index + " >= " + this.elementCount ]);
if (o == null ) {
for (var i=index; i >= 0; i--) if (this.elementData[i] == null ) return i;

} else {
for (var i=index; i >= 0; i--) if (o.equals$O(this.elementData[i])) return i;

}return -1;
});

Clazz_newMeth(C$, 'elementAt$I',  function (index) {
if (index >= this.elementCount) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,[index + " >= " + this.elementCount ]);
}return this.elementData$I(index);
});

Clazz_newMeth(C$, 'firstElement$',  function () {
if (this.elementCount == 0) {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
}return this.elementData$I(0);
});

Clazz_newMeth(C$, 'lastElement$',  function () {
if (this.elementCount == 0) {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
}return this.elementData$I(this.elementCount - 1);
});

Clazz_newMeth(C$, 'setElementAt$O$I',  function (obj, index) {
if (index >= this.elementCount) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,[index + " >= " + this.elementCount ]);
}this.elementData[index]=obj;
});

Clazz_newMeth(C$, 'removeElementAt$I',  function (index) {
++this.modCount;
if (index >= this.elementCount) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,[index + " >= " + this.elementCount ]);
} else if (index < 0) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[index]);
}var j=this.elementCount - index - 1 ;
if (j > 0) {
System.arraycopy$O$I$O$I$I(this.elementData, index + 1, this.elementData, index, j);
}--this.elementCount;
this.elementData[this.elementCount]=null;
});

Clazz_newMeth(C$, 'insertElementAt$O$I',  function (obj, index) {
++this.modCount;
if (index > this.elementCount) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,[index + " > " + this.elementCount ]);
}p$2.ensureCapacityHelper$I.apply(this, [this.elementCount + 1]);
System.arraycopy$O$I$O$I$I(this.elementData, index, this.elementData, index + 1, this.elementCount - index);
this.elementData[index]=obj;
++this.elementCount;
});

Clazz_newMeth(C$, 'addElement$O',  function (obj) {
++this.modCount;
p$2.ensureCapacityHelper$I.apply(this, [this.elementCount + 1]);
this.elementData[this.elementCount++]=obj;
});

Clazz_newMeth(C$, 'removeElement$O',  function (obj) {
++this.modCount;
var i=this.indexOf$O(obj);
if (i >= 0) {
this.removeElementAt$I(i);
return true;
}return false;
});

Clazz_newMeth(C$, 'removeAllElements$',  function () {
++this.modCount;
for (var i=0; i < this.elementCount; i++) this.elementData[i]=null;

this.elementCount=0;
});

Clazz_newMeth(C$, 'clone$',  function () {
try {
var v=Clazz_clone(this);
v.elementData=$I$(2).copyOf$OA$I(this.elementData, this.elementCount);
v.modCount=0;
return v;
} catch (e) {
if (Clazz_exceptionOf(e,"CloneNotSupportedException")){
throw Clazz_new_($I$(4,1).c$$Throwable,[e]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'toArray$',  function () {
return $I$(2).copyOf$OA$I(this.elementData, this.elementCount);
});

Clazz_newMeth(C$, 'toArray$OA',  function (a) {
if (a.length < this.elementCount) return $I$(2,"copyOf$OA$I$Class",[this.elementData, this.elementCount, a.getClass$()]);
System.arraycopy$O$I$O$I$I(this.elementData, 0, a, 0, this.elementCount);
if (a.length > this.elementCount) a[this.elementCount]=null;
return a;
});

Clazz_newMeth(C$, 'elementData$I',  function (index) {
return this.elementData[index];
});

Clazz_newMeth(C$, 'get$I',  function (index) {
if (index >= this.elementCount) throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[index]);
return this.elementData$I(index);
});

Clazz_newMeth(C$, 'set$I$O',  function (index, element) {
if (index >= this.elementCount) throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[index]);
var oldValue=this.elementData$I(index);
this.elementData[index]=element;
return oldValue;
});

Clazz_newMeth(C$, 'add$O',  function (e) {
++this.modCount;
p$2.ensureCapacityHelper$I.apply(this, [this.elementCount + 1]);
this.elementData[this.elementCount++]=e;
return true;
});

Clazz_newMeth(C$, 'remove$O',  function (o) {
return this.removeElement$O(o);
});

Clazz_newMeth(C$, 'add$I$O',  function (index, element) {
this.insertElementAt$O$I(element, index);
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
++this.modCount;
if (index >= this.elementCount) throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[index]);
var oldValue=this.elementData$I(index);
var numMoved=this.elementCount - index - 1 ;
if (numMoved > 0) System.arraycopy$O$I$O$I$I(this.elementData, index + 1, this.elementData, index, numMoved);
this.elementData[--this.elementCount]=null;
return oldValue;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.removeAllElements$();
});

Clazz_newMeth(C$, 'containsAll$java_util_Collection',  function (c) {
return C$.superclazz.prototype.containsAll$java_util_Collection.apply(this, [c]);
});

Clazz_newMeth(C$, 'addAll$java_util_Collection',  function (c) {
++this.modCount;
var a=c.toArray$();
var numNew=a.length;
p$2.ensureCapacityHelper$I.apply(this, [this.elementCount + numNew]);
System.arraycopy$O$I$O$I$I(a, 0, this.elementData, this.elementCount, numNew);
this.elementCount+=numNew;
return numNew != 0;
});

Clazz_newMeth(C$, 'removeAll$java_util_Collection',  function (c) {
return C$.superclazz.prototype.removeAll$java_util_Collection.apply(this, [c]);
});

Clazz_newMeth(C$, 'retainAll$java_util_Collection',  function (c) {
return C$.superclazz.prototype.retainAll$java_util_Collection.apply(this, [c]);
});

Clazz_newMeth(C$, 'addAll$I$java_util_Collection',  function (index, c) {
++this.modCount;
if (index < 0 || index > this.elementCount ) throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$I,[index]);
var a=c.toArray$();
var numNew=a.length;
p$2.ensureCapacityHelper$I.apply(this, [this.elementCount + numNew]);
var numMoved=this.elementCount - index;
if (numMoved > 0) System.arraycopy$O$I$O$I$I(this.elementData, index, this.elementData, index + numNew, numMoved);
System.arraycopy$O$I$O$I$I(a, 0, this.elementData, index, numNew);
this.elementCount+=numNew;
return numNew != 0;
});

Clazz_newMeth(C$, 'equals$O',  function (o) {
return C$.superclazz.prototype.equals$O.apply(this, [o]);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return C$.superclazz.prototype.hashCode$.apply(this, []);
});

Clazz_newMeth(C$, 'toString',  function () {
return C$.superclazz.prototype.toString.apply(this, []);
});

Clazz_newMeth(C$, 'subList$I$I',  function (fromIndex, toIndex) {
return $I$(5,"synchronizedList$java_util_List$O",[C$.superclazz.prototype.subList$I$I.apply(this, [fromIndex, toIndex]), this]);
});

Clazz_newMeth(C$, 'removeRange$I$I',  function (fromIndex, toIndex) {
++this.modCount;
var numMoved=this.elementCount - toIndex;
System.arraycopy$O$I$O$I$I(this.elementData, toIndex, this.elementData, fromIndex, numMoved);
var newElementCount=this.elementCount - (toIndex - fromIndex);
while (this.elementCount != newElementCount)this.elementData[--this.elementCount]=null;

});

Clazz_newMeth(C$, 'writeObject$java_io_ObjectOutputStream',  function (s) {
var fields=s.putFields$();
var data;
{
fields.put$S$I("capacityIncrement", this.capacityIncrement);
fields.put$S$I("elementCount", this.elementCount);
data=this.elementData.clone$();
}fields.put$S$O("elementData", data);
s.writeFields$();
}, p$2);

Clazz_newMeth(C$, 'listIterator$I',  function (index) {
if (index < 0 || index > this.elementCount ) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["Index: " + index]);
return Clazz_new_($I$(6,1).c$$I,[this, null, index]);
});

Clazz_newMeth(C$, 'listIterator$',  function () {
return Clazz_new_($I$(6,1).c$$I,[this, null, 0]);
});

Clazz_newMeth(C$, 'iterator$',  function () {
return Clazz_new_($I$(7,1),[this, null]);
});

Clazz_newMeth(C$, 'forEach$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
var expectedModCount=this.modCount;
var elementData=this.elementData;
var elementCount=this.elementCount;
for (var i=0; this.modCount == expectedModCount && i < elementCount ; i++) {
action.accept$O(elementData[i]);
}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}});

Clazz_newMeth(C$, 'removeIf$java_util_function_Predicate',  function (filter) {
$I$(1).requireNonNull$O(filter);
var removeCount=0;
var size=this.elementCount;
var removeSet=Clazz_new_($I$(8,1).c$$I,[size]);
var expectedModCount=this.modCount;
for (var i=0; this.modCount == expectedModCount && i < size ; i++) {
var element=this.elementData[i];
if (filter.test$O(element)) {
removeSet.set$I(i);
++removeCount;
}}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}var anyToRemove=removeCount > 0;
if (anyToRemove) {
var newSize=size - removeCount;
for (var i=0, j=0; (i < size) && (j < newSize) ; i++, j++) {
i=removeSet.nextClearBit$I(i);
this.elementData[j]=this.elementData[i];
}
for (var k=newSize; k < size; k++) {
this.elementData[k]=null;
}
this.elementCount=newSize;
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}++this.modCount;
}return anyToRemove;
});

Clazz_newMeth(C$, 'replaceAll$java_util_function_UnaryOperator',  function (operator) {
$I$(1).requireNonNull$O(operator);
var expectedModCount=this.modCount;
var size=this.elementCount;
for (var i=0; this.modCount == expectedModCount && i < size ; i++) {
this.elementData[i]=operator.apply$O(this.elementData[i]);
}
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}++this.modCount;
});

Clazz_newMeth(C$, 'sort$java_util_Comparator',  function (c) {
var expectedModCount=this.modCount;
$I$(2).sort$OA$I$I$java_util_Comparator(this.elementData, 0, this.elementCount, c);
if (this.modCount != expectedModCount) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}++this.modCount;
});

Clazz_newMeth(C$, 'spliterator$',  function () {
return Clazz_new_($I$(9,1).c$$java_util_Vector$OA$I$I$I,[this, null, 0, -1, 0]);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.Vector, "Itr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.lastRet=-1;
this.expectedModCount=this.b$['java.util.Vector'].modCount;
},1);

C$.$fields$=[['I',['cursor','lastRet','expectedModCount']]]

Clazz_newMeth(C$, 'hasNext$',  function () {
return this.cursor != this.b$['java.util.Vector'].elementCount;
});

Clazz_newMeth(C$, 'next$',  function () {
{
this.checkForComodification$();
var i=this.cursor;
if (i >= this.b$['java.util.Vector'].elementCount) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.cursor=i + 1;
return this.b$['java.util.Vector'].elementData$I.apply(this.b$['java.util.Vector'], [this.lastRet=i]);
}});

Clazz_newMeth(C$, 'remove$',  function () {
if (this.lastRet == -1) throw Clazz_new_(Clazz_load('IllegalStateException'));
{
this.checkForComodification$();
this.b$['java.util.Vector'].remove$I.apply(this.b$['java.util.Vector'], [this.lastRet]);
this.expectedModCount=this.b$['java.util.Vector'].modCount;
}this.cursor=this.lastRet;
this.lastRet=-1;
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
$I$(1).requireNonNull$O(action);
{
var size=this.b$['java.util.Vector'].elementCount;
var i=this.cursor;
if (i >= size) {
return;
}var elementData=this.b$['java.util.Vector'].elementData;
if (i >= elementData.length) {
throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
}while (i != size && this.b$['java.util.Vector'].modCount == this.expectedModCount ){
action.accept$O(elementData[i++]);
}
this.cursor=i;
this.lastRet=i - 1;
this.checkForComodification$();
}});

Clazz_newMeth(C$, 'checkForComodification$',  function () {
if (this.b$['java.util.Vector'].modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Vector, "ListItr", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['java.util.Vector','.Itr'], 'java.util.ListIterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I',  function (index) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.cursor=index;
}, 1);

Clazz_newMeth(C$, 'hasPrevious$',  function () {
return this.cursor != 0;
});

Clazz_newMeth(C$, 'nextIndex$',  function () {
return this.cursor;
});

Clazz_newMeth(C$, 'previousIndex$',  function () {
return this.cursor - 1;
});

Clazz_newMeth(C$, 'previous$',  function () {
{
this.checkForComodification$();
var i=this.cursor - 1;
if (i < 0) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
this.cursor=i;
return this.b$['java.util.Vector'].elementData$I.apply(this.b$['java.util.Vector'], [this.lastRet=i]);
}});

Clazz_newMeth(C$, 'set$O',  function (e) {
if (this.lastRet == -1) throw Clazz_new_(Clazz_load('IllegalStateException'));
{
this.checkForComodification$();
this.b$['java.util.Vector'].set$I$O.apply(this.b$['java.util.Vector'], [this.lastRet, e]);
}});

Clazz_newMeth(C$, 'add$O',  function (e) {
var i=this.cursor;
{
this.checkForComodification$();
this.b$['java.util.Vector'].add$I$O.apply(this.b$['java.util.Vector'], [i, e]);
this.expectedModCount=this.b$['java.util.Vector'].modCount;
}this.cursor=i + 1;
this.lastRet=-1;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.Vector, "VectorSpliterator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Spliterator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index','fence','expectedModCount'],'O',['list','java.util.Vector','array','Object[]']]]

Clazz_newMeth(C$, 'c$$java_util_Vector$OA$I$I$I',  function (list, array, origin, fence, expectedModCount) {
;C$.$init$.apply(this);
this.list=list;
this.array=array;
this.index=origin;
this.fence=fence;
this.expectedModCount=expectedModCount;
}, 1);

Clazz_newMeth(C$, 'getFence',  function () {
var hi;
if ((hi=this.fence) < 0) {
{
this.array=this.list.elementData;
this.expectedModCount=this.list.modCount;
hi=this.fence=this.list.elementCount;
}}return hi;
}, p$1);

Clazz_newMeth(C$, 'trySplit$',  function () {
var hi=p$1.getFence.apply(this, []);
var lo=this.index;
var mid=(lo + hi) >>> 1;
return (lo >= mid) ? null : Clazz_new_(C$.c$$java_util_Vector$OA$I$I$I,[this.list, this.array, lo, this.index=mid, this.expectedModCount]);
});

Clazz_newMeth(C$, 'tryAdvance$java_util_function_Consumer',  function (action) {
var i;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if (p$1.getFence.apply(this, []) > (i=this.index)) {
this.index=i + 1;
action.accept$O(this.array[i]);
if (this.list.modCount != this.expectedModCount) throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
return true;
}return false;
});

Clazz_newMeth(C$, 'forEachRemaining$java_util_function_Consumer',  function (action) {
var i;
var hi;
var lst;
var a;
if (action == null ) throw Clazz_new_(Clazz_load('NullPointerException'));
if ((lst=this.list) != null ) {
if ((hi=this.fence) < 0) {
{
this.expectedModCount=lst.modCount;
a=this.array=lst.elementData;
hi=this.fence=lst.elementCount;
}} else a=this.array;
if (a != null  && (i=this.index) >= 0  && (this.index=hi) <= a.length ) {
while (i < hi)action.accept$O(a[i++]);

if (lst.modCount == this.expectedModCount) return;
}}throw Clazz_new_(Clazz_load('java.util.ConcurrentModificationException'));
});

Clazz_newMeth(C$, 'estimateSize$',  function () {
return (p$1.getFence.apply(this, []) - this.index);
});

Clazz_newMeth(C$, 'characteristics$',  function () {
return 16464;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:38 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("java.util.regex"),p$1={},I$=[[0,'java.util.ArrayList','java.util.regex.Matcher','StringBuilder','swingjs.JSUtil','javajs.util.SB','java.util.HashMap','java.util.stream.StreamSupport','java.util.Spliterators']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Pattern");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.compiled=false;
this.秘groupNames=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['Z',['compiled'],'I',['flags','cursor'],'S',['pattern','秘pattern'],'O',['namedGroups','java.util.Map','秘groupNames','java.util.ArrayList','regexp','java.util.regex.Matcher.RegExp']]
,['O',['testPattern','java.util.regex.Pattern','posixes','String[]']]]

Clazz_newMeth(C$, ['compile$S','compile'],  function (regex) {
return Clazz_new_(C$.c$$S$I,[regex, 0]);
}, 1);

Clazz_newMeth(C$, 'compile$S$I',  function (regex, flags) {
return Clazz_new_(C$.c$$S$I,[regex, flags]);
}, 1);

Clazz_newMeth(C$, 'pattern$',  function () {
return this.pattern;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.pattern;
});

Clazz_newMeth(C$, 'matcher$CharSequence',  function (input) {
if (!this.compiled) {
p$1.compile.apply(this, []);
}return Clazz_new_($I$(2,1).c$$java_util_regex_Pattern$CharSequence,[this, input]);
});

Clazz_newMeth(C$, 'flags$',  function () {
return this.flags;
});

Clazz_newMeth(C$, 'matches$S$CharSequence',  function (regex, input) {
var p=C$.compile$S(regex);
var m=p.matcher$CharSequence(input);
return m.matches$();
}, 1);

Clazz_newMeth(C$, 'split$CharSequence$I',  function (input, limit) {
var index=0;
var matchLimited=limit > 0;
var matchList=Clazz_new_($I$(1,1));
var m=this.matcher$CharSequence(input);
while (m.find$()){
if (!matchLimited || matchList.size$() < limit - 1 ) {
if (index == 0 && index == m.start$()  && m.start$() == m.end$() ) {
continue;
}var match=input.subSequence$I$I(index, m.start$()).toString();
matchList.add$O(match);
index=m.end$();
} else if (matchList.size$() == limit - 1) {
var match=input.subSequence$I$I(index, input.length$()).toString();
matchList.add$O(match);
index=m.end$();
}}
if (index == 0) return Clazz_array(String, -1, [input.toString()]);
if (!matchLimited || matchList.size$() < limit ) matchList.add$O(input.subSequence$I$I(index, input.length$()).toString());
var resultSize=matchList.size$();
if (limit == 0) while (resultSize > 0 && matchList.get$I(resultSize - 1).equals$O("") )--resultSize;

var result=Clazz_array(String, [resultSize]);
return matchList.subList$I$I(0, resultSize).toArray$OA(result);
});

Clazz_newMeth(C$, 'split$CharSequence',  function (input) {
return this.split$CharSequence$I(input, 0);
});

Clazz_newMeth(C$, 'quote$S',  function (s) {
var slashEIndex=s.indexOf$S("\\E");
if (slashEIndex == -1) return "\\Q" + s + "\\E" ;
var sb=Clazz_new_([s.length$() * 2],$I$(3,1).c$$I);
sb.append$S("\\Q");
slashEIndex=0;
var current=0;
while ((slashEIndex=s.indexOf$S$I("\\E", current)) != -1){
sb.append$S(s.substring$I$I(current, slashEIndex));
current=slashEIndex + 2;
sb.append$S("\\E\\\\E\\Q");
}
sb.append$S(s.substring$I$I(current, s.length$()));
sb.append$S("\\E");
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$S$I',  function (p, f) {
;C$.$init$.apply(this);
this.pattern=p;
this.flags=f;
if (this.pattern.length$() > 0) {
p$1.compile.apply(this, []);
}}, 1);

Clazz_newMeth(C$, 'removeQEQuoting$S',  function (pattern) {
var pt;
while ((pt=pattern.indexOf$S("\\Q")) >= 0){
var ret=pattern.substring$I$I(0, pt);
var pt1=pattern.indexOf$S$I("\\E", pt);
if (pt1 < 0) pt1=pattern.length$();
ret+=C$.javaQuote$S(pattern.substring$I$I(pt + 2, pt1));
pattern=ret + pattern.substring$I(pt1 + 2);
}
if (pattern.indexOf$S("\\p{") >= 0) {
for (var i=0, n=C$.posixes.length; i < n; i+=2) {
pattern=pattern.replace$CharSequence$CharSequence(C$.posixes[i], C$.posixes[i + 1]);
}
if (pattern.indexOf$S("\\p{") >= 0) {
$I$(4).notImplemented$S("POSIX " + pattern);
}}return pattern;
}, 1);

Clazz_newMeth(C$, 'javaQuote$S',  function (s) {
for (var i=s.length$(); --i >= 0; ) {
var ch=s.charAt$I(i);
if ("[]^$|()\\+*?{}=!".indexOf$I(ch) >= 0) s=s.substring$I$I(0, i) + "\\" + s.substring$I(i) ;
}
return s;
}, 1);

Clazz_newMeth(C$, 'getJSRegex$S$S',  function (regex, flags) {
if (regex.indexOf$S("\\Q") >= 0) {
regex=C$.removeQEQuoting$S(regex);
}if (C$.testPattern == null ) C$.testPattern=Clazz_new_(C$);
if (regex.indexOf$S("(?") == 0) {
C$.testPattern.pattern=regex;
p$1.checkFlags.apply(C$.testPattern, []);
regex=C$.testPattern.pattern;
}C$.testPattern.pattern="(?" + flags + ")" ;
return C$.newRegExp$S$S(regex, C$.getFlags$I(p$1.checkFlags.apply(C$.testPattern, [])));
}, 1);

Clazz_newMeth(C$, 'compile',  function () {
p$1.checkFlags.apply(this, []);
this.pattern=C$.removeQEQuoting$S(this.pattern);
this.秘pattern=C$.秘getJSpattern$S(this.pattern);
this.regexp=C$.newRegExp$S$S(this.秘pattern, C$.getFlags$I(this.flags | -2147483648));
this.compiled=true;
}, p$1);

Clazz_newMeth(C$, 'getFlags$I',  function (flags) {
var flagStr="";
if (C$.has$I$I(flags, -2147483648)) {
flagStr+="g";
}if (C$.has$I$I(flags, 2)) {
flagStr+="i";
}if (C$.has$I$I(flags, 32)) {
flagStr+="s";
}if (C$.has$I$I(flags, 8)) {
flagStr+="m";
}if ((flags & 256) != 0) {
flags|=64;
}if (C$.has$I$I(flags, 64)) {
flagStr+="u";
}var nope="";
if (C$.has$I$I(flags, 128)) {
nope+=" CANON_EQ";
flags&=~128;
}if (C$.has$I$I(flags, 4)) {
nope+=" COMMENTS";
flags&=~4;
}if (C$.has$I$I(flags, 16)) {
nope+=" LITERAL";
flags&=~16;
}if (C$.has$I$I(flags, 1)) {
nope+=" UNIX_LINES";
flags&=~1;
}if (nope.length$() > 0) $I$(4).notImplemented$S("Pattern does not implement" + nope);
return flagStr;
}, 1);

Clazz_newMeth(C$, 'newRegExp$S$S',  function (秘pattern, flags) {
return new RegExp(秘pattern, flags) ||null;
}, 1);

Clazz_newMeth(C$, '秘getJSpattern$S',  function (pattern) {
if (pattern.indexOf$S("(") < 0) return pattern;
var p=Clazz_new_($I$(5,1));
var ntext=0;
var ignore=false;
var isChar=false;
for (var i1=-1, plen=0, i=0, n=pattern.length$(); i < n; i++) {
var c=pattern.charAt$I(i);
switch (c.$c()) {
default:
isChar=true;
break;
case 42:
case 43:
case 63:
isChar=true;
if (i1 < 0) {
p.appendC$C(c);
continue;
}break;
case 91:
if (!ignore && i1 == -1 ) {
plen=p.length$();
i1=i;
}ignore=true;
isChar=true;
break;
case 93:
ignore=false;
isChar=true;
break;
case 41:
case 40:
if (ignore) break;
isChar=false;
var isQ=(c == "(" && pattern.charAt$I(i + 1) == "?" );
var isColon=(isQ && pattern.charAt$I(i + 2) == ":" );
var i0=i;
if (isColon) {
i=pattern.indexOf$I$I(")", i);
p.append$S(pattern.substring$I$I(i0, i + 1));
continue;
}if (i1 >= 0) {
p.insert$I$S(plen, "(?<秘" + ++ntext + ">" );
p.append$S(")");
i1=-1;
}if (isQ) {
if (pattern.charAt$I(i + 2) == "<") {
i=pattern.indexOf$S$I(">", i);
p.append$S(pattern.substring$I$I(i0, i + 1));
continue;
}}break;
}
if (isChar) {
if (!ignore && i1 == -1 ) {
plen=p.length$();
i1=i;
}if (c == "\\") {
p.appendC$C(c);
c=pattern.charAt$I(++i);
}}p.appendC$C(c);
}
return p.toString();
}, 1);

Clazz_newMeth(C$, 'has$I$I',  function (flags, f) {
return (flags & f) != 0;
}, 1);

Clazz_newMeth(C$, 'checkFlags',  function () {
if (this.pattern.startsWith$S("(?")) {
this.cursor=2;
p$1.addFlag.apply(this, []);
if (this.cursor > 2) this.pattern=this.pattern.substring$I(this.cursor);
}return this.flags;
}, p$1);

Clazz_newMeth(C$, 'addFlag',  function () {
for (; ; ) {
var ch=p$1.next.apply(this, []);
switch (ch) {
case 41:
return;
case 103:
this.flags|=-2147483648;
break;
case 105:
this.flags|=2;
break;
case 109:
this.flags|=8;
break;
case 115:
this.flags|=32;
break;
case 100:
this.flags|=1;
break;
case 117:
this.flags|=64;
break;
case 99:
this.flags|=128;
break;
case 120:
this.flags|=4;
break;
case 85:
this.flags|=(320);
break;
case 45:
p$1.unFlag.apply(this, []);
continue;
default:
--this.cursor;
return;
}
}
}, p$1);

Clazz_newMeth(C$, 'unFlag',  function () {
for (; ; ) {
var ch=p$1.next.apply(this, []);
switch (ch) {
case 105:
this.flags&=~2;
break;
case 109:
this.flags&=~8;
break;
case 115:
this.flags&=~32;
break;
case 100:
this.flags&=~1;
break;
case 117:
this.flags&=~64;
break;
case 99:
this.flags&=~128;
break;
case 120:
this.flags&=~4;
break;
case 85:
this.flags&=~(320);
break;
default:
--this.cursor;
return;
}
}
}, p$1);

Clazz_newMeth(C$, 'next',  function () {
return this.pattern.codePointAt$I(this.cursor++);
}, p$1);

Clazz_newMeth(C$, 'namedGroups$',  function () {
if (this.namedGroups == null ) this.namedGroups=Clazz_new_($I$(6,1).c$$I,[2]);
return this.namedGroups;
});

Clazz_newMeth(C$, 'asPredicate$',  function () {
return ((P$.Pattern$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "Pattern$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Predicate', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, ['test$S','test$O'],  function (s) { return (this.b$['java.util.regex.Pattern'].matcher$CharSequence.apply(this.b$['java.util.regex.Pattern'], [s]).find$.apply(this.b$['java.util.regex.Pattern'].matcher$CharSequence.apply(this.b$['java.util.regex.Pattern'], [s]), []));});
})()
), Clazz_new_(P$.Pattern$lambda1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'splitAsStream$CharSequence',  function (input) {
return $I$(7,"stream$java_util_Spliterator$Z",[$I$(8,"spliteratorUnknownSize$java_util_Iterator$I",[Clazz_new_(P$.Pattern$1MatcherIterator.$init$,[this, {input:input}]), 272]), false]);
});

Clazz_newMeth(C$, '秘setNameGroups$',  function () {
if (this.namedGroups != null ) return;
this.namedGroups$();
var s=this.秘pattern;
var pt=s.lastIndexOf$S("(") + 1;
if (pt == 0) return;
var ignore=false;
var n=-1;
for (var i=0; i < pt; i++) {
var c=s.charAt$I(i);
switch (c.$c()) {
case 92:
++i;
break;
case 91:
ignore=true;
break;
case 93:
ignore=false;
break;
case 40:
if (ignore) continue;
++n;
var name=null;
if (s.charAt$I(i + 1) == "?") {
switch ((s.charCodeAt$I(i + 2))) {
case 60:
var i1=s.indexOf$S$I(">", i);
name=s.substring$I$I(i + 3, i1);
if (name.startsWith$S("\u79d8")) {
--n;
} else {
this.namedGroups.put$O$O(name, Integer.valueOf$I(n));
}i=i1;
break;
case 58:
--n;
continue;
}
}if (this.秘groupNames.size$() == 0) this.秘groupNames.add$O(null);
this.秘groupNames.add$O(name);
break;
}
}
});

C$.$static$=function(){C$.$static$=0;
C$.posixes=Clazz_array(String, -1, ["\\p{javaWhitespace}", "\\s", "\\p{javaDigit}", "\\d", "\\p{Lower}", "[a-z]", "\\p{Upper}", "[A-Z]", "\\p{ASCII}", "[\u0000-]", "\\p{Alpha}", "[A-Za-z]", "\\p{Digit}", "[0-9]", "\\p{Alnum}", "[A-Za-z0-9]", "\\p{Punct}", "[!\"#$%&\'\\(\\)\\*\\+,-./:;<=>?@\\[\\\\\\]^_`{\\|}~]", "\\p{Graph}", "[A-Za-z0-9]!\"#$%&\'\\(\\)\\*\\+,-./:;<=>?@\\[\\\\\\]^_`{\\|}~]", "\\p{Print}", "[A-Za-z0-9]!\"#$%&\'\\(\\)\\*\\+,-./:;<=>?@\\[\\\\\\]^_`{\\|}~]", "\\p{Blank}", "[ \t]", "\\p{Cntrl}", "[\u0000-\u001f]", "\\p{XDigit}", "[0-9a-fA-F]", "\\p{Space}", "[ \t\n\u000b\f\r]", "\\p{javaLowerCase}", "[a-z]", "\\p{javaUpperCase}", "[A-Z]", "\\p{Sc}", "[$\u00a2\u00a3\u00a4\u00a5\u058f\u060b\u07fe\u07ff\u09f2\u09f3\u09fb\u0af1\u0bf9\u0e3f\u20a0\u20a1\u20a2\u20a3\u20a4\u20a5\u20a6\u20a7\u20a8\u20a9\u20aa\u20ab\u20ac\u20ad\u20ae\u20af\u20b0\u20b1\u20b2\u20b3\u20b4\u20b5\u20b6\u20b7\u20b8\u20b9\u20ba\u20bb\u20bc\u20bd\u20be\u20bf\ua838\ufdfc\ufe69\uff04\uffe0\uffe1\uffe5\uffe6]"]);
};
;
(function(){/*l*/var C$=Clazz_newClass(P$, "Pattern$1MatcherIterator", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Iterator', 2);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['current','emptyElementCount'],'S',['nextElement'],'O',['matcher','java.util.regex.Matcher']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.matcher=this.b$['java.util.regex.Pattern'].matcher$CharSequence.apply(this.b$['java.util.regex.Pattern'], [this.$finals$.input]);
}, 1);

Clazz_newMeth(C$, 'next$',  function () {
if (!this.hasNext$()) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
if (this.emptyElementCount == 0) {
var n=this.nextElement;
this.nextElement=null;
return n;
} else {
--this.emptyElementCount;
return "";
}});

Clazz_newMeth(C$, 'hasNext$',  function () {
if (this.nextElement != null  || this.emptyElementCount > 0 ) return true;
if (this.current == this.$finals$.input.length$()) return false;
while (this.matcher.find$()){
this.nextElement=this.$finals$.input.subSequence$I$I(this.current, this.matcher.start$()).toString();
this.current=this.matcher.end$();
if (!this.nextElement.isEmpty$()) {
return true;
} else if (this.current > 0) {
++this.emptyElementCount;
}}
this.nextElement=this.$finals$.input.subSequence$I$I(this.current, this.$finals$.input.length$()).toString();
this.current=this.$finals$.input.length$();
if (!this.nextElement.isEmpty$()) {
return true;
} else {
this.emptyElementCount=0;
this.nextElement=null;
return false;
}});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:43 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javajs.api"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "JSONEncodable");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:46 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[[0,'java.lang.reflect.Array','javajs.util.P3d','javajs.util.T3d','java.util.Arrays','javajs.util.Lst','java.util.Hashtable']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AU");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'ensureLength$O$I',  function (array, minimumLength) {
return (array != null  && C$.getLength$O(array) >= minimumLength  ? array : C$.arrayCopyObject$O$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthS$SA$I',  function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyS$SA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthA$FA$I',  function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyF$FA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthD$DA$I',  function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyD$DA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthI$IA$I',  function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyI$IA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthShort$HA$I',  function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyShort$HA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'ensureLengthByte$BA$I',  function (array, minimumLength) {
return (array != null  && array.length >= minimumLength  ? array : C$.arrayCopyByte$BA$I(array, minimumLength));
}, 1);

Clazz_newMeth(C$, 'doubleLength$O',  function (array) {
return C$.arrayCopyObject$O$I(array, (array == null  ? 16 : 2 * C$.getLength$O(array)));
}, 1);

Clazz_newMeth(C$, 'doubleLengthS$SA',  function (array) {
return C$.arrayCopyS$SA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthF$FA',  function (array) {
return C$.arrayCopyF$FA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthD$DA',  function (array) {
return C$.arrayCopyD$DA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthI$IA',  function (array) {
return C$.arrayCopyI$IA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthShort$HA',  function (array) {
return C$.arrayCopyShort$HA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthByte$BA',  function (array) {
return C$.arrayCopyByte$BA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'doubleLengthBool$ZA',  function (array) {
return C$.arrayCopyBool$ZA$I(array, (array == null  ? 16 : 2 * array.length));
}, 1);

Clazz_newMeth(C$, 'deleteElements$O$I$I',  function (array, firstElement, nElements) {
if (nElements == 0 || array == null  ) return array;
var oldLength=C$.getLength$O(array);
if (firstElement >= oldLength) return array;
var n=oldLength - (firstElement + nElements);
if (n < 0) n=0;
var t=C$.newInstanceO$O$I(array, firstElement + n);
if (firstElement > 0) System.arraycopy$O$I$O$I$I(array, 0, t, 0, firstElement);
if (n > 0) System.arraycopy$O$I$O$I$I(array, firstElement + nElements, t, firstElement, n);
return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyObject$O$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : C$.getLength$O(array));
if (newLength < 0) newLength=oldLength;
if (newLength == oldLength) return array;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=C$.newInstanceO$O$I(array, newLength);
if (oldLength > 0) System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
return t;
}, 1);

Clazz_newMeth(C$, 'newInstanceO$O$I',  function (array, n) {
return Clazz_array(array.getClass$().getComponentType$(), n);
}, 1);

Clazz_newMeth(C$, 'getLength$O',  function (array) {
{
return array.length
}
}, 1);

Clazz_newMeth(C$, 'arrayCopyP3d$javajs_util_P3dA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array($I$(2), [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyS$SA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(String, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyII$IAA$I',  function (array, newLength) {
var t=C$.newInt2$I(newLength);
if (array != null ) {
var oldLength=array.length;
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyPt$javajs_util_T3dA$I',  function (array, newLength) {
if (newLength < 0) newLength=array.length;
var t=Clazz_array($I$(3), [newLength]);
if (array != null ) {
var oldLength=array.length;
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyF$FA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(Float.TYPE, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyD$DA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(Double.TYPE, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyI$IA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(Integer.TYPE, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyRangeI$IA$I$I',  function (array, i0, n) {
if (array == null ) return null;
var oldLength=array.length;
if (n == -1) n=oldLength;
if (n == -2) n=(oldLength/2|0);
{
return Clazz_array(-1, array, i0, n);
}
}, 1);

Clazz_newMeth(C$, 'arrayCopyRangeRevI$IA$I$I',  function (array, i0, n) {
if (array == null ) return null;
{
return Clazz_array(-1, array, i0, n).reverse();
}
}, 1);

Clazz_newMeth(C$, 'arrayCopyShort$HA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(Short.TYPE, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyByte$BA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(Byte.TYPE, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'arrayCopyBool$ZA$I',  function (array, newLength) {
var oldLength=(array == null  ? -1 : array.length);
if (newLength < 0) newLength=oldLength;
{
if (newLength < oldLength) return Clazz_array(-1, array, 0, newLength);
}
var t=Clazz_array(Boolean.TYPE, [newLength]);
if (array != null ) {
System.arraycopy$O$I$O$I$I(array, 0, t, 0, oldLength < newLength ? oldLength : newLength);
}return t;
}, 1);

Clazz_newMeth(C$, 'swapInt$IA$I$I',  function (array, indexA, indexB) {
var t=array[indexA];
array[indexA]=array[indexB];
array[indexB]=t;
}, 1);

Clazz_newMeth(C$, 'dumpArray$S$FAA$I$I$I$I',  function (msg, A, x1, x2, y1, y2) {
var s="dumpArray: " + msg + "\n" ;
for (var x=x1; x <= x2; x++) s+="\t*" + x + "*" ;

for (var y=y2; y >= y1; y--) {
s+="\n*" + y + "*" ;
for (var x=x1; x <= x2; x++) s+="\t" + (new Float(x < A.length && y < A[x].length  ? A[x][y] : NaN).toString());

}
return s;
}, 1);

Clazz_newMeth(C$, 'dumpIntArray$IA$I',  function (A, n) {
var str="";
for (var i=0; i < n; i++) str+=" " + A[i];

return str;
}, 1);

Clazz_newMeth(C$, 'sortedItem$javajs_util_Lst$I',  function (v, n) {
if (v.size$() == 0) return null;
if (v.size$() == 1) return v.get$I(0);
var keys=v.toArray$OA(Clazz_array(String, [v.size$()]));
$I$(4).sort$OA(keys);
return keys[n % keys.length];
}, 1);

Clazz_newMeth(C$, 'createArrayOfArrayList$I',  function (size) {
return Clazz_array($I$(5), [size]);
}, 1);

Clazz_newMeth(C$, 'createArrayOfHashtable$I',  function (size) {
return Clazz_array($I$(6), [size]);
}, 1);

Clazz_newMeth(C$, 'swap$OA$I$I',  function (o, i, j) {
var oi=o[i];
o[i]=o[j];
o[j]=oi;
}, 1);

Clazz_newMeth(C$, 'newFloat2$I',  function (n) {
return Clazz_array(Float.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newBool2$I',  function (n) {
return Clazz_array(Boolean.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newInt2$I',  function (n) {
return Clazz_array(Integer.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newInt3$I$I',  function (nx, ny) {
return (ny < 0 ? Clazz_array(Integer.TYPE, [nx, null, null]) : Clazz_array(Integer.TYPE, [nx, ny, null]));
}, 1);

Clazz_newMeth(C$, 'newFloat3$I$I',  function (nx, ny) {
return (ny < 0 ? Clazz_array(Float.TYPE, [nx, null, null]) : Clazz_array(Float.TYPE, [nx, ny, null]));
}, 1);

Clazz_newMeth(C$, 'newDouble3$I$I',  function (nx, ny) {
return (ny < 0 ? Clazz_array(Double.TYPE, [nx, null, null]) : Clazz_array(Double.TYPE, [nx, ny, null]));
}, 1);

Clazz_newMeth(C$, 'newInt4$I',  function (n) {
return Clazz_array(Integer.TYPE, [n, null, null, null]);
}, 1);

Clazz_newMeth(C$, 'newShort2$I',  function (n) {
return Clazz_array(Short.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newByte2$I',  function (n) {
return Clazz_array(Byte.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'newDouble2$I',  function (n) {
return Clazz_array(Double.TYPE, [n, null]);
}, 1);

Clazz_newMeth(C$, 'removeMapKeys$java_util_Map$S',  function (map, root) {
var list=Clazz_new_($I$(5,1));
for (var key, $key = map.keySet$().iterator$(); $key.hasNext$()&&((key=($key.next$())),1);) if (key.startsWith$S(root)) list.addLast$O(key);

for (var i=list.size$(); --i >= 0; ) map.remove$O(list.get$I(i));

return list.size$();
}, 1);

Clazz_newMeth(C$, 'isAS$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(String, -1));
}, 1);

Clazz_newMeth(C$, 'isASS$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(String, -2));
}, 1);

Clazz_newMeth(C$, 'isAP$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array($I$(3), -1));
}, 1);

Clazz_newMeth(C$, 'isAF$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Float.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isADouble$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Double, -1));
}, 1);

Clazz_newMeth(C$, 'isAD$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Double.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isADD$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Double.TYPE, -2));
}, 1);

Clazz_newMeth(C$, 'isADDD$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Double.TYPE, -3));
}, 1);

Clazz_newMeth(C$, 'isAB$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Byte.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isAI$O',  function (x) {
return Clazz_instanceOf(x, Clazz_array(Integer.TYPE, -1));
}, 1);

Clazz_newMeth(C$, 'isAII$O',  function (x) {
return (Clazz_instanceOf(x, Clazz_array(Integer.TYPE, -2)));
}, 1);

Clazz_newMeth(C$, 'ensureSignedBytes$BA',  function (b) {
if (b != null ) {
{
for (var i = b.length; --i >= 0;) { var j = b[i] & 0xFF; if (j >= 0x80) j -= 0x100; b[i] = j; }
}
}return b;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:46 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[[0,'java.util.Hashtable','javajs.util.AjaxURLStreamHandler']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AjaxURLStreamHandlerFactory", null, null, 'java.net.URLStreamHandlerFactory');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.htFactories=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['O',['htFactories','java.util.Map']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'createURLStreamHandler$S',  function (protocol) {
var fac=this.htFactories.get$O(protocol);
if (fac == null ) {
this.htFactories.put$O$O(protocol, fac=Clazz_new_($I$(2,1).c$$S,[protocol]));
}return (fac.protocol == null  ? null : fac);
});
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),p$1={},I$=[[0,'javajs.util.SB']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BS", null, null, ['Cloneable', 'javajs.api.JSONEncodable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.wordsInUse=0;
this.sizeIsSticky=false;
},1);

C$.$fields$=[['Z',['sizeIsSticky'],'I',['wordsInUse'],'O',['+words']]
,['O',['emptyBitmap','int[]']]]

Clazz_newMeth(C$, 'wordIndex$I',  function (bitIndex) {
return bitIndex >> 5;
}, 1);

Clazz_newMeth(C$, 'recalculateWordsInUse$',  function () {
var i;
for (i=this.wordsInUse - 1; i >= 0; i--) if (this.words[i] != 0) break;

this.wordsInUse=i + 1;
});

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
p$1.initWords$I.apply(this, [32]);
this.sizeIsSticky=false;
}, 1);

Clazz_newMeth(C$, 'newN$I',  function (nbits) {
var bs=Clazz_new_(C$);
bs.init$I(nbits);
return bs;
}, 1);

Clazz_newMeth(C$, 'init$I',  function (nbits) {
if (nbits < 0) throw Clazz_new_(Clazz_load('NegativeArraySizeException').c$$S,["nbits < 0: " + nbits]);
p$1.initWords$I.apply(this, [nbits]);
this.sizeIsSticky=true;
});

Clazz_newMeth(C$, 'initWords$I',  function (nbits) {
this.words=Clazz_array(Integer.TYPE, [C$.wordIndex$I(nbits - 1) + 1]);
}, p$1);

Clazz_newMeth(C$, 'ensureCapacity$I',  function (wordsRequired) {
if (this.words.length < wordsRequired) {
var request=Math.max(2 * this.words.length, wordsRequired);
p$1.setLength$I.apply(this, [request]);
this.sizeIsSticky=false;
}}, p$1);

Clazz_newMeth(C$, 'expandTo$I',  function (wordIndex) {
var wordsRequired=wordIndex + 1;
if (this.wordsInUse < wordsRequired) {
p$1.ensureCapacity$I.apply(this, [wordsRequired]);
this.wordsInUse=wordsRequired;
}});

Clazz_newMeth(C$, 'set$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
this.expandTo$I(wordIndex);
this.words[wordIndex]|=(1 << bitIndex);
});

Clazz_newMeth(C$, 'setBitTo$I$Z',  function (bitIndex, value) {
if (value) this.set$I(bitIndex);
 else this.clear$I(bitIndex);
});

Clazz_newMeth(C$, 'setBits$I$I',  function (fromIndex, toIndex) {
if (fromIndex == toIndex) return;
var startWordIndex=C$.wordIndex$I(fromIndex);
var endWordIndex=C$.wordIndex$I(toIndex - 1);
this.expandTo$I(endWordIndex);
var firstWordMask=-1 << fromIndex;
var lastWordMask=-1 >>> -toIndex;
if (startWordIndex == endWordIndex) {
this.words[startWordIndex]|=(firstWordMask & lastWordMask);
} else {
this.words[startWordIndex]|=firstWordMask;
for (var i=startWordIndex + 1; i < endWordIndex; i++) this.words[i]=-1;

this.words[endWordIndex]|=lastWordMask;
}});

Clazz_newMeth(C$, 'clear$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
if (wordIndex >= this.wordsInUse) return;
this.words[wordIndex]&=~(1 << bitIndex);
this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'clearBits$I$I',  function (fromIndex, toIndex) {
if (fromIndex == toIndex) return;
var startWordIndex=C$.wordIndex$I(fromIndex);
if (startWordIndex >= this.wordsInUse) return;
var endWordIndex=C$.wordIndex$I(toIndex - 1);
if (endWordIndex >= this.wordsInUse) {
toIndex=this.length$();
endWordIndex=this.wordsInUse - 1;
}var firstWordMask=-1 << fromIndex;
var lastWordMask=-1 >>> -toIndex;
if (startWordIndex == endWordIndex) {
this.words[startWordIndex]&=~(firstWordMask & lastWordMask);
} else {
this.words[startWordIndex]&=~firstWordMask;
for (var i=startWordIndex + 1; i < endWordIndex; i++) this.words[i]=0;

this.words[endWordIndex]&=~lastWordMask;
}this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'clearAll$',  function () {
while (this.wordsInUse > 0)this.words[--this.wordsInUse]=0;

});

Clazz_newMeth(C$, 'get$I',  function (bitIndex) {
if (bitIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["bitIndex < 0: " + bitIndex]);
var wordIndex=C$.wordIndex$I(bitIndex);
return (wordIndex < this.wordsInUse) && ((this.words[wordIndex] & (1 << bitIndex)) != 0) ;
});

Clazz_newMeth(C$, 'nextSetBit$I',  function (fromIndex) {
if (fromIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex < 0: " + fromIndex]);
var u=C$.wordIndex$I(fromIndex);
if (u >= this.wordsInUse) return -1;
var word=this.words[u] & (-1 << fromIndex);
while (true){
if (word != 0) return (u * 32) + Integer.numberOfTrailingZeros$I(word);
if (++u == this.wordsInUse) return -1;
word=this.words[u];
}
});

Clazz_newMeth(C$, 'nextClearBit$I',  function (fromIndex) {
if (fromIndex < 0) throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["fromIndex < 0: " + fromIndex]);
var u=C$.wordIndex$I(fromIndex);
if (u >= this.wordsInUse) return fromIndex;
var word=~this.words[u] & (-1 << fromIndex);
while (true){
if (word != 0) return (u * 32) + Integer.numberOfTrailingZeros$I(word);
if (++u == this.wordsInUse) return this.wordsInUse * 32;
word=~this.words[u];
}
});

Clazz_newMeth(C$, 'length$',  function () {
if (this.wordsInUse == 0) return 0;
return 32 * (this.wordsInUse - 1) + (32 - Integer.numberOfLeadingZeros$I(this.words[this.wordsInUse - 1]));
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.wordsInUse == 0;
});

Clazz_newMeth(C$, 'intersects$javajs_util_BS',  function (set) {
for (var i=Math.min(this.wordsInUse, set.wordsInUse) - 1; i >= 0; i--) if ((this.words[i] & set.words[i]) != 0) return true;

return false;
});

Clazz_newMeth(C$, 'cardinality$',  function () {
var sum=0;
for (var i=0; i < this.wordsInUse; i++) sum+=Integer.bitCount$I(this.words[i]);

return sum;
});

Clazz_newMeth(C$, 'and$javajs_util_BS',  function (set) {
if (this === set ) return;
while (this.wordsInUse > set.wordsInUse)this.words[--this.wordsInUse]=0;

for (var i=0; i < this.wordsInUse; i++) this.words[i]&=set.words[i];

this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'or$javajs_util_BS',  function (set) {
if (this === set ) return;
var wordsInCommon=Math.min(this.wordsInUse, set.wordsInUse);
if (this.wordsInUse < set.wordsInUse) {
p$1.ensureCapacity$I.apply(this, [set.wordsInUse]);
this.wordsInUse=set.wordsInUse;
}for (var i=0; i < wordsInCommon; i++) this.words[i]|=set.words[i];

if (wordsInCommon < set.wordsInUse) System.arraycopy$O$I$O$I$I(set.words, wordsInCommon, this.words, wordsInCommon, this.wordsInUse - wordsInCommon);
});

Clazz_newMeth(C$, 'xor$javajs_util_BS',  function (set) {
var wordsInCommon=Math.min(this.wordsInUse, set.wordsInUse);
if (this.wordsInUse < set.wordsInUse) {
p$1.ensureCapacity$I.apply(this, [set.wordsInUse]);
this.wordsInUse=set.wordsInUse;
}for (var i=0; i < wordsInCommon; i++) this.words[i]^=set.words[i];

if (wordsInCommon < set.wordsInUse) System.arraycopy$O$I$O$I$I(set.words, wordsInCommon, this.words, wordsInCommon, set.wordsInUse - wordsInCommon);
this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'andNot$javajs_util_BS',  function (set) {
for (var i=Math.min(this.wordsInUse, set.wordsInUse) - 1; i >= 0; i--) this.words[i]&=~set.words[i];

this.recalculateWordsInUse$();
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var h=1234;
for (var i=this.wordsInUse; --i >= 0; ) (h=Long.$xor(h,(this.words[i] * (i + 1))));

return Long.$ival((Long.$xor((Long.$sr(h,32)),h)));
});

Clazz_newMeth(C$, 'size$',  function () {
return this.words.length * 32;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (!(Clazz_instanceOf(obj, "javajs.util.BS"))) return false;
if (this === obj ) return true;
var set=obj;
if (this.wordsInUse != set.wordsInUse) return false;
for (var i=0; i < this.wordsInUse; i++) if (this.words[i] != set.words[i]) return false;

return true;
});

Clazz_newMeth(C$, 'clone$',  function () {
if (!this.sizeIsSticky && this.wordsInUse != this.words.length ) p$1.setLength$I.apply(this, [this.wordsInUse]);
return C$.copy$javajs_util_BS(this);
});

Clazz_newMeth(C$, 'setLength$I',  function (n) {
{
if (n == this.words.length) return;
if (n == this.wordsInUse) { this.words = Clazz_array(-1, this.words, 0, n);
return;
}
}
var a=Clazz_array(Integer.TYPE, [n]);
System.arraycopy$O$I$O$I$I(this.words, 0, a, 0, this.wordsInUse);
this.words=a;
}, p$1);

Clazz_newMeth(C$, 'toString',  function () {
return C$.escape$javajs_util_BS$C$C(this, "(", ")");
});

Clazz_newMeth(C$, 'copy$javajs_util_BS',  function (bitsetToCopy) {
var bs;
{
bs = Clazz_clone(bitsetToCopy);
}
var wordCount=bitsetToCopy.wordsInUse;
if (wordCount == 0) {
bs.words=C$.emptyBitmap;
} else {
{
bs.words = Clazz_array(-1, bitsetToCopy.words, 0, bs.wordsInUse = wordCount);
}
}return bs;
}, 1);

Clazz_newMeth(C$, 'cardinalityN$I',  function (max) {
var n=this.cardinality$();
for (var i=this.length$(); --i >= max; ) if (this.get$I(i)) --n;

return n;
});

Clazz_newMeth(C$, 'toJSON$',  function () {
var numBits=(this.wordsInUse > 128 ? this.cardinality$() : this.wordsInUse * 32);
var b=$I$(1).newN$I(6 * numBits + 2);
b.appendC$C("[");
var i=this.nextSetBit$I(0);
if (i != -1) {
b.appendI$I(i);
for (i=this.nextSetBit$I(i + 1); i >= 0; i=this.nextSetBit$I(i + 1)) {
var endOfRun=this.nextClearBit$I(i);
do {
b.append$S(", ").appendI$I(i);
} while (++i < endOfRun);
}
}b.appendC$C("]");
return b.toString();
});

Clazz_newMeth(C$, 'escape$javajs_util_BS$C$C',  function (bs, chOpen, chClose) {
if (bs == null ) return chOpen + "{}" + chClose ;
var s=Clazz_new_($I$(1,1));
s.append$S(chOpen + "{");
var imax=bs.length$();
var iLast=-1;
var iFirst=-2;
var i=-1;
while (++i <= imax){
var isSet=bs.get$I(i);
if (i == imax || iLast >= 0 && !isSet  ) {
if (iLast >= 0 && iFirst != iLast ) s.append$S((iFirst == iLast - 1 ? " " : ":") + iLast);
if (i == imax) break;
iLast=-1;
}if (bs.get$I(i)) {
if (iLast < 0) {
s.append$S((iFirst == -2 ? "" : " ") + i);
iFirst=i;
}iLast=i;
}}
s.append$S("}").appendC$C(chClose);
return s.toString();
}, 1);

Clazz_newMeth(C$, 'unescape$S',  function (str) {
var ch;
var len;
if (str == null  || (len=(str=str.trim$()).length$()) < 4  || str.equalsIgnoreCase$S("({null})")  || (ch=str.charAt$I(0)) != "(" && ch != "["   || str.charAt$I(len - 1) != (ch == "(" ? ")" : "]")  || str.charAt$I(1) != "{"  || str.indexOf$I("}") != len - 2 ) return null;
len-=2;
for (var i=len; --i >= 2; ) if ((((ch=str.charAt$I(i)).$c()) < 48  || ch.$c() > 57  ) && ch != " "  && ch != "\t"  && ch != ":" ) return null;

var lastN=len;
while (48 <= ((ch=str.charAt$I(--lastN)).$c())  && ch.$c() <= 57  ){
}
if (++lastN == len) lastN=0;
 else try {
lastN=Integer.parseInt$S(str.substring$I$I(lastN, len));
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
return null;
} else {
throw e;
}
}
var bs=C$.newN$I(lastN);
lastN=-1;
var iPrev=-1;
var iThis=-2;
for (var i=2; i <= len; i++) {
switch ((ch=str.charAt$I(i)).$c()) {
case 9:
case 32:
case 125:
if (iThis < 0) break;
if (iThis < lastN) return null;
lastN=iThis;
if (iPrev < 0) iPrev=iThis;
bs.setBits$I$I(iPrev, iThis + 1);
iPrev=-1;
iThis=-2;
break;
case 58:
iPrev=lastN=iThis;
iThis=-2;
break;
default:
if (48 <= ch.$c()  && ch.$c() <= 57  ) {
if (iThis < 0) iThis=0;
iThis=(iThis * 10) + (ch.$c() - 48);
}}
}
return (iPrev >= 0 ? null : bs);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.emptyBitmap=Clazz_array(Integer.TYPE, [0]);
};
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[[0,'Thread']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSThread", null, 'Thread');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.isJS=true ||false;
},1);

C$.$fields$=[['Z',['isJS']]
,['I',['threadCount']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$ThreadGroup$S.apply(this, [null, "JSThread-" + (++C$.threadCount)]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (name) {
C$.c$$ThreadGroup$S.apply(this, [null, name]);
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S',  function (group, name) {
;C$.superclazz.c$$ThreadGroup$S.apply(this,[group, name]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'run$',  function () {
this.run1$I(0);
});

Clazz_newMeth(C$, 'start$',  function () {
{
Clazz_load("swingjs.JSToolkit").dispatch$O$I$I(this, 1, 0);
}
});

Clazz_newMeth(C$, 'run1$I',  function (state) {
var executeFinally=true;
try {
while (!$I$(1).interrupted$()){
switch (state) {
case 0:
if (!this.myInit$()) return;
state=1;
continue;
case 1:
if (!this.isLooping$()) {
state=2;
continue;
}if (this.myLoop$() && this.sleepAndReturn$I$I(this.getDelayMillis$(), state) ) {
executeFinally=false;
return;
}continue;
case 2:
this.whenDone$();
return;
}
}
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
this.onException$Exception(e);
state=2;
} else {
throw e;
}
} finally {
if (executeFinally) this.doFinally$();
}
});

Clazz_newMeth(C$, 'sleepAndReturn$I$I',  function (delay, state) {
if (!this.isJS) {
$I$(1).sleep$J(delay);
return false;
}var me=this;
var r=((P$.JSThread$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSThread$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
this.$finals$.me.run1$I(this.$finals$.state);
});
})()
), Clazz_new_(P$.JSThread$1.$init$,[this, {me:me,state:state}]));
{
setTimeout( function() { java.awt.Toolkit.getDefaultToolkit$().getSystemEventQueue$().postEvent$java_awt_AWTEvent( Clazz_new_(java.awt.event.InvocationEvent.c$$O$Runnable,[me, r]))}, delay);
}
return true;
});

C$.$static$=function(){C$.$static$=0;
C$.threadCount=0;
};
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "Lst", null, 'java.util.ArrayList');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'addLast$O',  function (v) {
C$.superclazz.prototype.add$O.apply(this, [v]);
});

Clazz_newMeth(C$, 'removeItemAt$I',  function (location) {
return C$.superclazz.prototype.remove$I.apply(this, [location]);
});

Clazz_newMeth(C$, 'removeObj$O',  function (v) {
return C$.superclazz.prototype.remove$O.apply(this, [v]);
});
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "P3d", null, 'javajs.util.T3d');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['unlikely','javajs.util.P3d']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'newP$javajs_util_T3d',  function (t) {
var p=Clazz_new_(C$);
p.x=t.x;
p.y=t.y;
p.z=t.z;
return p;
}, 1);

Clazz_newMeth(C$, 'getUnlikely$',  function () {
return (C$.unlikely == null  ? C$.unlikely=C$.new3$D$D$D(3.141592653589793, 2.718281828459045, (8.539734222673566)) : C$.unlikely);
}, 1);

Clazz_newMeth(C$, 'new3$D$D$D',  function (x, y, z) {
var p=Clazz_new_(C$);
p.x=x;
p.y=y;
p.z=z;
return p;
}, 1);

Clazz_newMeth(C$, 'newA$DA',  function (a) {
return C$.new3$D$D$D(a[0], a[1], a[2]);
}, 1);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[[0,'javajs.util.DF','javajs.util.SB','java.util.Arrays','javajs.util.AU','java.lang.reflect.Array']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PT");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['tensScaleD','double[]','+decimalScaleD']]]

Clazz_newMeth(C$, 'parseInt$S',  function (str) {
return C$.parseIntNext$S$IA(str, Clazz_array(Integer.TYPE, -1, [0]));
}, 1);

Clazz_newMeth(C$, 'parseIntNext$S$IA',  function (str, next) {
var cch=str.length$();
if (next[0] < 0 || next[0] >= cch ) return -2147483648;
return C$.parseIntChecked$S$I$IA(str, cch, next);
}, 1);

Clazz_newMeth(C$, 'parseIntChecked$S$I$IA',  function (str, ichMax, next) {
var digitSeen=false;
var value=0;
var ich=next[0];
if (ich < 0) return -2147483648;
var ch;
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var negative=false;
if (ich < ichMax && (str.charCodeAt$I(ich)) == 45  ) {
negative=true;
++ich;
}while (ich < ichMax && (ch=str.charAt$I(ich).$c()) >= 48  && ch <= 57 ){
value=value * 10 + (ch - 48);
digitSeen=true;
++ich;
}
if (!digitSeen) value=-2147483648;
 else if (negative) value=-value;
next[0]=ich;
return value;
}, 1);

Clazz_newMeth(C$, 'isWhiteSpace$S$I',  function (str, ich) {
var ch;
return (ich >= 0 && ((ch=str.charAt$I(ich)) == " " || ch == "\t"  || ch == "\n" ) );
}, 1);

Clazz_newMeth(C$, 'checkTrailingText$S$I$I',  function (str, ich, ichMax) {
var ch;
while (ich < ichMax && (C$.isWhitespace$C(ch=str.charAt$I(ich)) || ch == ";" ) )++ich;

return (ich == ichMax);
}, 1);

Clazz_newMeth(C$, 'parseIntRadix$S$I',  function (s, i) {
return Integer.parseInt$S$I(s, i);
}, 1);

Clazz_newMeth(C$, 'getTokens$S',  function (line) {
return C$.getTokensAt$S$I(line, 0);
}, 1);

Clazz_newMeth(C$, 'parseToken$S',  function (str) {
return C$.parseTokenNext$S$IA(str, Clazz_array(Integer.TYPE, -1, [0]));
}, 1);

Clazz_newMeth(C$, 'parseTrimmed$S',  function (str) {
return C$.parseTrimmedRange$S$I$I(str, 0, str.length$());
}, 1);

Clazz_newMeth(C$, 'parseTrimmedAt$S$I',  function (str, ichStart) {
return C$.parseTrimmedRange$S$I$I(str, ichStart, str.length$());
}, 1);

Clazz_newMeth(C$, 'parseTrimmedRange$S$I$I',  function (str, ichStart, ichMax) {
var cch=str.length$();
if (ichMax < cch) cch=ichMax;
if (cch < ichStart) return "";
return C$.parseTrimmedChecked$S$I$I(str, ichStart, cch);
}, 1);

Clazz_newMeth(C$, 'getTokensAt$S$I',  function (line, ich) {
if (line == null ) return null;
var cchLine=line.length$();
if (ich < 0 || ich > cchLine ) return null;
var tokenCount=C$.countTokens$S$I(line, ich);
var tokens=Clazz_array(String, [tokenCount]);
var next=Clazz_array(Integer.TYPE, [1]);
next[0]=ich;
for (var i=0; i < tokenCount; ++i) tokens[i]=C$.parseTokenChecked$S$I$IA(line, cchLine, next);

return tokens;
}, 1);

Clazz_newMeth(C$, 'countChar$S$C',  function (line, c) {
var n=0;
for (var i=line.lastIndexOf$I(c) + 1; --i >= 0; ) if (line.charAt$I(i) == c) ++n;

return n;
}, 1);

Clazz_newMeth(C$, 'countTokens$S$I',  function (line, ich) {
var tokenCount=0;
if (line != null ) {
var ichMax=line.length$();
while (true){
while (ich < ichMax && C$.isWhiteSpace$S$I(line, ich) )++ich;

if (ich == ichMax) break;
++tokenCount;
do {
++ich;
} while (ich < ichMax && !C$.isWhiteSpace$S$I(line, ich) );
}
}return tokenCount;
}, 1);

Clazz_newMeth(C$, 'parseTokenNext$S$IA',  function (str, next) {
var cch=str.length$();
return (next[0] < 0 || next[0] >= cch  ? null : C$.parseTokenChecked$S$I$IA(str, cch, next));
}, 1);

Clazz_newMeth(C$, 'parseTokenRange$S$I$IA',  function (str, ichMax, next) {
var cch=str.length$();
if (ichMax > cch) ichMax=cch;
return (next[0] < 0 || next[0] >= ichMax  ? null : C$.parseTokenChecked$S$I$IA(str, ichMax, next));
}, 1);

Clazz_newMeth(C$, 'parseTokenChecked$S$I$IA',  function (str, ichMax, next) {
var ich=next[0];
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var ichNonWhite=ich;
while (ich < ichMax && !C$.isWhiteSpace$S$I(str, ich) )++ich;

next[0]=ich;
return (ichNonWhite == ich ? null : str.substring$I$I(ichNonWhite, ich));
}, 1);

Clazz_newMeth(C$, 'parseTrimmedChecked$S$I$I',  function (str, ich, ichMax) {
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var ichLast=ichMax - 1;
while (ichLast >= ich && C$.isWhiteSpace$S$I(str, ichLast) )--ichLast;

return (ichLast < ich ? "" : str.substring$I$I(ich, ichLast + 1));
}, 1);

Clazz_newMeth(C$, 'parseIntRange$S$I$IA',  function (str, ichMax, next) {
var cch=str.length$();
if (ichMax > cch) ichMax=cch;
return (next[0] < 0 || next[0] >= ichMax  ? -2147483648 : C$.parseIntChecked$S$I$IA(str, ichMax, next));
}, 1);

Clazz_newMeth(C$, 'split$S$S',  function (text, run) {
if (text.length$() == 0) return Clazz_array(String, [0]);
var n=1;
var i=text.indexOf$S(run);
var lines;
var runLen=run.length$();
if (i < 0 || runLen == 0 ) {
lines=Clazz_array(String, [1]);
lines[0]=text;
return lines;
}var len=text.length$() - runLen;
for (; i >= 0 && i < len ; n++) i=text.indexOf$S$I(run, i + runLen);

lines=Clazz_array(String, [n]);
i=0;
var ipt=0;
var pt=0;
for (; (ipt=text.indexOf$S$I(run, i)) >= 0 && pt + 1 < n ; ) {
lines[pt++]=text.substring$I$I(i, ipt);
i=ipt + runLen;
}
if (text.indexOf$S$I(run, len) != len) len+=runLen;
lines[pt]=text.substring$I$I(i, len);
return lines;
}, 1);

Clazz_newMeth(C$, 'getQuotedStringAt$S$I',  function (line, ipt0) {
var next=Clazz_array(Integer.TYPE, -1, [ipt0]);
return C$.getQuotedStringNext$S$IA(line, next);
}, 1);

Clazz_newMeth(C$, 'getQuotedStringNext$S$IA',  function (line, next) {
var i=next[0];
if (i < 0 || (i=line.indexOf$S$I("\"", i)) < 0 ) return "";
var pt=i + 1;
var len=line.length$();
while (++i < len && line.charAt$I(i) != "\"" )if (line.charAt$I(i) == "\\") ++i;

next[0]=i + 1;
return line.substring$I$I(pt, i);
}, 1);

Clazz_newMeth(C$, 'getQuotedOrUnquotedAttribute$S$S',  function (line, key) {
if (line == null  || key == null  ) return null;
var pt=line.toLowerCase$().indexOf$S(key.toLowerCase$() + "=");
if (pt < 0 || (pt=pt + key.length$() + 1 ) >= line.length$() ) return "";
var c=line.charAt$I(pt);
switch (c.$c()) {
case 39:
case 34:
++pt;
break;
default:
c=" ";
line+=" ";
}
var pt1=line.indexOf$I$I(c, pt);
return (pt1 < 0 ? null : line.substring$I$I(pt, pt1));
}, 1);

Clazz_newMeth(C$, 'getCSVString$S$IA',  function (line, next) {
var i=next[1];
if (i < 0 || (i=line.indexOf$S$I("\"", i)) < 0 ) return null;
var pt=next[0]=i;
var len=line.length$();
var escaped=false;
var haveEscape=false;
while (++i < len && (line.charAt$I(i) != "\"" || (escaped=(i + 1 < len && line.charAt$I(i + 1) == "\"" )) ) )if (escaped) {
escaped=false;
haveEscape=true;
++i;
}
if (i >= len) {
next[1]=-1;
return null;
}next[1]=i + 1;
var s=line.substring$I$I(pt + 1, i);
return (haveEscape ? C$.rep$S$S$S(C$.rep$S$S$S(s, "\"\"", "\u0000"), "\u0000", "\"") : s);
}, 1);

Clazz_newMeth(C$, 'isOneOf$S$S',  function (key, semiList) {
if (semiList.length$() == 0 || key.indexOf$S(";") >= 0 ) return false;
if (semiList.charAt$I(0) != ";") semiList=";" + semiList + ";" ;
return semiList.indexOf$S(';' + key + ';' ) >= 0;
}, 1);

Clazz_newMeth(C$, 'getQuotedAttribute$S$S',  function (info, name) {
var i=info.indexOf$S(name + "=");
return (i < 0 ? null : C$.getQuotedStringAt$S$I(info, i));
}, 1);

Clazz_newMeth(C$, 'approxD$D$D',  function (f, n) {
f=Math.round$D(f * n) / n;
return (f == 0  ? 0 : f);
}, 1);

Clazz_newMeth(C$, 'rep$S$S$S',  function (str, strFrom, strTo) {
if (str == null  || strFrom.length$() == 0  || str.indexOf$S(strFrom) < 0 ) return str;
var isOnce=(strTo.indexOf$S(strFrom) >= 0);
do {
str=str.replace$CharSequence$CharSequence(strFrom, strTo);
} while (!isOnce && str.indexOf$S(strFrom) >= 0 );
return str;
}, 1);

Clazz_newMeth(C$, 'formatD$D$I$I$Z$Z',  function (value, width, precision, alignLeft, zeroPad) {
return C$.formatS$S$I$I$Z$Z($I$(1).formatDecimal$D$I(value, precision), width, 0, alignLeft, zeroPad);
}, 1);

Clazz_newMeth(C$, 'formatD$D$I$I$Z$Z$Z',  function (value, width, precision, alignLeft, zeroPad, allowOverflow) {
return C$.formatS$S$I$I$Z$Z($I$(1).formatDecimal$D$I(value, -1 - precision), width, 0, alignLeft, zeroPad);
}, 1);

Clazz_newMeth(C$, 'formatS$S$I$I$Z$Z',  function (value, width, precision, alignLeft, zeroPad) {
if (value == null ) return "";
var len=value.length$();
if (precision != 2147483647 && precision > 0  && precision < len ) value=value.substring$I$I(0, precision);
 else if (precision < 0 && len + precision >= 0 ) value=value.substring$I(len + precision + 1 );
var padLength=width - value.length$();
if (padLength <= 0) return value;
var isNeg=(zeroPad && !alignLeft && value.charAt$I(0) == "-"  );
var padChar=(zeroPad ? "0" : " ");
var padChar0=(isNeg ? "-" : padChar);
var sb=Clazz_new_($I$(2,1));
if (alignLeft) sb.append$S(value);
sb.appendC$C(padChar0);
for (var i=padLength; --i > 0; ) sb.appendC$C(padChar);

if (!alignLeft) sb.append$S(isNeg ? padChar + value.substring$I(1) : value);
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'replaceWithCharacter$S$S$C',  function (str, strFrom, chTo) {
if (str == null ) return null;
for (var i=strFrom.length$(); --i >= 0; ) str=str.replace$C$C(strFrom.charAt$I(i), chTo);

return str;
}, 1);

Clazz_newMeth(C$, 'replaceAllCharacters$S$S$S',  function (str, strFrom, strTo) {
for (var i=strFrom.length$(); --i >= 0; ) {
var chFrom=strFrom.substring$I$I(i, i + 1);
str=C$.rep$S$S$S(str, chFrom, strTo);
}
return str;
}, 1);

Clazz_newMeth(C$, 'trim$S$S',  function (str, chars) {
if (str == null  || str.length$() == 0 ) return str;
if (chars.length$() == 0) return str.trim$();
var len=str.length$();
var k=0;
while (k < len && chars.indexOf$I(str.charAt$I(k)) >= 0 )++k;

var m=str.length$() - 1;
while (m > k && chars.indexOf$I(str.charAt$I(m)) >= 0 )--m;

return str.substring$I$I(k, m + 1);
}, 1);

Clazz_newMeth(C$, 'trimQuotes$S',  function (value) {
return (value != null  && value.length$() > 1  && value.startsWith$S("\"")  && value.endsWith$S("\"")  ? value.substring$I$I(1, value.length$() - 1) : value);
}, 1);

Clazz_newMeth(C$, 'isNonStringPrimitive$O',  function (info) {
{
if(typeof info == "number" || typeof info == "boolean") { return true;
}
}
return Clazz_instanceOf(info, "java.lang.Number") || Clazz_instanceOf(info, "java.lang.Boolean") ;
}, 1);

Clazz_newMeth(C$, 'toJSON$S$O',  function (infoType, info) {
if (info == null ) return C$.packageJSON$S$S(infoType, null);
if (C$.isNonStringPrimitive$O(info)) return C$.packageJSON$S$S(infoType, info.toString());
var s=null;
var sb=null;
while (true){
if (Clazz_instanceOf(info, "java.lang.String")) {
s=info;
if (s.indexOf$S("{\"") != 0) {
s=C$.esc$S(s);
}break;
}if (Clazz_instanceOf(info, "javajs.api.JSONEncodable")) {
if ((s=(info).toJSON$()) == null ) s="null";
break;
}sb=Clazz_new_($I$(2,1));
if (Clazz_instanceOf(info, "java.util.Map")) {
sb.append$S("{ ");
var sep="";
var keys=(info).keySet$();
var okeys=keys.toArray$();
$I$(3).sort$OA(okeys);
for (var i=0, n=okeys.length; i < n; i++) {
var key=okeys[i].toString();
if (key == null ) key="null";
sb.append$S(sep).append$S(C$.packageJSON$S$S(key, C$.toJSON$S$O(null, (info).get$O(okeys[i]))));
sep=",";
}
sb.append$S(" }");
break;
}if (Clazz_instanceOf(info, "javajs.util.Lst")) {
sb.append$S("[ ");
var n=(info).size$();
for (var i=0; i < n; i++) {
if (i > 0) sb.appendC$C(",");
sb.append$S(C$.toJSON$S$O(null, (info).get$I(i)));
}
sb.append$S(" ]");
break;
}s=C$.nonArrayString$O(info);
if (s == null ) {
sb.append$S("[");
var n=$I$(4).getLength$O(info);
var o=null;
{
o = info[0];
typeof o != "number" && typeof 0 != "boolean" && (o = null);
}
if (o != null ) {
sb.appendO$O(info);
} else {
for (var i=0; i < n; i++) {
if (i > 0) sb.appendC$C(",");
sb.append$S(C$.toJSON$S$O(null, $I$(5).get$O$I(info, i)));
}
}sb.append$S("]");
break;
}info=info.toString();
}
return C$.packageJSON$S$S(infoType, (s == null  ? sb.toString() : s));
}, 1);

Clazz_newMeth(C$, 'nonArrayString$O',  function (x) {
{
return (x.constructor == Array || x.BYTES_PER_ELEMENT ? null : x.toString());
}
}, 1);

Clazz_newMeth(C$, 'byteArrayToJSON$BA',  function (data) {
var sb=Clazz_new_($I$(2,1));
sb.append$S("[");
var n=data.length;
for (var i=0; i < n; i++) {
if (i > 0) sb.appendC$C(",");
sb.appendI$I(data[i] & 255);
}
sb.append$S("]");
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'packageJSON$S$S',  function (infoType, info) {
return (infoType == null  ? info : "\"" + infoType + "\": " + info );
}, 1);

Clazz_newMeth(C$, 'escapeUrl$S',  function (url) {
url=C$.rep$S$S$S(url, "\n", "");
url=C$.rep$S$S$S(url, "%", "%25");
url=C$.rep$S$S$S(url, "#", "%23");
url=C$.rep$S$S$S(url, "[", "%5B");
url=C$.rep$S$S$S(url, "\\", "%5C");
url=C$.rep$S$S$S(url, "]", "%5D");
url=C$.rep$S$S$S(url, " ", "%20");
return url;
}, 1);

Clazz_newMeth(C$, 'esc$S',  function (str) {
if (str == null  || str.length$() == 0 ) return "\"\"";
var haveEscape=false;
var i=0;
for (; i < "\\\\\tt\rr\nn\"\"".length$(); i+=2) if (str.indexOf$I("\\\\\tt\rr\nn\"\"".charAt$I(i)) >= 0) {
haveEscape=true;
break;
}
if (haveEscape) while (i < "\\\\\tt\rr\nn\"\"".length$()){
var pt=-1;
var ch="\\\\\tt\rr\nn\"\"".charAt$I(i++);
var ch2="\\\\\tt\rr\nn\"\"".charAt$I(i++);
var sb=Clazz_new_($I$(2,1));
var pt0=0;
while ((pt=str.indexOf$I$I(ch, pt + 1)) >= 0){
sb.append$S(str.substring$I$I(pt0, pt)).appendC$C("\\").appendC$C(ch2);
pt0=pt + 1;
}
sb.append$S(str.substring$I$I(pt0, str.length$()));
str=sb.toString();
}
return "\"" + C$.escUnicode$S(str) + "\"" ;
}, 1);

Clazz_newMeth(C$, 'escUnicode$S',  function (str) {
for (var i=str.length$(); --i >= 0; ) if ((str.charCodeAt$I(i)) > 127 ) {
var s="0000" + Integer.toHexString$I(str.charAt$I(i).$c());
str=str.substring$I$I(0, i) + "\\u" + s.substring$I(s.length$() - 4) + str.substring$I(i + 1) ;
}
return str;
}, 1);

Clazz_newMeth(C$, 'escD$D',  function (f) {
var sf="" + new Double(f).toString();
{
if (sf.indexOf(".") < 0 && sf.indexOf("e") < 0 && sf.indexOf("N") < 0 && sf.indexOf("n") < 0) sf += ".0";
}
return sf;
}, 1);

Clazz_newMeth(C$, 'join$SA$C$I',  function (s, c, i0) {
if (s.length < i0) return null;
var sb=Clazz_new_($I$(2,1));
sb.append$S(s[i0++]);
for (var i=i0; i < s.length; i++) sb.appendC$C(c).append$S(s[i]);

return sb.toString();
}, 1);

Clazz_newMeth(C$, 'isLike$S$S',  function (a, b) {
var areEqual=a.equals$O(b);
if (areEqual) return true;
var isStart=b.startsWith$S("*");
var isEnd=b.endsWith$S("*");
return (!isStart && !isEnd ) ? areEqual : isStart && isEnd  ? b.length$() == 1 || a.contains$CharSequence(b.substring$I$I(1, b.length$() - 1))  : isStart ? a.endsWith$S(b.substring$I(1)) : a.startsWith$S(b.substring$I$I(0, b.length$() - 1));
}, 1);

Clazz_newMeth(C$, 'leftJustify$javajs_util_SB$S$S',  function (s, s1, s2) {
s.append$S(s2);
var n=s1.length$() - s2.length$();
if (n > 0) s.append$S(s1.substring$I$I(0, n));
}, 1);

Clazz_newMeth(C$, 'rightJustify$javajs_util_SB$S$S',  function (s, s1, s2) {
var n=s1.length$() - s2.length$();
if (n > 0) s.append$S(s1.substring$I$I(0, n));
s.append$S(s2);
}, 1);

Clazz_newMeth(C$, 'isWild$S',  function (s) {
return s != null  && (s.indexOf$S("*") >= 0 || s.indexOf$S("?") >= 0 ) ;
}, 1);

Clazz_newMeth(C$, 'isMatch$S$S$Z$Z',  function (search, match, checkStar, allowInitialStar) {
if (search.equals$O(match)) return true;
var mLen=match.length$();
if (mLen == 0) return false;
var isStar0=(checkStar && allowInitialStar  ? match.charAt$I(0) == "*" : false);
if (mLen == 1 && isStar0 ) return true;
var isStar1=(checkStar && match.endsWith$S("*") );
var haveQ=(match.indexOf$I("?") >= 0);
if (!haveQ) {
if (isStar0) return (isStar1 ? (mLen < 3 || search.indexOf$S(match.substring$I$I(1, mLen - 1)) >= 0 ) : search.endsWith$S(match.substring$I(1)));
 else if (isStar1) return search.startsWith$S(match.substring$I$I(0, mLen - 1));
}var sLen=search.length$();
var qqqq="????";
var nq=4;
while (nq < sLen){
qqqq+=qqqq;
nq*=2;
}
if (checkStar) {
if (isStar0) {
match=qqqq + match.substring$I(1);
mLen+=nq - 1;
}if (isStar1) {
match=match.substring$I$I(0, mLen - 1) + qqqq;
mLen+=nq - 1;
}}if (mLen < sLen) return false;
var ich=0;
while (mLen > sLen){
if (allowInitialStar && match.charAt$I(ich) == "?" ) {
++ich;
} else if (match.charAt$I(ich + mLen - 1) != "?") {
return false;
}--mLen;
}
for (var i=sLen; --i >= 0; ) {
var chm=match.charAt$I(ich + i);
if (chm == "?") continue;
var chs=search.charAt$I(i);
if (chm != chs && (chm != "\u0001" || chs != "?" ) ) return false;
}
return true;
}, 1);

Clazz_newMeth(C$, 'replaceQuotedStrings$S$javajs_util_Lst$javajs_util_Lst',  function (s, list, newList) {
var n=list.size$();
for (var i=0; i < n; i++) {
var name=list.get$I(i);
var newName=newList.get$I(i);
if (!newName.equals$O(name)) s=C$.rep$S$S$S(s, "\"" + name + "\"" , "\"" + newName + "\"" );
}
return s;
}, 1);

Clazz_newMeth(C$, 'replaceStrings$S$javajs_util_Lst$javajs_util_Lst',  function (s, list, newList) {
var n=list.size$();
for (var i=0; i < n; i++) {
var name=list.get$I(i);
var newName=newList.get$I(i);
if (!newName.equals$O(name)) s=C$.rep$S$S$S(s, name, newName);
}
return s;
}, 1);

Clazz_newMeth(C$, 'isDigit$C',  function (ch) {
var c=ch.$c();
return (48 <= c && c <= 57 );
}, 1);

Clazz_newMeth(C$, 'isUpperCase$C',  function (ch) {
var c=ch.$c();
return (65 <= c && c <= 90 );
}, 1);

Clazz_newMeth(C$, 'isLowerCase$C',  function (ch) {
var c=ch.$c();
return (97 <= c && c <= 122 );
}, 1);

Clazz_newMeth(C$, 'isLetter$C',  function (ch) {
var c=ch.$c();
return (65 <= c && c <= 90  || 97 <= c && c <= 122  );
}, 1);

Clazz_newMeth(C$, 'isLetterOrDigit$C',  function (ch) {
var c=ch.$c();
return (65 <= c && c <= 90  || 97 <= c && c <= 122   || 48 <= c && c <= 57  );
}, 1);

Clazz_newMeth(C$, 'isWhitespace$C',  function (ch) {
var c=ch.$c();
return (c >= 28 && c <= 32  || c >= 9 && c <= 13  );
}, 1);

Clazz_newMeth(C$, 'getMapValueNoCase$java_util_Map$S',  function (h, key) {
if ("this".equals$O(key)) return h;
var val=h.get$O(key);
if (val == null ) for (var e, $e = h.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) if (e.getKey$().equalsIgnoreCase$S(key)) return e.getValue$();

return val;
}, 1);

Clazz_newMeth(C$, 'clean$S',  function (s) {
return C$.rep$S$S$S(C$.replaceAllCharacters$S$S$S(s, " \t\n\r", " "), "  ", " ").trim$();
}, 1);

Clazz_newMeth(C$, 'formatString$S$S$S$F$D$Z',  function (strFormat, key, strT, floatT, doubleT, doOne) {
if (strFormat == null ) return null;
if ("".equals$O(strFormat)) return "";
var len=key.length$();
if (strFormat.indexOf$S("%") < 0 || len == 0  || strFormat.indexOf$S(key) < 0 ) return strFormat;
var strLabel="";
var ich;
var ichPercent;
var ichKey;
for (ich=0; (ichPercent=strFormat.indexOf$I$I("%", ich)) >= 0 && (ichKey=strFormat.indexOf$S$I(key, ichPercent + 1)) >= 0 ; ) {
if (ich != ichPercent) strLabel+=strFormat.substring$I$I(ich, ichPercent);
ich=ichPercent + 1;
if (ichKey > ichPercent + 6) {
strLabel+="%";
continue;
}try {
var alignLeft=false;
if (strFormat.charAt$I(ich) == "-") {
alignLeft=true;
++ich;
}var zeroPad=false;
if (strFormat.charAt$I(ich) == "0") {
zeroPad=true;
++ich;
}var ch;
var width=0;
while ((ch=strFormat.charAt$I(ich)) >= "0" && (ch <= "9") ){
width=(10 * width) + (ch.$c() - 48);
++ich;
}
var precision=2147483647;
var isExponential=false;
if (strFormat.charAt$I(ich) == ".") {
++ich;
if ((ch=strFormat.charAt$I(ich)) == "-") {
isExponential=true;
++ich;
}if ((ch=strFormat.charAt$I(ich)) >= "0" && ch <= "9" ) {
precision=ch.$c() - 48;
++ich;
if ((ch=strFormat.charAt$I(ich)) >= "0" && ch <= "9" ) {
precision=10 * precision + (ch.$c() - 48);
++ich;
}}if (isExponential) precision=-precision;
}var st=strFormat.substring$I$I(ich, ich + len);
if (!st.equals$O(key)) {
ich=ichPercent + 1;
strLabel+="%";
continue;
}ich+=len;
if (!Float.isNaN$F(floatT)) strLabel+=C$.formatD$D$I$I$Z$Z(floatT, width, (st.equals$O("f") || st.equals$O("p")  ? precision : -1 - precision), alignLeft, zeroPad);
 else if (strT != null ) strLabel+=C$.formatS$S$I$I$Z$Z(strT, width, precision < 0 ? precision - 1 : precision, alignLeft, zeroPad);
 else if (!Double.isNaN$D(doubleT)) strLabel+=C$.formatD$D$I$I$Z$Z$Z(doubleT, width, (st.equals$O("e") || st.equals$O("P")  ? precision : -1 - precision), alignLeft, zeroPad, true);
if (doOne) break;
} catch (ioobe) {
if (Clazz_exceptionOf(ioobe,"IndexOutOfBoundsException")){
ich=ichPercent;
break;
} else {
throw ioobe;
}
}
}
strLabel+=strFormat.substring$I(ich);
return strLabel;
}, 1);

Clazz_newMeth(C$, 'formatStringS$S$S$S',  function (strFormat, key, strT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, strT, NaN, NaN, false);
}, 1);

Clazz_newMeth(C$, 'formatStringF$S$S$F',  function (strFormat, key, floatT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, null, floatT, NaN, false);
}, 1);

Clazz_newMeth(C$, 'formatStringD$S$S$D',  function (strFormat, key, doubleT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, null, NaN, doubleT, false);
}, 1);

Clazz_newMeth(C$, 'formatStringI$S$S$I',  function (strFormat, key, intT) {
return C$.formatString$S$S$S$F$D$Z(strFormat, key, "" + intT, NaN, NaN, false);
}, 1);

Clazz_newMeth(C$, 'sprintf$S$S$OA',  function (strFormat, list, values) {
if (values == null ) return strFormat;
var n=list.length$();
if (n == values.length) try {
for (var o=0; o < n; o++) {
if (values[o] == null ) continue;
var c;
switch ((c=list.charAt$I(o)).$c()) {
case 115:
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "s", values[o], NaN, NaN, true);
break;
case 102:
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "f", null, (values[o]).floatValue$(), NaN, true);
break;
case 105:
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "d", "" + values[o], NaN, NaN, true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "i", "" + values[o], NaN, NaN, true);
break;
case 100:
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "e", null, NaN, (values[o]).doubleValue$(), true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "f", null, NaN, (values[o]).doubleValue$(), true);
break;
case 112:
case 80:
{
var pVal=values[o];
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, (c == "p" ? "p" : "P"), null, NaN, pVal.x, true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, (c == "p" ? "p" : "P"), null, NaN, pVal.y, true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, (c == "p" ? "p" : "P"), null, NaN, pVal.z, true);
}break;
case 113:
{
var qVal=values[o];
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, NaN, qVal.x, true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, NaN, qVal.y, true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, NaN, qVal.z, true);
strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "q", null, NaN, qVal.w, true);
}break;
case 83:
var sVal=values[o];
for (var i=0; i < sVal.length; i++) strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "s", sVal[i], NaN, NaN, true);

break;
case 70:
if (Clazz_instanceOf(values[o], Clazz_array(Double.TYPE, -1))) {
var dVal=values[o];
for (var i=0; i < dVal.length; i++) strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "f", null, NaN, dVal[i], true);

} else {
var fVal=values[o];
for (var i=0; i < fVal.length; i++) strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "f", null, NaN, fVal[i], true);

}break;
case 73:
var iVal=values[o];
for (var i=0; i < iVal.length; i++) strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "d", "" + iVal[i], NaN, NaN, true);

for (var i=0; i < iVal.length; i++) strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "i", "" + iVal[i], NaN, NaN, true);

break;
case 68:
var dVal=values[o];
for (var i=0; i < dVal.length; i++) strFormat=C$.formatString$S$S$S$F$D$Z(strFormat, "e", null, NaN, dVal[i], true);

}
}
return C$.rep$S$S$S(strFormat, "%%", "%");
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
} else {
throw e;
}
}
System.out.println$S("TextFormat.sprintf error " + list + " " + strFormat );
return C$.rep$S$S$S(strFormat, "%", "?");
}, 1);

Clazz_newMeth(C$, 'formatCheck$S',  function (strFormat) {
if (strFormat == null  || strFormat.indexOf$I("p") < 0 && strFormat.indexOf$I("P") < 0  && strFormat.indexOf$I("q") < 0  ) return strFormat;
strFormat=C$.rep$S$S$S(strFormat, "%%", "\u0001");
strFormat=C$.rep$S$S$S(strFormat, "%p", "%6.2p");
strFormat=C$.rep$S$S$S(strFormat, "%P", "%6.2P");
strFormat=C$.rep$S$S$S(strFormat, "%q", "%6.2q");
var format=C$.split$S$S(strFormat, "%");
var sb=Clazz_new_($I$(2,1));
sb.append$S(format[0]);
for (var i=1; i < format.length; i++) {
var f="%" + format[i];
var pt;
if (f.length$() >= 3) {
if ((pt=f.indexOf$I("p")) >= 0 || (pt=f.indexOf$I("P")) >= 0 ) f=C$.fdup$S$I$I(f, pt, 3);
if ((pt=f.indexOf$I("q")) >= 0) f=C$.fdup$S$I$I(f, pt, 4);
}sb.append$S(f);
}
return sb.toString().replace$C$C("\u0001", "%");
}, 1);

Clazz_newMeth(C$, 'fdup$S$I$I',  function (f, pt, n) {
var ch;
var count=0;
for (var i=pt; --i >= 1; ) {
if (C$.isDigit$C(ch=f.charAt$I(i))) continue;
switch (ch.$c()) {
case 46:
if (count++ != 0) return f;
continue;
case 45:
if (i != 1 && f.charAt$I(i - 1) != "." ) return f;
continue;
default:
return f;
}
}
var s=f.substring$I$I(0, pt + 1);
var sb=Clazz_new_($I$(2,1));
for (var i=0; i < n; i++) sb.append$S(s);

sb.append$S(f.substring$I(pt + 1));
return sb.toString();
}, 1);

Clazz_newMeth(C$, 'parseDoubleArray$S',  function (str) {
return C$.parseDoubleArrayNext$S$IA$DA$S$S(str, Clazz_array(Integer.TYPE, [1]), null, null, null);
}, 1);

Clazz_newMeth(C$, 'parseDoubleArrayInfested$SA$DA',  function (tokens, data) {
var len=data.length;
var nTokens=tokens.length;
var n=0;
var max=0;
for (var i=0; i >= 0 && i < len  && n < nTokens ; i++) {
var f;
while (Double.isNaN$D(f=C$.parseDouble$S(tokens[n++])) && n < nTokens ){
}
if (!Double.isNaN$D(f)) data[(max=i)]=f;
if (n == nTokens) break;
}
return max + 1;
}, 1);

Clazz_newMeth(C$, 'parseDoubleArrayNext$S$IA$DA$S$S',  function (str, next, f, strStart, strEnd) {
var n=0;
var pt=next[0];
if (pt >= 0) {
if (strStart != null ) {
var p=str.indexOf$S$I(strStart, pt);
if (p >= 0) next[0]=p + strStart.length$();
}str=str.substring$I(next[0]);
pt=(strEnd == null  ? -1 : str.indexOf$S(strEnd));
if (pt < 0) pt=str.length$();
 else str=str.substring$I$I(0, pt);
next[0]+=pt + 1;
var tokens=C$.getTokens$S(str);
if (f == null ) f=Clazz_array(Double.TYPE, [tokens.length]);
n=C$.parseDoubleArrayInfested$SA$DA(tokens, f);
}if (f == null ) return Clazz_array(Double.TYPE, [0]);
for (var i=n; i < f.length; i++) f[i]=NaN;

return f;
}, 1);

Clazz_newMeth(C$, 'parseDoubleChecked$S$I$IA$Z',  function (str, ichMax, next, isStrict) {
var digitSeen=false;
var ich=next[0];
if (isStrict && str.indexOf$I("\n") != str.lastIndexOf$I("\n") ) return NaN;
while (ich < ichMax && C$.isWhiteSpace$S$I(str, ich) )++ich;

var negative=false;
if (ich < ichMax && str.charAt$I(ich) == "-" ) {
++ich;
negative=true;
}var ch=0;
var ival=0.0;
var ival2=0.0;
while (ich < ichMax && (ch=str.charAt$I(ich).$c()) >= 48  && ch <= 57 ){
ival=(ival * 10.0) + (ch - 48) * 1.0;
++ich;
digitSeen=true;
}
var isDecimal=false;
var iscale=0;
var nzero=(ival == 0  ? -1 : 0);
if (ch == 46 ) {
isDecimal=true;
while (++ich < ichMax && (ch=str.charAt$I(ich).$c()) >= 48  && ch <= 57 ){
digitSeen=true;
if (nzero < 0) {
if (ch == 48) {
--nzero;
continue;
}nzero=-nzero;
}if (iscale < C$.decimalScaleD.length) {
ival2=(ival2 * 10.0) + (ch - 48) * 1.0;
++iscale;
}}
}var value;
if (!digitSeen) {
value=NaN;
} else if (ival2 > 0 ) {
value=ival2 * C$.decimalScaleD[iscale - 1];
if (nzero > 1) {
if (nzero - 2 < C$.decimalScaleD.length) {
value*=C$.decimalScaleD[nzero - 2];
} else {
value*=Math.pow(10, 1 - nzero);
}} else {
value+=ival;
}} else {
value=ival;
}var isExponent=false;
if (ich < ichMax && (ch == 69 || ch == 101  || ch == 68 ) ) {
isExponent=true;
if (++ich >= ichMax) return NaN;
ch=str.charAt$I(ich).$c();
if ((ch == 43 ) && (++ich >= ichMax) ) return NaN;
next[0]=ich;
var exponent=C$.parseIntChecked$S$I$IA(str, ichMax, next);
if (exponent == -2147483648) return NaN;
if (exponent > 0 && exponent <= C$.tensScaleD.length ) value*=C$.tensScaleD[exponent - 1];
 else if (exponent < 0 && -exponent <= C$.decimalScaleD.length ) value*=C$.decimalScaleD[-exponent - 1];
 else if (exponent != 0) value*=Math.pow(10, exponent);
} else {
next[0]=ich;
}if (negative) value=-value;
if (value == Infinity ) value=1.7976931348623157E308;
return (!isStrict || (!isExponent || isDecimal ) && C$.checkTrailingText$S$I$I(str, next[0], ichMax)   ? value : NaN);
}, 1);

Clazz_newMeth(C$, 'parseDoubleRange$S$I$IA',  function (str, ichMax, next) {
var cch=str.length$();
if (ichMax > cch) ichMax=cch;
if (next[0] < 0 || next[0] >= ichMax ) return NaN;
return C$.parseDoubleChecked$S$I$IA$Z(str, ichMax, next, false);
}, 1);

Clazz_newMeth(C$, 'parseDoubleNext$S$IA',  function (str, next) {
var cch=(str == null  ? -1 : str.length$());
return (next[0] < 0 || next[0] >= cch  ? NaN : C$.parseDoubleChecked$S$I$IA$Z(str, cch, next, false));
}, 1);

Clazz_newMeth(C$, 'parseDoubleStrict$S',  function (str) {
var cch=str.length$();
if (cch == 0) return NaN;
return C$.parseDoubleChecked$S$I$IA$Z(str, cch, Clazz_array(Integer.TYPE, -1, [0]), true);
}, 1);

Clazz_newMeth(C$, 'parseDouble$S',  function (str) {
return C$.parseDoubleNext$S$IA(str, Clazz_array(Integer.TYPE, -1, [0]));
}, 1);

Clazz_newMeth(C$, 'parseDoubleArrayData$SA$DA',  function (tokens, data) {
C$.parseDoubleArrayDataN$SA$DA$I(tokens, data, data.length);
}, 1);

Clazz_newMeth(C$, 'parseDoubleArrayDataN$SA$DA$I',  function (tokens, data, nData) {
for (var i=nData; --i >= 0; ) data[i]=(i >= tokens.length ? NaN : C$.parseDouble$S(tokens[i]));

}, 1);

Clazz_newMeth(C$, 'parseDoubleFraction$S',  function (s) {
var pt=s.indexOf$S("/");
return (pt < 0 ? C$.parseDouble$S(s) : C$.parseDouble$S(s.substring$I$I(0, pt)) / C$.parseDouble$S(s.substring$I(pt + 1)));
}, 1);

Clazz_newMeth(C$, 'fixPtFloats$javajs_util_T3d$F',  function (pt, f) {
pt.x=Math.round$D(pt.x * f) / f;
pt.y=Math.round$D(pt.y * f) / f;
pt.z=Math.round$D(pt.z * f) / f;
}, 1);

Clazz_newMeth(C$, 'fixFloat$F$D',  function (d, f) {
return (Math.round$D(d * f) / f);
}, 1);

Clazz_newMeth(C$, 'fixDouble$D$D',  function (d, f) {
return Math.round$D(d * f) / f;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.tensScaleD=Clazz_array(Double.TYPE, -1, [10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0]);
C$.decimalScaleD=Clazz_array(Double.TYPE, -1, [0.1, 0.01, 0.001, 1.0E-4, 1.0E-5, 1.0E-6, 1.0E-7, 1.0E-8, 1.0E-9, 1.0E-10, 1.0E-11, 1.0E-12, 1.0E-13, 1.0E-14, 1.0E-15]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SB");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['s'],'O',['sb','StringBuilder']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
{
this.s = "";
}
}, 1);

Clazz_newMeth(C$, 'newN$I',  function (n) {
{
return new javajs.util.SB();
}
}, 1);

Clazz_newMeth(C$, 'newS$S',  function (s) {
{
var sb = new javajs.util.SB();
sb.s = s;
return sb;
}
}, 1);

Clazz_newMeth(C$, 'append$S',  function (s) {
{
this.s += s
}
return this;
});

Clazz_newMeth(C$, 'appendC$C',  function (c) {
{
this.s += c;
}
return this;
});

Clazz_newMeth(C$, 'appendI$I',  function (i) {
{
this.s += i
}
return this;
});

Clazz_newMeth(C$, 'appendB$Z',  function (b) {
{
this.s += b
}
return this;
});

Clazz_newMeth(C$, 'appendF$F',  function (f) {
{
var sf = "" + f;
if (sf.indexOf(".") < 0 && sf.indexOf("e") < 0) sf += ".0" ;
this.s += sf;
}
return this;
});

Clazz_newMeth(C$, 'appendD$D',  function (d) {
{
var sf = "" + d;
if (sf.indexOf(".") < 0 && sf.indexOf("e") < 0) sf += ".0" ;
this.s += sf;
}
return this;
});

Clazz_newMeth(C$, 'appendSB$javajs_util_SB',  function (buf) {
{
this.s += buf.s;
}
return this;
});

Clazz_newMeth(C$, 'appendO$O',  function (data) {
if (data != null ) {
{
this.s += data.toString();
}
}return this;
});

Clazz_newMeth(C$, 'appendCB$CA$I$I',  function (cb, off, len) {
{
this.s += cb.slice(off,off+len).join("");
}
});

Clazz_newMeth(C$, 'toString',  function () {
{
return this.s;
}
});

Clazz_newMeth(C$, 'length$',  function () {
{
return this.s.length;
}
});

Clazz_newMeth(C$, 'indexOf$S',  function (s) {
{
return this.s.indexOf(s);
}
});

Clazz_newMeth(C$, 'charAt$I',  function (i) {
{
return this.s.charAt(i);
}
});

Clazz_newMeth(C$, 'charCodeAt$I',  function (i) {
{
return this.s.charCodeAt(i);
}
});

Clazz_newMeth(C$, 'setLength$I',  function (n) {
{
this.s = this.s.substring(0, n);
}
});

Clazz_newMeth(C$, 'lastIndexOf$S',  function (s) {
{
return this.s.lastIndexOf(s);
}
});

Clazz_newMeth(C$, 'indexOf2$S$I',  function (s, i) {
{
return this.s.indexOf(s, i);
}
});

Clazz_newMeth(C$, 'substring$I',  function (i) {
{
return this.s.substring(i);
}
});

Clazz_newMeth(C$, 'substring2$I$I',  function (i, j) {
{
return this.s.substring(i, j);
}
});

Clazz_newMeth(C$, 'toBytes$I$I',  function (off, len) {
if (len == 0) return Clazz_array(Byte.TYPE, [0]);
var cs;
{
cs = "UTF-8";
}
return (len > 0 ? this.substring2$I$I(off, off + len) : off == 0 ? this.toString() : this.substring2$I$I(off, this.length$() - off)).getBytes$java_nio_charset_Charset(cs);
});

Clazz_newMeth(C$, 'replace$I$I$S',  function (start, end, str) {
{
this.s = this.s.substring(0, start) + str + this.s.substring(end);
}
});

Clazz_newMeth(C$, 'insert$I$S',  function (offset, str) {
this.replace$I$I$S(offset, offset, str);
});
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "T3d", null, null, ['javajs.api.JSONEncodable', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['x','y','z']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'set$D$D$D',  function (x, y, z) {
this.x=x;
this.y=y;
this.z=z;
});

Clazz_newMeth(C$, 'setA$DA',  function (t) {
this.x=t[0];
this.y=t[1];
this.z=t[2];
});

Clazz_newMeth(C$, 'setT$javajs_util_T3d',  function (t1) {
this.x=t1.x;
this.y=t1.y;
this.z=t1.z;
});

Clazz_newMeth(C$, 'add2$javajs_util_T3d$javajs_util_T3d',  function (t1, t2) {
this.x=t1.x + t2.x;
this.y=t1.y + t2.y;
this.z=t1.z + t2.z;
});

Clazz_newMeth(C$, 'add$javajs_util_T3d',  function (t) {
this.x+=t.x;
this.y+=t.y;
this.z+=t.z;
});

Clazz_newMeth(C$, 'distanceSquared$javajs_util_T3d',  function (p1) {
var dx=this.x - p1.x;
var dy=this.y - p1.y;
var dz=this.z - p1.z;
return (dx * dx + dy * dy + dz * dz);
});

Clazz_newMeth(C$, 'distance$javajs_util_T3d',  function (p1) {
return Math.sqrt(this.distanceSquared$javajs_util_T3d(p1));
});

Clazz_newMeth(C$, 'sub2$javajs_util_T3d$javajs_util_T3d',  function (t1, t2) {
this.x=t1.x - t2.x;
this.y=t1.y - t2.y;
this.z=t1.z - t2.z;
});

Clazz_newMeth(C$, 'sub$javajs_util_T3d',  function (t1) {
this.x-=t1.x;
this.y-=t1.y;
this.z-=t1.z;
});

Clazz_newMeth(C$, 'scale$D',  function (s) {
this.x*=s;
this.y*=s;
this.z*=s;
});

Clazz_newMeth(C$, 'scaleT$javajs_util_T3d',  function (p) {
this.x*=p.x;
this.y*=p.y;
this.z*=p.z;
});

Clazz_newMeth(C$, 'add3$D$D$D',  function (a, b, c) {
this.x+=a;
this.y+=b;
this.z+=c;
});

Clazz_newMeth(C$, 'scaleAdd$D$javajs_util_T3d$javajs_util_T3d',  function (s, t1, t2) {
this.x=s * t1.x + t2.x;
this.y=s * t1.y + t2.y;
this.z=s * t1.z + t2.z;
});

Clazz_newMeth(C$, 'scaleAdd2$D$javajs_util_T3d$javajs_util_T3d',  function (s, t1, t2) {
this.x=s * t1.x + t2.x;
this.y=s * t1.y + t2.y;
this.z=s * t1.z + t2.z;
});

Clazz_newMeth(C$, 'ave$javajs_util_T3d$javajs_util_T3d',  function (a, b) {
this.x=(a.x + b.x) / 2.0;
this.y=(a.y + b.y) / 2.0;
this.z=(a.z + b.z) / 2.0;
});

Clazz_newMeth(C$, 'dot$javajs_util_T3d',  function (v) {
return this.x * v.x + this.y * v.y + this.z * v.z;
});

Clazz_newMeth(C$, 'lengthSquared$',  function () {
return this.x * this.x + this.y * this.y + this.z * this.z;
});

Clazz_newMeth(C$, 'length$',  function () {
return Math.sqrt(this.lengthSquared$());
});

Clazz_newMeth(C$, 'normalize$',  function () {
var d=this.length$();
this.x/=d;
this.y/=d;
this.z/=d;
});

Clazz_newMeth(C$, 'cross$javajs_util_T3d$javajs_util_T3d',  function (v1, v2) {
this.set$D$D$D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var xbits=C$.doubleToLongBits0$D(this.x);
var ybits=C$.doubleToLongBits0$D(this.y);
var zbits=C$.doubleToLongBits0$D(this.z);
return Long.$ival((Long.$xor(xbits,(Long.$sr(xbits,32)) , ybits , (Long.$sr(ybits,32)) , zbits , (Long.$sr(zbits,32)) )));
});

Clazz_newMeth(C$, 'doubleToLongBits0$D',  function (d) {
return (d == 0  ? 0 : Double.doubleToLongBits$D(d));
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (t1) {
if (!(Clazz_instanceOf(t1, "javajs.util.T3d"))) return false;
var t2=t1;
return (this.x == t2.x  && this.y == t2.y   && this.z == t2.z  );
});

Clazz_newMeth(C$, 'toString',  function () {
return "{" + new Double(this.x).toString() + ", " + new Double(this.y).toString() + ", " + new Double(this.z).toString() + "}" ;
});

Clazz_newMeth(C$, 'doubleToIntBits$D',  function (x) {
return (x == 0  ? 0 : Float.floatToIntBits$F(x));
}, 1);

Clazz_newMeth(C$, 'toJSON$',  function () {
return "[" + new Double(this.x).toString() + "," + new Double(this.y).toString() + "," + new Double(this.z).toString() + "]" ;
});

Clazz_newMeth(C$, 'setP$javajs_util_T3d',  function (t) {
this.set$D$D$D(t.x, t.y, t.z);
return this;
});

Clazz_newMeth(C$, 'putP$javajs_util_T3d',  function (t) {
t.set$D$D$D(this.x, this.y, this.z);
return t;
});
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javajs.util"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "V3d", null, 'javajs.util.T3d');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'newV$javajs_util_T3d',  function (t) {
return C$.new3$D$D$D(t.x, t.y, t.z);
}, 1);

Clazz_newMeth(C$, 'newVsub$javajs_util_T3d$javajs_util_T3d',  function (t1, t2) {
return C$.new3$D$D$D(t1.x - t2.x, t1.y - t2.y, t1.z - t2.z);
}, 1);

Clazz_newMeth(C$, 'new3$D$D$D',  function (x, y, z) {
var v=Clazz_new_(C$);
v.x=x;
v.y=y;
v.z=z;
return v;
}, 1);

Clazz_newMeth(C$, 'angle$javajs_util_V3d',  function (v1) {
var xx=this.y * v1.z - this.z * v1.y;
var yy=this.z * v1.x - this.x * v1.z;
var zz=this.x * v1.y - this.y * v1.x;
var cross=Math.sqrt(xx * xx + yy * yy + zz * zz);
return Math.abs(Math.atan2(cross, this.dot$javajs_util_T3d(v1)));
});

Clazz_newMeth(C$, 'copyToV3$',  function () {
return C$.new3$D$D$D(this.x, this.y, this.z);
});

Clazz_newMeth(C$, 'asV3$',  function () {
{
return this;
}
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:51:47 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.ArrayTable','javax.swing.event.SwingPropertyChangeSupport','java.beans.PropertyChangeListener']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractAction", null, null, ['javax.swing.Action', 'Cloneable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.enabled=true;
},1);

C$.$fields$=[['Z',['enabled'],'O',['arrayTable','javax.swing.ArrayTable','changeSupport','javax.swing.event.SwingPropertyChangeSupport']]
,['O',['RECONFIGURE_ON_NULL','Boolean']]]

Clazz_newMeth(C$, 'shouldReconfigure$java_beans_PropertyChangeEvent',  function (e) {
if (e.getPropertyName$() == null ) {
C$.RECONFIGURE_ON_NULL=Boolean.valueOf$Z(false);
}return false;
}, 1);

Clazz_newMeth(C$, 'setEnabledFromAction$javax_swing_JComponent$javax_swing_Action',  function (c, a) {
c.setEnabled$Z((a != null ) ? a.isEnabled$() : true);
}, 1);

Clazz_newMeth(C$, 'setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action',  function (c, a) {
c.setToolTipText$S(a != null  ? a.getValue$S("ShortDescription") : null);
}, 1);

Clazz_newMeth(C$, 'hasSelectedKey$javax_swing_Action',  function (a) {
return (a != null  && a.getValue$S("SwingSelectedKey") != null  );
}, 1);

Clazz_newMeth(C$, 'isSelected$javax_swing_Action',  function (a) {
return Boolean.TRUE.equals$O(a.getValue$S("SwingSelectedKey"));
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.$init$.apply(this);
this.putValue$S$O("Name", name);
}, 1);

Clazz_newMeth(C$, 'c$$S$javax_swing_Icon',  function (name, icon) {
C$.c$$S.apply(this, [name]);
this.putValue$S$O("SmallIcon", icon);
}, 1);

Clazz_newMeth(C$, 'getValue$S',  function (key) {
if (key === "enabled" ) {
return Boolean.valueOf$Z(this.enabled);
}if (this.arrayTable == null ) {
return null;
}return this.arrayTable.get$O(key);
});

Clazz_newMeth(C$, 'putValue$S$O',  function (key, newValue) {
var oldValue=null;
if (key === "enabled" ) {
if (newValue == null  || !(Clazz_instanceOf(newValue, "java.lang.Boolean")) ) {
newValue=Boolean.valueOf$Z(false);
}oldValue=Boolean.valueOf$Z(this.enabled);
this.enabled=(newValue).valueOf();
} else {
if (this.arrayTable == null ) {
this.arrayTable=Clazz_new_($I$(1,1));
}if (this.arrayTable.containsKey$O(key)) oldValue=this.arrayTable.get$O(key);
if (newValue == null ) {
this.arrayTable.remove$O(key);
} else {
this.arrayTable.put$O$O(key, newValue);
}}this.firePropertyChange$S$O$O(key, oldValue, newValue);
});

Clazz_newMeth(C$, 'isEnabled$',  function () {
return this.enabled;
});

Clazz_newMeth(C$, 'setEnabled$Z',  function (newValue) {
var oldValue=this.enabled;
if (oldValue != newValue ) {
this.enabled=newValue;
this.firePropertyChange$S$O$O("enabled", Boolean.valueOf$Z(oldValue), Boolean.valueOf$Z(newValue));
}});

Clazz_newMeth(C$, 'getKeys$',  function () {
if (this.arrayTable == null ) {
return null;
}var keys=Clazz_array(java.lang.Object, [this.arrayTable.size$()]);
this.arrayTable.getKeys$OA(keys);
return keys;
});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O',  function (propertyName, oldValue, newValue) {
if (this.changeSupport == null  || (oldValue != null  && newValue != null   && oldValue.equals$O(newValue) ) ) {
return;
}this.changeSupport.firePropertyChange$S$O$O(propertyName, oldValue, newValue);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(2,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (this.changeSupport == null ) {
return;
}this.changeSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
if (this.changeSupport == null ) {
return Clazz_array($I$(3), [0]);
}return this.changeSupport.getPropertyChangeListeners$();
});

Clazz_newMeth(C$, 'clone$',  function () {
var newAction=Clazz_clone(this);
{
if (this.arrayTable != null ) {
newAction.arrayTable=this.arrayTable.clone$();
}}return newAction;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:52 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Action", null, null, 'java.awt.event.ActionListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:53 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.ArrayTable','java.util.HashMap']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ActionMap");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['arrayTable','javax.swing.ArrayTable','parent','javax.swing.ActionMap']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setParent$javax_swing_ActionMap',  function (map) {
this.parent=map;
});

Clazz_newMeth(C$, 'getParent$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'put$O$javax_swing_Action',  function (key, action) {
if (key == null ) {
return;
}if (action == null ) {
this.remove$O(key);
} else {
if (this.arrayTable == null ) {
this.arrayTable=Clazz_new_($I$(1,1));
}this.arrayTable.put$O$O(key, action);
}});

Clazz_newMeth(C$, 'get$O',  function (key) {
var value=(this.arrayTable == null ) ? null : this.arrayTable.get$O(key);
if (value == null ) {
var parent=this.getParent$();
if (parent != null ) {
return parent.get$O(key);
}}return value;
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
if (this.arrayTable != null ) {
this.arrayTable.remove$O(key);
}});

Clazz_newMeth(C$, 'clear$',  function () {
if (this.arrayTable != null ) {
this.arrayTable.clear$();
}});

Clazz_newMeth(C$, 'keys$',  function () {
if (this.arrayTable == null ) {
return null;
}return this.arrayTable.getKeys$OA(null);
});

Clazz_newMeth(C$, 'size$',  function () {
if (this.arrayTable == null ) {
return 0;
}return this.arrayTable.size$();
});

Clazz_newMeth(C$, 'allKeys$',  function () {
var count=this.size$();
var parent=this.getParent$();
if (count == 0) {
if (parent != null ) {
return parent.allKeys$();
}return this.keys$();
}if (parent == null ) {
return this.keys$();
}var keys=this.keys$();
var pKeys=parent.allKeys$();
if (pKeys == null ) {
return keys;
}if (keys == null ) {
return pKeys;
}var keyMap=Clazz_new_($I$(2,1));
var counter;
for (counter=keys.length - 1; counter >= 0; counter--) {
keyMap.put$O$O(keys[counter], keys[counter]);
}
for (counter=pKeys.length - 1; counter >= 0; counter--) {
keyMap.put$O$O(pKeys[counter], pKeys[counter]);
}
return keyMap.keySet$().toArray$();
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:53 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'java.util.Hashtable']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ArrayTable", null, null, 'Cloneable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.table=null;
},1);

C$.$fields$=[['O',['table','java.lang.Object']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
if (this.table == null ) {
this.table=Clazz_array(java.lang.Object, -1, [key, value]);
} else {
var size=this.size$();
if (size < 8) {
if (this.containsKey$O(key)) {
var tmp=this.table;
for (var i=0; i < tmp.length - 1; i+=2) {
if (tmp[i].equals$O(key)) {
tmp[i + 1]=value;
break;
}}
} else {
var array=this.table;
var i=array.length;
var tmp=Clazz_array(java.lang.Object, [i + 2]);
System.arraycopy$O$I$O$I$I(array, 0, tmp, 0, i);
tmp[i]=key;
tmp[i + 1]=value;
this.table=tmp;
}} else {
if ((size == 8) && p$1.isArray.apply(this, []) ) {
p$1.grow.apply(this, []);
}(this.table).put$O$O(key, value);
}}});

Clazz_newMeth(C$, 'get$O',  function (key) {
var value=null;
if (this.table != null ) {
if (p$1.isArray.apply(this, [])) {
var array=this.table;
for (var i=0; i < array.length - 1; i+=2) {
if (array[i].equals$O(key)) {
value=array[i + 1];
break;
}}
} else {
value=(this.table).get$O(key);
}}return value;
});

Clazz_newMeth(C$, 'size$',  function () {
var size;
if (this.table == null ) return 0;
if (p$1.isArray.apply(this, [])) {
size=((this.table).length/2|0);
} else {
size=(this.table).size$();
}return size;
});

Clazz_newMeth(C$, 'containsKey$O',  function (key) {
var contains=false;
if (this.table != null ) {
if (p$1.isArray.apply(this, [])) {
var array=this.table;
for (var i=0; i < array.length - 1; i+=2) {
if (array[i].equals$O(key)) {
contains=true;
break;
}}
} else {
contains=(this.table).containsKey$O(key);
}}return contains;
});

Clazz_newMeth(C$, 'remove$O',  function (key) {
var value=null;
if (key == null ) {
return null;
}if (this.table != null ) {
if (p$1.isArray.apply(this, [])) {
var index=-1;
var array=this.table;
for (var i=array.length - 2; i >= 0; i-=2) {
if (array[i].equals$O(key)) {
index=i;
value=array[i + 1];
break;
}}
if (index != -1) {
var tmp=Clazz_array(java.lang.Object, [array.length - 2]);
System.arraycopy$O$I$O$I$I(array, 0, tmp, 0, index);
if (index < tmp.length) System.arraycopy$O$I$O$I$I(array, index + 2, tmp, index, tmp.length - index);
this.table=(tmp.length == 0) ? null : tmp;
}} else {
value=(this.table).remove$O(key);
}if (this.size$() == 7 && !p$1.isArray.apply(this, []) ) {
p$1.shrink.apply(this, []);
}}return value;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.table=null;
});

Clazz_newMeth(C$, 'clone$',  function () {
var newArrayTable=Clazz_new_(C$);
if (p$1.isArray.apply(this, [])) {
var array=this.table;
for (var i=0; i < array.length - 1; i+=2) {
newArrayTable.put$O$O(array[i], array[i + 1]);
}
} else {
var tmp=this.table;
var keys=tmp.keys$();
while (keys.hasMoreElements$()){
var o=keys.nextElement$();
newArrayTable.put$O$O(o, tmp.get$O(o));
}
}return newArrayTable;
});

Clazz_newMeth(C$, 'getKeys$OA',  function (keys) {
if (this.table == null ) {
return null;
}if (p$1.isArray.apply(this, [])) {
var array=this.table;
if (keys == null ) {
keys=Clazz_array(java.lang.Object, [(array.length/2|0)]);
}for (var i=0, index=0; i < array.length - 1; i+=2, index++) {
keys[index]=array[i];
}
} else {
var tmp=this.table;
var enum_=tmp.keys$();
var counter=tmp.size$();
if (keys == null ) {
keys=Clazz_array(java.lang.Object, [counter]);
}while (counter > 0){
keys[--counter]=enum_.nextElement$();
}
}return keys;
});

Clazz_newMeth(C$, 'isArray',  function () {
return (Clazz_instanceOf(this.table, Clazz_array(java.lang.Object, -1)));
}, p$1);

Clazz_newMeth(C$, 'grow',  function () {
var array=this.table;
var tmp=Clazz_new_([(array.length/2|0)],$I$(1,1).c$$I);
for (var i=0; i < array.length; i+=2) {
tmp.put$O$O(array[i], array[i + 1]);
}
this.table=tmp;
}, p$1);

Clazz_newMeth(C$, 'shrink',  function () {
var tmp=this.table;
var array=Clazz_array(java.lang.Object, [tmp.size$() * 2]);
var keys=tmp.keys$();
var j=0;
while (keys.hasMoreElements$()){
var o=keys.nextElement$();
array[j]=o;
array[j + 1]=tmp.get$O(o);
j+=2;
}
this.table=array;
}, p$1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:53 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*e*/var C$=Clazz_newClass(P$, "ClientPropertyKey", null, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['reportValueNotSerializable']]]

Clazz_newMeth(C$, 'getJComponent_TRANSFER_HANDLER$',  function () {
return C$.JComponent_TRANSFER_HANDLER;
});

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$Z.apply(this, [false]);
}, 1);

Clazz_newMeth(C$, 'c$$Z',  function (reportValueNotSerializable) {
;C$.$init$.apply(this);
this.reportValueNotSerializable=reportValueNotSerializable;
}, 1);

Clazz_newMeth(C$, 'getReportValueNotSerializable$',  function () {
return this.reportValueNotSerializable;
});

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$$Z, "JComponent_INPUT_VERIFIER", 0, [true]);
Clazz_newEnumConst($vals, C$.c$$Z, "JComponent_TRANSFER_HANDLER", 1, [true]);
Clazz_newEnumConst($vals, C$.c$$Z, "JComponent_ANCESTOR_NOTIFIER", 2, [true]);
Clazz_newEnumConst($vals, C$.c$$Z, "PopupFactory_FORCE_HEAVYWEIGHT_POPUP", 3, [true]);
};
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:53 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*e*/var C$=Clazz_newClass(P$, "DropMode", null, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "USE_SELECTION", 0, []);
Clazz_newEnumConst($vals, C$.c$, "ON", 1, []);
Clazz_newEnumConst($vals, C$.c$, "INSERT", 2, []);
Clazz_newEnumConst($vals, C$.c$, "INSERT_ROWS", 3, []);
Clazz_newEnumConst($vals, C$.c$, "INSERT_COLS", 4, []);
Clazz_newEnumConst($vals, C$.c$, "ON_OR_INSERT", 5, []);
Clazz_newEnumConst($vals, C$.c$, "ON_OR_INSERT_ROWS", 6, []);
Clazz_newEnumConst($vals, C$.c$, "ON_OR_INSERT_COLS", 7, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:54 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'java.awt.KeyboardFocusManager','javax.swing.DelegatingDefaultFocusManager','java.awt.DefaultFocusTraversalPolicy']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FocusManager", null, 'java.awt.DefaultKeyboardFocusManager');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['Z',['enabled']]]

Clazz_newMeth(C$, 'getCurrentManager$',  function () {
var manager=$I$(1).getCurrentKeyboardFocusManager$();
if (Clazz_instanceOf(manager, "java.awt.DefaultKeyboardFocusManager")) return manager;
if (Clazz_instanceOf(manager, "javax.swing.FocusManager")) {
return manager;
} else {
return Clazz_new_($I$(2,1).c$$java_awt_KeyboardFocusManager,[manager]);
}}, 1);

Clazz_newMeth(C$, 'setCurrentManager$javax_swing_FocusManager',  function (aFocusManager) {
var toSet=(Clazz_instanceOf(aFocusManager, "javax.swing.DelegatingDefaultFocusManager")) ? (aFocusManager).getDelegate$() : aFocusManager;
$I$(1).setCurrentKeyboardFocusManager$java_awt_KeyboardFocusManager(toSet);
}, 1);

Clazz_newMeth(C$, 'disableSwingFocusManager$',  function () {
if (C$.enabled) {
C$.enabled=false;
$I$(1).getCurrentKeyboardFocusManager$().setDefaultFocusTraversalPolicy$java_awt_FocusTraversalPolicy(Clazz_new_($I$(3,1)));
}}, 1);

Clazz_newMeth(C$, 'isFocusManagerEnabled$',  function () {
return C$.enabled;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.enabled=true;
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:54 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.ArrayTable','javax.swing.KeyStroke','java.util.HashMap']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "InputMap");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['arrayTable','javax.swing.ArrayTable','parent','javax.swing.InputMap']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setParent$javax_swing_InputMap',  function (map) {
this.parent=map;
});

Clazz_newMeth(C$, 'getParent$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'put$javax_swing_KeyStroke$O',  function (keyStroke, actionMapKey) {
if (keyStroke == null ) {
return;
}if (actionMapKey == null ) {
this.remove$javax_swing_KeyStroke(keyStroke);
} else {
if (this.arrayTable == null ) {
this.arrayTable=Clazz_new_($I$(1,1));
}this.arrayTable.put$O$O(keyStroke, actionMapKey);
}});

Clazz_newMeth(C$, 'get$javax_swing_KeyStroke',  function (keyStroke) {
if (this.arrayTable == null ) {
var parent=this.getParent$();
if (parent != null ) {
return parent.get$javax_swing_KeyStroke(keyStroke);
}return null;
}var value=this.arrayTable.get$O(keyStroke);
if (value == null ) {
var parent=this.getParent$();
if (parent != null ) {
return parent.get$javax_swing_KeyStroke(keyStroke);
}}return value;
});

Clazz_newMeth(C$, 'remove$javax_swing_KeyStroke',  function (key) {
if (this.arrayTable != null ) {
this.arrayTable.remove$O(key);
}});

Clazz_newMeth(C$, 'clear$',  function () {
if (this.arrayTable != null ) {
this.arrayTable.clear$();
}});

Clazz_newMeth(C$, 'keys$',  function () {
if (this.arrayTable == null ) {
return null;
}var keys=Clazz_array($I$(2), [this.arrayTable.size$()]);
this.arrayTable.getKeys$OA(keys);
return keys;
});

Clazz_newMeth(C$, 'size$',  function () {
if (this.arrayTable == null ) {
return 0;
}return this.arrayTable.size$();
});

Clazz_newMeth(C$, 'allKeys$',  function () {
var count=this.size$();
var parent=this.getParent$();
if (count == 0) {
if (parent != null ) {
return parent.allKeys$();
}return this.keys$();
}if (parent == null ) {
return this.keys$();
}var keys=this.keys$();
var pKeys=parent.allKeys$();
if (pKeys == null ) {
return keys;
}if (keys == null ) {
return pKeys;
}var keyMap=Clazz_new_($I$(3,1));
var counter;
for (counter=keys.length - 1; counter >= 0; counter--) {
keyMap.put$O$O(keys[counter], keys[counter]);
}
for (counter=pKeys.length - 1; counter >= 0; counter--) {
keyMap.put$O$O(pKeys[counter], pKeys[counter]);
}
var allKeys=Clazz_array($I$(2), [keyMap.size$()]);
return keyMap.keySet$().toArray$OA(allKeys);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:54 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "InternalFrameFocusTraversalPolicy", null, 'java.awt.FocusTraversalPolicy');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getInitialComponent$javax_swing_JInternalFrame',  function (frame) {
return this.getDefaultComponent$java_awt_Container(frame);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:55 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'java.awt.Color','javax.swing.JComponent','java.awt.BorderLayout','javax.swing.JRootPane','javax.swing.SwingUtilities','javax.swing.RepaintManager']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JApplet", null, 'java.applet.JSApplet', 'javax.swing.RootPaneContainer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.rootPaneCheckingEnabled=false;
},1);

C$.$fields$=[['Z',['rootPaneCheckingEnabled'],'O',['rootPane','javax.swing.JRootPane','transferHandler','javax.swing.TransferHandler']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.秘paintClass=this.秘updateClass=C$ ||null;
this.setFrameViewer$swingjs_JSFrameViewer(this.秘appletViewer);
p$1.setJApplet.apply(this, []);
this.updateUI$();
}, 1);

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return "AppletUI";
});

Clazz_newMeth(C$, 'setPanelUIClassID$',  function () {
});

Clazz_newMeth(C$, 'setJApplet',  function () {
this.setRootPane$javax_swing_JRootPane(this.createRootPane$());
this.rootPane.setFrameViewer$swingjs_JSFrameViewer(this.秘appletViewer);
this.setForeground$java_awt_Color($I$(1).black);
this.setBackground$java_awt_Color($I$(1).white);
this.setLocale$java_util_Locale($I$(2).getDefaultLocale$());
this.setLayout$java_awt_LayoutManager(Clazz_new_($I$(3,1)));
this.setRootPaneCheckingEnabled$Z(true);
this.setFocusTraversalPolicyProvider$Z(true);
this.enableEvents$J(8);
}, p$1);

Clazz_newMeth(C$, 'createRootPane$',  function () {
var rp=Clazz_new_($I$(4,1).c$$S$Z$java_awt_Container,["", true, this]);
rp.setOpaque$Z(true);
return rp;
});

Clazz_newMeth(C$, 'setTransferHandler$javax_swing_TransferHandler',  function (newHandler) {
var oldHandler=this.transferHandler;
this.transferHandler=newHandler;
$I$(5).installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler(this, this.transferHandler);
this.firePropertyChange$S$O$O("transferHandler", oldHandler, newHandler);
});

Clazz_newMeth(C$, 'getTransferHandler$',  function () {
return this.transferHandler;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
(g).setBackground$java_awt_Color(this.getBackground$());
(g).setColor$java_awt_Color(this.getForeground$());
this.rootPane.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'setJMenuBar$javax_swing_JMenuBar',  function (menuBar) {
this.getRootPane$().setMenuBar$javax_swing_JMenuBar(menuBar);
});

Clazz_newMeth(C$, 'getJMenuBar$',  function () {
return this.getRootPane$().getMenuBar$();
});

Clazz_newMeth(C$, 'isRootPaneCheckingEnabled$',  function () {
return this.rootPaneCheckingEnabled;
});

Clazz_newMeth(C$, 'setRootPaneCheckingEnabled$Z',  function (enabled) {
this.rootPaneCheckingEnabled=enabled;
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I',  function (comp, constraints, index) {
if (this.isRootPaneCheckingEnabled$()) {
this.getContentPane$().add$java_awt_Component$O$I(comp, constraints, index);
return;
}this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'remove$java_awt_Component',  function (comp) {
if (comp === this.rootPane ) {
C$.superclazz.prototype.remove$java_awt_Component.apply(this, [comp]);
} else {
this.getContentPane$().remove$java_awt_Component(comp);
}});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager',  function (manager) {
if (this.isRootPaneCheckingEnabled$()) {
this.getContentPane$().setLayout$java_awt_LayoutManager(manager);
} else {
C$.superclazz.prototype.setLayout$java_awt_LayoutManager.apply(this, [manager]);
}});

Clazz_newMeth(C$, 'getRootPane$',  function () {
return this.rootPane;
});

Clazz_newMeth(C$, 'setRootPane$javax_swing_JRootPane',  function (root) {
if (this.rootPane != null ) {
this.remove$java_awt_Component(this.rootPane);
}this.rootPane=root;
if (this.rootPane != null ) {
var checkingEnabled=this.isRootPaneCheckingEnabled$();
try {
this.setRootPaneCheckingEnabled$Z(false);
this.add$java_awt_Component$O(this.rootPane, "Center");
} finally {
this.setRootPaneCheckingEnabled$Z(checkingEnabled);
}
}});

Clazz_newMeth(C$, 'getContentPane$',  function () {
return this.getRootPane$().getContentPane$();
});

Clazz_newMeth(C$, 'setContentPane$java_awt_Container',  function (contentPane) {
this.getRootPane$().setContentPane$java_awt_Container(contentPane);
});

Clazz_newMeth(C$, 'getLayeredPane$',  function () {
return this.getRootPane$().getLayeredPane$();
});

Clazz_newMeth(C$, 'setLayeredPane$javax_swing_JLayeredPane',  function (layeredPane) {
this.getRootPane$().setLayeredPane$javax_swing_JLayeredPane(layeredPane);
});

Clazz_newMeth(C$, 'getGlassPane$',  function () {
return this.getRootPane$().getGlassPane$();
});

Clazz_newMeth(C$, 'setGlassPane$java_awt_Component',  function (glassPane) {
this.getRootPane$().setGlassPane$java_awt_Component(glassPane);
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
$I$(2).getGraphicsInvoked$java_awt_Component(this);
return C$.superclazz.prototype.getGraphics$.apply(this, []);
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I',  function (time, x, y, width, height) {
if ((!this.秘isAWT$() || !this.canPaint$() ) && $I$(6).HANDLE_TOP_LEVEL_PAINT ) {
$I$(6).currentManager$java_awt_Component(this).addDirtyRegion$java_applet_JSApplet$I$I$I$I(this, x, y, width, height);
} else {
C$.superclazz.prototype.repaint$J$I$I$I$I.apply(this, [time, x, y, width, height]);
}});

Clazz_newMeth(C$, 'repaintNow$',  function () {
this.repaint$J$I$I$I$I(100, 0, 0, this.getWidth$(), this.getHeight$());
});

Clazz_newMeth(C$, 'paramString$',  function () {
var rootPaneString=(this.rootPane != null  ? this.rootPane.toString() : "");
var rootPaneCheckingEnabledString=(this.rootPaneCheckingEnabled ? "true" : "false");
return C$.superclazz.prototype.paramString$.apply(this, []) + ",rootPane=" + rootPaneString + ",rootPaneCheckingEnabled=" + rootPaneCheckingEnabledString ;
});

Clazz_newMeth(C$, 'getLocationOnScreen$',  function () {
return (this.isShowing$() ? this.getRootPane$().getLocationOnScreen$() : null);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:55 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'javax.swing.SwingUtilities',['javax.swing.JComponent','.IntVector'],'javajs.util.Lst','javax.swing.JComponent','javax.swing.event.EventListenerList','java.util.HashSet','javax.swing.KeyStroke','java.awt.Rectangle','java.awt.JSComponent','javax.swing.RepaintManager','javax.swing.LegacyGlueFocusTraversalPolicy','sun.font.FontDesignMetrics','java.awt.Insets','javax.swing.ClientPropertyKey',['javax.swing.JComponent','.ActionStandin'],'java.util.Hashtable','javax.swing.KeyboardManager','javax.swing.InputMap','javax.swing.ComponentInputMap','javax.swing.ActionMap',['java.awt.Component','.BaselineResizeBehavior'],'java.util.Locale',['javax.swing.JComponent','.KeyboardState'],'javax.swing.Popup','javax.swing.ToolTipManager','javax.swing.JToolTip','javax.swing.Autoscroller','javax.swing.ArrayTable','swingjs.JSUtil','javax.swing.AncestorNotifier','javax.swing.event.AncestorListener','java.beans.PropertyChangeListener','java.util.ArrayList']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JComponent", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.Container');
C$.$classes$=[['ActionStandin',16],['IntVector',24],['KeyboardState',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.listenerList=Clazz_new_($I$(5,1));
this.verifyInputWhenFocusTarget=true;
},1);

C$.$fields$=[['Z',['秘isAlignmentXSet','秘isAlignmentYSet','autoscrolls','verifyInputWhenFocusTarget'],'F',['秘alignmentX','秘alignmentY'],'I',['flags'],'O',['listenerList','javax.swing.event.EventListenerList','clientProperties','javax.swing.ArrayTable','paintingChild','java.awt.Component','秘popupMenu','javax.swing.JPopupMenu','focusInputMap','javax.swing.InputMap','+ancestorInputMap','windowInputMap','javax.swing.ComponentInputMap','actionMap','javax.swing.ActionMap']]
,['Z',['DEBUG_GRAPHICS_LOADED'],'O',['managingFocusForwardTraversalKeys','java.util.Set','+managingFocusBackwardTraversalKeys','INPUT_VERIFIER_SOURCE_KEY','java.lang.Object','_tempRect','javajs.util.Lst','componentObtainingGraphicsFrom','java.awt.Component','focusController','sun.awt.RequestFocusController','JComponent_TRANSFER_HANDLER','java.lang.Object']]]

Clazz_newMeth(C$, 'safelyGetGraphics$java_awt_Component$java_awt_Component',  function (c, root) {
C$.componentObtainingGraphicsFrom=root;
var g=c.getGraphics$();
C$.componentObtainingGraphicsFrom=null;
return g;
}, 1);

Clazz_newMeth(C$, 'getGraphicsInvoked$java_awt_Component',  function (root) {
if (!C$.isComponentObtainingGraphicsFrom$java_awt_Component(root)) {
var rootPane=(root).getRootPane$();
if (rootPane != null ) {
rootPane.disableTrueDoubleBuffering$();
}}}, 1);

Clazz_newMeth(C$, 'isComponentObtainingGraphicsFrom$java_awt_Component',  function (c) {
return (c == null  && C$.componentObtainingGraphicsFrom != null   || C$.componentObtainingGraphicsFrom === c  );
}, 1);

Clazz_newMeth(C$, 'getManagingFocusForwardTraversalKeys$',  function () {
{
if (C$.managingFocusForwardTraversalKeys == null ) {
C$.managingFocusForwardTraversalKeys=Clazz_new_($I$(6,1).c$$I,[1]);
C$.managingFocusForwardTraversalKeys.add$O($I$(7).getKeyStroke$I$I(9, 2));
}}return C$.managingFocusForwardTraversalKeys;
}, 1);

Clazz_newMeth(C$, 'getManagingFocusBackwardTraversalKeys$',  function () {
{
if (C$.managingFocusBackwardTraversalKeys == null ) {
C$.managingFocusBackwardTraversalKeys=Clazz_new_($I$(6,1).c$$I,[1]);
C$.managingFocusBackwardTraversalKeys.add$O($I$(7).getKeyStroke$I$I(9, 3));
}}return C$.managingFocusBackwardTraversalKeys;
}, 1);

Clazz_newMeth(C$, 'fetchRectangle$',  function () {
{
var rect;
var size=C$._tempRect.size$();
if (size > 0) {
rect=C$._tempRect.removeItemAt$I(size - 1);
} else {
rect=Clazz_new_($I$(8,1).c$$I$I$I$I,[0, 0, 0, 0]);
}return rect;
}}, 1);

Clazz_newMeth(C$, 'recycleRectangle$java_awt_Rectangle',  function (rect) {
{
C$._tempRect.addLast$O(rect);
}}, 1);

Clazz_newMeth(C$, 'setInheritsPopupMenu$Z',  function (value) {
var oldValue=p$1.getFlag$I.apply(this, [23]);
this.秘setFlag$I$Z(23, value);
this.firePropertyChange$S$Z$Z("inheritsPopupMenu", oldValue, value);
});

Clazz_newMeth(C$, 'getInheritsPopupMenu$',  function () {
return p$1.getFlag$I.apply(this, [23]);
});

Clazz_newMeth(C$, 'setComponentPopupMenu$javax_swing_JPopupMenu',  function (popup) {
if (popup != null ) {
this.enableEvents$J(16);
}var oldPopup=this.秘popupMenu;
this.秘popupMenu=popup;
this.firePropertyChange$S$O$O("componentPopupMenu", oldPopup, popup);
});

Clazz_newMeth(C$, 'getComponentPopupMenu$',  function () {
if (!this.getInheritsPopupMenu$()) {
return this.秘popupMenu;
}if (this.秘popupMenu == null ) {
var parent=this.getParent$();
while (parent != null ){
if (Clazz_instanceOf(parent, "javax.swing.JComponent")) {
return (parent).getComponentPopupMenu$();
}if (parent.isWindowOrJSApplet$()) {
break;
}parent=parent.getParent$();
}
return null;
}return this.秘popupMenu;
});

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.秘paintClass=this.秘updateClass=C$ ||null;
this.enableEvents$J(8);
if (this.isManagingFocus$()) {
}C$.superclazz.prototype.setLocale$java_util_Locale.apply(this, [C$.getDefaultLocale$()]);
}, 1);

Clazz_newMeth(C$, 'getComponentGraphics$java_awt_Graphics',  function (g) {
if (this.秘g != null ) g=this.秘checkG$();
g.setColor$java_awt_Color(this.getForeground$());
g.setFont$java_awt_Font(this.getFont$());
return g;
});

Clazz_newMeth(C$, 'paintComponent$java_awt_Graphics',  function (g) {
if (this.ui != null  && g != null  ) {
var scratchGraphics=g.create$();
try {
this.ui.update$java_awt_Graphics$javax_swing_JComponent(scratchGraphics, this);
} catch (t) {
t.printStackTrace$();
} finally {
scratchGraphics.dispose$();
}
}});

Clazz_newMeth(C$, 'paintChildren$java_awt_Graphics',  function (g) {
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var i=this.getComponentCount$() - 1;
if (i < 0) {
return;
}if (this.paintingChild != null  && (Clazz_instanceOf(this.paintingChild, "javax.swing.JComponent")) ) {
for (; i >= 0; i--) {
if (this.getComponent$I(i) === this.paintingChild ) {
break;
}}
}var tmpRect=C$.fetchRectangle$();
var tmpRect2=C$.fetchRectangle$();
for (; i >= 0; i--) {
var jc=this.getComponent$I(i);
if (jc != null  && jc.isVisible$() ) {
jc.getBounds$java_awt_Rectangle(tmpRect);
var isContentPane=jc.getRootPane$().getContentPane$() === jc ;
var vr=(tmpRect);
var jsg=g.create$I$I$I$I(tmpRect.x, (isContentPane ? 0 : tmpRect.y), vr.width, vr.height);
jsg.setColor$java_awt_Color(jc.getForeground$());
jsg.setFont$java_awt_Font(jc.getFont$());
var shouldSetFlagBack=false;
try {
jc.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jsg, true);
$I$(9).秘setIsRepaint$Z(false);
jc.秘paint$java_awt_Graphics(jsg);
$I$(9).秘setIsRepaint$Z(true);
jc.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(this.秘getJSGraphic2D$java_awt_Graphics(jsg), false);
} finally {
jsg.dispose$();
if (shouldSetFlagBack) {
(jc).秘setFlag$I$Z(1, false);
(jc).秘setFlag$I$Z(2, false);
}}
}}
C$.recycleRectangle$java_awt_Rectangle(tmpRect2);
C$.recycleRectangle$java_awt_Rectangle(tmpRect);
}});

Clazz_newMeth(C$, 'paintBorder$java_awt_Graphics',  function (g) {
var border=this.getBorder$();
if (border != null ) {
border.paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I(this, g, 0, 0, this.getWidth$(), this.getHeight$());
}});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
var shouldClearPaintFlags=false;
if ((this.getWidth$() <= 0) || (this.getHeight$() <= 0) ) {
return;
}var componentGraphics=this.getComponentGraphics$java_awt_Graphics(g);
var cg=componentGraphics.create$();
try {
if (this.getParent$() != null  && !(Clazz_instanceOf(this.getParent$(), "javax.swing.JComponent")) ) {
p$1.adjustPaintFlags.apply(this, []);
shouldClearPaintFlags=true;
}var printing=p$1.getFlag$I.apply(this, [11]);
if (!printing) {
p$1.paintComponentSafely$java_awt_Graphics.apply(this, [cg]);
p$1.paintBorderSafely$java_awt_Graphics.apply(this, [cg]);
} else {
p$1.printComponentSafely$java_awt_Graphics.apply(this, [cg]);
p$1.printBorderSafely$java_awt_Graphics.apply(this, [cg]);
}if (!printing) {
this.paintChildren$java_awt_Graphics(cg);
} else {
this.printChildren$java_awt_Graphics(cg);
}} finally {
cg.dispose$();
if (shouldClearPaintFlags) {
this.秘setFlag$I$Z(1, false);
this.秘setFlag$I$Z(2, false);
this.秘setFlag$I$Z(11, false);
this.秘setFlag$I$Z(12, false);
}}
});

Clazz_newMeth(C$, 'paintForceDoubleBuffered$java_awt_Graphics',  function (g) {
var rm=$I$(10).currentManager$javax_swing_JComponent(this);
var clip=g.getClipBounds$();
rm.beginPaint$();
this.秘setFlag$I$Z(13, true);
try {
rm.paint$javax_swing_JComponent$javax_swing_JComponent$java_awt_Graphics$I$I$I$I(this, this, g, clip.x, clip.y, clip.width, clip.height);
} finally {
rm.endPaint$();
this.秘setFlag$I$Z(13, false);
}
});

Clazz_newMeth(C$, 'isPainting$',  function () {
var component=this;
while (component != null ){
if (Clazz_instanceOf(component, "javax.swing.JComponent") && p$1.getFlag$I.apply((component), [1]) ) {
return true;
}component=component.getParent$();
}
return false;
});

Clazz_newMeth(C$, 'adjustPaintFlags',  function () {
var jparent=null;
var parent;
for (parent=this.getParent$(); parent != null ; parent=parent.getParent$()) {
if (Clazz_instanceOf(parent, "javax.swing.JComponent")) {
jparent=parent;
if (p$1.getFlag$I.apply(jparent, [1])) this.秘setFlag$I$Z(1, true);
if (p$1.getFlag$I.apply(jparent, [2])) this.秘setFlag$I$Z(2, true);
if (p$1.getFlag$I.apply(jparent, [11])) this.秘setFlag$I$Z(11, true);
if (p$1.getFlag$I.apply(jparent, [12])) this.秘setFlag$I$Z(12, true);
break;
}}
}, p$1);

Clazz_newMeth(C$, 'printAll$java_awt_Graphics',  function (g) {
this.秘setFlag$I$Z(12, true);
try {
this.print$java_awt_Graphics(g);
} finally {
this.秘setFlag$I$Z(12, false);
}
});

Clazz_newMeth(C$, 'print$java_awt_Graphics',  function (g) {
this.秘setFlag$I$Z(11, true);
this.firePropertyChange$S$Z$Z("paintingForPrint", false, true);
try {
this.paint$java_awt_Graphics(g);
} finally {
this.秘setFlag$I$Z(11, false);
this.firePropertyChange$S$Z$Z("paintingForPrint", true, false);
}
});

Clazz_newMeth(C$, 'printComponent$java_awt_Graphics',  function (g) {
this.paintComponent$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printChildren$java_awt_Graphics',  function (g) {
this.paintChildren$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'printBorder$java_awt_Graphics',  function (g) {
this.paintBorder$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'isPaintingTile$',  function () {
return p$1.getFlag$I.apply(this, [2]);
});

Clazz_newMeth(C$, 'isPaintingForPrint$',  function () {
return p$1.getFlag$I.apply(this, [11]);
});

Clazz_newMeth(C$, 'isManagingFocus$',  function () {
return false;
});

Clazz_newMeth(C$, 'registerNextFocusableComponent',  function () {
p$1.registerNextFocusableComponent$java_awt_Component.apply(this, [this.getNextFocusableComponent$()]);
}, p$1);

Clazz_newMeth(C$, 'registerNextFocusableComponent$java_awt_Component',  function (nextFocusableComponent) {
if (nextFocusableComponent == null ) {
return;
}var nearestRoot=(this.isFocusCycleRoot$()) ? this : this.getFocusCycleRootAncestor$();
var policy=nearestRoot.getFocusTraversalPolicy$();
if (!(Clazz_instanceOf(policy, "javax.swing.LegacyGlueFocusTraversalPolicy"))) {
policy=Clazz_new_($I$(11,1).c$$java_awt_FocusTraversalPolicy,[policy]);
nearestRoot.setFocusTraversalPolicy$java_awt_FocusTraversalPolicy(policy);
}(policy).setNextFocusableComponent$java_awt_Component$java_awt_Component(this, nextFocusableComponent);
}, p$1);

Clazz_newMeth(C$, 'deregisterNextFocusableComponent',  function () {
var nextFocusableComponent=this.getNextFocusableComponent$();
if (nextFocusableComponent == null ) {
return;
}var nearestRoot=(this.isFocusCycleRoot$()) ? this : this.getFocusCycleRootAncestor$();
if (nearestRoot == null ) {
return;
}}, p$1);

Clazz_newMeth(C$, 'setNextFocusableComponent$java_awt_Component',  function (aComponent) {
var displayable=this.isDisplayable$();
if (displayable) {
p$1.deregisterNextFocusableComponent.apply(this, []);
}this.putClientProperty$O$O("nextFocus", aComponent);
if (displayable) {
p$1.registerNextFocusableComponent$java_awt_Component.apply(this, [aComponent]);
}});

Clazz_newMeth(C$, 'getNextFocusableComponent$',  function () {
return this.getClientProperty$O("nextFocus");
});

Clazz_newMeth(C$, 'setRequestFocusEnabled$Z',  function (requestFocusEnabled) {
this.秘setFlag$I$Z(22, !requestFocusEnabled);
});

Clazz_newMeth(C$, 'isRequestFocusEnabled$',  function () {
return !p$1.getFlag$I.apply(this, [22]);
});

Clazz_newMeth(C$, 'requestFocus$',  function () {
C$.superclazz.prototype.requestFocus$.apply(this, []);
});

Clazz_newMeth(C$, 'requestFocus$Z',  function (temporary) {
C$.superclazz.prototype.requestFocus$.apply(this, []);
return true;
});

Clazz_newMeth(C$, 'requestFocusInWindow$',  function () {
return C$.superclazz.prototype.requestFocusInWindow$.apply(this, []);
});

Clazz_newMeth(C$, 'requestFocusInWindow$Z',  function (temporary) {
return C$.superclazz.prototype.requestFocusInWindow$.apply(this, []);
});

Clazz_newMeth(C$, 'grabFocus$',  function () {
this.requestFocus$();
});

Clazz_newMeth(C$, 'setVerifyInputWhenFocusTarget$Z',  function (verifyInputWhenFocusTarget) {
var oldVerifyInputWhenFocusTarget=this.verifyInputWhenFocusTarget;
this.verifyInputWhenFocusTarget=verifyInputWhenFocusTarget;
this.firePropertyChange$S$Z$Z("verifyInputWhenFocusTarget", oldVerifyInputWhenFocusTarget, verifyInputWhenFocusTarget);
});

Clazz_newMeth(C$, 'getVerifyInputWhenFocusTarget$',  function () {
return this.verifyInputWhenFocusTarget;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (font) {
return $I$(12).getMetrics$java_awt_Font(font);
});

Clazz_newMeth(C$, 'setPreferredSize$java_awt_Dimension',  function (preferredSize) {
C$.superclazz.prototype.setPreferredSize$java_awt_Dimension.apply(this, [preferredSize]);
});

Clazz_newMeth(C$, 'getPreferredSize$',  function () {
return this.getPrefSizeJComp$();
});

Clazz_newMeth(C$, 'getPrefSizeJComp$',  function () {
var size=(!this.isPreferredSizeSet$() && this.ui != null   ? this.ui.getPreferredSize$javax_swing_JComponent(this) : null);
return (size == null  ? this.preferredSize$() : size);
});

Clazz_newMeth(C$, 'setMaximumSize$java_awt_Dimension',  function (maximumSize) {
C$.superclazz.prototype.setMaximumSize$java_awt_Dimension.apply(this, [maximumSize]);
});

Clazz_newMeth(C$, 'getMaximumSize$',  function () {
if (this.isMaximumSizeSet$()) {
return C$.superclazz.prototype.getMaximumSize$.apply(this, []);
}var size=null;
if (this.ui != null ) {
size=this.ui.getMaximumSize$javax_swing_JComponent(this);
}return (size != null ) ? size : C$.superclazz.prototype.getMaximumSize$.apply(this, []);
});

Clazz_newMeth(C$, 'setMinimumSize$java_awt_Dimension',  function (minimumSize) {
C$.superclazz.prototype.setMinimumSize$java_awt_Dimension.apply(this, [minimumSize]);
});

Clazz_newMeth(C$, 'getMinimumSize$',  function () {
if (this.isMinimumSizeSet$()) {
return C$.superclazz.prototype.getMinimumSize$.apply(this, []);
}var size=null;
if (this.ui != null ) {
size=this.ui.getMinimumSize$javax_swing_JComponent(this);
}return (size != null ) ? size : C$.superclazz.prototype.getMinimumSize$.apply(this, []);
});

Clazz_newMeth(C$, 'contains$I$I',  function (x, y) {
return (this.ui != null ) ? this.ui.contains$javax_swing_JComponent$I$I(this, x, y) : this.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'setBorder$javax_swing_border_Border',  function (border) {
var oldBorder=this.秘border;
this.秘border=border;
this.firePropertyChange$S$O$O("border", oldBorder, border);
if (border !== oldBorder ) {
if (border == null  || oldBorder == null   || !(border.getBorderInsets$java_awt_Component(this).equals$O(oldBorder.getBorderInsets$java_awt_Component(this))) ) {
this.revalidate$();
}this.秘repaint$();
}});

Clazz_newMeth(C$, 'getBorder$',  function () {
return this.秘border;
});

Clazz_newMeth(C$, 'getInsets$',  function () {
if (this.秘border != null ) {
return this.秘border.getBorderInsets$java_awt_Component(this);
}return C$.superclazz.prototype.getInsets$.apply(this, []);
});

Clazz_newMeth(C$, 'getInsets$java_awt_Insets',  function (insets) {
var $in=null;
if (insets == null ) {
insets=Clazz_new_($I$(13,1).c$$I$I$I$I,[0, 0, 0, 0]);
}if (this.isAWT || this.isAWTContainer ||false) {
$in=this.getInsets$();
} else {
if (this.秘border == null ) {
insets.left=insets.top=insets.right=insets.bottom=0;
} else {
if (Clazz_instanceOf(this.秘border, "javax.swing.border.AbstractBorder")) {
$in=(this.秘border).getBorderInsets$java_awt_Component$java_awt_Insets(this, insets);
}$in=this.秘border.getBorderInsets$java_awt_Component(this);
}}if ($in != null ) {
insets.left=$in.left;
insets.right=$in.right;
insets.top=$in.top;
insets.bottom=$in.bottom;
}return insets;
});

Clazz_newMeth(C$, 'getAlignmentY$',  function () {
if (this.秘isAlignmentYSet) {
return this.秘alignmentY;
}return C$.superclazz.prototype.getAlignmentY$.apply(this, []);
});

Clazz_newMeth(C$, 'setAlignmentY$F',  function (alignmentY) {
this.秘alignmentY=alignmentY > 1.0  ? 1.0 : alignmentY < 0.0  ? 0.0 : alignmentY;
this.秘isAlignmentYSet=true;
});

Clazz_newMeth(C$, 'getAlignmentX$',  function () {
if (this.秘isAlignmentXSet) {
return this.秘alignmentX;
}return C$.superclazz.prototype.getAlignmentX$.apply(this, []);
});

Clazz_newMeth(C$, 'setAlignmentX$F',  function (alignmentX) {
this.秘alignmentX=alignmentX > 1.0  ? 1.0 : alignmentX < 0.0  ? 0.0 : alignmentX;
this.秘isAlignmentXSet=true;
});

Clazz_newMeth(C$, 'setInputVerifier$javax_swing_InputVerifier',  function (inputVerifier) {
var oldInputVerifier=this.getClientProperty$O($I$(14).JComponent_INPUT_VERIFIER);
this.putClientProperty$O$O($I$(14).JComponent_INPUT_VERIFIER, inputVerifier);
this.firePropertyChange$S$O$O("inputVerifier", oldInputVerifier, inputVerifier);
});

Clazz_newMeth(C$, 'getInputVerifier$',  function () {
return this.getClientProperty$O($I$(14).JComponent_INPUT_VERIFIER);
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
return C$.superclazz.prototype.getGraphics$.apply(this, []);
});

Clazz_newMeth(C$, 'registerKeyboardAction$java_awt_event_ActionListener$S$javax_swing_KeyStroke$I',  function (anAction, aCommand, aKeyStroke, aCondition) {
var inputMap=this.getInputMap$I$Z(aCondition, true);
if (inputMap != null ) {
var actionMap=this.getActionMap$Z(true);
var action=Clazz_new_($I$(15,1).c$$java_awt_event_ActionListener$S,[this, null, anAction, aCommand]);
inputMap.put$javax_swing_KeyStroke$O(aKeyStroke, action);
if (actionMap != null ) {
actionMap.put$O$javax_swing_Action(action, action);
}}});

Clazz_newMeth(C$, 'registerWithKM$',  function () {
p$1.registerWithKeyboardManager$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'registerWithKeyboardManager$Z',  function (onlyIfNew) {
if ($I$(9).秘getTopInvokableAncestor$java_awt_Component$Z(this, true) == null ) return;
var inputMap=this.getInputMap$I$Z(2, false);
var strokes;
var registered=this.getClientProperty$O("_WhenInFocusedWindow");
if (inputMap != null ) {
strokes=inputMap.allKeys$();
if (strokes != null ) {
for (var counter=strokes.length - 1; counter >= 0; counter--) {
if (!onlyIfNew || registered == null   || registered.get$O(strokes[counter]) == null  ) {
p$1.registerWithKeyboardManager$javax_swing_KeyStroke.apply(this, [strokes[counter]]);
}if (registered != null ) {
registered.remove$O(strokes[counter]);
}}
}} else {
strokes=null;
}if (registered != null  && registered.size$() > 0 ) {
var keys=registered.keys$();
while (keys.hasMoreElements$()){
var ks=keys.nextElement$();
p$1.unregisterWithKeyboardManager$javax_swing_KeyStroke.apply(this, [ks]);
}
registered.clear$();
}if (strokes != null  && strokes.length > 0 ) {
if (registered == null ) {
registered=Clazz_new_($I$(16,1).c$$I,[strokes.length]);
this.putClientProperty$O$O("_WhenInFocusedWindow", registered);
}for (var counter=strokes.length - 1; counter >= 0; counter--) {
registered.put$O$O(strokes[counter], strokes[counter]);
}
} else {
this.putClientProperty$O$O("_WhenInFocusedWindow", null);
}}, p$1);

Clazz_newMeth(C$, 'unregisterWithKeyboardManager',  function () {
var registered=this.getClientProperty$O("_WhenInFocusedWindow");
if (registered != null  && registered.size$() > 0 ) {
var keys=registered.keys$();
while (keys.hasMoreElements$()){
var ks=keys.nextElement$();
p$1.unregisterWithKeyboardManager$javax_swing_KeyStroke.apply(this, [ks]);
}
}this.putClientProperty$O$O("_WhenInFocusedWindow", null);
}, p$1);

Clazz_newMeth(C$, 'componentInputMapChanged$javax_swing_ComponentInputMap',  function (inputMap) {
var km=this.getInputMap$I$Z(2, false);
while (km !== inputMap  && km != null  ){
km=km.getParent$();
}
if (km != null ) {
p$1.registerWithKeyboardManager$Z.apply(this, [false]);
}});

Clazz_newMeth(C$, 'registerWithKeyboardManager$javax_swing_KeyStroke',  function (aKeyStroke) {
$I$(17).getCurrentManager$().registerKeyStroke$javax_swing_KeyStroke$javax_swing_JComponent(aKeyStroke, this);
}, p$1);

Clazz_newMeth(C$, 'unregisterWithKeyboardManager$javax_swing_KeyStroke',  function (aKeyStroke) {
$I$(17).getCurrentManager$().unregisterKeyStroke$javax_swing_KeyStroke$javax_swing_JComponent(aKeyStroke, this);
}, p$1);

Clazz_newMeth(C$, 'registerKeyboardAction$java_awt_event_ActionListener$javax_swing_KeyStroke$I',  function (anAction, aKeyStroke, aCondition) {
this.registerKeyboardAction$java_awt_event_ActionListener$S$javax_swing_KeyStroke$I(anAction, null, aKeyStroke, aCondition);
});

Clazz_newMeth(C$, 'unregisterKeyboardAction$javax_swing_KeyStroke',  function (aKeyStroke) {
var am=this.getActionMap$Z(false);
for (var counter=0; counter < 3; counter++) {
var km=this.getInputMap$I$Z(counter, false);
if (km != null ) {
var actionID=km.get$javax_swing_KeyStroke(aKeyStroke);
if (am != null  && actionID != null  ) {
am.remove$O(actionID);
}km.remove$javax_swing_KeyStroke(aKeyStroke);
}}
});

Clazz_newMeth(C$, 'getRegisteredKeyStrokes$',  function () {
var counts=Clazz_array(Integer.TYPE, [3]);
var strokes=Clazz_array($I$(7), [3, null]);
for (var counter=0; counter < 3; counter++) {
var km=this.getInputMap$I$Z(counter, false);
strokes[counter]=(km != null ) ? km.allKeys$() : null;
counts[counter]=(strokes[counter] != null ) ? strokes[counter].length : 0;
}
var retValue=Clazz_array($I$(7), [counts[0] + counts[1] + counts[2] ]);
for (var counter=0, last=0; counter < 3; counter++) {
if (counts[counter] > 0) {
System.arraycopy$O$I$O$I$I(strokes[counter], 0, retValue, last, counts[counter]);
last+=counts[counter];
}}
return retValue;
});

Clazz_newMeth(C$, 'getConditionForKeyStroke$javax_swing_KeyStroke',  function (aKeyStroke) {
for (var counter=0; counter < 3; counter++) {
var inputMap=this.getInputMap$I$Z(counter, false);
if (inputMap != null  && inputMap.get$javax_swing_KeyStroke(aKeyStroke) != null  ) {
return counter;
}}
return -1;
});

Clazz_newMeth(C$, 'getActionForKeyStroke$javax_swing_KeyStroke',  function (aKeyStroke) {
var am=this.getActionMap$Z(false);
if (am == null ) {
return null;
}for (var counter=0; counter < 3; counter++) {
var inputMap=this.getInputMap$I$Z(counter, false);
if (inputMap != null ) {
var actionBinding=inputMap.get$javax_swing_KeyStroke(aKeyStroke);
if (actionBinding != null ) {
var action=am.get$O(actionBinding);
if (Clazz_instanceOf(action, "javax.swing.JComponent.ActionStandin")) {
return (action).actionListener;
}return action;
}}}
return null;
});

Clazz_newMeth(C$, 'resetKeyboardActions$',  function () {
for (var counter=0; counter < 3; counter++) {
var inputMap=this.getInputMap$I$Z(counter, false);
if (inputMap != null ) {
inputMap.clear$();
}}
var am=this.getActionMap$Z(false);
if (am != null ) {
am.clear$();
}});

Clazz_newMeth(C$, 'setInputMap$I$javax_swing_InputMap',  function (condition, map) {
switch (condition) {
case 2:
if (map != null  && !(Clazz_instanceOf(map, "javax.swing.ComponentInputMap")) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["WHEN_IN_FOCUSED_WINDOW InputMaps must be of type ComponentInputMap"]);
}this.windowInputMap=map;
this.秘setFlag$I$Z(7, true);
p$1.registerWithKeyboardManager$Z.apply(this, [false]);
break;
case 1:
this.ancestorInputMap=map;
this.秘setFlag$I$Z(6, true);
break;
case 0:
this.focusInputMap=map;
this.秘setFlag$I$Z(5, true);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT"]);
}
});

Clazz_newMeth(C$, 'getInputMap$I',  function (condition) {
return this.getInputMap$I$Z(condition, true);
});

Clazz_newMeth(C$, 'getInputMap$',  function () {
return this.getInputMap$I$Z(0, true);
});

Clazz_newMeth(C$, 'setActionMap$javax_swing_ActionMap',  function (am) {
this.actionMap=am;
this.秘setFlag$I$Z(8, true);
});

Clazz_newMeth(C$, 'getActionMap$',  function () {
return this.getActionMap$Z(true);
});

Clazz_newMeth(C$, 'getInputMap$I$Z',  function (condition, create) {
switch (condition) {
case 0:
if (p$1.getFlag$I.apply(this, [5])) {
return this.focusInputMap;
}if (create) {
var km=Clazz_new_($I$(18,1));
this.setInputMap$I$javax_swing_InputMap(condition, km);
this.秘jsInputMapSet$();
return km;
}break;
case 1:
if (p$1.getFlag$I.apply(this, [6])) {
return this.ancestorInputMap;
}if (create) {
var km=Clazz_new_($I$(18,1));
this.setInputMap$I$javax_swing_InputMap(condition, km);
return km;
}break;
case 2:
if (p$1.getFlag$I.apply(this, [7])) {
return this.windowInputMap;
}if (create) {
var km=Clazz_new_($I$(19,1).c$$javax_swing_JComponent,[this]);
this.setInputMap$I$javax_swing_InputMap(condition, km);
return km;
}break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT"]);
}
return null;
});

Clazz_newMeth(C$, 'getActionMap$Z',  function (create) {
if (p$1.getFlag$I.apply(this, [8])) {
return this.actionMap;
}if (create) {
var am=Clazz_new_($I$(20,1));
this.setActionMap$javax_swing_ActionMap(am);
return am;
}return null;
});

Clazz_newMeth(C$, 'getBaseline$I$I',  function (width, height) {
C$.superclazz.prototype.getBaseline$I$I.apply(this, [width, height]);
if (this.ui != null ) {
return this.ui.getBaseline$javax_swing_JComponent$I$I(this, width, height);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$',  function () {
if (this.ui != null ) {
return this.ui.getBaselineResizeBehavior$javax_swing_JComponent(this);
}return $I$(21).OTHER;
});

Clazz_newMeth(C$, 'requestDefaultFocus$',  function () {
var nearestRoot=(this.isFocusCycleRoot$()) ? this : this.getFocusCycleRootAncestor$();
if (nearestRoot == null ) {
return false;
}return false;
});

Clazz_newMeth(C$, 'setVisible$Z',  function (aFlag) {
if (aFlag != this.isVisible$() ) {
C$.superclazz.prototype.setVisible$Z.apply(this, [aFlag]);
var parent=this.getParent$();
if (parent != null ) {
var r=this.getBounds$();
parent.repaint$I$I$I$I(r.x, r.y, r.width, r.height);
}this.revalidate$();
}});

Clazz_newMeth(C$, 'setEnabled$Z',  function (enabled) {
var oldEnabled=this.isEnabled$();
C$.superclazz.prototype.setEnabled$Z.apply(this, [enabled]);
this.firePropertyChange$S$Z$Z("enabled", oldEnabled, enabled);
if (enabled != oldEnabled ) {
this.秘repaint$();
}});

Clazz_newMeth(C$, 'setForeground$java_awt_Color',  function (fg) {
var oldFg=this.getForeground$();
C$.superclazz.prototype.setForeground$java_awt_Color.apply(this, [fg]);
if ((oldFg != null ) ? !oldFg.equals$O(fg) : ((fg != null ) && !fg.equals$O(oldFg) )) {
this.秘repaint$();
}});

Clazz_newMeth(C$, 'setBackground$java_awt_Color',  function (bg) {
var oldBg=this.getBackground$();
C$.superclazz.prototype.setBackground$java_awt_Color.apply(this, [bg]);
if ((oldBg != null ) ? !oldBg.equals$O(bg) : ((bg != null ) && !bg.equals$O(oldBg) )) {
this.秘repaint$();
}});

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (font) {
var oldFont=this.getFont$();
C$.superclazz.prototype.setFont$java_awt_Font.apply(this, [font]);
if (font !== oldFont ) {
this.revalidate$();
this.秘repaint$();
}});

Clazz_newMeth(C$, 'getDefaultLocale$',  function () {
var l=$I$(1).appContextGet$O("JComponent.defaultLocale");
if (l == null ) {
l=$I$(22).getDefault$();
C$.setDefaultLocale$java_util_Locale(l);
}return l;
}, 1);

Clazz_newMeth(C$, 'setDefaultLocale$java_util_Locale',  function (l) {
$I$(1).appContextPut$O$O("JComponent.defaultLocale", l);
}, 1);

Clazz_newMeth(C$, 'processComponentKeyEvent$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'processKeyEvent$java_awt_event_KeyEvent',  function (e) {
var shouldProcessKey;
C$.superclazz.prototype.processKeyEvent$java_awt_event_KeyEvent.apply(this, [e]);
if (!e.isConsumed$()) {
this.processComponentKeyEvent$java_awt_event_KeyEvent(e);
}shouldProcessKey=$I$(23).shouldProcess$java_awt_event_KeyEvent(e);
if (!e.isConsumed$() && (shouldProcessKey && this.processKeyBindings$java_awt_event_KeyEvent$Z(e, e.getID$() == 401) ) ) {
e.consume$();
}});

Clazz_newMeth(C$, 'processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z',  function (ks, e, condition, pressed) {
var map=this.getInputMap$I$Z(condition, false);
var am=this.getActionMap$Z(false);
if (map != null  && am != null   && this.isEnabled$() ) {
var binding=map.get$javax_swing_KeyStroke(ks);
var action=(binding == null ) ? null : am.get$O(binding);
if (action != null ) {
this.秘keyAction=action;
var ret=$I$(1,"notifyAction$javax_swing_Action$javax_swing_KeyStroke$java_awt_event_KeyEvent$O$I",[action, ks, e, this, e.getModifiers$()]);
this.秘keyAction=null;
return ret;
}}return false;
});

Clazz_newMeth(C$, 'processKeyBindings$java_awt_event_KeyEvent$Z',  function (e, pressed) {
if (!$I$(1).isValidKeyEventForKeyBindings$java_awt_event_KeyEvent(e)) {
return false;
}var ks;
if (e.getID$() == 400) {
ks=$I$(7,"getKeyStroke$C",[e.getKeyChar$()]);
} else {
ks=$I$(7,"getKeyStroke$I$I$Z",[e.getKeyCode$(), e.getModifiers$(), (pressed ? false : true)]);
}if (this.processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(ks, e, 0, pressed)) return true;
var parent=this;
while (parent != null  && (Clazz_instanceOf(parent, "javax.swing.JInternalFrame") || !parent.isWindowOrJSApplet$() ) ){
if (Clazz_instanceOf(parent, "javax.swing.JComponent")) {
if ((parent).processKeyBinding$javax_swing_KeyStroke$java_awt_event_KeyEvent$I$Z(ks, e, 1, pressed)) return true;
}if ((Clazz_instanceOf(parent, "javax.swing.JInternalFrame")) && C$.processKeyBindingsForAllComponents$java_awt_event_KeyEvent$java_awt_Container$Z(e, parent, pressed) ) {
return true;
}parent=parent.getParent$();
}
if (parent != null ) {
return C$.processKeyBindingsForAllComponents$java_awt_event_KeyEvent$java_awt_Container$Z(e, parent, pressed);
}return false;
});

Clazz_newMeth(C$, 'processKeyBindingsForAllComponents$java_awt_event_KeyEvent$java_awt_Container$Z',  function (e, container, pressed) {
while (true){
if ($I$(17).getCurrentManager$().fireKeyboardAction$java_awt_event_KeyEvent$Z$java_awt_Container(e, pressed, container)) {
return true;
}if ($I$(24).isHeavyWeight$java_awt_Container(container)) {
container=(container).getOwner$();
} else {
return false;
}}
}, 1);

Clazz_newMeth(C$, 'setToolTipText$S',  function (text) {
var oldText=this.getToolTipText$();
this.putClientProperty$O$O("ToolTipText", text);
var toolTipManager=$I$(25).sharedInstance$();
if (text != null ) {
if (oldText == null ) {
toolTipManager.registerComponent$javax_swing_JComponent(this);
}} else {
toolTipManager.unregisterComponent$javax_swing_JComponent(this);
}});

Clazz_newMeth(C$, 'getToolTipText$',  function () {
return this.getClientProperty$O("ToolTipText");
});

Clazz_newMeth(C$, 'getToolTipText$java_awt_event_MouseEvent',  function (event) {
return this.getToolTipText$();
});

Clazz_newMeth(C$, 'getToolTipLocation$java_awt_event_MouseEvent',  function (event) {
return null;
});

Clazz_newMeth(C$, 'getPopupLocation$java_awt_event_MouseEvent',  function (event) {
return null;
});

Clazz_newMeth(C$, 'createToolTip$',  function () {
var tip=Clazz_new_($I$(26,1));
tip.setComponent$javax_swing_JComponent(this);
return tip;
});

Clazz_newMeth(C$, 'scrollRectToVisible$java_awt_Rectangle',  function (aRect) {
var parent;
var dx=this.getX$();
var dy=this.getY$();
for (parent=this.getParent$(); !(parent == null ) && !(Clazz_instanceOf(parent, "javax.swing.JComponent")) && !(Clazz_instanceOf(parent, "javax.swing.CellRendererPane"))  ; parent=parent.getParent$()) {
var bounds=parent.getBounds$();
dx+=bounds.x;
dy+=bounds.y;
}
if (!(parent == null ) && !(Clazz_instanceOf(parent, "javax.swing.CellRendererPane")) ) {
aRect.x+=dx;
aRect.y+=dy;
(parent).scrollRectToVisible$java_awt_Rectangle(aRect);
aRect.x-=dx;
aRect.y-=dy;
}});

Clazz_newMeth(C$, 'setAutoscrolls$Z',  function (autoscrolls) {
this.秘setFlag$I$Z(25, true);
if (this.autoscrolls != autoscrolls ) {
this.autoscrolls=autoscrolls;
if (autoscrolls) {
this.enableEvents$J(16);
this.enableEvents$J(32);
} else {
$I$(27).stop$javax_swing_JComponent(this);
}}});

Clazz_newMeth(C$, 'getAutoscrolls$',  function () {
return this.autoscrolls;
});

Clazz_newMeth(C$, 'processMouseEvent$java_awt_event_MouseEvent',  function (e) {
if (this.autoscrolls && e.getID$() == 502 ) {
$I$(27).stop$javax_swing_JComponent(this);
}C$.superclazz.prototype.processMouseEvent$java_awt_event_MouseEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'processMouseMotionEvent$java_awt_event_MouseEvent',  function (e) {
var dispatch=true;
if (this.autoscrolls && e.getID$() == 506 ) {
dispatch=!$I$(27).isRunning$javax_swing_JComponent(this);
$I$(27).processMouseDragged$java_awt_event_MouseEvent(e);
}if (dispatch) {
C$.superclazz.prototype.processMouseMotionEvent$java_awt_event_MouseEvent.apply(this, [e]);
}});

Clazz_newMeth(C$, 'superProcessMouseMotionEvent$java_awt_event_MouseEvent',  function (e) {
C$.superclazz.prototype.processMouseMotionEvent$java_awt_event_MouseEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'setCreatedDoubleBuffer$Z',  function (newValue) {
this.秘setFlag$I$Z(9, newValue);
});

Clazz_newMeth(C$, 'getCreatedDoubleBuffer$',  function () {
return p$1.getFlag$I.apply(this, [9]);
});

Clazz_newMeth(C$, 'getTitledBorderText$',  function () {
var border=this.getBorder$();
if (Clazz_instanceOf(border, "javax.swing.border.TitledBorder")) {
return (border).getTitle$();
} else {
return null;
}});

Clazz_newMeth(C$, 'getClientProperties',  function () {
if (this.clientProperties == null ) {
this.clientProperties=Clazz_new_($I$(28,1));
}return this.clientProperties;
}, p$1);

Clazz_newMeth(C$, 'getClientProperty$O',  function (key) {
return (this.clientProperties == null  ? null : this.clientProperties.get$O(key));
});

Clazz_newMeth(C$, 'putClientProperty$O$O',  function (key, value) {
if (value == null  && this.clientProperties == null  ) {
return;
}var clientProperties=p$1.getClientProperties.apply(this, []);
var oldValue;
{
oldValue=clientProperties.get$O(key);
if (value != null ) {
clientProperties.put$O$O(key, value);
} else if (oldValue != null ) {
clientProperties.remove$O(key);
} else {
return;
}}this.clientPropertyChanged$O$O$O(key, oldValue, value);
this.firePropertyChange$S$O$O(key.toString(), oldValue, value);
});

Clazz_newMeth(C$, 'clientPropertyChanged$O$O$O',  function (key, oldValue, newValue) {
});

Clazz_newMeth(C$, 'setUI$javax_swing_plaf_ComponentUI',  function (newUI) {
var oldUI=this.ui;
p$1.uninstallUIAndProperties.apply(this, []);
this.ui=newUI;
if (oldUI != null ) {
this.revalidate$();
this.秘repaint$();
}});

Clazz_newMeth(C$, 'uninstallUIAndProperties',  function () {
if (this.ui != null ) {
(this.ui).reinstallUI$javax_swing_JComponent$javax_swing_JComponent(this, null);
}}, p$1);

Clazz_newMeth(C$, 'setUIProperty$S$O',  function (propertyName, value) {
if (propertyName === "opaque" ) {
if (!p$1.getFlag$I.apply(this, [24])) {
this.setOpaque$Z((value).booleanValue$());
this.秘setFlag$I$Z(24, false);
}} else if (propertyName === "autoscrolls" ) {
if (!p$1.getFlag$I.apply(this, [25])) {
this.setAutoscrolls$Z((value).booleanValue$());
this.秘setFlag$I$Z(25, false);
}} else if (propertyName === "focusTraversalKeysForward" ) {
if (!p$1.getFlag$I.apply(this, [26])) {
C$.superclazz.prototype.setFocusTraversalKeys$I$java_util_Set.apply(this, [0, value]);
}} else if (propertyName === "focusTraversalKeysBackward" ) {
if (!p$1.getFlag$I.apply(this, [27])) {
C$.superclazz.prototype.setFocusTraversalKeys$I$java_util_Set.apply(this, [1, value]);
}} else {
System.out.println$S(this.getClass$().getName$() + " property \"" + propertyName + "\" cannot be set using this method" + $I$(29).getStackTrace$I(5) );
}});

Clazz_newMeth(C$, 'setFocusTraversalKeys$I$java_util_Set',  function (id, keystrokes) {
if (id == 0) {
this.秘setFlag$I$Z(26, true);
} else if (id == 1) {
this.秘setFlag$I$Z(27, true);
}C$.superclazz.prototype.setFocusTraversalKeys$I$java_util_Set.apply(this, [id, keystrokes]);
});

Clazz_newMeth(C$, 'isLightweightComponent$java_awt_Component',  function (c) {
{
return(!c.rootPane);
}
}, 1);

Clazz_newMeth(C$, 'isOpaque$',  function () {
return p$1.getFlag$I.apply(this, [3]);
});

Clazz_newMeth(C$, 'setOpaque$Z',  function (isOpaque) {
var oldValue=p$1.getFlag$I.apply(this, [3]);
this.秘setFlag$I$Z(3, isOpaque);
this.秘setFlag$I$Z(24, true);
this.firePropertyChange$S$Z$Z("opaque", oldValue, isOpaque);
});

Clazz_newMeth(C$, 'rectangleIsObscured$I$I$I$I',  function (x, y, width, height) {
var numChildren=this.getComponentCount$();
for (var i=0; i < numChildren; i++) {
var child=this.getComponent$I(i);
var cx;
var cy;
var cw;
var ch;
cx=child.getX$();
cy=child.getY$();
cw=child.getWidth$();
ch=child.getHeight$();
if (x >= cx && (x + width) <= (cx + cw)  && y >= cy  && (y + height) <= (cy + ch)  && child.isVisible$() ) {
if (Clazz_instanceOf(child, "javax.swing.JComponent")) {
return (child).isOpaque$();
} else {
return false;
}}}
return false;
});

Clazz_newMeth(C$, 'computeVisibleRect$java_awt_Component$java_awt_Rectangle',  function (c, visibleRect) {
var p=c.getParent$();
var bounds=c.getBounds$();
if (p == null  || p.isWindowOrJSApplet$() ) {
visibleRect.setBounds$I$I$I$I(0, 0, bounds.width, bounds.height);
} else {
C$.computeVisibleRect$java_awt_Component$java_awt_Rectangle(p, visibleRect);
visibleRect.x-=bounds.x;
visibleRect.y-=bounds.y;
$I$(1).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, bounds.width, bounds.height, visibleRect);
}}, 1);

Clazz_newMeth(C$, 'computeVisibleRect$java_awt_Rectangle',  function (visibleRect) {
C$.computeVisibleRect$java_awt_Component$java_awt_Rectangle(this, visibleRect);
});

Clazz_newMeth(C$, 'getVisibleRect$',  function () {
var visibleRect=Clazz_new_($I$(8,1));
this.computeVisibleRect$java_awt_Rectangle(visibleRect);
return visibleRect;
});

Clazz_newMeth(C$, 'getTopLevelAncestor$',  function () {
for (var p=this; p != null ; p=p.getParent$()) {
if (p.isWindowOrJSApplet$()) {
return p;
}}
return null;
});

Clazz_newMeth(C$, 'getAncestorNotifier',  function () {
return this.getClientProperty$O($I$(14).JComponent_ANCESTOR_NOTIFIER);
}, p$1);

Clazz_newMeth(C$, 'addAncestorListener$javax_swing_event_AncestorListener',  function (listener) {
var ancestorNotifier=p$1.getAncestorNotifier.apply(this, []);
if (ancestorNotifier == null ) {
ancestorNotifier=Clazz_new_($I$(30,1).c$$javax_swing_JComponent,[this]);
this.putClientProperty$O$O($I$(14).JComponent_ANCESTOR_NOTIFIER, ancestorNotifier);
}ancestorNotifier.addAncestorListener$javax_swing_event_AncestorListener(listener);
});

Clazz_newMeth(C$, 'removeAncestorListener$javax_swing_event_AncestorListener',  function (listener) {
var ancestorNotifier=p$1.getAncestorNotifier.apply(this, []);
if (ancestorNotifier == null ) {
return;
}ancestorNotifier.removeAncestorListener$javax_swing_event_AncestorListener(listener);
if (ancestorNotifier.listenerList.getListenerList$().length == 0) {
ancestorNotifier.removeAllListeners$();
this.putClientProperty$O$O($I$(14).JComponent_ANCESTOR_NOTIFIER, null);
}});

Clazz_newMeth(C$, 'getAncestorListeners$',  function () {
var ancestorNotifier=p$1.getAncestorNotifier.apply(this, []);
if (ancestorNotifier == null ) {
return Clazz_array($I$(31), [0]);
}return ancestorNotifier.getAncestorListeners$();
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
var result;
if (listenerType === Clazz_getClass($I$(31),['ancestorAdded$javax_swing_event_AncestorEvent','ancestorMoved$javax_swing_event_AncestorEvent','ancestorRemoved$javax_swing_event_AncestorEvent']) ) {
result=this.getAncestorListeners$();
} else if (listenerType === Clazz_getClass($I$(32),['propertyChange$java_beans_PropertyChangeEvent']) ) {
result=this.getPropertyChangeListeners$();
} else {
result=this.listenerList.getListeners$Class(listenerType);
}if (result.length == 0) {
return C$.superclazz.prototype.getListeners$Class.apply(this, [listenerType]);
}return result;
});

Clazz_newMeth(C$, 'addNotify$',  function () {
C$.superclazz.prototype.addNotify$.apply(this, []);
this.firePropertyChange$S$O$O("ancestor", null, this.getParent$());
p$1.registerWithKeyboardManager$Z.apply(this, [false]);
p$1.registerNextFocusableComponent.apply(this, []);
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
C$.superclazz.prototype.removeNotify$.apply(this, []);
this.firePropertyChange$S$O$O("ancestor", this.getParent$(), null);
p$1.unregisterWithKeyboardManager.apply(this, []);
p$1.deregisterNextFocusableComponent.apply(this, []);
if (this.getCreatedDoubleBuffer$()) {
$I$(10).currentManager$javax_swing_JComponent(this).resetDoubleBuffer$();
this.setCreatedDoubleBuffer$Z(false);
}if (this.autoscrolls) {
$I$(27).stop$javax_swing_JComponent(this);
}});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I',  function (tm, x, y, width, height) {
$I$(10).currentManager$javax_swing_JComponent(this).addDirtyRegion$javax_swing_JComponent$I$I$I$I(this, x, y, width, height);
});

Clazz_newMeth(C$, 'repaint$java_awt_Rectangle',  function (r) {
this.repaint$J$I$I$I$I(0, r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'revalidate$',  function () {
if (this.ui != null ) (this.ui).setTainted$();
if (this.getParent$() == null  && !this.isValidateRoot$() ) {
return;
}if (!this.秘isTopLevelVisible$()) {
this.invalidate$();
return;
}if ($I$(1).isEventDispatchThread$()) {
this.invalidate$();
if (!this.秘isAWT$()) $I$(10).currentManager$javax_swing_JComponent(this).addInvalidComponent$javax_swing_JComponent(this);
} else {
if (p$1.getFlag$I.apply(this, [28])) {
return;
}this.秘setFlag$I$Z(28, true);
var callRevalidate=((P$.JComponent$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "JComponent$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
this.b$['javax.swing.JComponent'].秘setFlag$I$Z.apply(this.b$['javax.swing.JComponent'], [28, false]);
this.b$['javax.swing.JComponent'].revalidate$.apply(this.b$['javax.swing.JComponent'], []);
});
})()
), Clazz_new_(P$.JComponent$2.$init$,[this, null]));
$I$(1).invokeLater$Runnable(callRevalidate);
}});

Clazz_newMeth(C$, '秘isTopLevelVisible$',  function () {
var c=$I$(9).秘getTopInvokableAncestor$java_awt_Component$Z(this, true);
return (c != null  && c.isVisible$() );
});

Clazz_newMeth(C$, 'isValidateRoot$',  function () {
return false;
});

Clazz_newMeth(C$, 'isOptimizedDrawingEnabled$',  function () {
return true;
});

Clazz_newMeth(C$, 'isPaintingOrigin$',  function () {
return false;
});

Clazz_newMeth(C$, 'paintImmediately$I$I$I$I',  function (x, y, w, h) {
var c=this;
var parent;
if (!this.isShowing$()) {
return;
}while (!c.isOpaque$() && (parent=c.getParent$()) != null  ){
x+=c.getX$();
y+=c.getY$();
c=parent;
}
p$1._paintImmediately$I$I$I$I.apply((c), [x, y, w, h]);
});

Clazz_newMeth(C$, 'paintImmediately$java_awt_Rectangle',  function (r) {
this.paintImmediately$I$I$I$I(r.x, r.y, r.width, r.height);
});

Clazz_newMeth(C$, 'alwaysOnTop$',  function () {
return false;
});

Clazz_newMeth(C$, 'setPaintingChild$java_awt_Component',  function (paintingChild) {
this.paintingChild=paintingChild;
});

Clazz_newMeth(C$, '_paintImmediately$I$I$I$I',  function (x, y, w, h) {
var tmpX;
var tmpY;
var tmpWidth;
var tmpHeight;
var offsetX=0;
var offsetY=0;
var bufferedComponent=null;
var paintingComponent=this;
tmpX=tmpY=tmpWidth=tmpHeight=0;
var paintImmediatelyClip=C$.fetchRectangle$();
paintImmediatelyClip.x=x;
paintImmediatelyClip.y=y;
paintImmediatelyClip.width=w;
paintImmediatelyClip.height=h;
var ontop=this.alwaysOnTop$() && this.isOpaque$() ;
if (ontop) {
$I$(1,"computeIntersection$I$I$I$I$java_awt_Rectangle",[0, 0, this.getWidth$(), this.getHeight$(), paintImmediatelyClip]);
if (paintImmediatelyClip.width == 0) {
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
return;
}}var path=null;
var pIndex=-1;
var g;
var c=this;
var child=null;
for (var pCount=0; c != null  && !c.isWindowOrJSApplet$() ; child=c, c=c.getParent$(), pCount++) {
var jc=(Clazz_instanceOf(c, "javax.swing.JComponent")) ? c : null;
if (path != null ) path.add$O(c);
if (!ontop) {
if (c !== this  && jc != null   && !jc.isOptimizedDrawingEnabled$() ) {
var resetPC;
if (jc.isPaintingOrigin$()) {
resetPC=true;
} else {
var children=$I$(9).秘getChildArray$java_awt_Container(c);
var i=0;
for (var n=c.getComponentCount$(); i < n; i++) {
if (children[i] === child ) break;
}
switch (p$1.getObscuredState$I$I$I$I$I.apply(jc, [i, paintImmediatelyClip.x, paintImmediatelyClip.y, paintImmediatelyClip.width, paintImmediatelyClip.height])) {
case 0:
resetPC=false;
break;
case 2:
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
return;
default:
resetPC=true;
break;
}
}if (resetPC) {
if (path == null ) {
path=Clazz_new_($I$(33,1).c$$I,[pCount + 1]);
for (var p=this; ; p=p.getParent$()) {
path.add$O(p);
if (p === c ) break;
}
}paintingComponent=jc;
pIndex=pCount;
offsetX=offsetY=0;
}}var bx=c.getX$();
var by=c.getY$();
tmpWidth=c.getWidth$();
tmpHeight=c.getHeight$();
$I$(1).computeIntersection$I$I$I$I$java_awt_Rectangle(tmpX, tmpY, tmpWidth, tmpHeight, paintImmediatelyClip);
paintImmediatelyClip.x+=bx;
paintImmediatelyClip.y+=by;
offsetX+=bx;
offsetY+=by;
}}
if (c == null  || paintImmediatelyClip.width <= 0  || paintImmediatelyClip.height <= 0 ) {
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
return;
}if (paintingComponent.秘isContentPane && !paintingComponent.isOpaque$() ) {
paintingComponent=paintingComponent.getRootPane$();
}paintingComponent.秘setFlag$I$Z(13, true);
paintImmediatelyClip.x-=offsetX;
paintImmediatelyClip.y-=offsetY;
if (paintingComponent !== this ) {
var comp;
var i=pIndex;
for (; i > 0; i--) {
comp=path.get$I(i);
if (Clazz_instanceOf(comp, "javax.swing.JComponent")) {
(comp).setPaintingChild$java_awt_Component(path.get$I(i - 1));
}}
}try {
g=C$.safelyGetGraphics$java_awt_Component$java_awt_Component(paintingComponent, c);
try {
if (!this.秘isRootPane) g.clipRect$I$I$I$I(paintImmediatelyClip.x, paintImmediatelyClip.y, paintImmediatelyClip.width, paintImmediatelyClip.height);
paintingComponent.秘paintWithBackgroundCheck$java_awt_Graphics(g);
} finally {
g.dispose$();
}
} finally {
if (paintingComponent !== this ) {
var comp;
var i=pIndex;
for (; i > 0; i--) {
comp=path.get$I(i);
if (Clazz_instanceOf(comp, "javax.swing.JComponent")) {
(comp).setPaintingChild$java_awt_Component(null);
}}
}paintingComponent.秘setFlag$I$Z(13, false);
}
C$.recycleRectangle$java_awt_Rectangle(paintImmediatelyClip);
}, p$1);

Clazz_newMeth(C$, 'paintToOffscreen$java_awt_Graphics$I$I$I$I$I$I',  function (g, x, y, w, h, maxX, maxY) {
try {
this.秘setFlag$I$Z(1, true);
if ((y + h) < maxY || (x + w) < maxX ) {
this.秘setFlag$I$Z(2, true);
}if (p$1.getFlag$I.apply(this, [13])) {
this.paint$java_awt_Graphics(g);
} else {
if (!this.rectangleIsObscured$I$I$I$I(x, y, w, h)) {
p$1.paintComponentSafely$java_awt_Graphics.apply(this, [g]);
p$1.paintBorderSafely$java_awt_Graphics.apply(this, [g]);
}this.paintChildren$java_awt_Graphics(g);
}} finally {
this.秘setFlag$I$Z(1, false);
this.秘setFlag$I$Z(2, false);
}
});

Clazz_newMeth(C$, 'getObscuredState$I$I$I$I$I',  function (compIndex, x, y, width, height) {
var retValue=0;
var tmpRect=C$.fetchRectangle$();
for (var i=compIndex - 1; i >= 0; i--) {
var sibling=this.getComponent$I(i);
if (!sibling.isVisible$()) {
continue;
}var siblingRect;
var opaque;
if (Clazz_instanceOf(sibling, "javax.swing.JComponent")) {
opaque=(sibling).isOpaque$();
if (!opaque) {
if (retValue == 1) {
continue;
}}} else {
opaque=true;
}siblingRect=sibling.getBounds$java_awt_Rectangle(tmpRect);
if (opaque && x >= siblingRect.x  && (x + width) <= (siblingRect.x + siblingRect.width)  && y >= siblingRect.y  && (y + height) <= (siblingRect.y + siblingRect.height) ) {
C$.recycleRectangle$java_awt_Rectangle(tmpRect);
return 2;
} else if (retValue == 0 && !((x + width <= siblingRect.x) || (y + height <= siblingRect.y) || (x >= siblingRect.x + siblingRect.width) || (y >= siblingRect.y + siblingRect.height)  ) ) {
retValue=1;
}}
C$.recycleRectangle$java_awt_Rectangle(tmpRect);
return retValue;
}, p$1);

Clazz_newMeth(C$, 'checkIfChildObscuredBySibling$',  function () {
return true;
});

Clazz_newMeth(C$, '秘setFlag$I$Z',  function (aFlag, aValue) {
if (aValue) {
this.flags|=(1 << aFlag);
} else {
this.flags&=~(1 << aFlag);
}});

Clazz_newMeth(C$, 'getFlag$I',  function (aFlag) {
var mask=(1 << aFlag);
return ((this.flags & mask) == mask);
}, p$1);

Clazz_newMeth(C$, 'setDoubleBuffered$Z',  function (aFlag) {
});

Clazz_newMeth(C$, 'isDoubleBuffered$',  function () {
return p$1.getFlag$I.apply(this, [0]);
});

Clazz_newMeth(C$, 'getRootPane$',  function () {
return $I$(1).getRootPane$java_awt_Component(this);
});

Clazz_newMeth(C$, 'paramString$',  function () {
var preferredSizeString=(this.isPreferredSizeSet$() ? this.getPreferredSize$().toString() : "");
var minimumSizeString=(this.isMinimumSizeSet$() ? this.getMinimumSize$().toString() : "");
var maximumSizeString=(this.isMaximumSizeSet$() ? this.getMaximumSize$().toString() : "");
var borderString=(this.秘border == null  ? "" : (this.秘border === this  ? "this" : this.秘border.toString()));
return C$.superclazz.prototype.paramString$.apply(this, []) + ",alignmentX=" + new Float(this.秘alignmentX).toString() + ",alignmentY=" + new Float(this.秘alignmentY).toString() + ",border=" + borderString + ",flags=" + this.flags + ",maximumSize=" + maximumSizeString + ",minimumSize=" + minimumSizeString + ",preferredSize=" + preferredSizeString ;
});

Clazz_newMeth(C$, 'isActionStandin$javax_swing_Action',  function (action) {
return Clazz_instanceOf(action, "javax.swing.JComponent.ActionStandin");
}, 1);

Clazz_newMeth(C$, 'dropLocationForPoint$java_awt_Point',  function (p) {
return null;
});

Clazz_newMeth(C$, 'setTransferHandler$javax_swing_TransferHandler',  function (newHandler) {
var oldHandler=this.getClientProperty$O(C$.JComponent_TRANSFER_HANDLER);
this.putClientProperty$O$O(C$.JComponent_TRANSFER_HANDLER, newHandler);
$I$(1).installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler(this, newHandler);
this.firePropertyChange$S$O$O("transferHandler", oldHandler, newHandler);
});

Clazz_newMeth(C$, 'getTransferHandler$',  function () {
return this.getClientProperty$O(C$.JComponent_TRANSFER_HANDLER);
});

Clazz_newMeth(C$, 'setDropLocation$javax_swing_TransferHandler_DropLocation$O$Z',  function (dropLocation, state, forDrop) {
return null;
});

Clazz_newMeth(C$, 'dndDone$',  function () {
});

Clazz_newMeth(C$, 'paintComponentSafely$java_awt_Graphics',  function (g) {
var jsg=this.秘getJSGraphic2D$java_awt_Graphics(g);
var nSave=(jsg == null  ? 0 : jsg.mark$());
this.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jsg, true);
this.paintComponent$java_awt_Graphics(g);
this.秘checkBackgroundPainted$swingjs_JSGraphics2D$Z(jsg, false);
if (jsg != null ) {
jsg.reset$I(nSave);
}}, p$1);

Clazz_newMeth(C$, 'printComponentSafely$java_awt_Graphics',  function (g) {
var jsg=this.秘getJSGraphic2D$java_awt_Graphics(g);
var nSave=(jsg == null  ? 0 : jsg.mark$());
this.printComponent$java_awt_Graphics(g);
if (jsg != null ) jsg.reset$I(nSave);
}, p$1);

Clazz_newMeth(C$, 'paintBorderSafely$java_awt_Graphics',  function (g) {
if (this.getBorder$() == null ) return;
var jsg=this.秘getJSGraphic2D$java_awt_Graphics(g);
var nSave=(jsg == null  ? 0 : jsg.mark$());
this.paintBorder$java_awt_Graphics(g);
if (jsg != null ) jsg.reset$I(nSave);
}, p$1);

Clazz_newMeth(C$, 'printBorderSafely$java_awt_Graphics',  function (g) {
if (this.getBorder$() == null ) return;
var jsg=this.秘getJSGraphic2D$java_awt_Graphics(g);
var nSave=(jsg == null  ? 0 : jsg.mark$());
this.printBorder$java_awt_Graphics(g);
if (jsg != null ) jsg.reset$I(nSave);
}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.INPUT_VERIFIER_SOURCE_KEY= Clazz_new_();
C$._tempRect=Clazz_new_($I$(3,1));
C$.focusController=((P$.JComponent$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JComponent$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'sun.awt.RequestFocusController', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]]

Clazz_newMeth(C$, 'acceptRequestFocus$java_awt_Component$java_awt_Component$Z$Z$sun_awt_CausedFocusEvent_Cause',  function (from, to, temporary, focusedWindowChangeAllowed, cause) {
if ((to == null ) || !(Clazz_instanceOf(to, "javax.swing.JComponent")) ) {
return true;
}if ((from == null ) || !(Clazz_instanceOf(from, "javax.swing.JComponent")) ) {
return true;
}var target=to;
if (!target.getVerifyInputWhenFocusTarget$()) {
return true;
}var jFocusOwner=from;
var iv=jFocusOwner.getInputVerifier$();
if (iv == null ) {
return true;
} else {
var currentSource=$I$(1,"appContextGet$O",[$I$(4).INPUT_VERIFIER_SOURCE_KEY]);
if (currentSource === jFocusOwner ) {
return true;
}$I$(1,"appContextPut$O$O",[$I$(4).INPUT_VERIFIER_SOURCE_KEY, jFocusOwner]);
try {
return iv.shouldYieldFocus$javax_swing_JComponent(jFocusOwner);
} finally {
if (currentSource != null ) {
$I$(1,"appContextPut$O$O",[$I$(4).INPUT_VERIFIER_SOURCE_KEY, currentSource]);
} else {
$I$(1,"appContextRemove$O",[$I$(4).INPUT_VERIFIER_SOURCE_KEY]);
}}
}});
})()
), Clazz_new_(P$.JComponent$1.$init$,[this, null]));
C$.JComponent_TRANSFER_HANDLER="transfer_handler";
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.JComponent, "ActionStandin", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.Action');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['command'],'O',['actionListener','java.awt.event.ActionListener','action','javax.swing.Action']]]

Clazz_newMeth(C$, 'c$$java_awt_event_ActionListener$S',  function (actionListener, command) {
;C$.$init$.apply(this);
this.actionListener=actionListener;
if (Clazz_instanceOf(actionListener, "javax.swing.Action")) {
this.action=actionListener;
} else {
this.action=null;
}this.command=command;
}, 1);

Clazz_newMeth(C$, 'getValue$S',  function (key) {
if (key != null ) {
if (key.equals$O("ActionCommandKey")) {
return this.command;
}if (this.action != null ) {
return this.action.getValue$S(key);
}if (key.equals$O("Name")) {
return "ActionStandin";
}}return null;
});

Clazz_newMeth(C$, 'isEnabled$',  function () {
if (this.actionListener == null ) {
return false;
}if (this.action == null ) {
return true;
}return this.action.isEnabled$();
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (ae) {
if (this.actionListener != null ) {
this.actionListener.actionPerformed$java_awt_event_ActionEvent(ae);
}});

Clazz_newMeth(C$, 'putValue$S$O',  function (key, value) {
});

Clazz_newMeth(C$, 'setEnabled$Z',  function (b) {
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JComponent, "IntVector", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.array=(null|0);
this.count=0;
this.capacity=0;
},1);

C$.$fields$=[['I',['count','capacity'],'O',['array','int[]']]]

Clazz_newMeth(C$, 'size$',  function () {
return this.count;
});

Clazz_newMeth(C$, 'elementAt$I',  function (index) {
return this.array[index];
});

Clazz_newMeth(C$, 'addElement$I',  function (value) {
if (this.count == this.capacity) {
this.capacity=(this.capacity + 2) * 2;
var newarray=Clazz_array(Integer.TYPE, [this.capacity]);
if (this.count > 0) {
System.arraycopy$O$I$O$I$I(this.array, 0, newarray, 0, this.count);
}this.array=newarray;
}this.array[this.count++]=value;
});

Clazz_newMeth(C$, 'setElementAt$I$I',  function (value, index) {
this.array[index]=value;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JComponent, "KeyboardState", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['keyCodesKey','java.lang.Object']]]

Clazz_newMeth(C$, 'getKeyCodeArray$',  function () {
var iv=$I$(1).appContextGet$O(C$.keyCodesKey);
if (iv == null ) {
iv=Clazz_new_($I$(2,1));
$I$(1).appContextPut$O$O(C$.keyCodesKey, iv);
}return iv;
}, 1);

Clazz_newMeth(C$, 'registerKeyPressed$I',  function (keyCode) {
var kca=C$.getKeyCodeArray$();
var count=kca.size$();
var i;
for (i=0; i < count; i++) {
if (kca.elementAt$I(i) == -1) {
kca.setElementAt$I$I(keyCode, i);
return;
}}
kca.addElement$I(keyCode);
}, 1);

Clazz_newMeth(C$, 'registerKeyReleased$I',  function (keyCode) {
var kca=C$.getKeyCodeArray$();
var count=kca.size$();
var i;
for (i=0; i < count; i++) {
if (kca.elementAt$I(i) == keyCode) {
kca.setElementAt$I$I(-1, i);
return;
}}
}, 1);

Clazz_newMeth(C$, 'keyIsPressed$I',  function (keyCode) {
var kca=C$.getKeyCodeArray$();
var count=kca.size$();
var i;
for (i=0; i < count; i++) {
if (kca.elementAt$I(i) == keyCode) {
return true;
}}
return false;
}, 1);

Clazz_newMeth(C$, 'shouldProcess$java_awt_event_KeyEvent',  function (e) {
switch (e.getID$()) {
case 401:
if (!C$.keyIsPressed$I(e.getKeyCode$())) {
C$.registerKeyPressed$I(e.getKeyCode$());
}return true;
case 402:
if (C$.keyIsPressed$I(e.getKeyCode$()) || e.getKeyCode$() == 154 ) {
C$.registerKeyReleased$I(e.getKeyCode$());
return true;
}return false;
case 400:
return true;
default:
return false;
}
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.keyCodesKey=Clazz_getClass(C$);
};

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:56 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.JComponent','javax.swing.UIManager','javax.swing.JRootPane','javax.swing.SwingUtilities','javax.swing.RepaintManager']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JFrame", null, 'java.awt.JSFrame', ['javax.swing.WindowConstants', 'javax.swing.RootPaneContainer']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.defaultCloseOperation=1;
this.rootPaneCheckingEnabled=false;
},1);

C$.$fields$=[['Z',['rootPaneCheckingEnabled','秘boundsFrozen'],'I',['defaultCloseOperation'],'O',['transferHandler','javax.swing.TransferHandler','rootPane','javax.swing.JRootPane']]
,['I',['frameCount'],'O',['defaultLookAndFeelDecoratedKey','java.lang.Object']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_GraphicsConfiguration',  function (gc) {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [null, gc]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (title) {
C$.c$$S$java_awt_GraphicsConfiguration.apply(this, [title, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$java_awt_GraphicsConfiguration',  function (title, gc) {
;C$.superclazz.c$$S$java_awt_GraphicsConfiguration.apply(this,[title, gc]);C$.$init$.apply(this);
this.秘paintClass=this.秘updateClass=C$ ||null;
this.enableEvents$J(72);
this.setLocale$java_util_Locale($I$(1).getDefaultLocale$());
this.setRootPane$javax_swing_JRootPane(this.createRootPane$());
this.rootPane.setFrameViewer$swingjs_JSFrameViewer(this.setFrameViewer$swingjs_JSFrameViewer(null));
this.setBackground$java_awt_Color($I$(2).getColor$O("control"));
this.setRootPaneCheckingEnabled$Z(true);
if (C$.isDefaultLookAndFeelDecorated$()) {
var supportsWindowDecorations=$I$(2).getLookAndFeel$().getSupportsWindowDecorations$();
if (supportsWindowDecorations) {
this.setUndecorated$Z(true);
this.getRootPane$().setWindowDecorationStyle$I(1);
}}this.updateUI$();
this.秘frameAddNodify$javax_swing_JRootPane(this.rootPane);
}, 1);

Clazz_newMeth(C$, 'c$$O$O$O$O',  function (object, object2, object3, object4) {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return "FrameUI";
});

Clazz_newMeth(C$, 'createRootPane$',  function () {
var rp=Clazz_new_(["_Frame" + (++C$.frameCount), false, this],$I$(3,1).c$$S$Z$java_awt_Container);
rp.setOpaque$Z(true);
return rp;
});

Clazz_newMeth(C$, 'processWindowEvent$java_awt_event_WindowEvent',  function (e) {
C$.superclazz.prototype.processWindowEvent$java_awt_event_WindowEvent.apply(this, [e]);
if (e.getID$() == 201) {
switch (this.defaultCloseOperation) {
case 1:
this.setVisible$Z(false);
break;
case 2:
this.dispose$();
break;
case 0:
default:
break;
case 3:
System.exit$I(0);
break;
}
}});

Clazz_newMeth(C$, 'setDefaultCloseOperation$I',  function (operation) {
if (operation != 0 && operation != 1  && operation != 2  && operation != 3 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["defaultCloseOperation must be one of: DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, DISPOSE_ON_CLOSE, or EXIT_ON_CLOSE"]);
}if (this.defaultCloseOperation != operation) {
if (operation == 3) {
var security=System.getSecurityManager$();
if (security != null ) {
security.checkExit$I(0);
}}var oldValue=this.defaultCloseOperation;
this.defaultCloseOperation=operation;
this.firePropertyChange$S$I$I("defaultCloseOperation", oldValue, operation);
}});

Clazz_newMeth(C$, 'getDefaultCloseOperation$',  function () {
return this.defaultCloseOperation;
});

Clazz_newMeth(C$, 'setTransferHandler$javax_swing_TransferHandler',  function (newHandler) {
var oldHandler=this.transferHandler;
this.transferHandler=newHandler;
$I$(4).installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler(this, this.transferHandler);
this.firePropertyChange$S$O$O("transferHandler", oldHandler, newHandler);
});

Clazz_newMeth(C$, 'getTransferHandler$',  function () {
return this.transferHandler;
});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g) {
this.paint$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
(g).setBackground$java_awt_Color(this.getBackground$());
(g).setColor$java_awt_Color(this.getForeground$());
C$.superclazz.prototype.paint$java_awt_Graphics.apply(this, [g]);
});

Clazz_newMeth(C$, 'setJMenuBar$javax_swing_JMenuBar',  function (menubar) {
this.getRootPane$().setMenuBar$javax_swing_JMenuBar(menubar);
});

Clazz_newMeth(C$, 'getJMenuBar$',  function () {
return this.getRootPane$().getMenuBar$();
});

Clazz_newMeth(C$, 'isRootPaneCheckingEnabled$',  function () {
return this.rootPaneCheckingEnabled;
});

Clazz_newMeth(C$, 'setRootPaneCheckingEnabled$Z',  function (enabled) {
this.rootPaneCheckingEnabled=enabled;
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I',  function (comp, constraints, index) {
if (this.isRootPaneCheckingEnabled$()) {
this.getContentPane$().add$java_awt_Component$O$I(comp, constraints, index);
return;
}this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
});

Clazz_newMeth(C$, 'remove$java_awt_Component',  function (comp) {
if (comp === this.rootPane ) {
C$.superclazz.prototype.remove$java_awt_Component.apply(this, [comp]);
} else {
this.getContentPane$().remove$java_awt_Component(comp);
}});

Clazz_newMeth(C$, 'setLayout$java_awt_LayoutManager',  function (manager) {
if (this.isRootPaneCheckingEnabled$()) {
this.getContentPane$().setLayout$java_awt_LayoutManager(manager);
} else {
C$.superclazz.prototype.setLayout$java_awt_LayoutManager.apply(this, [manager]);
}});

Clazz_newMeth(C$, 'getRootPane$',  function () {
return this.rootPane;
});

Clazz_newMeth(C$, 'setRootPane$javax_swing_JRootPane',  function (root) {
if (this.rootPane != null ) {
this.remove$java_awt_Component(this.rootPane);
}this.rootPane=root;
if (this.rootPane != null ) {
var checkingEnabled=this.isRootPaneCheckingEnabled$();
try {
this.setRootPaneCheckingEnabled$Z(false);
this.add$java_awt_Component$O(this.rootPane, "Center");
} finally {
this.setRootPaneCheckingEnabled$Z(checkingEnabled);
}
}});

Clazz_newMeth(C$, 'setIconImage$java_awt_Image',  function (image) {
C$.superclazz.prototype.setIconImage$java_awt_Image.apply(this, [image]);
});

Clazz_newMeth(C$, 'getContentPane$',  function () {
return this.getRootPane$().getContentPane$();
});

Clazz_newMeth(C$, 'setContentPane$java_awt_Container',  function (contentPane) {
this.getRootPane$().setContentPane$java_awt_Container(contentPane);
});

Clazz_newMeth(C$, 'getLayeredPane$',  function () {
return this.getRootPane$().getLayeredPane$();
});

Clazz_newMeth(C$, 'setLayeredPane$javax_swing_JLayeredPane',  function (layeredPane) {
this.getRootPane$().setLayeredPane$javax_swing_JLayeredPane(layeredPane);
});

Clazz_newMeth(C$, 'getGlassPane$',  function () {
return this.getRootPane$().getGlassPane$();
});

Clazz_newMeth(C$, 'setGlassPane$java_awt_Component',  function (glassPane) {
this.getRootPane$().setGlassPane$java_awt_Component(glassPane);
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
$I$(1).getGraphicsInvoked$java_awt_Component(this);
return C$.superclazz.prototype.getGraphics$.apply(this, []);
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I',  function (time, x, y, width, height) {
if ($I$(5).HANDLE_TOP_LEVEL_PAINT) {
$I$(5).currentManager$javax_swing_JComponent(this).addDirtyRegion$java_awt_Window$I$I$I$I(this, x, y, width, height);
} else {
C$.superclazz.prototype.repaint$J$I$I$I$I.apply(this, [time, x, y, width, height]);
}});

Clazz_newMeth(C$, 'setDefaultLookAndFeelDecorated$Z',  function (defaultLookAndFeelDecorated) {
if (defaultLookAndFeelDecorated) {
$I$(4).appContextPut$O$O(C$.defaultLookAndFeelDecoratedKey, Boolean.TRUE);
} else {
$I$(4).appContextPut$O$O(C$.defaultLookAndFeelDecoratedKey, Boolean.FALSE);
}}, 1);

Clazz_newMeth(C$, 'isDefaultLookAndFeelDecorated$',  function () {
var defaultLookAndFeelDecorated=$I$(4).appContextGet$O(C$.defaultLookAndFeelDecoratedKey);
if (defaultLookAndFeelDecorated == null ) {
defaultLookAndFeelDecorated=Boolean.FALSE;
}return defaultLookAndFeelDecorated.booleanValue$();
}, 1);

Clazz_newMeth(C$, 'paramString$',  function () {
var defaultCloseOperationString;
if (this.defaultCloseOperation == 1) {
defaultCloseOperationString="HIDE_ON_CLOSE";
} else if (this.defaultCloseOperation == 2) {
defaultCloseOperationString="DISPOSE_ON_CLOSE";
} else if (this.defaultCloseOperation == 0) {
defaultCloseOperationString="DO_NOTHING_ON_CLOSE";
} else if (this.defaultCloseOperation == 3) {
defaultCloseOperationString="EXIT_ON_CLOSE";
} else defaultCloseOperationString="";
var rootPaneString=(this.rootPane != null  ? this.rootPane.toString() : "");
var rootPaneCheckingEnabledString=(this.rootPaneCheckingEnabled ? "true" : "false");
return C$.superclazz.prototype.paramString$.apply(this, []) + ",defaultCloseOperation=" + defaultCloseOperationString + ",rootPane=" + rootPaneString + ",rootPaneCheckingEnabled=" + rootPaneCheckingEnabledString ;
});

Clazz_newMeth(C$, '秘freezeBounds$I$I',  function (w, h) {
this.setSize$I$I(w, h);
this.秘boundsFrozen=true;
this.resizable=false;
});

Clazz_newMeth(C$, 'reshape$I$I$I$I',  function (x, y, width, height) {
if (!this.秘boundsFrozen) C$.superclazz.prototype.reshape$I$I$I$I.apply(this, [x, y, width, height]);
});

C$.$static$=function(){C$.$static$=0;
C$.defaultLookAndFeelDecoratedKey= Clazz_new_();
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:57 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'java.awt.JSComponent','java.awt.Component','java.awt.Color','java.util.Hashtable','java.util.ArrayList']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JLayeredPane", null, 'javax.swing.JComponent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.optimizedDrawingPossible=true;
},1);

C$.$fields$=[['Z',['optimizedDrawingPossible','isAWT'],'O',['componentToLayer','java.util.Hashtable']]
,['O',['DEFAULT_LAYER','Integer','+PALETTE_LAYER','+MODAL_LAYER','+POPUP_LAYER','+DRAG_LAYER','+FRAME_CONTENT_LAYER']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$Z.apply(this, [false]);
}, 1);

Clazz_newMeth(C$, 'c$$Z',  function (isAWTContainer) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.initLayeredPane$();
this.isAWT=isAWTContainer;
this.秘paintClass=C$ ||null;
}, 1);

Clazz_newMeth(C$, 'initLayeredPane$',  function () {
this.updateUI$();
this.setLayout$java_awt_LayoutManager(null);
});

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return "LayeredPaneUI";
});

Clazz_newMeth(C$, 'validateOptimizedDrawing',  function () {
var layeredComponentFound=false;
/*sync org.eclipse.jdt.core.dom.MethodInvocation*/(this.getTreeLock$());
{
var layer=null;
var children=$I$(1).秘getChildArray$java_awt_Container(this);
var n=this.getComponentCount$();
for (var i=0; i < n; i++) {
var c=children[i];
layer=null;
if ((Clazz_instanceOf(c, "javax.swing.JComponent") && (layer=(c).getClientProperty$O("layeredContainerLayer")) != null  )) {
if (layer != null  && layer.equals$O(C$.FRAME_CONTENT_LAYER) ) continue;
layeredComponentFound=true;
break;
}}
}if (layeredComponentFound) this.optimizedDrawingPossible=false;
 else this.optimizedDrawingPossible=true;
}, p$1);

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I',  function (comp, constraints, index) {
var layer=C$.DEFAULT_LAYER.intValue$();
var pos;
if (Clazz_instanceOf(constraints, "java.lang.Integer")) {
layer=(constraints).intValue$();
this.setLayer$java_awt_Component$I(comp, layer);
} else layer=C$.getLayer$java_awt_Component(comp);
pos=this.insertIndexForLayer$I$I(layer, index);
this.addImplCont$java_awt_Component$O$I(comp, constraints, pos);
comp.validate$();
comp.repaint$();
p$1.validateOptimizedDrawing.apply(this, []);
});

Clazz_newMeth(C$, 'remove$I',  function (index) {
var c=this.getComponent$I(index);
C$.superclazz.prototype.remove$I.apply(this, [index]);
if (c != null  && !(Clazz_instanceOf(c, "javax.swing.JComponent")) ) {
this.getComponentToLayer$().remove$O(c);
}p$1.validateOptimizedDrawing.apply(this, []);
});

Clazz_newMeth(C$, 'removeAll$',  function () {
var children=$I$(1).秘getChildArray$java_awt_Container(this);
var n=this.getComponentCount$();
var cToL=this.getComponentToLayer$();
for (var counter=n - 1; counter >= 0; counter--) {
var c=children[counter];
if (c != null  && !(Clazz_instanceOf(c, "javax.swing.JComponent")) ) {
cToL.remove$O(c);
}}
C$.superclazz.prototype.removeAll$.apply(this, []);
});

Clazz_newMeth(C$, 'isOptimizedDrawingEnabled$',  function () {
return this.optimizedDrawingPossible;
});

Clazz_newMeth(C$, 'putLayer$javax_swing_JComponent$I',  function (c, layer) {
var layerObj;
layerObj= new Integer(layer);
c.putClientProperty$O$O("layeredContainerLayer", layerObj);
}, 1);

Clazz_newMeth(C$, 'getLayer$javax_swing_JComponent',  function (c) {
var i;
if ((i=c.getClientProperty$O("layeredContainerLayer")) != null ) return i.intValue$();
return C$.DEFAULT_LAYER.intValue$();
}, 1);

Clazz_newMeth(C$, 'getLayeredPaneAbove$java_awt_Component',  function (c) {
if (c == null ) return null;
var parent=c.getParent$();
while (parent != null  && !(Clazz_instanceOf(parent, "javax.swing.JLayeredPane")) )parent=parent.getParent$();

return parent;
}, 1);

Clazz_newMeth(C$, 'setLayer$java_awt_Component$I',  function (c, layer) {
this.setLayer$java_awt_Component$I$I(c, layer, -1);
});

Clazz_newMeth(C$, 'setLayer$java_awt_Component$I$I',  function (c, layer, position) {
var layerObj;
layerObj=this.getObjectForLayer$I(layer);
if (layer == C$.getLayer$java_awt_Component(c) && position == this.getPosition$java_awt_Component(c) ) {
this.秘updateUIZOrder$();
return;
}if (Clazz_instanceOf(c, "javax.swing.JComponent")) (c).putClientProperty$O$O("layeredContainerLayer", layerObj);
 else this.getComponentToLayer$().put$O$O(c, layerObj);
if (c.getParent$() == null  || c.getParent$() !== this  ) {
return;
}this.setComponentZOrder$java_awt_Component$I(c, p$1.insertIndexForLayer$java_awt_Component$I$I.apply(this, [c, layer, position]));
});

Clazz_newMeth(C$, 'getLayer$java_awt_Component',  function (c) {
var i;
if ((i=(c).getClientProperty$O("layeredContainerLayer")) != null ) return i.intValue$();
return C$.DEFAULT_LAYER.intValue$();
}, 1);

Clazz_newMeth(C$, 'getIndexOf$java_awt_Component',  function (c) {
var i;
var count;
count=this.getComponentCount$();
for (i=0; i < count; i++) {
if (c === this.getComponent$I(i) ) return i;
}
return -1;
});

Clazz_newMeth(C$, 'moveToFront$java_awt_Component',  function (c) {
this.setPosition$java_awt_Component$I(c, 0);
});

Clazz_newMeth(C$, 'moveToBack$java_awt_Component',  function (c) {
this.setPosition$java_awt_Component$I(c, -1);
});

Clazz_newMeth(C$, 'setPosition$java_awt_Component$I',  function (c, position) {
this.setLayer$java_awt_Component$I$I(c, C$.getLayer$java_awt_Component(c), position);
});

Clazz_newMeth(C$, 'getPosition$java_awt_Component',  function (c) {
var i;
var count;
var startLayer;
var curLayer;
var startLocation;
var pos=0;
count=this.getComponentCount$();
startLocation=this.getIndexOf$java_awt_Component(c);
if (startLocation == -1) return -1;
startLayer=C$.getLayer$java_awt_Component(c);
for (i=startLocation - 1; i >= 0; i--) {
curLayer=C$.getLayer$java_awt_Component(this.getComponent$I(i));
if (curLayer == startLayer) ++pos;
 else return pos;
}
return pos;
});

Clazz_newMeth(C$, 'highestLayer$',  function () {
if (this.getComponentCount$() > 0) return C$.getLayer$java_awt_Component(this.getComponent$I(0));
return 0;
});

Clazz_newMeth(C$, 'lowestLayer$',  function () {
var count=this.getComponentCount$();
if (count > 0) return C$.getLayer$java_awt_Component(this.getComponent$I(count - 1));
return 0;
});

Clazz_newMeth(C$, 'getComponentCountInLayer$I',  function (layer) {
var i;
var count;
var curLayer;
var layerCount=0;
count=this.getComponentCount$();
for (i=0; i < count; i++) {
curLayer=C$.getLayer$java_awt_Component(this.getComponent$I(i));
if (curLayer == layer) {
++layerCount;
} else if (layerCount > 0 || curLayer < layer ) {
break;
}}
return layerCount;
});

Clazz_newMeth(C$, 'getComponentsInLayer$I',  function (layer) {
var i;
var count;
var curLayer;
var layerCount=0;
var results;
results=Clazz_array($I$(2), [this.getComponentCountInLayer$I(layer)]);
count=this.getComponentCount$();
for (i=0; i < count; i++) {
curLayer=C$.getLayer$java_awt_Component(this.getComponent$I(i));
if (curLayer == layer) {
results[layerCount++]=this.getComponent$I(i);
} else if (layerCount > 0 || curLayer < layer ) {
break;
}}
return results;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
if (this.isOpaque$()) {
var r=g.getClipBounds$();
var c=this.getBackground$();
if (c == null ) c=$I$(3).lightGray;
g.setColor$java_awt_Color(c);
if (r != null ) {
g.fillRect$I$I$I$I(r.x, r.y, r.width, r.height);
} else {
g.fillRect$I$I$I$I(0, 0, this.getWidth$(), this.getHeight$());
}}C$.superclazz.prototype.paint$java_awt_Graphics.apply(this, [g]);
});

Clazz_newMeth(C$, 'getComponentToLayer$',  function () {
if (this.componentToLayer == null ) this.componentToLayer=Clazz_new_($I$(4,1).c$$I,[4]);
return this.componentToLayer;
});

Clazz_newMeth(C$, 'getObjectForLayer$I',  function (layer) {
var layerObj;
switch (layer) {
case 0:
layerObj=C$.DEFAULT_LAYER;
break;
case 100:
layerObj=C$.PALETTE_LAYER;
break;
case 200:
layerObj=C$.MODAL_LAYER;
break;
case 300:
layerObj=C$.POPUP_LAYER;
break;
case 400:
layerObj=C$.DRAG_LAYER;
break;
default:
layerObj= new Integer(layer);
}
return layerObj;
});

Clazz_newMeth(C$, 'insertIndexForLayer$I$I',  function (layer, position) {
return p$1.insertIndexForLayer$java_awt_Component$I$I.apply(this, [null, layer, position]);
});

Clazz_newMeth(C$, 'insertIndexForLayer$java_awt_Component$I$I',  function (comp, layer, position) {
var i;
var count;
var curLayer;
var layerStart=-1;
var layerEnd=-1;
var componentCount=this.getComponentCount$();
var compList=Clazz_new_($I$(5,1).c$$I,[componentCount]);
for (var index=0; index < componentCount; index++) {
if (this.getComponent$I(index) !== comp ) {
compList.add$O(this.getComponent$I(index));
}}
count=compList.size$();
for (i=0; i < count; i++) {
curLayer=C$.getLayer$java_awt_Component(compList.get$I(i));
if (layerStart == -1 && curLayer == layer ) {
layerStart=i;
}if (curLayer < layer) {
if (i == 0) {
layerStart=0;
layerEnd=0;
} else {
layerEnd=i;
}break;
}}
if (layerStart == -1 && layerEnd == -1 ) return count;
if (layerStart != -1 && layerEnd == -1 ) layerEnd=count;
if (layerEnd != -1 && layerStart == -1 ) layerStart=layerEnd;
if (position == -1) return layerEnd;
if (position > -1 && layerStart + position <= layerEnd ) return layerStart + position;
return layerEnd;
}, p$1);

Clazz_newMeth(C$, 'paramString$',  function () {
var optimizedDrawingPossibleString=(this.optimizedDrawingPossible ? "true" : "false");
return C$.superclazz.prototype.paramString$.apply(this, []) + ",optimizedDrawingPossible=" + optimizedDrawingPossibleString ;
});

C$.$static$=function(){C$.$static$=0;
C$.DEFAULT_LAYER= new Integer(0);
C$.PALETTE_LAYER= new Integer(100);
C$.MODAL_LAYER= new Integer(200);
C$.POPUP_LAYER= new Integer(300);
C$.DRAG_LAYER= new Integer(400);
C$.FRAME_CONTENT_LAYER= new Integer(-30000);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:57 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'java.awt.FlowLayout']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JPanel", null, 'javax.swing.JComponent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager$Z',  function (layout, isDoubleBuffered) {
C$.c$$java_awt_LayoutManager$Z$Z.apply(this, [layout, isDoubleBuffered, false]);
}, 1);

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return "PanelUI";
});

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager',  function (layout) {
C$.c$$java_awt_LayoutManager$Z.apply(this, [layout, true]);
}, 1);

Clazz_newMeth(C$, 'c$$Z',  function (isDoubleBuffered) {
C$.c$$Z$Z.apply(this, [isDoubleBuffered, false]);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$Z$Z.apply(this, [true, false]);
}, 1);

Clazz_newMeth(C$, 'c$$Z$Z',  function (isDoubleBuffered, isAWTContainer) {
C$.c$$java_awt_LayoutManager$Z$Z.apply(this, [Clazz_new_($I$(1,1)), true, isAWTContainer]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_LayoutManager$Z$Z',  function (layout, isDoubleBuffered, isAWTContainer) {
Clazz_super_(C$, this);
this.setLayout$java_awt_LayoutManager(layout);
if (isAWTContainer) this.秘setIsAWT$();
this.setUIProperty$S$O("opaque", Boolean.TRUE);
this.updateUI$();
}, 1);

Clazz_newMeth(C$, 'add$java_awt_Component',  function (comp) {
return C$.superclazz.prototype.add$java_awt_Component.apply(this, [this.秘transferFrameTo$javax_swing_JComponent(comp)]);
});

Clazz_newMeth(C$, 'add$S$java_awt_Component',  function (name, comp) {
return C$.superclazz.prototype.add$S$java_awt_Component.apply(this, [name, this.秘transferFrameTo$javax_swing_JComponent(comp)]);
});

Clazz_newMeth(C$, 'add$java_awt_Component$I',  function (comp, index) {
return C$.superclazz.prototype.add$java_awt_Component$I.apply(this, [this.秘transferFrameTo$javax_swing_JComponent(comp), index]);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:58 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.SwingUtilities','java.awt.Dimension','sun.awt.AppContext','javax.swing.JLayeredPane','javax.swing.JPanel','java.awt.BorderLayout',['javax.swing.JRootPane','.RootLayout']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JRootPane", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent');
C$.$classes$=[['DefaultAction',8],['RootLayout',4]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.isAWT=false;
this.useTrueDoubleBuffering=true;
},1);

C$.$fields$=[['Z',['isAWT','useTrueDoubleBuffering'],'I',['windowDecorationStyle','paneCount'],'O',['menuBar','javax.swing.JMenuBar','contentPane','java.awt.Container','layeredPane','javax.swing.JLayeredPane','glassPane','java.awt.JSComponent','defaultButton','javax.swing.JButton','defaultPressAction','javax.swing.JRootPane.DefaultAction','+defaultReleaseAction']]]

Clazz_newMeth(C$, 'c$$S$Z$java_awt_Container',  function (prefix, isApplet, container) {
Clazz_super_(C$, this);
this.秘isRootPane=true;
this.isAWT=Clazz_instanceOf(container, "swingjs.a2s.A2SContainer");
this.setName$S($I$(3).getAppContext$().getThreadGroup$().getName$() + prefix + (++this.paneCount) + ".JRootPane" );
this.setGlassPane$java_awt_Component(this.createGlassPane$());
this.setLayeredPane$javax_swing_JLayeredPane(this.createLayeredPane$());
this.setContentPane$java_awt_Container(this.createContentPane$());
this.setLayout$java_awt_LayoutManager(this.createRootLayout$());
this.setFocusable$Z(false);
this.updateUI$();
}, 1);

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return "RootPaneUI";
});

Clazz_newMeth(C$, 'setDoubleBuffered$Z',  function (aFlag) {
});

Clazz_newMeth(C$, 'getWindowDecorationStyle$',  function () {
return this.windowDecorationStyle;
});

Clazz_newMeth(C$, 'setWindowDecorationStyle$I',  function (windowDecorationStyle) {
if (windowDecorationStyle < 0 || windowDecorationStyle > 8 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Invalid decoration style"]);
}var oldWindowDecorationStyle=this.getWindowDecorationStyle$();
this.windowDecorationStyle=windowDecorationStyle;
this.firePropertyChange$S$I$I("windowDecorationStyle", oldWindowDecorationStyle, windowDecorationStyle);
});

Clazz_newMeth(C$, 'createLayeredPane$',  function () {
var p=Clazz_new_($I$(4,1).c$$Z,[this.isAWT]);
p.setName$S(this.getName$() + ".layeredPane");
return p;
});

Clazz_newMeth(C$, 'createContentPane$',  function () {
var c=Clazz_new_($I$(5,1).c$$Z$Z,[true, this.isAWT]);
c.setName$S(this.getName$() + ".contentPane");
c.setLayout$java_awt_LayoutManager(((P$.JRootPane$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JRootPane$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.awt.BorderLayout'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O',  function (comp, constraints) {
if (constraints == null ) {
constraints="Center";
}C$.superclazz.prototype.addLayoutComponent$java_awt_Component$O.apply(this, [comp, constraints]);
});
})()
), Clazz_new_($I$(6,1),[this, null],P$.JRootPane$1)));
return c;
});

Clazz_newMeth(C$, 'createGlassPane$',  function () {
var c=Clazz_new_($I$(5,1));
c.setName$S(this.getName$() + ".glassPane");
c.setVisible$Z(false);
c.setOpaque$Z(false);
return c;
});

Clazz_newMeth(C$, 'createRootLayout$',  function () {
return Clazz_new_($I$(7,1),[this, null]);
});

Clazz_newMeth(C$, 'setJMenuBar$javax_swing_JMenuBar',  function (menu) {
if (this.menuBar != null  && this.menuBar.getParent$() === this.layeredPane  ) this.layeredPane.remove$java_awt_Component(this.menuBar);
this.menuBar=menu;
if (this.menuBar != null ) this.layeredPane.add$java_awt_Component$O(this.menuBar, $I$(4).FRAME_CONTENT_LAYER);
});

Clazz_newMeth(C$, 'setMenuBar$javax_swing_JMenuBar',  function (menu) {
if (this.menuBar != null  && this.menuBar.getParent$() === this.layeredPane  ) this.layeredPane.remove$java_awt_Component(this.menuBar);
this.menuBar=menu;
if (this.menuBar != null ) this.layeredPane.add$java_awt_Component$O(this.menuBar, $I$(4).FRAME_CONTENT_LAYER);
});

Clazz_newMeth(C$, 'getJMenuBar$',  function () {
return this.menuBar;
});

Clazz_newMeth(C$, 'getMenuBar$',  function () {
return this.menuBar;
});

Clazz_newMeth(C$, 'setContentPane$java_awt_Container',  function (content) {
if (content == null ) throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["contentPane cannot be set to null."]);
if (this.contentPane === content ) return;
if (this.contentPane != null  && this.contentPane.getParent$() === this.layeredPane  ) this.layeredPane.remove$java_awt_Component(this.contentPane);
content=this.秘transferFrameTo$javax_swing_JComponent(content);
content.秘isContentPane=true;
var old=this.contentPane;
this.contentPane=content;
this.layeredPane.add$java_awt_Component$O(this.contentPane, $I$(4).FRAME_CONTENT_LAYER);
if (old != null ) this.validate$();
});

Clazz_newMeth(C$, 'getContentPane$',  function () {
return this.contentPane;
});

Clazz_newMeth(C$, 'setLayeredPane$javax_swing_JLayeredPane',  function (layered) {
if (layered == null ) throw Clazz_new_(Clazz_load('java.awt.IllegalComponentStateException').c$$S,["layeredPane cannot be set to null."]);
if (this.layeredPane != null  && this.layeredPane.getParent$() === this  ) this.remove$java_awt_Component(this.layeredPane);
this.layeredPane=layered;
this.add$java_awt_Component$I(this.layeredPane, -1);
});

Clazz_newMeth(C$, 'getLayeredPane$',  function () {
return this.layeredPane;
});

Clazz_newMeth(C$, 'setGlassPane$java_awt_Component',  function (glass) {
if (glass == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["glassPane cannot be set to null."]);
}var visible=false;
if (this.glassPane != null  && this.glassPane.getParent$() === this  ) {
this.remove$java_awt_Component(this.glassPane);
visible=this.glassPane.isVisible$();
}glass.setVisible$Z(visible);
this.glassPane=glass;
this.add$java_awt_Component$I(this.glassPane, 0);
if (visible) {
this.秘repaint$();
}});

Clazz_newMeth(C$, 'getGlassPane$',  function () {
return this.glassPane;
});

Clazz_newMeth(C$, 'isValidateRoot$',  function () {
return true;
});

Clazz_newMeth(C$, 'isOptimizedDrawingEnabled$',  function () {
return !this.glassPane.isVisible$();
});

Clazz_newMeth(C$, 'addNotify$',  function () {
C$.superclazz.prototype.addNotify$.apply(this, []);
this.enableEvents$J(8);
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
C$.superclazz.prototype.removeNotify$.apply(this, []);
});

Clazz_newMeth(C$, 'setDefaultButton$javax_swing_JButton',  function (defaultButton) {
var oldDefault=this.defaultButton;
if (oldDefault !== defaultButton ) {
this.defaultButton=defaultButton;
if (oldDefault != null ) {
oldDefault.秘repaint$();
}if (defaultButton != null ) {
defaultButton.秘repaint$();
}}this.firePropertyChange$S$O$O("defaultButton", oldDefault, defaultButton);
});

Clazz_newMeth(C$, 'getDefaultButton$',  function () {
return this.defaultButton;
});

Clazz_newMeth(C$, 'setUseTrueDoubleBuffering$Z',  function (useTrueDoubleBuffering) {
this.useTrueDoubleBuffering=useTrueDoubleBuffering;
});

Clazz_newMeth(C$, 'getUseTrueDoubleBuffering$',  function () {
return this.useTrueDoubleBuffering;
});

Clazz_newMeth(C$, 'disableTrueDoubleBuffering$',  function () {
});

Clazz_newMeth(C$, 'addImpl$java_awt_Component$O$I',  function (comp, constraints, index) {
this.addImplCont$java_awt_Component$O$I(comp, constraints, index);
if (this.glassPane != null  && this.glassPane.getParent$() === this   && this.getComponent$I(0) !== this.glassPane  ) {
this.add$java_awt_Component$I(this.glassPane, 0);
}});

Clazz_newMeth(C$, 'paramString$',  function () {
return C$.superclazz.prototype.paramString$.apply(this, []);
});

Clazz_newMeth(C$, 'getInsets$',  function () {
return C$.superclazz.prototype.getInsets$.apply(this, []);
});

Clazz_newMeth(C$, 'setFrameViewer$swingjs_JSFrameViewer',  function (v) {
this.layeredPane.setFrameViewer$swingjs_JSFrameViewer(v);
this.contentPane.setFrameViewer$swingjs_JSFrameViewer(v);
if (this.glassPane != null ) this.glassPane.setFrameViewer$swingjs_JSFrameViewer(v);
return C$.superclazz.prototype.setFrameViewer$swingjs_JSFrameViewer.apply(this, [v]);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JRootPane, "DefaultAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.AbstractAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['press'],'O',['owner','javax.swing.JButton','root','javax.swing.JRootPane']]]

Clazz_newMeth(C$, 'c$$javax_swing_JRootPane$Z',  function (root, press) {
Clazz_super_(C$, this);
this.root=root;
this.press=press;
}, 1);

Clazz_newMeth(C$, 'setOwner$javax_swing_JButton',  function (owner) {
this.owner=owner;
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
if (this.owner != null  && $I$(1).getRootPane$java_awt_Component(this.owner) === this.root  ) {
var model=this.owner.getModel$();
if (this.press) {
model.setArmed$Z(true);
model.setPressed$Z(true);
} else {
model.setPressed$Z(false);
}}});

Clazz_newMeth(C$, 'isEnabled$',  function () {
return this.owner.getModel$().isEnabled$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JRootPane, "RootLayout", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.awt.LayoutManager2');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'preferredLayoutSize$java_awt_Container',  function (parent) {
var rd;
var mbd;
var i=this.b$['javax.swing.JRootPane'].getInsets$.apply(this.b$['javax.swing.JRootPane'], []);
if (this.b$['javax.swing.JRootPane'].contentPane != null ) {
rd=this.b$['javax.swing.JRootPane'].contentPane.getPreferredSize$();
} else {
rd=parent.getSize$();
}if (this.b$['javax.swing.JRootPane'].menuBar != null  && this.b$['javax.swing.JRootPane'].menuBar.isVisible$() ) {
mbd=this.b$['javax.swing.JRootPane'].menuBar.getPreferredSize$();
} else {
mbd=Clazz_new_($I$(2,1).c$$I$I,[0, 0]);
}return Clazz_new_([Math.max(rd.width, mbd.width) + i.left + i.right , rd.height + mbd.height + i.top + i.bottom ],$I$(2,1).c$$I$I);
});

Clazz_newMeth(C$, 'minimumLayoutSize$java_awt_Container',  function (parent) {
var rd;
var mbd;
var i=this.b$['javax.swing.JRootPane'].getInsets$.apply(this.b$['javax.swing.JRootPane'], []);
if (this.b$['javax.swing.JRootPane'].contentPane != null ) {
rd=this.b$['javax.swing.JRootPane'].contentPane.getMinimumSize$();
} else {
rd=parent.getSize$();
}if (this.b$['javax.swing.JRootPane'].menuBar != null  && this.b$['javax.swing.JRootPane'].menuBar.isVisible$() ) {
mbd=this.b$['javax.swing.JRootPane'].menuBar.getMinimumSize$();
} else {
mbd=Clazz_new_($I$(2,1).c$$I$I,[0, 0]);
}return Clazz_new_([Math.max(rd.width, mbd.width) + i.left + i.right , rd.height + mbd.height + i.top + i.bottom ],$I$(2,1).c$$I$I);
});

Clazz_newMeth(C$, 'maximumLayoutSize$java_awt_Container',  function (target) {
var rd;
var mbd;
var i=this.b$['javax.swing.JRootPane'].getInsets$.apply(this.b$['javax.swing.JRootPane'], []);
if (this.b$['javax.swing.JRootPane'].menuBar != null  && this.b$['javax.swing.JRootPane'].menuBar.isVisible$() ) {
mbd=this.b$['javax.swing.JRootPane'].menuBar.getMaximumSize$();
} else {
mbd=Clazz_new_($I$(2,1).c$$I$I,[0, 0]);
}if (this.b$['javax.swing.JRootPane'].contentPane != null ) {
rd=this.b$['javax.swing.JRootPane'].contentPane.getMaximumSize$();
} else {
rd=Clazz_new_($I$(2,1).c$$I$I,[2147483647, 2147483647 - i.top - i.bottom - mbd.height - 1 ]);
}return Clazz_new_([Math.min(rd.width, mbd.width) + i.left + i.right , rd.height + mbd.height + i.top + i.bottom ],$I$(2,1).c$$I$I);
});

Clazz_newMeth(C$, 'layoutContainer$java_awt_Container',  function (parent) {
var b=parent.getBounds$();
var i=this.b$['javax.swing.JRootPane'].getInsets$.apply(this.b$['javax.swing.JRootPane'], []);
var contentY=0;
var w=b.width - i.right - i.left ;
var h=b.height - i.top - i.bottom ;
if (this.b$['javax.swing.JRootPane'].layeredPane != null ) {
this.b$['javax.swing.JRootPane'].layeredPane.setBounds$I$I$I$I(i.left, i.top, w, h);
}if (this.b$['javax.swing.JRootPane'].glassPane != null ) {
this.b$['javax.swing.JRootPane'].glassPane.setBounds$I$I$I$I(i.left, i.top, w, h);
}if (this.b$['javax.swing.JRootPane'].menuBar != null  && this.b$['javax.swing.JRootPane'].menuBar.isVisible$() ) {
var mbd=this.b$['javax.swing.JRootPane'].menuBar.getPreferredSize$();
this.b$['javax.swing.JRootPane'].menuBar.setBounds$I$I$I$I(0, 0, w, mbd.height);
contentY+=mbd.height;
}if (this.b$['javax.swing.JRootPane'].contentPane != null ) {
this.b$['javax.swing.JRootPane'].contentPane.setBounds$I$I$I$I(0, contentY, w, h - contentY);
}});

Clazz_newMeth(C$, 'addLayoutComponent$S$java_awt_Component',  function (name, comp) {
});

Clazz_newMeth(C$, 'removeLayoutComponent$java_awt_Component',  function (comp) {
});

Clazz_newMeth(C$, 'addLayoutComponent$java_awt_Component$O',  function (comp, constraints) {
});

Clazz_newMeth(C$, 'getLayoutAlignmentX$java_awt_Container',  function (target) {
return 0.0;
});

Clazz_newMeth(C$, 'getLayoutAlignmentY$java_awt_Container',  function (target) {
return 0.0;
});

Clazz_newMeth(C$, 'invalidateLayout$java_awt_Container',  function (target) {
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:13:59 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'javax.swing.AbstractAction','javax.swing.Action',['javax.swing.JTextField','.NotifyAction'],['javax.swing.text.DefaultEditorKit','.PassThroughAction'],['javax.swing.text.JTextComponent','.JSPlainDocument'],'javax.swing.text.PlainDocument','java.awt.event.ActionListener','java.awt.EventQueue','java.awt.event.ActionEvent',['javax.swing.JTextField','.TextFieldActionPropertyChangeListener'],'javax.swing.text.TextAction']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JTextField", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.text.JTextComponent', 'javax.swing.SwingConstants');
C$.$classes$=[['TextFieldActionPropertyChangeListener',10],['NotifyAction',8],['ScrollRepainter',0]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.horizontalAlignment=10;
},1);

C$.$fields$=[['I',['horizontalAlignment','columns','columnWidth'],'S',['command'],'O',['action','javax.swing.Action','actionPropertyChangeListener','java.beans.PropertyChangeListener']]
,['O',['defaultActions','javax.swing.Action[]']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$javax_swing_text_Document$S$I.apply(this, [null, null, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (text) {
C$.c$$javax_swing_text_Document$S$I.apply(this, [null, text, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (columns) {
C$.c$$javax_swing_text_Document$S$I.apply(this, [null, null, columns]);
}, 1);

Clazz_newMeth(C$, 'c$$S$I',  function (text, columns) {
C$.c$$javax_swing_text_Document$S$I.apply(this, [null, text, columns]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_text_Document$S$I',  function (doc, text, columns) {
Clazz_super_(C$, this);
if (columns < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["columns less than zero."]);
}this.columns=columns;
if (doc == null ) {
doc=this.createDefaultModel$();
} else if (doc === "null" ) {
doc=Clazz_new_($I$(5,1),[this, null]);
}this.setDocument$javax_swing_text_Document(doc);
if (text != null ) {
this.setText$S(text);
}}, 1);

Clazz_newMeth(C$, 'getUIClassID$',  function () {
return "TextFieldUI";
});

Clazz_newMeth(C$, 'setDocument$javax_swing_text_Document',  function (doc) {
if (doc != null ) {
doc.putProperty$O$O("filterNewlines", Boolean.TRUE);
}C$.superclazz.prototype.setDocument$javax_swing_text_Document.apply(this, [doc]);
});

Clazz_newMeth(C$, 'isValidateRoot$',  function () {
var parent=this.getParent$();
if (Clazz_instanceOf(parent, "javax.swing.JViewport")) {
return false;
}return true;
});

Clazz_newMeth(C$, 'getHorizontalAlignment$',  function () {
return this.horizontalAlignment;
});

Clazz_newMeth(C$, 'setHorizontalAlignment$I',  function (alignment) {
if (alignment == this.horizontalAlignment) return;
var oldValue=this.horizontalAlignment;
if ((alignment == 2) || (alignment == 0) || (alignment == 4) || (alignment == 10) || (alignment == 11)  ) {
this.horizontalAlignment=alignment;
} else {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["horizontalAlignment"]);
}this.firePropertyChange$S$I$I("horizontalAlignment", oldValue, this.horizontalAlignment);
this.invalidate$();
this.秘repaint$();
});

Clazz_newMeth(C$, 'createDefaultModel$',  function () {
return Clazz_new_($I$(6,1));
});

Clazz_newMeth(C$, 'getColumns$',  function () {
return this.columns;
});

Clazz_newMeth(C$, 'setColumns$I',  function (columns) {
var oldVal=this.columns;
if (columns < 0) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["columns less than zero."]);
}if (columns != oldVal) {
this.columns=columns;
this.invalidate$();
}});

Clazz_newMeth(C$, 'getColumnWidth$',  function () {
if (this.columnWidth == 0) {
var metrics=this.getFontMetrics$java_awt_Font(this.getFont$());
this.columnWidth=metrics.charWidth$C("m");
}return this.columnWidth;
});

Clazz_newMeth(C$, 'getPreferredSize$',  function () {
return this.getPrefSizeJTF$();
});

Clazz_newMeth(C$, 'getPrefSizeJTF$',  function () {
return this.getPrefSizeJTF$I(this.columns);
});

Clazz_newMeth(C$, 'getPrefSizeJTF$I',  function (columns) {
var size=(!this.isPreferredSizeSet$() && this.ui != null   ? this.ui.getPreferredSize$javax_swing_JComponent(this) : null);
if (size == null ) size=C$.superclazz.prototype.preferredSize$.apply(this, []);
if (columns != 0) {
size.width=this.getJ2SWidth$I(columns);
}return size;
});

Clazz_newMeth(C$, 'getJ2SWidth$I',  function (columns) {
var insets=this.getInsets$();
return columns * this.getColumnWidth$() + insets.left + insets.right;
});

Clazz_newMeth(C$, 'getMinimumSizeJTF$I',  function (columns) {
var size=C$.superclazz.prototype.getMinimumSize$.apply(this, []);
if (columns != 0) {
size.width=this.getJ2SWidth$I(columns);
}return size;
});

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (f) {
C$.superclazz.prototype.setFont$java_awt_Font.apply(this, [f]);
this.columnWidth=0;
});

Clazz_newMeth(C$, 'addActionListener$java_awt_event_ActionListener',  function (l) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(7),['actionPerformed$java_awt_event_ActionEvent']), l);
});

Clazz_newMeth(C$, 'removeActionListener$java_awt_event_ActionListener',  function (l) {
if ((l != null ) && (this.getAction$() === l ) ) {
this.setAction$javax_swing_Action(null);
} else {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(7),['actionPerformed$java_awt_event_ActionEvent']), l);
}});

Clazz_newMeth(C$, 'getActionListeners$',  function () {
return this.listenerList.getListeners$Class(Clazz_getClass($I$(7),['actionPerformed$java_awt_event_ActionEvent']));
});

Clazz_newMeth(C$, 'fireActionPerformed$',  function () {
var listeners=this.listenerList.getListenerList$();
var modifiers=0;
var currentEvent=$I$(8).getCurrentEvent$();
if (Clazz_instanceOf(currentEvent, "java.awt.event.InputEvent")) {
modifiers=(currentEvent).getModifiers$();
} else if (Clazz_instanceOf(currentEvent, "java.awt.event.ActionEvent")) {
modifiers=(currentEvent).getModifiers$();
}var e=Clazz_new_([this, 1001, (this.command != null ) ? this.command : this.getText$(), $I$(8).getMostRecentEventTime$(), modifiers],$I$(9,1).c$$O$I$S$J$I);
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(7),['actionPerformed$java_awt_event_ActionEvent']) ) {
(listeners[i + 1]).actionPerformed$java_awt_event_ActionEvent(e);
}}
});

Clazz_newMeth(C$, 'setActionCommand$S',  function (command) {
this.command=command;
});

Clazz_newMeth(C$, 'setAction$javax_swing_Action',  function (a) {
var oldValue=this.getAction$();
if (this.action == null  || !this.action.equals$O(a) ) {
this.action=a;
if (oldValue != null ) {
this.removeActionListener$java_awt_event_ActionListener(oldValue);
oldValue.removePropertyChangeListener$java_beans_PropertyChangeListener(this.actionPropertyChangeListener);
this.actionPropertyChangeListener=null;
}this.configurePropertiesFromAction$javax_swing_Action(this.action);
if (this.action != null ) {
if (!p$1.isListener$Class$java_awt_event_ActionListener.apply(this, [Clazz_getClass($I$(7),['actionPerformed$java_awt_event_ActionEvent']), this.action])) {
this.addActionListener$java_awt_event_ActionListener(this.action);
}this.actionPropertyChangeListener=this.createActionPropertyChangeListener$javax_swing_Action(this.action);
this.action.addPropertyChangeListener$java_beans_PropertyChangeListener(this.actionPropertyChangeListener);
}this.firePropertyChange$S$O$O("action", oldValue, this.action);
}});

Clazz_newMeth(C$, 'isListener$Class$java_awt_event_ActionListener',  function (c, a) {
var isListener=false;
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === c  && listeners[i + 1] === a  ) {
isListener=true;
}}
return isListener;
}, p$1);

Clazz_newMeth(C$, 'getAction$',  function () {
return this.action;
});

Clazz_newMeth(C$, 'configurePropertiesFromAction$javax_swing_Action',  function (a) {
$I$(1).setEnabledFromAction$javax_swing_JComponent$javax_swing_Action(this, a);
$I$(1).setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action(this, a);
p$1.setActionCommandFromAction$javax_swing_Action.apply(this, [a]);
});

Clazz_newMeth(C$, 'actionPropertyChanged$javax_swing_Action$S',  function (action, propertyName) {
if (propertyName == "ActionCommandKey") {
p$1.setActionCommandFromAction$javax_swing_Action.apply(this, [action]);
} else if (propertyName === "enabled" ) {
$I$(1).setEnabledFromAction$javax_swing_JComponent$javax_swing_Action(this, action);
} else if (propertyName == "ShortDescription") {
$I$(1).setToolTipTextFromAction$javax_swing_JComponent$javax_swing_Action(this, action);
}});

Clazz_newMeth(C$, 'setActionCommandFromAction$javax_swing_Action',  function (action) {
this.setActionCommand$S((action == null ) ? null : action.getValue$S("ActionCommandKey"));
}, p$1);

Clazz_newMeth(C$, 'createActionPropertyChangeListener$javax_swing_Action',  function (a) {
return Clazz_new_($I$(10,1).c$$javax_swing_JTextField$javax_swing_Action,[this, a]);
});

Clazz_newMeth(C$, 'getActions$',  function () {
return $I$(11,"augmentList$javax_swing_ActionA$javax_swing_ActionA",[C$.superclazz.prototype.getActions$.apply(this, []), C$.defaultActions]);
});

Clazz_newMeth(C$, 'postActionEvent$',  function () {
this.fireActionPerformed$();
});

Clazz_newMeth(C$, 'hasActionListener$',  function () {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(7),['actionPerformed$java_awt_event_ActionEvent']) ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var horizontalAlignmentString;
if (this.horizontalAlignment == 2) {
horizontalAlignmentString="LEFT";
} else if (this.horizontalAlignment == 0) {
horizontalAlignmentString="CENTER";
} else if (this.horizontalAlignment == 4) {
horizontalAlignmentString="RIGHT";
} else if (this.horizontalAlignment == 10) {
horizontalAlignmentString="LEADING";
} else if (this.horizontalAlignment == 11) {
horizontalAlignmentString="TRAILING";
} else horizontalAlignmentString="";
var commandString=(this.command != null  ? this.command : "");
return C$.superclazz.prototype.paramString$.apply(this, []) + ",columns=" + this.columns + ",columnWidth=" + this.columnWidth + ",command=" + commandString + ",horizontalAlignment=" + horizontalAlignmentString ;
});

C$.$static$=function(){C$.$static$=0;
C$.defaultActions=Clazz_array($I$(2), -1, [Clazz_new_($I$(3,1)), Clazz_new_($I$(4,1))]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextField, "TextFieldActionPropertyChangeListener", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.ActionPropertyChangeListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$javax_swing_JTextField$javax_swing_Action',  function (tf, a) {
;C$.superclazz.c$$javax_swing_JComponent$javax_swing_Action.apply(this,[tf, a]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, ['actionPropertyChanged$javax_swing_JTextField$javax_swing_Action$java_beans_PropertyChangeEvent','actionPropertyChanged$javax_swing_JComponent$javax_swing_Action$java_beans_PropertyChangeEvent'],  function (textField, action, e) {
if ($I$(1).shouldReconfigure$java_beans_PropertyChangeEvent(e)) {
textField.configurePropertiesFromAction$javax_swing_Action(action);
} else {
textField.actionPropertyChanged$javax_swing_Action$S(action, e.getPropertyName$());
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextField, "NotifyAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["notify-field-accept"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=e.getSource$();
if (Clazz_instanceOf(target, "javax.swing.JTextField")) {
var field=target;
field.postActionEvent$();
}});

Clazz_newMeth(C$, 'isEnabled$',  function () {
var target=this.getFocusedComponent$();
if (Clazz_instanceOf(target, "javax.swing.JTextField")) {
return (target).hasActionListener$();
}return false;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextField, "ScrollRepainter", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.event.ChangeListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent',  function (e) {
this.b$['java.awt.JSComponent'].秘repaint$.apply(this.b$['java.awt.JSComponent'], []);
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:01 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'java.awt.AWTKeyStroke']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "KeyStroke", null, 'java.awt.AWTKeyStroke');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$C$I$I$Z',  function (keyChar, keyCode, modifiers, onKeyRelease) {
;C$.superclazz.c$$C$I$I$Z.apply(this,[keyChar, keyCode, modifiers, onKeyRelease]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getKeyStroke$C',  function (keyChar) {
{
$I$(1,"registerSubclass$Class",[Clazz_getClass(C$)]);
return $I$(1).getAWTKeyStroke$C(keyChar);
}}, 1);

Clazz_newMeth(C$, 'getKeyStroke$C$Z',  function (keyChar, onKeyRelease) {
return Clazz_new_(C$.c$$C$I$I$Z,[keyChar, 0, 0, onKeyRelease]);
}, 1);

Clazz_newMeth(C$, 'getKeyStroke$Character$I',  function (keyChar, modifiers) {
{
$I$(1,"registerSubclass$Class",[Clazz_getClass(C$)]);
return $I$(1).getAWTKeyStroke$Character$I(keyChar, modifiers);
}}, 1);

Clazz_newMeth(C$, 'getKeyStroke$I$I$Z',  function (keyCode, modifiers, onKeyRelease) {
{
$I$(1,"registerSubclass$Class",[Clazz_getClass(C$)]);
return $I$(1).getAWTKeyStroke$I$I$Z(keyCode, modifiers, onKeyRelease);
}}, 1);

Clazz_newMeth(C$, 'getKeyStroke$I$I',  function (keyCode, modifiers) {
{
$I$(1,"registerSubclass$Class",[Clazz_getClass(C$)]);
return $I$(1).getAWTKeyStroke$I$I(keyCode, modifiers);
}}, 1);

Clazz_newMeth(C$, 'getKeyStrokeForEvent$java_awt_event_KeyEvent',  function (anEvent) {
{
$I$(1,"registerSubclass$Class",[Clazz_getClass(C$)]);
return $I$(1).getAWTKeyStrokeForEvent$java_awt_event_KeyEvent(anEvent);
}}, 1);

Clazz_newMeth(C$, 'getKeyStroke$S',  function (s) {
if (s == null  || s.length$() == 0 ) {
return null;
}{
$I$(1,"registerSubclass$Class",[Clazz_getClass(C$)]);
try {
return $I$(1).getAWTKeyStroke$S(s);
} catch (e) {
if (Clazz_exceptionOf(e,"IllegalArgumentException")){
return null;
} else {
throw e;
}
}
}}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:02 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'java.util.LinkedList']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "LayoutComparator", null, null, ['java.util.Comparator', 'java.io.Serializable']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.horizontal=true;
this.leftToRight=true;
},1);

C$.$fields$=[['Z',['horizontal','leftToRight']]]

Clazz_newMeth(C$, 'setComponentOrientation$java_awt_ComponentOrientation',  function (orientation) {
this.horizontal=orientation.isHorizontal$();
this.leftToRight=orientation.isLeftToRight$();
});

Clazz_newMeth(C$, 'compare$O$O',  function (o1, o2) {
var a=o1;
var b=o2;
if (a === b ) {
return 0;
}if (a.getParent$() !== b.getParent$() ) {
var aAncestory;
var bAncestory;
for (aAncestory=Clazz_new_($I$(1,1)); a != null ; a=a.getParent$()) {
aAncestory.add$O(a);
if (a.isWindowOrJSApplet$()) {
break;
}}
if (a == null ) {
throw Clazz_new_(Clazz_load('ClassCastException'));
}for (bAncestory=Clazz_new_($I$(1,1)); b != null ; b=b.getParent$()) {
bAncestory.add$O(b);
if (b.isWindowOrJSApplet$()) {
break;
}}
if (b == null ) {
throw Clazz_new_(Clazz_load('ClassCastException'));
}for (var aIter=aAncestory.listIterator$I(aAncestory.size$()), bIter=bAncestory.listIterator$I(bAncestory.size$()); ; ) {
if (aIter.hasPrevious$()) {
a=aIter.previous$();
} else {
return -1;
}if (bIter.hasPrevious$()) {
b=bIter.previous$();
} else {
return 1;
}if (a !== b ) {
break;
}}
}var ax=a.getX$();
var ay=a.getY$();
var bx=b.getX$();
var by=b.getY$();
var ap=a.getParent$();
var bp=b.getParent$();
var zOrder=(ap == null  ? 1 : bp == null  ? -1 : ap.getComponentZOrder$java_awt_Component(a) - bp.getComponentZOrder$java_awt_Component(b));
if (this.horizontal) {
if (this.leftToRight) {
if (Math.abs(ay - by) < 10) {
return (ax < bx) ? -1 : ((ax > bx) ? 1 : zOrder);
} else {
return (ay < by) ? -1 : 1;
}} else {
if (Math.abs(ay - by) < 10) {
return (ax > bx) ? -1 : ((ax < bx) ? 1 : zOrder);
} else {
return (ay < by) ? -1 : 1;
}}} else {
if (this.leftToRight) {
if (Math.abs(ax - bx) < 10) {
return (ay < by) ? -1 : ((ay > by) ? 1 : zOrder);
} else {
return (ax < bx) ? -1 : 1;
}} else {
if (Math.abs(ax - bx) < 10) {
return (ay < by) ? -1 : ((ay > by) ? 1 : zOrder);
} else {
return (ax > bx) ? -1 : 1;
}}}});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:02 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.SwingDefaultFocusTraversalPolicy','javax.swing.LayoutComparator']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "LayoutFocusTraversalPolicy", null, 'javax.swing.SortingFocusTraversalPolicy', 'java.io.Serializable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['$fitnessTestPolicy','javax.swing.SwingDefaultFocusTraversalPolicy']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$java_util_Comparator.apply(this,[Clazz_new_($I$(2,1))]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Comparator',  function (c) {
;C$.superclazz.c$$java_util_Comparator.apply(this,[c]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getComponentAfter$java_awt_Container$java_awt_Component',  function (aContainer, aComponent) {
if (aContainer == null  || aComponent == null  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer and aComponent cannot be null"]);
}var comparator=this.getComparator$();
if (Clazz_instanceOf(comparator, "javax.swing.LayoutComparator")) {
(comparator).setComponentOrientation$java_awt_ComponentOrientation(aContainer.getComponentOrientation$());
}return C$.superclazz.prototype.getComponentAfter$java_awt_Container$java_awt_Component.apply(this, [aContainer, aComponent]);
});

Clazz_newMeth(C$, 'getComponentBefore$java_awt_Container$java_awt_Component',  function (aContainer, aComponent) {
if (aContainer == null  || aComponent == null  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer and aComponent cannot be null"]);
}var comparator=this.getComparator$();
if (Clazz_instanceOf(comparator, "javax.swing.LayoutComparator")) {
(comparator).setComponentOrientation$java_awt_ComponentOrientation(aContainer.getComponentOrientation$());
}return C$.superclazz.prototype.getComponentBefore$java_awt_Container$java_awt_Component.apply(this, [aContainer, aComponent]);
});

Clazz_newMeth(C$, 'getFirstComponent$java_awt_Container',  function (aContainer) {
if (aContainer == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer cannot be null"]);
}var comparator=this.getComparator$();
if (Clazz_instanceOf(comparator, "javax.swing.LayoutComparator")) {
(comparator).setComponentOrientation$java_awt_ComponentOrientation(aContainer.getComponentOrientation$());
}return C$.superclazz.prototype.getFirstComponent$java_awt_Container.apply(this, [aContainer]);
});

Clazz_newMeth(C$, 'getLastComponent$java_awt_Container',  function (aContainer) {
if (aContainer == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer cannot be null"]);
}var comparator=this.getComparator$();
if (Clazz_instanceOf(comparator, "javax.swing.LayoutComparator")) {
(comparator).setComponentOrientation$java_awt_ComponentOrientation(aContainer.getComponentOrientation$());
}return C$.superclazz.prototype.getLastComponent$java_awt_Container.apply(this, [aContainer]);
});

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (aComponent) {
if (!C$.superclazz.prototype.accept$java_awt_Component.apply(this, [aComponent])) {
return false;
} else if (Clazz_instanceOf(aComponent, "javax.swing.JTable")) {
return false;
} else if (Clazz_instanceOf(aComponent, "javax.swing.JComboBox")) {
var box=aComponent;
return (box.getUI$()).isFocusTraversable$javax_swing_JComboBox(box);
} else if (Clazz_instanceOf(aComponent, "javax.swing.JComponent")) {
var jComponent=aComponent;
var inputMap=jComponent.getInputMap$I$Z(0, false);
while (inputMap != null  && inputMap.size$() == 0 ){
inputMap=inputMap.getParent$();
}
if (inputMap != null ) {
return true;
}}return C$.$fitnessTestPolicy.accept$java_awt_Component(aComponent);
});

C$.$static$=function(){C$.$static$=0;
C$.$fitnessTestPolicy=Clazz_new_($I$(1,1));
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:02 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'javax.swing.UIManager','swingjs.JSUtil','javax.swing.plaf.InputMapUIResource','javax.swing.plaf.ComponentInputMapUIResource','javax.swing.KeyStroke','sun.swing.DefaultLayoutStyle']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "LookAndFeel");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'installColors$javax_swing_JComponent$S$S',  function (c, defaultBgName, defaultFgName) {
var bg=c.getBackground$();
if (bg == null  || Clazz_instanceOf(bg, "javax.swing.plaf.UIResource") ) c.setBackground$java_awt_Color($I$(1).getColor$O(defaultBgName));
var fg=c.getForeground$();
if (fg == null  || Clazz_instanceOf(fg, "javax.swing.plaf.UIResource") ) c.setForeground$java_awt_Color($I$(1).getColor$O(defaultFgName));
}, 1);

Clazz_newMeth(C$, 'installColorsAndFont$javax_swing_JComponent$S$S$S',  function (c, defaultBgName, defaultFgName, defaultFontName) {
if (c.isAWT ||c.秘isAWT$()) return;
var f=c.getFont$();
if (f == null  || Clazz_instanceOf(f, "javax.swing.plaf.UIResource") ) {
c.setFont$java_awt_Font($I$(1).getFont$O(defaultFontName));
}if (defaultBgName != null ) C$.installColors$javax_swing_JComponent$S$S(c, defaultBgName, defaultFgName);
}, 1);

Clazz_newMeth(C$, 'installBorder$javax_swing_JComponent$S',  function (c, defaultBorderName) {
var b=c.getBorder$();
if (b == null  || Clazz_instanceOf(b, "javax.swing.plaf.UIResource") ) {
c.setBorder$javax_swing_border_Border($I$(1).getBorder$O(defaultBorderName));
}}, 1);

Clazz_newMeth(C$, 'uninstallBorder$javax_swing_JComponent',  function (c) {
if (Clazz_instanceOf(c.getBorder$(), "javax.swing.plaf.UIResource")) {
c.setBorder$javax_swing_border_Border(null);
}}, 1);

Clazz_newMeth(C$, 'installProperty$javax_swing_JComponent$S$O',  function (c, propertyName, propertyValue) {
if (Clazz_instanceOf(c, "javax.swing.JPasswordField")) {
if (!(c).customSetUIProperty$S$O(propertyName, propertyValue)) {
c.setUIProperty$S$O(propertyName, propertyValue);
}} else {
c.setUIProperty$S$O(propertyName, propertyValue);
}}, 1);

Clazz_newMeth(C$, 'makeKeyBindings$OA',  function (keyBindingList) {
$I$(2).notImplemented$S(null);
return null;
}, 1);

Clazz_newMeth(C$, 'makeInputMap$OA',  function (keys) {
var retMap=Clazz_new_($I$(3,1));
C$.loadKeyBindings$javax_swing_InputMap$OA(retMap, keys);
return retMap;
}, 1);

Clazz_newMeth(C$, 'makeComponentInputMap$javax_swing_JComponent$OA',  function (c, keys) {
var retMap=Clazz_new_($I$(4,1).c$$javax_swing_JComponent,[c]);
C$.loadKeyBindings$javax_swing_InputMap$OA(retMap, keys);
return retMap;
}, 1);

Clazz_newMeth(C$, 'loadKeyBindings$javax_swing_InputMap$OA',  function (retMap, keys) {
if (keys != null ) {
for (var counter=0, maxCounter=keys.length; counter < maxCounter; counter++) {
var keyStrokeO=keys[counter++];
var ks=(Clazz_instanceOf(keyStrokeO, "javax.swing.KeyStroke")) ? keyStrokeO : $I$(5).getKeyStroke$S(keyStrokeO);
retMap.put$javax_swing_KeyStroke$O(ks, keys[counter]);
}
}}, 1);

Clazz_newMeth(C$, 'makeIcon$Class$S',  function (baseClass, gifFile) {
$I$(2).notImplemented$S(null);
return null;
}, 1);

Clazz_newMeth(C$, 'getLayoutStyle$',  function () {
return $I$(6).getInstance$();
});

Clazz_newMeth(C$, 'provideErrorFeedback$java_awt_Component',  function (component) {
$I$(2).notImplemented$S(null);
});

Clazz_newMeth(C$, 'getDesktopPropertyValue$S$O',  function (systemPropertyName, fallbackValue) {
$I$(2).notImplemented$S(null);
return fallbackValue;
}, 1);

Clazz_newMeth(C$, 'getDisabledIcon$javax_swing_JComponent$javax_swing_Icon',  function (component, icon) {
$I$(2).notImplemented$S(null);
return null;
});

Clazz_newMeth(C$, 'getDisabledSelectedIcon$javax_swing_JComponent$javax_swing_Icon',  function (component, icon) {
return this.getDisabledIcon$javax_swing_JComponent$javax_swing_Icon(component, icon);
});

Clazz_newMeth(C$, 'getSupportsWindowDecorations$',  function () {
return false;
});

Clazz_newMeth(C$, 'initialize$',  function () {
});

Clazz_newMeth(C$, 'uninitialize$',  function () {
});

Clazz_newMeth(C$, 'getDefaults$',  function () {
return null;
});

Clazz_newMeth(C$, 'toString',  function () {
return "[" + this.getDescription$() + " - " + this.getClass$().getName$() + "]" ;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'java.util.HashMap','java.awt.Rectangle','sun.awt.AppContext','javax.swing.SwingUtilities',['javax.swing.RepaintManager','.ProcessingRunnable'],'java.util.IdentityHashMap','javajs.util.Lst','java.awt.Toolkit','java.util.HashSet','javax.swing.JComponent','StringBuffer','Thread','swingjs.JSToolkit','sun.awt.SunToolkit','java.awt.event.InvocationEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "RepaintManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['ProcessingRunnable',18]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.volatileMap=Clazz_new_($I$(1,1).c$$I,[1]);
this.paintDepth=0;
this.tmp=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['Z',['painting'],'I',['paintDepth'],'O',['volatileMap','java.util.Map','+hwDirtyComponents','+dirtyComponents','+tmpDirtyComponents','invalidComponents','javajs.util.Lst','runnableList','java.util.List','repaintRoot','javax.swing.JComponent','paintThread','Thread','processingRunnable','javax.swing.RepaintManager.ProcessingRunnable','myComponent','java.awt.Component','tmp','java.awt.Rectangle']]
,['Z',['HANDLE_TOP_LEVEL_PAINT','volatileImageBufferEnabled'],'O',['repaintManagerKey','java.lang.Object']]]

Clazz_newMeth(C$, 'currentManager$java_awt_Component',  function (c) {
return C$.currentManager$java_awt_Component$sun_awt_AppContext(c, $I$(3).getAppContext$());
}, 1);

Clazz_newMeth(C$, 'currentManager$java_awt_Component$sun_awt_AppContext',  function (c, appContext) {
var rm=appContext.get$O(C$.repaintManagerKey);
if (rm == null ) {
rm=Clazz_new_(C$);
p$1.set$java_awt_Component.apply(rm, [c]);
appContext.put$O$O(C$.repaintManagerKey, rm);
}return rm;
}, 1);

Clazz_newMeth(C$, 'currentManager$javax_swing_JComponent',  function (c) {
return C$.currentManager$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'setCurrentManager$javax_swing_RepaintManager',  function (aRepaintManager) {
if (aRepaintManager != null ) {
$I$(4).appContextPut$O$O(C$.repaintManagerKey, aRepaintManager);
} else {
$I$(4).appContextRemove$O(C$.repaintManagerKey);
}}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
p$1.setMaps.apply(this, []);
this.processingRunnable=Clazz_new_($I$(5,1),[this, null]);
}, 1);

Clazz_newMeth(C$, 'set$java_awt_Component',  function (c) {
this.myComponent=c;
p$1.setMaps.apply(this, []);
}, p$1);

Clazz_newMeth(C$, 'setMaps',  function () {
this.dirtyComponents=Clazz_new_($I$(6,1));
this.tmpDirtyComponents=Clazz_new_($I$(6,1));
this.hwDirtyComponents=Clazz_new_($I$(6,1));
}, p$1);

Clazz_newMeth(C$, 'addInvalidComponent$javax_swing_JComponent',  function (invalidComponent) {
var validateRoot=null;
for (var c=invalidComponent; c != null ; c=c.getParent$()) {
if ((Clazz_instanceOf(c, "javax.swing.CellRendererPane"))) {
return;
}if (p$1.isStandardJComponent$java_awt_Component.apply(this, [c]) && ((c).isValidateRoot$()) ) {
validateRoot=c;
break;
}}
if (validateRoot == null ) {
return;
}var root=null;
for (var c=validateRoot; c != null ; c=c.getParent$()) {
if (!c.isVisible$()) {
return;
}if (c.isWindowOrJSApplet$()) {
root=c;
break;
}}
if (root == null ) {
return;
}if (this.invalidComponents == null ) {
this.invalidComponents=Clazz_new_($I$(7,1));
} else {
var n=this.invalidComponents.size$();
for (var i=0; i < n; i++) {
if (validateRoot === this.invalidComponents.get$I(i) ) {
return;
}}
}this.invalidComponents.add$O(validateRoot);
p$1.scheduleProcessingRunnable$java_awt_Component.apply(this, [root]);
});

Clazz_newMeth(C$, 'isStandardJComponent$java_awt_Component',  function (c) {
return (Clazz_instanceOf(c, "javax.swing.JComponent") && !(Clazz_instanceOf(c, "java.awt.Window")) );
}, p$1);

Clazz_newMeth(C$, 'removeInvalidComponent$javax_swing_JComponent',  function (component) {
if (this.invalidComponents != null ) {
var index=this.invalidComponents.indexOf$O(component);
if (index != -1) {
this.invalidComponents.removeItemAt$I(index);
}}});

Clazz_newMeth(C$, 'addDirtyRegion0$java_awt_Container$I$I$I$I',  function (c, x, y, w, h) {
if (w <= 0 || h <= 0  || c == null   || c.getWidth$() <= 0  || c.getHeight$() <= 0 ) return;
if (p$1.extendDirtyRegion$java_awt_Component$I$I$I$I.apply(this, [c, x, y, w, h])) {
return;
}var root=null;
for (var p=c; p != null ; p=p.getParent$()) {
if (!p.isVisible$() || p.getPeer$() == null  ) {
return;
}if (p.isWindowOrJSApplet$()) {
if (Clazz_instanceOf(p, "java.awt.JSFrame") && ((p).getExtendedState$() & 1) == 1 ) {
return;
}root=p;
break;
}}
if (root == null ) return;
{
if (p$1.extendDirtyRegion$java_awt_Component$I$I$I$I.apply(this, [c, x, y, w, h])) {
return;
}this.dirtyComponents.put$O$O(c, Clazz_new_($I$(2,1).c$$I$I$I$I,[x, y, w, h]));
}p$1.scheduleProcessingRunnable$java_awt_Component.apply(this, [c]);
}, p$1);

Clazz_newMeth(C$, 'addDirtyRegion$javax_swing_JComponent$I$I$I$I',  function (c, x, y, w, h) {
p$1.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [c, x, y, w, h]);
});

Clazz_newMeth(C$, 'addDirtyRegion$java_awt_Window$I$I$I$I',  function (window, x, y, w, h) {
p$1.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [window, x, y, w, h]);
});

Clazz_newMeth(C$, 'addDirtyRegion$java_applet_JSApplet$I$I$I$I',  function (applet, x, y, w, h) {
p$1.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [applet, x, y, w, h]);
});

Clazz_newMeth(C$, 'addDirtyRegion$java_applet_Applet$I$I$I$I',  function (applet, x, y, w, h) {
p$1.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [applet, x, y, w, h]);
});

Clazz_newMeth(C$, 'scheduleHeavyWeightPaints$',  function () {
var hws;
{
if (this.hwDirtyComponents.size$() == 0) {
return;
}hws=this.hwDirtyComponents;
this.hwDirtyComponents=Clazz_new_($I$(6,1));
}for (var hw, $hw = hws.keySet$().iterator$(); $hw.hasNext$()&&((hw=($hw.next$())),1);) {
var dirty=hws.get$O(hw);
if (hw.isWindowOrJSApplet$()) {
this.addDirtyRegion$java_awt_Window$I$I$I$I(hw, dirty.x, dirty.y, dirty.width, dirty.height);
} else {
p$1.addDirtyRegion0$java_awt_Container$I$I$I$I.apply(this, [hw, dirty.x, dirty.y, dirty.width, dirty.height]);
}}
});

Clazz_newMeth(C$, 'nativeAddDirtyRegion$sun_awt_AppContext$java_awt_Container$I$I$I$I',  function (appContext, c, x, y, w, h) {
if (w > 0 && h > 0 ) {
{
var dirty=this.hwDirtyComponents.get$O(c);
if (dirty == null ) {
this.hwDirtyComponents.put$O$O(c, Clazz_new_($I$(2,1).c$$I$I$I$I,[x, y, w, h]));
} else {
this.hwDirtyComponents.put$O$O(c, $I$(4).computeUnion$I$I$I$I$java_awt_Rectangle(x, y, w, h, dirty));
}}p$1.scheduleProcessingRunnable$sun_awt_AppContext.apply(this, [appContext]);
}});

Clazz_newMeth(C$, 'extendDirtyRegion$java_awt_Component$I$I$I$I',  function (c, x, y, w, h) {
var r=this.dirtyComponents.get$O(c);
if (r != null ) {
$I$(4).computeUnion$I$I$I$I$java_awt_Rectangle(x, y, w, h, r);
return true;
}return false;
}, p$1);

Clazz_newMeth(C$, 'getDirtyRegion$javax_swing_JComponent',  function (aComponent) {
var r=null;
{
r=this.dirtyComponents.get$O(aComponent);
}if (r == null ) return Clazz_new_($I$(2,1).c$$I$I$I$I,[0, 0, 0, 0]);
 else return Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[r]);
});

Clazz_newMeth(C$, 'markCompletelyDirty$javax_swing_JComponent',  function (aComponent) {
this.addDirtyRegion$javax_swing_JComponent$I$I$I$I(aComponent, 0, 0, 2147483647, 2147483647);
});

Clazz_newMeth(C$, 'markCompletelyClean$javax_swing_JComponent',  function (aComponent) {
{
this.dirtyComponents.remove$O(aComponent);
}});

Clazz_newMeth(C$, 'isCompletelyDirty$javax_swing_JComponent',  function (aComponent) {
var r;
r=this.getDirtyRegion$javax_swing_JComponent(aComponent);
if (r.width == 2147483647 && r.height == 2147483647 ) return true;
 else return false;
});

Clazz_newMeth(C$, 'validateInvalidComponents$',  function () {
var ic;
{
if (this.invalidComponents == null ) {
return;
}ic=this.invalidComponents;
this.invalidComponents=null;
}var n=ic.size$();
for (var i=0; i < n; i++) {
var c=ic.get$I(i);
c.validate$();
}
});

Clazz_newMeth(C$, 'prePaintDirtyRegions$',  function () {
var dirtyComponents;
var runnableList;
{
dirtyComponents=this.dirtyComponents;
runnableList=this.runnableList;
this.runnableList=null;
}if (runnableList != null ) {
for (var runnable, $runnable = runnableList.iterator$(); $runnable.hasNext$()&&((runnable=($runnable.next$())),1);) {
runnable.run$();
}
}this.paintDirtyRegions$();
if (dirtyComponents.size$() > 0) {
p$1.paintDirtyRegions1$java_util_Map.apply(this, [dirtyComponents]);
}});

Clazz_newMeth(C$, 'updateWindows$java_util_Map',  function (dirtyComponents) {
var toolkit=$I$(8).getDefaultToolkit$();
if (!(Clazz_instanceOf(toolkit, "sun.awt.SunToolkit") && (toolkit).needUpdateWindow$() )) {
return dirtyComponents;
}var windows=Clazz_new_($I$(9,1));
var dirtyComps=dirtyComponents.keySet$();
for (var it=dirtyComps.iterator$(); it.hasNext$(); ) {
var dirty=it.next$();
var window=dirty.isWindowOrJSApplet$() ? dirty : $I$(4).getWindowAncestor$java_awt_Component(dirty);
if (window != null  && !window.isOpaque$() ) {
it.remove$();
windows.add$O(window);
}}
return dirtyComponents;
}, p$1);

Clazz_newMeth(C$, 'paintDirtyRegions$',  function () {
{
var tmp=this.tmpDirtyComponents;
this.tmpDirtyComponents=this.dirtyComponents;
this.dirtyComponents=tmp;
this.dirtyComponents.clear$();
}p$1.paintDirtyRegions1$java_util_Map.apply(this, [this.tmpDirtyComponents]);
});

Clazz_newMeth(C$, 'paintDirtyRegions1$java_util_Map',  function (tmpDirtyComponents) {
if (tmpDirtyComponents.isEmpty$()) {
return;
}p$1.updateWindows$java_util_Map.apply(this, [tmpDirtyComponents]);
var roots=Clazz_new_($I$(7,1));
for (var dirty, $dirty = tmpDirtyComponents.keySet$().iterator$(); $dirty.hasNext$()&&((dirty=($dirty.next$())),1);) {
this.collectDirtyComponents$java_util_Map$java_awt_Component$java_util_List(tmpDirtyComponents, dirty, roots);
}
var count=roots.size$();
this.painting=true;
try {
for (var j=0; j < count; j++) {
var i=j;
var dirtyComponent=roots.get$I(j);
var rect=tmpDirtyComponents.get$O(dirtyComponent);
var localBoundsH=dirtyComponent.getHeight$();
var localBoundsW=dirtyComponent.getWidth$();
$I$(4).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, localBoundsW, localBoundsH, rect);
if (p$1.isStandardJComponent$java_awt_Component.apply(this, [dirtyComponent])) {
(dirtyComponent).paintImmediately$I$I$I$I(rect.x, rect.y, rect.width, rect.height);
} else if (dirtyComponent.isShowing$()) {
var g=$I$(10).safelyGetGraphics$java_awt_Component$java_awt_Component(dirtyComponent, dirtyComponent);
if (g != null ) {
try {
(dirtyComponent).秘paintWithBackgroundCheck$java_awt_Graphics(g);
} finally {
g.dispose$();
}
}}if (this.repaintRoot != null ) {
p$1.adjustRoots$javax_swing_JComponent$javajs_util_Lst$I.apply(this, [this.repaintRoot, roots, i + 1]);
count=roots.size$();
this.repaintRoot.paintImmediately$I$I$I$I(0, 0, this.repaintRoot.getWidth$(), this.repaintRoot.getHeight$());
this.repaintRoot=null;
}}
} finally {
this.painting=false;
}
tmpDirtyComponents.clear$();
}, p$1);

Clazz_newMeth(C$, 'adjustRoots$javax_swing_JComponent$javajs_util_Lst$I',  function (root, roots, index) {
for (var i=roots.size$() - 1; i >= index; i--) {
var c=roots.get$I(i);
for (; ; ) {
if (c === root  || c == null   || !p$1.isStandardJComponent$java_awt_Component.apply(this, [c]) ) {
break;
}c=c.getParent$();
}
if (c === root ) {
roots.removeItemAt$I(i);
}}
}, p$1);

Clazz_newMeth(C$, 'collectDirtyComponents$java_util_Map$java_awt_Component$java_util_List',  function (dirtyComponents, dirtyComponent, roots) {
var dx;
var dy;
var rootDx;
var rootDy;
var component;
var rootDirtyComponent;
var parent;
component=rootDirtyComponent=dirtyComponent;
var x=dirtyComponent.getX$();
var y=dirtyComponent.getY$();
var w=dirtyComponent.getWidth$();
var h=dirtyComponent.getHeight$();
dx=rootDx=0;
dy=rootDy=0;
this.tmp.setBounds$java_awt_Rectangle(dirtyComponents.get$O(dirtyComponent));
$I$(4).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, w, h, this.tmp);
if (this.tmp.isEmpty$()) {
return;
}for (; ; ) {
if (!p$1.isStandardJComponent$java_awt_Component.apply(this, [component])) break;
parent=component.getParent$();
if (parent == null ) break;
component=parent;
dx+=x;
dy+=y;
this.tmp.x+=x;
this.tmp.y+=y;
x=component.getX$();
y=component.getY$();
w=component.getWidth$();
h=component.getHeight$();
this.tmp=$I$(4).computeIntersection$I$I$I$I$java_awt_Rectangle(0, 0, w, h, this.tmp);
if (this.tmp.isEmpty$()) {
return;
}if (dirtyComponents.get$O(component) != null ) {
rootDirtyComponent=component;
rootDx=dx;
rootDy=dy;
}}
if (dirtyComponent !== rootDirtyComponent ) {
var r;
this.tmp.x+=rootDx - dx;
this.tmp.y+=rootDy - dy;
r=dirtyComponents.get$O(rootDirtyComponent);
$I$(4).computeUnion$I$I$I$I$java_awt_Rectangle(this.tmp.x, this.tmp.y, this.tmp.width, this.tmp.height, r);
}if (!roots.contains$O(rootDirtyComponent)) roots.add$O(rootDirtyComponent);
});

Clazz_newMeth(C$, 'toString',  function () {
var sb=Clazz_new_($I$(11,1));
if (this.dirtyComponents != null ) sb.append$S("" + this.dirtyComponents);
return sb.toString();
});

Clazz_newMeth(C$, 'getOffscreenBuffer$java_awt_Component$I$I',  function (c, proposedWidth, proposedHeight) {
return null;
});

Clazz_newMeth(C$, 'getVolatileOffscreenBuffer$java_awt_Component$I$I',  function (c, proposedWidth, proposedHeight) {
var config=c.getGraphicsConfiguration$();
var maxSize=this.getDoubleBufferMaximumSize$();
var width=proposedWidth < 1 ? 1 : (proposedWidth > maxSize.width ? maxSize.width : proposedWidth);
var height=proposedHeight < 1 ? 1 : (proposedHeight > maxSize.height ? maxSize.height : proposedHeight);
var image=this.volatileMap.get$O(config);
if (image == null  || image.getWidth$() < width  || image.getHeight$() < height ) {
if (image != null ) {
image.flush$();
}image=config.createCompatibleVolatileImage$I$I(width, height);
this.volatileMap.put$O$O(config, image);
}return image;
});

Clazz_newMeth(C$, 'setDoubleBufferMaximumSize$java_awt_Dimension',  function (d) {
});

Clazz_newMeth(C$, 'getDoubleBufferMaximumSize$',  function () {
return null;
});

Clazz_newMeth(C$, 'setDoubleBufferingEnabled$Z',  function (aFlag) {
});

Clazz_newMeth(C$, 'resetDoubleBuffer$',  function () {
});

Clazz_newMeth(C$, 'resetVolatileDoubleBuffer$java_awt_GraphicsConfiguration',  function (gc) {
var image=this.volatileMap.remove$O(gc);
if (image != null ) {
image.flush$();
}});

Clazz_newMeth(C$, 'useVolatileDoubleBuffer$',  function () {
return C$.volatileImageBufferEnabled;
});

Clazz_newMeth(C$, 'isPaintingThread',  function () {
return ($I$(12).currentThread$() === this.paintThread );
}, p$1);

Clazz_newMeth(C$, 'paint$javax_swing_JComponent$javax_swing_JComponent$java_awt_Graphics$I$I$I$I',  function (paintingComponent, bufferComponent, g, x, y, w, h) {
paintingComponent.paintToOffscreen$java_awt_Graphics$I$I$I$I$I$I(g, x, y, w, h, x + w, y + h);
});

Clazz_newMeth(C$, 'beginPaint$',  function () {
var multiThreadedPaint=false;
var paintDepth=0;
var currentThread=$I$(12).currentThread$();
{
paintDepth=this.paintDepth;
if (this.paintThread == null  || currentThread === this.paintThread  ) {
this.paintThread=currentThread;
++this.paintDepth;
} else {
multiThreadedPaint=true;
}}});

Clazz_newMeth(C$, 'endPaint$',  function () {
if (p$1.isPaintingThread.apply(this, [])) {
}});

Clazz_newMeth(C$, 'doubleBufferingChanged$javax_swing_JRootPane',  function (rootPane) {
});

Clazz_newMeth(C$, 'scheduleProcessingRunnable$java_awt_Component',  function (c) {
p$1.scheduleProcessingRunnable$sun_awt_AppContext.apply(this, [c.getAppContext$()]);
}, p$1);

Clazz_newMeth(C$, 'scheduleProcessingRunnable$sun_awt_AppContext',  function (context) {
if (this.processingRunnable.markPending$()) {
if ($I$(13).checkJ2SFlag$S("_debugPaint")) System.out.println$S("RepaintManager\n invalid:" + this.invalidComponents + "\n dirty:" + this.dirtyComponents );


$I$(14).getSystemEventQueueImplPP$sun_awt_AppContext(context).postEvent$java_awt_AWTEvent(Clazz_new_([$I$(8).getDefaultToolkit$(), 1200, this.processingRunnable, null, false],$I$(15,1).c$$O$I$Runnable$O$Z));
}}, p$1);

C$.$static$=function(){C$.$static$=0;
C$.repaintManagerKey=Clazz_getClass(C$);
C$.volatileImageBufferEnabled=true;
{
C$.volatileImageBufferEnabled=false;
var headless=false;
if (C$.volatileImageBufferEnabled && headless ) {
C$.volatileImageBufferEnabled=false;
}C$.HANDLE_TOP_LEVEL_PAINT=true;
};
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.RepaintManager, "ProcessingRunnable", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'Runnable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['pending']]]

Clazz_newMeth(C$, 'markPending$',  function () {
if (!this.pending) {
this.pending=true;
return true;
}return false;
});

Clazz_newMeth(C$, 'run$',  function () {
{
this.pending=false;
}this.b$['javax.swing.RepaintManager'].scheduleHeavyWeightPaints$.apply(this.b$['javax.swing.RepaintManager'], []);
this.b$['javax.swing.RepaintManager'].validateInvalidComponents$.apply(this.b$['javax.swing.RepaintManager'], []);
this.b$['javax.swing.RepaintManager'].prePaintDirtyRegions$.apply(this.b$['javax.swing.RepaintManager'], []);
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "RootPaneContainer");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:03 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Scrollable");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'javax.swing.SwingContainerOrderFocusTraversalPolicy','java.util.ArrayList','java.util.Collections']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SortingFocusTraversalPolicy", null, 'javax.swing.InternalFrameFocusTraversalPolicy');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.implicitDownCycleTraversal=true;
this.FORWARD_TRAVERSAL=0;
this.BACKWARD_TRAVERSAL=1;
},1);

C$.$fields$=[['Z',['implicitDownCycleTraversal'],'I',['FORWARD_TRAVERSAL','BACKWARD_TRAVERSAL'],'O',['comparator','java.util.Comparator','cachedRoot','java.awt.Container','cachedCycle','java.util.List']]
,['O',['fitnessTestPolicy','javax.swing.SwingContainerOrderFocusTraversalPolicy']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Comparator',  function (comparator) {
Clazz_super_(C$, this);
this.comparator=comparator;
}, 1);

Clazz_newMeth(C$, 'getFocusTraversalCycle$java_awt_Container',  function (aContainer) {
var cycle=Clazz_new_($I$(2,1));
p$1.enumerateAndSortCycle$java_awt_Container$java_util_List.apply(this, [aContainer, cycle]);
return cycle;
}, p$1);

Clazz_newMeth(C$, 'getComponentIndex$java_util_List$java_awt_Component',  function (cycle, aComponent) {
var index;
try {
index=$I$(3).binarySearch$java_util_List$O$java_util_Comparator(cycle, aComponent, this.comparator);
} catch (e) {
if (Clazz_exceptionOf(e,"ClassCastException")){
return -1;
} else {
throw e;
}
}
if (index < 0) {
index=cycle.indexOf$O(aComponent);
}return index;
}, p$1);

Clazz_newMeth(C$, 'enumerateAndSortCycle$java_awt_Container$java_util_List',  function (focusCycleRoot, cycle) {
if (focusCycleRoot.isShowing$()) {
p$1.enumerateCycle$java_awt_Container$java_util_List.apply(this, [focusCycleRoot, cycle]);
$I$(3).sort$java_util_List$java_util_Comparator(cycle, this.comparator);
}}, p$1);

Clazz_newMeth(C$, 'enumerateCycle$java_awt_Container$java_util_List',  function (container, cycle) {
if (!(container.isVisible$() && container.isDisplayable$() )) {
return;
}cycle.add$O(container);
var components=container.getComponents$();
for (var comp, $comp = 0, $$comp = components; $comp<$$comp.length&&((comp=($$comp[$comp])),1);$comp++) {
if (Clazz_instanceOf(comp, "java.awt.Container")) {
var cont=comp;
if (!cont.isFocusCycleRoot$() && !cont.isFocusTraversalPolicyProvider$() && !((Clazz_instanceOf(cont, "javax.swing.JComponent")) && (cont).isManagingFocus$() )  ) {
p$1.enumerateCycle$java_awt_Container$java_util_List.apply(this, [cont, cycle]);
continue;
}}cycle.add$O(comp);
}
}, p$1);

Clazz_newMeth(C$, 'getTopmostProvider$java_awt_Container$java_awt_Component',  function (focusCycleRoot, aComponent) {
var aCont=aComponent.getParent$();
var ftp=null;
while (aCont !== focusCycleRoot  && aCont != null  ){
if (aCont.isFocusTraversalPolicyProvider$()) {
ftp=aCont;
}aCont=aCont.getParent$();
}
if (aCont == null ) {
return null;
}return ftp;
});

Clazz_newMeth(C$, 'getComponentDownCycle$java_awt_Component$I',  function (comp, traversalDirection) {
var retComp=null;
if (Clazz_instanceOf(comp, "java.awt.Container")) {
var cont=comp;
if (cont.isFocusCycleRoot$()) {
if (this.getImplicitDownCycleTraversal$()) {
retComp=cont.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(cont);
} else {
return null;
}} else if (cont.isFocusTraversalPolicyProvider$()) {
retComp=(traversalDirection == 0 ? cont.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(cont) : cont.getFocusTraversalPolicy$().getLastComponent$java_awt_Container(cont));
}}return retComp;
}, p$1);

Clazz_newMeth(C$, 'getComponentAfter$java_awt_Container$java_awt_Component',  function (aContainer, aComponent) {
if (aContainer == null  || aComponent == null  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer and aComponent cannot be null"]);
}if (!aContainer.isFocusTraversalPolicyProvider$() && !aContainer.isFocusCycleRoot$() ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer should be focus cycle root or focus traversal policy provider"]);
} else if (aContainer.isFocusCycleRoot$() && !aComponent.isFocusCycleRoot$java_awt_Container(aContainer) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer is not a focus cycle root of aComponent"]);
}var comp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [aComponent, 0]);
if (comp != null ) {
return comp;
}var provider=this.getTopmostProvider$java_awt_Container$java_awt_Component(aContainer, aComponent);
if (provider != null ) {
var policy=provider.getFocusTraversalPolicy$();
var afterComp=policy.getComponentAfter$java_awt_Container$java_awt_Component(provider, aComponent);
if (afterComp != null ) {
comp=afterComp;
}aComponent=provider;
}if (comp == null ) {
var cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
var index=p$1.getComponentIndex$java_util_List$java_awt_Component.apply(this, [cycle, aComponent]);
if (index < 0) {
comp=this.getFirstComponent$java_awt_Container(aContainer);
} else {
for (index++; index < cycle.size$(); index++) {
comp=cycle.get$I(index);
if (this.accept$java_awt_Component(comp)) {
break;
} else if ((comp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [comp, 0])) != null ) {
break;
}}
}if (comp == null  && aContainer.isFocusCycleRoot$() ) {
this.cachedRoot=aContainer;
this.cachedCycle=cycle;
comp=this.getFirstComponent$java_awt_Container(aContainer);
this.cachedRoot=null;
this.cachedCycle=null;
}}return comp;
});

Clazz_newMeth(C$, 'getComponentBefore$java_awt_Container$java_awt_Component',  function (aContainer, aComponent) {
if (aContainer == null  || aComponent == null  ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer and aComponent cannot be null"]);
}if (!aContainer.isFocusTraversalPolicyProvider$() && !aContainer.isFocusCycleRoot$() ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer should be focus cycle root or focus traversal policy provider"]);
} else if (aContainer.isFocusCycleRoot$() && !aComponent.isFocusCycleRoot$java_awt_Container(aContainer) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer is not a focus cycle root of aComponent"]);
}var provider=this.getTopmostProvider$java_awt_Container$java_awt_Component(aContainer, aComponent);
if (provider != null ) {
var policy=provider.getFocusTraversalPolicy$();
var beforeComp=policy.getComponentBefore$java_awt_Container$java_awt_Component(provider, aComponent);
if (beforeComp != null ) {
return beforeComp;
}aComponent=provider;
if (this.accept$java_awt_Component(aComponent)) {
return aComponent;
}}var cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
var index=p$1.getComponentIndex$java_util_List$java_awt_Component.apply(this, [cycle, aComponent]);
if (index < 0) {
return this.getLastComponent$java_awt_Container(aContainer);
}var comp;
var tryComp;
for (index--; index >= 0; index--) {
comp=cycle.get$I(index);
if (comp !== aContainer  && (tryComp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [comp, 1])) != null  ) {
return tryComp;
} else if (this.accept$java_awt_Component(comp)) {
return comp;
}}
if (aContainer.isFocusCycleRoot$()) {
this.cachedRoot=aContainer;
this.cachedCycle=cycle;
comp=this.getLastComponent$java_awt_Container(aContainer);
this.cachedRoot=null;
this.cachedCycle=null;
return comp;
}return null;
});

Clazz_newMeth(C$, 'getFirstComponent$java_awt_Container',  function (aContainer) {
var cycle;
if (aContainer == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer cannot be null"]);
}if (this.cachedRoot === aContainer ) {
cycle=this.cachedCycle;
} else {
cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
}if (cycle.size$() == 0) {
return null;
}for (var comp, $comp = cycle.iterator$(); $comp.hasNext$()&&((comp=($comp.next$())),1);) {
if (this.accept$java_awt_Component(comp)) {
return comp;
} else if (comp !== aContainer  && (comp=p$1.getComponentDownCycle$java_awt_Component$I.apply(this, [comp, 0])) != null  ) {
return comp;
}}
return null;
});

Clazz_newMeth(C$, 'getLastComponent$java_awt_Container',  function (aContainer) {
var cycle;
if (aContainer == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["aContainer cannot be null"]);
}if (this.cachedRoot === aContainer ) {
cycle=this.cachedCycle;
} else {
cycle=p$1.getFocusTraversalCycle$java_awt_Container.apply(this, [aContainer]);
}if (cycle.size$() == 0) {
return null;
}for (var i=cycle.size$() - 1; i >= 0; i--) {
var comp=cycle.get$I(i);
if (this.accept$java_awt_Component(comp)) {
return comp;
} else if (Clazz_instanceOf(comp, "java.awt.Container") && comp !== aContainer  ) {
var cont=comp;
if (cont.isFocusTraversalPolicyProvider$()) {
return cont.getFocusTraversalPolicy$().getLastComponent$java_awt_Container(cont);
}}}
return null;
});

Clazz_newMeth(C$, 'getDefaultComponent$java_awt_Container',  function (aContainer) {
return this.getFirstComponent$java_awt_Container(aContainer);
});

Clazz_newMeth(C$, 'setImplicitDownCycleTraversal$Z',  function (implicitDownCycleTraversal) {
this.implicitDownCycleTraversal=implicitDownCycleTraversal;
});

Clazz_newMeth(C$, 'getImplicitDownCycleTraversal$',  function () {
return this.implicitDownCycleTraversal;
});

Clazz_newMeth(C$, 'setComparator$java_util_Comparator',  function (comparator) {
this.comparator=comparator;
});

Clazz_newMeth(C$, 'getComparator$',  function () {
return this.comparator;
});

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (aComponent) {
return C$.fitnessTestPolicy.accept$java_awt_Component(aComponent);
});

C$.$static$=function(){C$.$static$=0;
C$.fitnessTestPolicy=Clazz_new_($I$(1,1));
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "SwingConstants");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SwingContainerOrderFocusTraversalPolicy", null, 'java.awt.ContainerOrderFocusTraversalPolicy');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (aComponent) {
return C$.superclazz.prototype.accept$java_awt_Component.apply(this, [aComponent]);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SwingDefaultFocusTraversalPolicy", null, 'java.awt.DefaultFocusTraversalPolicy');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'accept$java_awt_Component',  function (aComponent) {
return C$.superclazz.prototype.accept$java_awt_Component.apply(this, [aComponent]);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:02 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SwingPaintEventDispatcher", null, 'sun.awt.PaintEventDispatcher');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['Z',['ERASE_BACKGROUND']]]

Clazz_newMeth(C$, 'createPaintEvent$java_awt_Component$I$I$I$I',  function (component, x, y, w, h) {
return C$.superclazz.prototype.createPaintEvent$java_awt_Component$I$I$I$I.apply(this, [component, x, y, w, h]);
});

Clazz_newMeth(C$, 'shouldDoNativeBackgroundErase$java_awt_Component',  function (c) {
return C$.ERASE_BACKGROUND || !(Clazz_instanceOf(c, "javax.swing.RootPaneContainer")) ;
});

Clazz_newMeth(C$, 'queueSurfaceDataReplacing$java_awt_Component$Runnable',  function (c, r) {
if (Clazz_instanceOf(c, "javax.swing.RootPaneContainer")) {
return true;
}return C$.superclazz.prototype.queueSurfaceDataReplacing$java_awt_Component$Runnable.apply(this, [c, r]);
});

C$.$static$=function(){C$.$static$=0;
{
C$.ERASE_BACKGROUND=true;
};
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,['javax.swing.TransferHandler','.SwingDropTarget'],'java.awt.Rectangle','java.awt.Point','Error','java.awt.JSComponent','java.awt.event.MouseWheelEvent','javax.swing.event.MenuDragMouseEvent','java.awt.event.MouseEvent','sun.swing.SwingUtilities2','swingjs.api.js.DOMNode','javax.swing.CellRendererPane','java.awt.EventQueue','java.awt.KeyboardFocusManager','javax.swing.JComponent','java.awt.event.ActionEvent','swingjs.JSToolkit',['javax.swing.SwingUtilities','.SharedOwnerFrame'],'sun.awt.AppContext','Thread']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SwingUtilities", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'javax.swing.SwingConstants');
C$.$classes$=[['SharedOwnerFrame',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'installSwingDropTargetAsNecessary$java_awt_Component$javax_swing_TransferHandler',  function (c, t) {
var dropHandler=c.getDropTarget$();
if ((dropHandler == null ) || (Clazz_instanceOf(dropHandler, "javax.swing.plaf.UIResource")) ) {
if (t == null ) {
c.setDropTarget$java_awt_dnd_DropTarget(null);
} else {
c.setDropTarget$java_awt_dnd_DropTarget(Clazz_new_($I$(1,1).c$$java_awt_Component,[c]));
}}}, 1);

Clazz_newMeth(C$, 'isRectangleContainingRectangle$java_awt_Rectangle$java_awt_Rectangle',  function (a, b) {
if (b.x >= a.x && (b.x + b.width) <= (a.x + a.width)  && b.y >= a.y  && (b.y + b.height) <= (a.y + a.height) ) {
return true;
}return false;
}, 1);

Clazz_newMeth(C$, 'getLocalBounds$java_awt_Component',  function (aComponent) {
var b=Clazz_new_([aComponent.getBounds$()],$I$(2,1).c$$java_awt_Rectangle);
b.x=b.y=0;
return b;
}, 1);

Clazz_newMeth(C$, 'getWindowAncestor$java_awt_Component',  function (c) {
for (var p=c.getParent$(); p != null ; p=p.getParent$()) {
if (p.isWindowOrJSApplet$()) {
return p;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'convertScreenLocationToParent$java_awt_Container$I$I',  function (parent, x, y) {
for (var p=parent; p != null ; p=p.getParent$()) {
if (p != null  && p.isWindowOrJSApplet$() ) {
var point=Clazz_new_($I$(3,1).c$$I$I,[x, y]);
C$.convertPointFromScreen$java_awt_Point$java_awt_Component(point, parent);
return point;
}}
throw Clazz_new_($I$(4,1).c$$S,["convertScreenLocationToParent: no window ancestor"]);
}, 1);

Clazz_newMeth(C$, 'convertPoint$java_awt_Component$java_awt_Point$java_awt_Component',  function (source, aPoint, destination) {
var p;
if (source == null  && destination == null  ) return aPoint;
if (source == null ) {
source=C$.getWindowAncestor$java_awt_Component(destination);
if (source == null ) throw Clazz_new_($I$(4,1).c$$S,["Source component not connected to component tree hierarchy"]);
}p=Clazz_new_($I$(3,1).c$$java_awt_Point,[aPoint]);
C$.convertPointToScreen$java_awt_Point$java_awt_Component(p, source);
if (destination == null ) {
destination=C$.getWindowAncestor$java_awt_Component(source);
if (destination == null ) throw Clazz_new_($I$(4,1).c$$S,["Destination component not connected to component tree hierarchy"]);
}C$.convertPointFromScreen$java_awt_Point$java_awt_Component(p, destination);
return p;
}, 1);

Clazz_newMeth(C$, 'convertPoint$java_awt_Component$I$I$java_awt_Component',  function (source, x, y, destination) {
var point=Clazz_new_($I$(3,1).c$$I$I,[x, y]);
return C$.convertPoint$java_awt_Component$java_awt_Point$java_awt_Component(source, point, destination);
}, 1);

Clazz_newMeth(C$, 'convertRectangle$java_awt_Component$java_awt_Rectangle$java_awt_Component',  function (source, aRectangle, destination) {
var point=Clazz_new_($I$(3,1).c$$I$I,[aRectangle.x, aRectangle.y]);
point=C$.convertPoint$java_awt_Component$java_awt_Point$java_awt_Component(source, point, destination);
return Clazz_new_($I$(2,1).c$$I$I$I$I,[point.x, point.y, aRectangle.width, aRectangle.height]);
}, 1);

Clazz_newMeth(C$, 'getAncestorOfClass$Class$java_awt_Component',  function (c, comp) {
if (comp == null  || c == null  ) return null;
var parent=comp.getParent$();
while (parent != null  && !(c.isInstance$O(parent)) )parent=parent.getParent$();

return parent;
}, 1);

Clazz_newMeth(C$, 'getAncestorNamed$S$java_awt_Component',  function (name, comp) {
if (comp == null  || name == null  ) return null;
var parent=comp.getParent$();
while (parent != null  && !(name.equals$O(parent.getName$())) )parent=parent.getParent$();

return parent;
}, 1);

Clazz_newMeth(C$, 'getDeepestComponentAt$java_awt_Component$I$I',  function (parent, x, y) {
if (!parent.contains$I$I(x, y)) {
return null;
}if (Clazz_instanceOf(parent, "java.awt.Container")) {
var components=$I$(5).秘getChildArray$java_awt_Container(parent);
for (var i=0, n=(parent).getComponentCount$(); i < n; i++) {
var comp=components[i];
if (comp != null  && comp.isVisible$() ) {
var loc=comp.getLocation$();
if (Clazz_instanceOf(comp, "java.awt.Container")) {
comp=C$.getDeepestComponentAt$java_awt_Component$I$I(comp, x - loc.x, y - loc.y);
} else {
comp=comp.getComponentAt$I$I(x - loc.x, y - loc.y);
}if (comp != null  && comp.isVisible$() ) {
return comp;
}}}
}return parent;
}, 1);

Clazz_newMeth(C$, 'convertMouseEvent$java_awt_Component$java_awt_event_MouseEvent$java_awt_Component',  function (source, sourceEvent, destination) {
var p=C$.convertPoint$java_awt_Component$java_awt_Point$java_awt_Component(source, Clazz_new_([sourceEvent.getX$(), sourceEvent.getY$()],$I$(3,1).c$$I$I), destination);
var newSource;
if (destination != null ) newSource=destination;
 else newSource=source;
var newEvent;
if (Clazz_instanceOf(sourceEvent, "java.awt.event.MouseWheelEvent")) {
var sourceWheelEvent=sourceEvent;
newEvent=Clazz_new_([newSource, sourceWheelEvent.getID$(), sourceWheelEvent.getWhen$(), sourceWheelEvent.getModifiers$(), p.x, p.y, sourceWheelEvent.getXOnScreen$(), sourceWheelEvent.getYOnScreen$(), sourceWheelEvent.getClickCount$(), sourceWheelEvent.isPopupTrigger$(), sourceWheelEvent.getScrollType$(), sourceWheelEvent.getScrollAmount$(), sourceWheelEvent.getWheelRotation$()],$I$(6,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I$I$I);
} else if (Clazz_instanceOf(sourceEvent, "javax.swing.event.MenuDragMouseEvent")) {
var sourceMenuDragEvent=sourceEvent;
newEvent=Clazz_new_([newSource, sourceMenuDragEvent.getID$(), sourceMenuDragEvent.getWhen$(), sourceMenuDragEvent.getModifiers$(), p.x, p.y, sourceMenuDragEvent.getXOnScreen$(), sourceMenuDragEvent.getYOnScreen$(), sourceMenuDragEvent.getClickCount$(), sourceMenuDragEvent.isPopupTrigger$(), sourceMenuDragEvent.getPath$(), sourceMenuDragEvent.getMenuSelectionManager$()],$I$(7,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$javax_swing_MenuElementA$javax_swing_MenuSelectionManager);
} else {
newEvent=Clazz_new_([newSource, sourceEvent.getID$(), sourceEvent.getWhen$(), sourceEvent.getModifiers$(), p.x, p.y, sourceEvent.getXOnScreen$(), sourceEvent.getYOnScreen$(), sourceEvent.getClickCount$(), sourceEvent.isPopupTrigger$(), 0],$I$(8,1).c$$java_awt_Component$I$J$I$I$I$I$I$I$Z$I);
}return newEvent;
}, 1);

Clazz_newMeth(C$, 'convertPointToScreen$java_awt_Point$java_awt_Component',  function (p, c) {
var x;
var y;
var done=false;
do {
if ((done=c.isWindowOrJSApplet$())) {
try {
var pp=c.getLocationOnScreen$();
x=pp.x;
y=pp.y;
} catch (icse) {
if (Clazz_exceptionOf(icse,"java.awt.IllegalComponentStateException")){
x=c.getX$();
y=c.getY$();
} else {
throw icse;
}
}
} else {
x=c.getX$();
y=c.getY$();
}p.x+=x;
p.y+=y;
c=c.getParent$();
} while (c != null  && !done );
}, 1);

Clazz_newMeth(C$, 'convertPointFromScreen$java_awt_Point$java_awt_Component',  function (p, c) {
var x;
var y;
do {
if (c.isWindowOrJSApplet$()) {
try {
var pp=c.getLocationOnScreen$();
x=pp.x;
y=pp.y;
} catch (icse) {
if (Clazz_exceptionOf(icse,"java.awt.IllegalComponentStateException")){
x=c.getX$();
y=c.getY$();
} else {
throw icse;
}
}
} else {
x=c.getX$();
y=c.getY$();
}p.x-=x;
p.y-=y;
if (c.isWindowOrJSApplet$()) break;
c=c.getParent$();
} while (c != null );
}, 1);

Clazz_newMeth(C$, 'windowForComponent$java_awt_Component',  function (c) {
return C$.getWindowAncestor$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'isDescendingFrom$java_awt_Component$java_awt_Component',  function (a, b) {
if (a === b ) return true;
for (var p=a.getParent$(); p != null ; p=p.getParent$()) if (p === b ) return true;

return false;
}, 1);

Clazz_newMeth(C$, 'computeIntersection$I$I$I$I$java_awt_Rectangle',  function (x, y, width, height, dest) {
var x1=(x > dest.x) ? x : dest.x;
var x2=((x + width) < (dest.x + dest.width)) ? (x + width) : (dest.x + dest.width);
var y1=(y > dest.y) ? y : dest.y;
var y2=((y + height) < (dest.y + dest.height) ? (y + height) : (dest.y + dest.height));
dest.x=x1;
dest.y=y1;
dest.width=x2 - x1;
dest.height=y2 - y1;
if (dest.width < 0 || dest.height < 0 ) {
dest.x=dest.y=dest.width=dest.height=0;
}return dest;
}, 1);

Clazz_newMeth(C$, 'computeUnion$I$I$I$I$java_awt_Rectangle',  function (x, y, width, height, dest) {
var x1=(x < dest.x) ? x : dest.x;
var x2=((x + width) > (dest.x + dest.width)) ? (x + width) : (dest.x + dest.width);
var y1=(y < dest.y) ? y : dest.y;
var y2=((y + height) > (dest.y + dest.height)) ? (y + height) : (dest.y + dest.height);
dest.x=x1;
dest.y=y1;
dest.width=(x2 - x1);
dest.height=(y2 - y1);
return dest;
}, 1);

Clazz_newMeth(C$, 'computeDifference$java_awt_Rectangle$java_awt_Rectangle',  function (rectA, rectB) {
if (rectB == null  || !rectA.intersects$java_awt_Rectangle(rectB)  || C$.isRectangleContainingRectangle$java_awt_Rectangle$java_awt_Rectangle(rectB, rectA) ) {
return Clazz_array($I$(2), [0]);
}var t=Clazz_new_($I$(2,1));
var a=null;
var b=null;
var c=null;
var d=null;
var result;
var rectCount=0;
if (C$.isRectangleContainingRectangle$java_awt_Rectangle$java_awt_Rectangle(rectA, rectB)) {
t.x=rectA.x;
t.y=rectA.y;
t.width=rectB.x - rectA.x;
t.height=rectA.height;
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.x=rectB.x;
t.y=rectA.y;
t.width=rectB.width;
t.height=rectB.y - rectA.y;
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.x=rectB.x;
t.y=rectB.y + rectB.height;
t.width=rectB.width;
t.height=rectA.y + rectA.height - (rectB.y + rectB.height);
if (t.width > 0 && t.height > 0 ) {
c=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.x=rectB.x + rectB.width;
t.y=rectA.y;
t.width=rectA.x + rectA.width - (rectB.x + rectB.width);
t.height=rectA.height;
if (t.width > 0 && t.height > 0 ) {
d=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}} else {
if (rectB.x <= rectA.x && rectB.y <= rectA.y ) {
if ((rectB.x + rectB.width) > (rectA.x + rectA.width)) {
t.x=rectA.x;
t.y=rectB.y + rectB.height;
t.width=rectA.width;
t.height=rectA.y + rectA.height - (rectB.y + rectB.height);
if (t.width > 0 && t.height > 0 ) {
a=t;
++rectCount;
}} else if ((rectB.y + rectB.height) > (rectA.y + rectA.height)) {
t.setBounds$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
a=t;
++rectCount;
}} else {
t.setBounds$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), (rectB.y + rectB.height) - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.setBounds$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}}} else if (rectB.x <= rectA.x && (rectB.y + rectB.height) >= (rectA.y + rectA.height) ) {
if ((rectB.x + rectB.width) > (rectA.x + rectA.width)) {
t.setBounds$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=t;
++rectCount;
}} else {
t.setBounds$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectB.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), (rectA.y + rectA.height) - rectB.y);
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}}} else if (rectB.x <= rectA.x) {
if ((rectB.x + rectB.width) >= (rectA.x + rectA.width)) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}} else {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectB.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectB.height);
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
c=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}}} else if (rectB.x <= (rectA.x + rectA.width) && (rectB.x + rectB.width) > (rectA.x + rectA.width) ) {
if (rectB.y <= rectA.y && (rectB.y + rectB.height) > (rectA.y + rectA.height) ) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a=t;
++rectCount;
}} else if (rectB.y <= rectA.y) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, (rectB.y + rectB.height) - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}} else if ((rectB.y + rectB.height) > (rectA.y + rectA.height)) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectA.x, rectB.y, rectB.x - rectA.x, (rectA.y + rectA.height) - rectB.y);
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}} else {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectA.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectA.x, rectB.y, rectB.x - rectA.x, rectB.height);
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectA.x, (rectB.y + rectB.height), rectA.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
c=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}}} else if (rectB.x >= rectA.x && (rectB.x + rectB.width) <= (rectA.x + rectA.width) ) {
if (rectB.y <= rectA.y && (rectB.y + rectB.height) > (rectA.y + rectA.height) ) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}} else if (rectB.y <= rectA.y) {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectB.x, (rectB.y + rectB.height), rectB.width, (rectA.y + rectA.height) - (rectB.y + rectB.height));
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
c=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}} else {
t.reshape$I$I$I$I(rectA.x, rectA.y, rectB.x - rectA.x, rectA.height);
if (t.width > 0 && t.height > 0 ) {
a=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I(rectB.x, rectA.y, rectB.width, rectB.y - rectA.y);
if (t.width > 0 && t.height > 0 ) {
b=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}t.reshape$I$I$I$I((rectB.x + rectB.width), rectA.y, (rectA.x + rectA.width) - (rectB.x + rectB.width), rectA.height);
if (t.width > 0 && t.height > 0 ) {
c=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[t]);
++rectCount;
}}}}result=Clazz_array($I$(2), [rectCount]);
rectCount=0;
if (a != null ) result[rectCount++]=a;
if (b != null ) result[rectCount++]=b;
if (c != null ) result[rectCount++]=c;
if (d != null ) result[rectCount++]=d;
return result;
}, 1);

Clazz_newMeth(C$, 'isLeftMouseButton$java_awt_event_MouseEvent',  function (anEvent) {
return ((anEvent.getModifiers$() & 16) != 0);
}, 1);

Clazz_newMeth(C$, 'isMiddleMouseButton$java_awt_event_MouseEvent',  function (anEvent) {
return ((anEvent.getModifiers$() & 8) == 8);
}, 1);

Clazz_newMeth(C$, 'isRightMouseButton$java_awt_event_MouseEvent',  function (anEvent) {
return ((anEvent.getModifiers$() & 4) == 4);
}, 1);

Clazz_newMeth(C$, 'computeStringWidth$java_awt_FontMetrics$S',  function (fm, str) {
return $I$(9).stringWidth$javax_swing_JComponent$java_awt_FontMetrics$S(null, fm, str);
}, 1);

Clazz_newMeth(C$, 'layoutCompoundLabel$javax_swing_JComponent$java_awt_FontMetrics$S$javax_swing_Icon$I$I$I$I$java_awt_Rectangle$java_awt_Rectangle$java_awt_Rectangle$I',  function (c, fm, text, icon, verticalAlignment, horizontalAlignment, verticalTextPosition, horizontalTextPosition, viewR, iconR, textR, textIconGap) {
var ui=c.秘getUI$();
var ltr=(c == null  || c.getComponentOrientation$().isLeftToRight$() );
var hAlign;
var hTextPos;
if (ui.menuAnchorNode == null ) {
switch (horizontalAlignment) {
case 10:
hAlign=(ltr) ? 2 : 4;
break;
case 11:
hAlign=(ltr) ? 4 : 2;
break;
default:
hAlign=horizontalAlignment;
break;
}
switch (horizontalTextPosition) {
case 10:
hTextPos=(ltr) ? 2 : 4;
break;
case 11:
hTextPos=(ltr) ? 4 : 2;
break;
default:
hTextPos=horizontalTextPosition;
break;
}
} else {
hAlign=hTextPos=(ltr ? 2 : 4);
}return C$.layoutCompoundLabelImpl$javax_swing_JComponent$swingjs_plaf_JSComponentUI$java_awt_FontMetrics$S$javax_swing_Icon$I$I$I$I$java_awt_Rectangle$java_awt_Rectangle$java_awt_Rectangle$I(c, ui, fm, text, icon, verticalAlignment, hAlign, verticalTextPosition, hTextPos, viewR, iconR, textR, textIconGap);
}, 1);

Clazz_newMeth(C$, 'layoutCompoundLabel$java_awt_FontMetrics$S$javax_swing_Icon$I$I$I$I$java_awt_Rectangle$java_awt_Rectangle$java_awt_Rectangle$I',  function (fm, text, icon, verticalAlignment, horizontalAlignment, verticalTextPosition, horizontalTextPosition, viewR, iconR, textR, textIconGap) {
return C$.layoutCompoundLabelImpl$javax_swing_JComponent$swingjs_plaf_JSComponentUI$java_awt_FontMetrics$S$javax_swing_Icon$I$I$I$I$java_awt_Rectangle$java_awt_Rectangle$java_awt_Rectangle$I(null, null, fm, text, icon, verticalAlignment, horizontalAlignment, verticalTextPosition, horizontalTextPosition, viewR, iconR, textR, textIconGap);
}, 1);

Clazz_newMeth(C$, 'layoutCompoundLabelImpl$javax_swing_JComponent$swingjs_plaf_JSComponentUI$java_awt_FontMetrics$S$javax_swing_Icon$I$I$I$I$java_awt_Rectangle$java_awt_Rectangle$java_awt_Rectangle$I',  function (c, ui, fm, text, icon, verticalAlignment, horizontalAlignment, verticalTextPosition, horizontalTextPosition, viewR, iconR, textR, textIconGap) {
if (icon != null ) {
iconR.width=icon.getIconWidth$();
iconR.height=icon.getIconHeight$();
}var textIsEmpty=(text == null ) || text.equals$O("") ;
var lsb=0;
var rsb=0;
var gap;
var v=null;
if (textIsEmpty) {
textR.width=textR.height=0;
text="";
gap=0;
} else {
var availTextWidth;
gap=(iconR.width == 0) ? 0 : textIconGap;
if (horizontalTextPosition == 0) {
availTextWidth=viewR.width;
} else {
availTextWidth=viewR.width - (iconR.width + gap);
}v=(c != null  ? c.getClientProperty$O("html") : null);
if (v != null ) {
textR.width=Math.min(availTextWidth, (v.getPreferredSpan$I(0)|0));
textR.height=(v.getPreferredSpan$I(1)|0);
} else {
if (ui.textNode == null ) {
textR.width=fm.stringWidth$S(text);
textR.height=fm.getHeight$();
} else if (text.length$() == 0) {
textR.width=1;
textR.height=fm.getHeight$();
} else {
var t=(text.indexOf$S("<html>") == 0 ? text : text.replace$C$C(" ", "\u00a0"));
if (t != text && (ui.textNode.innerHTML != t ||false) ) $I$(10).setAttr(ui.textNode, "innerHTML", t);
var d=ui.getHTMLSize$swingjs_api_js_DOMNode(ui.textNode);
textR.width=(d.width == 0 ? 1 : d.width);
textR.height=(d.height == 0 ? fm.getHeight$() : d.height);
}if (textR.width > availTextWidth) {
text=$I$(9).clipString$javax_swing_JComponent$java_awt_FontMetrics$S$I(c, fm, text, availTextWidth);
textR.width=$I$(9).stringWidth$javax_swing_JComponent$java_awt_FontMetrics$S(c, fm, text);
}}}if (verticalTextPosition == 1) {
if (horizontalTextPosition != 0) {
textR.y=0;
} else {
textR.y=-(textR.height + gap);
}} else if (verticalTextPosition == 0) {
textR.y=((iconR.height/2|0)) - ((textR.height/2|0));
} else {
if (horizontalTextPosition != 0) {
textR.y=iconR.height - textR.height;
} else {
textR.y=(iconR.height + gap);
}}if (horizontalTextPosition == 2) {
textR.x=-(textR.width + gap);
} else if (horizontalTextPosition == 0) {
textR.x=((iconR.width/2|0)) - ((textR.width/2|0));
} else {
textR.x=(iconR.width + gap);
}var labelR_x=Math.min(iconR.x, textR.x);
var labelR_width=Math.max(iconR.x + iconR.width, textR.x + textR.width) - labelR_x;
var labelR_y=Math.min(iconR.y, textR.y);
var labelR_height=Math.max(iconR.y + iconR.height, textR.y + textR.height) - labelR_y;
var dx;
var dy;
if (verticalAlignment == 1) {
dy=viewR.y - labelR_y;
} else if (verticalAlignment == 0) {
dy=(viewR.y + ((viewR.height/2|0))) - (labelR_y + ((labelR_height/2|0)));
} else {
dy=(viewR.y + viewR.height) - (labelR_y + labelR_height);
}if (horizontalAlignment == 2) {
dx=viewR.x - labelR_x;
} else if (horizontalAlignment == 4) {
dx=(viewR.x + viewR.width) - (labelR_x + labelR_width);
} else {
dx=(viewR.x + ((viewR.width/2|0))) - (labelR_x + ((labelR_width/2|0)));
}textR.x+=dx;
textR.y+=dy;
iconR.x+=dx;
iconR.y+=dy;
if (viewR.width == 32767) {
viewR.width=labelR_width;
viewR.height=labelR_height;
}return text;
}, 1);

Clazz_newMeth(C$, 'paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$I$I$I$I',  function (g, c, p, x, y, w, h) {
C$.getCellRendererPane$java_awt_Component$java_awt_Container(c, p).paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$I$I$I$I$Z(g, c, p, x, y, w, h, false);
}, 1);

Clazz_newMeth(C$, 'paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$java_awt_Rectangle',  function (g, c, p, r) {
C$.paintComponent$java_awt_Graphics$java_awt_Component$java_awt_Container$I$I$I$I(g, c, p, r.x, r.y, r.width, r.height);
}, 1);

Clazz_newMeth(C$, 'getCellRendererPane$java_awt_Component$java_awt_Container',  function (c, p) {
var shell=c.getParent$();
if (Clazz_instanceOf(shell, "javax.swing.CellRendererPane")) {
if (shell.getParent$() !== p ) {
p.add$java_awt_Component(shell);
}} else {
shell=Clazz_new_($I$(11,1));
shell.add$java_awt_Component(c);
p.add$java_awt_Component(shell);
}return shell;
}, 1);

Clazz_newMeth(C$, 'updateComponentTreeUI$java_awt_Component',  function (c) {
C$.updateComponentTreeUI0$java_awt_Component(c);
c.invalidate$();
c.validate$();
(c).秘repaint$();
}, 1);

Clazz_newMeth(C$, 'updateComponentTreeUI0$java_awt_Component',  function (c) {
if (Clazz_instanceOf(c, "javax.swing.JComponent")) {
var jc=c;
jc.updateUI$();
var jpm=jc.getComponentPopupMenu$();
if (jpm != null ) {
C$.updateComponentTreeUI$java_awt_Component(jpm);
}}var children=null;
var n=0;
if (Clazz_instanceOf(c, "javax.swing.JMenu")) {
children=(c).getMenuArray$();
n=(c).getMenuComponentCount$();
} else if (Clazz_instanceOf(c, "java.awt.Container")) {
children=$I$(5).秘getChildArray$java_awt_Container(c);
n=(c).getComponentCount$();
}for (var i=0; i < n; i++) {
C$.updateComponentTreeUI0$java_awt_Component(children[i]);
}
}, 1);

Clazz_newMeth(C$, 'invokeLater$Runnable',  function (doRun) {
$I$(12).invokeLater$Runnable(doRun);
}, 1);

Clazz_newMeth(C$, 'invokeAndWait$Runnable',  function (doRun) {
$I$(12).invokeAndWait$Runnable(doRun);
}, 1);

Clazz_newMeth(C$, 'isEventDispatchThread$',  function () {
return $I$(12).isDispatchThread$();
}, 1);

Clazz_newMeth(C$, 'findFocusOwner$java_awt_Component',  function (c) {
var focusOwner=$I$(13).getCurrentKeyboardFocusManager$().getFocusOwner$();
for (var temp=focusOwner; temp != null ; temp=(temp.isWindowOrJSApplet$() ? null : temp.getParent$())) {
if (temp === c ) {
return focusOwner;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'getRootPane$java_awt_Component',  function (c) {
if (Clazz_instanceOf(c, "javax.swing.RootPaneContainer")) {
return (c).getRootPane$();
}for (; c != null ; c=c.getParent$()) {
if (Clazz_instanceOf(c, "javax.swing.JRootPane")) {
return c;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'getRoot$java_awt_Component',  function (c) {
for (var p=c; p != null ; p=p.getParent$()) {
if (p.isWindowOrJSApplet$()) {
return p;
}}
return null;
}, 1);

Clazz_newMeth(C$, 'isValidKeyEventForKeyBindings$java_awt_event_KeyEvent',  function (e) {
if (e.getID$() == 400) {
var mod=e.getModifiers$();
if (((mod & 8) != 0) && ((mod & 2) == 0) ) {
return false;
}} else {
switch (e.getKeyCode$()) {
case 16:
case 17:
case 18:
case 65406:
case 157:
return false;
}
}return true;
}, 1);

Clazz_newMeth(C$, 'notifyAction$javax_swing_Action$javax_swing_KeyStroke$java_awt_event_KeyEvent$O$I',  function (action, ks, event, sender, modifiers) {
if (action == null ) {
return false;
}if (Clazz_instanceOf(action, "sun.swing.UIAction")) {
if (!(action).isEnabled$O(sender)) {
return false;
}} else if (!action.isEnabled$()) {
return false;
}var commandO;
var stayNull;
commandO=action.getValue$S("ActionCommandKey");
if (commandO == null  && $I$(14).isActionStandin$javax_swing_Action(action) ) {
stayNull=true;
} else {
stayNull=false;
}var command;
if (commandO != null ) {
command=commandO.toString();
} else if (!stayNull && event.getKeyChar$() != "\uffff" ) {
command=String.valueOf$C(event.getKeyChar$());
} else {
command=null;
}var ae=Clazz_new_([sender, 1001, command, event.getWhen$(), modifiers],$I$(15,1).c$$O$I$S$J$I);
action.actionPerformed$java_awt_event_ActionEvent(ae);

if (ae.bdata.doPropagate) event.bdata.doPropagate = true;
return true;
}, 1);

Clazz_newMeth(C$, 'replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap',  function (component, type, uiInputMap) {
var map=component.getInputMap$I$Z(type, (uiInputMap != null ));
while (map != null ){
var parent=map.getParent$();
if (parent == null  || (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) ) {
map.setParent$javax_swing_InputMap(uiInputMap);
return;
}map=parent;
}
}, 1);

Clazz_newMeth(C$, 'replaceUIActionMap$javax_swing_JComponent$javax_swing_ActionMap',  function (component, uiActionMap) {
var map=component.getActionMap$Z((uiActionMap != null ));
while (map != null ){
var parent=map.getParent$();
if (parent == null  || (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) && (!(Clazz_instanceOf(uiActionMap, "javax.swing.plaf.UIResource")) || (uiActionMap._key == parent._key ||false) )  ) {
map.setParent$javax_swing_ActionMap(uiActionMap);
return;
}map=parent;
}
}, 1);

Clazz_newMeth(C$, 'getUIInputMap$javax_swing_JComponent$I',  function (component, condition) {
var map=component.getInputMap$I$Z(condition, false);
while (map != null ){
var parent=map.getParent$();
if (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) {
return parent;
}map=parent;
}
return null;
}, 1);

Clazz_newMeth(C$, 'getUIActionMap$javax_swing_JComponent',  function (component) {
var map=component.getActionMap$Z(false);
while (map != null ){
var parent=map.getParent$();
if (Clazz_instanceOf(parent, "javax.swing.plaf.UIResource")) {
return parent;
}map=parent;
}
return null;
}, 1);

Clazz_newMeth(C$, 'getSharedOwnerFrame$',  function () {
var p=$I$(16).getAppletViewer$();
var f=p.sharedOwnerFrame;
return (f == null  ? (p.sharedOwnerFrame=Clazz_new_($I$(17,1))) : f);
}, 1);

Clazz_newMeth(C$, 'getSharedOwnerFrameShutdownListener$',  function () {
var sharedOwnerFrame=C$.getSharedOwnerFrame$();
return sharedOwnerFrame;
}, 1);

Clazz_newMeth(C$, 'appContextGet$O',  function (key) {
return $I$(18).getAppContext$().get$O(key);
}, 1);

Clazz_newMeth(C$, 'appContextPut$O$O',  function (key, value) {
$I$(18).getAppContext$().put$O$O(key, value);
}, 1);

Clazz_newMeth(C$, 'appContextRemove$O',  function (key) {
$I$(18).getAppContext$().remove$O(key);
}, 1);

Clazz_newMeth(C$, 'loadSystemClass$S',  function (className) {
return Clazz_forName(className, true, $I$(19).currentThread$().getContextClassLoader$());
}, 1);

Clazz_newMeth(C$, 'isLeftToRight$java_awt_Component',  function (c) {
return c.getComponentOrientation$().isLeftToRight$();
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
throw Clazz_new_($I$(4,1).c$$S,["SwingUtilities is just a container for static methods"]);
}, 1);

Clazz_newMeth(C$, 'doesIconReferenceImage$javax_swing_Icon$java_awt_Image',  function (icon, image) {
var iconImage=(icon != null  && (Clazz_instanceOf(icon, "javax.swing.ImageIcon")) ) ? (icon).getImage$() : null;
return (iconImage === image );
}, 1);

Clazz_newMeth(C$, 'findDisplayedMnemonicIndex$S$I',  function (text, mnemonic) {
if (text == null  || mnemonic == 0  ) {
return -1;
}var uc=Character.toUpperCase$C(String.fromCharCode(mnemonic));
var lc=Character.toLowerCase$C(String.fromCharCode(mnemonic));
var uci=text.indexOf$I(uc);
var lci=text.indexOf$I(lc);
if (uci == -1) {
return lci;
} else if (lci == -1) {
return uci;
} else {
return (lci < uci) ? lci : uci;
}}, 1);

Clazz_newMeth(C$, 'calculateInnerArea$javax_swing_JComponent$java_awt_Rectangle',  function (c, r) {
if (c == null ) {
return null;
}var rect=r;
var insets=c.getInsets$();
if (rect == null ) {
rect=Clazz_new_($I$(2,1));
}rect.x=insets.left;
rect.y=insets.top;
rect.width=c.getWidth$() - insets.left - insets.right ;
rect.height=c.getHeight$() - insets.top - insets.bottom ;
return rect;
}, 1);

Clazz_newMeth(C$, 'updateRendererOrEditorUI$O',  function (rendererOrEditor) {
if (rendererOrEditor == null ) {
return;
}var component=null;
if (Clazz_instanceOf(rendererOrEditor, "java.awt.Component")) {
component=rendererOrEditor;
}if (Clazz_instanceOf(rendererOrEditor, "javax.swing.DefaultCellEditor")) {
component=(rendererOrEditor).getComponent$();
}if (component != null ) {
C$.updateComponentTreeUI$java_awt_Component(component);
}}, 1);

Clazz_newMeth(C$, 'getUnwrappedParent$java_awt_Component',  function (component) {
var parent=component.getParent$();
while (Clazz_instanceOf(parent, "javax.swing.JLayer")){
parent=parent.getParent$();
}
return parent;
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.SwingUtilities, "SharedOwnerFrame", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.JFrame', 'java.awt.event.WindowListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$O$O$O$O.apply(this,[null, null, null, null]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'addNotify$',  function () {
this.updateUI$();
this.getOrCreatePeer$();
C$.superclazz.prototype.addNotify$.apply(this, []);
this.installListeners$();
});

Clazz_newMeth(C$, 'installListeners$',  function () {
var windows=this.getOwnedWindows$();
for (var ind=0; ind < windows.length; ind++) {
var window=windows[ind];
if (window != null ) {
window.removeWindowListener$java_awt_event_WindowListener(this);
window.addWindowListener$java_awt_event_WindowListener(this);
}}
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent',  function (e) {
var windows=this.getOwnedWindows$();
for (var ind=0; ind < windows.length; ind++) {
var window=windows[ind];
if (window != null ) {
if (window.isDisplayable$()) {
return;
}window.removeWindowListener$java_awt_event_WindowListener(this);
}this.dispose$();
}
});

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'show$',  function () {
});

Clazz_newMeth(C$, 'dispose$',  function () {
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:04 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},p$2={},p$3={},p$4={},I$=[[0,'java.awt.Point',['javax.swing.TransferHandler','.DropLocation'],'java.awt.datatransfer.DataFlavor','javax.swing.TransferHandler','javax.swing.event.EventListenerList','java.awt.dnd.DropTargetListener','java.awt.Rectangle',['javax.swing.TransferHandler','.TransferSupport'],'java.awt.Insets','java.awt.Toolkit','javax.swing.Timer','java.awt.dnd.DragSource','javax.swing.UIManager',['javax.swing.TransferHandler','.TransferAction'],['javax.swing.TransferHandler','.SwingDragGestureRecognizer'],['javax.swing.TransferHandler','.DragHandler'],['javax.swing.TransferHandler','.PropertyTransferable'],'sun.awt.AppContext',['javax.swing.TransferHandler','.DropHandler']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "TransferHandler", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['HasGetTransferHandler',8],['DropLocation',9],['TransferSupport',25],['PropertyTransferable',8],['SwingDropTarget',8],['DropHandler',10],['DragHandler',10],['SwingDragGestureRecognizer',10],['TransferAction',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['propertyName']]
,['O',['recognizer','javax.swing.TransferHandler.SwingDragGestureRecognizer','cutAction','javax.swing.Action','+copyAction','+pasteAction']]]

Clazz_newMeth(C$, 'getCutAction$',  function () {
return C$.cutAction;
}, 1);

Clazz_newMeth(C$, 'getCopyAction$',  function () {
return C$.copyAction;
}, 1);

Clazz_newMeth(C$, 'getPasteAction$',  function () {
return C$.pasteAction;
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (property) {
;C$.$init$.apply(this);
this.propertyName=property;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$S.apply(this, [null]);
}, 1);

Clazz_newMeth(C$, 'exportAsDrag$javax_swing_JComponent$java_awt_event_InputEvent$I',  function (comp, e, action) {
var srcActions=this.getSourceActions$javax_swing_JComponent(comp);
if (!(Clazz_instanceOf(e, "java.awt.event.MouseEvent")) || !(action == 1 || action == 2  || action == 1073741824 ) || (srcActions & action) == 0  ) {
action=0;
}if (action != 0) {
if (C$.recognizer == null ) {
C$.recognizer=Clazz_new_([Clazz_new_($I$(16,1))],$I$(15,1).c$$java_awt_dnd_DragGestureListener);
}C$.recognizer.gestured$javax_swing_JComponent$java_awt_event_MouseEvent$I$I(comp, e, srcActions, action);
} else {
this.exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(comp, null, 0);
}});

Clazz_newMeth(C$, 'exportToClipboard$javax_swing_JComponent$java_awt_datatransfer_Clipboard$I',  function (comp, clip, action) {
if ((action == 1 || action == 2 ) && (this.getSourceActions$javax_swing_JComponent(comp) & action) != 0 ) {
var t=this.createTransferable$javax_swing_JComponent(comp);
if (t != null ) {
try {
clip.setContents$java_awt_datatransfer_Transferable$java_awt_datatransfer_ClipboardOwner(t, null);
this.exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(comp, t, action);
return;
} catch (ise) {
if (Clazz_exceptionOf(ise,"IllegalStateException")){
this.exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(comp, t, 0);
throw ise;
} else {
throw ise;
}
}
}}this.exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(comp, null, 0);
});

Clazz_newMeth(C$, 'importData$javax_swing_TransferHandler_TransferSupport',  function (support) {
return Clazz_instanceOf(support.getComponent$(), "javax.swing.JComponent") ? this.importData$javax_swing_JComponent$java_awt_datatransfer_Transferable(support.getComponent$(), support.getTransferable$()) : false;
});

Clazz_newMeth(C$, 'importData$javax_swing_JComponent$java_awt_datatransfer_Transferable',  function (comp, t) {
var prop=p$4.getPropertyDescriptor$javax_swing_JComponent.apply(this, [comp]);
if (prop != null ) {
var writer=prop.getWriteMethod$();
if (writer == null ) {
return false;
}var params=writer.getParameterTypes$();
if (params.length != 1) {
return false;
}var flavor=p$4.getPropertyDataFlavor$Class$java_awt_datatransfer_DataFlavorA.apply(this, [params[0], t.getTransferDataFlavors$()]);
if (flavor != null ) {
try {
var value=t.getTransferData$java_awt_datatransfer_DataFlavor(flavor);
var args=Clazz_array(java.lang.Object, -1, [value]);
return true;
} catch (ex) {
if (Clazz_exceptionOf(ex,"Exception")){
System.err.println$S("Invocation failed");
} else {
throw ex;
}
}
}}return false;
});

Clazz_newMeth(C$, 'canImport$javax_swing_TransferHandler_TransferSupport',  function (support) {
return Clazz_instanceOf(support.getComponent$(), "javax.swing.JComponent") ? this.canImport$javax_swing_JComponent$java_awt_datatransfer_DataFlavorA(support.getComponent$(), support.getDataFlavors$()) : false;
});

Clazz_newMeth(C$, 'canImport$javax_swing_JComponent$java_awt_datatransfer_DataFlavorA',  function (comp, transferFlavors) {
var prop=p$4.getPropertyDescriptor$javax_swing_JComponent.apply(this, [comp]);
if (prop != null ) {
var writer=prop.getWriteMethod$();
if (writer == null ) {
return false;
}var params=writer.getParameterTypes$();
if (params.length != 1) {
return false;
}var flavor=p$4.getPropertyDataFlavor$Class$java_awt_datatransfer_DataFlavorA.apply(this, [params[0], transferFlavors]);
if (flavor != null ) {
return true;
}}return false;
});

Clazz_newMeth(C$, 'getSourceActions$javax_swing_JComponent',  function (c) {
var prop=p$4.getPropertyDescriptor$javax_swing_JComponent.apply(this, [c]);
if (prop != null ) {
return 1;
}return 0;
});

Clazz_newMeth(C$, 'getVisualRepresentation$java_awt_datatransfer_Transferable',  function (t) {
return null;
});

Clazz_newMeth(C$, 'createTransferable$javax_swing_JComponent',  function (c) {
var property=p$4.getPropertyDescriptor$javax_swing_JComponent.apply(this, [c]);
if (property != null ) {
return Clazz_new_($I$(17,1).c$$java_beans_PropertyDescriptor$javax_swing_JComponent,[property, c]);
}return null;
});

Clazz_newMeth(C$, 'exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I',  function (source, data, action) {
});

Clazz_newMeth(C$, 'getPropertyDescriptor$javax_swing_JComponent',  function (comp) {
if (this.propertyName == null ) {
return null;
}var k=comp.getClass$();
return null;
}, p$4);

Clazz_newMeth(C$, 'getPropertyDataFlavor$Class$java_awt_datatransfer_DataFlavorA',  function (k, flavors) {
for (var i=0; i < flavors.length; i++) {
var flavor=flavors[i];
if ("application".equals$O(flavor.getPrimaryType$()) && "x-java-jvm-local-objectref".equals$O(flavor.getSubType$()) && k.isAssignableFrom$Class(flavor.getRepresentationClass$())  ) {
return flavor;
}}
return null;
}, p$4);

Clazz_newMeth(C$, 'getDropTargetListener$',  function () {
{
var handler=$I$(18).getAppContext$().get$O(Clazz_getClass($I$(19)));
if (handler == null ) {
handler=Clazz_new_($I$(19,1));
$I$(18).getAppContext$().put$O$O(Clazz_getClass($I$(19)), handler);
}return handler;
}}, 1);

C$.$static$=function(){C$.$static$=0;
C$.recognizer=null;
C$.cutAction=Clazz_new_($I$(14,1).c$$S,["cut"]);
C$.copyAction=Clazz_new_($I$(14,1).c$$S,["copy"]);
C$.pasteAction=Clazz_new_($I$(14,1).c$$S,["paste"]);
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.TransferHandler, "HasGetTransferHandler", function(){
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "DropLocation", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['dropPoint','java.awt.Point']]]

Clazz_newMeth(C$, 'c$$java_awt_Point',  function (dropPoint) {
;C$.$init$.apply(this);
if (dropPoint == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Point cannot be null"]);
}this.dropPoint=Clazz_new_($I$(1,1).c$$java_awt_Point,[dropPoint]);
}, 1);

Clazz_newMeth(C$, 'getDropPoint$',  function () {
return Clazz_new_($I$(1,1).c$$java_awt_Point,[this.dropPoint]);
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[dropPoint=" + this.dropPoint + "]" ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "TransferSupport", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.dropAction=-1;
},1);

C$.$fields$=[['Z',['isDrop','showDropLocationIsSet','showDropLocation'],'I',['dropAction'],'O',['component','java.awt.Component','source','java.lang.Object','dropLocation','javax.swing.TransferHandler.DropLocation']]]

Clazz_newMeth(C$, 'c$$java_awt_Component$java_awt_dnd_DropTargetEvent',  function (component, event) {
;C$.$init$.apply(this);
this.isDrop=true;
p$1.setDNDVariables$java_awt_Component$java_awt_dnd_DropTargetEvent.apply(this, [component, event]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Component$java_awt_datatransfer_Transferable',  function (component, transferable) {
;C$.$init$.apply(this);
if (component == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["component is null"]);
}if (transferable == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["transferable is null"]);
}this.isDrop=false;
this.component=component;
this.source=transferable;
}, 1);

Clazz_newMeth(C$, 'setDNDVariables$java_awt_Component$java_awt_dnd_DropTargetEvent',  function (component, event) {
Clazz_assert(C$, this, function(){return this.isDrop});
this.component=component;
this.source=event;
this.dropLocation=null;
this.dropAction=-1;
this.showDropLocationIsSet=false;
if (this.source == null ) {
return;
}Clazz_assert(C$, this, function(){return Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent") || Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDropEvent") });
var p=Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent") ? (this.source).getLocation$() : (this.source).getLocation$();
this.dropLocation=(component).dropLocationForPoint$java_awt_Point(p);
}, p$1);

Clazz_newMeth(C$, 'isDrop$',  function () {
return this.isDrop;
});

Clazz_newMeth(C$, 'getComponent$',  function () {
return this.component;
});

Clazz_newMeth(C$, 'assureIsDrop',  function () {
if (!this.isDrop) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Not a drop"]);
}}, p$1);

Clazz_newMeth(C$, 'getDropLocation$',  function () {
p$1.assureIsDrop.apply(this, []);
if (this.dropLocation == null ) {
var p=Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent") ? (this.source).getLocation$() : (this.source).getLocation$();
this.dropLocation=Clazz_new_($I$(2,1).c$$java_awt_Point,[p]);
}return this.dropLocation;
});

Clazz_newMeth(C$, 'setShowDropLocation$Z',  function (showDropLocation) {
p$1.assureIsDrop.apply(this, []);
this.showDropLocation=showDropLocation;
this.showDropLocationIsSet=true;
});

Clazz_newMeth(C$, 'setDropAction$I',  function (dropAction) {
p$1.assureIsDrop.apply(this, []);
var action=dropAction & this.getSourceDropActions$();
if (!(action == 1 || action == 2  || action == 1073741824 )) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["unsupported drop action: " + dropAction]);
}this.dropAction=dropAction;
});

Clazz_newMeth(C$, 'getDropAction$',  function () {
return this.dropAction == -1 ? this.getUserDropAction$() : this.dropAction;
});

Clazz_newMeth(C$, 'getUserDropAction$',  function () {
p$1.assureIsDrop.apply(this, []);
return (Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent")) ? (this.source).getDropAction$() : (this.source).getDropAction$();
});

Clazz_newMeth(C$, 'getSourceDropActions$',  function () {
p$1.assureIsDrop.apply(this, []);
return (Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent")) ? (this.source).getSourceActions$() : (this.source).getSourceActions$();
});

Clazz_newMeth(C$, 'getDataFlavors$',  function () {
if (this.isDrop) {
if (Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent")) {
return (this.source).getCurrentDataFlavors$();
} else {
return (this.source).getCurrentDataFlavors$();
}}return (this.source).getTransferDataFlavors$();
});

Clazz_newMeth(C$, 'isDataFlavorSupported$java_awt_datatransfer_DataFlavor',  function (df) {
if (this.isDrop) {
if (Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent")) {
return (this.source).isDataFlavorSupported$java_awt_datatransfer_DataFlavor(df);
} else {
return (this.source).isDataFlavorSupported$java_awt_datatransfer_DataFlavor(df);
}}return (this.source).isDataFlavorSupported$java_awt_datatransfer_DataFlavor(df);
});

Clazz_newMeth(C$, 'getTransferable$',  function () {
if (this.isDrop) {
if (Clazz_instanceOf(this.source, "java.awt.dnd.DropTargetDragEvent")) {
return (this.source).getTransferable$();
} else {
return (this.source).getTransferable$();
}}return this.source;
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "PropertyTransferable", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.awt.datatransfer.Transferable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['component','javax.swing.JComponent','property','java.beans.PropertyDescriptor']]]

Clazz_newMeth(C$, 'c$$java_beans_PropertyDescriptor$javax_swing_JComponent',  function (p, c) {
;C$.$init$.apply(this);
this.property=p;
this.component=c;
}, 1);

Clazz_newMeth(C$, 'getTransferDataFlavors$',  function () {
var flavors=Clazz_array($I$(3), [1]);
var propertyType=this.property.getPropertyType$();
var mimeType="application/x-java-jvm-local-objectref" + ";class=" + propertyType.getName$() ;
try {
flavors[0]=Clazz_new_($I$(3,1).c$$S,[mimeType]);
} catch (cnfe) {
if (Clazz_exceptionOf(cnfe,"ClassNotFoundException")){
flavors=Clazz_array($I$(3), [0]);
} else {
throw cnfe;
}
}
return flavors;
});

Clazz_newMeth(C$, 'isDataFlavorSupported$java_awt_datatransfer_DataFlavor',  function (flavor) {
var propertyType=this.property.getPropertyType$();
if ("application".equals$O(flavor.getPrimaryType$()) && "x-java-jvm-local-objectref".equals$O(flavor.getSubType$()) && flavor.getRepresentationClass$().isAssignableFrom$Class(propertyType)  ) {
return true;
}return false;
});

Clazz_newMeth(C$, 'getTransferData$java_awt_datatransfer_DataFlavor',  function (flavor) {
if (!this.isDataFlavorSupported$java_awt_datatransfer_DataFlavor(flavor)) {
throw Clazz_new_(Clazz_load('java.awt.datatransfer.UnsupportedFlavorException').c$$java_awt_datatransfer_DataFlavor,[flavor]);
}var reader=this.property.getReadMethod$();
var value=null;
try {
} catch (ex) {
if (Clazz_exceptionOf(ex,"Exception")){
throw Clazz_new_(Clazz_load('java.io.IOException').c$$S,["Property read failed: " + this.property.getName$()]);
} else {
throw ex;
}
}
return value;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "SwingDropTarget", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.dnd.DropTarget', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['listenerList','javax.swing.event.EventListenerList']]]

Clazz_newMeth(C$, 'c$$java_awt_Component',  function (c) {
;C$.superclazz.c$$java_awt_Component$I$java_awt_dnd_DropTargetListener.apply(this,[c, 1073741827, null]);C$.$init$.apply(this);
try {
C$.superclazz.prototype.addDropTargetListener$java_awt_dnd_DropTargetListener.apply(this, [$I$(4).getDropTargetListener$()]);
} catch (tmle) {
if (Clazz_exceptionOf(tmle,"java.util.TooManyListenersException")){
} else {
throw tmle;
}
}
}, 1);

Clazz_newMeth(C$, 'addDropTargetListener$java_awt_dnd_DropTargetListener',  function (dtl) {
if (this.listenerList == null ) {
this.listenerList=Clazz_new_($I$(5,1));
}this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']), dtl);
});

Clazz_newMeth(C$, 'removeDropTargetListener$java_awt_dnd_DropTargetListener',  function (dtl) {
if (this.listenerList != null ) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']), dtl);
}});

Clazz_newMeth(C$, 'dragEnter$java_awt_dnd_DropTargetDragEvent',  function (e) {
C$.superclazz.prototype.dragEnter$java_awt_dnd_DropTargetDragEvent.apply(this, [e]);
if (this.listenerList != null ) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']) ) {
(listeners[i + 1]).dragEnter$java_awt_dnd_DropTargetDragEvent(e);
}}
}});

Clazz_newMeth(C$, 'dragOver$java_awt_dnd_DropTargetDragEvent',  function (e) {
C$.superclazz.prototype.dragOver$java_awt_dnd_DropTargetDragEvent.apply(this, [e]);
if (this.listenerList != null ) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']) ) {
(listeners[i + 1]).dragOver$java_awt_dnd_DropTargetDragEvent(e);
}}
}});

Clazz_newMeth(C$, 'dragExit$java_awt_dnd_DropTargetEvent',  function (e) {
C$.superclazz.prototype.dragExit$java_awt_dnd_DropTargetEvent.apply(this, [e]);
if (this.listenerList != null ) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']) ) {
(listeners[i + 1]).dragExit$java_awt_dnd_DropTargetEvent(e);
}}
}});

Clazz_newMeth(C$, 'drop$java_awt_dnd_DropTargetDropEvent',  function (e) {
C$.superclazz.prototype.drop$java_awt_dnd_DropTargetDropEvent.apply(this, [e]);
if (this.listenerList != null ) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']) ) {
(listeners[i + 1]).drop$java_awt_dnd_DropTargetDropEvent(e);
}}
}});

Clazz_newMeth(C$, 'dropActionChanged$java_awt_dnd_DropTargetDragEvent',  function (e) {
C$.superclazz.prototype.dropActionChanged$java_awt_dnd_DropTargetDragEvent.apply(this, [e]);
if (this.listenerList != null ) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(6),['dragEnter$java_awt_dnd_DropTargetDragEvent','dragExit$java_awt_dnd_DropTargetEvent','dragOver$java_awt_dnd_DropTargetDragEvent','drop$java_awt_dnd_DropTargetDropEvent','dropActionChanged$java_awt_dnd_DropTargetDragEvent']) ) {
(listeners[i + 1]).dropActionChanged$java_awt_dnd_DropTargetDragEvent(e);
}}
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "DropHandler", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.awt.dnd.DropTargetListener', 'java.io.Serializable', 'java.awt.event.ActionListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.outer=Clazz_new_($I$(7,1));
this.inner=Clazz_new_($I$(7,1));
this.hysteresis=10;
this.support=Clazz_new_($I$(8,1).c$$java_awt_Component$java_awt_dnd_DropTargetEvent,[null, null]);
},1);

C$.$fields$=[['I',['hysteresis'],'O',['timer','javax.swing.Timer','lastPosition','java.awt.Point','outer','java.awt.Rectangle','+inner','component','java.awt.Component','state','java.lang.Object','support','javax.swing.TransferHandler.TransferSupport']]]

Clazz_newMeth(C$, 'updateAutoscrollRegion$javax_swing_JComponent',  function (c) {
var visible=c.getVisibleRect$();
this.outer.setBounds$I$I$I$I(visible.x, visible.y, visible.width, visible.height);
var i=Clazz_new_($I$(9,1).c$$I$I$I$I,[0, 0, 0, 0]);
if (Clazz_instanceOf(c, "javax.swing.Scrollable")) {
var minSize=20;
if (visible.width >= minSize) {
i.left=i.right=10;
}if (visible.height >= minSize) {
i.top=i.bottom=10;
}}this.inner.setBounds$I$I$I$I(visible.x + i.left, visible.y + i.top, visible.width - (i.left + i.right), visible.height - (i.top + i.bottom));
}, p$2);

Clazz_newMeth(C$, 'autoscroll$javax_swing_JComponent$java_awt_Point',  function (c, pos) {
if (Clazz_instanceOf(c, "javax.swing.Scrollable")) {
var s=c;
if (pos.y < this.inner.y) {
var dy=s.getScrollableUnitIncrement$java_awt_Rectangle$I$I(this.outer, 1, -1);
var r=Clazz_new_($I$(7,1).c$$I$I$I$I,[this.inner.x, this.outer.y - dy, this.inner.width, dy]);
c.scrollRectToVisible$java_awt_Rectangle(r);
} else if (pos.y > (this.inner.y + this.inner.height)) {
var dy=s.getScrollableUnitIncrement$java_awt_Rectangle$I$I(this.outer, 1, 1);
var r=Clazz_new_($I$(7,1).c$$I$I$I$I,[this.inner.x, this.outer.y + this.outer.height, this.inner.width, dy]);
c.scrollRectToVisible$java_awt_Rectangle(r);
}if (pos.x < this.inner.x) {
var dx=s.getScrollableUnitIncrement$java_awt_Rectangle$I$I(this.outer, 0, -1);
var r=Clazz_new_($I$(7,1).c$$I$I$I$I,[this.outer.x - dx, this.inner.y, dx, this.inner.height]);
c.scrollRectToVisible$java_awt_Rectangle(r);
} else if (pos.x > (this.inner.x + this.inner.width)) {
var dx=s.getScrollableUnitIncrement$java_awt_Rectangle$I$I(this.outer, 0, 1);
var r=Clazz_new_($I$(7,1).c$$I$I$I$I,[this.outer.x + this.outer.width, this.inner.y, dx, this.inner.height]);
c.scrollRectToVisible$java_awt_Rectangle(r);
}}}, p$2);

Clazz_newMeth(C$, 'initPropertiesIfNecessary',  function () {
if (this.timer == null ) {
var t=$I$(10).getDefaultToolkit$();
var prop;
prop=t.getDesktopProperty$S("DnD.Autoscroll.interval");
this.timer=Clazz_new_([prop == null  ? 100 : prop.intValue$(), this],$I$(11,1).c$$I$java_awt_event_ActionListener);
prop=t.getDesktopProperty$S("DnD.Autoscroll.initialDelay");
this.timer.setInitialDelay$I(prop == null  ? 100 : prop.intValue$());
prop=t.getDesktopProperty$S("DnD.Autoscroll.cursorHysteresis");
if (prop != null ) {
this.hysteresis=prop.intValue$();
}}}, p$2);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
p$2.updateAutoscrollRegion$javax_swing_JComponent.apply(this, [this.component]);
if (this.outer.contains$java_awt_Point(this.lastPosition) && !this.inner.contains$java_awt_Point(this.lastPosition) ) {
p$2.autoscroll$javax_swing_JComponent$java_awt_Point.apply(this, [this.component, this.lastPosition]);
}});

Clazz_newMeth(C$, 'setComponentDropLocation$javax_swing_TransferHandler_TransferSupport$Z',  function (support, forDrop) {
var dropLocation=(support == null ) ? null : support.getDropLocation$();
if (Clazz_instanceOf(this.component, "javax.swing.text.JTextComponent")) {
} else if (Clazz_instanceOf(this.component, "javax.swing.JComponent")) {
this.state=(this.component).setDropLocation$javax_swing_TransferHandler_DropLocation$O$Z(dropLocation, this.state, forDrop);
}}, p$2);

Clazz_newMeth(C$, 'handleDrag$java_awt_dnd_DropTargetDragEvent',  function (e) {
var importer=(this.component).getTransferHandler$();
if (importer == null ) {
e.rejectDrag$();
p$2.setComponentDropLocation$javax_swing_TransferHandler_TransferSupport$Z.apply(this, [null, false]);
return;
}p$1.setDNDVariables$java_awt_Component$java_awt_dnd_DropTargetEvent.apply(this.support, [this.component, e]);
var canImport=importer.canImport$javax_swing_TransferHandler_TransferSupport(this.support);
if (canImport) {
e.acceptDrag$I(this.support.getDropAction$());
} else {
e.rejectDrag$();
}var showLocation=this.support.showDropLocationIsSet ? this.support.showDropLocation : canImport;
p$2.setComponentDropLocation$javax_swing_TransferHandler_TransferSupport$Z.apply(this, [showLocation ? this.support : null, false]);
}, p$2);

Clazz_newMeth(C$, 'dragEnter$java_awt_dnd_DropTargetDragEvent',  function (e) {
this.state=null;
this.component=e.getDropTargetContext$().getComponent$();
p$2.handleDrag$java_awt_dnd_DropTargetDragEvent.apply(this, [e]);
if (Clazz_instanceOf(this.component, "javax.swing.JComponent")) {
this.lastPosition=e.getLocation$();
p$2.updateAutoscrollRegion$javax_swing_JComponent.apply(this, [this.component]);
p$2.initPropertiesIfNecessary.apply(this, []);
}});

Clazz_newMeth(C$, 'dragOver$java_awt_dnd_DropTargetDragEvent',  function (e) {
this.component=e.getDropTargetContext$().getComponent$();
p$2.handleDrag$java_awt_dnd_DropTargetDragEvent.apply(this, [e]);
if (!(Clazz_instanceOf(this.component, "javax.swing.JComponent"))) {
return;
}var p=e.getLocation$();
if (Math.abs(p.x - this.lastPosition.x) > this.hysteresis || Math.abs(p.y - this.lastPosition.y) > this.hysteresis ) {
if (this.timer.isRunning$()) this.timer.stop$();
} else {
if (!this.timer.isRunning$()) this.timer.start$();
}this.lastPosition=p;
});

Clazz_newMeth(C$, 'dragExit$java_awt_dnd_DropTargetEvent',  function (e) {
p$2.cleanup$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'drop$java_awt_dnd_DropTargetDropEvent',  function (e) {
this.component=e.getDropTargetContext$().getComponent$();
var importer=(this.component).getTransferHandler$();
if (importer == null ) {
e.rejectDrop$();
p$2.cleanup$Z.apply(this, [false]);
return;
}p$1.setDNDVariables$java_awt_Component$java_awt_dnd_DropTargetEvent.apply(this.support, [this.component, e]);
var canImport=importer.canImport$javax_swing_TransferHandler_TransferSupport(this.support);
if (canImport) {
e.acceptDrop$I(this.support.getDropAction$());
var showLocation=this.support.showDropLocationIsSet ? this.support.showDropLocation : canImport;
p$2.setComponentDropLocation$javax_swing_TransferHandler_TransferSupport$Z.apply(this, [showLocation ? this.support : null, false]);
var success;
try {
success=importer.importData$javax_swing_TransferHandler_TransferSupport(this.support);
} catch (re) {
if (Clazz_exceptionOf(re,"RuntimeException")){
success=false;
} else {
throw re;
}
}
e.dropComplete$Z(success);
p$2.cleanup$Z.apply(this, [success]);
} else {
e.rejectDrop$();
p$2.cleanup$Z.apply(this, [false]);
}});

Clazz_newMeth(C$, 'dropActionChanged$java_awt_dnd_DropTargetDragEvent',  function (e) {
if (this.component == null ) {
return;
}p$2.handleDrag$java_awt_dnd_DropTargetDragEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'cleanup$Z',  function (forDrop) {
p$2.setComponentDropLocation$javax_swing_TransferHandler_TransferSupport$Z.apply(this, [null, forDrop]);
if (Clazz_instanceOf(this.component, "javax.swing.JComponent")) {
(this.component).dndDone$();
}if (this.timer != null ) {
this.timer.stop$();
}this.state=null;
this.component=null;
this.lastPosition=null;
}, p$2);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "DragHandler", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, ['java.awt.dnd.DragGestureListener', 'java.awt.dnd.DragSourceListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['scrolls']]]

Clazz_newMeth(C$, 'dragGestureRecognized$java_awt_dnd_DragGestureEvent',  function (dge) {
var c=dge.getComponent$();
var th=c.getTransferHandler$();
var t=th.createTransferable$javax_swing_JComponent(c);
if (t != null ) {
this.scrolls=c.getAutoscrolls$();
c.setAutoscrolls$Z(false);
try {
dge.startDrag$java_awt_Cursor$java_awt_datatransfer_Transferable$java_awt_dnd_DragSourceListener(null, t, this);
return;
} catch (re) {
if (Clazz_exceptionOf(re,"RuntimeException")){
c.setAutoscrolls$Z(this.scrolls);
} else {
throw re;
}
}
}th.exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(c, t, 0);
});

Clazz_newMeth(C$, 'dragEnter$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
});

Clazz_newMeth(C$, 'dragOver$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
});

Clazz_newMeth(C$, 'dragExit$java_awt_dnd_DragSourceEvent',  function (dsde) {
});

Clazz_newMeth(C$, 'dragDropEnd$java_awt_dnd_DragSourceDropEvent',  function (dsde) {
var dsc=dsde.getDragSourceContext$();
var c=dsc.getComponent$();
if (dsde.getDropSuccess$()) {
c.getTransferHandler$().exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(c, dsc.getTransferable$(), dsde.getDropAction$());
} else {
c.getTransferHandler$().exportDone$javax_swing_JComponent$java_awt_datatransfer_Transferable$I(c, dsc.getTransferable$(), 0);
}c.setAutoscrolls$Z(this.scrolls);
});

Clazz_newMeth(C$, 'dropActionChanged$java_awt_dnd_DragSourceDragEvent',  function (dsde) {
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "SwingDragGestureRecognizer", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'java.awt.dnd.DragGestureRecognizer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_dnd_DragGestureListener',  function (dgl) {
;C$.superclazz.c$$java_awt_dnd_DragSource$java_awt_Component$I$java_awt_dnd_DragGestureListener.apply(this,[$I$(12).getDefaultDragSource$(), null, 0, dgl]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'gestured$javax_swing_JComponent$java_awt_event_MouseEvent$I$I',  function (c, e, srcActions, action) {
this.setComponent$java_awt_Component(c);
this.setSourceActions$I(srcActions);
this.appendEvent$java_awt_event_InputEvent(e);
this.fireDragGestureRecognized$I$java_awt_Point(action, e.getPoint$());
});

Clazz_newMeth(C$, 'registerListeners$',  function () {
});

Clazz_newMeth(C$, 'unregisterListeners$',  function () {
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.TransferHandler, "TransferAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'sun.swing.UIAction', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['SandboxClipboardKey','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.superclazz.c$$S.apply(this,[name]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'isEnabled$O',  function (sender) {
if (Clazz_instanceOf(sender, "javax.swing.JComponent") && (sender).getTransferHandler$() == null  ) {
return false;
}return true;
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
p$3.actionPerformedImpl$java_awt_event_ActionEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'actionPerformedImpl$java_awt_event_ActionEvent',  function (e) {
var src=e.getSource$();
if (Clazz_instanceOf(src, "javax.swing.JComponent")) {
var c=src;
var th=c.getTransferHandler$();
var clipboard=p$3.getClipboard$javax_swing_JComponent.apply(this, [c]);
var name=this.getValue$S("Name");
var trans=null;
try {
if ((clipboard != null ) && (th != null ) && (name != null )  ) {
if ("cut".equals$O(name)) {
th.exportToClipboard$javax_swing_JComponent$java_awt_datatransfer_Clipboard$I(c, clipboard, 2);
} else if ("copy".equals$O(name)) {
th.exportToClipboard$javax_swing_JComponent$java_awt_datatransfer_Clipboard$I(c, clipboard, 1);
} else if ("paste".equals$O(name)) {
trans=clipboard.getContents$O(null);
}}} catch (ise) {
if (Clazz_exceptionOf(ise,"IllegalStateException")){
$I$(13).getLookAndFeel$().provideErrorFeedback$java_awt_Component(c);
return;
} else {
throw ise;
}
}
if (trans != null ) {
th.importData$javax_swing_TransferHandler_TransferSupport(Clazz_new_($I$(8,1).c$$java_awt_Component$java_awt_datatransfer_Transferable,[c, trans]));
}}}, p$3);

Clazz_newMeth(C$, 'getClipboard$javax_swing_JComponent',  function (c) {
return c.getToolkit$().getSystemClipboard$();
}, p$3);

C$.$static$=function(){C$.$static$=0;
C$.SandboxClipboardKey= Clazz_new_();
};

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),p$1={},I$=[[0,'javax.swing.LookAndFeel','java.util.Locale','java.util.HashMap','javax.swing.SwingUtilities','Error','swingjs.JSToolkit','javax.swing.event.SwingPropertyChangeSupport','java.beans.PropertyChangeListener','java.util.Vector']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "UIDefaults", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.Hashtable');
C$.$classes$=[['LazyValue',9],['ActiveValue',9],['LazyInputMap',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.defaultLocale=$I$(2).getDefault$();
},1);

C$.$fields$=[['O',['changeSupport','javax.swing.event.SwingPropertyChangeSupport','resourceBundles','java.util.Vector','defaultLocale','java.util.Locale','resourceCache','java.util.Map']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I$F.apply(this, [700, 0.75]);
}, 1);

Clazz_newMeth(C$, 'c$$I$F',  function (initialCapacity, loadFactor) {
;C$.superclazz.c$$I$F.apply(this,[initialCapacity, loadFactor]);C$.$init$.apply(this);
this.resourceCache=Clazz_new_($I$(3,1));
}, 1);

Clazz_newMeth(C$, 'c$$OA',  function (keyValueList) {
;C$.superclazz.c$$I.apply(this,[(keyValueList.length/2|0)]);C$.$init$.apply(this);
for (var i=0; i < keyValueList.length; i+=2) {
C$.superclazz.prototype.put$O$O.apply(this, [keyValueList[i], keyValueList[i + 1]]);
}
}, 1);

Clazz_newMeth(C$, 'get$O',  function (key) {
var value=p$1.getFromHashtable$O.apply(this, [key]);
return (value != null ) ? value : p$1.getFromResourceBundle$O$java_util_Locale.apply(this, [key, null]);
});

Clazz_newMeth(C$, 'getFromHashtable$O',  function (key) {
var value=C$.superclazz.prototype.get$O.apply(this, [key]);
if (value == null  && (Clazz_instanceOf(key, "java.lang.String")) ) {
var skey=key;
if (skey.endsWith$S(".font") || skey.endsWith$S(".background") || skey.endsWith$S(".foreground")  ) value=C$.superclazz.prototype.get$O.apply(this, ["*" + skey.substring$I(skey.lastIndexOf$S("."))]);
}if (!(Clazz_instanceOf(value, "javax.swing.UIDefaults.ActiveValue")) && !(Clazz_instanceOf(value, "javax.swing.UIDefaults.LazyValue")) ) {
return value;
}if (Clazz_instanceOf(value, "javax.swing.UIDefaults.LazyValue")) {
try {
value=(value).createValue$javax_swing_UIDefaults(this);
} finally {
if (value == null ) {
C$.superclazz.prototype.remove$O.apply(this, [key]);
} else {
C$.superclazz.prototype.put$O$O.apply(this, [key, value]);
}}
} else {
value=(value).createValue$javax_swing_UIDefaults(this);
}return value;
}, p$1);

Clazz_newMeth(C$, 'get$O$java_util_Locale',  function (key, l) {
var value=p$1.getFromHashtable$O.apply(this, [key]);
return (value != null ) ? value : p$1.getFromResourceBundle$O$java_util_Locale.apply(this, [key, l]);
});

Clazz_newMeth(C$, 'getFromResourceBundle$O$java_util_Locale',  function (key, l) {
if (this.resourceBundles == null  || this.resourceBundles.isEmpty$()  || !(Clazz_instanceOf(key, "java.lang.String")) ) {
return null;
}if (l == null ) {
if (this.defaultLocale == null ) return null;
 else l=this.defaultLocale;
}{
return p$1.getResourceCache$java_util_Locale.apply(this, [l]).get$O(key);
}}, p$1);

Clazz_newMeth(C$, 'getResourceCache$java_util_Locale',  function (l) {
return null;
}, p$1);

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
var oldValue=(value == null ) ? C$.superclazz.prototype.remove$O.apply(this, [key]) : C$.superclazz.prototype.put$O$O.apply(this, [key, value]);
if (Clazz_instanceOf(key, "java.lang.String")) {
this.firePropertyChange$S$O$O(key, oldValue, value);
}return oldValue;
});

Clazz_newMeth(C$, 'putDefaults$OA',  function (keyValueList) {
for (var i=0, max=keyValueList.length; i < max; i+=2) {
var value=keyValueList[i + 1];
if (value == null ) {
C$.superclazz.prototype.remove$O.apply(this, [keyValueList[i]]);
} else {
C$.superclazz.prototype.put$O$O.apply(this, [keyValueList[i], value]);
}}
this.firePropertyChange$S$O$O("UIDefaults", null, null);
});

Clazz_newMeth(C$, 'getFont$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Font")) ? value : null;
});

Clazz_newMeth(C$, 'getFont$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Font")) ? value : null;
});

Clazz_newMeth(C$, 'getColor$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Color")) ? value : null;
});

Clazz_newMeth(C$, 'getColor$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Color")) ? value : null;
});

Clazz_newMeth(C$, 'getIcon$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "javax.swing.Icon")) ? value : null;
});

Clazz_newMeth(C$, 'getIcon$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "javax.swing.Icon")) ? value : null;
});

Clazz_newMeth(C$, 'getBorder$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "javax.swing.border.Border")) ? value : null;
});

Clazz_newMeth(C$, 'getBorder$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "javax.swing.border.Border")) ? value : null;
});

Clazz_newMeth(C$, 'getString$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.lang.String")) ? value : null;
});

Clazz_newMeth(C$, 'getString$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.lang.String")) ? value : null;
});

Clazz_newMeth(C$, 'getInt$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.lang.Integer")) ? (value).intValue$() : 0;
});

Clazz_newMeth(C$, 'getInt$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.lang.Integer")) ? (value).intValue$() : 0;
});

Clazz_newMeth(C$, 'getBoolean$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.lang.Boolean")) ? (value).booleanValue$() : false;
});

Clazz_newMeth(C$, 'getBoolean$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.lang.Boolean")) ? (value).booleanValue$() : false;
});

Clazz_newMeth(C$, 'getInsets$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Insets")) ? value : null;
});

Clazz_newMeth(C$, 'getInsets$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Insets")) ? value : null;
});

Clazz_newMeth(C$, 'getDimension$O',  function (key) {
var value=this.get$O(key);
return (Clazz_instanceOf(value, "java.awt.Dimension")) ? value : null;
});

Clazz_newMeth(C$, 'getDimension$O$java_util_Locale',  function (key, l) {
var value=this.get$O$java_util_Locale(key, l);
return (Clazz_instanceOf(value, "java.awt.Dimension")) ? value : null;
});

Clazz_newMeth(C$, 'getUIClass$S$ClassLoader',  function (uiClassID, uiClassLoader) {
try {
var className=this.get$O(uiClassID);
if (className != null ) {
var cls=this.get$O(className);
if (cls == null ) {
if (uiClassLoader == null ) {
cls=$I$(4).loadSystemClass$S(className);
} else {
cls=uiClassLoader.loadClass$S(className);
}if (cls != null ) {
this.put$O$O(className, cls);
}}return cls;
}} catch (e$$) {
if (Clazz_exceptionOf(e$$,"ClassNotFoundException")){
var e = e$$;
{
return null;
}
} else if (Clazz_exceptionOf(e$$,"ClassCastException")){
var e = e$$;
{
return null;
}
} else {
throw e$$;
}
}
return null;
});

Clazz_newMeth(C$, 'getUIClass$S',  function (uiClassID) {
return this.getUIClass$S$ClassLoader(uiClassID, null);
});

Clazz_newMeth(C$, 'getUIError$S',  function (msg) {
System.err.println$S("UIDefaults.getUI() failed: " + msg);
try {
throw Clazz_new_($I$(5,1));
} catch (e) {
e.printStackTrace$();
}
});

Clazz_newMeth(C$, 'getUI$javax_swing_JComponent',  function (target) {
return $I$(6).getComponentUI$javax_swing_JComponent(target);
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(7,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
if (this.changeSupport != null ) {
this.changeSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
}});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
if (this.changeSupport == null ) {
return Clazz_array($I$(8), [0]);
}return this.changeSupport.getPropertyChangeListeners$();
});

Clazz_newMeth(C$, 'firePropertyChange$S$O$O',  function (propertyName, oldValue, newValue) {
if (this.changeSupport != null ) {
this.changeSupport.firePropertyChange$S$O$O(propertyName, oldValue, newValue);
}});

Clazz_newMeth(C$, 'addResourceBundle$S',  function (bundleName) {
if (bundleName == null ) {
return;
}if (this.resourceBundles == null ) {
this.resourceBundles=Clazz_new_($I$(9,1).c$$I,[5]);
}if (!this.resourceBundles.contains$O(bundleName)) {
this.resourceBundles.add$O(bundleName);
this.resourceCache.clear$();
}});

Clazz_newMeth(C$, 'removeResourceBundle$S',  function (bundleName) {
if (this.resourceBundles != null ) {
this.resourceBundles.remove$O(bundleName);
}this.resourceCache.clear$();
});

Clazz_newMeth(C$, 'setDefaultLocale$java_util_Locale',  function (l) {
this.defaultLocale=l;
});

Clazz_newMeth(C$, 'getDefaultLocale$',  function () {
return this.defaultLocale;
});
;
(function(){/*i*/var C$=Clazz_newInterface(P$.UIDefaults, "LazyValue", function(){
});
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.UIDefaults, "ActiveValue", function(){
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.UIDefaults, "LazyInputMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, [['javax.swing.UIDefaults','javax.swing.UIDefaults.LazyValue']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['bindings','Object[]']]]

Clazz_newMeth(C$, 'c$$OA',  function (bindings) {
;C$.$init$.apply(this);
this.bindings=bindings;
}, 1);

Clazz_newMeth(C$, 'createValue$javax_swing_UIDefaults',  function (table) {
if (this.bindings != null ) {
var km=$I$(1).makeInputMap$OA(this.bindings);
return km;
}return null;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[[0,'java.util.ArrayList',['javax.swing.UIManager','.LookAndFeelInfo'],'swingjs.JSUtil','javax.swing.SwingUtilities','java.util.Locale','java.beans.PropertyChangeListener','swingjs.JSToolkit','javax.swing.FocusManager','java.awt.KeyboardFocusManager','javax.swing.LayoutFocusTraversalPolicy','javax.swing.RepaintManager','sun.awt.PaintEventDispatcher','javax.swing.SwingPaintEventDispatcher']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "UIManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['LookAndFeelInfo',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['installedLAFs','javax.swing.UIManager.LookAndFeelInfo[]','laf','javax.swing.LookAndFeel','uid','javax.swing.UIDefaults']]]

Clazz_newMeth(C$, 'getLookAndFeelDefaults$',  function () {
return C$.uid;
}, 1);

Clazz_newMeth(C$, 'getInstalledLookAndFeels$',  function () {
return C$.installedLAFs;
}, 1);

Clazz_newMeth(C$, 'setInstalledLookAndFeels$javax_swing_UIManager_LookAndFeelInfoA',  function (infos) {
$I$(3).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'installLookAndFeel$javax_swing_UIManager_LookAndFeelInfo',  function (info) {
$I$(3).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'installLookAndFeel$S$S',  function (name, className) {
$I$(3).notImplemented$S(null);
}, 1);

Clazz_newMeth(C$, 'getLookAndFeel$',  function () {
return (C$.laf == null  ? (C$.laf=$I$(3).getInstance$S("swingjs.plaf.HTML5LookAndFeel")) : C$.laf);
}, 1);

Clazz_newMeth(C$, 'setLookAndFeel$javax_swing_LookAndFeel',  function (newLookAndFeel) {
}, 1);

Clazz_newMeth(C$, 'setLookAndFeel$S',  function (className) {
var lnfClass=$I$(4).loadSystemClass$S(className);
C$.setLookAndFeel$javax_swing_LookAndFeel((lnfClass.newInstance$()));
}, 1);

Clazz_newMeth(C$, 'getSystemLookAndFeelClassName$',  function () {
return C$.getCrossPlatformLookAndFeelClassName$();
}, 1);

Clazz_newMeth(C$, 'getCrossPlatformLookAndFeelClassName$',  function () {
return "swingjs.plaf.HTML5LookAndFeel";
}, 1);

Clazz_newMeth(C$, 'getDefaults$',  function () {
C$.maybeInitialize$();
return C$.uid;
}, 1);

Clazz_newMeth(C$, 'getFont$O',  function (key) {
return C$.getDefaults$().getFont$O(key);
}, 1);

Clazz_newMeth(C$, 'getFont$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getFont$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getColor$O',  function (key) {
return C$.getDefaults$().getColor$O(key);
}, 1);

Clazz_newMeth(C$, 'getColor$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getColor$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getIcon$O',  function (key) {
return C$.getDefaults$().getIcon$O(key);
}, 1);

Clazz_newMeth(C$, 'getIcon$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getIcon$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getBorder$O',  function (key) {
return C$.getDefaults$().getBorder$O(key);
}, 1);

Clazz_newMeth(C$, 'getBorder$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getBorder$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getString$O',  function (key) {
return C$.getDefaults$().getString$O(key);
}, 1);

Clazz_newMeth(C$, 'getString$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getString$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getString$O$java_awt_Component',  function (key, c) {
var l=(c == null ) ? $I$(5).getDefault$() : c.getLocale$();
return C$.getString$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getInt$O',  function (key) {
return C$.getDefaults$().getInt$O(key);
}, 1);

Clazz_newMeth(C$, 'getInt$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getInt$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getBoolean$O',  function (key) {
return C$.getDefaults$().getBoolean$O(key);
}, 1);

Clazz_newMeth(C$, 'getBoolean$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getBoolean$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getInsets$O',  function (key) {
return C$.getDefaults$().getInsets$O(key);
}, 1);

Clazz_newMeth(C$, 'getInsets$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getInsets$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'getDimension$O',  function (key) {
return C$.getDefaults$().getDimension$O(key);
}, 1);

Clazz_newMeth(C$, 'getDimension$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().getDimension$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'get$O',  function (key) {
return C$.getDefaults$().get$O(key);
}, 1);

Clazz_newMeth(C$, 'get$O$java_util_Locale',  function (key, l) {
return C$.getDefaults$().get$O$java_util_Locale(key, l);
}, 1);

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
return C$.getDefaults$().put$O$O(key, value);
}, 1);

Clazz_newMeth(C$, 'getUI$java_awt_Component',  function (target) {
C$.maybeInitialize$();
C$.maybeInitializeFocusPolicy$javax_swing_JComponent(target);
var ui=C$.getDefaults$().getUI$javax_swing_JComponent(target);
if (ui == null ) System.out.println$S("SwingJS interface has not been implemented for " + target.getClass$().getName$());
return ui;
}, 1);

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
}, 1);

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
}, 1);

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
return Clazz_array($I$(6), [0]);
}, 1);

Clazz_newMeth(C$, 'maybeInitialize$',  function () {
if (C$.uid == null ) {
C$.uid=$I$(7).getLookAndFeelDefaults$();
C$.initialize$();
}}, 1);

Clazz_newMeth(C$, 'maybeInitializeFocusPolicy$javax_swing_JComponent',  function (comp) {
if (Clazz_instanceOf(comp, "javax.swing.JRootPane")) {
if ($I$(8).isFocusManagerEnabled$()) {
var fm=$I$(9).getCurrentKeyboardFocusManager$();
if (fm.getDefaultFocusTraversalPolicy$() == null ) fm.setDefaultFocusTraversalPolicy$java_awt_FocusTraversalPolicy(Clazz_new_($I$(10,1)));
}}}, 1);

Clazz_newMeth(C$, 'initialize$',  function () {
if ($I$(11).HANDLE_TOP_LEVEL_PAINT) {
$I$(12,"setPaintEventDispatcher$sun_awt_PaintEventDispatcher",[Clazz_new_($I$(13,1))]);
}}, 1);

C$.$static$=function(){C$.$static$=0;
{
var iLAFs=Clazz_new_($I$(1,1).c$$I,[4]);
iLAFs.add$O(Clazz_new_($I$(2,1).c$$S$S,["HTML5", "swingjs.plaf.HTML5LookAndFeel"]));
C$.installedLAFs=iLAFs.toArray$OA(Clazz_array($I$(2), [iLAFs.size$()]));
};
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.UIManager, "LookAndFeelInfo", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['name','className']]]

Clazz_newMeth(C$, 'c$$S$S',  function (name, className) {
;C$.$init$.apply(this);
this.name=name;
this.className=className;
}, 1);

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'getClassName$',  function () {
return this.className;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[" + this.getName$() + " " + this.getClassName$() + "]" ;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "WindowConstants");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[[0,'java.awt.Insets','java.awt.Rectangle',['java.awt.Component','.BaselineResizeBehavior']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractBorder", null, null, 'javax.swing.border.Border');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.秘paintClass=C$ ||null;
},1);

C$.$fields$=[['O',['秘paintClass','Class']]]

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I',  function (c, g, x, y, width, height) {
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component',  function (c) {
return Clazz_new_($I$(1,1).c$$I$I$I$I,[0, 0, 0, 0]);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets',  function (c, insets) {
insets.left=insets.top=insets.right=insets.bottom=0;
return insets;
});

Clazz_newMeth(C$, 'isBorderOpaque$',  function () {
return false;
});

Clazz_newMeth(C$, 'getInteriorRectangle$java_awt_Component$I$I$I$I',  function (c, x, y, width, height) {
return C$.getInteriorRectangle$java_awt_Component$javax_swing_border_Border$I$I$I$I(c, this, x, y, width, height);
});

Clazz_newMeth(C$, 'getInteriorRectangle$java_awt_Component$javax_swing_border_Border$I$I$I$I',  function (c, b, x, y, width, height) {
var insets;
if (b != null ) insets=b.getBorderInsets$java_awt_Component(c);
 else insets=Clazz_new_($I$(1,1).c$$I$I$I$I,[0, 0, 0, 0]);
return Clazz_new_($I$(2,1).c$$I$I$I$I,[x + insets.left, y + insets.top, width - insets.right - insets.left , height - insets.top - insets.bottom ]);
}, 1);

Clazz_newMeth(C$, 'getBaseline$java_awt_Component$I$I',  function (c, width, height) {
if (width < 0 || height < 0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Width and height must be >= 0"]);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$java_awt_Component',  function (c) {
if (c == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Component must be non-null"]);
}return $I$(3).OTHER;
});

Clazz_newMeth(C$, 'isLeftToRight$java_awt_Component',  function (c) {
return c.getComponentOrientation$().isLeftToRight$();
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:05 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Border");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[[0,'java.awt.Insets']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "EmptyBorder", null, 'javax.swing.border.AbstractBorder');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['left','right','top','bottom']]]

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (top, left, bottom, right) {
Clazz_super_(C$, this);
this.top=top;
this.right=right;
this.bottom=bottom;
this.left=left;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Insets',  function (borderInsets) {
Clazz_super_(C$, this);
this.top=borderInsets.top;
this.right=borderInsets.right;
this.bottom=borderInsets.bottom;
this.left=borderInsets.left;
}, 1);

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component',  function (c) {
return this.getBorderInsets$();
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets',  function (c, insets) {
insets.left=this.left;
insets.top=this.top;
insets.right=this.right;
insets.bottom=this.bottom;
return insets;
});

Clazz_newMeth(C$, 'getBorderInsets$',  function () {
return Clazz_new_($I$(1,1).c$$I$I$I$I,[this.top, this.left, this.bottom, this.right]);
});

Clazz_newMeth(C$, 'isBorderOpaque$',  function () {
return false;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.border"),I$=[[0,'java.awt.Insets']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "EtchedBorder", null, 'javax.swing.border.AbstractBorder');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['etchType'],'O',['highlight','java.awt.Color','+shadow']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I.apply(this, [1]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (etchType) {
C$.c$$I$java_awt_Color$java_awt_Color.apply(this, [etchType, null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color$java_awt_Color',  function (highlight, shadow) {
C$.c$$I$java_awt_Color$java_awt_Color.apply(this, [1, highlight, shadow]);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color',  function (etchType, highlight, shadow) {
Clazz_super_(C$, this);
this.etchType=etchType;
this.highlight=highlight;
this.shadow=shadow;
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I',  function (c, g, x, y, width, height) {
var w=width;
var h=height;
g.translate$I$I(x, y);
g.setColor$java_awt_Color(this.etchType == 1 ? this.getShadowColor$java_awt_Component(c) : this.getHighlightColor$java_awt_Component(c));
g.drawRect$I$I$I$I(0, 0, w - 2, h - 2);
g.setColor$java_awt_Color(this.etchType == 1 ? this.getHighlightColor$java_awt_Component(c) : this.getShadowColor$java_awt_Component(c));
g.drawLine$I$I$I$I(1, h - 3, 1, 1);
g.drawLine$I$I$I$I(1, 1, w - 3, 1);
g.drawLine$I$I$I$I(0, h - 1, w - 1, h - 1);
g.drawLine$I$I$I$I(w - 1, h - 1, w - 1, 0);
g.translate$I$I(-x, -y);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component',  function (c) {
return Clazz_new_($I$(1,1).c$$I$I$I$I,[2, 2, 2, 2]);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component$java_awt_Insets',  function (c, insets) {
insets.left=insets.top=insets.right=insets.bottom=2;
return insets;
});

Clazz_newMeth(C$, 'isBorderOpaque$',  function () {
return true;
});

Clazz_newMeth(C$, 'getEtchType$',  function () {
return this.etchType;
});

Clazz_newMeth(C$, 'getHighlightColor$java_awt_Component',  function (c) {
return this.highlight != null  ? this.highlight : c.getBackground$().brighter$();
});

Clazz_newMeth(C$, 'getHighlightColor$',  function () {
return this.highlight;
});

Clazz_newMeth(C$, 'getShadowColor$java_awt_Component',  function (c) {
return this.shadow != null  ? this.shadow : c.getBackground$().darker$();
});

Clazz_newMeth(C$, 'getShadowColor$',  function () {
return this.shadow;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "CaretEvent", null, 'java.util.EventObject');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$O',  function (source) {
;C$.superclazz.c$$O.apply(this,[source]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "CaretListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "ChangeEvent", null, 'java.util.EventObject');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$O',  function (source) {
;C$.superclazz.c$$O.apply(this,[source]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ChangeListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "DocumentEvent", function(){
});
C$.$classes$=[['EventType',25],['ElementChange',9]];
;
(function(){/*c*/var C$=Clazz_newClass(P$.DocumentEvent, "EventType", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['typeString']]
,['O',['INSERT','javax.swing.event.DocumentEvent.EventType','+REMOVE','+CHANGE']]]

Clazz_newMeth(C$, 'c$$S',  function (s) {
;C$.$init$.apply(this);
this.typeString=s;
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return this.typeString;
});

C$.$static$=function(){C$.$static$=0;
C$.INSERT=Clazz_new_(C$.c$$S,["INSERT"]);
C$.REMOVE=Clazz_new_(C$.c$$S,["REMOVE"]);
C$.CHANGE=Clazz_new_(C$.c$$S,["CHANGE"]);
};

Clazz_newMeth(C$);
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.DocumentEvent, "ElementChange", function(){
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "DocumentListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),p$1={},I$=[[0,'java.lang.reflect.Array']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "EventListenerList");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.listenerList=C$.NULL_ARRAY;
},1);

C$.$fields$=[['O',['+listenerList']]
,['O',['NULL_ARRAY','Object[]']]]

Clazz_newMeth(C$, 'getListenerList$',  function () {
return this.listenerList;
});

Clazz_newMeth(C$, 'getListeners$Class',  function (t) {
var lList=this.listenerList;
var n=p$1.getListenerCount$OA$Class.apply(this, [lList, t]);
var result=Clazz_array(t, n);
var j=0;
for (var i=lList.length - 2; i >= 0; i-=2) {
if (lList[i] === t ) {
result[j++]=lList[i + 1];
}}
return result;
});

Clazz_newMeth(C$, 'getListenerCount$',  function () {
return (this.listenerList.length/2|0);
});

Clazz_newMeth(C$, 'getListenerCount$Class',  function (t) {
var lList=this.listenerList;
return p$1.getListenerCount$OA$Class.apply(this, [lList, t]);
});

Clazz_newMeth(C$, 'getListenerCount$OA$Class',  function (list, t) {
var count=0;
for (var i=0; i < list.length; i+=2) {
if (t === list[i] ) ++count;
}
return count;
}, p$1);

Clazz_newMeth(C$, 'add$Class$java_util_EventListener',  function (t, l) {
if (l == null ) {
return;
}if (this.listenerList === C$.NULL_ARRAY ) {
this.listenerList=Clazz_array(java.lang.Object, -1, [t, l]);
} else {
var i=this.listenerList.length;
var tmp=Clazz_array(java.lang.Object, [i + 2]);
System.arraycopy$O$I$O$I$I(this.listenerList, 0, tmp, 0, i);
tmp[i]=t;
tmp[i + 1]=l;
this.listenerList=tmp;
}});

Clazz_newMeth(C$, 'remove$Class$java_util_EventListener',  function (t, l) {
if (l == null ) {
return;
}var index=-1;
for (var i=this.listenerList.length - 2; i >= 0; i-=2) {
if ((this.listenerList[i] === t ) && (this.listenerList[i + 1].equals$O(l) == true ) ) {
index=i;
break;
}}
if (index != -1) {
var tmp=Clazz_array(java.lang.Object, [this.listenerList.length - 2]);
System.arraycopy$O$I$O$I$I(this.listenerList, 0, tmp, 0, index);
if (index < tmp.length) System.arraycopy$O$I$O$I$I(this.listenerList, index + 2, tmp, index, tmp.length - index);
this.listenerList=(tmp.length == 0) ? C$.NULL_ARRAY : tmp;
}});

Clazz_newMeth(C$, 'toString',  function () {
var lList=this.listenerList;
var s="EventListenerList: ";
s+=(lList.length/2|0) + " listeners: ";
for (var i=0; i <= lList.length - 2; i+=2) {
s+=" type " + (lList[i]).getName$();
s+=" listener " + lList[i + 1];
}
return s;
});

C$.$static$=function(){C$.$static$=0;
C$.NULL_ARRAY=Clazz_array(java.lang.Object, [0]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:06 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "UndoableEditEvent", null, 'java.util.EventObject');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['myEdit','javax.swing.undo.UndoableEdit']]]

Clazz_newMeth(C$, 'c$$O$javax_swing_undo_UndoableEdit',  function (source, edit) {
;C$.superclazz.c$$O.apply(this,[source]);C$.$init$.apply(this);
this.myEdit=edit;
}, 1);

Clazz_newMeth(C$, 'getEdit$',  function () {
return this.myEdit;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "UndoableEditListener", null, null, 'java.util.EventListener');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "ActionMapUIResource", null, 'javax.swing.ActionMap', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[[0,'javax.swing.border.CompoundBorder',['javax.swing.plaf.BorderUIResource','.EtchedBorderUIResource'],['javax.swing.plaf.BorderUIResource','.BevelBorderUIResource'],['javax.swing.plaf.BorderUIResource','.LineBorderUIResource'],'java.awt.Color']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BorderUIResource", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['javax.swing.border.Border', 'javax.swing.plaf.UIResource']);
C$.$classes$=[['CompoundBorderUIResource',9],['EmptyBorderUIResource',9],['LineBorderUIResource',9],['BevelBorderUIResource',9],['EtchedBorderUIResource',9],['MatteBorderUIResource',9],['TitledBorderUIResource',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['+delegate']]
,['O',['etched','javax.swing.border.Border','+loweredBevel','+raisedBevel','+blackLine']]]

Clazz_newMeth(C$, 'getEtchedBorderUIResource$',  function () {
if (C$.etched == null ) {
C$.etched=Clazz_new_($I$(2,1));
}return C$.etched;
}, 1);

Clazz_newMeth(C$, 'getLoweredBevelBorderUIResource$',  function () {
if (C$.loweredBevel == null ) {
C$.loweredBevel=Clazz_new_($I$(3,1).c$$I,[1]);
}return C$.loweredBevel;
}, 1);

Clazz_newMeth(C$, 'getRaisedBevelBorderUIResource$',  function () {
if (C$.raisedBevel == null ) {
C$.raisedBevel=Clazz_new_($I$(3,1).c$$I,[0]);
}return C$.raisedBevel;
}, 1);

Clazz_newMeth(C$, 'getBlackLineBorderUIResource$',  function () {
if (C$.blackLine == null ) {
C$.blackLine=Clazz_new_([$I$(5).black],$I$(4,1).c$$java_awt_Color);
}return C$.blackLine;
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border',  function (delegate) {
;C$.$init$.apply(this);
if (delegate == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["null border delegate argument"]);
}this.delegate=delegate;
}, 1);

Clazz_newMeth(C$, 'paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I',  function (c, g, x, y, width, height) {
this.delegate.paintBorder$java_awt_Component$java_awt_Graphics$I$I$I$I(c, g, x, y, width, height);
});

Clazz_newMeth(C$, 'getBorderInsets$java_awt_Component',  function (c) {
return this.delegate.getBorderInsets$java_awt_Component(c);
});

Clazz_newMeth(C$, 'isBorderOpaque$',  function () {
return this.delegate.isBorderOpaque$();
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "CompoundBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.CompoundBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$javax_swing_border_Border',  function (outsideBorder, insideBorder) {
;C$.superclazz.c$$javax_swing_border_Border$javax_swing_border_Border.apply(this,[outsideBorder, insideBorder]);C$.$init$.apply(this);
this.秘paintClass=Clazz_getClass($I$(1));
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "EmptyBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.EmptyBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (top, left, bottom, right) {
;C$.superclazz.c$$I$I$I$I.apply(this,[top, left, bottom, right]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Insets',  function (insets) {
;C$.superclazz.c$$java_awt_Insets.apply(this,[insets]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "LineBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.LineBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$java_awt_Color',  function (color) {
;C$.superclazz.c$$java_awt_Color.apply(this,[color]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color$I',  function (color, thickness) {
;C$.superclazz.c$$java_awt_Color$I.apply(this,[color, thickness]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "BevelBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.BevelBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I',  function (bevelType) {
;C$.superclazz.c$$I.apply(this,[bevelType]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color',  function (bevelType, highlight, shadow) {
;C$.superclazz.c$$I$java_awt_Color$java_awt_Color.apply(this,[bevelType, highlight, shadow]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color',  function (bevelType, highlightOuter, highlightInner, shadowOuter, shadowInner) {
;C$.superclazz.c$$I$java_awt_Color$java_awt_Color$java_awt_Color$java_awt_Color.apply(this,[bevelType, highlightOuter, highlightInner, shadowOuter, shadowInner]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "EtchedBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.EtchedBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (etchType) {
;C$.superclazz.c$$I.apply(this,[etchType]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color$java_awt_Color',  function (highlight, shadow) {
;C$.superclazz.c$$java_awt_Color$java_awt_Color.apply(this,[highlight, shadow]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$java_awt_Color$java_awt_Color',  function (etchType, highlight, shadow) {
;C$.superclazz.c$$I$java_awt_Color$java_awt_Color.apply(this,[etchType, highlight, shadow]);C$.$init$.apply(this);
}, 1);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "MatteBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.MatteBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I$I$I$I$java_awt_Color',  function (top, left, bottom, right, color) {
;C$.superclazz.c$$I$I$I$I$java_awt_Color.apply(this,[top, left, bottom, right, color]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$I$javax_swing_Icon',  function (top, left, bottom, right, tileIcon) {
;C$.superclazz.c$$I$I$I$I$javax_swing_Icon.apply(this,[top, left, bottom, right, tileIcon]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_Icon',  function (tileIcon) {
;C$.superclazz.c$$javax_swing_Icon.apply(this,[tileIcon]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BorderUIResource, "TitledBorderUIResource", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.border.TitledBorder', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (title) {
;C$.superclazz.c$$S.apply(this,[title]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border',  function (border) {
;C$.superclazz.c$$javax_swing_border_Border.apply(this,[border]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S',  function (border, title) {
;C$.superclazz.c$$javax_swing_border_Border$S.apply(this,[border, title]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S$I$I',  function (border, title, titleJustification, titlePosition) {
;C$.superclazz.c$$javax_swing_border_Border$S$I$I.apply(this,[border, title, titleJustification, titlePosition]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S$I$I$java_awt_Font',  function (border, title, titleJustification, titlePosition, titleFont) {
;C$.superclazz.c$$javax_swing_border_Border$S$I$I$java_awt_Font.apply(this,[border, title, titleJustification, titlePosition, titleFont]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_border_Border$S$I$I$java_awt_Font$java_awt_Color',  function (border, title, titleJustification, titlePosition, titleFont, titleColor) {
;C$.superclazz.c$$javax_swing_border_Border$S$I$I$java_awt_Font$java_awt_Color.apply(this,[border, title, titleJustification, titlePosition, titleFont, titleColor]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "ColorUIResource", null, 'java.awt.Color', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I',  function (r, g, b) {
;C$.superclazz.c$$I$I$I.apply(this,[r, g, b]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (rgb) {
;C$.superclazz.c$$I.apply(this,[rgb]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$F$F$F',  function (r, g, b) {
;C$.superclazz.c$$F$F$F.apply(this,[r, g, b]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Color',  function (c) {
;C$.superclazz.c$$I$Z.apply(this,[c.getRGB$(), (c.getRGB$() & -16777216) != -16777216]);C$.$init$.apply(this);
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:07 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[[0,'Error',['java.awt.Component','.BaselineResizeBehavior']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ComponentUI", null, null, 'java.awt.peer.ComponentPeer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (component) {
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent',  function (c) {
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics$javax_swing_JComponent',  function (g, c) {
});

Clazz_newMeth(C$, 'update$java_awt_Graphics$javax_swing_JComponent',  function (g, c) {
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent',  function (c) {
return null;
});

Clazz_newMeth(C$, 'getMinimumSize$javax_swing_JComponent',  function (c) {
return this.getPreferredSize$javax_swing_JComponent(c);
});

Clazz_newMeth(C$, 'getMaximumSize$javax_swing_JComponent',  function (c) {
return this.getPreferredSize$javax_swing_JComponent(c);
});

Clazz_newMeth(C$, 'contains$javax_swing_JComponent$I$I',  function (c, x, y) {
return c.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'createUI$javax_swing_JComponent',  function (c) {
throw Clazz_new_($I$(1,1).c$$S,["ComponentUI.createUI not implemented."]);
}, 1);

Clazz_newMeth(C$, 'getBaseline$javax_swing_JComponent$I$I',  function (c, width, height) {
return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$javax_swing_JComponent',  function (c) {
return $I$(2).OTHER;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "DimensionUIResource", null, 'java.awt.Dimension', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I$I',  function (width, height) {
;C$.superclazz.c$$I$I.apply(this,[width, height]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "FontUIResource", null, 'java.awt.Font', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S$I$I',  function (name, style, size) {
;C$.superclazz.c$$S$I$I.apply(this,[name, style, size]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Font',  function (font) {
;C$.superclazz.c$$java_awt_Font.apply(this,[font]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "InputMapUIResource", null, 'javax.swing.InputMap', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "InsetsUIResource", null, 'java.awt.Insets', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$I$I$I$I',  function (top, left, bottom, right) {
;C$.superclazz.c$$I$I$I$I.apply(this,[top, left, bottom, right]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:08 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.plaf"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "UIResource");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:10 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),p$1={},p$2={},I$=[[0,'javax.swing.text.StyleConstants',['javax.swing.text.AbstractDocument','.AbstractElement'],'java.util.Vector','javax.swing.text.StateInvariantError','java.util.Hashtable',['javax.swing.text.AbstractDocument','.UndoRedoDocumentEvent'],['javax.swing.event.DocumentEvent','.EventType'],'javax.swing.UIManager','javax.swing.event.EventListenerList','javax.swing.text.StyleContext','javax.swing.event.DocumentListener','javax.swing.event.UndoableEditListener',['javax.swing.text.AbstractDocument','.DefaultDocumentEvent'],'javax.swing.text.Utilities','javax.swing.event.UndoableEditEvent','javax.swing.text.Element',['javax.swing.text.AbstractDocument','.DefaultFilterBypass'],'javax.swing.text.SegmentCache',['javax.swing.text.AbstractDocument','.LeafElement'],['javax.swing.text.AbstractDocument','.BranchElement']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractDocument", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'javax.swing.text.Document');
C$.$classes$=[['Content',9],['AttributeContext',9],['AbstractElement',1025],['BranchElement',1],['LeafElement',1],['DefaultDocumentEvent',1],['UndoRedoDocumentEvent',0],['ElementEdit',9],['DefaultFilterBypass',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.documentProperties=null;
this.listenerList=Clazz_new_($I$(9,1));
},1);

C$.$fields$=[['Z',['isAWT','秘replacing'],'I',['currentDot','currentMark'],'O',['documentProperties','java.util.Dictionary','listenerList','javax.swing.event.EventListenerList','data','javax.swing.text.AbstractDocument.Content','context','javax.swing.text.AbstractDocument.AttributeContext','bidiRoot','javax.swing.text.AbstractDocument.BranchElement','documentFilter','javax.swing.text.DocumentFilter','filterBypass','javax.swing.text.DocumentFilter.FilterBypass','editor','javax.swing.text.JTextComponent']]
,['O',['MultiByteProperty','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_AbstractDocument_Content',  function (data) {
C$.c$$javax_swing_text_AbstractDocument_Content$javax_swing_text_AbstractDocument_AttributeContext.apply(this, [data, $I$(10).getDefaultStyleContext$()]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_text_AbstractDocument_Content$javax_swing_text_AbstractDocument_AttributeContext',  function (data, context) {
;C$.$init$.apply(this);
this.data=data;
this.context=context;
}, 1);

Clazz_newMeth(C$, 'getDocumentProperties$',  function () {
if (this.documentProperties == null ) {
this.documentProperties=Clazz_new_($I$(5,1).c$$I,[2]);
}return this.documentProperties;
});

Clazz_newMeth(C$, 'setDocumentProperties$java_util_Dictionary',  function (x) {
this.documentProperties=x;
});

Clazz_newMeth(C$, 'fireInsertUpdate$javax_swing_event_DocumentEvent',  function (e) {
try {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(11),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']) ) {
(listeners[i + 1]).insertUpdate$javax_swing_event_DocumentEvent(e);
}}
} finally {
}
});

Clazz_newMeth(C$, 'fireChangedUpdate$javax_swing_event_DocumentEvent',  function (e) {
try {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(11),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']) ) {
(listeners[i + 1]).changedUpdate$javax_swing_event_DocumentEvent(e);
}}
} finally {
}
});

Clazz_newMeth(C$, 'fireRemoveUpdate$javax_swing_event_DocumentEvent',  function (e) {
try {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(11),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']) ) {
(listeners[i + 1]).removeUpdate$javax_swing_event_DocumentEvent(e);
}}
} finally {
}
});

Clazz_newMeth(C$, 'fireUndoableEditUpdate$javax_swing_event_UndoableEditEvent',  function (e) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(12),['undoableEditHappened$javax_swing_event_UndoableEditEvent']) ) {
(listeners[i + 1]).undoableEditHappened$javax_swing_event_UndoableEditEvent(e);
}}
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$, 'getAsynchronousLoadPriority$',  function () {
var loadPriority=this.getProperty$O("load priority");
if (loadPriority != null ) {
return loadPriority.intValue$();
}return -1;
});

Clazz_newMeth(C$, 'setAsynchronousLoadPriority$I',  function (p) {
var loadPriority=(p >= 0) ?  new Integer(p) : null;
this.putProperty$O$O("load priority", loadPriority);
});

Clazz_newMeth(C$, 'setDocumentFilter$javax_swing_text_DocumentFilter',  function (filter) {
this.documentFilter=filter;
});

Clazz_newMeth(C$, 'getDocumentFilter$',  function () {
return this.documentFilter;
});

Clazz_newMeth(C$, 'render$Runnable',  function (r) {
try {
r.run$();
} finally {
}
});

Clazz_newMeth(C$, 'getLength$',  function () {
return this.data.length$() - 1;
});

Clazz_newMeth(C$, 'addDocumentListener$javax_swing_event_DocumentListener',  function (listener) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(11),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']), listener);
});

Clazz_newMeth(C$, 'removeDocumentListener$javax_swing_event_DocumentListener',  function (listener) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(11),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']), listener);
});

Clazz_newMeth(C$, 'getDocumentListeners$',  function () {
return this.listenerList.getListeners$Class(Clazz_getClass($I$(11),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']));
});

Clazz_newMeth(C$, 'addUndoableEditListener$javax_swing_event_UndoableEditListener',  function (listener) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(12),['undoableEditHappened$javax_swing_event_UndoableEditEvent']), listener);
});

Clazz_newMeth(C$, 'removeUndoableEditListener$javax_swing_event_UndoableEditListener',  function (listener) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(12),['undoableEditHappened$javax_swing_event_UndoableEditEvent']), listener);
});

Clazz_newMeth(C$, 'getUndoableEditListeners$',  function () {
return this.listenerList.getListeners$Class(Clazz_getClass($I$(12),['undoableEditHappened$javax_swing_event_UndoableEditEvent']));
});

Clazz_newMeth(C$, 'getProperty$O',  function (key) {
return this.getDocumentProperties$().get$O(key);
});

Clazz_newMeth(C$, 'putProperty$O$O',  function (key, value) {
if (value != null ) {
this.getDocumentProperties$().put$O$O(key, value);
} else {
this.getDocumentProperties$().remove$O(key);
}});

Clazz_newMeth(C$, 'remove$I$I',  function (offs, len) {
var filter=this.getDocumentFilter$();
this.writeLock$();
try {
if (filter != null ) {
filter.remove$javax_swing_text_DocumentFilter_FilterBypass$I$I(p$2.getFilterBypass.apply(this, []), offs, len);
} else {
this.handleRemove$I$I(offs, len);
}} finally {
this.writeUnlock$();
}
});

Clazz_newMeth(C$, 'handleRemove$I$I',  function (offs, len) {
if (len > 0) {
if (offs < 0 || (offs + len) > this.getLength$() ) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Invalid remove", this.getLength$() + 1]);
}var chng=Clazz_new_([this, null, offs, len, $I$(7).REMOVE],$I$(13,1).c$$I$I$javax_swing_event_DocumentEvent_EventType);
var isComposedTextElement=false;
isComposedTextElement=$I$(14).isComposedTextElement$javax_swing_text_Document$I(this, offs);
this.removeUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent(chng);
var u=this.data.remove$I$I(offs, len);
if (u != null ) {
chng.addEdit$javax_swing_undo_UndoableEdit(u);
}this.postRemoveUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent(chng);
chng.end$();
this.fireRemoveUpdate$javax_swing_event_DocumentEvent(chng);
if ((u != null ) && !isComposedTextElement ) {
this.fireUndoableEditUpdate$javax_swing_event_UndoableEditEvent(Clazz_new_($I$(15,1).c$$O$javax_swing_undo_UndoableEdit,[this, chng]));
}}});

Clazz_newMeth(C$, 'replace$I$I$S$javax_swing_text_AttributeSet',  function (offset, length, text, attrs) {
if (length == 0 && (text == null  || text.length$() == 0 ) ) {
return;
}var filter=this.getDocumentFilter$();
this.writeLock$();
try {
if (filter != null ) {
filter.replace$javax_swing_text_DocumentFilter_FilterBypass$I$I$S$javax_swing_text_AttributeSet(p$2.getFilterBypass.apply(this, []), offset, length, text, attrs);
} else {
if (length > 0) {
this.remove$I$I(offset, length);
this.秘replacing=true;
} else {
this.秘replacing=false;
}if (text != null  && text.length$() > 0 ) {
this.insertString$I$S$javax_swing_text_AttributeSet(offset, text, attrs);
}this.秘replacing=false;
}} finally {
this.writeUnlock$();
}
});

Clazz_newMeth(C$, 'insertString$I$S$javax_swing_text_AttributeSet',  function (offs, str, a) {
if ((str == null ) || (str.length$() == 0) ) {
return;
}var filter=this.getDocumentFilter$();
this.writeLock$();
try {
if (filter != null ) {
filter.insertString$javax_swing_text_DocumentFilter_FilterBypass$I$S$javax_swing_text_AttributeSet(p$2.getFilterBypass.apply(this, []), offs, str, a);
} else {
this.handleInsertString$I$S$javax_swing_text_AttributeSet(offs, str, a);
}} finally {
this.writeUnlock$();
}
});

Clazz_newMeth(C$, 'handleInsertString$I$S$javax_swing_text_AttributeSet',  function (offs, str, a) {
if ((str == null ) || (str.length$() == 0) ) {
return;
}var u=this.data.insertString$I$S(offs, str);
var e=Clazz_new_([this, null, offs, str.length$(), $I$(7).INSERT],$I$(13,1).c$$I$I$javax_swing_event_DocumentEvent_EventType);
if (u != null ) {
e.addEdit$javax_swing_undo_UndoableEdit(u);
}this.insertUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent$javax_swing_text_AttributeSet(e, a);
e.end$();
this.fireInsertUpdate$javax_swing_event_DocumentEvent(e);
if (u != null  && (a == null  || !a.isDefined$O($I$(1).ComposedTextAttribute) ) ) {
this.fireUndoableEditUpdate$javax_swing_event_UndoableEditEvent(Clazz_new_($I$(15,1).c$$O$javax_swing_undo_UndoableEdit,[this, e]));
}});

Clazz_newMeth(C$, 'getText$I$I',  function (offset, length) {
if (length < 0) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Length must be positive", length]);
}var str=this.data.getString$I$I(offset, length);
return str;
});

Clazz_newMeth(C$, 'getText$I$I$javax_swing_text_Segment',  function (offset, length, txt) {
if (length < 0) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Length must be positive", length]);
}this.data.getChars$I$I$javax_swing_text_Segment(offset, length, txt);
});

Clazz_newMeth(C$, 'createPosition$I',  function (offs) {
return this.data.createPosition$I(offs);
});

Clazz_newMeth(C$, 'getStartPosition$',  function () {
var p;
try {
p=this.createPosition$I(0);
} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
p=null;
} else {
throw bl;
}
}
return p;
});

Clazz_newMeth(C$, 'getEndPosition$',  function () {
var p;
try {
p=this.createPosition$I(this.data.length$());
} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
p=null;
} else {
throw bl;
}
}
return p;
});

Clazz_newMeth(C$, 'getRootElements$',  function () {
var elems=Clazz_array($I$(16), [2]);
elems[0]=this.getDefaultRootElement$();
elems[1]=this.getBidiRootElement$();
return elems;
});

Clazz_newMeth(C$, 'getFilterBypass',  function () {
if (this.filterBypass == null ) {
this.filterBypass=Clazz_new_($I$(17,1),[this, null]);
}return this.filterBypass;
}, p$2);

Clazz_newMeth(C$, 'getBidiRootElement$',  function () {
return this.bidiRoot;
});

Clazz_newMeth(C$, 'isLeftToRight$I$I',  function (p0, p1) {
return true;
});

Clazz_newMeth(C$, 'getAttributeContext$',  function () {
return this.context;
});

Clazz_newMeth(C$, 'insertUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent$javax_swing_text_AttributeSet',  function (chng, attr) {
if (chng.type === $I$(7).INSERT  && chng.getLength$() > 0  && !Boolean.TRUE.equals$O(this.getProperty$O(C$.MultiByteProperty)) ) {
var segment=$I$(18).getSharedSegment$();
try {
this.getText$I$I$javax_swing_text_Segment(chng.getOffset$(), chng.getLength$(), segment);
segment.first$();
do {
if (segment.current$().$c() > 255) {
this.putProperty$O$O(C$.MultiByteProperty, Boolean.TRUE);
break;
}} while (segment.next$() != "\uffff");
} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
$I$(18).releaseSharedSegment$javax_swing_text_Segment(segment);
}});

Clazz_newMeth(C$, 'removeUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent',  function (chng) {
});

Clazz_newMeth(C$, 'postRemoveUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent',  function (chng) {
});

Clazz_newMeth(C$, 'getContent$',  function () {
return this.data;
});

Clazz_newMeth(C$, 'createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I',  function (parent, a, p0, p1) {
return Clazz_new_($I$(19,1).c$$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I,[this, null, parent, a, p0, p1]);
});

Clazz_newMeth(C$, 'createBranchElement$javax_swing_text_Element$javax_swing_text_AttributeSet',  function (parent, a) {
return Clazz_new_($I$(20,1).c$$javax_swing_text_Element$javax_swing_text_AttributeSet,[this, null, parent, a]);
});

Clazz_newMeth(C$, 'writeLock$',  function () {
});

Clazz_newMeth(C$, 'writeUnlock$',  function () {
});

Clazz_newMeth(C$, 'readLock$',  function () {
});

Clazz_newMeth(C$, 'readUnlock$',  function () {
});

Clazz_newMeth(C$, 'replace$I$I$S$javax_swing_text_AttributeSet$javax_swing_text_JTextComponent',  function (offset, length, text, attrs, c) {
this.editor=c;
this.isAWT=c.秘isAWT$();
if (this.isAWT) {
this.currentDot=c.getCaret$().getDot$();
this.currentMark=c.getCaret$().getMark$();
}this.replace$I$I$S$javax_swing_text_AttributeSet(offset, length, text, attrs);
});

Clazz_newMeth(C$, 'resetAWTScroll$',  function () {
if (this.isAWT) {
this.editor.getCaret$().setDot$I(this.currentMark);
this.editor.getCaret$().moveDot$I(this.currentDot);
}});

C$.$static$=function(){C$.$static$=0;
C$.MultiByteProperty="multiByte";
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.AbstractDocument, "Content", function(){
});
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.AbstractDocument, "AttributeContext", function(){
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "AbstractElement", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, ['javax.swing.text.Element', 'javax.swing.text.MutableAttributeSet', 'javax.swing.tree.TreeNode']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['parent','javax.swing.text.Element','attributes','javax.swing.text.AttributeSet']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Element$javax_swing_text_AttributeSet',  function (parent, a) {
;C$.$init$.apply(this);
this.parent=parent;
this.attributes=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []).getEmptySet$();
if (a != null ) {
this.addAttributes$javax_swing_text_AttributeSet(a);
}}, 1);

Clazz_newMeth(C$, 'getAttributeCount$',  function () {
return this.attributes.getAttributeCount$();
});

Clazz_newMeth(C$, 'isDefined$O',  function (attrName) {
return this.attributes.isDefined$O(attrName);
});

Clazz_newMeth(C$, 'isEqual$javax_swing_text_AttributeSet',  function (attr) {
return this.attributes.isEqual$javax_swing_text_AttributeSet(attr);
});

Clazz_newMeth(C$, 'copyAttributes$',  function () {
return this.attributes.copyAttributes$();
});

Clazz_newMeth(C$, 'getAttribute$O',  function (attrName) {
var value=this.attributes.getAttribute$O(attrName);
if (value == null ) {
var a=(this.parent != null ) ? this.parent.getAttributes$() : null;
if (a != null ) {
value=a.getAttribute$O(attrName);
}}return value;
});

Clazz_newMeth(C$, 'getAttributeNames$',  function () {
return this.attributes.getAttributeNames$();
});

Clazz_newMeth(C$, 'containsAttribute$O$O',  function (name, value) {
return this.attributes.containsAttribute$O$O(name, value);
});

Clazz_newMeth(C$, 'containsAttributes$javax_swing_text_AttributeSet',  function (attrs) {
return this.attributes.containsAttributes$javax_swing_text_AttributeSet(attrs);
});

Clazz_newMeth(C$, 'getResolveParent$',  function () {
var a=this.attributes.getResolveParent$();
if ((a == null ) && (this.parent != null ) ) {
a=this.parent.getAttributes$();
}return a;
});

Clazz_newMeth(C$, 'addAttribute$O$O',  function (name, value) {
p$1.checkForIllegalCast.apply(this, []);
var context=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
this.attributes=context.addAttribute$javax_swing_text_AttributeSet$O$O(this.attributes, name, value);
});

Clazz_newMeth(C$, 'addAttributes$javax_swing_text_AttributeSet',  function (attr) {
p$1.checkForIllegalCast.apply(this, []);
var context=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
this.attributes=context.addAttributes$javax_swing_text_AttributeSet$javax_swing_text_AttributeSet(this.attributes, attr);
});

Clazz_newMeth(C$, 'removeAttribute$O',  function (name) {
p$1.checkForIllegalCast.apply(this, []);
var context=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
this.attributes=context.removeAttribute$javax_swing_text_AttributeSet$O(this.attributes, name);
});

Clazz_newMeth(C$, 'removeAttributes$java_util_Enumeration',  function (names) {
p$1.checkForIllegalCast.apply(this, []);
var context=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
this.attributes=context.removeAttributes$javax_swing_text_AttributeSet$java_util_Enumeration(this.attributes, names);
});

Clazz_newMeth(C$, 'removeAttributes$javax_swing_text_AttributeSet',  function (attrs) {
p$1.checkForIllegalCast.apply(this, []);
var context=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
if (attrs === this ) {
this.attributes=context.getEmptySet$();
} else {
this.attributes=context.removeAttributes$javax_swing_text_AttributeSet$javax_swing_text_AttributeSet(this.attributes, attrs);
}});

Clazz_newMeth(C$, 'setResolveParent$javax_swing_text_AttributeSet',  function (parent) {
p$1.checkForIllegalCast.apply(this, []);
var context=this.b$['javax.swing.text.AbstractDocument'].getAttributeContext$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
if (parent != null ) {
this.attributes=context.addAttribute$javax_swing_text_AttributeSet$O$O(this.attributes, $I$(1).ResolveAttribute, parent);
} else {
this.attributes=context.removeAttribute$javax_swing_text_AttributeSet$O(this.attributes, $I$(1).ResolveAttribute);
}});

Clazz_newMeth(C$, 'checkForIllegalCast',  function () {
}, p$1);

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.b$['javax.swing.text.AbstractDocument'];
});

Clazz_newMeth(C$, 'getParentElement$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'getAttributes$',  function () {
return this;
});

Clazz_newMeth(C$, 'getName$',  function () {
if (this.attributes.isDefined$O("$ename")) {
return this.attributes.getAttribute$O("$ename");
}return null;
});

Clazz_newMeth(C$, 'getChildAt$I',  function (childIndex) {
return this.getElement$I(childIndex);
});

Clazz_newMeth(C$, 'getChildCount$',  function () {
return this.getElementCount$();
});

Clazz_newMeth(C$, 'getParent$',  function () {
return this.getParentElement$();
});

Clazz_newMeth(C$, 'getIndex$javax_swing_tree_TreeNode',  function (node) {
for (var counter=this.getChildCount$() - 1; counter >= 0; counter--) if (this.getChildAt$I(counter) === node ) return counter;

return -1;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "BranchElement", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['javax.swing.text.AbstractDocument','.AbstractElement']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['nchildren','lastIndex'],'O',['children','javax.swing.text.AbstractDocument.AbstractElement[]']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Element$javax_swing_text_AttributeSet',  function (parent, a) {
;C$.superclazz.c$$javax_swing_text_Element$javax_swing_text_AttributeSet.apply(this,[parent, a]);C$.$init$.apply(this);
this.children=Clazz_array($I$(2), [1]);
this.nchildren=0;
this.lastIndex=-1;
}, 1);

Clazz_newMeth(C$, 'positionToElement$I',  function (pos) {
var index=this.getElementIndex$I(pos);
var child=this.children[index];
var p0=child.getStartOffset$();
var p1=child.getEndOffset$();
if ((pos >= p0) && (pos < p1) ) {
return child;
}return null;
});

Clazz_newMeth(C$, 'replace$I$I$javax_swing_text_ElementA',  function (offset, length, elems) {
var delta=elems.length - length;
var src=offset + length;
var nmove=this.nchildren - src;
var dest=src + delta;
if ((this.nchildren + delta) >= this.children.length) {
var newLength=Math.max(2 * this.children.length, this.nchildren + delta);
var newChildren=Clazz_array($I$(2), [newLength]);
System.arraycopy$O$I$O$I$I(this.children, 0, newChildren, 0, offset);
System.arraycopy$O$I$O$I$I(elems, 0, newChildren, offset, elems.length);
System.arraycopy$O$I$O$I$I(this.children, src, newChildren, dest, nmove);
this.children=newChildren;
} else {
System.arraycopy$O$I$O$I$I(this.children, src, this.children, dest, nmove);
System.arraycopy$O$I$O$I$I(elems, 0, this.children, offset, elems.length);
}this.nchildren=this.nchildren + delta;
});

Clazz_newMeth(C$, 'toString',  function () {
return "BranchElement(" + this.getName$() + ") " + this.getStartOffset$() + "," + this.getEndOffset$() + "\n" ;
});

Clazz_newMeth(C$, 'getName$',  function () {
var nm=C$.superclazz.prototype.getName$.apply(this, []);
if (nm == null ) {
nm="paragraph";
}return nm;
});

Clazz_newMeth(C$, 'getStartOffset$',  function () {
return this.children[0].getStartOffset$();
});

Clazz_newMeth(C$, 'getEndOffset$',  function () {
var child=(this.nchildren > 0) ? this.children[this.nchildren - 1] : this.children[0];
return child.getEndOffset$();
});

Clazz_newMeth(C$, 'getElement$I',  function (index) {
if (index < this.nchildren) {
return this.children[index];
}return null;
});

Clazz_newMeth(C$, 'getElementCount$',  function () {
return this.nchildren;
});

Clazz_newMeth(C$, 'getElementIndex$I',  function (offset) {
var index;
var lower=0;
var upper=this.nchildren - 1;
var mid=0;
var p0=this.getStartOffset$();
var p1;
if (this.nchildren == 0) {
return 0;
}if (offset >= this.getEndOffset$()) {
return this.nchildren - 1;
}if ((this.lastIndex >= lower) && (this.lastIndex <= upper) ) {
var lastHit=this.children[this.lastIndex];
p0=lastHit.getStartOffset$();
p1=lastHit.getEndOffset$();
if ((offset >= p0) && (offset < p1) ) {
return this.lastIndex;
}if (offset < p0) {
upper=this.lastIndex;
} else {
lower=this.lastIndex;
}}while (lower <= upper){
mid=lower + (((upper - lower)/2|0));
var elem=this.children[mid];
p0=elem.getStartOffset$();
p1=elem.getEndOffset$();
if ((offset >= p0) && (offset < p1) ) {
index=mid;
this.lastIndex=index;
return index;
} else if (offset < p0) {
upper=mid - 1;
} else {
lower=mid + 1;
}}
if (offset < p0) {
index=mid;
} else {
index=mid + 1;
}this.lastIndex=index;
return index;
});

Clazz_newMeth(C$, 'isLeaf$',  function () {
return false;
});

Clazz_newMeth(C$, 'getAllowsChildren$',  function () {
return true;
});

Clazz_newMeth(C$, 'children$',  function () {
if (this.nchildren == 0) return null;
var tempVector=Clazz_new_($I$(3,1).c$$I,[this.nchildren]);
for (var counter=0; counter < this.nchildren; counter++) tempVector.addElement$O(this.children[counter]);

return tempVector.elements$();
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "LeafElement", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['javax.swing.text.AbstractDocument','.AbstractElement']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['p0','javax.swing.text.Position','+p1']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I',  function (parent, a, offs0, offs1) {
;C$.superclazz.c$$javax_swing_text_Element$javax_swing_text_AttributeSet.apply(this,[parent, a]);C$.$init$.apply(this);
try {
this.p0=this.b$['javax.swing.text.AbstractDocument'].createPosition$I.apply(this.b$['javax.swing.text.AbstractDocument'], [offs0]);
this.p1=this.b$['javax.swing.text.AbstractDocument'].createPosition$I.apply(this.b$['javax.swing.text.AbstractDocument'], [offs1]);
} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
this.p0=null;
this.p1=null;
throw Clazz_new_($I$(4,1).c$$S,["Can\'t create Position references"]);
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return "LeafElement(" + this.getName$() + ") " + this.p0 + "," + this.p1 + "\n" ;
});

Clazz_newMeth(C$, 'getStartOffset$',  function () {
return this.p0.getOffset$();
});

Clazz_newMeth(C$, 'getEndOffset$',  function () {
return this.p1.getOffset$();
});

Clazz_newMeth(C$, 'getName$',  function () {
var nm=C$.superclazz.prototype.getName$.apply(this, []);
if (nm == null ) {
nm="content";
}return nm;
});

Clazz_newMeth(C$, 'getElementIndex$I',  function (pos) {
return -1;
});

Clazz_newMeth(C$, 'getElement$I',  function (index) {
return null;
});

Clazz_newMeth(C$, 'getElementCount$',  function () {
return 0;
});

Clazz_newMeth(C$, 'isLeaf$',  function () {
return true;
});

Clazz_newMeth(C$, 'getAllowsChildren$',  function () {
return false;
});

Clazz_newMeth(C$, 'children$',  function () {
return null;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "DefaultDocumentEvent", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'javax.swing.undo.CompoundEdit', 'javax.swing.event.DocumentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['offset','length'],'O',['changeLookup','java.util.Hashtable','type','javax.swing.event.DocumentEvent.EventType']]]

Clazz_newMeth(C$, 'c$$I$I$javax_swing_event_DocumentEvent_EventType',  function (offs, len, type) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.offset=offs;
this.length=len;
this.type=type;
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return this.edits.toString();
});

Clazz_newMeth(C$, 'addEdit$javax_swing_undo_UndoableEdit',  function (anEdit) {
if ((this.changeLookup == null ) && (this.edits.size$() > 10) ) {
this.changeLookup=Clazz_new_($I$(5,1));
for (var i=0, n=this.edits.size$(); i < n; i++) {
var o=this.edits.get$I(i);
if (Clazz_instanceOf(o, "javax.swing.event.DocumentEvent.ElementChange")) {
var ec=o;
this.changeLookup.put$O$O(ec.getElement$(), ec);
}}
}if ((this.changeLookup != null ) && (Clazz_instanceOf(anEdit, "javax.swing.event.DocumentEvent.ElementChange")) ) {
var ec=anEdit;
this.changeLookup.put$O$O(ec.getElement$(), ec);
}return C$.superclazz.prototype.addEdit$javax_swing_undo_UndoableEdit.apply(this, [anEdit]);
});

Clazz_newMeth(C$, 'redo$',  function () {
this.b$['javax.swing.text.AbstractDocument'].writeLock$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
try {
C$.superclazz.prototype.redo$.apply(this, []);
var ev=Clazz_new_($I$(6,1).c$$javax_swing_text_AbstractDocument_DefaultDocumentEvent$Z,[this, null, this, false]);
if (this.type === $I$(7).INSERT ) {
this.b$['javax.swing.text.AbstractDocument'].fireInsertUpdate$javax_swing_event_DocumentEvent.apply(this.b$['javax.swing.text.AbstractDocument'], [ev]);
} else if (this.type === $I$(7).REMOVE ) {
this.b$['javax.swing.text.AbstractDocument'].fireRemoveUpdate$javax_swing_event_DocumentEvent.apply(this.b$['javax.swing.text.AbstractDocument'], [ev]);
} else {
this.b$['javax.swing.text.AbstractDocument'].fireChangedUpdate$javax_swing_event_DocumentEvent.apply(this.b$['javax.swing.text.AbstractDocument'], [ev]);
}} finally {
this.b$['javax.swing.text.AbstractDocument'].writeUnlock$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
}
});

Clazz_newMeth(C$, 'undo$',  function () {
this.b$['javax.swing.text.AbstractDocument'].writeLock$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
try {
C$.superclazz.prototype.undo$.apply(this, []);
var ev=Clazz_new_($I$(6,1).c$$javax_swing_text_AbstractDocument_DefaultDocumentEvent$Z,[this, null, this, true]);
if (this.type === $I$(7).REMOVE ) {
this.b$['javax.swing.text.AbstractDocument'].fireInsertUpdate$javax_swing_event_DocumentEvent.apply(this.b$['javax.swing.text.AbstractDocument'], [ev]);
} else if (this.type === $I$(7).INSERT ) {
this.b$['javax.swing.text.AbstractDocument'].fireRemoveUpdate$javax_swing_event_DocumentEvent.apply(this.b$['javax.swing.text.AbstractDocument'], [ev]);
} else {
this.b$['javax.swing.text.AbstractDocument'].fireChangedUpdate$javax_swing_event_DocumentEvent.apply(this.b$['javax.swing.text.AbstractDocument'], [ev]);
}} finally {
this.b$['javax.swing.text.AbstractDocument'].writeUnlock$.apply(this.b$['javax.swing.text.AbstractDocument'], []);
}
});

Clazz_newMeth(C$, 'isSignificant$',  function () {
return true;
});

Clazz_newMeth(C$, 'getPresentationName$',  function () {
var type=this.getType$();
if (type === $I$(7).INSERT ) return $I$(8).getString$O("AbstractDocument.additionText");
if (type === $I$(7).REMOVE ) return $I$(8).getString$O("AbstractDocument.deletionText");
return $I$(8).getString$O("AbstractDocument.styleChangeText");
});

Clazz_newMeth(C$, 'getUndoPresentationName$',  function () {
return $I$(8).getString$O("AbstractDocument.undoText") + " " + this.getPresentationName$() ;
});

Clazz_newMeth(C$, 'getRedoPresentationName$',  function () {
return $I$(8).getString$O("AbstractDocument.redoText") + " " + this.getPresentationName$() ;
});

Clazz_newMeth(C$, 'getType$',  function () {
return this.type;
});

Clazz_newMeth(C$, 'getOffset$',  function () {
return this.offset;
});

Clazz_newMeth(C$, 'getLength$',  function () {
return this.length;
});

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.b$['javax.swing.text.AbstractDocument'];
});

Clazz_newMeth(C$, 'getChange$javax_swing_text_Element',  function (elem) {
if (this.changeLookup != null ) {
return this.changeLookup.get$O(elem);
}for (var i=0, n=this.edits.size$(); i < n; i++) {
var o=this.edits.get$I(i);
if (Clazz_instanceOf(o, "javax.swing.event.DocumentEvent.ElementChange")) {
var c=o;
if (elem.equals$O(c.getElement$())) {
return c;
}}}
return null;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "UndoRedoDocumentEvent", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.event.DocumentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.src=null;
this.type=null;
},1);

C$.$fields$=[['O',['src','javax.swing.text.AbstractDocument.DefaultDocumentEvent','type','javax.swing.event.DocumentEvent.EventType']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_AbstractDocument_DefaultDocumentEvent$Z',  function (src, isUndo) {
;C$.$init$.apply(this);
this.src=src;
if (isUndo) {
if (src.getType$().equals$O($I$(7).INSERT)) {
this.type=$I$(7).REMOVE;
} else if (src.getType$().equals$O($I$(7).REMOVE)) {
this.type=$I$(7).INSERT;
} else {
this.type=src.getType$();
}} else {
this.type=src.getType$();
}}, 1);

Clazz_newMeth(C$, 'getSource$',  function () {
return this.src;
});

Clazz_newMeth(C$, 'getOffset$',  function () {
return this.src.getOffset$();
});

Clazz_newMeth(C$, 'getLength$',  function () {
return this.src.getLength$();
});

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.src.getDocument$();
});

Clazz_newMeth(C$, 'getType$',  function () {
return this.type;
});

Clazz_newMeth(C$, 'getChange$javax_swing_text_Element',  function (elem) {
return this.src.getChange$javax_swing_text_Element(elem);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "ElementEdit", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.undo.AbstractUndoableEdit', [['javax.swing.event.DocumentEvent','javax.swing.event.DocumentEvent.ElementChange']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index'],'O',['e','javax.swing.text.Element','removed','javax.swing.text.Element[]','+added']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Element$I$javax_swing_text_ElementA$javax_swing_text_ElementA',  function (e, index, removed, added) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.e=e;
this.index=index;
this.removed=removed;
this.added=added;
}, 1);

Clazz_newMeth(C$, 'getElement$',  function () {
return this.e;
});

Clazz_newMeth(C$, 'getIndex$',  function () {
return this.index;
});

Clazz_newMeth(C$, 'getChildrenRemoved$',  function () {
return this.removed;
});

Clazz_newMeth(C$, 'getChildrenAdded$',  function () {
return this.added;
});

Clazz_newMeth(C$, 'redo$',  function () {
C$.superclazz.prototype.redo$.apply(this, []);
var tmp=this.removed;
this.removed=this.added;
this.added=tmp;
(this.e).replace$I$I$javax_swing_text_ElementA(this.index, this.removed.length, this.added);
});

Clazz_newMeth(C$, 'undo$',  function () {
C$.superclazz.prototype.undo$.apply(this, []);
(this.e).replace$I$I$javax_swing_text_ElementA(this.index, this.added.length, this.removed);
var tmp=this.removed;
this.removed=this.added;
this.added=tmp;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.AbstractDocument, "DefaultFilterBypass", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['javax.swing.text.DocumentFilter','.FilterBypass']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.b$['javax.swing.text.AbstractDocument'];
});

Clazz_newMeth(C$, 'remove$I$I',  function (offset, length) {
this.b$['javax.swing.text.AbstractDocument'].handleRemove$I$I.apply(this.b$['javax.swing.text.AbstractDocument'], [offset, length]);
});

Clazz_newMeth(C$, 'insertString$I$S$javax_swing_text_AttributeSet',  function (offset, string, attr) {
this.b$['javax.swing.text.AbstractDocument'].handleInsertString$I$S$javax_swing_text_AttributeSet.apply(this.b$['javax.swing.text.AbstractDocument'], [offset, string, attr]);
});

Clazz_newMeth(C$, 'replace$I$I$S$javax_swing_text_AttributeSet',  function (offset, length, text, attrs) {
this.b$['javax.swing.text.AbstractDocument'].秘replacing=true;
this.b$['javax.swing.text.AbstractDocument'].handleRemove$I$I.apply(this.b$['javax.swing.text.AbstractDocument'], [offset, length]);
this.b$['javax.swing.text.AbstractDocument'].handleInsertString$I$S$javax_swing_text_AttributeSet.apply(this.b$['javax.swing.text.AbstractDocument'], [offset, text, attrs]);
this.b$['javax.swing.text.AbstractDocument'].秘replacing=false;
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "AttributeSet", function(){
});
C$.$classes$=[['FontAttribute',9],['ColorAttribute',9],['CharacterAttribute',9],['ParagraphAttribute',9]];
;
(function(){/*i*/var C$=Clazz_newInterface(P$.AttributeSet, "FontAttribute", function(){
});
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.AttributeSet, "ColorAttribute", function(){
});
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.AttributeSet, "CharacterAttribute", function(){
});
})()
;
(function(){/*i*/var C$=Clazz_newInterface(P$.AttributeSet, "ParagraphAttribute", function(){
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Caret");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),p$1={},I$=[[0,'javax.swing.SwingUtilities','javax.swing.text.DefaultCaret',['javax.swing.text.Position','.Bias'],'javax.swing.text.Segment','javax.swing.event.EventListenerList',['javax.swing.text.DefaultCaret','.Handler'],'javax.swing.event.ChangeListener',['javax.swing.text.DefaultCaret','.SafeScroller'],'java.awt.Point','javax.swing.event.ChangeEvent',['javax.swing.text.DefaultCaret','.DefaultFilterBypass']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DefaultCaret", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.Rectangle', ['javax.swing.text.Caret', 'java.awt.event.FocusListener', 'java.awt.event.MouseListener', 'java.awt.event.MouseMotionListener']);
C$.$classes$=[['SafeScroller',0],['Handler',0],['DefaultFilterBypass',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.listenerList=Clazz_new_($I$(5,1));
this.changeEvent=null;
this.updatePolicy=2;
this.handler=Clazz_new_($I$(6,1),[this, null]);
this.flagXPoints=Clazz_array(Integer.TYPE, [3]);
this.flagYPoints=Clazz_array(Integer.TYPE, [3]);
this.selectedWordEvent=null;
},1);

C$.$fields$=[['Z',['working','visible','active','selectionVisible','dotLTR','markLTR','ownsSelection','forceCaretPositionChange','shouldHandleRelease'],'I',['updatePolicy','dot','mark'],'O',['listenerList','javax.swing.event.EventListenerList','changeEvent','javax.swing.event.ChangeEvent','component','javax.swing.text.JTextComponent','selectionTag','java.lang.Object','magicCaretPosition','java.awt.Point','dotBias','javax.swing.text.Position.Bias','+markBias','handler','javax.swing.text.DefaultCaret.Handler','flagXPoints','int[]','+flagYPoints','filterBypass','javax.swing.text.NavigationFilter.FilterBypass','selectedWordEvent','java.awt.event.MouseEvent']]
,['O',['biasRet','javax.swing.text.Position.Bias[]','s','javax.swing.text.Segment','selectWord','javax.swing.Action','+selectLine']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'install$javax_swing_text_JTextComponent',  function (c) {
this.component=c;
var doc=c.getDocument$();
this.dot=this.mark=0;
this.dotLTR=this.markLTR=true;
this.dotBias=this.markBias=$I$(3).Forward;
if (doc != null ) {
doc.addDocumentListener$javax_swing_event_DocumentListener(this.handler);
}c.addPropertyChangeListener$java_beans_PropertyChangeListener(this.handler);
c.addFocusListener$java_awt_event_FocusListener(this);
c.addMouseListener$java_awt_event_MouseListener(this);
c.addMouseMotionListener$java_awt_event_MouseMotionListener(this);
if (this.component.hasFocus$()) {
this.focusGained$java_awt_event_FocusEvent(null);
}});

Clazz_newMeth(C$, 'deinstall$javax_swing_text_JTextComponent',  function (c) {
c.removeMouseListener$java_awt_event_MouseListener(this);
c.removeMouseMotionListener$java_awt_event_MouseMotionListener(this);
c.removeFocusListener$java_awt_event_FocusListener(this);
c.removePropertyChangeListener$java_beans_PropertyChangeListener(this.handler);
var doc=c.getDocument$();
if (doc != null ) {
doc.removeDocumentListener$javax_swing_event_DocumentListener(this.handler);
}{
this.component=null;
}});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener',  function (l) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(7),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener',  function (l) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(7),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'getChangeListeners$',  function () {
return this.listenerList.getListeners$Class(Clazz_getClass($I$(7),['stateChanged$javax_swing_event_ChangeEvent']));
});

Clazz_newMeth(C$, 'setUpdatePolicy$I',  function (policy) {
this.updatePolicy=policy;
});

Clazz_newMeth(C$, 'getUpdatePolicy$',  function () {
return this.updatePolicy;
});

Clazz_newMeth(C$, 'getComponent$',  function () {
return this.component;
});

Clazz_newMeth(C$, 'repaint$',  function () {
});

Clazz_newMeth(C$, 'adjustVisibility$java_awt_Rectangle',  function (nloc) {
if (this.component == null ) {
return;
}if ($I$(1).isEventDispatchThread$()) {
this.component.scrollRectToVisible$java_awt_Rectangle(nloc);
} else {
$I$(1,"invokeLater$Runnable",[Clazz_new_($I$(8,1).c$$java_awt_Rectangle,[this, null, nloc])]);
}});

Clazz_newMeth(C$, 'getSelectionPainter$',  function () {
return null;
});

Clazz_newMeth(C$, 'positionCaret$java_awt_event_MouseEvent',  function (e) {
var pt=Clazz_new_([e.getX$(), e.getY$()],$I$(9,1).c$$I$I);
pt.x=2147483647;
(this.component.getUI$()).viewToModel$javax_swing_text_JTextComponent$java_awt_Point$javax_swing_text_Position_BiasA(this.component, pt, C$.biasRet);
if (pt.x >= 0) {
if (C$.biasRet[0] == null ) C$.biasRet[0]=$I$(3).Forward;
this.setDot$I$javax_swing_text_Position_Bias(pt.x, C$.biasRet[0]);
if (pt.y != pt.x) this.moveDot$I$javax_swing_text_Position_Bias(pt.y, C$.biasRet[0]);
}});

Clazz_newMeth(C$, 'getPosition$java_awt_event_MouseEvent$javax_swing_text_Position_BiasA',  function (e, biasret) {
var pt=Clazz_new_([e.getX$(), e.getY$()],$I$(9,1).c$$I$I);
pt.x=2147483647;
var pos=(this.component.getUI$()).viewToModel$javax_swing_text_JTextComponent$java_awt_Point$javax_swing_text_Position_BiasA(this.component, pt, C$.biasRet);
System.out.println$S("def caret getPos " + e.getID$() + " " + pt );
return pos;
}, p$1);

Clazz_newMeth(C$, 'moveCaret$java_awt_event_MouseEvent',  function (e) {
this.positionCaret$java_awt_event_MouseEvent(e);
});

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent',  function (e) {
if (this.component.isEnabled$()) {
if (this.component.isEditable$()) {
this.setVisible$Z(true);
}this.setSelectionVisible$Z(true);
}});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent',  function (e) {
this.setVisible$Z(false);
this.setSelectionVisible$Z(this.ownsSelection || e.isTemporary$() );
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
if ($I$(1).isLeftMouseButton$java_awt_event_MouseEvent(e)) {
if (e.isConsumed$()) {
this.shouldHandleRelease=true;
} else {
this.shouldHandleRelease=false;
this.adjustCaretAndFocus$java_awt_event_MouseEvent(e);
}}this.working=false;
});

Clazz_newMeth(C$, 'adjustCaretAndFocus$java_awt_event_MouseEvent',  function (e) {
this.working=true;
p$1.adjustCaret$java_awt_event_MouseEvent.apply(this, [e]);
p$1.adjustFocus$Z.apply(this, [false]);
this.working=false;
});

Clazz_newMeth(C$, 'adjustCaret$java_awt_event_MouseEvent',  function (e) {
if ((e.getModifiers$() & 1) != 0 && this.getDot$() != -1 ) {
this.moveCaret$java_awt_event_MouseEvent(e);
} else {
this.positionCaret$java_awt_event_MouseEvent(e);
}}, p$1);

Clazz_newMeth(C$, 'adjustFocus$Z',  function (inWindow) {
if ((this.component != null ) && this.component.isEnabled$() && this.component.isRequestFocusEnabled$()  ) {
if (inWindow) {
this.component.requestFocusInWindow$();
} else {
this.component.requestFocus$();
}}}, p$1);

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
var isLeft=$I$(1).isLeftMouseButton$java_awt_event_MouseEvent(e);
if (!e.isConsumed$() && this.shouldHandleRelease && isLeft  ) {
this.adjustCaretAndFocus$java_awt_event_MouseEvent(e);
}});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent',  function (e) {
if ((!e.isConsumed$()) && $I$(1).isLeftMouseButton$java_awt_event_MouseEvent(e) ) {
this.moveCaret$java_awt_event_MouseEvent(e);
}});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
if (this.isVisible$()) {
}});

Clazz_newMeth(C$, 'fireStateChanged$',  function () {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(7),['stateChanged$javax_swing_event_ChangeEvent']) ) {
if (this.changeEvent == null ) this.changeEvent=Clazz_new_($I$(10,1).c$$O,[this]);
(listeners[i + 1]).stateChanged$javax_swing_event_ChangeEvent(this.changeEvent);
}}
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$, 'setSelectionVisible$Z',  function (vis) {
});

Clazz_newMeth(C$, 'isSelectionVisible$',  function () {
return this.selectionVisible;
});

Clazz_newMeth(C$, 'isActive$',  function () {
return this.active;
});

Clazz_newMeth(C$, 'isVisible$',  function () {
return this.visible;
});

Clazz_newMeth(C$, 'setVisible$Z',  function (e) {
if (this.component != null ) {
this.active=e;
var mapper=this.component.getUI$();
if (this.visible != e ) {
this.visible=e;
}}});

Clazz_newMeth(C$, 'setBlinkRate$I',  function (rate) {
});

Clazz_newMeth(C$, 'getBlinkRate$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getDot$',  function () {
return this.dot;
});

Clazz_newMeth(C$, 'getMark$',  function () {
return this.mark;
});

Clazz_newMeth(C$, 'setDot$I',  function (dot) {
this.setDot$I$javax_swing_text_Position_Bias(dot, $I$(3).Forward);
});

Clazz_newMeth(C$, 'moveDot$I',  function (dot) {
this.moveDot$I$javax_swing_text_Position_Bias(dot, $I$(3).Forward);
});

Clazz_newMeth(C$, 'moveDot$I$javax_swing_text_Position_Bias',  function (dot, dotBias) {
if (dotBias == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["null bias"]);
}if (!this.component.isEnabled$()) {
this.setDot$I$javax_swing_text_Position_Bias(dot, dotBias);
return;
}if (dot != this.dot) {
var filter=this.component.getNavigationFilter$();
if (filter == null ) {
this.handleMoveDot$I$javax_swing_text_Position_Bias(dot, dotBias);
} else {
filter.moveDot$javax_swing_text_NavigationFilter_FilterBypass$I$javax_swing_text_Position_Bias(p$1.getFilterBypass.apply(this, []), dot, dotBias);
}}});

Clazz_newMeth(C$, 'handleMoveDot$I$javax_swing_text_Position_Bias',  function (dot, dotBias) {
this.changeCaretPosition$I$javax_swing_text_Position_Bias(dot, dotBias);
});

Clazz_newMeth(C$, 'setDot$I$javax_swing_text_Position_Bias',  function (dot, dotBias) {
if (dotBias == null ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["null bias"]);
}var filter=this.component.getNavigationFilter$();
if (filter != null ) {
filter.setDot$javax_swing_text_NavigationFilter_FilterBypass$I$javax_swing_text_Position_Bias(p$1.getFilterBypass.apply(this, []), dot, dotBias);
} else {
this.handleSetDot$I$javax_swing_text_Position_Bias(dot, dotBias);
}});

Clazz_newMeth(C$, 'handleSetDot$I$javax_swing_text_Position_Bias',  function (dot, dotBias) {
var doc=this.component.getDocument$();
if (doc != null ) {
dot=Math.min(dot, doc.getLength$());
}dot=Math.max(dot, 0);
if (dot == 0) dotBias=$I$(3).Forward;
this.mark=dot;
if (this.dot != dot || this.dotBias !== dotBias   || this.selectionTag != null   || this.forceCaretPositionChange ) {
this.changeCaretPosition$I$javax_swing_text_Position_Bias(dot, dotBias);
}this.markBias=this.dotBias;
this.markLTR=this.dotLTR;
});

Clazz_newMeth(C$, 'getDotBias$',  function () {
return this.dotBias;
});

Clazz_newMeth(C$, 'getMarkBias$',  function () {
return this.markBias;
});

Clazz_newMeth(C$, 'isDotLeftToRight$',  function () {
return this.dotLTR;
});

Clazz_newMeth(C$, 'isMarkLeftToRight$',  function () {
return this.markLTR;
});

Clazz_newMeth(C$, 'isPositionLTR$I$javax_swing_text_Position_Bias',  function (position, bias) {
var doc=this.component.getDocument$();
if (Clazz_instanceOf(doc, "javax.swing.text.AbstractDocument")) {
if (bias === $I$(3).Backward  && --position < 0 ) position=0;
return (doc).isLeftToRight$I$I(position, position);
}return true;
});

Clazz_newMeth(C$, 'guessBiasForOffset$I$javax_swing_text_Position_Bias$Z',  function (offset, lastBias, lastLTR) {
if (lastLTR != this.isPositionLTR$I$javax_swing_text_Position_Bias(offset, lastBias) ) {
lastBias=$I$(3).Backward;
} else if (lastBias !== $I$(3).Backward  && lastLTR != this.isPositionLTR$I$javax_swing_text_Position_Bias(offset, $I$(3).Backward)  ) {
lastBias=$I$(3).Backward;
}if (lastBias === $I$(3).Backward  && offset > 0 ) {
try {
C$.s.count=0;
C$.s.offset=0;
C$.s.array=null;
this.component.getDocument$().getText$I$I$javax_swing_text_Segment(offset - 1, 1, C$.s);
if (C$.s.count > 0 && C$.s.array[C$.s.offset] == "\n" ) {
lastBias=$I$(3).Forward;
}} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
}return lastBias;
});

Clazz_newMeth(C$, 'changeCaretPosition$I$javax_swing_text_Position_Bias',  function (dot, dotBias) {
this.dot=dot;
this.dotBias=dotBias;
this.dotLTR=this.isPositionLTR$I$javax_swing_text_Position_Bias(dot, dotBias);
this.fireStateChanged$();
if (!this.working) p$1.updateSystemSelection.apply(this, []);
this.setMagicCaretPosition$java_awt_Point(null);
});

Clazz_newMeth(C$, 'repaintNewCaret$',  function () {
});

Clazz_newMeth(C$, 'updateSystemSelection',  function () {
}, p$1);

Clazz_newMeth(C$, 'ensureValidPosition$',  function () {
var length=this.component.getDocument$().getLength$();
if (this.dot > length || this.mark > length ) {
this.handleSetDot$I$javax_swing_text_Position_Bias(length, $I$(3).Forward);
}});

Clazz_newMeth(C$, 'setMagicCaretPosition$java_awt_Point',  function (p) {
this.magicCaretPosition=p;
});

Clazz_newMeth(C$, 'getMagicCaretPosition$',  function () {
return this.magicCaretPosition;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
return (this === obj );
});

Clazz_newMeth(C$, 'toString',  function () {
var s="Dot=(" + this.dot + ", " + this.dotBias + ")" ;
s+=" Mark=(" + this.mark + ", " + this.markBias + ")" ;
return s;
});

Clazz_newMeth(C$, 'getFilterBypass',  function () {
if (this.filterBypass == null ) {
this.filterBypass=Clazz_new_($I$(11,1),[this, null]);
}return this.filterBypass;
}, p$1);

Clazz_newMeth(C$, '_contains$I$I$I$I',  function (X, Y, W, H) {
var w=this.width;
var h=this.height;
if ((w | h | W | H ) < 0) {
return false;
}var x=this.x;
var y=this.y;
if (X < x || Y < y ) {
return false;
}if (W > 0) {
w+=x;
W+=X;
if (W <= X) {
if (w >= x || W > w ) return false;
} else {
if (w >= x && W > w ) return false;
}} else if ((x + w) < X) {
return false;
}if (H > 0) {
h+=y;
H+=Y;
if (H <= Y) {
if (h >= y || H > h ) return false;
} else {
if (h >= y && H > h ) return false;
}} else if ((y + h) < Y) {
return false;
}return true;
}, p$1);

Clazz_newMeth(C$, 'getCaretWidth$I',  function (height) {
return 1;
});

C$.$static$=function(){C$.$static$=0;
C$.biasRet=Clazz_array($I$(3), [1]);
C$.s=Clazz_new_($I$(4,1));
C$.selectWord=null;
C$.selectLine=null;
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultCaret, "SafeScroller", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'Runnable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['r','java.awt.Rectangle']]]

Clazz_newMeth(C$, 'c$$java_awt_Rectangle',  function (r) {
;C$.$init$.apply(this);
this.r=r;
}, 1);

Clazz_newMeth(C$, 'run$',  function () {
if (this.b$['javax.swing.text.DefaultCaret'].component != null ) {
this.b$['javax.swing.text.DefaultCaret'].component.scrollRectToVisible$java_awt_Rectangle(this.r);
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultCaret, "Handler", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, ['java.beans.PropertyChangeListener', 'javax.swing.event.DocumentListener', 'java.awt.event.ActionListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
if (this.b$['javax.swing.text.DefaultCaret'].width == 0 || this.b$['javax.swing.text.DefaultCaret'].height == 0 ) {
if (this.b$['javax.swing.text.DefaultCaret'].component != null ) {
}}this.b$['javax.swing.text.DefaultCaret'].visible=!this.b$['javax.swing.text.DefaultCaret'].visible;
});

Clazz_newMeth(C$, 'insertUpdate$javax_swing_event_DocumentEvent',  function (e) {
if (this.b$['javax.swing.text.DefaultCaret'].getUpdatePolicy$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == 1 || (this.b$['javax.swing.text.DefaultCaret'].getUpdatePolicy$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == 0 && !$I$(1).isEventDispatchThread$() ) ) {
if ((e.getOffset$() <= this.b$['javax.swing.text.DefaultCaret'].dot || e.getOffset$() <= this.b$['javax.swing.text.DefaultCaret'].mark ) && this.b$['javax.swing.text.DefaultCaret'].selectionTag != null  ) {
try {
this.b$['javax.swing.text.DefaultCaret'].component.getHighlighter$().changeHighlight$O$I$I(this.b$['javax.swing.text.DefaultCaret'].selectionTag, Math.min(this.b$['javax.swing.text.DefaultCaret'].dot, this.b$['javax.swing.text.DefaultCaret'].mark), Math.max(this.b$['javax.swing.text.DefaultCaret'].dot, this.b$['javax.swing.text.DefaultCaret'].mark));
} catch (e1) {
if (Clazz_exceptionOf(e1,"javax.swing.text.BadLocationException")){
e1.printStackTrace$();
} else {
throw e1;
}
}
}return;
}var adjust=0;
var offset=e.getOffset$();
var length=e.getLength$();
var newDot=this.b$['javax.swing.text.DefaultCaret'].dot;
var changed=($s$[0] = 0, $s$[0]);
if (Clazz_instanceOf(e, "javax.swing.text.AbstractDocument.UndoRedoDocumentEvent")) {
this.b$['javax.swing.text.DefaultCaret'].setDot$I.apply(this.b$['javax.swing.text.DefaultCaret'], [offset + length]);
return;
}if (newDot >= offset) {
newDot+=length;
changed=($s$[0] = changed|(1), $s$[0]);
}var newMark=this.b$['javax.swing.text.DefaultCaret'].mark;
if (newMark >= offset) {
newMark+=length;
changed=($s$[0] = changed|(2), $s$[0]);
}if (changed != 0) {
var dotBias=this.b$['javax.swing.text.DefaultCaret'].dotBias;
if (this.b$['javax.swing.text.DefaultCaret'].dot == offset) {
var doc=this.b$['javax.swing.text.DefaultCaret'].component.getDocument$();
var isNewline;
try {
$I$(2).s.count=$I$(2).s.offset=0;
$I$(2).s.array=null;
doc.getText$I$I$javax_swing_text_Segment(newDot - 1, 1, $I$(2).s);
isNewline=($I$(2).s.count > 0 && $I$(2).s.array[$I$(2).s.offset] == "\n" );
} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
isNewline=false;
} else {
throw ble;
}
}
if (isNewline) {
dotBias=$I$(3).Forward;
} else {
dotBias=$I$(3).Backward;
}}if (newMark == newDot) {
this.b$['javax.swing.text.DefaultCaret'].setDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [newDot, dotBias]);
this.b$['javax.swing.text.DefaultCaret'].ensureValidPosition$.apply(this.b$['javax.swing.text.DefaultCaret'], []);
} else {
this.b$['javax.swing.text.DefaultCaret'].setDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [newMark, this.b$['javax.swing.text.DefaultCaret'].markBias]);
if (this.b$['javax.swing.text.DefaultCaret'].getDot$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == newMark) {
this.b$['javax.swing.text.DefaultCaret'].moveDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [newDot, dotBias]);
}this.b$['javax.swing.text.DefaultCaret'].ensureValidPosition$.apply(this.b$['javax.swing.text.DefaultCaret'], []);
}}});

Clazz_newMeth(C$, 'removeUpdate$javax_swing_event_DocumentEvent',  function (e) {
if (this.b$['javax.swing.text.DefaultCaret'].getUpdatePolicy$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == 1 || (this.b$['javax.swing.text.DefaultCaret'].getUpdatePolicy$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == 0 && !$I$(1).isEventDispatchThread$() ) ) {
var length=this.b$['javax.swing.text.DefaultCaret'].component.getDocument$().getLength$();
this.b$['javax.swing.text.DefaultCaret'].dot=Math.min(this.b$['javax.swing.text.DefaultCaret'].dot, length);
this.b$['javax.swing.text.DefaultCaret'].mark=Math.min(this.b$['javax.swing.text.DefaultCaret'].mark, length);
if ((e.getOffset$() < this.b$['javax.swing.text.DefaultCaret'].dot || e.getOffset$() < this.b$['javax.swing.text.DefaultCaret'].mark ) && this.b$['javax.swing.text.DefaultCaret'].selectionTag != null  ) {
try {
this.b$['javax.swing.text.DefaultCaret'].component.getHighlighter$().changeHighlight$O$I$I(this.b$['javax.swing.text.DefaultCaret'].selectionTag, Math.min(this.b$['javax.swing.text.DefaultCaret'].dot, this.b$['javax.swing.text.DefaultCaret'].mark), Math.max(this.b$['javax.swing.text.DefaultCaret'].dot, this.b$['javax.swing.text.DefaultCaret'].mark));
} catch (e1) {
if (Clazz_exceptionOf(e1,"javax.swing.text.BadLocationException")){
e1.printStackTrace$();
} else {
throw e1;
}
}
}return;
}var offs0=e.getOffset$();
var offs1=offs0 + e.getLength$();
var adjust=0;
var newDot=this.b$['javax.swing.text.DefaultCaret'].dot;
var adjustDotBias=false;
var newMark=this.b$['javax.swing.text.DefaultCaret'].mark;
var adjustMarkBias=false;
if (Clazz_instanceOf(e, "javax.swing.text.AbstractDocument.UndoRedoDocumentEvent")) {
this.b$['javax.swing.text.DefaultCaret'].setDot$I.apply(this.b$['javax.swing.text.DefaultCaret'], [offs0]);
return;
}if (newDot >= offs1) {
newDot-=(offs1 - offs0);
if (newDot == offs1) {
adjustDotBias=true;
}} else if (newDot >= offs0) {
newDot=offs0;
adjustDotBias=true;
}if (newMark >= offs1) {
newMark-=(offs1 - offs0);
if (newMark == offs1) {
adjustMarkBias=true;
}} else if (newMark >= offs0) {
newMark=offs0;
adjustMarkBias=true;
}if (newMark == newDot) {
this.b$['javax.swing.text.DefaultCaret'].forceCaretPositionChange=true;
try {
this.b$['javax.swing.text.DefaultCaret'].setDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [newDot, this.b$['javax.swing.text.DefaultCaret'].guessBiasForOffset$I$javax_swing_text_Position_Bias$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [newDot, this.b$['javax.swing.text.DefaultCaret'].dotBias, this.b$['javax.swing.text.DefaultCaret'].dotLTR])]);
} finally {
this.b$['javax.swing.text.DefaultCaret'].forceCaretPositionChange=false;
}
this.b$['javax.swing.text.DefaultCaret'].ensureValidPosition$.apply(this.b$['javax.swing.text.DefaultCaret'], []);
} else {
var dotBias=this.b$['javax.swing.text.DefaultCaret'].dotBias;
var markBias=this.b$['javax.swing.text.DefaultCaret'].markBias;
if (adjustDotBias) {
dotBias=this.b$['javax.swing.text.DefaultCaret'].guessBiasForOffset$I$javax_swing_text_Position_Bias$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [newDot, dotBias, this.b$['javax.swing.text.DefaultCaret'].dotLTR]);
}if (adjustMarkBias) {
markBias=this.b$['javax.swing.text.DefaultCaret'].guessBiasForOffset$I$javax_swing_text_Position_Bias$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [this.b$['javax.swing.text.DefaultCaret'].mark, markBias, this.b$['javax.swing.text.DefaultCaret'].markLTR]);
}this.b$['javax.swing.text.DefaultCaret'].setDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [newMark, markBias]);
if (this.b$['javax.swing.text.DefaultCaret'].getDot$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == newMark) {
this.b$['javax.swing.text.DefaultCaret'].moveDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [newDot, dotBias]);
}this.b$['javax.swing.text.DefaultCaret'].ensureValidPosition$.apply(this.b$['javax.swing.text.DefaultCaret'], []);
}});

Clazz_newMeth(C$, 'changedUpdate$javax_swing_event_DocumentEvent',  function (e) {
if (this.b$['javax.swing.text.DefaultCaret'].getUpdatePolicy$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == 1 || (this.b$['javax.swing.text.DefaultCaret'].getUpdatePolicy$.apply(this.b$['javax.swing.text.DefaultCaret'], []) == 0 && !$I$(1).isEventDispatchThread$() ) ) {
return;
}if (Clazz_instanceOf(e, "javax.swing.text.AbstractDocument.UndoRedoDocumentEvent")) {
this.b$['javax.swing.text.DefaultCaret'].setDot$I.apply(this.b$['javax.swing.text.DefaultCaret'], [e.getOffset$() + e.getLength$()]);
}});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (evt) {
var oldValue=evt.getOldValue$();
var newValue=evt.getNewValue$();
if ((Clazz_instanceOf(oldValue, "javax.swing.text.Document")) || (Clazz_instanceOf(newValue, "javax.swing.text.Document")) ) {
this.b$['javax.swing.text.DefaultCaret'].setDot$I.apply(this.b$['javax.swing.text.DefaultCaret'], [0]);
if (oldValue != null ) {
(oldValue).removeDocumentListener$javax_swing_event_DocumentListener(this);
}if (newValue != null ) {
(newValue).addDocumentListener$javax_swing_event_DocumentListener(this);
}} else if ("enabled".equals$O(evt.getPropertyName$())) {
var enabled=evt.getNewValue$();
if (this.b$['javax.swing.text.DefaultCaret'].component.isFocusOwner$()) {
if (enabled === Boolean.TRUE ) {
if (this.b$['javax.swing.text.DefaultCaret'].component.isEditable$()) {
this.b$['javax.swing.text.DefaultCaret'].setVisible$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [true]);
}this.b$['javax.swing.text.DefaultCaret'].setSelectionVisible$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [true]);
} else {
this.b$['javax.swing.text.DefaultCaret'].setVisible$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [false]);
this.b$['javax.swing.text.DefaultCaret'].setSelectionVisible$Z.apply(this.b$['javax.swing.text.DefaultCaret'], [false]);
}}}});
var $s$ = new Int16Array(1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultCaret, "DefaultFilterBypass", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, ['javax.swing.text.NavigationFilter','.FilterBypass']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getCaret$',  function () {
return this.b$['javax.swing.text.DefaultCaret'];
});

Clazz_newMeth(C$, 'setDot$I$javax_swing_text_Position_Bias',  function (dot, bias) {
this.b$['javax.swing.text.DefaultCaret'].handleSetDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [dot, bias]);
});

Clazz_newMeth(C$, 'moveDot$I$javax_swing_text_Position_Bias',  function (dot, bias) {
this.b$['javax.swing.text.DefaultCaret'].handleMoveDot$I$javax_swing_text_Position_Bias.apply(this.b$['javax.swing.text.DefaultCaret'], [dot, bias]);
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:11 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),p$1={},I$=[[0,'javax.swing.UIManager','java.awt.Rectangle','java.awt.Point',['javax.swing.text.Position','.Bias'],'javax.swing.text.Utilities',['javax.swing.text.DefaultEditorKit','.BeginWordAction'],['javax.swing.text.DefaultEditorKit','.EndWordAction'],['javax.swing.text.DefaultEditorKit','.BeginLineAction'],['javax.swing.text.DefaultEditorKit','.EndLineAction'],['javax.swing.text.DefaultEditorKit','.BeginParagraphAction'],['javax.swing.text.DefaultEditorKit','.EndParagraphAction'],'java.awt.ComponentOrientation','javax.swing.Action',['javax.swing.text.DefaultEditorKit','.PassThroughAction'],['javax.swing.text.DefaultEditorKit','.InsertContentAction'],['javax.swing.text.DefaultEditorKit','.DeletePrevCharAction'],['javax.swing.text.DefaultEditorKit','.DeleteNextCharAction'],['javax.swing.text.DefaultEditorKit','.ReadOnlyAction'],['javax.swing.text.DefaultEditorKit','.WritableAction'],['javax.swing.text.DefaultEditorKit','.CutAction'],['javax.swing.text.DefaultEditorKit','.CopyAction'],['javax.swing.text.DefaultEditorKit','.PasteAction'],['javax.swing.text.DefaultEditorKit','.VerticalPageAction'],['javax.swing.text.DefaultEditorKit','.PageAction'],['javax.swing.text.DefaultEditorKit','.InsertBreakAction'],['javax.swing.text.DefaultEditorKit','.BeepAction'],['javax.swing.text.DefaultEditorKit','.NextVisualPositionAction'],['javax.swing.text.DefaultEditorKit','.PreviousWordAction'],['javax.swing.text.DefaultEditorKit','.NextWordAction'],['javax.swing.text.DefaultEditorKit','.BeginAction'],['javax.swing.text.DefaultEditorKit','.EndAction'],['javax.swing.text.DefaultEditorKit','.DefaultKeyTypedAction'],['javax.swing.text.DefaultEditorKit','.InsertTabAction'],['javax.swing.text.DefaultEditorKit','.SelectWordAction'],['javax.swing.text.DefaultEditorKit','.SelectLineAction'],['javax.swing.text.DefaultEditorKit','.SelectParagraphAction'],['javax.swing.text.DefaultEditorKit','.SelectAllAction'],['javax.swing.text.DefaultEditorKit','.UnselectAction'],['javax.swing.text.DefaultEditorKit','.ToggleComponentOrientationAction'],'javax.swing.text.PlainDocument','java.io.InputStreamReader','swingjs.api.Interface','java.io.OutputStream','javax.swing.text.Segment']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DefaultEditorKit", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.text.EditorKit');
C$.$classes$=[['DefaultKeyTypedAction',9],['InsertContentAction',9],['InsertBreakAction',9],['InsertTabAction',9],['DeletePrevCharAction',8],['DeleteNextCharAction',8],['PassThroughAction',9],['ReadOnlyAction',8],['WritableAction',8],['CutAction',9],['CopyAction',9],['PasteAction',9],['BeepAction',9],['VerticalPageAction',8],['PageAction',8],['NextVisualPositionAction',8],['BeginWordAction',8],['EndWordAction',8],['PreviousWordAction',8],['NextWordAction',8],['BeginLineAction',8],['EndLineAction',8],['BeginParagraphAction',8],['EndParagraphAction',8],['BeginAction',8],['EndAction',8],['SelectWordAction',8],['SelectLineAction',8],['SelectParagraphAction',8],['SelectAllAction',8],['UnselectAction',8],['ToggleComponentOrientationAction',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['defaultActions','javax.swing.Action[]']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'getContentType$',  function () {
return "text/plain";
});

Clazz_newMeth(C$, 'getViewFactory$',  function () {
return null;
});

Clazz_newMeth(C$, 'getActions$',  function () {
return C$.defaultActions;
});

Clazz_newMeth(C$, 'createCaret$',  function () {
return null;
});

Clazz_newMeth(C$, 'createDefaultDocument$',  function () {
return Clazz_new_($I$(40,1));
});

Clazz_newMeth(C$, 'read$java_io_InputStream$javax_swing_text_Document$I',  function ($in, doc, pos) {
this.read$java_io_Reader$javax_swing_text_Document$I(Clazz_new_($I$(41,1).c$$java_io_InputStream,[$in]), doc, pos);
});

Clazz_newMeth(C$, 'write$java_io_OutputStream$javax_swing_text_Document$I$I',  function (out, doc, pos, len) {
var osw=$I$(42,"getInstanceWithParams$S$ClassA$OA",["java.io.OutputStreamWriter", Clazz_array(Class, -1, [Clazz_getClass($I$(43))]), Clazz_array(java.lang.Object, -1, [out])]);
this.write$java_io_Writer$javax_swing_text_Document$I$I(osw, doc, pos, len);
osw.flush$();
});

Clazz_newMeth(C$, 'getInputAttributes$',  function () {
return null;
});

Clazz_newMeth(C$, 'read$java_io_Reader$javax_swing_text_Document$I',  function ($in, doc, pos) {
var buff=Clazz_array(Character.TYPE, [4096]);
var nch;
var lastWasCR=false;
var isCRLF=false;
var isCR=false;
var last;
var wasEmpty=(doc.getLength$() == 0);
var attr=this.getInputAttributes$();
while ((nch=$in.read$CA$I$I(buff, 0, buff.length)) != -1){
last=0;
for (var counter=0; counter < nch; counter++) {
switch ((buff[counter]).$c()) {
case 13:
if (lastWasCR) {
isCR=true;
if (counter == 0) {
doc.insertString$I$S$javax_swing_text_AttributeSet(pos, "\n", attr);
++pos;
} else {
buff[counter - 1]="\n";
}} else {
lastWasCR=true;
}break;
case 10:
if (lastWasCR) {
if (counter > (last + 1)) {
doc.insertString$I$S$javax_swing_text_AttributeSet(pos,  String.instantialize(buff, last, counter - last - 1 ), attr);
pos+=(counter - last - 1 );
}lastWasCR=false;
last=counter;
isCRLF=true;
}break;
default:
if (lastWasCR) {
isCR=true;
if (counter == 0) {
doc.insertString$I$S$javax_swing_text_AttributeSet(pos, "\n", attr);
++pos;
} else {
buff[counter - 1]="\n";
}lastWasCR=false;
}break;
}
}
if (last < nch) {
if (lastWasCR) {
if (last < (nch - 1)) {
doc.insertString$I$S$javax_swing_text_AttributeSet(pos,  String.instantialize(buff, last, nch - last - 1 ), attr);
pos+=(nch - last - 1 );
}} else {
doc.insertString$I$S$javax_swing_text_AttributeSet(pos,  String.instantialize(buff, last, nch - last), attr);
pos+=(nch - last);
}}}
if (lastWasCR) {
doc.insertString$I$S$javax_swing_text_AttributeSet(pos, "\n", attr);
isCR=true;
}if (wasEmpty) {
if (isCRLF) {
doc.putProperty$O$O("__EndOfLine__", "\r\n");
} else if (isCR) {
doc.putProperty$O$O("__EndOfLine__", "\r");
} else {
doc.putProperty$O$O("__EndOfLine__", "\n");
}}});

Clazz_newMeth(C$, 'write$java_io_Writer$javax_swing_text_Document$I$I',  function (out, doc, pos, len) {
if ((pos < 0) || ((pos + len) > doc.getLength$()) ) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["DefaultEditorKit.write", pos]);
}var data=Clazz_new_($I$(44,1));
var nleft=len;
var offs=pos;
var endOfLineProperty=doc.getProperty$O("__EndOfLine__");
if (endOfLineProperty == null ) {
try {
endOfLineProperty=System.getProperty$S("line.separator");
} catch (se) {
if (Clazz_exceptionOf(se,"SecurityException")){
} else {
throw se;
}
}
}var endOfLine;
if (Clazz_instanceOf(endOfLineProperty, "java.lang.String")) {
endOfLine=endOfLineProperty;
} else {
endOfLine=null;
}if (endOfLineProperty != null  && !endOfLine.equals$O("\n") ) {
while (nleft > 0){
var n=Math.min(nleft, 4096);
doc.getText$I$I$javax_swing_text_Segment(offs, n, data);
var last=data.offset;
var array=data.array;
var maxCounter=last + data.count;
for (var counter=last; counter < maxCounter; counter++) {
if (array[counter] == "\n") {
if (counter > last) {
out.write$CA$I$I(array, last, counter - last);
}out.write$S(endOfLine);
last=counter + 1;
}}
if (maxCounter > last) {
out.write$CA$I$I(array, last, maxCounter - last);
}offs+=n;
nleft-=n;
}
} else {
while (nleft > 0){
var n=Math.min(nleft, 4096);
doc.getText$I$I$javax_swing_text_Segment(offs, n, data);
out.write$CA$I$I(data.array, data.offset, data.count);
offs+=n;
nleft-=n;
}
}out.flush$();
});

C$.$static$=function(){C$.$static$=0;
C$.defaultActions=Clazz_array($I$(13), -1, [Clazz_new_($I$(14,1)), Clazz_new_($I$(15,1)), Clazz_new_($I$(16,1)), Clazz_new_($I$(17,1)), Clazz_new_($I$(18,1)), Clazz_new_($I$(19,1)), Clazz_new_($I$(20,1)), Clazz_new_($I$(21,1)), Clazz_new_($I$(22,1)), Clazz_new_($I$(23,1).c$$S$I$Z,["page-up", -1, false]), Clazz_new_($I$(23,1).c$$S$I$Z,["page-down", 1, false]), Clazz_new_($I$(23,1).c$$S$I$Z,["selection-page-up", -1, true]), Clazz_new_($I$(23,1).c$$S$I$Z,["selection-page-down", 1, true]), Clazz_new_($I$(24,1).c$$S$Z$Z,["selection-page-left", true, true]), Clazz_new_($I$(24,1).c$$S$Z$Z,["selection-page-right", false, true]), Clazz_new_($I$(25,1)), Clazz_new_($I$(26,1)), Clazz_new_($I$(27,1).c$$S$Z$I,["caret-forward", false, 3]), Clazz_new_($I$(27,1).c$$S$Z$I,["caret-backward", false, 7]), Clazz_new_($I$(27,1).c$$S$Z$I,["selection-forward", true, 3]), Clazz_new_($I$(27,1).c$$S$Z$I,["selection-backward", true, 7]), Clazz_new_($I$(27,1).c$$S$Z$I,["caret-up", false, 1]), Clazz_new_($I$(27,1).c$$S$Z$I,["caret-down", false, 5]), Clazz_new_($I$(27,1).c$$S$Z$I,["selection-up", true, 1]), Clazz_new_($I$(27,1).c$$S$Z$I,["selection-down", true, 5]), Clazz_new_($I$(6,1).c$$S$Z,["caret-begin-word", false]), Clazz_new_($I$(7,1).c$$S$Z,["caret-end-word", false]), Clazz_new_($I$(6,1).c$$S$Z,["selection-begin-word", true]), Clazz_new_($I$(7,1).c$$S$Z,["selection-end-word", true]), Clazz_new_($I$(28,1).c$$S$Z,["caret-previous-word", false]), Clazz_new_($I$(29,1).c$$S$Z,["caret-next-word", false]), Clazz_new_($I$(28,1).c$$S$Z,["selection-previous-word", true]), Clazz_new_($I$(29,1).c$$S$Z,["selection-next-word", true]), Clazz_new_($I$(8,1).c$$S$Z,["caret-begin-line", false]), Clazz_new_($I$(9,1).c$$S$Z,["caret-end-line", false]), Clazz_new_($I$(8,1).c$$S$Z,["selection-begin-line", true]), Clazz_new_($I$(9,1).c$$S$Z,["selection-end-line", true]), Clazz_new_($I$(10,1).c$$S$Z,["caret-begin-paragraph", false]), Clazz_new_($I$(11,1).c$$S$Z,["caret-end-paragraph", false]), Clazz_new_($I$(10,1).c$$S$Z,["selection-begin-paragraph", true]), Clazz_new_($I$(11,1).c$$S$Z,["selection-end-paragraph", true]), Clazz_new_($I$(30,1).c$$S$Z,["caret-begin", false]), Clazz_new_($I$(31,1).c$$S$Z,["caret-end", false]), Clazz_new_($I$(30,1).c$$S$Z,["selection-begin", true]), Clazz_new_($I$(31,1).c$$S$Z,["selection-end", true]), Clazz_new_($I$(32,1)), Clazz_new_($I$(33,1)), Clazz_new_($I$(34,1)), Clazz_new_($I$(35,1)), Clazz_new_($I$(36,1)), Clazz_new_($I$(37,1)), Clazz_new_($I$(38,1)), Clazz_new_($I$(39,1))]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "DefaultKeyTypedAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["default-typed"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if ((target != null ) && (e != null ) ) {
if ((!target.isEditable$()) || (!target.isEnabled$()) ) {
return;
}var content=e.getActionCommand$();
var mod=e.getModifiers$();
if ((content != null ) && (content.length$() > 0) && ((mod & 8) == (mod & 2))  ) {
var c=content.charAt$I(0);
if ((c.$c() >= 32 ) && (c.$c() != 127 ) ) {
target.replaceSelection$S(content);
}}}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "InsertContentAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["insert-content"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if ((target != null ) && (e != null ) ) {
if ((!target.isEditable$()) || (!target.isEnabled$()) ) {
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
return;
}var content=e.getActionCommand$();
if (content != null ) {
target.replaceSelection$S(content);
} else {
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
}}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "InsertBreakAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["insert-break"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
if ((!target.isEditable$()) || (!target.isEnabled$()) ) {
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
return;
}target.replaceSelection$S("\n");
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "InsertTabAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["insert-tab"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
if ((!target.isEditable$()) || (!target.isEnabled$()) ) {
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
return;
}target.replaceSelection$S("\t");
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "DeletePrevCharAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["delete-previous"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if ((target != null ) && (target.isEditable$()) ) {
(target.ui).action$S$I("delete", -1);
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "DeleteNextCharAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["delete-next"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if ((target != null ) && (target.isEditable$()) ) {
(target.ui).action$S$I("delete", 1);
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "PassThroughAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["pass-through"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
System.out.println$S("DefaultEdKit ignoring");

e.bdata.doPropagate = true;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "ReadOnlyAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["set-read-only"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
target.setEditable$Z(false);
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "WritableAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["set-writable"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
target.setEditable$Z(true);
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "CutAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["cut-to-clipboard"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
target.cut$();
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "CopyAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["copy-to-clipboard"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
target.copy$();
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "PasteAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["paste-from-clipboard"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
target.paste$();
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "BeepAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["beep"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "VerticalPageAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select'],'I',['direction']]]

Clazz_newMeth(C$, 'c$$S$I$Z',  function (nm, direction, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
this.direction=direction;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var visible=target.getVisibleRect$();
var newVis=Clazz_new_($I$(2,1).c$$java_awt_Rectangle,[visible]);
var selectedIndex=target.getCaretPosition$();
var scrollAmount=this.direction * target.getScrollableBlockIncrement$java_awt_Rectangle$I$I(visible, 1, this.direction);
var initialY=visible.y;
var caret=target.getCaret$();
var magicPosition=caret.getMagicCaretPosition$();
if (selectedIndex != -1) {
try {
var dotBounds=target.modelToView$I(selectedIndex);
var x=(magicPosition != null ) ? magicPosition.x : dotBounds.x;
var h=dotBounds.height;
if (h > 0) {
scrollAmount=(scrollAmount/h|0) * h;
}newVis.y=p$1.constrainY$javax_swing_text_JTextComponent$I$I.apply(this, [target, initialY + scrollAmount, visible.height]);
var newIndex;
if (visible.contains$I$I(dotBounds.x, dotBounds.y)) {
newIndex=target.viewToModel$java_awt_Point(Clazz_new_([x, p$1.constrainY$javax_swing_text_JTextComponent$I$I.apply(this, [target, dotBounds.y + scrollAmount, 0])],$I$(3,1).c$$I$I));
} else {
if (this.direction == -1) {
newIndex=target.viewToModel$java_awt_Point(Clazz_new_($I$(3,1).c$$I$I,[x, newVis.y]));
} else {
newIndex=target.viewToModel$java_awt_Point(Clazz_new_($I$(3,1).c$$I$I,[x, newVis.y + visible.height]));
}}newIndex=p$1.constrainOffset$javax_swing_text_JTextComponent$I.apply(this, [target, newIndex]);
if (newIndex != selectedIndex) {
p$1.adjustScrollIfNecessary$javax_swing_text_JTextComponent$java_awt_Rectangle$I$I.apply(this, [target, newVis, initialY, newIndex]);
if (this.select) {
target.moveCaretPosition$I(newIndex);
} else {
target.setCaretPosition$I(newIndex);
}}} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
} else {
newVis.y=p$1.constrainY$javax_swing_text_JTextComponent$I$I.apply(this, [target, initialY + scrollAmount, visible.height]);
}if (magicPosition != null ) {
caret.setMagicCaretPosition$java_awt_Point(magicPosition);
}target.scrollRectToVisible$java_awt_Rectangle(newVis);
}});

Clazz_newMeth(C$, 'constrainY$javax_swing_text_JTextComponent$I$I',  function (target, y, vis) {
if (y < 0) {
y=0;
} else if (y + vis > target.getHeight$()) {
y=Math.max(0, target.getHeight$() - vis);
}return y;
}, p$1);

Clazz_newMeth(C$, 'constrainOffset$javax_swing_text_JTextComponent$I',  function (text, offset) {
var doc=text.getDocument$();
if ((offset != 0) && (offset > doc.getLength$()) ) {
offset=doc.getLength$();
}if (offset < 0) {
offset=0;
}return offset;
}, p$1);

Clazz_newMeth(C$, 'adjustScrollIfNecessary$javax_swing_text_JTextComponent$java_awt_Rectangle$I$I',  function (text, visible, initialY, index) {
try {
var dotBounds=text.modelToView$I(index);
if (dotBounds.y < visible.y || (dotBounds.y > (visible.y + visible.height))  || (dotBounds.y + dotBounds.height) > (visible.y + visible.height) ) {
var y;
if (dotBounds.y < visible.y) {
y=dotBounds.y;
} else {
y=dotBounds.y + dotBounds.height - visible.height;
}if ((this.direction == -1 && y < initialY ) || (this.direction == 1 && y > initialY ) ) {
visible.y=y;
}}} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
}, p$1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "PageAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select','left']]]

Clazz_newMeth(C$, 'c$$S$Z$Z',  function (nm, left, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
this.left=left;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var selectedIndex;
var visible=Clazz_new_($I$(2,1));
target.computeVisibleRect$java_awt_Rectangle(visible);
if (this.left) {
visible.x=Math.max(0, visible.x - visible.width);
} else {
visible.x+=visible.width;
}selectedIndex=target.getCaretPosition$();
if (selectedIndex != -1) {
if (this.left) {
selectedIndex=target.viewToModel$java_awt_Point(Clazz_new_($I$(3,1).c$$I$I,[visible.x, visible.y]));
} else {
selectedIndex=target.viewToModel$java_awt_Point(Clazz_new_($I$(3,1).c$$I$I,[visible.x + visible.width - 1, visible.y + visible.height - 1]));
}var doc=target.getDocument$();
if ((selectedIndex != 0) && (selectedIndex > (doc.getLength$() - 1)) ) {
selectedIndex=doc.getLength$() - 1;
} else if (selectedIndex < 0) {
selectedIndex=0;
}if (this.select) target.moveCaretPosition$I(selectedIndex);
 else target.setCaretPosition$I(selectedIndex);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "NextVisualPositionAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select'],'I',['direction']]]

Clazz_newMeth(C$, 'c$$S$Z$I',  function (nm, select, direction) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
this.direction=direction;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var caret=target.getCaret$();
var bidiCaret=(Clazz_instanceOf(caret, "javax.swing.text.DefaultCaret")) ? caret : null;
var dot=caret.getDot$();
var bias=Clazz_array($I$(4), [1]);
var magicPosition=caret.getMagicCaretPosition$();
try {
if (magicPosition == null  && (this.direction == 1 || this.direction == 5 ) ) {
}var filter=target.getNavigationFilter$();
if (filter != null ) {
dot=filter.getNextVisualPositionFrom$javax_swing_text_JTextComponent$I$javax_swing_text_Position_Bias$I$javax_swing_text_Position_BiasA(target, dot, (bidiCaret != null ) ? bidiCaret.getDotBias$() : $I$(4).Forward, this.direction, bias);
} else {
dot=(target.getUI$()).getNextVisualPositionFrom$javax_swing_text_JTextComponent$I$javax_swing_text_Position_Bias$I$javax_swing_text_Position_BiasA(target, dot, (bidiCaret != null ) ? bidiCaret.getDotBias$() : $I$(4).Forward, this.direction, bias);
}if (bias[0] == null ) {
bias[0]=$I$(4).Forward;
}if (bidiCaret != null ) {
if (this.select) {
bidiCaret.moveDot$I$javax_swing_text_Position_Bias(dot, bias[0]);
} else {
bidiCaret.setDot$I$javax_swing_text_Position_Bias(dot, bias[0]);
}} else {
if (this.select) {
caret.moveDot$I(dot);
} else {
caret.setDot$I(dot);
}}if (magicPosition != null  && (this.direction == 1 || this.direction == 5 ) ) {
target.getCaret$().setMagicCaretPosition$java_awt_Point(magicPosition);
}} catch (ex) {
if (Clazz_exceptionOf(ex,"javax.swing.text.BadLocationException")){
} else {
throw ex;
}
}
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "BeginWordAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
try {
var offs=target.getCaretPosition$();
var begOffs=$I$(5).getWordStart$javax_swing_text_JTextComponent$I(target, offs);
if (this.select) {
target.moveCaretPosition$I(begOffs);
} else {
target.setCaretPosition$I(begOffs);
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
} else {
throw bl;
}
}
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "EndWordAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
try {
var offs=target.getCaretPosition$();
var endOffs=$I$(5).getWordEnd$javax_swing_text_JTextComponent$I(target, offs);
if (this.select) {
target.moveCaretPosition$I(endOffs);
} else {
target.setCaretPosition$I(endOffs);
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
} else {
throw bl;
}
}
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "PreviousWordAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var offs=target.getCaretPosition$();
var failed=false;
try {
var curPara=$I$(5).getParagraphElement$javax_swing_text_JTextComponent$I(target, offs);
offs=$I$(5).getPreviousWord$javax_swing_text_JTextComponent$I(target, offs);
if (offs < curPara.getStartOffset$()) {
offs=$I$(5).getParagraphElement$javax_swing_text_JTextComponent$I(target, offs).getEndOffset$() - 1;
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
if (offs != 0) {
offs=0;
} else {
failed=true;
}} else {
throw bl;
}
}
if (!failed) {
if (this.select) {
target.moveCaretPosition$I(offs);
} else {
target.setCaretPosition$I(offs);
}} else {
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "NextWordAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var offs=target.getCaretPosition$();
var failed=false;
var oldOffs=offs;
var curPara=$I$(5).getParagraphElement$javax_swing_text_JTextComponent$I(target, offs);
try {
offs=$I$(5).getNextWord$javax_swing_text_JTextComponent$I(target, offs);
if (offs >= curPara.getEndOffset$() && oldOffs != curPara.getEndOffset$() - 1 ) {
offs=curPara.getEndOffset$() - 1;
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
var end=target.getDocument$().getLength$();
if (offs != end) {
if (oldOffs != curPara.getEndOffset$() - 1) {
offs=curPara.getEndOffset$() - 1;
} else {
offs=end;
}} else {
failed=true;
}} else {
throw bl;
}
}
if (!failed) {
if (this.select) {
target.moveCaretPosition$I(offs);
} else {
target.setCaretPosition$I(offs);
}} else {
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "BeginLineAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
try {
var offs=target.getCaretPosition$();
var begOffs=$I$(5).getRowStart$javax_swing_text_JTextComponent$I(target, offs);
if (this.select) {
target.moveCaretPosition$I(begOffs);
} else {
target.setCaretPosition$I(begOffs);
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
} else {
throw bl;
}
}
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "EndLineAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
try {
var offs=target.getCaretPosition$();
var endOffs=$I$(5).getRowEnd$javax_swing_text_JTextComponent$I(target, offs);
if (this.select) {
target.moveCaretPosition$I(endOffs);
} else {
target.setCaretPosition$I(endOffs);
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
$I$(1).getLookAndFeel$().provideErrorFeedback$java_awt_Component(target);
} else {
throw bl;
}
}
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "BeginParagraphAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var offs=target.getCaretPosition$();
var elem=$I$(5).getParagraphElement$javax_swing_text_JTextComponent$I(target, offs);
offs=elem.getStartOffset$();
if (this.select) {
target.moveCaretPosition$I(offs);
} else {
target.setCaretPosition$I(offs);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "EndParagraphAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var offs=target.getCaretPosition$();
var elem=$I$(5).getParagraphElement$javax_swing_text_JTextComponent$I(target, offs);
offs=Math.min(target.getDocument$().getLength$(), elem.getEndOffset$());
if (this.select) {
target.moveCaretPosition$I(offs);
} else {
target.setCaretPosition$I(offs);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "BeginAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
if (this.select) {
target.moveCaretPosition$I(0);
} else {
target.setCaretPosition$I(0);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "EndAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['select']]]

Clazz_newMeth(C$, 'c$$S$Z',  function (nm, select) {
;C$.superclazz.c$$S.apply(this,[nm]);C$.$init$.apply(this);
this.select=select;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var doc=target.getDocument$();
var dot=doc.getLength$();
if (this.select) {
target.moveCaretPosition$I(dot);
} else {
target.setCaretPosition$I(dot);
}}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "SelectWordAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['start','javax.swing.Action','+end']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["select-word"]);C$.$init$.apply(this);
this.start=Clazz_new_($I$(6,1).c$$S$Z,["pigdog", false]);
this.end=Clazz_new_($I$(7,1).c$$S$Z,["pigdog", true]);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.start.actionPerformed$java_awt_event_ActionEvent(e);
this.end.actionPerformed$java_awt_event_ActionEvent(e);
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "SelectLineAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['start','javax.swing.Action','+end']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["select-line"]);C$.$init$.apply(this);
this.start=Clazz_new_($I$(8,1).c$$S$Z,["pigdog", false]);
this.end=Clazz_new_($I$(9,1).c$$S$Z,["pigdog", true]);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.start.actionPerformed$java_awt_event_ActionEvent(e);
this.end.actionPerformed$java_awt_event_ActionEvent(e);
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "SelectParagraphAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['start','javax.swing.Action','+end']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["select-paragraph"]);C$.$init$.apply(this);
this.start=Clazz_new_($I$(10,1).c$$S$Z,["pigdog", false]);
this.end=Clazz_new_($I$(11,1).c$$S$Z,["pigdog", true]);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.start.actionPerformed$java_awt_event_ActionEvent(e);
this.end.actionPerformed$java_awt_event_ActionEvent(e);
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "SelectAllAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["select-all"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var doc=target.getDocument$();
target.setCaretPosition$I(0);
target.moveCaretPosition$I(doc.getLength$());
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "UnselectAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["unselect"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
target.setCaretPosition$I(target.getCaretPosition$());
}});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.DefaultEditorKit, "ToggleComponentOrientationAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$S.apply(this,["toggle-componentOrientation"]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var target=this.getTextComponent$java_awt_event_ActionEvent(e);
if (target != null ) {
var last=target.getComponentOrientation$();
var next;
if (last === $I$(12).RIGHT_TO_LEFT ) next=$I$(12).LEFT_TO_RIGHT;
 else next=$I$(12).RIGHT_TO_LEFT;
target.setComponentOrientation$java_awt_ComponentOrientation(next);
target.秘repaint$();
}});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Document");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "EditorKit", null, null, 'Cloneable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'clone$',  function () {
var o;
try {
o=Clazz_clone(this);
} catch (cnse) {
if (Clazz_exceptionOf(cnse,"CloneNotSupportedException")){
o=null;
} else {
throw cnse;
}
}
return o;
});

Clazz_newMeth(C$, 'install$javax_swing_JEditorPane',  function (c) {
});

Clazz_newMeth(C$, 'deinstall$javax_swing_JEditorPane',  function (c) {
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Element");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,['javax.swing.text.GapContent','.MarkData'],['javax.swing.text.GapContent','.MarkVector'],['javax.swing.text.GapContent','.InsertUndo'],['javax.swing.text.GapContent','.RemoveUndo'],'javax.swing.text.Segment',['javax.swing.text.GapContent','.StickyPosition'],'java.util.Vector',['javax.swing.text.GapContent','.UndoPosRef']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "GapContent", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.text.GapVector', [['javax.swing.text.AbstractDocument','javax.swing.text.AbstractDocument.Content']]);
C$.$classes$=[['MarkData',16],['StickyPosition',16],['MarkVector',8],['UndoPosRef',16],['InsertUndo',0],['RemoveUndo',0]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['marks','javax.swing.text.GapContent.MarkVector','search','javax.swing.text.GapContent.MarkData']]
,['O',['empty','char[]']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I.apply(this, [10]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialLength) {
;C$.superclazz.c$$I.apply(this,[Math.max(initialLength, 2)]);C$.$init$.apply(this);
var implied=Clazz_array(Character.TYPE, [1]);
implied[0]="\n";
this.replace$I$I$O$I(0, 0, implied, implied.length);
this.marks=Clazz_new_($I$(2,1));
this.search=Clazz_new_($I$(1,1).c$$I,[this, null, 0]);
}, 1);

Clazz_newMeth(C$, 'allocateArray$I',  function (len) {
return Clazz_array(Character.TYPE, [len]);
});

Clazz_newMeth(C$, 'getArrayLength$',  function () {
var carray=this.getArray$();
return carray.length;
});

Clazz_newMeth(C$, 'length$',  function () {
var len=this.getArrayLength$() - (this.getGapEnd$() - this.getGapStart$());
return len;
});

Clazz_newMeth(C$, 'insertString$I$S',  function (where, str) {
if (where > this.length$() || where < 0 ) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Invalid insert", this.length$()]);
}var chars=str.toCharArray$();
this.replace$I$I$O$I(where, 0, chars, chars.length);
return Clazz_new_([this, null, where, str.length$()],$I$(3,1).c$$I$I);
});

Clazz_newMeth(C$, 'remove$I$I',  function (where, nitems) {
if (where + nitems >= this.length$()) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Invalid remove", this.length$() + 1]);
}var removedString=this.getString$I$I(where, nitems);
var edit=Clazz_new_($I$(4,1).c$$I$S,[this, null, where, removedString]);
this.replace$I$I$O$I(where, nitems, C$.empty, 0);
return edit;
});

Clazz_newMeth(C$, 'getString$I$I',  function (where, len) {
var s=Clazz_new_($I$(5,1));
this.getChars$I$I$javax_swing_text_Segment(where, len, s);
return  String.instantialize(s.array, s.offset, s.count);
});

Clazz_newMeth(C$, 'getChars$I$I$javax_swing_text_Segment',  function (where, len, chars) {
var end=where + len;
if (where < 0 || end < 0 ) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Invalid location", -1]);
}if (end > this.length$() || where > this.length$() ) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Invalid location", this.length$() + 1]);
}var g0=this.getGapStart$();
var g1=this.getGapEnd$();
var array=this.getArray$();
if ((where + len) <= g0) {
chars.array=array;
chars.offset=where;
} else if (where >= g0) {
chars.array=array;
chars.offset=g1 + where - g0;
} else {
var before=g0 - where;
if (chars.isPartialReturn$()) {
chars.array=array;
chars.offset=where;
chars.count=before;
return;
}chars.array=Clazz_array(Character.TYPE, [len]);
chars.offset=0;
System.arraycopy$O$I$O$I$I(array, where, chars.array, 0, before);
System.arraycopy$O$I$O$I$I(array, g1, chars.array, before, len - before);
}chars.count=len;
});

Clazz_newMeth(C$, 'createPosition$I',  function (offset) {
var g0=this.getGapStart$();
var g1=this.getGapEnd$();
var index=(offset < g0) ? offset : offset + (g1 - g0);
this.search.index=index;
var sortIndex=this.findSortIndex$javax_swing_text_GapContent_MarkData(this.search);
var m;
var position;
if (sortIndex < this.marks.size$() && (m=this.marks.elementAt$I(sortIndex)).index == index  && (position=m.getPosition$()) != null  ) {
} else {
position=Clazz_new_($I$(6,1),[this, null]);
m=Clazz_new_($I$(1,1).c$$I$javax_swing_text_GapContent_StickyPosition,[this, null, index, position]);
position.setMark$javax_swing_text_GapContent_MarkData(m);
this.marks.insertElementAt$javax_swing_text_GapContent_MarkData$I(m, sortIndex);
}return position;
});

Clazz_newMeth(C$, 'shiftEnd$I',  function (newSize) {
var oldGapEnd=this.getGapEnd$();
C$.superclazz.prototype.shiftEnd$I.apply(this, [newSize]);
var dg=this.getGapEnd$() - oldGapEnd;
var adjustIndex=this.findMarkAdjustIndex$I(oldGapEnd);
var n=this.marks.size$();
for (var i=adjustIndex; i < n; i++) {
var mark=this.marks.elementAt$I(i);
mark.index+=dg;
}
});

Clazz_newMeth(C$, 'getNewArraySize$I',  function (reqSize) {
if (reqSize < 524288) {
return C$.superclazz.prototype.getNewArraySize$I.apply(this, [reqSize]);
} else {
return reqSize + 524288;
}});

Clazz_newMeth(C$, 'shiftGap$I',  function (newGapStart) {
var oldGapStart=this.getGapStart$();
var dg=newGapStart - oldGapStart;
var oldGapEnd=this.getGapEnd$();
var newGapEnd=oldGapEnd + dg;
var gapSize=oldGapEnd - oldGapStart;
C$.superclazz.prototype.shiftGap$I.apply(this, [newGapStart]);
if (dg > 0) {
var adjustIndex=this.findMarkAdjustIndex$I(oldGapStart);
var n=this.marks.size$();
for (var i=adjustIndex; i < n; i++) {
var mark=this.marks.elementAt$I(i);
if (mark.index >= newGapEnd) {
break;
}mark.index-=gapSize;
}
} else if (dg < 0) {
var adjustIndex=this.findMarkAdjustIndex$I(newGapStart);
var n=this.marks.size$();
for (var i=adjustIndex; i < n; i++) {
var mark=this.marks.elementAt$I(i);
if (mark.index >= oldGapEnd) {
break;
}mark.index+=gapSize;
}
}this.resetMarksAtZero$();
});

Clazz_newMeth(C$, 'resetMarksAtZero$',  function () {
if (this.marks != null  && this.getGapStart$() == 0 ) {
var g1=this.getGapEnd$();
for (var counter=0, maxCounter=this.marks.size$(); counter < maxCounter; counter++) {
var mark=this.marks.elementAt$I(counter);
if (mark.index <= g1) {
mark.index=0;
} else {
break;
}}
}});

Clazz_newMeth(C$, 'shiftGapStartDown$I',  function (newGapStart) {
var adjustIndex=this.findMarkAdjustIndex$I(newGapStart);
var n=this.marks.size$();
var g0=this.getGapStart$();
var g1=this.getGapEnd$();
for (var i=adjustIndex; i < n; i++) {
var mark=this.marks.elementAt$I(i);
if (mark.index > g0) {
break;
}mark.index=g1;
}
C$.superclazz.prototype.shiftGapStartDown$I.apply(this, [newGapStart]);
this.resetMarksAtZero$();
});

Clazz_newMeth(C$, 'shiftGapEndUp$I',  function (newGapEnd) {
var adjustIndex=this.findMarkAdjustIndex$I(this.getGapEnd$());
var n=this.marks.size$();
for (var i=adjustIndex; i < n; i++) {
var mark=this.marks.elementAt$I(i);
if (mark.index >= newGapEnd) {
break;
}mark.index=newGapEnd;
}
C$.superclazz.prototype.shiftGapEndUp$I.apply(this, [newGapEnd]);
this.resetMarksAtZero$();
});

Clazz_newMeth(C$, 'compare$javax_swing_text_GapContent_MarkData$javax_swing_text_GapContent_MarkData',  function (o1, o2) {
if (o1.index < o2.index) {
return -1;
} else if (o1.index > o2.index) {
return 1;
} else {
return 0;
}});

Clazz_newMeth(C$, 'findMarkAdjustIndex$I',  function (searchIndex) {
this.search.index=Math.max(searchIndex, 1);
var index=this.findSortIndex$javax_swing_text_GapContent_MarkData(this.search);
for (var i=index - 1; i >= 0; i--) {
var d=this.marks.elementAt$I(i);
if (d.index != this.search.index) {
break;
}index-=1;
}
return index;
});

Clazz_newMeth(C$, 'findSortIndex$javax_swing_text_GapContent_MarkData',  function (o) {
var lower=0;
var upper=this.marks.size$() - 1;
var mid=0;
if (upper == -1) {
return 0;
}var cmp=0;
var last=this.marks.elementAt$I(upper);
cmp=this.compare$javax_swing_text_GapContent_MarkData$javax_swing_text_GapContent_MarkData(o, last);
if (cmp > 0) return upper + 1;
while (lower <= upper){
mid=lower + (((upper - lower)/2|0));
var entry=this.marks.elementAt$I(mid);
cmp=this.compare$javax_swing_text_GapContent_MarkData$javax_swing_text_GapContent_MarkData(o, entry);
if (cmp == 0) {
return mid;
} else if (cmp < 0) {
upper=mid - 1;
} else {
lower=mid + 1;
}}
return (cmp < 0) ? mid : mid + 1;
});

Clazz_newMeth(C$, 'removeUnusedMarks$',  function () {
var n=this.marks.size$();
var cleaned=Clazz_new_($I$(2,1).c$$I,[n]);
for (var i=0; i < n; i++) {
var mark=this.marks.elementAt$I(i);
if (mark != null ) {
cleaned.addElement$javax_swing_text_GapContent_MarkData(mark);
}}
this.marks=cleaned;
});

Clazz_newMeth(C$, 'getPositionsInRange$java_util_Vector$I$I',  function (v, offset, length) {
var endOffset=offset + length;
var startIndex;
var endIndex;
var g0=this.getGapStart$();
var g1=this.getGapEnd$();
if (offset < g0) {
if (offset == 0) {
startIndex=0;
} else {
startIndex=this.findMarkAdjustIndex$I(offset);
}if (endOffset >= g0) {
endIndex=this.findMarkAdjustIndex$I(endOffset + (g1 - g0) + 1 );
} else {
endIndex=this.findMarkAdjustIndex$I(endOffset + 1);
}} else {
startIndex=this.findMarkAdjustIndex$I(offset + (g1 - g0));
endIndex=this.findMarkAdjustIndex$I(endOffset + (g1 - g0) + 1 );
}var placeIn=(v == null ) ? Clazz_new_([Math.max(1, endIndex - startIndex)],$I$(7,1).c$$I) : v;
for (var counter=startIndex; counter < endIndex; counter++) {
placeIn.addElement$O(Clazz_new_([this, null, this.marks.elementAt$I(counter)],$I$(8,1).c$$javax_swing_text_GapContent_MarkData));
}
return placeIn;
});

Clazz_newMeth(C$, 'updateUndoPositions$java_util_Vector$I$I',  function (positions, offset, length) {
var endOffset=offset + length;
var g1=this.getGapEnd$();
var startIndex;
var endIndex=this.findMarkAdjustIndex$I(g1 + 1);
if (offset != 0) {
startIndex=this.findMarkAdjustIndex$I(g1);
} else {
startIndex=0;
}for (var counter=positions.size$() - 1; counter >= 0; counter--) {
var ref=positions.elementAt$I(counter);
ref.resetLocation$I$I(endOffset, g1);
}
if (startIndex < endIndex) {
var sorted=Clazz_array(java.lang.Object, [endIndex - startIndex]);
var addIndex=0;
var counter;
if (offset == 0) {
for (counter=startIndex; counter < endIndex; counter++) {
var mark=this.marks.elementAt$I(counter);
if (mark.index == 0) {
sorted[addIndex++]=mark;
}}
for (counter=startIndex; counter < endIndex; counter++) {
var mark=this.marks.elementAt$I(counter);
if (mark.index != 0) {
sorted[addIndex++]=mark;
}}
} else {
for (counter=startIndex; counter < endIndex; counter++) {
var mark=this.marks.elementAt$I(counter);
if (mark.index != g1) {
sorted[addIndex++]=mark;
}}
for (counter=startIndex; counter < endIndex; counter++) {
var mark=this.marks.elementAt$I(counter);
if (mark.index == g1) {
sorted[addIndex++]=mark;
}}
}this.marks.replaceRange$I$I$OA(startIndex, endIndex, sorted);
}});

C$.$static$=function(){C$.$static$=0;
C$.empty=Clazz_array(Character.TYPE, [0]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.GapContent, "MarkData", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index'],'O',['ref','javax.swing.text.GapContent.StickyPosition']]]

Clazz_newMeth(C$, 'c$$I',  function (index) {
;C$.$init$.apply(this);
this.index=index;
}, 1);

Clazz_newMeth(C$, 'c$$I$javax_swing_text_GapContent_StickyPosition',  function (index, position) {
;C$.$init$.apply(this);
this.ref=position;
this.index=index;
}, 1);

Clazz_newMeth(C$, 'getOffset$',  function () {
var g0=this.b$['javax.swing.text.GapVector'].getGapStart$.apply(this.b$['javax.swing.text.GapVector'], []);
var g1=this.b$['javax.swing.text.GapVector'].getGapEnd$.apply(this.b$['javax.swing.text.GapVector'], []);
var offs=(this.index < g0) ? this.index : this.index - (g1 - g0);
return Math.max(offs, 0);
});

Clazz_newMeth(C$, 'getPosition$',  function () {
return this.ref;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GapContent, "StickyPosition", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.text.Position');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['mark','javax.swing.text.GapContent.MarkData']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setMark$javax_swing_text_GapContent_MarkData',  function (mark) {
this.mark=mark;
});

Clazz_newMeth(C$, 'getOffset$',  function () {
return this.mark.getOffset$();
});

Clazz_newMeth(C$, 'toString',  function () {
return Integer.toString$I(this.getOffset$());
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GapContent, "MarkVector", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.GapVector');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.oneMark=Clazz_array($I$(1), [1]);
},1);

C$.$fields$=[['O',['oneMark','javax.swing.text.GapContent.MarkData[]']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (size) {
;C$.superclazz.c$$I.apply(this,[size]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'allocateArray$I',  function (len) {
return Clazz_array($I$(1), [len]);
});

Clazz_newMeth(C$, 'getArrayLength$',  function () {
var marks=this.getArray$();
return marks.length;
});

Clazz_newMeth(C$, 'size$',  function () {
var len=this.getArrayLength$() - (this.getGapEnd$() - this.getGapStart$());
return len;
});

Clazz_newMeth(C$, 'insertElementAt$javax_swing_text_GapContent_MarkData$I',  function (m, index) {
this.oneMark[0]=m;
this.replace$I$I$O$I(index, 0, this.oneMark, 1);
});

Clazz_newMeth(C$, 'addElement$javax_swing_text_GapContent_MarkData',  function (m) {
this.insertElementAt$javax_swing_text_GapContent_MarkData$I(m, this.size$());
});

Clazz_newMeth(C$, 'elementAt$I',  function (index) {
var g0=this.getGapStart$();
var g1=this.getGapEnd$();
var array=this.getArray$();
if (index < g0) {
return array[index];
} else {
index+=g1 - g0;
return array[index];
}});

Clazz_newMeth(C$, 'replaceRange$I$I$OA',  function (start, end, marks) {
var g0=this.getGapStart$();
var g1=this.getGapEnd$();
var index=start;
var newIndex=0;
var array=this.getArray$();
if (start >= g0) {
index+=(g1 - g0);
end+=(g1 - g0);
} else if (end >= g0) {
end+=(g1 - g0);
while (index < g0){
array[index++]=marks[newIndex++];
}
index=g1;
} else {
while (index < end){
array[index++]=marks[newIndex++];
}
}while (index < end){
array[index++]=marks[newIndex++];
}
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GapContent, "UndoPosRef", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['undoLocation'],'O',['rec','javax.swing.text.GapContent.MarkData']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_GapContent_MarkData',  function (rec) {
;C$.$init$.apply(this);
this.rec=rec;
this.undoLocation=rec.getOffset$();
}, 1);

Clazz_newMeth(C$, 'resetLocation$I$I',  function (endOffset, g1) {
if (this.undoLocation != endOffset) {
this.rec.index=this.undoLocation;
} else {
this.rec.index=g1;
}});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GapContent, "InsertUndo", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'javax.swing.undo.AbstractUndoableEdit');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['offset','length'],'S',['string'],'O',['posRefs','java.util.Vector']]]

Clazz_newMeth(C$, 'c$$I$I',  function (offset, length) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.offset=offset;
this.length=length;
}, 1);

Clazz_newMeth(C$, 'undo$',  function () {
C$.superclazz.prototype.undo$.apply(this, []);
try {
this.posRefs=this.b$['javax.swing.text.GapContent'].getPositionsInRange$java_util_Vector$I$I.apply(this.b$['javax.swing.text.GapContent'], [null, this.offset, this.length]);
this.string=this.b$['javax.swing.text.GapContent'].getString$I$I.apply(this.b$['javax.swing.text.GapContent'], [this.offset, this.length]);
this.b$['javax.swing.text.GapContent'].remove$I$I.apply(this.b$['javax.swing.text.GapContent'], [this.offset, this.length]);
} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('javax.swing.undo.CannotUndoException'));
} else {
throw bl;
}
}
});

Clazz_newMeth(C$, 'redo$',  function () {
C$.superclazz.prototype.redo$.apply(this, []);
try {
this.b$['javax.swing.text.GapContent'].insertString$I$S.apply(this.b$['javax.swing.text.GapContent'], [this.offset, this.string]);
this.string=null;
if (this.posRefs != null ) {
this.b$['javax.swing.text.GapContent'].updateUndoPositions$java_util_Vector$I$I.apply(this.b$['javax.swing.text.GapContent'], [this.posRefs, this.offset, this.length]);
this.posRefs=null;
}} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('javax.swing.undo.CannotRedoException'));
} else {
throw bl;
}
}
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GapContent, "RemoveUndo", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'javax.swing.undo.AbstractUndoableEdit');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['offset','length'],'S',['string'],'O',['posRefs','java.util.Vector']]]

Clazz_newMeth(C$, 'c$$I$S',  function (offset, string) {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.offset=offset;
this.string=string;
this.length=string.length$();
this.posRefs=this.b$['javax.swing.text.GapContent'].getPositionsInRange$java_util_Vector$I$I.apply(this.b$['javax.swing.text.GapContent'], [null, offset, this.length]);
}, 1);

Clazz_newMeth(C$, 'undo$',  function () {
C$.superclazz.prototype.undo$.apply(this, []);
try {
this.b$['javax.swing.text.GapContent'].insertString$I$S.apply(this.b$['javax.swing.text.GapContent'], [this.offset, this.string]);
if (this.posRefs != null ) {
this.b$['javax.swing.text.GapContent'].updateUndoPositions$java_util_Vector$I$I.apply(this.b$['javax.swing.text.GapContent'], [this.posRefs, this.offset, this.length]);
this.posRefs=null;
}this.string=null;
} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('javax.swing.undo.CannotUndoException'));
} else {
throw bl;
}
}
});

Clazz_newMeth(C$, 'redo$',  function () {
C$.superclazz.prototype.redo$.apply(this, []);
try {
this.string=this.b$['javax.swing.text.GapContent'].getString$I$I.apply(this.b$['javax.swing.text.GapContent'], [this.offset, this.length]);
this.posRefs=this.b$['javax.swing.text.GapContent'].getPositionsInRange$java_util_Vector$I$I.apply(this.b$['javax.swing.text.GapContent'], [null, this.offset, this.length]);
this.b$['javax.swing.text.GapContent'].remove$I$I.apply(this.b$['javax.swing.text.GapContent'], [this.offset, this.length]);
} catch (bl) {
if (Clazz_exceptionOf(bl,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('javax.swing.undo.CannotRedoException'));
} else {
throw bl;
}
}
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text");
/*c*/var C$=Clazz_newClass(P$, "GapVector");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['g0','g1'],'O',['array','java.lang.Object']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$I.apply(this, [10]);
}, 1);

Clazz_newMeth(C$, 'c$$I',  function (initialLength) {
;C$.$init$.apply(this);
this.array=this.allocateArray$I(initialLength);
this.g0=0;
this.g1=initialLength;
}, 1);

Clazz_newMeth(C$, 'getArray$',  function () {
return this.array;
});

Clazz_newMeth(C$, 'getGapStart$',  function () {
return this.g0;
});

Clazz_newMeth(C$, 'getGapEnd$',  function () {
return this.g1;
});

Clazz_newMeth(C$, 'replace$I$I$O$I',  function (position, rmSize, addItems, addSize) {
var addOffset=0;
if (addSize == 0) {
this.close$I$I(position, rmSize);
return;
} else if (rmSize > addSize) {
this.close$I$I(position + addSize, rmSize - addSize);
} else {
var endSize=addSize - rmSize;
var end=this.open$I$I(position + rmSize, endSize);
System.arraycopy$O$I$O$I$I(addItems, rmSize, this.array, end, endSize);
addSize=rmSize;
}System.arraycopy$O$I$O$I$I(addItems, addOffset, this.array, position, addSize);
});

Clazz_newMeth(C$, 'close$I$I',  function (position, nItems) {
if (nItems == 0) return;
var end=position + nItems;
var new_gs=(this.g1 - this.g0) + nItems;
if (end <= this.g0) {
if (this.g0 != end) {
this.shiftGap$I(end);
}this.shiftGapStartDown$I(this.g0 - nItems);
} else if (position >= this.g0) {
if (this.g0 != position) {
this.shiftGap$I(position);
}this.shiftGapEndUp$I(this.g0 + new_gs);
} else {
this.shiftGapStartDown$I(position);
this.shiftGapEndUp$I(this.g0 + new_gs);
}});

Clazz_newMeth(C$, 'open$I$I',  function (position, nItems) {
var gapSize=this.g1 - this.g0;
if (nItems == 0) {
if (position > this.g0) position+=gapSize;
return position;
}this.shiftGap$I(position);
if (nItems >= gapSize) {
this.shiftEnd$I(this.getArrayLength$() - gapSize + nItems);
gapSize=this.g1 - this.g0;
}this.g0=this.g0 + nItems;
return position;
});

Clazz_newMeth(C$, 'resize$I',  function (nsize) {
var narray=this.allocateArray$I(nsize);
System.arraycopy$O$I$O$I$I(this.array, 0, narray, 0, Math.min(nsize, this.getArrayLength$()));
this.array=narray;
});

Clazz_newMeth(C$, 'shiftEnd$I',  function (newSize) {
var oldSize=this.getArrayLength$();
var oldGapEnd=this.g1;
var upperSize=oldSize - oldGapEnd;
var arrayLength=this.getNewArraySize$I(newSize);
var newGapEnd=arrayLength - upperSize;
this.resize$I(arrayLength);
this.g1=newGapEnd;
if (upperSize != 0) {
System.arraycopy$O$I$O$I$I(this.array, oldGapEnd, this.array, newGapEnd, upperSize);
}});

Clazz_newMeth(C$, 'getNewArraySize$I',  function (reqSize) {
return (reqSize + 1) * 2;
});

Clazz_newMeth(C$, 'shiftGap$I',  function (newGapStart) {
if (newGapStart == this.g0) {
return;
}var oldGapStart=this.g0;
var dg=newGapStart - oldGapStart;
var oldGapEnd=this.g1;
var newGapEnd=oldGapEnd + dg;
this.g0=newGapStart;
this.g1=newGapEnd;
if (dg > 0) {
System.arraycopy$O$I$O$I$I(this.array, oldGapEnd, this.array, oldGapStart, dg);
} else if (dg < 0) {
System.arraycopy$O$I$O$I$I(this.array, newGapStart, this.array, newGapEnd, -dg);
}});

Clazz_newMeth(C$, 'shiftGapStartDown$I',  function (newGapStart) {
this.g0=newGapStart;
});

Clazz_newMeth(C$, 'shiftGapEndUp$I',  function (newGapEnd) {
this.g1=newGapEnd;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:12 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),p$1={},p$2={},p$3={},I$=[[0,'java.awt.Point','java.awt.datatransfer.StringSelection','java.awt.datatransfer.DataFlavor','java.util.Hashtable','javax.swing.KeyStroke','javax.swing.Action','java.util.Vector',['javax.swing.text.JTextComponent','.KeymapWrapper'],'sun.awt.AppContext','StringBuffer','javax.swing.event.EventListenerList',['javax.swing.text.JTextComponent','.JSPlainDocument','.DocEvent'],['javax.swing.event.DocumentEvent','.EventType'],'javax.swing.event.DocumentListener','javax.swing.DropMode',['javax.swing.text.JTextComponent','.MutableCaretEvent'],'javax.swing.event.CaretListener',['javax.swing.text.JTextComponent','.JSPlainDocument'],['javax.swing.text.Position','.Bias'],['javax.swing.text.JTextComponent','.DropLocation'],['javax.swing.text.JTextComponent','.KeymapActionMap'],['javax.swing.text.JTextComponent','.DefaultKeymap'],'java.util.HashMap',['javax.swing.text.DefaultEditorKit','.DefaultKeyTypedAction'],'swingjs.JSUtil','javax.swing.TransferHandler','java.awt.event.ActionEvent','java.awt.EventQueue',['javax.swing.text.JTextComponent','.DefaultTransferHandler']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JTextComponent", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JComponent', ['java.awt.TextComponent', 'javax.swing.Scrollable']);
C$.$classes$=[['KeyBinding',9],['DropLocation',25],['DefaultTransferHandler',8],['DefaultKeymap',8],['KeymapWrapper',8],['KeymapActionMap',8],['MutableCaretEvent',9],['JSPlainDocument',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.dropMode=$I$(15).USE_SELECTION;
},1);

C$.$fields$=[['Z',['editable','dragEnabled'],'C',['focusAccelerator'],'S',['composedTextContent'],'O',['秘jsHTMLHelper','swingjs.JSHTMLHelper','model','javax.swing.text.Document','caret','javax.swing.text.Caret','navigationFilter','javax.swing.text.NavigationFilter','highlighter','javax.swing.text.Highlighter','keymap','javax.swing.text.Keymap','caretEvent','javax.swing.text.JTextComponent.MutableCaretEvent','caretColor','java.awt.Color','+selectionColor','+selectedTextColor','+disabledTextColor','margin','java.awt.Insets','dropMode','javax.swing.DropMode','dropLocation','javax.swing.text.JTextComponent.DropLocation','composedTextAttribute','javax.swing.text.SimpleAttributeSet','composedTextStart','javax.swing.text.Position','+composedTextEnd']]
,['O',['defaultTransferHandler','javax.swing.text.JTextComponent.DefaultTransferHandler','overrideMap','java.util.Map']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.enableEvents$J(2056);
this.caretEvent=Clazz_new_($I$(16,1).c$$javax_swing_text_JTextComponent,[this]);
this.addMouseListener$java_awt_event_MouseListener(this.caretEvent);
this.addFocusListener$java_awt_event_FocusListener(this.caretEvent);
this.setEditable$Z(true);
this.setDragEnabled$Z(false);
this.setLayout$java_awt_LayoutManager(null);
this.updateUI$();
this.setOpaque$Z(true);
}, 1);

Clazz_newMeth(C$, 'updateUI$',  function () {
C$.superclazz.prototype.updateUI$.apply(this, []);
this.invalidate$();
});

Clazz_newMeth(C$, 'addCaretListener$javax_swing_event_CaretListener',  function (listener) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(17),['caretUpdate$javax_swing_event_CaretEvent']), listener);
});

Clazz_newMeth(C$, 'removeCaretListener$javax_swing_event_CaretListener',  function (listener) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(17),['caretUpdate$javax_swing_event_CaretEvent']), listener);
});

Clazz_newMeth(C$, 'getCaretListeners$',  function () {
return this.listenerList.getListeners$Class(Clazz_getClass($I$(17),['caretUpdate$javax_swing_event_CaretEvent']));
});

Clazz_newMeth(C$, 'fireCaretUpdate$javax_swing_event_CaretEvent',  function (e) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(17),['caretUpdate$javax_swing_event_CaretEvent']) ) {
(listeners[i + 1]).caretUpdate$javax_swing_event_CaretEvent(e);
}}
});

Clazz_newMeth(C$, 'setDocument$javax_swing_text_Document',  function (doc) {
var old=this.model;
if (doc === "null" ) {
doc=Clazz_new_($I$(18,1),[this, null]);
}try {
this.model=doc;
this.firePropertyChange$S$O$O("document", old, doc);
} finally {
}
this.revalidate$();
this.秘repaint$();
});

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.model;
});

Clazz_newMeth(C$, 'setComponentOrientation$java_awt_ComponentOrientation',  function (o) {
C$.superclazz.prototype.setComponentOrientation$java_awt_ComponentOrientation.apply(this, [o]);
});

Clazz_newMeth(C$, 'getActions$',  function () {
if (this.getUI$() == null ) return null;
return (this.getUI$()).getEditorKit$javax_swing_text_JTextComponent(this).getActions$();
});

Clazz_newMeth(C$, 'setMargin$java_awt_Insets',  function (m) {
var old=this.margin;
this.margin=m;
this.firePropertyChange$S$O$O("margin", old, m);
this.invalidate$();
});

Clazz_newMeth(C$, 'getMargin$',  function () {
return this.margin;
});

Clazz_newMeth(C$, 'setNavigationFilter$javax_swing_text_NavigationFilter',  function (filter) {
this.navigationFilter=filter;
});

Clazz_newMeth(C$, 'getNavigationFilter$',  function () {
return this.navigationFilter;
});

Clazz_newMeth(C$, 'getCaret$',  function () {
return this.caret;
});

Clazz_newMeth(C$, 'setCaret$javax_swing_text_Caret',  function (c) {
if (this.caret != null ) {
this.caret.removeChangeListener$javax_swing_event_ChangeListener(this.caretEvent);
this.caret.deinstall$javax_swing_text_JTextComponent(this);
}var old=this.caret;
this.caret=c;
if (this.caret != null ) {
this.caret.install$javax_swing_text_JTextComponent(this);
this.caret.addChangeListener$javax_swing_event_ChangeListener(this.caretEvent);
}this.firePropertyChange$S$O$O("caret", old, this.caret);
});

Clazz_newMeth(C$, 'getHighlighter$',  function () {
return this.highlighter;
});

Clazz_newMeth(C$, 'setHighlighter$javax_swing_text_Highlighter',  function (h) {
if (this.highlighter != null ) {
this.highlighter.deinstall$javax_swing_text_JTextComponent(this);
}var old=this.highlighter;
this.highlighter=h;
if (this.highlighter != null ) {
this.highlighter.install$javax_swing_text_JTextComponent(this);
}this.firePropertyChange$S$O$O("highlighter", old, h);
});

Clazz_newMeth(C$, 'setKeymap$javax_swing_text_Keymap',  function (map) {
var old=this.keymap;
this.keymap=map;
this.firePropertyChange$S$O$O("keymap", old, this.keymap);
this.updateInputMap$javax_swing_text_Keymap$javax_swing_text_Keymap(old, map);
});

Clazz_newMeth(C$, 'setDragEnabled$Z',  function (b) {
this.dragEnabled=b;
});

Clazz_newMeth(C$, 'getDragEnabled$',  function () {
return this.dragEnabled;
});

Clazz_newMeth(C$, 'setDropMode$javax_swing_DropMode',  function (dropMode) {
if (dropMode != null ) {
switch (dropMode) {
case $I$(15).USE_SELECTION:
case $I$(15).INSERT:
this.dropMode=dropMode;
return;
}
}throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[dropMode + ": Unsupported drop mode for text"]);
});

Clazz_newMeth(C$, 'getDropMode$',  function () {
return this.dropMode;
});

Clazz_newMeth(C$, 'dropLocationForPoint$java_awt_Point',  function (p) {
var bias=Clazz_array($I$(19), [1]);
var index=(this.getUI$()).viewToModel$javax_swing_text_JTextComponent$java_awt_Point$javax_swing_text_Position_BiasA(this, p, bias);
if (bias[0] == null ) {
bias[0]=$I$(19).Forward;
}return Clazz_new_($I$(20,1).c$$java_awt_Point$I$javax_swing_text_Position_Bias,[p, index, bias[0]]);
});

Clazz_newMeth(C$, 'setDropLocation$javax_swing_TransferHandler_DropLocation$O$Z',  function (location, state, forDrop) {
var retVal=null;
var textLocation=location;
if (this.dropMode === $I$(15).USE_SELECTION ) {
if (textLocation == null ) {
if (state != null ) {
var vals=state;
if (!forDrop) {
if (Clazz_instanceOf(this.caret, "javax.swing.text.DefaultCaret")) {
(this.caret).setDot$I$javax_swing_text_Position_Bias((vals[0]).intValue$(), vals[3]);
(this.caret).moveDot$I$javax_swing_text_Position_Bias((vals[1]).intValue$(), vals[4]);
} else {
this.caret.setDot$I((vals[0]).intValue$());
this.caret.moveDot$I((vals[1]).intValue$());
}}this.caret.setVisible$Z((vals[2]).booleanValue$());
}} else {
if (this.dropLocation == null ) {
var visible;
if (Clazz_instanceOf(this.caret, "javax.swing.text.DefaultCaret")) {
var dc=this.caret;
visible=dc.isActive$();
retVal=Clazz_array(java.lang.Object, -1, [Integer.valueOf$I(dc.getMark$()), Integer.valueOf$I(dc.getDot$()), Boolean.valueOf$Z(visible), dc.getMarkBias$(), dc.getDotBias$()]);
} else {
visible=this.caret.isVisible$();
retVal=Clazz_array(java.lang.Object, -1, [Integer.valueOf$I(this.caret.getMark$()), Integer.valueOf$I(this.caret.getDot$()), Boolean.valueOf$Z(visible)]);
}this.caret.setVisible$Z(true);
} else {
retVal=state;
}if (Clazz_instanceOf(this.caret, "javax.swing.text.DefaultCaret")) {
(this.caret).setDot$I$javax_swing_text_Position_Bias(textLocation.getIndex$(), textLocation.getBias$());
} else {
this.caret.setDot$I(textLocation.getIndex$());
}}} else {
if (textLocation == null ) {
if (state != null ) {
this.caret.setVisible$Z((state).booleanValue$());
}} else {
if (this.dropLocation == null ) {
var visible=Clazz_instanceOf(this.caret, "javax.swing.text.DefaultCaret") ? (this.caret).isActive$() : this.caret.isVisible$();
retVal=Boolean.valueOf$Z(visible);
this.caret.setVisible$Z(false);
} else {
retVal=state;
}}}var old=this.dropLocation;
this.dropLocation=textLocation;
this.firePropertyChange$S$O$O("dropLocation", old, this.dropLocation);
return retVal;
});

Clazz_newMeth(C$, 'getDropLocation$',  function () {
return this.dropLocation;
});

Clazz_newMeth(C$, 'updateInputMap$javax_swing_text_Keymap$javax_swing_text_Keymap',  function (oldKm, newKm) {
var km=this.getInputMap$I(0);
var last=km;
while (km != null  && !(Clazz_instanceOf(km, "javax.swing.text.JTextComponent.KeymapWrapper")) ){
last=km;
km=km.getParent$();
}
if (km != null ) {
if (newKm == null ) {
if (last !== km ) {
last.setParent$javax_swing_InputMap(km.getParent$());
} else {
last.setParent$javax_swing_InputMap(null);
}} else {
var newKM=Clazz_new_($I$(8,1).c$$javax_swing_text_Keymap,[newKm]);
last.setParent$javax_swing_InputMap(newKM);
if (last !== km ) {
newKM.setParent$javax_swing_InputMap(km.getParent$());
}}} else if (newKm != null ) {
km=this.getInputMap$I(0);
if (km != null ) {
var newKM=Clazz_new_($I$(8,1).c$$javax_swing_text_Keymap,[newKm]);
newKM.setParent$javax_swing_InputMap(km.getParent$());
km.setParent$javax_swing_InputMap(newKM);
}}var am=this.getActionMap$();
var lastAM=am;
while (am != null  && !(Clazz_instanceOf(am, "javax.swing.text.JTextComponent.KeymapActionMap")) ){
lastAM=am;
am=am.getParent$();
}
if (am != null ) {
if (newKm == null ) {
if (lastAM !== am ) {
lastAM.setParent$javax_swing_ActionMap(am.getParent$());
} else {
lastAM.setParent$javax_swing_ActionMap(null);
}} else {
var newAM=Clazz_new_($I$(21,1).c$$javax_swing_text_Keymap,[newKm]);
lastAM.setParent$javax_swing_ActionMap(newAM);
if (lastAM !== am ) {
newAM.setParent$javax_swing_ActionMap(am.getParent$());
}}} else if (newKm != null ) {
am=this.getActionMap$();
if (am != null ) {
var newAM=Clazz_new_($I$(21,1).c$$javax_swing_text_Keymap,[newKm]);
newAM.setParent$javax_swing_ActionMap(am.getParent$());
am.setParent$javax_swing_ActionMap(newAM);
}}});

Clazz_newMeth(C$, 'getKeymap$',  function () {
return this.keymap;
});

Clazz_newMeth(C$, 'addKeymap$S$javax_swing_text_Keymap',  function (nm, parent) {
var map=Clazz_new_($I$(22,1).c$$S$javax_swing_text_Keymap,[nm, parent]);
if (nm != null ) {
C$.getKeymapTable$().put$O$O(nm, map);
}return map;
}, 1);

Clazz_newMeth(C$, 'removeKeymap$S',  function (nm) {
return C$.getKeymapTable$().remove$O(nm);
}, 1);

Clazz_newMeth(C$, 'getKeymap$S',  function (nm) {
return C$.getKeymapTable$().get$O(nm);
}, 1);

Clazz_newMeth(C$, 'getKeymapTable$',  function () {
{
var appContext=$I$(9).getAppContext$();
var keymapTable=appContext.get$O("JTextComponent_KeymapTable");
if (keymapTable == null ) {
keymapTable=Clazz_new_($I$(23,1).c$$I,[17]);
appContext.put$O$O("JTextComponent_KeymapTable", keymapTable);
var binding=C$.addKeymap$S$javax_swing_text_Keymap("default", null);
binding.setDefaultAction$javax_swing_Action(Clazz_new_($I$(24,1)));
}return keymapTable;
}}, 1);

Clazz_newMeth(C$, 'loadKeymap$javax_swing_text_Keymap$javax_swing_text_JTextComponent_KeyBindingA$javax_swing_ActionA',  function (map, bindings, actions) {
var h=Clazz_new_($I$(4,1));
for (var i=0; i < actions.length; i++) {
var a=actions[i];
var value=a.getValue$S("Name");
h.put$O$O((value != null  ? value : ""), a);
}
for (var i=0; i < bindings.length; i++) {
var a=h.get$O(bindings[i].actionName);
if (a != null ) {
map.addActionForKeyStroke$javax_swing_KeyStroke$javax_swing_Action(bindings[i].key, a);
}}
}, 1);

Clazz_newMeth(C$, 'getCaretColor$',  function () {
return this.caretColor;
});

Clazz_newMeth(C$, 'setCaretColor$java_awt_Color',  function (c) {
var old=this.caretColor;
this.caretColor=c;
this.firePropertyChange$S$O$O("caretColor", old, this.caretColor);
});

Clazz_newMeth(C$, 'getSelectionColor$',  function () {
return this.selectionColor;
});

Clazz_newMeth(C$, 'setSelectionColor$java_awt_Color',  function (c) {
var old=this.selectionColor;
this.selectionColor=c;
this.firePropertyChange$S$O$O("selectionColor", old, this.selectionColor);
});

Clazz_newMeth(C$, 'getSelectedTextColor$',  function () {
return this.selectedTextColor;
});

Clazz_newMeth(C$, 'setSelectedTextColor$java_awt_Color',  function (c) {
var old=this.selectedTextColor;
this.selectedTextColor=c;
this.firePropertyChange$S$O$O("selectedTextColor", old, this.selectedTextColor);
});

Clazz_newMeth(C$, 'getDisabledTextColor$',  function () {
return this.disabledTextColor;
});

Clazz_newMeth(C$, 'setDisabledTextColor$java_awt_Color',  function (c) {
var old=this.disabledTextColor;
this.disabledTextColor=c;
this.firePropertyChange$S$O$O("disabledTextColor", old, this.disabledTextColor);
});

Clazz_newMeth(C$, 'replaceSelection$S',  function (content) {
var doc=this.getDocument$();
if (doc != null ) {
try {
var composedTextSaved=p$3.saveComposedText$I.apply(this, [this.caret.getDot$()]);
var p0=Math.min(this.caret.getDot$(), this.caret.getMark$());
var p1=Math.max(this.caret.getDot$(), this.caret.getMark$());
if (Clazz_instanceOf(doc, "javax.swing.text.AbstractDocument")) {
(doc).replace$I$I$S$javax_swing_text_AttributeSet$javax_swing_text_JTextComponent(p0, p1 - p0, content, null, this);
} else {
if (p0 != p1) {
doc.remove$I$I(p0, p1 - p0);
}if (content != null  && content.length$() > 0 ) {
doc.insertString$I$S$javax_swing_text_AttributeSet(p0, content, null);
}}if (composedTextSaved) {
p$3.restoreComposedText.apply(this, []);
}} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
$I$(25,"alert$O",["SWINGJS BAD LOCATION EXCEPTION (replace):" + e.getMessage$() + $I$(25).getStackTrace$I(-10) ]);
} else {
throw e;
}
}
}});

Clazz_newMeth(C$, 'getText$I$I',  function (offs, len) {
return this.getDocument$().getText$I$I(offs, len);
});

Clazz_newMeth(C$, 'modelToView$I',  function (pos) {
return (this.getUI$()).modelToView$javax_swing_text_JTextComponent$I(this, pos);
});

Clazz_newMeth(C$, 'viewToModel$java_awt_Point',  function (pt) {
return (this.getUI$()).viewToModel$javax_swing_text_JTextComponent$java_awt_Point(this, pt);
});

Clazz_newMeth(C$, 'cut$',  function () {
(this.ui).action$S$I("delete", 0);
if (this.isEditable$() && this.isEnabled$() ) {
p$3.invokeAction$S$javax_swing_Action.apply(this, ["cut", $I$(26).getCutAction$()]);
}});

Clazz_newMeth(C$, 'copy$',  function () {
p$3.invokeAction$S$javax_swing_Action.apply(this, ["copy", $I$(26).getCopyAction$()]);
});

Clazz_newMeth(C$, 'paste$',  function () {
(this.ui).action$S$I("paste", 0);
if (this.isEditable$() && this.isEnabled$() ) {
p$3.invokeAction$S$javax_swing_Action.apply(this, ["paste", $I$(26).getPasteAction$()]);
}});

Clazz_newMeth(C$, 'invokeAction$S$javax_swing_Action',  function (name, altAction) {
var map=this.getActionMap$();
var action=null;
if (map != null ) {
action=map.get$O(name);
}p$3.installDefaultTransferHandlerIfNecessary.apply(this, []);
if (action == null ) {
action=altAction;
}action.actionPerformed$java_awt_event_ActionEvent(Clazz_new_([this, 1001, action.getValue$S("Name"), $I$(28).getMostRecentEventTime$(), p$3.getCurrentEventModifiers.apply(this, [])],$I$(27,1).c$$O$I$S$J$I));
}, p$3);

Clazz_newMeth(C$, 'installDefaultTransferHandlerIfNecessary',  function () {
if (this.getTransferHandler$() == null ) {
if (C$.defaultTransferHandler == null ) {
C$.defaultTransferHandler=Clazz_new_($I$(29,1));
}this.setTransferHandler$javax_swing_TransferHandler(C$.defaultTransferHandler);
}}, p$3);

Clazz_newMeth(C$, 'moveCaretPosition$I',  function (pos) {
var doc=this.getDocument$();
if (doc != null ) {
if (pos > doc.getLength$() || pos < 0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["bad position: " + pos]);
}this.caret.moveDot$I(pos);
}});

Clazz_newMeth(C$, 'setFocusAccelerator$C',  function (aKey) {
aKey=Character.toUpperCase$C(aKey);
var old=this.focusAccelerator;
this.focusAccelerator=aKey;
this.firePropertyChange$S$C$C("focusAcceleratorKey", old, this.focusAccelerator);
this.firePropertyChange$S$C$C("focusAccelerator", old, this.focusAccelerator);
});

Clazz_newMeth(C$, 'getFocusAccelerator$',  function () {
return this.focusAccelerator;
});

Clazz_newMeth(C$, 'read$java_io_Reader$O',  function ($in, desc) {
var kit=(this.getUI$()).getEditorKit$javax_swing_text_JTextComponent(this);
var doc=kit.createDefaultDocument$();
if (desc != null ) {
doc.putProperty$O$O("stream", desc);
}try {
kit.read$java_io_Reader$javax_swing_text_Document$I($in, doc, 0);
this.setDocument$javax_swing_text_Document(doc);
} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('java.io.IOException').c$$S,[e.getMessage$()]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'write$java_io_Writer',  function (out) {
var doc=this.getDocument$();
try {
(this.getUI$()).getEditorKit$javax_swing_text_JTextComponent(this).write$java_io_Writer$javax_swing_text_Document$I$I(out, doc, 0, doc.getLength$());
} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('java.io.IOException').c$$S,[e.getMessage$()]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'removeNotify$',  function () {
C$.superclazz.prototype.removeNotify$.apply(this, []);
if (C$.getFocusedComponent$() === this ) {
$I$(9).getAppContext$().remove$O("JTextComponent_FocusedComponent");
}});

Clazz_newMeth(C$, 'setCaretPosition$I',  function (position) {
var doc=this.getDocument$();
if (doc != null ) {
if (position > doc.getLength$() || position < 0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["bad position: " + position]);
}this.caret.setDot$I(position);
}});

Clazz_newMeth(C$, 'getCaretPosition$',  function () {
return this.caret.getDot$();
});

Clazz_newMeth(C$, 'setText$S',  function (t) {
try {
var doc=this.getDocument$();
if (Clazz_instanceOf(doc, "javax.swing.text.AbstractDocument")) {
(doc).replace$I$I$S$javax_swing_text_AttributeSet$javax_swing_text_JTextComponent(0, doc.getLength$(), t, null, this);
} else {
doc.remove$I$I(0, doc.getLength$());
doc.insertString$I$S$javax_swing_text_AttributeSet(0, t, null);
}} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
$I$(25,"alert$O",["SWINGJS BAD LOCATION EXCEPTION (setText):" + e.getMessage$() + $I$(25).getStackTrace$I(-10) ]);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getText$',  function () {
var doc=this.getDocument$();
var txt;
try {
txt=doc.getText$I$I(0, doc.getLength$());
} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
txt=null;
} else {
throw e;
}
}
return txt;
});

Clazz_newMeth(C$, 'getSelectedText$',  function () {
var txt=null;
var p0=Math.min(this.caret.getDot$(), this.caret.getMark$());
var p1=Math.max(this.caret.getDot$(), this.caret.getMark$());
if (p0 != p1) {
try {
var doc=this.getDocument$();
txt=doc.getText$I$I(p0, p1 - p0);
} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,[e.getMessage$()]);
} else {
throw e;
}
}
}return txt;
});

Clazz_newMeth(C$, 'isEditable$',  function () {
return this.editable;
});

Clazz_newMeth(C$, 'setEditable$Z',  function (b) {
if (b != this.editable ) {
var oldVal=this.editable;
this.editable=b;
this.firePropertyChange$S$O$O("editable", Boolean.valueOf$Z(oldVal), Boolean.valueOf$Z(this.editable));
this.秘repaint$();
}});

Clazz_newMeth(C$, 'getSelectionStart$',  function () {
var start=Math.min(this.caret.getDot$(), this.caret.getMark$());
return start;
});

Clazz_newMeth(C$, 'setSelectionStart$I',  function (selectionStart) {
this.select$I$I(selectionStart, this.getSelectionEnd$());
});

Clazz_newMeth(C$, 'getSelectionEnd$',  function () {
var end=Math.max(this.caret.getDot$(), this.caret.getMark$());
return end;
});

Clazz_newMeth(C$, 'setSelectionEnd$I',  function (selectionEnd) {
this.select$I$I(this.getSelectionStart$(), selectionEnd);
});

Clazz_newMeth(C$, 'select$I$I',  function (selectionStart, selectionEnd) {
var docLength=this.getDocument$().getLength$();
if (selectionStart < 0) {
selectionStart=0;
}if (selectionStart > docLength) {
selectionStart=docLength;
}if (selectionEnd > docLength) {
selectionEnd=docLength;
}if (selectionEnd < selectionStart) {
selectionEnd=selectionStart;
}this.setCaretPosition$I(selectionStart);
this.moveCaretPosition$I(selectionEnd);
});

Clazz_newMeth(C$, 'selectAll$',  function () {
var doc=this.getDocument$();
if (doc != null ) {
this.setCaretPosition$I(0);
this.moveCaretPosition$I(doc.getLength$());
}});

Clazz_newMeth(C$, 'getToolTipText$java_awt_event_MouseEvent',  function (event) {
var retValue=C$.superclazz.prototype.getToolTipText$java_awt_event_MouseEvent.apply(this, [event]);
if (retValue == null ) {
var ui=(this.getUI$());
if (ui != null ) {
retValue=ui.getToolTipText$javax_swing_text_JTextComponent$java_awt_Point(this, Clazz_new_([event.getX$(), event.getY$()],$I$(1,1).c$$I$I));
}}return retValue;
});

Clazz_newMeth(C$, 'getPreferredScrollableViewportSize$',  function () {
return this.getPreferredSize$();
});

Clazz_newMeth(C$, 'getScrollableUnitIncrement$java_awt_Rectangle$I$I',  function (visibleRect, orientation, direction) {
switch (orientation) {
case 1:
return (visibleRect.height/10|0);
case 0:
return (visibleRect.width/10|0);
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Invalid orientation: " + orientation]);
}
});

Clazz_newMeth(C$, 'getScrollableBlockIncrement$java_awt_Rectangle$I$I',  function (visibleRect, orientation, direction) {
switch (orientation) {
case 1:
return visibleRect.height;
case 0:
return visibleRect.width;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Invalid orientation: " + orientation]);
}
});

Clazz_newMeth(C$, 'getScrollableTracksViewportWidth$',  function () {
if (Clazz_instanceOf(this.getParent$(), "javax.swing.JViewport")) {
return ((this.getParent$()).getWidth$() > this.getPreferredSize$().width);
}return false;
});

Clazz_newMeth(C$, 'getScrollableTracksViewportHeight$',  function () {
if (Clazz_instanceOf(this.getParent$(), "javax.swing.JViewport")) {
return ((this.getParent$()).getHeight$() > this.getPreferredSize$().height);
}return false;
});

Clazz_newMeth(C$, 'paramString$',  function () {
var editableString=(this.editable ? "true" : "false");
var caretColorString=(this.caretColor != null  ? this.caretColor.toString() : "");
var selectionColorString=(this.selectionColor != null  ? this.selectionColor.toString() : "");
var selectedTextColorString=(this.selectedTextColor != null  ? this.selectedTextColor.toString() : "");
var disabledTextColorString=(this.disabledTextColor != null  ? this.disabledTextColor.toString() : "");
var marginString=(this.margin != null  ? this.margin.toString() : "");
return C$.superclazz.prototype.paramString$.apply(this, []) + ",caretColor=" + caretColorString + ",disabledTextColor=" + disabledTextColorString + ",editable=" + editableString + ",margin=" + marginString + ",selectedTextColor=" + selectedTextColorString + ",selectionColor=" + selectionColorString ;
});

Clazz_newMeth(C$, 'getFocusedComponent$',  function () {
return $I$(9).getAppContext$().get$O("JTextComponent_FocusedComponent");
}, 1);

Clazz_newMeth(C$, 'getCurrentEventModifiers',  function () {
var modifiers=0;
var currentEvent=$I$(28).getCurrentEvent$();
if (Clazz_instanceOf(currentEvent, "java.awt.event.InputEvent")) {
modifiers=(currentEvent).getModifiers$();
} else if (Clazz_instanceOf(currentEvent, "java.awt.event.ActionEvent")) {
modifiers=(currentEvent).getModifiers$();
}return modifiers;
}, p$3);

Clazz_newMeth(C$, 'addInputMethodListener$java_awt_event_InputMethodListener',  function (l) {
C$.superclazz.prototype.addInputMethodListener$java_awt_event_InputMethodListener.apply(this, [l]);
if (l != null ) {
}});

Clazz_newMeth(C$, 'saveComposedText$I',  function (pos) {
if (this.composedTextExists$()) {
var start=this.composedTextStart.getOffset$();
var len=this.composedTextEnd.getOffset$() - this.composedTextStart.getOffset$();
if (pos >= start && pos <= start + len ) {
try {
this.getDocument$().remove$I$I(start, len);
return true;
} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
}}return false;
}, p$3);

Clazz_newMeth(C$, 'restoreComposedText',  function () {
var doc=this.getDocument$();
try {
doc.insertString$I$S$javax_swing_text_AttributeSet(this.caret.getDot$(), this.composedTextContent, this.composedTextAttribute);
this.composedTextStart=doc.createPosition$I(this.caret.getDot$() - this.composedTextContent.length$());
this.composedTextEnd=doc.createPosition$I(this.caret.getDot$());
} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
}, p$3);

Clazz_newMeth(C$, 'composedTextExists$',  function () {
return (this.composedTextStart != null );
});

Clazz_newMeth(C$, 'setTextFromUI$S',  function (val) {
this.setText$S(val);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "KeyBinding", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['actionName'],'O',['key','javax.swing.KeyStroke']]]

Clazz_newMeth(C$, 'c$$javax_swing_KeyStroke$S',  function (key, actionName) {
;C$.$init$.apply(this);
this.key=key;
this.actionName=actionName;
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "DropLocation", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['javax.swing.TransferHandler','.DropLocation']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index'],'O',['bias','javax.swing.text.Position.Bias','$dropPoint','java.awt.Point']]]

Clazz_newMeth(C$, 'c$$java_awt_Point$I$javax_swing_text_Position_Bias',  function (p, index, bias) {
;C$.superclazz.c$$java_awt_Point.apply(this,[p]);C$.$init$.apply(this);
this.$dropPoint=Clazz_new_($I$(1,1).c$$java_awt_Point,[p]);
this.index=index;
this.bias=bias;
}, 1);

Clazz_newMeth(C$, 'getIndex$',  function () {
return this.index;
});

Clazz_newMeth(C$, 'getBias$',  function () {
return this.bias;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[dropPoint=" + this.getDropPoint$() + "," + "index=" + this.index + "," + "bias=" + this.bias + "]" ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "DefaultTransferHandler", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.TransferHandler', 'javax.swing.plaf.UIResource');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'exportToClipboard$javax_swing_JComponent$java_awt_datatransfer_Clipboard$I',  function (comp, clipboard, action) {
if (Clazz_instanceOf(comp, "javax.swing.text.JTextComponent")) {
var text=comp;
var p0=text.getSelectionStart$();
var p1=text.getSelectionEnd$();
if (p0 != p1) {
try {
var doc=text.getDocument$();
var srcData=doc.getText$I$I(p0, p1 - p0);
var contents=Clazz_new_($I$(2,1).c$$S,[srcData]);
clipboard.setContents$java_awt_datatransfer_Transferable$java_awt_datatransfer_ClipboardOwner(contents, null);
if (action == 2) {
doc.remove$I$I(p0, p1 - p0);
}} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
} else {
throw ble;
}
}
}}});

Clazz_newMeth(C$, 'importData$javax_swing_JComponent$java_awt_datatransfer_Transferable',  function (comp, t) {
if (Clazz_instanceOf(comp, "javax.swing.text.JTextComponent")) {
var flavor=p$1.getFlavor$java_awt_datatransfer_DataFlavorA.apply(this, [t.getTransferDataFlavors$()]);
if (flavor != null ) {
try {
var data=t.getTransferData$java_awt_datatransfer_DataFlavor(flavor);
(comp).replaceSelection$S(data);
return true;
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"java.awt.datatransfer.UnsupportedFlavorException")){
var ufe = e$$;
{
}
} else if (Clazz_exceptionOf(e$$,"java.io.IOException")){
var ioe = e$$;
{
}
} else {
throw e$$;
}
}
}}return false;
});

Clazz_newMeth(C$, 'canImport$javax_swing_JComponent$java_awt_datatransfer_DataFlavorA',  function (comp, transferFlavors) {
var c=comp;
if (!(c.isEditable$() && c.isEnabled$() )) {
return false;
}return (p$1.getFlavor$java_awt_datatransfer_DataFlavorA.apply(this, [transferFlavors]) != null );
});

Clazz_newMeth(C$, 'getSourceActions$javax_swing_JComponent',  function (c) {
return 0;
});

Clazz_newMeth(C$, 'getFlavor$java_awt_datatransfer_DataFlavorA',  function (flavors) {
if (flavors != null ) {
for (var counter=0; counter < flavors.length; counter++) {
if (flavors[counter].equals$java_awt_datatransfer_DataFlavor($I$(3).stringFlavor)) {
return flavors[counter];
}}
}return null;
}, p$1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "DefaultKeymap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'javax.swing.text.Keymap');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['nm'],'O',['parent','javax.swing.text.Keymap','bindings','java.util.Hashtable','defaultAction','javax.swing.Action']]]

Clazz_newMeth(C$, 'c$$S$javax_swing_text_Keymap',  function (nm, parent) {
;C$.$init$.apply(this);
this.nm=nm;
this.parent=parent;
this.bindings=Clazz_new_($I$(4,1));
}, 1);

Clazz_newMeth(C$, 'getDefaultAction$',  function () {
if (this.defaultAction != null ) {
return this.defaultAction;
}return (this.parent != null ) ? this.parent.getDefaultAction$() : null;
});

Clazz_newMeth(C$, 'setDefaultAction$javax_swing_Action',  function (a) {
this.defaultAction=a;
});

Clazz_newMeth(C$, 'getName$',  function () {
return this.nm;
});

Clazz_newMeth(C$, 'getAction$javax_swing_KeyStroke',  function (key) {
var a=this.bindings.get$O(key);
if ((a == null ) && (this.parent != null ) ) {
a=this.parent.getAction$javax_swing_KeyStroke(key);
}return a;
});

Clazz_newMeth(C$, 'getBoundKeyStrokes$',  function () {
var keys=Clazz_array($I$(5), [this.bindings.size$()]);
var i=0;
for (var e=this.bindings.keys$(); e.hasMoreElements$(); ) {
keys[i++]=e.nextElement$();
}
return keys;
});

Clazz_newMeth(C$, 'getBoundActions$',  function () {
var actions=Clazz_array($I$(6), [this.bindings.size$()]);
var i=0;
for (var e=this.bindings.elements$(); e.hasMoreElements$(); ) {
actions[i++]=e.nextElement$();
}
return actions;
});

Clazz_newMeth(C$, 'getKeyStrokesForAction$javax_swing_Action',  function (a) {
if (a == null ) {
return null;
}var retValue=null;
var keyStrokes=null;
for (var enum_=this.bindings.keys$(); enum_.hasMoreElements$(); ) {
var key=enum_.nextElement$();
if (this.bindings.get$O(key) === a ) {
if (keyStrokes == null ) {
keyStrokes=Clazz_new_($I$(7,1));
}keyStrokes.addElement$O(key);
}}
if (this.parent != null ) {
var pStrokes=this.parent.getKeyStrokesForAction$javax_swing_Action(a);
if (pStrokes != null ) {
var rCount=0;
for (var counter=pStrokes.length - 1; counter >= 0; counter--) {
if (this.isLocallyDefined$javax_swing_KeyStroke(pStrokes[counter])) {
pStrokes[counter]=null;
++rCount;
}}
if (rCount > 0 && rCount < pStrokes.length ) {
if (keyStrokes == null ) {
keyStrokes=Clazz_new_($I$(7,1));
}for (var counter=pStrokes.length - 1; counter >= 0; counter--) {
if (pStrokes[counter] != null ) {
keyStrokes.addElement$O(pStrokes[counter]);
}}
} else if (rCount == 0) {
if (keyStrokes == null ) {
retValue=pStrokes;
} else {
retValue=Clazz_array($I$(5), [keyStrokes.size$() + pStrokes.length]);
keyStrokes.copyInto$OA(retValue);
System.arraycopy$O$I$O$I$I(pStrokes, 0, retValue, keyStrokes.size$(), pStrokes.length);
keyStrokes=null;
}}}}if (keyStrokes != null ) {
retValue=Clazz_array($I$(5), [keyStrokes.size$()]);
keyStrokes.copyInto$OA(retValue);
}return retValue;
});

Clazz_newMeth(C$, 'isLocallyDefined$javax_swing_KeyStroke',  function (key) {
return this.bindings.containsKey$O(key);
});

Clazz_newMeth(C$, 'addActionForKeyStroke$javax_swing_KeyStroke$javax_swing_Action',  function (key, a) {
this.bindings.put$O$O(key, a);
});

Clazz_newMeth(C$, 'removeKeyStrokeBinding$javax_swing_KeyStroke',  function (key) {
this.bindings.remove$O(key);
});

Clazz_newMeth(C$, 'removeBindings$',  function () {
this.bindings.clear$();
});

Clazz_newMeth(C$, 'getResolveParent$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'setResolveParent$javax_swing_text_Keymap',  function (parent) {
this.parent=parent;
});

Clazz_newMeth(C$, 'toString',  function () {
return "Keymap[" + this.nm + "]" + this.bindings ;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "KeymapWrapper", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.InputMap');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['keymap','javax.swing.text.Keymap']]
,['O',['DefaultActionKey','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Keymap',  function (keymap) {
Clazz_super_(C$, this);
this.keymap=keymap;
}, 1);

Clazz_newMeth(C$, 'keys$',  function () {
var sKeys=C$.superclazz.prototype.keys$.apply(this, []);
var keymapKeys=this.keymap.getBoundKeyStrokes$();
var sCount=(sKeys == null ) ? 0 : sKeys.length;
var keymapCount=(keymapKeys == null ) ? 0 : keymapKeys.length;
if (sCount == 0) {
return keymapKeys;
}if (keymapCount == 0) {
return sKeys;
}var retValue=Clazz_array($I$(5), [sCount + keymapCount]);
System.arraycopy$O$I$O$I$I(sKeys, 0, retValue, 0, sCount);
System.arraycopy$O$I$O$I$I(keymapKeys, 0, retValue, sCount, keymapCount);
return retValue;
});

Clazz_newMeth(C$, 'size$',  function () {
var keymapStrokes=this.keymap.getBoundKeyStrokes$();
var keymapCount=(keymapStrokes == null ) ? 0 : keymapStrokes.length;
return C$.superclazz.prototype.size$.apply(this, []) + keymapCount;
});

Clazz_newMeth(C$, 'get$javax_swing_KeyStroke',  function (keyStroke) {
var retValue=this.keymap.getAction$javax_swing_KeyStroke(keyStroke);
if (retValue == null ) {
retValue=C$.superclazz.prototype.get$javax_swing_KeyStroke.apply(this, [keyStroke]);
if (retValue == null  && keyStroke.getKeyChar$() != "\uffff"  && this.keymap.getDefaultAction$() != null  ) {
retValue=C$.DefaultActionKey;
}}return retValue;
});

C$.$static$=function(){C$.$static$=0;
C$.DefaultActionKey= Clazz_new_();
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "KeymapActionMap", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.ActionMap');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['keymap','javax.swing.text.Keymap']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Keymap',  function (keymap) {
Clazz_super_(C$, this);
this.keymap=keymap;
}, 1);

Clazz_newMeth(C$, 'keys$',  function () {
var sKeys=C$.superclazz.prototype.keys$.apply(this, []);
var keymapKeys=this.keymap.getBoundActions$();
var sCount=(sKeys == null ) ? 0 : sKeys.length;
var keymapCount=(keymapKeys == null ) ? 0 : keymapKeys.length;
var hasDefault=(this.keymap.getDefaultAction$() != null );
if (hasDefault) {
++keymapCount;
}if (sCount == 0) {
if (hasDefault) {
var retValue=Clazz_array(java.lang.Object, [keymapCount]);
if (keymapCount > 1) {
System.arraycopy$O$I$O$I$I(keymapKeys, 0, retValue, 0, keymapCount - 1);
}retValue[keymapCount - 1]=$I$(8).DefaultActionKey;
return retValue;
}return keymapKeys;
}if (keymapCount == 0) {
return sKeys;
}var retValue=Clazz_array(java.lang.Object, [sCount + keymapCount]);
System.arraycopy$O$I$O$I$I(sKeys, 0, retValue, 0, sCount);
if (hasDefault) {
if (keymapCount > 1) {
System.arraycopy$O$I$O$I$I(keymapKeys, 0, retValue, sCount, keymapCount - 1);
}retValue[sCount + keymapCount - 1]=$I$(8).DefaultActionKey;
} else {
System.arraycopy$O$I$O$I$I(keymapKeys, 0, retValue, sCount, keymapCount);
}return retValue;
});

Clazz_newMeth(C$, 'size$',  function () {
var actions=this.keymap.getBoundActions$();
var keymapCount=(actions == null ) ? 0 : actions.length;
if (this.keymap.getDefaultAction$() != null ) {
++keymapCount;
}return C$.superclazz.prototype.size$.apply(this, []) + keymapCount;
});

Clazz_newMeth(C$, 'get$O',  function (key) {
var retValue=C$.superclazz.prototype.get$O.apply(this, [key]);
if (retValue == null ) {
if (key === $I$(8).DefaultActionKey ) {
retValue=this.keymap.getDefaultAction$();
} else if (Clazz_instanceOf(key, "javax.swing.Action")) {
retValue=key;
}}return retValue;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "MutableCaretEvent", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.event.CaretEvent', ['javax.swing.event.ChangeListener', 'java.awt.event.FocusListener', 'java.awt.event.MouseListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['dragActive'],'I',['dot','mark']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_JTextComponent',  function (c) {
;C$.superclazz.c$$O.apply(this,[c]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'fire$',  function () {
var c=this.getSource$();
if (c != null ) {
var caret=c.getCaret$();
if (caret != null ) {
this.dot=caret.getDot$();
this.mark=caret.getMark$();
c.fireCaretUpdate$javax_swing_event_CaretEvent(this);
}}});

Clazz_newMeth(C$, 'toString',  function () {
return "dot=" + this.dot + "," + "mark=" + this.mark ;
});

Clazz_newMeth(C$, 'getDot$',  function () {
return this.dot;
});

Clazz_newMeth(C$, 'getMark$',  function () {
return this.mark;
});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent',  function (e) {
if (!this.dragActive) {
this.fire$();
}});

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent',  function (fe) {
$I$(9).getAppContext$().put$O$O("JTextComponent_FocusedComponent", fe.getSource$());
});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent',  function (fe) {
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
this.dragActive=true;
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
this.dragActive=false;
this.fire$();
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent, "JSPlainDocument", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.text.Document');
C$.$classes$=[['DocEvent',0]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.myText=Clazz_new_($I$(10,1));
this.listenerList=Clazz_new_($I$(11,1));
this.achar=Clazz_array(Character.TYPE, [0]);
},1);

C$.$fields$=[['O',['myText','StringBuffer','listenerList','javax.swing.event.EventListenerList','achar','char[]']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getLength$',  function () {
return this.myText.length$();
});

Clazz_newMeth(C$, 'getText$I$I',  function (offset, length) {
return this.myText.substring$I$I(offset, offset + length);
});

Clazz_newMeth(C$, 'insertString$I$S$javax_swing_text_AttributeSet',  function (offset, str, a) {
if ((str == null ) || (str.length$() == 0) ) {
return;
}this.myText.insert$I$S(offset, str);
var e=Clazz_new_([this, null, offset, str.length$(), $I$(13).INSERT],$I$(12,1).c$$I$I$javax_swing_event_DocumentEvent_EventType);
p$2.fireInsertUpdate$javax_swing_event_DocumentEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'remove$I$I',  function (offs, len) {
if (len <= 0) return;
if (offs < 0 || (offs + len) > this.getLength$() ) {
throw Clazz_new_(Clazz_load('javax.swing.text.BadLocationException').c$$S$I,["Invalid remove", this.getLength$() + 1]);
}this.myText.replace$I$I$S(offs, len, "");
var chng=Clazz_new_([this, null, offs, len, $I$(13).REMOVE],$I$(12,1).c$$I$I$javax_swing_event_DocumentEvent_EventType);
p$2.fireRemoveUpdate$javax_swing_event_DocumentEvent.apply(this, [chng]);
});

Clazz_newMeth(C$, 'fireInsertUpdate$javax_swing_event_DocumentEvent',  function (e) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(14),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']) ) {
(listeners[i + 1]).insertUpdate$javax_swing_event_DocumentEvent(e);
}}
}, p$2);

Clazz_newMeth(C$, 'fireRemoveUpdate$javax_swing_event_DocumentEvent',  function (e) {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(14),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']) ) {
(listeners[i + 1]).removeUpdate$javax_swing_event_DocumentEvent(e);
}}
}, p$2);

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$, 'addDocumentListener$javax_swing_event_DocumentListener',  function (listener) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(14),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']), listener);
});

Clazz_newMeth(C$, 'removeDocumentListener$javax_swing_event_DocumentListener',  function (listener) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(14),['changedUpdate$javax_swing_event_DocumentEvent','insertUpdate$javax_swing_event_DocumentEvent','removeUpdate$javax_swing_event_DocumentEvent']), listener);
});

Clazz_newMeth(C$, 'getText$I$I$javax_swing_text_Segment',  function (offset, length, txt) {
return;
});

Clazz_newMeth(C$, 'getStartPosition$',  function () {
return null;
});

Clazz_newMeth(C$, 'getEndPosition$',  function () {
return null;
});

Clazz_newMeth(C$, 'createPosition$I',  function (offs) {
return null;
});

Clazz_newMeth(C$, 'getRootElements$',  function () {
return null;
});

Clazz_newMeth(C$, 'getDefaultRootElement$',  function () {
return null;
});

Clazz_newMeth(C$, 'getProperty$O',  function (key) {
return null;
});

Clazz_newMeth(C$, 'putProperty$O$O',  function (key, value) {
});

Clazz_newMeth(C$, 'render$Runnable',  function (r) {
});

Clazz_newMeth(C$, 'addUndoableEditListener$javax_swing_event_UndoableEditListener',  function (listener) {
});

Clazz_newMeth(C$, 'removeUndoableEditListener$javax_swing_event_UndoableEditListener',  function (listener) {
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JTextComponent.JSPlainDocument, "DocEvent", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.event.DocumentEvent');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['offset','length'],'O',['type','javax.swing.event.DocumentEvent.EventType']]]

Clazz_newMeth(C$, 'c$$I$I$javax_swing_event_DocumentEvent_EventType',  function (offset, length, type) {
;C$.$init$.apply(this);
this.type=type;
this.offset=offset;
this.length=length;
}, 1);

Clazz_newMeth(C$, 'getOffset$',  function () {
return this.offset;
});

Clazz_newMeth(C$, 'getLength$',  function () {
return this.length;
});

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.b$['javax.swing.text.JTextComponent.JSPlainDocument'];
});

Clazz_newMeth(C$, 'getType$',  function () {
return this.type;
});

Clazz_newMeth(C$, 'getChange$javax_swing_text_Element',  function (elem) {
return null;
});

Clazz_newMeth(C$);
})()
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "MutableAttributeSet", null, null, 'javax.swing.text.AttributeSet');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),p$1={},I$=[[0,'java.util.Vector','javax.swing.text.GapContent','StringBuffer','javax.swing.text.Element','javax.swing.text.Segment',['javax.swing.text.AbstractDocument','.ElementEdit'],'javax.swing.text.Utilities','Error',['javax.swing.text.AbstractDocument','.BranchElement']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PlainDocument", null, 'javax.swing.text.AbstractDocument');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.added=Clazz_new_($I$(1,1));
this.removed=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['O',['defaultRoot','javax.swing.text.AbstractDocument.AbstractElement','added','java.util.Vector','+removed','s','javax.swing.text.Segment']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$javax_swing_text_AbstractDocument_Content.apply(this, [Clazz_new_($I$(2,1))]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_text_AbstractDocument_Content',  function (c) {
;C$.superclazz.c$$javax_swing_text_AbstractDocument_Content.apply(this,[c]);C$.$init$.apply(this);
this.putProperty$O$O("tabSize",  new Integer(8));
this.defaultRoot=this.createDefaultRoot$();
}, 1);

Clazz_newMeth(C$, 'insertString$I$S$javax_swing_text_AttributeSet',  function (offs, str, a) {
var filterNewlines=this.getProperty$O("filterNewlines");
if ((Clazz_instanceOf(filterNewlines, "java.lang.Boolean")) && filterNewlines.equals$O(Boolean.TRUE) ) {
if ((str != null ) && (str.indexOf$I("\n") >= 0) ) {
var filtered=Clazz_new_($I$(3,1).c$$S,[str]);
var n=filtered.length$();
for (var i=0; i < n; i++) {
if (filtered.charAt$I(i) == "\n") {
filtered.setCharAt$I$C(i, " ");
}}
str=filtered.toString();
}}C$.superclazz.prototype.insertString$I$S$javax_swing_text_AttributeSet.apply(this, [offs, str, a]);
});

Clazz_newMeth(C$, 'getDefaultRootElement$',  function () {
return this.defaultRoot;
});

Clazz_newMeth(C$, 'createDefaultRoot$',  function () {
var map=this.createBranchElement$javax_swing_text_Element$javax_swing_text_AttributeSet(null, null);
var line=this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(map, null, 0, 1);
var lines=Clazz_array($I$(4), [1]);
lines[0]=line;
map.replace$I$I$javax_swing_text_ElementA(0, 0, lines);
return map;
});

Clazz_newMeth(C$, 'getParagraphElement$I',  function (pos) {
var lineMap=this.getDefaultRootElement$();
return lineMap.getElement$I(lineMap.getElementIndex$I(pos));
});

Clazz_newMeth(C$, 'insertUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent$javax_swing_text_AttributeSet',  function (chng, attr) {
this.removed.removeAllElements$();
this.added.removeAllElements$();
var lineMap=this.getDefaultRootElement$();
var offset=chng.getOffset$();
var length=chng.getLength$();
if (offset > 0) {
offset-=1;
length+=1;
}var index=lineMap.getElementIndex$I(offset);
var rmCandidate=lineMap.getElement$I(index);
var rmOffs0=rmCandidate.getStartOffset$();
var rmOffs1=rmCandidate.getEndOffset$();
var lastOffset=rmOffs0;
try {
if (this.s == null ) {
this.s=Clazz_new_($I$(5,1));
}this.getContent$().getChars$I$I$javax_swing_text_Segment(offset, length, this.s);
var hasBreaks=false;
for (var i=0; i < length; i++) {
var c=this.s.array[this.s.offset + i];
if (c == "\n") {
var breakOffset=offset + i + 1 ;
this.added.addElement$O(this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(lineMap, null, lastOffset, breakOffset));
lastOffset=breakOffset;
hasBreaks=true;
}}
if (hasBreaks) {
this.removed.addElement$O(rmCandidate);
if ((offset + length == rmOffs1) && (lastOffset != rmOffs1) && ((index + 1) < lineMap.getElementCount$())  ) {
var e=lineMap.getElement$I(index + 1);
this.removed.addElement$O(e);
rmOffs1=e.getEndOffset$();
}if (lastOffset < rmOffs1) {
this.added.addElement$O(this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(lineMap, null, lastOffset, rmOffs1));
}var aelems=Clazz_array($I$(4), [this.added.size$()]);
this.added.copyInto$OA(aelems);
var relems=Clazz_array($I$(4), [this.removed.size$()]);
this.removed.copyInto$OA(relems);
var ee=Clazz_new_($I$(6,1).c$$javax_swing_text_Element$I$javax_swing_text_ElementA$javax_swing_text_ElementA,[lineMap, index, relems, aelems]);
chng.addEdit$javax_swing_undo_UndoableEdit(ee);
lineMap.replace$I$I$javax_swing_text_ElementA(index, relems.length, aelems);
}if ($I$(7).isComposedTextAttributeDefined$javax_swing_text_AttributeSet(attr)) {
p$1.insertComposedTextUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent$javax_swing_text_AttributeSet.apply(this, [chng, attr]);
}} catch (e) {
if (Clazz_exceptionOf(e,"javax.swing.text.BadLocationException")){
throw Clazz_new_(["Internal error: " + e.toString()],$I$(8,1).c$$S);
} else {
throw e;
}
}
C$.superclazz.prototype.insertUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent$javax_swing_text_AttributeSet.apply(this, [chng, attr]);
});

Clazz_newMeth(C$, 'removeUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent',  function (chng) {
this.removed.removeAllElements$();
var map=this.getDefaultRootElement$();
var offset=chng.getOffset$();
var length=chng.getLength$();
var line0=map.getElementIndex$I(offset);
var line1=map.getElementIndex$I(offset + length);
if (line0 != line1) {
for (var i=line0; i <= line1; i++) {
this.removed.addElement$O(map.getElement$I(i));
}
var p0=map.getElement$I(line0).getStartOffset$();
var p1=map.getElement$I(line1).getEndOffset$();
var aelems=Clazz_array($I$(4), [1]);
aelems[0]=this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(map, null, p0, p1);
var relems=Clazz_array($I$(4), [this.removed.size$()]);
this.removed.copyInto$OA(relems);
var ee=Clazz_new_($I$(6,1).c$$javax_swing_text_Element$I$javax_swing_text_ElementA$javax_swing_text_ElementA,[map, line0, relems, aelems]);
chng.addEdit$javax_swing_undo_UndoableEdit(ee);
map.replace$I$I$javax_swing_text_ElementA(line0, relems.length, aelems);
} else {
var line=map.getElement$I(line0);
if (!line.isLeaf$()) {
var leaf=line.getElement$I(line.getElementIndex$I(offset));
if ($I$(7).isComposedTextElement$javax_swing_text_Element(leaf)) {
var aelem=Clazz_array($I$(4), [1]);
aelem[0]=this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(map, null, line.getStartOffset$(), line.getEndOffset$());
var relem=Clazz_array($I$(4), [1]);
relem[0]=line;
var ee=Clazz_new_($I$(6,1).c$$javax_swing_text_Element$I$javax_swing_text_ElementA$javax_swing_text_ElementA,[map, line0, relem, aelem]);
chng.addEdit$javax_swing_undo_UndoableEdit(ee);
map.replace$I$I$javax_swing_text_ElementA(line0, 1, aelem);
}}}C$.superclazz.prototype.removeUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent.apply(this, [chng]);
});

Clazz_newMeth(C$, 'insertComposedTextUpdate$javax_swing_text_AbstractDocument_DefaultDocumentEvent$javax_swing_text_AttributeSet',  function (chng, attr) {
this.added.removeAllElements$();
var lineMap=this.getDefaultRootElement$();
var offset=chng.getOffset$();
var length=chng.getLength$();
var index=lineMap.getElementIndex$I(offset);
var elem=lineMap.getElement$I(index);
var elemStart=elem.getStartOffset$();
var elemEnd=elem.getEndOffset$();
var abelem=Clazz_array($I$(9), [1]);
abelem[0]=this.createBranchElement$javax_swing_text_Element$javax_swing_text_AttributeSet(lineMap, null);
var relem=Clazz_array($I$(4), [1]);
relem[0]=elem;
if (elemStart != offset) this.added.addElement$O(this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(abelem[0], null, elemStart, offset));
this.added.addElement$O(this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(abelem[0], attr, offset, offset + length));
if (elemEnd != offset + length) this.added.addElement$O(this.createLeafElement$javax_swing_text_Element$javax_swing_text_AttributeSet$I$I(abelem[0], null, offset + length, elemEnd));
var alelem=Clazz_array($I$(4), [this.added.size$()]);
this.added.copyInto$OA(alelem);
var ee=Clazz_new_($I$(6,1).c$$javax_swing_text_Element$I$javax_swing_text_ElementA$javax_swing_text_ElementA,[lineMap, index, relem, abelem]);
chng.addEdit$javax_swing_undo_UndoableEdit(ee);
abelem[0].replace$I$I$javax_swing_text_ElementA(0, 0, alelem);
lineMap.replace$I$I$javax_swing_text_ElementA(index, 1, abelem);
}, p$1);

Clazz_newMeth(C$, 'render$Runnable',  function (r) {
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Position", function(){
});
C$.$classes$=[['Bias',25]];
;
(function(){/*c*/var C$=Clazz_newClass(P$.Position, "Bias", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['name']]
,['O',['Forward','javax.swing.text.Position.Bias','+Backward']]]

Clazz_newMeth(C$, 'toString',  function () {
return this.name;
});

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.$init$.apply(this);
this.name=name;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.Forward=Clazz_new_(C$.c$$S,["Forward"]);
C$.Backward=Clazz_new_(C$.c$$S,["Backward"]);
};

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "Segment", null, null, ['Cloneable', 'java.text.CharacterIterator', 'CharSequence']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['partialReturn'],'I',['offset','count','pos'],'O',['array','char[]']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$CA$I$I.apply(this, [null, 0, 0]);
}, 1);

Clazz_newMeth(C$, 'c$$CA$I$I',  function (array, offset, count) {
;C$.$init$.apply(this);
this.array=array;
this.offset=offset;
this.count=count;
this.partialReturn=false;
}, 1);

Clazz_newMeth(C$, 'setPartialReturn$Z',  function (p) {
this.partialReturn=p;
});

Clazz_newMeth(C$, 'isPartialReturn$',  function () {
return this.partialReturn;
});

Clazz_newMeth(C$, 'toString',  function () {
if (this.array != null ) {
return  String.instantialize(this.array, this.offset, this.count);
}return  String.instantialize();
});

Clazz_newMeth(C$, 'first$',  function () {
this.pos=this.offset;
if (this.count != 0) {
return this.array[this.pos];
}return "\uffff";
});

Clazz_newMeth(C$, 'last$',  function () {
this.pos=this.offset + this.count;
if (this.count != 0) {
this.pos-=1;
return this.array[this.pos];
}return "\uffff";
});

Clazz_newMeth(C$, 'current$',  function () {
if (this.count != 0 && this.pos < this.offset + this.count ) {
return this.array[this.pos];
}return "\uffff";
});

Clazz_newMeth(C$, 'next$',  function () {
this.pos+=1;
var end=this.offset + this.count;
if (this.pos >= end) {
this.pos=end;
return "\uffff";
}return this.current$();
});

Clazz_newMeth(C$, 'previous$',  function () {
if (this.pos == this.offset) {
return "\uffff";
}this.pos-=1;
return this.current$();
});

Clazz_newMeth(C$, 'setIndex$I',  function (position) {
var end=this.offset + this.count;
if ((position < this.offset) || (position > end) ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["bad position: " + position]);
}this.pos=position;
if ((this.pos != end) && (this.count != 0) ) {
return this.array[this.pos];
}return "\uffff";
});

Clazz_newMeth(C$, 'getBeginIndex$',  function () {
return this.offset;
});

Clazz_newMeth(C$, 'getEndIndex$',  function () {
return this.offset + this.count;
});

Clazz_newMeth(C$, 'getIndex$',  function () {
return this.pos;
});

Clazz_newMeth(C$, 'charAt$I',  function (index) {
if (index < 0 || index >= this.count ) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[index]);
}return this.array[this.offset + index];
});

Clazz_newMeth(C$, 'length$',  function () {
return this.count;
});

Clazz_newMeth(C$, 'subSequence$I$I',  function (start, end) {
if (start < 0) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[start]);
}if (end > this.count) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[end]);
}if (start > end) {
throw Clazz_new_(Clazz_load('StringIndexOutOfBoundsException').c$$I,[end - start]);
}var segment=Clazz_new_(C$);
segment.array=this.array;
segment.offset=this.offset + start;
segment.count=end - start;
return segment;
});

Clazz_newMeth(C$, 'clone$',  function () {
var o;
try {
o=Clazz_clone(this);
} catch (cnse) {
if (Clazz_exceptionOf(cnse,"CloneNotSupportedException")){
o=null;
} else {
throw cnse;
}
}
return o;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,'javajs.util.Lst',['javax.swing.text.SegmentCache','.CachedSegment']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SegmentCache", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['CachedSegment',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['segments','javajs.util.Lst']]
,['O',['sharedCache','javax.swing.text.SegmentCache']]]

Clazz_newMeth(C$, 'getSharedInstance$',  function () {
if (C$.sharedCache == null ) C$.sharedCache=Clazz_new_(C$);
return C$.sharedCache;
}, 1);

Clazz_newMeth(C$, 'getSharedSegment$',  function () {
return C$.getSharedInstance$().getSegment$();
}, 1);

Clazz_newMeth(C$, 'releaseSharedSegment$javax_swing_text_Segment',  function (segment) {
C$.getSharedInstance$().releaseSegment$javax_swing_text_Segment(segment);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.segments=Clazz_new_($I$(1,1));
}, 1);

Clazz_newMeth(C$, 'getSegment$',  function () {
{
var size=this.segments.size$();
if (size > 0) {
return this.segments.removeItemAt$I(size - 1);
}}return Clazz_new_($I$(2,1));
});

Clazz_newMeth(C$, 'releaseSegment$javax_swing_text_Segment',  function (segment) {
if (Clazz_instanceOf(segment, "javax.swing.text.SegmentCache.CachedSegment")) {
{
segment.array=null;
segment.count=0;
this.segments.add$O(segment);
}}});
;
(function(){/*c*/var C$=Clazz_newClass(P$.SegmentCache, "CachedSegment", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.Segment');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,['javax.swing.text.SimpleAttributeSet','.EmptyAttributeSet'],'java.util.Hashtable','javax.swing.text.StyleConstants']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SimpleAttributeSet", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['javax.swing.text.MutableAttributeSet', 'Cloneable']);
C$.$classes$=[['EmptyAttributeSet',8]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.table=Clazz_new_($I$(2,1).c$$I,[3]);
},1);

C$.$fields$=[['O',['table','java.util.Hashtable']]
,['O',['EMPTY','javax.swing.text.AttributeSet']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_text_AttributeSet',  function (source) {
;C$.$init$.apply(this);
this.addAttributes$javax_swing_text_AttributeSet(source);
}, 1);

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.table.isEmpty$();
});

Clazz_newMeth(C$, 'getAttributeCount$',  function () {
return this.table.size$();
});

Clazz_newMeth(C$, 'isDefined$O',  function (attrName) {
return this.table.containsKey$O(attrName);
});

Clazz_newMeth(C$, 'isEqual$javax_swing_text_AttributeSet',  function (attr) {
return ((this.getAttributeCount$() == attr.getAttributeCount$()) && this.containsAttributes$javax_swing_text_AttributeSet(attr) );
});

Clazz_newMeth(C$, 'copyAttributes$',  function () {
return this.clone$();
});

Clazz_newMeth(C$, 'getAttributeNames$',  function () {
return this.table.keys$();
});

Clazz_newMeth(C$, 'getAttribute$O',  function (name) {
var value=this.table.get$O(name);
if (value == null ) {
var parent=this.getResolveParent$();
if (parent != null ) {
value=parent.getAttribute$O(name);
}}return value;
});

Clazz_newMeth(C$, 'containsAttribute$O$O',  function (name, value) {
return value.equals$O(this.getAttribute$O(name));
});

Clazz_newMeth(C$, 'containsAttributes$javax_swing_text_AttributeSet',  function (attributes) {
var result=true;
var names=attributes.getAttributeNames$();
while (result && names.hasMoreElements$() ){
var name=names.nextElement$();
result=attributes.getAttribute$O(name).equals$O(this.getAttribute$O(name));
}
return result;
});

Clazz_newMeth(C$, 'addAttribute$O$O',  function (name, value) {
this.table.put$O$O(name, value);
});

Clazz_newMeth(C$, 'addAttributes$javax_swing_text_AttributeSet',  function (attributes) {
var names=attributes.getAttributeNames$();
while (names.hasMoreElements$()){
var name=names.nextElement$();
this.addAttribute$O$O(name, attributes.getAttribute$O(name));
}
});

Clazz_newMeth(C$, 'removeAttribute$O',  function (name) {
this.table.remove$O(name);
});

Clazz_newMeth(C$, 'removeAttributes$java_util_Enumeration',  function (names) {
while (names.hasMoreElements$())this.removeAttribute$O(names.nextElement$());

});

Clazz_newMeth(C$, 'removeAttributes$javax_swing_text_AttributeSet',  function (attributes) {
if (attributes === this ) {
this.table.clear$();
} else {
var names=attributes.getAttributeNames$();
while (names.hasMoreElements$()){
var name=names.nextElement$();
var value=attributes.getAttribute$O(name);
if (value.equals$O(this.getAttribute$O(name))) this.removeAttribute$O(name);
}
}});

Clazz_newMeth(C$, 'getResolveParent$',  function () {
return this.table.get$O($I$(3).ResolveAttribute);
});

Clazz_newMeth(C$, 'setResolveParent$javax_swing_text_AttributeSet',  function (parent) {
this.addAttribute$O$O($I$(3).ResolveAttribute, parent);
});

Clazz_newMeth(C$, 'clone$',  function () {
var attr;
try {
attr=Clazz_clone(this);
attr.table=this.table.clone$();
} catch (cnse) {
if (Clazz_exceptionOf(cnse,"CloneNotSupportedException")){
attr=null;
} else {
throw cnse;
}
}
return attr;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.table.hashCode$();
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) {
return true;
}if (Clazz_instanceOf(obj, "javax.swing.text.AttributeSet")) {
var attrs=obj;
return this.isEqual$javax_swing_text_AttributeSet(attrs);
}return false;
});

Clazz_newMeth(C$, 'toString',  function () {
var s="";
var names=this.getAttributeNames$();
while (names.hasMoreElements$()){
var key=names.nextElement$();
var value=this.getAttribute$O(key);
if (Clazz_instanceOf(value, "javax.swing.text.AttributeSet")) {
s=s + key + "=**AttributeSet** " ;
} else {
s=s + key + "=" + value + " " ;
}}
return s;
});

C$.$static$=function(){C$.$static$=0;
C$.EMPTY=Clazz_new_($I$(1,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.SimpleAttributeSet, "EmptyAttributeSet", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'javax.swing.text.AttributeSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getAttributeCount$',  function () {
return 0;
});

Clazz_newMeth(C$, 'isDefined$O',  function (attrName) {
return false;
});

Clazz_newMeth(C$, 'isEqual$javax_swing_text_AttributeSet',  function (attr) {
return (attr.getAttributeCount$() == 0);
});

Clazz_newMeth(C$, 'copyAttributes$',  function () {
return this;
});

Clazz_newMeth(C$, 'getAttribute$O',  function (key) {
return null;
});

Clazz_newMeth(C$, 'getAttributeNames$',  function () {
return ((P$.SimpleAttributeSet$EmptyAttributeSet$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "SimpleAttributeSet$EmptyAttributeSet$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return false;
});

Clazz_newMeth(C$, 'nextElement$',  function () {
throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});
})()
), Clazz_new_(P$.SimpleAttributeSet$EmptyAttributeSet$1.$init$,[this, null]));
});

Clazz_newMeth(C$, 'containsAttribute$O$O',  function (name, value) {
return false;
});

Clazz_newMeth(C$, 'containsAttributes$javax_swing_text_AttributeSet',  function (attributes) {
return (attributes.getAttributeCount$() == 0);
});

Clazz_newMeth(C$, 'getResolveParent$',  function () {
return null;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) {
return true;
}return ((Clazz_instanceOf(obj, "javax.swing.text.AttributeSet")) && ((obj).getAttributeCount$() == 0) );
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return 0;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Style", null, null, 'javax.swing.text.MutableAttributeSet');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,['javax.swing.text.StyleConstants','.CharacterConstants'],['javax.swing.text.StyleConstants','.FontConstants'],['javax.swing.text.StyleConstants','.ColorConstants'],['javax.swing.text.StyleConstants','.ParagraphConstants'],'java.awt.Color']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "StyleConstants", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['ParagraphConstants',9],['CharacterConstants',9],['ColorConstants',9],['FontConstants',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['representation']]
,['O',['NameAttribute','java.lang.Object','+ResolveAttribute','+ModelAttribute','+BidiLevel','+FontFamily','+Family','+FontSize','+Size','+Bold','+Italic','+Underline','+StrikeThrough','+Superscript','+Subscript','+Foreground','+Background','+ComponentAttribute','+IconAttribute','+ComposedTextAttribute','+FirstLineIndent','+LeftIndent','+RightIndent','+LineSpacing','+SpaceAbove','+SpaceBelow','+Alignment','+TabSet','+Orientation','keys','Object[]']]]

Clazz_newMeth(C$, 'toString',  function () {
return this.representation;
});

Clazz_newMeth(C$, 'getBidiLevel$javax_swing_text_AttributeSet',  function (a) {
var o=a.getAttribute$O(C$.BidiLevel);
if (o != null ) {
return o.intValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setBidiLevel$javax_swing_text_MutableAttributeSet$I',  function (a, o) {
a.addAttribute$O$O(C$.BidiLevel,  new Integer(o));
}, 1);

Clazz_newMeth(C$, 'getComponent$javax_swing_text_AttributeSet',  function (a) {
return a.getAttribute$O(C$.ComponentAttribute);
}, 1);

Clazz_newMeth(C$, 'setComponent$javax_swing_text_MutableAttributeSet$java_awt_Component',  function (a, c) {
a.addAttribute$O$O("$ename", "component");
a.addAttribute$O$O(C$.ComponentAttribute, c);
}, 1);

Clazz_newMeth(C$, 'getIcon$javax_swing_text_AttributeSet',  function (a) {
return a.getAttribute$O(C$.IconAttribute);
}, 1);

Clazz_newMeth(C$, 'setIcon$javax_swing_text_MutableAttributeSet$javax_swing_Icon',  function (a, c) {
a.addAttribute$O$O("$ename", "icon");
a.addAttribute$O$O(C$.IconAttribute, c);
}, 1);

Clazz_newMeth(C$, 'getFontFamily$javax_swing_text_AttributeSet',  function (a) {
var family=a.getAttribute$O(C$.FontFamily);
if (family == null ) {
family="Monospaced";
}return family;
}, 1);

Clazz_newMeth(C$, 'setFontFamily$javax_swing_text_MutableAttributeSet$S',  function (a, fam) {
a.addAttribute$O$O(C$.FontFamily, fam);
}, 1);

Clazz_newMeth(C$, 'getFontSize$javax_swing_text_AttributeSet',  function (a) {
var size=a.getAttribute$O(C$.FontSize);
if (size != null ) {
return size.intValue$();
}return 12;
}, 1);

Clazz_newMeth(C$, 'setFontSize$javax_swing_text_MutableAttributeSet$I',  function (a, s) {
a.addAttribute$O$O(C$.FontSize,  new Integer(s));
}, 1);

Clazz_newMeth(C$, 'isBold$javax_swing_text_AttributeSet',  function (a) {
var bold=a.getAttribute$O(C$.Bold);
if (bold != null ) {
return bold.booleanValue$();
}return false;
}, 1);

Clazz_newMeth(C$, 'setBold$javax_swing_text_MutableAttributeSet$Z',  function (a, b) {
a.addAttribute$O$O(C$.Bold, Boolean.valueOf$Z(b));
}, 1);

Clazz_newMeth(C$, 'isItalic$javax_swing_text_AttributeSet',  function (a) {
var italic=a.getAttribute$O(C$.Italic);
if (italic != null ) {
return italic.booleanValue$();
}return false;
}, 1);

Clazz_newMeth(C$, 'setItalic$javax_swing_text_MutableAttributeSet$Z',  function (a, b) {
a.addAttribute$O$O(C$.Italic, Boolean.valueOf$Z(b));
}, 1);

Clazz_newMeth(C$, 'isUnderline$javax_swing_text_AttributeSet',  function (a) {
var underline=a.getAttribute$O(C$.Underline);
if (underline != null ) {
return underline.booleanValue$();
}return false;
}, 1);

Clazz_newMeth(C$, 'isStrikeThrough$javax_swing_text_AttributeSet',  function (a) {
var strike=a.getAttribute$O(C$.StrikeThrough);
if (strike != null ) {
return strike.booleanValue$();
}return false;
}, 1);

Clazz_newMeth(C$, 'isSuperscript$javax_swing_text_AttributeSet',  function (a) {
var superscript=a.getAttribute$O(C$.Superscript);
if (superscript != null ) {
return superscript.booleanValue$();
}return false;
}, 1);

Clazz_newMeth(C$, 'isSubscript$javax_swing_text_AttributeSet',  function (a) {
var subscript=a.getAttribute$O(C$.Subscript);
if (subscript != null ) {
return subscript.booleanValue$();
}return false;
}, 1);

Clazz_newMeth(C$, 'setUnderline$javax_swing_text_MutableAttributeSet$Z',  function (a, b) {
a.addAttribute$O$O(C$.Underline, Boolean.valueOf$Z(b));
}, 1);

Clazz_newMeth(C$, 'setStrikeThrough$javax_swing_text_MutableAttributeSet$Z',  function (a, b) {
a.addAttribute$O$O(C$.StrikeThrough, Boolean.valueOf$Z(b));
}, 1);

Clazz_newMeth(C$, 'setSuperscript$javax_swing_text_MutableAttributeSet$Z',  function (a, b) {
a.addAttribute$O$O(C$.Superscript, Boolean.valueOf$Z(b));
}, 1);

Clazz_newMeth(C$, 'setSubscript$javax_swing_text_MutableAttributeSet$Z',  function (a, b) {
a.addAttribute$O$O(C$.Subscript, Boolean.valueOf$Z(b));
}, 1);

Clazz_newMeth(C$, 'getForeground$javax_swing_text_AttributeSet',  function (a) {
var fg=a.getAttribute$O(C$.Foreground);
if (fg == null ) {
fg=$I$(5).none;
}return fg;
}, 1);

Clazz_newMeth(C$, 'setForeground$javax_swing_text_MutableAttributeSet$java_awt_Color',  function (a, fg) {
a.addAttribute$O$O(C$.Foreground, fg);
}, 1);

Clazz_newMeth(C$, 'getBackground$javax_swing_text_AttributeSet',  function (a) {
var fg=a.getAttribute$O(C$.Background);
if (fg == null ) {
fg=$I$(5).none;
}return fg;
}, 1);

Clazz_newMeth(C$, 'setBackground$javax_swing_text_MutableAttributeSet$java_awt_Color',  function (a, fg) {
a.addAttribute$O$O(C$.Background, fg);
}, 1);

Clazz_newMeth(C$, 'getFirstLineIndent$javax_swing_text_AttributeSet',  function (a) {
var indent=a.getAttribute$O(C$.FirstLineIndent);
if (indent != null ) {
return indent.floatValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setFirstLineIndent$javax_swing_text_MutableAttributeSet$F',  function (a, i) {
a.addAttribute$O$O(C$.FirstLineIndent,  new Float(i));
}, 1);

Clazz_newMeth(C$, 'getRightIndent$javax_swing_text_AttributeSet',  function (a) {
var indent=a.getAttribute$O(C$.RightIndent);
if (indent != null ) {
return indent.floatValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setRightIndent$javax_swing_text_MutableAttributeSet$F',  function (a, i) {
a.addAttribute$O$O(C$.RightIndent,  new Float(i));
}, 1);

Clazz_newMeth(C$, 'getLeftIndent$javax_swing_text_AttributeSet',  function (a) {
var indent=a.getAttribute$O(C$.LeftIndent);
if (indent != null ) {
return indent.floatValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setLeftIndent$javax_swing_text_MutableAttributeSet$F',  function (a, i) {
a.addAttribute$O$O(C$.LeftIndent,  new Float(i));
}, 1);

Clazz_newMeth(C$, 'getLineSpacing$javax_swing_text_AttributeSet',  function (a) {
var space=a.getAttribute$O(C$.LineSpacing);
if (space != null ) {
return space.floatValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setLineSpacing$javax_swing_text_MutableAttributeSet$F',  function (a, i) {
a.addAttribute$O$O(C$.LineSpacing,  new Float(i));
}, 1);

Clazz_newMeth(C$, 'getSpaceAbove$javax_swing_text_AttributeSet',  function (a) {
var space=a.getAttribute$O(C$.SpaceAbove);
if (space != null ) {
return space.floatValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setSpaceAbove$javax_swing_text_MutableAttributeSet$F',  function (a, i) {
a.addAttribute$O$O(C$.SpaceAbove,  new Float(i));
}, 1);

Clazz_newMeth(C$, 'getSpaceBelow$javax_swing_text_AttributeSet',  function (a) {
var space=a.getAttribute$O(C$.SpaceBelow);
if (space != null ) {
return space.floatValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setSpaceBelow$javax_swing_text_MutableAttributeSet$F',  function (a, i) {
a.addAttribute$O$O(C$.SpaceBelow,  new Float(i));
}, 1);

Clazz_newMeth(C$, 'getAlignment$javax_swing_text_AttributeSet',  function (a) {
var align=a.getAttribute$O(C$.Alignment);
if (align != null ) {
return align.intValue$();
}return 0;
}, 1);

Clazz_newMeth(C$, 'setAlignment$javax_swing_text_MutableAttributeSet$I',  function (a, align) {
a.addAttribute$O$O(C$.Alignment,  new Integer(align));
}, 1);

Clazz_newMeth(C$, 'getTabSet$javax_swing_text_AttributeSet',  function (a) {
var tabs=a.getAttribute$O(C$.TabSet);
return tabs;
}, 1);

Clazz_newMeth(C$, 'setTabSet$javax_swing_text_MutableAttributeSet$javax_swing_text_TabSet',  function (a, tabs) {
a.addAttribute$O$O(C$.TabSet, tabs);
}, 1);

Clazz_newMeth(C$, 'c$$S',  function (representation) {
;C$.$init$.apply(this);
this.representation=representation;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.NameAttribute=Clazz_new_(C$.c$$S,["name"]);
C$.ResolveAttribute=Clazz_new_(C$.c$$S,["resolver"]);
C$.ModelAttribute=Clazz_new_(C$.c$$S,["model"]);
C$.BidiLevel=Clazz_new_($I$(1,1).c$$S,["bidiLevel"]);
C$.FontFamily=Clazz_new_($I$(2,1).c$$S,["family"]);
C$.Family=C$.FontFamily;
C$.FontSize=Clazz_new_($I$(2,1).c$$S,["size"]);
C$.Size=C$.FontSize;
C$.Bold=Clazz_new_($I$(2,1).c$$S,["bold"]);
C$.Italic=Clazz_new_($I$(2,1).c$$S,["italic"]);
C$.Underline=Clazz_new_($I$(1,1).c$$S,["underline"]);
C$.StrikeThrough=Clazz_new_($I$(1,1).c$$S,["strikethrough"]);
C$.Superscript=Clazz_new_($I$(1,1).c$$S,["superscript"]);
C$.Subscript=Clazz_new_($I$(1,1).c$$S,["subscript"]);
C$.Foreground=Clazz_new_($I$(3,1).c$$S,["foreground"]);
C$.Background=Clazz_new_($I$(3,1).c$$S,["background"]);
C$.ComponentAttribute=Clazz_new_($I$(1,1).c$$S,["component"]);
C$.IconAttribute=Clazz_new_($I$(1,1).c$$S,["icon"]);
C$.ComposedTextAttribute=Clazz_new_(C$.c$$S,["composed text"]);
C$.FirstLineIndent=Clazz_new_($I$(4,1).c$$S,["FirstLineIndent"]);
C$.LeftIndent=Clazz_new_($I$(4,1).c$$S,["LeftIndent"]);
C$.RightIndent=Clazz_new_($I$(4,1).c$$S,["RightIndent"]);
C$.LineSpacing=Clazz_new_($I$(4,1).c$$S,["LineSpacing"]);
C$.SpaceAbove=Clazz_new_($I$(4,1).c$$S,["SpaceAbove"]);
C$.SpaceBelow=Clazz_new_($I$(4,1).c$$S,["SpaceBelow"]);
C$.Alignment=Clazz_new_($I$(4,1).c$$S,["Alignment"]);
C$.TabSet=Clazz_new_($I$(4,1).c$$S,["TabSet"]);
C$.Orientation=Clazz_new_($I$(4,1).c$$S,["Orientation"]);
C$.keys=Clazz_array(java.lang.Object, -1, [C$.NameAttribute, C$.ResolveAttribute, C$.BidiLevel, C$.FontFamily, C$.FontSize, C$.Bold, C$.Italic, C$.Underline, C$.StrikeThrough, C$.Superscript, C$.Subscript, C$.Foreground, C$.Background, C$.ComponentAttribute, C$.IconAttribute, C$.FirstLineIndent, C$.LeftIndent, C$.RightIndent, C$.LineSpacing, C$.SpaceAbove, C$.SpaceBelow, C$.Alignment, C$.TabSet, C$.Orientation, C$.ModelAttribute, C$.ComposedTextAttribute]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleConstants, "ParagraphConstants", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.StyleConstants', [['javax.swing.text.AttributeSet','javax.swing.text.AttributeSet.ParagraphAttribute']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (representation) {
;C$.superclazz.c$$S.apply(this,[representation]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleConstants, "CharacterConstants", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.StyleConstants', [['javax.swing.text.AttributeSet','javax.swing.text.AttributeSet.CharacterAttribute']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (representation) {
;C$.superclazz.c$$S.apply(this,[representation]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleConstants, "ColorConstants", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.StyleConstants', [['javax.swing.text.AttributeSet','javax.swing.text.AttributeSet.ColorAttribute'], ['javax.swing.text.AttributeSet','javax.swing.text.AttributeSet.CharacterAttribute']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (representation) {
;C$.superclazz.c$$S.apply(this,[representation]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleConstants, "FontConstants", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.text.StyleConstants', [['javax.swing.text.AttributeSet','javax.swing.text.AttributeSet.FontAttribute'], ['javax.swing.text.AttributeSet','javax.swing.text.AttributeSet.CharacterAttribute']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (representation) {
;C$.superclazz.c$$S.apply(this,[representation]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:13 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),p$1={},p$2={},I$=[[0,'javax.swing.text.StyleConstants',['javax.swing.text.StyleContext','.KeyEnumeration'],'java.util.Vector','javax.swing.event.EventListenerList','javax.swing.event.ChangeListener','javax.swing.event.ChangeEvent',['javax.swing.text.StyleContext','.FontKey'],'java.util.Hashtable','java.util.Collections','java.util.HashMap','javax.swing.text.SimpleAttributeSet',['javax.swing.text.StyleContext','.NamedStyle'],'java.awt.Font','javax.swing.SwingUtilities',['javax.swing.text.StyleContext','.SmallAttributeSet']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "StyleContext", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, [['javax.swing.text.AbstractDocument','javax.swing.text.AbstractDocument.AttributeContext']]);
C$.$classes$=[['SmallAttributeSet',1],['KeyEnumeration',0],['KeyBuilder',0],['FontKey',8],['NamedStyle',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.fontSearch=Clazz_new_($I$(7,1).c$$S$I$I,[null, 0, 0]);
this.fontTable=Clazz_new_($I$(8,1));
this.attributesPool=$I$(9,"synchronizedMap$java_util_Map",[Clazz_new_($I$(10,1))]);
this.search=Clazz_new_($I$(11,1));
},1);

C$.$fields$=[['O',['styles','javax.swing.text.Style','fontSearch','javax.swing.text.StyleContext.FontKey','fontTable','java.util.Hashtable','attributesPool','java.util.Map','search','javax.swing.text.MutableAttributeSet']]
,['O',['defaultContext','javax.swing.text.StyleContext','freezeKeyMap','java.util.Hashtable','+thawKeyMap']]]

Clazz_newMeth(C$, 'getDefaultStyleContext$',  function () {
if (C$.defaultContext == null ) {
C$.defaultContext=Clazz_new_(C$);
}return C$.defaultContext;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.styles=Clazz_new_($I$(12,1).c$$javax_swing_text_Style,[this, null, null]);
this.addStyle$S$javax_swing_text_Style("default", null);
}, 1);

Clazz_newMeth(C$, 'addStyle$S$javax_swing_text_Style',  function (nm, parent) {
var style=Clazz_new_($I$(12,1).c$$S$javax_swing_text_Style,[this, null, nm, parent]);
if (nm != null ) {
this.styles.addAttribute$O$O(nm, style);
}return style;
});

Clazz_newMeth(C$, 'removeStyle$S',  function (nm) {
this.styles.removeAttribute$O(nm);
});

Clazz_newMeth(C$, 'getStyle$S',  function (nm) {
return this.styles.getAttribute$O(nm);
});

Clazz_newMeth(C$, 'getStyleNames$',  function () {
return this.styles.getAttributeNames$();
});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener',  function (l) {
this.styles.addChangeListener$javax_swing_event_ChangeListener(l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener',  function (l) {
this.styles.removeChangeListener$javax_swing_event_ChangeListener(l);
});

Clazz_newMeth(C$, 'getChangeListeners$',  function () {
return (this.styles).getChangeListeners$();
});

Clazz_newMeth(C$, 'getFont$javax_swing_text_AttributeSet',  function (attr) {
var style=0;
if ($I$(1).isBold$javax_swing_text_AttributeSet(attr)) {
style|=1;
}if ($I$(1).isItalic$javax_swing_text_AttributeSet(attr)) {
style|=2;
}var family=$I$(1).getFontFamily$javax_swing_text_AttributeSet(attr);
var size=$I$(1).getFontSize$javax_swing_text_AttributeSet(attr);
if ($I$(1).isSuperscript$javax_swing_text_AttributeSet(attr) || $I$(1).isSubscript$javax_swing_text_AttributeSet(attr) ) {
size-=2;
}return this.getFont$S$I$I(family, style, size);
});

Clazz_newMeth(C$, 'getForeground$javax_swing_text_AttributeSet',  function (attr) {
return $I$(1).getForeground$javax_swing_text_AttributeSet(attr);
});

Clazz_newMeth(C$, 'getBackground$javax_swing_text_AttributeSet',  function (attr) {
return $I$(1).getBackground$javax_swing_text_AttributeSet(attr);
});

Clazz_newMeth(C$, 'getFont$S$I$I',  function (family, style, size) {
this.fontSearch.setValue$S$I$I(family, style, size);
var f=this.fontTable.get$O(this.fontSearch);
if (f == null ) {
var defaultStyle=this.getStyle$S("default");
if (defaultStyle != null ) {
var FONT_ATTRIBUTE_KEY="FONT_ATTRIBUTE_KEY";
var defaultFont=defaultStyle.getAttribute$O("FONT_ATTRIBUTE_KEY");
if (defaultFont != null  && defaultFont.getFamily$().equalsIgnoreCase$S(family) ) {
f=defaultFont.deriveFont$I$F(style, size);
}}if (f == null ) {
f=Clazz_new_($I$(13,1).c$$S$I$I,[family, style, size]);
}var key=Clazz_new_($I$(7,1).c$$S$I$I,[family, style, size]);
this.fontTable.put$O$O(key, f);
}return f;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (f) {
return f.getFontMetrics$();
});

Clazz_newMeth(C$, 'addAttribute$javax_swing_text_AttributeSet$O$O',  function (old, name, value) {
if ((old.getAttributeCount$() + 1) <= this.getCompressionThreshold$()) {
this.search.removeAttributes$javax_swing_text_AttributeSet(this.search);
this.search.addAttributes$javax_swing_text_AttributeSet(old);
this.search.addAttribute$O$O(name, value);
this.reclaim$javax_swing_text_AttributeSet(old);
return this.getImmutableUniqueSet$();
}var ma=this.getMutableAttributeSet$javax_swing_text_AttributeSet(old);
ma.addAttribute$O$O(name, value);
return ma;
});

Clazz_newMeth(C$, 'addAttributes$javax_swing_text_AttributeSet$javax_swing_text_AttributeSet',  function (old, attr) {
if ((old.getAttributeCount$() + attr.getAttributeCount$()) <= this.getCompressionThreshold$()) {
this.search.removeAttributes$javax_swing_text_AttributeSet(this.search);
this.search.addAttributes$javax_swing_text_AttributeSet(old);
this.search.addAttributes$javax_swing_text_AttributeSet(attr);
this.reclaim$javax_swing_text_AttributeSet(old);
return this.getImmutableUniqueSet$();
}var ma=this.getMutableAttributeSet$javax_swing_text_AttributeSet(old);
ma.addAttributes$javax_swing_text_AttributeSet(attr);
return ma;
});

Clazz_newMeth(C$, 'removeAttribute$javax_swing_text_AttributeSet$O',  function (old, name) {
if ((old.getAttributeCount$() - 1) <= this.getCompressionThreshold$()) {
this.search.removeAttributes$javax_swing_text_AttributeSet(this.search);
this.search.addAttributes$javax_swing_text_AttributeSet(old);
this.search.removeAttribute$O(name);
this.reclaim$javax_swing_text_AttributeSet(old);
return this.getImmutableUniqueSet$();
}var ma=this.getMutableAttributeSet$javax_swing_text_AttributeSet(old);
ma.removeAttribute$O(name);
return ma;
});

Clazz_newMeth(C$, 'removeAttributes$javax_swing_text_AttributeSet$java_util_Enumeration',  function (old, names) {
if (old.getAttributeCount$() <= this.getCompressionThreshold$()) {
this.search.removeAttributes$javax_swing_text_AttributeSet(this.search);
this.search.addAttributes$javax_swing_text_AttributeSet(old);
this.search.removeAttributes$java_util_Enumeration(names);
this.reclaim$javax_swing_text_AttributeSet(old);
return this.getImmutableUniqueSet$();
}var ma=this.getMutableAttributeSet$javax_swing_text_AttributeSet(old);
ma.removeAttributes$java_util_Enumeration(names);
return ma;
});

Clazz_newMeth(C$, 'removeAttributes$javax_swing_text_AttributeSet$javax_swing_text_AttributeSet',  function (old, attrs) {
if (old.getAttributeCount$() <= this.getCompressionThreshold$()) {
this.search.removeAttributes$javax_swing_text_AttributeSet(this.search);
this.search.addAttributes$javax_swing_text_AttributeSet(old);
this.search.removeAttributes$javax_swing_text_AttributeSet(attrs);
this.reclaim$javax_swing_text_AttributeSet(old);
return this.getImmutableUniqueSet$();
}var ma=this.getMutableAttributeSet$javax_swing_text_AttributeSet(old);
ma.removeAttributes$javax_swing_text_AttributeSet(attrs);
return ma;
});

Clazz_newMeth(C$, 'getEmptySet$',  function () {
return $I$(11).EMPTY;
});

Clazz_newMeth(C$, 'reclaim$javax_swing_text_AttributeSet',  function (a) {
if ($I$(14).isEventDispatchThread$()) {
this.attributesPool.size$();
}});

Clazz_newMeth(C$, 'getCompressionThreshold$',  function () {
return 9;
});

Clazz_newMeth(C$, 'createSmallAttributeSet$javax_swing_text_AttributeSet',  function (a) {
return Clazz_new_($I$(15,1).c$$javax_swing_text_AttributeSet,[this, null, a]);
});

Clazz_newMeth(C$, 'createLargeAttributeSet$javax_swing_text_AttributeSet',  function (a) {
return Clazz_new_($I$(11,1).c$$javax_swing_text_AttributeSet,[a]);
});

Clazz_newMeth(C$, 'removeUnusedSets$',  function () {
this.attributesPool.size$();
});

Clazz_newMeth(C$, 'getImmutableUniqueSet$',  function () {
var key=this.createSmallAttributeSet$javax_swing_text_AttributeSet(this.search);
return key;
});

Clazz_newMeth(C$, 'getMutableAttributeSet$javax_swing_text_AttributeSet',  function (a) {
if (Clazz_instanceOf(a, "javax.swing.text.MutableAttributeSet") && a !== $I$(11).EMPTY  ) {
return a;
}return this.createLargeAttributeSet$javax_swing_text_AttributeSet(a);
});

Clazz_newMeth(C$, 'toString',  function () {
this.removeUnusedSets$();
var s="";
var iterator=this.attributesPool.keySet$().iterator$();
while (iterator.hasNext$()){
var set=iterator.next$();
s=s + set + "\n" ;
}
return s;
});

Clazz_newMeth(C$, 'registerStaticAttributeKey$O',  function (key) {
var ioFmt=key.getClass$().getName$() + "." + key.toString() ;
if (C$.freezeKeyMap == null ) {
C$.freezeKeyMap=Clazz_new_($I$(8,1));
C$.thawKeyMap=Clazz_new_($I$(8,1));
}C$.freezeKeyMap.put$O$O(key, ioFmt);
C$.thawKeyMap.put$O$O(ioFmt, key);
}, 1);

Clazz_newMeth(C$, 'getStaticAttribute$O',  function (key) {
if (C$.thawKeyMap == null  || key == null  ) {
return null;
}return C$.thawKeyMap.get$O(key);
}, 1);

Clazz_newMeth(C$, 'getStaticAttributeKey$O',  function (key) {
return key.getClass$().getName$() + "." + key.toString() ;
}, 1);

C$.$static$=function(){C$.$static$=0;
{
};
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleContext, "SmallAttributeSet", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.text.AttributeSet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['attributes','Object[]','resolveParent','javax.swing.text.AttributeSet']]]

Clazz_newMeth(C$, 'c$$OA',  function (attributes) {
;C$.$init$.apply(this);
this.attributes=attributes;
p$1.updateResolveParent.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_text_AttributeSet',  function (attrs) {
;C$.$init$.apply(this);
var n=attrs.getAttributeCount$();
var tbl=Clazz_array(java.lang.Object, [2 * n]);
var names=attrs.getAttributeNames$();
var i=0;
while (names.hasMoreElements$()){
tbl[i]=names.nextElement$();
tbl[i + 1]=attrs.getAttribute$O(tbl[i]);
i+=2;
}
this.attributes=tbl;
p$1.updateResolveParent.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'updateResolveParent',  function () {
this.resolveParent=null;
var tbl=this.attributes;
for (var i=0; i < tbl.length; i+=2) {
if (tbl[i] === $I$(1).ResolveAttribute ) {
this.resolveParent=tbl[i + 1];
break;
}}
}, p$1);

Clazz_newMeth(C$, 'getLocalAttribute$O',  function (nm) {
if (nm === $I$(1).ResolveAttribute ) {
return this.resolveParent;
}var tbl=this.attributes;
for (var i=0; i < tbl.length; i+=2) {
if (nm.equals$O(tbl[i])) {
return tbl[i + 1];
}}
return null;
});

Clazz_newMeth(C$, 'toString',  function () {
var s="{";
var tbl=this.attributes;
for (var i=0; i < tbl.length; i+=2) {
if (Clazz_instanceOf(tbl[i + 1], "javax.swing.text.AttributeSet")) {
s=s + tbl[i] + "=" + "AttributeSet" + "," ;
} else {
s=s + tbl[i] + "=" + tbl[i + 1] + "," ;
}}
s=s + "}";
return s;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var code=0;
var tbl=this.attributes;
for (var i=1; i < tbl.length; i+=2) {
code^=tbl[i].hashCode$();
}
return code;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (Clazz_instanceOf(obj, "javax.swing.text.AttributeSet")) {
var attrs=obj;
return ((this.getAttributeCount$() == attrs.getAttributeCount$()) && this.containsAttributes$javax_swing_text_AttributeSet(attrs) );
}return false;
});

Clazz_newMeth(C$, 'clone$',  function () {
return this;
});

Clazz_newMeth(C$, 'getAttributeCount$',  function () {
return (this.attributes.length/2|0);
});

Clazz_newMeth(C$, 'isDefined$O',  function (key) {
var a=this.attributes;
var n=a.length;
for (var i=0; i < n; i+=2) {
if (key.equals$O(a[i])) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'isEqual$javax_swing_text_AttributeSet',  function (attr) {
if (Clazz_instanceOf(attr, "javax.swing.text.StyleContext.SmallAttributeSet")) {
return attr === this ;
}return ((this.getAttributeCount$() == attr.getAttributeCount$()) && this.containsAttributes$javax_swing_text_AttributeSet(attr) );
});

Clazz_newMeth(C$, 'copyAttributes$',  function () {
return this;
});

Clazz_newMeth(C$, 'getAttribute$O',  function (key) {
var value=this.getLocalAttribute$O(key);
if (value == null ) {
var parent=this.getResolveParent$();
if (parent != null ) value=parent.getAttribute$O(key);
}return value;
});

Clazz_newMeth(C$, 'getAttributeNames$',  function () {
return Clazz_new_($I$(2,1).c$$OA,[this, null, this.attributes]);
});

Clazz_newMeth(C$, 'containsAttribute$O$O',  function (name, value) {
return value.equals$O(this.getAttribute$O(name));
});

Clazz_newMeth(C$, 'containsAttributes$javax_swing_text_AttributeSet',  function (attrs) {
var result=true;
var names=attrs.getAttributeNames$();
while (result && names.hasMoreElements$() ){
var name=names.nextElement$();
result=attrs.getAttribute$O(name).equals$O(this.getAttribute$O(name));
}
return result;
});

Clazz_newMeth(C$, 'getResolveParent$',  function () {
return this.resolveParent;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleContext, "KeyEnumeration", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'java.util.Enumeration');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['i'],'O',['attr','Object[]']]]

Clazz_newMeth(C$, 'c$$OA',  function (attr) {
;C$.$init$.apply(this);
this.attr=attr;
this.i=0;
}, 1);

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return this.i < this.attr.length;
});

Clazz_newMeth(C$, 'nextElement$',  function () {
if (this.i < this.attr.length) {
var o=this.attr[this.i];
this.i+=2;
return o;
}throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleContext, "KeyBuilder", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.keys=Clazz_new_($I$(3,1));
this.data=Clazz_new_($I$(3,1));
},1);

C$.$fields$=[['O',['keys','java.util.Vector','+data']]]

Clazz_newMeth(C$, 'initialize$javax_swing_text_AttributeSet',  function (a) {
if (Clazz_instanceOf(a, "javax.swing.text.StyleContext.SmallAttributeSet")) {
p$2.initialize$OA.apply(this, [(a).attributes]);
} else {
this.keys.removeAllElements$();
this.data.removeAllElements$();
var names=a.getAttributeNames$();
while (names.hasMoreElements$()){
var name=names.nextElement$();
this.addAttribute$O$O(name, a.getAttribute$O(name));
}
}});

Clazz_newMeth(C$, 'initialize$OA',  function (sorted) {
this.keys.removeAllElements$();
this.data.removeAllElements$();
var n=sorted.length;
for (var i=0; i < n; i+=2) {
this.keys.addElement$O(sorted[i]);
this.data.addElement$O(sorted[i + 1]);
}
}, p$2);

Clazz_newMeth(C$, 'createTable$',  function () {
var n=this.keys.size$();
var tbl=Clazz_array(java.lang.Object, [2 * n]);
for (var i=0; i < n; i++) {
var offs=2 * i;
tbl[offs]=this.keys.elementAt$I(i);
tbl[offs + 1]=this.data.elementAt$I(i);
}
return tbl;
});

Clazz_newMeth(C$, 'getCount$',  function () {
return this.keys.size$();
});

Clazz_newMeth(C$, 'addAttribute$O$O',  function (key, value) {
this.keys.addElement$O(key);
this.data.addElement$O(value);
});

Clazz_newMeth(C$, 'addAttributes$javax_swing_text_AttributeSet',  function (attr) {
if (Clazz_instanceOf(attr, "javax.swing.text.StyleContext.SmallAttributeSet")) {
var tbl=(attr).attributes;
var n=tbl.length;
for (var i=0; i < n; i+=2) {
this.addAttribute$O$O(tbl[i], tbl[i + 1]);
}
} else {
var names=attr.getAttributeNames$();
while (names.hasMoreElements$()){
var name=names.nextElement$();
this.addAttribute$O$O(name, attr.getAttribute$O(name));
}
}});

Clazz_newMeth(C$, 'removeAttribute$O',  function (key) {
var n=this.keys.size$();
for (var i=0; i < n; i++) {
if (this.keys.elementAt$I(i).equals$O(key)) {
this.keys.removeElementAt$I(i);
this.data.removeElementAt$I(i);
return;
}}
});

Clazz_newMeth(C$, 'removeAttributes$java_util_Enumeration',  function (names) {
while (names.hasMoreElements$()){
var name=names.nextElement$();
this.removeAttribute$O(name);
}
});

Clazz_newMeth(C$, 'removeAttributes$javax_swing_text_AttributeSet',  function (attr) {
var names=attr.getAttributeNames$();
while (names.hasMoreElements$()){
var name=names.nextElement$();
var value=attr.getAttribute$O(name);
p$2.removeSearchAttribute$O$O.apply(this, [name, value]);
}
});

Clazz_newMeth(C$, 'removeSearchAttribute$O$O',  function (ikey, value) {
var n=this.keys.size$();
for (var i=0; i < n; i++) {
if (this.keys.elementAt$I(i).equals$O(ikey)) {
if (this.data.elementAt$I(i).equals$O(value)) {
this.keys.removeElementAt$I(i);
this.data.removeElementAt$I(i);
}return;
}}
}, p$2);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleContext, "FontKey", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['style','size'],'S',['family']]]

Clazz_newMeth(C$, 'c$$S$I$I',  function (family, style, size) {
;C$.$init$.apply(this);
this.setValue$S$I$I(family, style, size);
}, 1);

Clazz_newMeth(C$, 'setValue$S$I$I',  function (family, style, size) {
this.family=(family != null ) ? family.intern$() : null;
this.style=style;
this.size=size;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var fhash=(this.family != null ) ? this.family.hashCode$() : 0;
return fhash ^ this.style ^ this.size ;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (Clazz_instanceOf(obj, "javax.swing.text.StyleContext.FontKey")) {
var font=obj;
return (this.size == font.size) && (this.style == font.style) && (this.family == font.family)  ;
}return false;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.StyleContext, "NamedStyle", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, null, 'javax.swing.text.Style');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.listenerList=Clazz_new_($I$(4,1));
this.changeEvent=null;
},1);

C$.$fields$=[['O',['listenerList','javax.swing.event.EventListenerList','changeEvent','javax.swing.event.ChangeEvent','attributes','javax.swing.text.AttributeSet']]]

Clazz_newMeth(C$, 'c$$S$javax_swing_text_Style',  function (name, parent) {
;C$.$init$.apply(this);
this.attributes=this.b$['javax.swing.text.StyleContext'].getEmptySet$.apply(this.b$['javax.swing.text.StyleContext'], []);
if (name != null ) {
this.setName$S(name);
}if (parent != null ) {
this.setResolveParent$javax_swing_text_AttributeSet(parent);
}}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_text_Style',  function (parent) {
C$.c$$S$javax_swing_text_Style.apply(this, [null, parent]);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.attributes=this.b$['javax.swing.text.StyleContext'].getEmptySet$.apply(this.b$['javax.swing.text.StyleContext'], []);
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return "NamedStyle:" + this.getName$() + " " + this.attributes ;
});

Clazz_newMeth(C$, 'getName$',  function () {
if (this.isDefined$O($I$(1).NameAttribute)) {
return this.getAttribute$O($I$(1).NameAttribute).toString();
}return null;
});

Clazz_newMeth(C$, 'setName$S',  function (name) {
if (name != null ) {
this.addAttribute$O$O($I$(1).NameAttribute, name);
}});

Clazz_newMeth(C$, 'addChangeListener$javax_swing_event_ChangeListener',  function (l) {
this.listenerList.add$Class$java_util_EventListener(Clazz_getClass($I$(5),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'removeChangeListener$javax_swing_event_ChangeListener',  function (l) {
this.listenerList.remove$Class$java_util_EventListener(Clazz_getClass($I$(5),['stateChanged$javax_swing_event_ChangeEvent']), l);
});

Clazz_newMeth(C$, 'getChangeListeners$',  function () {
return this.listenerList.getListeners$Class(Clazz_getClass($I$(5),['stateChanged$javax_swing_event_ChangeEvent']));
});

Clazz_newMeth(C$, 'fireStateChanged$',  function () {
var listeners=this.listenerList.getListenerList$();
for (var i=listeners.length - 2; i >= 0; i-=2) {
if (listeners[i] === Clazz_getClass($I$(5),['stateChanged$javax_swing_event_ChangeEvent']) ) {
if (this.changeEvent == null ) this.changeEvent=Clazz_new_($I$(6,1).c$$O,[this]);
(listeners[i + 1]).stateChanged$javax_swing_event_ChangeEvent(this.changeEvent);
}}
});

Clazz_newMeth(C$, 'getListeners$Class',  function (listenerType) {
return this.listenerList.getListeners$Class(listenerType);
});

Clazz_newMeth(C$, 'getAttributeCount$',  function () {
return this.attributes.getAttributeCount$();
});

Clazz_newMeth(C$, 'isDefined$O',  function (attrName) {
return this.attributes.isDefined$O(attrName);
});

Clazz_newMeth(C$, 'isEqual$javax_swing_text_AttributeSet',  function (attr) {
return this.attributes.isEqual$javax_swing_text_AttributeSet(attr);
});

Clazz_newMeth(C$, 'copyAttributes$',  function () {
var a=Clazz_new_(C$,[this, null]);
a.attributes=this.attributes.copyAttributes$();
return a;
});

Clazz_newMeth(C$, 'getAttribute$O',  function (attrName) {
return this.attributes.getAttribute$O(attrName);
});

Clazz_newMeth(C$, 'getAttributeNames$',  function () {
return this.attributes.getAttributeNames$();
});

Clazz_newMeth(C$, 'containsAttribute$O$O',  function (name, value) {
return this.attributes.containsAttribute$O$O(name, value);
});

Clazz_newMeth(C$, 'containsAttributes$javax_swing_text_AttributeSet',  function (attrs) {
return this.attributes.containsAttributes$javax_swing_text_AttributeSet(attrs);
});

Clazz_newMeth(C$, 'getResolveParent$',  function () {
return this.attributes.getResolveParent$();
});

Clazz_newMeth(C$, 'addAttribute$O$O',  function (name, value) {
var context=this.b$['javax.swing.text.StyleContext'];
this.attributes=context.addAttribute$javax_swing_text_AttributeSet$O$O(this.attributes, name, value);
this.fireStateChanged$();
});

Clazz_newMeth(C$, 'addAttributes$javax_swing_text_AttributeSet',  function (attr) {
var context=this.b$['javax.swing.text.StyleContext'];
this.attributes=context.addAttributes$javax_swing_text_AttributeSet$javax_swing_text_AttributeSet(this.attributes, attr);
this.fireStateChanged$();
});

Clazz_newMeth(C$, 'removeAttribute$O',  function (name) {
var context=this.b$['javax.swing.text.StyleContext'];
this.attributes=context.removeAttribute$javax_swing_text_AttributeSet$O(this.attributes, name);
this.fireStateChanged$();
});

Clazz_newMeth(C$, 'removeAttributes$java_util_Enumeration',  function (names) {
var context=this.b$['javax.swing.text.StyleContext'];
this.attributes=context.removeAttributes$javax_swing_text_AttributeSet$java_util_Enumeration(this.attributes, names);
this.fireStateChanged$();
});

Clazz_newMeth(C$, 'removeAttributes$javax_swing_text_AttributeSet',  function (attrs) {
var context=this.b$['javax.swing.text.StyleContext'];
if (attrs === this ) {
this.attributes=context.getEmptySet$();
} else {
this.attributes=context.removeAttributes$javax_swing_text_AttributeSet$javax_swing_text_AttributeSet(this.attributes, attrs);
}this.fireStateChanged$();
});

Clazz_newMeth(C$, 'setResolveParent$javax_swing_text_AttributeSet',  function (parent) {
if (parent != null ) {
this.addAttribute$O$O($I$(1).ResolveAttribute, parent);
} else {
this.removeAttribute$O($I$(1).ResolveAttribute);
}});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,'java.util.Hashtable','javax.swing.Action','javax.swing.text.JTextComponent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "TextAction", null, 'javax.swing.AbstractAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.superclazz.c$$S.apply(this,[name]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getTextComponent$java_awt_event_ActionEvent',  function (e) {
if (e != null ) {
var o=e.getSource$();
if (Clazz_instanceOf(o, "javax.swing.text.JTextComponent")) {
return o;
}}return this.getFocusedComponent$();
});

Clazz_newMeth(C$, 'augmentList$javax_swing_ActionA$javax_swing_ActionA',  function (list1, list2) {
var h=Clazz_new_($I$(1,1));
if (list1 != null ) for (var i=0; i < list1.length; i++) {
var a=list1[i];
var value=a.getValue$S("Name");
h.put$O$O((value != null  ? value : ""), a);
}
for (var i=0; i < list2.length; i++) {
var a=list2[i];
var value=a.getValue$S("Name");
h.put$O$O((value != null  ? value : ""), a);
}
var actions=Clazz_array($I$(2), [h.size$()]);
var index=0;
for (var e=h.elements$(); e.hasMoreElements$(); ) {
actions[index++]=e.nextElement$();
}
return actions;
}, 1);

Clazz_newMeth(C$, 'getFocusedComponent$',  function () {
return $I$(3).getFocusedComponent$();
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,'javax.swing.text.StyleConstants',['javax.swing.text.Position','.Bias']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Utilities");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getJComponent$javax_swing_text_View',  function (view) {
if (view != null ) {
var component=view.getContainer$();
if (Clazz_instanceOf(component, "javax.swing.JComponent")) {
return component;
}}return null;
}, 1);

Clazz_newMeth(C$, 'getTabbedTextWidth$javax_swing_text_Segment$java_awt_FontMetrics$I$javax_swing_text_TabExpander$I',  function (s, metrics, x, e, startOffset) {
return C$.getTabbedTextWidth$javax_swing_text_View$javax_swing_text_Segment$java_awt_FontMetrics$I$javax_swing_text_TabExpander$I$IA(null, s, metrics, x, e, startOffset, null);
}, 1);

Clazz_newMeth(C$, 'getTabbedTextWidth$javax_swing_text_View$javax_swing_text_Segment$java_awt_FontMetrics$I$javax_swing_text_TabExpander$I$IA',  function (view, s, metrics, x, e, startOffset, justificationData) {
var nextX=x;
var txt=s.array;
var txtOffset=s.offset;
var n=s.offset + s.count;
var charCount=0;
var spaceAddon=0;
var spaceAddonLeftoverEnd=-1;
var startJustifiableContent=0;
var endJustifiableContent=0;
if (justificationData != null ) {
var offset=-startOffset + txtOffset;
var parent=null;
if (view != null  && (parent=view.getParent$()) != null  ) {
offset+=parent.getStartOffset$();
}spaceAddon=justificationData[0];
spaceAddonLeftoverEnd=justificationData[1] + offset;
startJustifiableContent=justificationData[2] + offset;
endJustifiableContent=justificationData[3] + offset;
}for (var i=txtOffset; i < n; i++) {
if (txt[i] == "\t" || ((spaceAddon != 0 || i <= spaceAddonLeftoverEnd ) && (txt[i] == " ") && startJustifiableContent <= i   && i <= endJustifiableContent ) ) {
nextX+=metrics.charsWidth$CA$I$I(txt, i - charCount, charCount);
charCount=0;
if (txt[i] == "\t") {
if (e != null ) {
nextX=(e.nextTabStop$F$I(nextX, startOffset + i - txtOffset)|0);
} else {
nextX+=metrics.charWidth$C(" ");
}} else if (txt[i] == " ") {
nextX+=metrics.charWidth$C(" ") + spaceAddon;
if (i <= spaceAddonLeftoverEnd) {
++nextX;
}}} else if (txt[i] == "\n") {
nextX+=metrics.charsWidth$CA$I$I(txt, i - charCount, charCount);
charCount=0;
} else {
++charCount;
}}
nextX+=metrics.charsWidth$CA$I$I(txt, n - charCount, charCount);
return nextX - x;
}, 1);

Clazz_newMeth(C$, 'getTabbedTextOffset$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I',  function (s, metrics, x0, x, e, startOffset) {
return C$.getTabbedTextOffset$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I$Z(s, metrics, x0, x, e, startOffset, true);
}, 1);

Clazz_newMeth(C$, 'getTabbedTextOffset$javax_swing_text_View$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I$IA',  function (view, s, metrics, x0, x, e, startOffset, justificationData) {
return C$.getTabbedTextOffset$javax_swing_text_View$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I$Z$IA(view, s, metrics, x0, x, e, startOffset, true, justificationData);
}, 1);

Clazz_newMeth(C$, 'getTabbedTextOffset$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I$Z',  function (s, metrics, x0, x, e, startOffset, round) {
return C$.getTabbedTextOffset$javax_swing_text_View$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I$Z$IA(null, s, metrics, x0, x, e, startOffset, round, null);
}, 1);

Clazz_newMeth(C$, 'getTabbedTextOffset$javax_swing_text_View$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I$Z$IA',  function (view, s, metrics, x0, x, e, startOffset, round, justificationData) {
if (x0 >= x) {
return 0;
}var currX=x0;
var nextX=currX;
var txt=s.array;
var txtOffset=s.offset;
var txtCount=s.count;
var spaceAddon=0;
var spaceAddonLeftoverEnd=-1;
var startJustifiableContent=0;
var endJustifiableContent=0;
if (justificationData != null ) {
var offset=-startOffset + txtOffset;
var parent=null;
if (view != null  && (parent=view.getParent$()) != null  ) {
offset+=parent.getStartOffset$();
}spaceAddon=justificationData[0];
spaceAddonLeftoverEnd=justificationData[1] + offset;
startJustifiableContent=justificationData[2] + offset;
endJustifiableContent=justificationData[3] + offset;
}var n=s.offset + s.count;
for (var i=s.offset; i < n; i++) {
if (txt[i] == "\t" || ((spaceAddon != 0 || i <= spaceAddonLeftoverEnd ) && (txt[i] == " ") && startJustifiableContent <= i   && i <= endJustifiableContent ) ) {
if (txt[i] == "\t") {
if (e != null ) {
nextX=(e.nextTabStop$F$I(nextX, startOffset + i - txtOffset)|0);
} else {
nextX+=metrics.charWidth$C(" ");
}} else if (txt[i] == " ") {
nextX+=metrics.charWidth$C(" ") + spaceAddon;
if (i <= spaceAddonLeftoverEnd) {
++nextX;
}}} else {
nextX+=metrics.charWidth$C(txt[i]);
}if ((x >= currX) && (x < nextX) ) {
if ((round == false ) || ((x - currX) < (nextX - x)) ) {
return i - txtOffset;
} else {
return i + 1 - txtOffset;
}}currX=nextX;
}
return txtCount;
}, 1);

Clazz_newMeth(C$, 'getBreakLocation$javax_swing_text_Segment$java_awt_FontMetrics$I$I$javax_swing_text_TabExpander$I',  function (s, metrics, x0, x, e, startOffset) {
return 0;
}, 1);

Clazz_newMeth(C$, 'getRowStart$javax_swing_text_JTextComponent$I',  function (c, offs) {
var r=c.modelToView$I(offs);
if (r == null ) {
return -1;
}var lastOffs=offs;
var y=r.y;
while ((r != null ) && (y == r.y) ){
if (r.height != 0) {
offs=lastOffs;
}lastOffs-=1;
r=(lastOffs >= 0) ? c.modelToView$I(lastOffs) : null;
}
return offs;
}, 1);

Clazz_newMeth(C$, 'getRowEnd$javax_swing_text_JTextComponent$I',  function (c, offs) {
var r=c.modelToView$I(offs);
if (r == null ) {
return -1;
}var n=c.getDocument$().getLength$();
var lastOffs=offs;
var y=r.y;
while ((r != null ) && (y == r.y) ){
if (r.height != 0) {
offs=lastOffs;
}lastOffs+=1;
r=(lastOffs <= n) ? c.modelToView$I(lastOffs) : null;
}
return offs;
}, 1);

Clazz_newMeth(C$, 'getPositionAbove$javax_swing_text_JTextComponent$I$I',  function (c, offs, x) {
var lastOffs=C$.getRowStart$javax_swing_text_JTextComponent$I(c, offs) - 1;
if (lastOffs < 0) {
return -1;
}var bestSpan=2147483647;
var y=0;
var r=null;
if (lastOffs >= 0) {
r=c.modelToView$I(lastOffs);
y=r.y;
}while ((r != null ) && (y == r.y) ){
var span=Math.abs(r.x - x);
if (span < bestSpan) {
offs=lastOffs;
bestSpan=span;
}lastOffs-=1;
r=(lastOffs >= 0) ? c.modelToView$I(lastOffs) : null;
}
return offs;
}, 1);

Clazz_newMeth(C$, 'getPositionBelow$javax_swing_text_JTextComponent$I$I',  function (c, offs, x) {
var lastOffs=C$.getRowEnd$javax_swing_text_JTextComponent$I(c, offs) + 1;
if (lastOffs <= 0) {
return -1;
}var bestSpan=2147483647;
var n=c.getDocument$().getLength$();
var y=0;
var r=null;
if (lastOffs <= n) {
r=c.modelToView$I(lastOffs);
y=r.y;
}while ((r != null ) && (y == r.y) ){
var span=Math.abs(x - r.x);
if (span < bestSpan) {
offs=lastOffs;
bestSpan=span;
}lastOffs+=1;
r=(lastOffs <= n) ? c.modelToView$I(lastOffs) : null;
}
return offs;
}, 1);

Clazz_newMeth(C$, 'getWordStart$javax_swing_text_JTextComponent$I',  function (c, offs) {
return 0;
}, 1);

Clazz_newMeth(C$, 'getWordEnd$javax_swing_text_JTextComponent$I',  function (c, offs) {
return 0;
}, 1);

Clazz_newMeth(C$, 'getNextWord$javax_swing_text_JTextComponent$I',  function (c, offs) {
var nextWord;
var line=C$.getParagraphElement$javax_swing_text_JTextComponent$I(c, offs);
for (nextWord=C$.getNextWordInParagraph$javax_swing_text_JTextComponent$javax_swing_text_Element$I$Z(c, line, offs, false); nextWord == -1; nextWord=C$.getNextWordInParagraph$javax_swing_text_JTextComponent$javax_swing_text_Element$I$Z(c, line, offs, true)) {
offs=line.getEndOffset$();
line=C$.getParagraphElement$javax_swing_text_JTextComponent$I(c, offs);
}
return nextWord;
}, 1);

Clazz_newMeth(C$, 'getNextWordInParagraph$javax_swing_text_JTextComponent$javax_swing_text_Element$I$Z',  function (c, line, offs, first) {
return 0;
}, 1);

Clazz_newMeth(C$, 'getPreviousWord$javax_swing_text_JTextComponent$I',  function (c, offs) {
var prevWord;
var line=C$.getParagraphElement$javax_swing_text_JTextComponent$I(c, offs);
for (prevWord=C$.getPrevWordInParagraph$javax_swing_text_JTextComponent$javax_swing_text_Element$I(c, line, offs); prevWord == -1; prevWord=C$.getPrevWordInParagraph$javax_swing_text_JTextComponent$javax_swing_text_Element$I(c, line, offs)) {
offs=line.getStartOffset$() - 1;
line=C$.getParagraphElement$javax_swing_text_JTextComponent$I(c, offs);
}
return prevWord;
}, 1);

Clazz_newMeth(C$, 'getPrevWordInParagraph$javax_swing_text_JTextComponent$javax_swing_text_Element$I',  function (c, line, offs) {
return 0;
}, 1);

Clazz_newMeth(C$, 'getParagraphElement$javax_swing_text_JTextComponent$I',  function (c, offs) {
var doc=c.getDocument$();
if (Clazz_instanceOf(doc, "javax.swing.text.StyledDocument")) {
return (doc).getParagraphElement$I(offs);
}var map=doc.getDefaultRootElement$();
var index=map.getElementIndex$I(offs);
var paragraph=map.getElement$I(index);
if ((offs >= paragraph.getStartOffset$()) && (offs < paragraph.getEndOffset$()) ) {
return paragraph;
}return null;
}, 1);

Clazz_newMeth(C$, 'isComposedTextElement$javax_swing_text_Document$I',  function (doc, offset) {
var elem=doc.getDefaultRootElement$();
while (!elem.isLeaf$()){
elem=elem.getElement$I(elem.getElementIndex$I(offset));
}
return C$.isComposedTextElement$javax_swing_text_Element(elem);
}, 1);

Clazz_newMeth(C$, 'isComposedTextElement$javax_swing_text_Element',  function (elem) {
var as=elem.getAttributes$();
return C$.isComposedTextAttributeDefined$javax_swing_text_AttributeSet(as);
}, 1);

Clazz_newMeth(C$, 'isComposedTextAttributeDefined$javax_swing_text_AttributeSet',  function (as) {
return ((as != null ) && (as.isDefined$O($I$(1).ComposedTextAttribute)) );
}, 1);

Clazz_newMeth(C$, 'isLeftToRight$java_awt_Component',  function (c) {
return c.getComponentOrientation$().isLeftToRight$();
}, 1);

Clazz_newMeth(C$, 'getNextVisualPositionFrom$javax_swing_text_View$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA',  function (v, pos, b, alloc, direction, biasRet) {
if (v.getViewCount$() == 0) {
return pos;
}var top=(direction == 1 || direction == 7 );
var retValue;
if (pos == -1) {
var childIndex=(top) ? v.getViewCount$() - 1 : 0;
var child=v.getView$I(childIndex);
var childBounds=v.getChildAllocation$I$java_awt_Shape(childIndex, alloc);
retValue=child.getNextVisualPositionFrom$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA(pos, b, childBounds, direction, biasRet);
if (retValue == -1 && !top  && v.getViewCount$() > 1 ) {
child=v.getView$I(1);
childBounds=v.getChildAllocation$I$java_awt_Shape(1, alloc);
retValue=child.getNextVisualPositionFrom$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA(-1, biasRet[0], childBounds, direction, biasRet);
}} else {
var increment=(top) ? -1 : 1;
var childIndex;
if (b === $I$(2).Backward  && pos > 0 ) {
childIndex=v.getViewIndex$I$javax_swing_text_Position_Bias(pos - 1, $I$(2).Forward);
} else {
childIndex=v.getViewIndex$I$javax_swing_text_Position_Bias(pos, $I$(2).Forward);
}var child=v.getView$I(childIndex);
var childBounds=v.getChildAllocation$I$java_awt_Shape(childIndex, alloc);
retValue=child.getNextVisualPositionFrom$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA(pos, b, childBounds, direction, biasRet);
if ((direction == 3 || direction == 7 ) && (Clazz_instanceOf(v, "javax.swing.text.CompositeView")) && (v).flipEastAndWestAtEnds$I$javax_swing_text_Position_Bias(pos, b)  ) {
increment*=-1;
}childIndex+=increment;
if (retValue == -1 && childIndex >= 0  && childIndex < v.getViewCount$() ) {
child=v.getView$I(childIndex);
childBounds=v.getChildAllocation$I$java_awt_Shape(childIndex, alloc);
retValue=child.getNextVisualPositionFrom$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA(-1, b, childBounds, direction, biasRet);
if (retValue == pos && biasRet[0] !== b  ) {
return C$.getNextVisualPositionFrom$javax_swing_text_View$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA(v, pos, biasRet[0], alloc, direction, biasRet);
}} else if (retValue != -1 && biasRet[0] !== b   && ((increment == 1 && child.getEndOffset$() == retValue ) || (increment == -1 && child.getStartOffset$() == retValue ) )  && childIndex >= 0  && childIndex < v.getViewCount$() ) {
child=v.getView$I(childIndex);
childBounds=v.getChildAllocation$I$java_awt_Shape(childIndex, alloc);
var originalBias=biasRet[0];
var nextPos=child.getNextVisualPositionFrom$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA(-1, b, childBounds, direction, biasRet);
if (biasRet[0] === b ) {
retValue=nextPos;
} else {
biasRet[0]=originalBias;
}}}return retValue;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.text"),I$=[[0,['javax.swing.text.Position','.Bias'],'javax.swing.text.Utilities','java.awt.Rectangle',['javax.swing.event.DocumentEvent','.EventType']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "View", null, null, 'javax.swing.SwingConstants');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['parent','javax.swing.text.View','elem','javax.swing.text.Element']]
,['O',['sharedBiasReturn','javax.swing.text.Position.Bias[]']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_Element',  function (elem) {
;C$.$init$.apply(this);
this.elem=elem;
}, 1);

Clazz_newMeth(C$, 'getParent$',  function () {
return this.parent;
});

Clazz_newMeth(C$, 'isVisible$',  function () {
return true;
});

Clazz_newMeth(C$, 'getMinimumSpan$I',  function (axis) {
var w=this.getResizeWeight$I(axis);
if (w == 0) {
return this.getPreferredSpan$I(axis);
}return 0;
});

Clazz_newMeth(C$, 'getMaximumSpan$I',  function (axis) {
var w=this.getResizeWeight$I(axis);
if (w == 0) {
return this.getPreferredSpan$I(axis);
}return 2147483647;
});

Clazz_newMeth(C$, 'preferenceChanged$javax_swing_text_View$Z$Z',  function (child, width, height) {
var parent=this.getParent$();
if (parent != null ) {
parent.preferenceChanged$javax_swing_text_View$Z$Z(this, width, height);
}});

Clazz_newMeth(C$, 'getAlignment$I',  function (axis) {
return 0.5;
});

Clazz_newMeth(C$, 'setParent$javax_swing_text_View',  function (parent) {
if (parent == null ) {
for (var i=0; i < this.getViewCount$(); i++) {
if (this.getView$I(i).getParent$() === this ) {
this.getView$I(i).setParent$javax_swing_text_View(null);
}}
}this.parent=parent;
});

Clazz_newMeth(C$, 'getViewCount$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getView$I',  function (n) {
return null;
});

Clazz_newMeth(C$, 'removeAll$',  function () {
this.replace$I$I$javax_swing_text_ViewA(0, this.getViewCount$(), null);
});

Clazz_newMeth(C$, 'remove$I',  function (i) {
this.replace$I$I$javax_swing_text_ViewA(i, 1, null);
});

Clazz_newMeth(C$, 'insert$I$javax_swing_text_View',  function (offs, v) {
var one=Clazz_array(C$, [1]);
one[0]=v;
this.replace$I$I$javax_swing_text_ViewA(offs, 0, one);
});

Clazz_newMeth(C$, 'append$javax_swing_text_View',  function (v) {
var one=Clazz_array(C$, [1]);
one[0]=v;
this.replace$I$I$javax_swing_text_ViewA(this.getViewCount$(), 0, one);
});

Clazz_newMeth(C$, 'replace$I$I$javax_swing_text_ViewA',  function (offset, length, views) {
});

Clazz_newMeth(C$, 'getViewIndex$I$javax_swing_text_Position_Bias',  function (pos, b) {
return -1;
});

Clazz_newMeth(C$, 'getChildAllocation$I$java_awt_Shape',  function (index, a) {
return null;
});

Clazz_newMeth(C$, 'getNextVisualPositionFrom$I$javax_swing_text_Position_Bias$java_awt_Shape$I$javax_swing_text_Position_BiasA',  function (pos, b, a, direction, biasRet) {
biasRet[0]=$I$(1).Forward;
switch (direction) {
case 1:
case 5:
{
if (pos == -1) {
pos=(direction == 1) ? Math.max(0, this.getEndOffset$() - 1) : this.getStartOffset$();
break;
}var target=this.getContainer$();
var c=(target != null ) ? target.getCaret$() : null;
var mcp;
if (c != null ) {
mcp=c.getMagicCaretPosition$();
} else {
mcp=null;
}var x;
if (mcp == null ) {
var loc=target.modelToView$I(pos);
x=(loc == null ) ? 0 : loc.x;
} else {
x=mcp.x;
}if (direction == 1) {
pos=$I$(2).getPositionAbove$javax_swing_text_JTextComponent$I$I(target, pos, x);
} else {
pos=$I$(2).getPositionBelow$javax_swing_text_JTextComponent$I$I(target, pos, x);
}}break;
case 7:
if (pos == -1) {
pos=Math.max(0, this.getEndOffset$() - 1);
} else {
pos=Math.max(0, pos - 1);
}break;
case 3:
if (pos == -1) {
pos=this.getStartOffset$();
} else {
pos=Math.min(pos + 1, this.getDocument$().getLength$());
}break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Bad direction: " + direction]);
}
return pos;
});

Clazz_newMeth(C$, 'modelToView$I$javax_swing_text_Position_Bias$I$javax_swing_text_Position_Bias$java_awt_Shape',  function (p0, b0, p1, b1, a) {
var s0=this.modelToView$I$java_awt_Shape$javax_swing_text_Position_Bias(p0, a, b0);
var s1;
if (p1 == this.getEndOffset$()) {
try {
s1=this.modelToView$I$java_awt_Shape$javax_swing_text_Position_Bias(p1, a, b1);
} catch (ble) {
if (Clazz_exceptionOf(ble,"javax.swing.text.BadLocationException")){
s1=null;
} else {
throw ble;
}
}
if (s1 == null ) {
var alloc=(Clazz_instanceOf(a, "java.awt.Rectangle")) ? a : a.getBounds$();
s1=Clazz_new_($I$(3,1).c$$I$I$I$I,[alloc.x + alloc.width - 1, alloc.y, 1, alloc.height]);
}} else {
s1=this.modelToView$I$java_awt_Shape$javax_swing_text_Position_Bias(p1, a, b1);
}var r0=s0.getBounds$();
var r1=(Clazz_instanceOf(s1, "java.awt.Rectangle")) ? s1 : s1.getBounds$();
if (r0.y != r1.y) {
var alloc=(Clazz_instanceOf(a, "java.awt.Rectangle")) ? a : a.getBounds$();
r0.x=alloc.x;
r0.width=alloc.width;
}r0.add$java_awt_Rectangle(r1);
return r0;
});

Clazz_newMeth(C$, 'insertUpdate$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory',  function (e, a, f) {
if (this.getViewCount$() > 0) {
var elem=this.getElement$();
var ec=e.getChange$javax_swing_text_Element(elem);
if (ec != null ) {
if (!this.updateChildren$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$javax_swing_text_ViewFactory(ec, e, f)) {
ec=null;
}}this.forwardUpdate$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(ec, e, a, f);
this.updateLayout$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape(ec, e, a);
}});

Clazz_newMeth(C$, 'removeUpdate$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory',  function (e, a, f) {
if (this.getViewCount$() > 0) {
var elem=this.getElement$();
var ec=e.getChange$javax_swing_text_Element(elem);
if (ec != null ) {
if (!this.updateChildren$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$javax_swing_text_ViewFactory(ec, e, f)) {
ec=null;
}}this.forwardUpdate$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(ec, e, a, f);
this.updateLayout$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape(ec, e, a);
}});

Clazz_newMeth(C$, 'changedUpdate$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory',  function (e, a, f) {
if (this.getViewCount$() > 0) {
var elem=this.getElement$();
var ec=e.getChange$javax_swing_text_Element(elem);
if (ec != null ) {
if (!this.updateChildren$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$javax_swing_text_ViewFactory(ec, e, f)) {
ec=null;
}}this.forwardUpdate$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(ec, e, a, f);
this.updateLayout$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape(ec, e, a);
}});

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.elem.getDocument$();
});

Clazz_newMeth(C$, 'getStartOffset$',  function () {
return this.elem.getStartOffset$();
});

Clazz_newMeth(C$, 'getEndOffset$',  function () {
return this.elem.getEndOffset$();
});

Clazz_newMeth(C$, 'getElement$',  function () {
return this.elem;
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
var c=this.getContainer$();
return c.getGraphics$();
});

Clazz_newMeth(C$, 'getAttributes$',  function () {
return this.elem.getAttributes$();
});

Clazz_newMeth(C$, 'breakView$I$I$F$F',  function (axis, offset, pos, len) {
return this;
});

Clazz_newMeth(C$, 'createFragment$I$I',  function (p0, p1) {
return this;
});

Clazz_newMeth(C$, 'getBreakWeight$I$F$F',  function (axis, pos, len) {
if (len > this.getPreferredSpan$I(axis) ) {
return 1000;
}return 0;
});

Clazz_newMeth(C$, 'getResizeWeight$I',  function (axis) {
return 0;
});

Clazz_newMeth(C$, 'setSize$F$F',  function (width, height) {
});

Clazz_newMeth(C$, 'getContainer$',  function () {
var v=this.getParent$();
return (v != null ) ? v.getContainer$() : null;
});

Clazz_newMeth(C$, 'getViewFactory$',  function () {
var v=this.getParent$();
return (v != null ) ? v.getViewFactory$() : null;
});

Clazz_newMeth(C$, 'getToolTipText$F$F$java_awt_Shape',  function (x, y, allocation) {
var viewIndex=this.getViewIndex$F$F$java_awt_Shape(x, y, allocation);
if (viewIndex >= 0) {
allocation=this.getChildAllocation$I$java_awt_Shape(viewIndex, allocation);
var rect=(Clazz_instanceOf(allocation, "java.awt.Rectangle")) ? allocation : allocation.getBounds$();
if (rect.contains$D$D(x, y)) {
return this.getView$I(viewIndex).getToolTipText$F$F$java_awt_Shape(x, y, allocation);
}}return null;
});

Clazz_newMeth(C$, 'getViewIndex$F$F$java_awt_Shape',  function (x, y, allocation) {
for (var counter=this.getViewCount$() - 1; counter >= 0; counter--) {
var childAllocation=this.getChildAllocation$I$java_awt_Shape(counter, allocation);
if (childAllocation != null ) {
var rect=(Clazz_instanceOf(childAllocation, "java.awt.Rectangle")) ? childAllocation : childAllocation.getBounds$();
if (rect.contains$D$D(x, y)) {
return counter;
}}}
return -1;
});

Clazz_newMeth(C$, 'updateChildren$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$javax_swing_text_ViewFactory',  function (ec, e, f) {
var removedElems=ec.getChildrenRemoved$();
var addedElems=ec.getChildrenAdded$();
var added=null;
if (addedElems != null ) {
added=Clazz_array(C$, [addedElems.length]);
for (var i=0; i < addedElems.length; i++) {
added[i]=f.create$javax_swing_text_Element(addedElems[i]);
}
}var nremoved=0;
var index=ec.getIndex$();
if (removedElems != null ) {
nremoved=removedElems.length;
}this.replace$I$I$javax_swing_text_ViewA(index, nremoved, added);
return true;
});

Clazz_newMeth(C$, 'forwardUpdate$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory',  function (ec, e, a, f) {
var pos=e.getOffset$();
var index0=this.getViewIndex$I$javax_swing_text_Position_Bias(pos, $I$(1).Forward);
if (index0 == -1 && e.getType$() === $I$(4).REMOVE   && pos >= this.getEndOffset$() ) {
index0=this.getViewCount$() - 1;
}var index1=index0;
var v=(index0 >= 0) ? this.getView$I(index0) : null;
if (v != null ) {
if ((v.getStartOffset$() == pos) && (pos > 0) ) {
index0=Math.max(index0 - 1, 0);
}}if (e.getType$() !== $I$(4).REMOVE ) {
index1=this.getViewIndex$I$javax_swing_text_Position_Bias(pos + e.getLength$(), $I$(1).Forward);
if (index1 < 0) {
index1=this.getViewCount$() - 1;
}}var hole0=index1 + 1;
var hole1=hole0;
var addedElems=(ec != null ) ? ec.getChildrenAdded$() : null;
if ((addedElems != null ) && (addedElems.length > 0) ) {
hole0=ec.getIndex$();
hole1=hole0 + addedElems.length - 1;
}index0=Math.max(index0, 0);
for (var i=index0; i <= index1; i++) {
if (!((i >= hole0) && (i <= hole1) )) {
v=this.getView$I(i);
if (v != null ) {
var childAlloc=this.getChildAllocation$I$java_awt_Shape(i, a);
this.forwardUpdateToView$javax_swing_text_View$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(v, e, childAlloc, f);
}}}
});

Clazz_newMeth(C$, 'forwardUpdateToView$javax_swing_text_View$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory',  function (v, e, a, f) {
var type=e.getType$();
if (type === $I$(4).INSERT ) {
v.insertUpdate$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(e, a, f);
} else if (type === $I$(4).REMOVE ) {
v.removeUpdate$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(e, a, f);
} else {
v.changedUpdate$javax_swing_event_DocumentEvent$java_awt_Shape$javax_swing_text_ViewFactory(e, a, f);
}});

Clazz_newMeth(C$, 'updateLayout$javax_swing_event_DocumentEvent_ElementChange$javax_swing_event_DocumentEvent$java_awt_Shape',  function (ec, e, a) {
if ((ec != null ) && (a != null ) ) {
this.preferenceChanged$javax_swing_text_View$Z$Z(null, true, true);
var host=this.getContainer$();
if (host != null ) {
host.秘repaint$();
}}});

Clazz_newMeth(C$, 'modelToView$I$java_awt_Shape',  function (pos, a) {
return this.modelToView$I$java_awt_Shape$javax_swing_text_Position_Bias(pos, a, $I$(1).Forward);
});

Clazz_newMeth(C$, 'viewToModel$F$F$java_awt_Shape',  function (x, y, a) {
C$.sharedBiasReturn[0]=$I$(1).Forward;
return this.viewToModel$F$F$java_awt_Shape$javax_swing_text_Position_BiasA(x, y, a, C$.sharedBiasReturn);
});

C$.$static$=function(){C$.$static$=0;
C$.sharedBiasReturn=Clazz_array($I$(1), [1]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:14 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.tree"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "TreeNode");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.undo"),I$=[[0,'javax.swing.UIManager']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AbstractUndoableEdit", null, null, 'javax.swing.undo.UndoableEdit');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['hasBeenDone','alive']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.hasBeenDone=true;
this.alive=true;
}, 1);

Clazz_newMeth(C$, 'die$',  function () {
this.alive=false;
});

Clazz_newMeth(C$, 'undo$',  function () {
if (!this.canUndo$()) {
throw Clazz_new_(Clazz_load('javax.swing.undo.CannotUndoException'));
}this.hasBeenDone=false;
});

Clazz_newMeth(C$, 'canUndo$',  function () {
return this.alive && this.hasBeenDone ;
});

Clazz_newMeth(C$, 'redo$',  function () {
if (!this.canRedo$()) {
throw Clazz_new_(Clazz_load('javax.swing.undo.CannotRedoException'));
}this.hasBeenDone=true;
});

Clazz_newMeth(C$, 'canRedo$',  function () {
return this.alive && !this.hasBeenDone ;
});

Clazz_newMeth(C$, 'addEdit$javax_swing_undo_UndoableEdit',  function (anEdit) {
return false;
});

Clazz_newMeth(C$, 'replaceEdit$javax_swing_undo_UndoableEdit',  function (anEdit) {
return false;
});

Clazz_newMeth(C$, 'isSignificant$',  function () {
return true;
});

Clazz_newMeth(C$, 'getPresentationName$',  function () {
return "";
});

Clazz_newMeth(C$, 'getUndoPresentationName$',  function () {
var name=this.getPresentationName$();
if (!"".equals$O(name)) {
name=$I$(1).getString$O("AbstractUndoableEdit.undoText") + " " + name ;
} else {
name=$I$(1).getString$O("AbstractUndoableEdit.undoText");
}return name;
});

Clazz_newMeth(C$, 'getRedoPresentationName$',  function () {
var name=this.getPresentationName$();
if (!"".equals$O(name)) {
name=$I$(1).getString$O("AbstractUndoableEdit.redoText") + " " + name ;
} else {
name=$I$(1).getString$O("AbstractUndoableEdit.redoText");
}return name;
});

Clazz_newMeth(C$, 'toString',  function () {
return C$.superclazz.prototype.toString.apply(this, []) + " hasBeenDone: " + this.hasBeenDone + " alive: " + this.alive ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.undo"),I$=[[0,'java.util.ArrayList']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "CompoundEdit", null, 'javax.swing.undo.AbstractUndoableEdit');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['inProgress'],'O',['edits','java.util.List']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
this.inProgress=true;
this.edits=Clazz_new_($I$(1,1));
}, 1);

Clazz_newMeth(C$, 'undo$',  function () {
C$.superclazz.prototype.undo$.apply(this, []);
for (var i=this.edits.size$(); --i >= 0; ) {
var e=this.edits.get$I(i);
e.undo$();
}
});

Clazz_newMeth(C$, 'redo$',  function () {
C$.superclazz.prototype.redo$.apply(this, []);
for (var i=this.edits.size$(); --i >= 0; ) {
this.edits.get$I(i).redo$();
}
});

Clazz_newMeth(C$, 'lastEdit$',  function () {
var count=this.edits.size$();
return (count > 0 ? this.edits.get$I(count - 1) : null);
});

Clazz_newMeth(C$, 'die$',  function () {
for (var i=this.edits.size$(); --i >= 0; ) {
var e=this.edits.get$I(i);
e.die$();
}
C$.superclazz.prototype.die$.apply(this, []);
});

Clazz_newMeth(C$, 'addEdit$javax_swing_undo_UndoableEdit',  function (anEdit) {
if (!this.inProgress) {
return false;
} else {
var last=this.lastEdit$();
if (last == null ) {
this.edits.add$O(anEdit);
} else if (!last.addEdit$javax_swing_undo_UndoableEdit(anEdit)) {
if (anEdit.replaceEdit$javax_swing_undo_UndoableEdit(last)) {
this.edits.remove$I(this.edits.size$() - 1);
}this.edits.add$O(anEdit);
}return true;
}});

Clazz_newMeth(C$, 'end$',  function () {
this.inProgress=false;
});

Clazz_newMeth(C$, 'canUndo$',  function () {
return !this.isInProgress$() && C$.superclazz.prototype.canUndo$.apply(this, []) ;
});

Clazz_newMeth(C$, 'canRedo$',  function () {
return !this.isInProgress$() && C$.superclazz.prototype.canRedo$.apply(this, []) ;
});

Clazz_newMeth(C$, 'isInProgress$',  function () {
return this.inProgress;
});

Clazz_newMeth(C$, 'isSignificant$',  function () {
for (var i=this.edits.size$(); --i >= 0; ) {
if (this.edits.get$I(i).isSignificant$()) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'getPresentationName$',  function () {
var last=this.lastEdit$();
if (last != null ) {
return last.getPresentationName$();
} else {
return C$.superclazz.prototype.getPresentationName$.apply(this, []);
}});

Clazz_newMeth(C$, 'getUndoPresentationName$',  function () {
var last=this.lastEdit$();
if (last != null ) {
return last.getUndoPresentationName$();
} else {
return C$.superclazz.prototype.getUndoPresentationName$.apply(this, []);
}});

Clazz_newMeth(C$, 'getRedoPresentationName$',  function () {
var last=this.lastEdit$();
if (last != null ) {
return last.getRedoPresentationName$();
} else {
return C$.superclazz.prototype.getRedoPresentationName$.apply(this, []);
}});

Clazz_newMeth(C$, 'toString',  function () {
return C$.superclazz.prototype.toString.apply(this, []) + " inProgress: " + this.inProgress + " edits: " + this.edits ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("javax.swing.undo"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "UndoableEdit");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:20 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme"),p$1={},p$2={},I$=[[0,['jme.io.JMEWriter','.SupportedOutputFileFormat'],'jme.canvas.ColorManager','Thread','java.awt.Color',['jme.JME','.Options'],['jme.JME','.Touched'],'jme.canvas.ReactionArrow','jme.event.JMEevent',['jme.core.JMECore','.Parameters'],'java.awt.Dimension','jme.JMEmolList','java.util.ArrayList','jme.io.SDFstack','jme.io.TextTransfer',['jme.JME','.StringWrapper'],'javax.swing.JTextField','jme.JMEmol','jme.event.InspectorEvent','jme.io.FileDropper','java.awt.dnd.DragSource','jme.gui.GUI','jme.util.ChangeManager','jme.gui.Actions','javax.swing.JPopupMenu',['jme.JME','.CopyPasteAction'],'javax.swing.JMenuItem','jme.io.JMEWriter','jme.io.JMEReader','jme.gui.JMEBuilder','jme.canvas.Graphical2DObject','jme.canvas.Graphical2DObjectGroup',['jme.io.JMEWriter','.MolFileOrRxnParameters'],['jme.io.JMEReader','.SupportedInputFileFormat'],'jme.util.JMEUtil','jme.ocl.OclAdapter',['jme.JMEmol','.ReactionRole'],['jme.util.Box','.Axis'],['java.awt.geom.Rectangle2D','.Double'],'jme.canvas.PreciseImage','jme.core.Atom','java.awt.image.BufferedImage','java.awt.Point','java.awt.RenderingHints','java.awt.BasicStroke','java.awt.Toolkit','javax.swing.SwingUtilities','jme.gui.AlertBox','jme.gui.MultiBox','jme.gui.QueryBox',['java.awt.geom.Point2D','.Double'],['jme.JME','.SavedState'],'java.awt.event.MouseEvent',['jme.JMEmolList','.EnsembleAtom'],'jme.core.AtomBondCommon',['jme.JMEmolList','.EnsembleBond'],'java.io.ByteArrayOutputStream','java.net.URL','java.io.FileInputStream','java.awt.datatransfer.DataFlavor','javax.swing.JFrame','java.awt.event.WindowAdapter']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JME", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.JPanel', ['java.awt.event.ActionListener', 'java.awt.event.MouseWheelListener', 'java.awt.event.MouseListener', 'java.awt.event.KeyListener', 'java.awt.event.MouseMotionListener', 'java.beans.PropertyChangeListener', 'java.awt.dnd.DragGestureListener', 'jme.event.JMEStatusListener']);
C$.$classes$=[['HTML5Applet',9],['SavedState',8],['Touched',0],['CopyPasteAction',25],['StringWrapper',1],['Options',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.options=Clazz_new_($I$(5,1),[this, null]);
this.lastTouched=Clazz_new_($I$(6,1),[this, null]);
this.newTouched=Clazz_new_($I$(6,1),[this, null]);
this.keyTouched=Clazz_new_($I$(6,1),[this, null]);
this.active_an=3;
this.infoText=null;
this.customDefaultInfoText="";
this.arrowWidth=48;
this.reactionArrow=Clazz_new_($I$(7,1).c$$D,[72]);
this.smallerIconsForDepictMode=0.6;
this.bgColor=$I$(4).lightGray;
this.brightColor=this.bgColor.brighter$();
this.leftMenuAtomColor=null;
this.clipboardFormat=$I$(1).MOL;
this.afterStructureChangeEvent=Clazz_new_($I$(8,1));
this.isFullScreen=false;
this.fullScreenEnterOrExit=false;
this.appletHasBeenResized=false;
this.previousScaledScreenArea=null;
this.molecularAreaLineWidth=1.0;
this.molecularAreaAntiAlias=true;
this.depict=false;
this.params=Clazz_new_($I$(9,1));
this.pasteFromSDFstack=false;
this.jmeh=false;
this.canvasBg=$I$(4).white;
this.activeMarkerColorIndex=1;
this.atomBgColors=null;
this.molecularAreaScalePixelsPerCoord=1.0;
this.minmolecularAreaScale=0.3;
this.maxMolecularAreaScale=10;
this.menuScale=1.0;
this.minMenuScale=0.7;
this.maxMenuScale=2;
this.nocenter=false;
this.showAtomNumbers=false;
this.allowFullScreenToggle=true;
this.molecularArea=Clazz_new_($I$(10,1));
this.notifyStructuralChangeJSfunction=null;
this.notifyAtomHighLightJSfunction=null;
this.prePasteJSfunction=null;
this.pasteJLabel=null;
this.mouseWasOverAction=0;
this.colorManager=Clazz_new_($I$(2,1));
this.lastAction=0;
this.nonFullScreenSize=Clazz_new_($I$(10,1));
this.newMolecule=false;
this.afterClear=false;
this.mouseShift=false;
this.smilesBox=null;
this.atomxBox=null;
this.aboutBox=null;
this.movingAtom=false;
this.molText=null;
this.saved=0;
this.moleculePartsList=Clazz_new_($I$(11,1));
this.canMultipleUndo=true;
this.molStack=Clazz_new_($I$(12,1));
this.sdfStack=Clazz_new_($I$(13,1));
this.stackPointer=-1;
this.revertStereo=false;
this.resetExtendAtomMark=true;
this.keyboradInputMark=-100;
this.markFromKeyboardInput=false;
this.clipBoardManager=Clazz_new_($I$(14,1));
this.functionalGroups=Clazz_array(String, -1, ["-C(=O)OH", "-C(=O)OMe", "-OC(=O)Me", "-C(=O)N", "-NC=O", "-CMe3", "-CF3", "-CCl3", "-NO2", "-SO2-NH2", "-NH-SO2-Me", "-NMe2", "-C#N", "-C#CH", "-C#C-Me"]);
this.bondRubberBanding=false;
this.saveCurrentState=false;
this.searchInchiKeyMenuJLabel="Search chemical structure (through InChIKey)";
this.isPostInitialized=false;
this.menuXShortcuts=null;
this.sdfPastedMessage=Clazz_new_($I$(15,1),[this, null]);
this.previousTouchedAtomForHighlight=0;
this.previousTouchedBondForHighlight=0;
this.previousActualMoleculePartIndex=0;
this.lastValidColorIndex=1;
this.atomicSymbol=Clazz_new_($I$(16,1).c$$S$I,["H", 8]);
},1);

C$.$fields$=[['Z',['isFullScreen','fullScreenEnterOrExit','appletHasBeenResized','molecularAreaAntiAlias','depict','pasteFromSDFstack','jmeh','nocenter','showAtomNumbers','allowFullScreenToggle','movePossible','newMolecule','afterClear','mouseShift','movingAtom','canMultipleUndo','revertStereo','resetExtendAtomMark','markFromKeyboardInput','bondRubberBanding','mouseDownWasUsed','saveCurrentState','alignMoleculesHasBeenPerformedByReadingStructure','application','embedded','isPostInitialized','headless','structureChangedByAction'],'D',['smallerIconsForDepictMode','molecularAreaScalePixelsPerCoord','minmolecularAreaScale','maxMolecularAreaScale','menuScale','minMenuScale','maxMenuScale','nonFullScreenMenuScale','nonFullFrameMolecularAreaScalePixelsPerCoord'],'F',['molecularAreaLineWidth'],'I',['action','active_an','arrowWidth','activeMarkerColorIndex','mouseWasOverAction','lastAction','mouseX','mouseY','saved','stackPointer','keyboradInputMark','previousTouchedAtomForHighlight','previousTouchedBondForHighlight','previousActualMoleculePartIndex','lastValidColorIndex'],'J',['lastRotation'],'S',['infoText','customDefaultInfoText','atomBgColors','pasteJLabel','molText','searchInchiKeyMenuJLabel','menuXShortcuts'],'O',['options','jme.JME.Options','lastTouched','jme.JME.Touched','+newTouched','+keyTouched','reactionParts','int[][]','reactionArrow','jme.canvas.ReactionArrow','bgColor','java.awt.Color','+brightColor','+leftMenuAtomColor','clipboardFormat','jme.io.JMEWriter.SupportedOutputFileFormat','afterStructureChangeEvent','jme.event.JMEevent','previousScaledScreenArea','java.awt.geom.Rectangle2D.Double','params','jme.core.JMECore.Parameters','canvasBg','java.awt.Color','dimension','java.awt.Dimension','molecularAreaImage','jme.canvas.PreciseImage','molecularArea','java.awt.Dimension','topMenuImage','jme.canvas.PreciseImage','+leftMenuImage','+infoAreaImage','+rightBorderImage','notifyStructuralChangeJSfunction','jme.js.JSFunction','+notifyAtomHighLightJSfunction','+prePasteJSfunction','colorManager','jme.canvas.ColorManager','nonFullScreenSize','java.awt.Dimension','actions','jme.gui.Actions','builder','jme.gui.JMEBuilder','nonFullFrameSize','java.awt.Dimension','nonFullFrameLocation','java.awt.Point','smilesBox','jme.gui.MultiBox','+atomxBox','+aboutBox','queryBox','jme.gui.QueryBox','activeMol','jme.JMEmol','activeGraphicalObject','jme.canvas.Graphical2DObject','inspectorEvent','jme.event.InspectorEvent','moleculePartsList','jme.JMEmolList','smol','jme.JMEmol','molChangeManager','jme.util.ChangeManager','molStack','java.util.List','sdfStack','jme.io.SDFstack','apointx','int[]','+apointy','+bpointx','+bpointy','clipBoardManager','jme.io.TextTransfer','copyPasteJPopupMenuMol','javax.swing.JPopupMenu','+copyPasteJPopupMenuReaction','+touchedMolPopuMenu','functionalGroups','String[]','pasteAction','jme.io.TextTransfer.PasteAction','myFrame','javax.swing.JFrame','sdfPastedMessage','jme.JME.StringWrapper','atomicSymbol','javax.swing.JTextField','gui','jme.gui.GUI']]
,['Z',['isStandAloneApplication','isJavaScript'],'D',['precision'],'S',['programName','parserImpl','setChiralFlagAction','unSetChiralFlagAction','changeAtomChargeAction','changeAtomMapAction','changeAtomMarkAction','autoAtomMapMoleculeAction','deleteAtomMapMoleculeAction'],'O',['copyright','String[]','color','java.awt.Color[]','oclAdapter','jme.ocl.OclAdapter']]]

Clazz_newMeth(C$, 'setLastAction$I',  function (a) {
this.lastAction=a;
});

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$javax_swing_JFrame$Z$SA.apply(this, [null, false, null]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JFrame',  function (frame) {
C$.c$$javax_swing_JFrame$Z$SA.apply(this, [frame, false, null]);
}, 1);

Clazz_newMeth(C$, 'c$$javax_swing_JFrame$Z$SA',  function (frame, embedded, args) {
Clazz_super_(C$, this);
this.embedded=embedded;
this.activeMol=Clazz_new_($I$(17,1).c$$jme_JME$jme_core_JMECore_Parameters,[this, this.params]);
this.lastTouched.mol=this.activeMol;
this.newTouched.mol=this.activeMol;
this.moleculePartsList.add$O(this.activeMol);
this.inspectorEvent=Clazz_new_($I$(18,1).c$$jme_JME,[this]);
this.setFrame$javax_swing_JFrame(frame);
var doInit=true;
if (args.length > 0 && !args[0].startsWith$S("-") ) {
if (args[0].indexOf$S("$NOINIT$") >= 0) {
doInit=false;
}}if (doInit) this.initialize$SA(args);
}, 1);

Clazz_newMeth(C$, 'setFrame$javax_swing_JFrame',  function (frame) {
if (frame == null ) return;
this.myFrame=frame;
C$.isStandAloneApplication=true;
frame.setName$S("JME");
frame.add$S$java_awt_Component("Center", this);
frame.addKeyListener$java_awt_event_KeyListener(this);
this.addKeyListener$java_awt_event_KeyListener(this);
this.addMouseListener$java_awt_event_MouseListener(this);
this.addMouseMotionListener$java_awt_event_MouseMotionListener(this);
System.out.println$S("JME frame " + frame);
Clazz_new_($I$(19,1).c$$java_beans_PropertyChangeListener,[this]);
this.application=true;
System.out.println$S("JME frame OK " + frame);
});

Clazz_newMeth(C$, 'initialize$SA',  function (args) {
this.params.keepSameCoordinatesForOutput=false;
this.params.internalBondScalingForInput=true;
this.params.showAtomMapNumberWithBackgroundColor=false;
this.options.registerJS$jme_JME(this);
if (args.length > 0 && !args[0].startsWith$S("-") ) {
this.options$S(args[0]);
}var ds=Clazz_new_($I$(20,1));
ds.createDefaultDragGestureRecognizer$java_awt_Component$I$java_awt_dnd_DragGestureListener(this, 1, this);
var parent=this.getParent$();
if (parent != null ) {
parent.addMouseWheelListener$java_awt_event_MouseWheelListener(this);
}this.dimension=this.getSize$();
this.setLayout$java_awt_LayoutManager(null);
this.options.getAppletOptions$jme_JME$SA(this, args);
this.gui=Clazz_new_($I$(21,1).c$$jme_JME,[this]);
this.action=202;
this.validate$();
System.out.println$S("JME.init dim " + this.getSize$());
this.mustRedrawEverything$();
if (this.myFrame != null ) {
this.myFrame.setResizable$Z(true);
this.myFrame.setVisible$Z(true);
}if (this.canMultipleUndo) {
this.molChangeManager=Clazz_new_($I$(22,1));
this.postSave$();
}this.info$S(C$.programName + " " + "Molecular Editor by Peter Ertl and Bruno Bienfait" );
});

Clazz_newMeth(C$, 'start$',  function () {
this.start$SA(Clazz_array(String, [0]));
});

Clazz_newMeth(C$, 'start$SA',  function (args) {
this.actions=Clazz_new_($I$(23,1).c$$jme_JME,[this]);
this.actions.setActions$();
var pt=0;
if (args.length > 0 && !args[0].startsWith$S("-") ) ++pt;
this.dimension=this.getSize$();
System.out.println$S("JME start " + this.dimension);
var repaint=true;
if (this.options.jmeString != null ) {
this.readMolecule$S$Z(this.options.jmeString, repaint);
if (this.atomBgColors != null  && this.activeMol != null  ) this.activeMol.setAtomColors$S$I(this.atomBgColors, 0);
this.postSave$();
} else if (this.options.molString != null ) {
this.readMolFile$S$Z(this.options.molString, repaint);
this.postSave$();
} else if (this.options.genericChemicalInputFromInit != null  && this.options.useOpenChemLib ) {
this.setMustRedrawMolecularArea$Z(false);
this.handleReadGenericInput$S$jme_js_AsyncCallback$Z$Z(this.options.genericChemicalInputFromInit, null, repaint, true);
}this.process$SA$I(args, pt);
this.repaint$();
});

Clazz_newMeth(C$, 'process$SA$I',  function (args, i) {
if (i < 0 || i >= args.length ) return;
for (; i < args.length; i++) {
if (args[i].startsWith$S("-f")) {
this.readDroppedTextFile$S(args[++i]);
} else if (args[i].startsWith$S("-o")) {
this.options$S(args[++i]);
} else if (args[i].startsWith$S("-c")) {
this.options.callback$O$O(args[++i], args[++i]);
}}
});

Clazz_newMeth(C$, 'makeErrorMessage$Exception',  function (e) {
var errorMsg=null;
if (Clazz_instanceOf(e, "java.lang.NumberFormatException")) {
errorMsg="Number parsing";
} else if (Clazz_instanceOf(e, "java.util.NoSuchElementException")) {
errorMsg="Not enough data";
}if (errorMsg == null ) {
errorMsg=e.toString();
} else if (e.getMessage$() != null ) {
errorMsg+=":" + e.getMessage$();
}return errorMsg;
}, 1);

Clazz_newMeth(C$, 'getMolecularAreaLineWidth$',  function () {
return this.molecularAreaLineWidth;
});

Clazz_newMeth(C$, 'setMolecularAreaLineWidth$F',  function (molecularAreaLineWidth) {
this.molecularAreaLineWidth=molecularAreaLineWidth;
this.drawMolecularAreaRightNow$();
});

Clazz_newMeth(C$, 'isMolecularAreaAntiAlias$',  function () {
return this.molecularAreaAntiAlias;
});

Clazz_newMeth(C$, 'setMolecularAreaAntiAlias$Z',  function (molecularAreaAntiAlias) {
this.molecularAreaAntiAlias=molecularAreaAntiAlias;
this.drawMolecularAreaRightNow$();
});

Clazz_newMeth(C$, 'setDirectSizeForTesting$I$I',  function (width, height) {
this.setDimension$I$I(width, height);
this.updateMyMolecularAreaSize$();
});

Clazz_newMeth(C$, 'setDimension$I$I',  function (width, height) {
if (this.dimension == null ) {
this.dimension=Clazz_new_($I$(10,1));
}this.dimension.setSize$I$I(width, height);
return this;
});

Clazz_newMeth(C$, 'getPasteJLabel$',  function () {
return this.pasteJLabel;
});

Clazz_newMeth(C$, 'setPasteJLabel$S',  function (pasteJLabel) {
this.pasteJLabel=pasteJLabel;
this.copyPasteJPopupMenuMol=this.createCopyPasteJPopupMenu$Z(false);
});

Clazz_newMeth(C$, 'mapActionToAtomNumberXorR$I',  function (action) {
var result=$I$(23).mapActionToAtomNumberX$I(action);
return (result == 32 && !this.options.xButton  && this.options.rButton  ? 33 : result);
});

Clazz_newMeth(C$, 'getLeftMenuCellCount$',  function () {
return 9 + (this.options.rButton ? 1 : 0) + (this.options.xButton ? 1 : 0) ;
});

Clazz_newMeth(C$, 'numberOfMolecules$',  function () {
return this.moleculePartsList.size$();
});

Clazz_newMeth(C$, 'getMolecularAreaScale$',  function () {
return this.molecularAreaScalePixelsPerCoord;
});

Clazz_newMeth(C$, 'setMolecularAreaScale$D',  function (newScale) {
if (newScale != this.molecularAreaScalePixelsPerCoord ) {
var dim1=this.getMolecularAreaCoordBoundingBox$();
this.molecularAreaScalePixelsPerCoord=newScale;
var dim2=this.getMolecularAreaCoordBoundingBox$();
this.recenterMoleculesAfterMolecularAreaChange$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double(dim1, dim2);
this.redrawMolecularAreaOnly$();
}});

Clazz_newMeth(C$, 'recenterMoleculesAfterMolecularAreaChange$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double',  function (before, after) {
var moveX=after.getCenterX$() - before.getCenterX$();
var moveY=after.getCenterY$() - before.getCenterY$();
this.graphicalObjectList$().moveXY$D$D(moveX, moveY);
});

Clazz_newMeth(C$, 'getMenuScale$',  function () {
return this.menuScale;
});

Clazz_newMeth(C$, 'setMenuScale$D',  function (menuScale) {
if (menuScale != this.menuScale ) {
;this.menuScale=menuScale;
this.resetAllGraphics$();
this.repaint$();
}});

Clazz_newMeth(C$, 'setNewJButtonStatus$Z',  function (newStatus) {
this.newMolecule=newStatus;
this.gui.mustReDrawTopMenu=true;
this.repaint$();
});

Clazz_newMeth(C$, 'getNewJButtonStatus$',  function () {
return this.newMolecule;
});

Clazz_newMeth(C$, 'moveXY$jme_JMEmol$I$I$I',  function (mol, atomIndex, x, y) {
mol.moveXY$I$D$D(atomIndex, this.screenToDrawingX$D(x), this.screenToDrawingY$D(y));
});

Clazz_newMeth(C$, 'createCopyPasteJPopupMenu$Z',  function (isReaction) {
var popup=Clazz_new_($I$(24,1));
var smilesOrSmirks="SMILES";
var molOrReaction="MOL";
var molOrReactionForPasting="MOL or SDF";
var hasAtom=Boolean.valueOf$Z((!((this.isMolecularAreEmpty$()).$c())));
if (isReaction) {
smilesOrSmirks="SMIRKS";
molOrReaction="RXN";
molOrReactionForPasting=molOrReaction;
}if (this.options.useOpenChemLib) {
molOrReactionForPasting+=" or " + smilesOrSmirks;
if (!isReaction && this.options.useOclIdCode ) {
molOrReactionForPasting+=" or OCL ID code";
}}this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy " + "as " + smilesOrSmirks , $I$(25).SMILES);
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy " + "as " + molOrReaction , $I$(25).MOL);
if (!isReaction) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as " + molOrReaction + " V3000" , $I$(25).MOL_V3000);
if (this.canComputeInchi$()) {
if (this.options.exportInchi) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as InChI", $I$(25).INCHI);
}if (this.options.exportInchiKey) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as InChI key", $I$(25).INCHI_KEY);
}if (this.options.searchInchiKey) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), this.searchInchiKeyMenuJLabel, $I$(25).SEARCH_INCHI_KEY);
}if (this.options.exportInchiAuxInfo) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as InChI auxinfo", $I$(25).INCHI_AUXINFO);
}}}this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as JME", $I$(25).JME);
if (this.options.useOpenChemLib && this.options.exportSVG && !isReaction  ) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as OCL Scalar Vector Graphics", $I$(25).SVG);
}if (C$.isJavaScript && this.options.exportSVG ) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as raw Scalar Vector Graphics", $I$(25).RAW_STRING_GRAPHIC);
}if (this.options.useOpenChemLib && this.options.useOclIdCode && !isReaction  ) {
this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, (hasAtom).valueOf(), "Copy as OCL ID code", $I$(25).OCLCODE);
}this.subclassAddToCopyMenu$javax_swing_JPopupMenu$Z(popup, (hasAtom).valueOf());
if (this.options.paste) {
popup.addSeparator$();
var localPasteJLabel=this.getPasteJLabel$();
if (localPasteJLabel == null ) {
localPasteJLabel="Paste " + molOrReactionForPasting;
}this.addMenuItem$javax_swing_JPopupMenu$Z$S$O(popup, true, localPasteJLabel, $I$(25).PASTE);
}this.add$java_awt_Component(popup);
return popup;
});

Clazz_newMeth(C$, 'addMenuItem$javax_swing_JPopupMenu$Z$S$O',  function (popup, enabled, text, cmd) {
var mi=Clazz_new_($I$(26,1).c$$S,[text]);
mi.setActionCommand$S(cmd.toString());
mi.addActionListener$java_awt_event_ActionListener(this);
mi.setEnabled$Z(!enabled);
popup.add$javax_swing_JMenuItem(mi);
});

Clazz_newMeth(C$, 'subclassAddToCopyMenu$javax_swing_JPopupMenu$Z',  function (popup, hasAtom) {
});

Clazz_newMeth(C$, 'canComputeInchi$',  function () {
return true;
});

Clazz_newMeth(C$, 'activeMolIndex$',  function () {
return this.moleculePartsList.indexOf$O(this.activeMol);
});

Clazz_newMeth(C$, 'createMolJPopupMenu$I$I',  function (eventX, eventY) {
var mol=this.activeMol;
var popup=Clazz_new_($I$(24,1));
var item=Clazz_new_([mol.getChiralFlag$().booleanValue$() ? C$.unSetChiralFlagAction : C$.setChiralFlagAction],$I$(26,1).c$$S);
item.setEnabled$Z(mol.canBeChiral$());
popup.add$javax_swing_JMenuItem(item);
item.addActionListener$java_awt_event_ActionListener(this);
if (mol.touchedAtom > 0) {
this.inspectorEvent.reset$();
this.inspectorEvent.atomIndex=mol.touchedAtom;
this.inspectorEvent.mol=mol;
this.inspectorEvent.x=eventX;
this.inspectorEvent.y=eventY;
this.inspectorEvent.molIndex=this.activeMolIndex$();
}var showAtomMappingToolsInMenu=this.params.number || this.options.autonumber || this.options.reaction  ;
if (showAtomMappingToolsInMenu && mol.touchedAtom > 0 ) {
item=Clazz_new_($I$(26,1).c$$S,[this.params.mark ? C$.changeAtomMarkAction : C$.changeAtomMapAction]);
item.addActionListener$java_awt_event_ActionListener(this.inspectorEvent);
popup.add$javax_swing_JMenuItem(item);
}if (mol.touchedAtom > 0) {
item=Clazz_new_($I$(26,1).c$$S,[C$.changeAtomChargeAction]);
item.addActionListener$java_awt_event_ActionListener(this.inspectorEvent);
popup.add$javax_swing_JMenuItem(item);
}if (this.options.useOpenChemLib && !mol.has2Dcoordinates$() ) {
item=Clazz_new_($I$(26,1).c$$S,["Compute 2D coordinates"]);
popup.add$javax_swing_JMenuItem(item);
item.addActionListener$java_awt_event_ActionListener(this);
}item=Clazz_new_($I$(26,1).c$$S,["Delete hydrogens"]);
item.setEnabled$Z(mol.hasHydrogen$());
popup.add$javax_swing_JMenuItem(item);
item.addActionListener$java_awt_event_ActionListener(this);
if (showAtomMappingToolsInMenu) {
item=Clazz_new_($I$(26,1).c$$S,[C$.autoAtomMapMoleculeAction]);
item.addActionListener$java_awt_event_ActionListener(this);
popup.add$javax_swing_JMenuItem(item);
item=Clazz_new_($I$(26,1).c$$S,[C$.deleteAtomMapMoleculeAction]);
item.addActionListener$java_awt_event_ActionListener(this);
popup.add$javax_swing_JMenuItem(item);
item.setEnabled$Z(mol.getMaxAtomMap$() > 0);
}item=Clazz_new_($I$(26,1));
var label="Set coordination bond";
item.setEnabled$Z(false);
if (mol.touchedBond > 0) {
var bond=mol.bonds[mol.touchedBond];
if (bond.isSingle$() || bond.isCoordination$() ) {
label=bond.isCoordination$() ? "Unset coordination bond" : "Set coordination bond";
this.inspectorEvent.reset$();
this.inspectorEvent.bondIndex=mol.touchedBond;
this.inspectorEvent.mol=mol;
this.inspectorEvent.x=eventX;
this.inspectorEvent.y=eventY;
this.inspectorEvent.molIndex=this.activeMolIndex$();
item.setEnabled$Z(true);
item.addActionListener$java_awt_event_ActionListener(this);
}}item.setText$S(label);
popup.add$javax_swing_JMenuItem(item);
return popup;
});

Clazz_newMeth(C$, 'mustRedrawNothing$',  function () {
this.mustRedrawImages$Z(false);
});

Clazz_newMeth(C$, 'mustRedrawEverything$',  function () {
this.mustRedrawImages$Z(true);
});

Clazz_newMeth(C$, 'mustRedrawImages$Z',  function (yesOrNo) {
if (this.gui == null ) return;
this.gui.mustReDrawLeftMenu=yesOrNo;
this.gui.mustReDrawTopMenu=yesOrNo;
this.setMustRedrawMolecularArea$Z(yesOrNo);
this.gui.mustReDrawInfo=yesOrNo;
this.gui.mustReDrawRightBorderImage=yesOrNo;
});

Clazz_newMeth(C$, 'mustReDrawMolecularArea$',  function () {
this.setMustRedrawMolecularArea$Z(true);
});

Clazz_newMeth(C$, 'redrawEverything$',  function () {
this.mustRedrawEverything$();
this.repaint$();
});

Clazz_newMeth(C$, 'getColor$',  function () {
return this.bgColor;
});

Clazz_newMeth(C$, 'activateQuery$',  function () {
if (this.action != 107) {
this.action=107;
this.repaint$();
}});

Clazz_newMeth(C$, 'handleAdditionalParameters$',  function () {
});

Clazz_newMeth(C$, 'getCopyToClipboardFormat$',  function () {
return this.clipboardFormat;
});

Clazz_newMeth(C$, 'setCopyToClipboardFormat$S',  function (format) {
this.clipboardFormat=$I$(1).valueOf$S(format);
});

Clazz_newMeth(C$, 'postInitializeIfNeeded$',  function () {
if (!this.isPostInitialized) {
this.isPostInitialized=true;
this.postInitialize$();
}});

Clazz_newMeth(C$, 'postInitialize$',  function () {
});

Clazz_newMeth(C$, 'stop$',  function () {
if (this.smilesBox != null ) this.smilesBox.dispose$();
if (this.atomxBox != null ) this.atomxBox.dispose$();
if (this.aboutBox != null ) this.aboutBox.dispose$();
if (this.queryBox != null ) this.queryBox.dispose$();
if (this.actions != null ) this.actions.dispose$();
if (this.gui != null ) this.gui.dispose$();
this.builder=null;
});

Clazz_newMeth(C$, 'ping$',  function () {
});

Clazz_newMeth(C$, 'smiles$',  function () {
var smiles;
try {
smiles=this.getSmiles$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
this.info$S(e.getMessage$());
return null;
} else {
throw e;
}
}
return smiles;
});

Clazz_newMeth(C$, 'updateReactionRoles$',  function () {
this.moleculePartsList.isReaction=this.options.reaction;
var firstChangedIndex=-1;
if (this.options.reaction) {
for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var previousRole=mol.getReactionRole$();
var newRole=this.computeReactionRole$jme_JMEmol(mol);
mol.setReactionRole$I(newRole);
if (firstChangedIndex == -1 && newRole != previousRole ) {
firstChangedIndex=this.moleculePartsList.indexOf$O(mol);
}}
}return firstChangedIndex;
});

Clazz_newMeth(C$, 'computeReactionRole$jme_JMEmol',  function (mol) {
if (mol.nAtoms$() == 0) {
return 0;
}var bbox=mol.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
var reactionArrowBox=this.reactionArrow.updateBoundingBox$();
if (bbox.getCenterX$() < reactionArrowBox.x ) return 1;
 else if (bbox.getCenterX$() > reactionArrowBox.x + reactionArrowBox.width ) return 3;
 else return 2;
});

Clazz_newMeth(C$, 'nonisomericSmiles$',  function () {
var originalStereo=this.options.stereo;
this.options.stereo=false;
var smiles=this.getSmiles$();
this.options.stereo=originalStereo;
return smiles;
});

Clazz_newMeth(C$, 'getSmiles$',  function () {
return this.getSmiles$jme_core_JMECore_Parameters(null);
});

Clazz_newMeth(C$, 'getSmiles$jme_core_JMECore_Parameters',  function (params) {
this.updateReactionRoles$();
return $I$(27,"generateSmilesOrSmirks$jme_core_JMECore_Parameters$jme_JMEmolList",[params == null  ? this.params : params, this.moleculePartsList]);
});

Clazz_newMeth(C$, 'reset$Z',  function (repaint) {
this.action=202;
this.newMolecule=false;
this.clearMyMolecularContent$();
this.clearInfo$();
this.molText=null;
this.resetMolecularAreaScale$();
this.recordAfterStructureChangedEvent$S("reset");
if (repaint) this.repaint$();
});

Clazz_newMeth(C$, 'repaint$',  function () {
if (!this.headless && this.gui != null  ) C$.superclazz.prototype.repaint$.apply(this, []);
});

Clazz_newMeth(C$, 'reset$',  function () {
this.reset$Z(true);
});

Clazz_newMeth(C$, 'resetMolecularAreaScale$',  function () {
if (this.isFullScreen$()) {
this.molecularAreaScalePixelsPerCoord=3.0;
} else {
this.molecularAreaScalePixelsPerCoord=1.0;
}});

Clazz_newMeth(C$, 'clearMyMolecularContent$',  function () {
this.activeMol=Clazz_new_($I$(17,1).c$$jme_JME$jme_core_JMECore_Parameters,[this, this.params]);
this.moleculePartsList.removeAll$();
this.moleculePartsList.add$O(this.activeMol);
this.molText=null;
this.mustReDrawMolecularArea$();
});

Clazz_newMeth(C$, 'clear$',  function () {
this.clear$Z(true);
});

Clazz_newMeth(C$, 'clear$Z',  function (recordEvent) {
this.action=202;
this.newMolecule=false;
this.clearInfo$();
if (this.moleculePartsList.size$() == 0) return;
this.moleculePartsList.remove$O(this.activeMol);
if (this.moleculePartsList.size$() > 0) {
this.activeMol=this.findClosestMol$I$I(this.scaleDrawingToScreen$D(this.activeMol.centerX$()), this.scaleDrawingToScreen$D(this.activeMol.centerY$()));
} else {
this.activeMol=Clazz_new_($I$(17,1).c$$jme_JME$jme_core_JMECore_Parameters,[this, this.params]);
this.moleculePartsList.add$O(this.activeMol);
}this.setMustRedrawMolecularArea$Z(true);
this.afterClear=true;
if (recordEvent) {
this.recordAfterStructureChangedEvent$S("clear");
}});

Clazz_newMeth(C$, 'jmeFile$',  function () {
this.updateReactionRoles$();
return $I$(27,"generateJMEstring$Z$java_awt_geom_Rectangle2D_Double$jme_JMEmolList",[false, this.computeMoleculeEnsembleCoordinate2DboundingBox$(), this.moleculePartsList]);
});

Clazz_newMeth(C$, 'findMaxAtomMapOfMoleculeParts$jme_JMEmolList$I',  function (moleculeParts, reactionRole) {
this.updateReactionRoles$();
return moleculeParts.findMaxAtomMap$I(reactionRole);
});

Clazz_newMeth(C$, 'readMolecule$S$Z',  function (molecule, repaint) {
var success;
try {
if (success=this.handleReadMolecule$S$Z(molecule, repaint)) {
} else {
this.repaint$();
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
success=false;
this.repaint$();
} else {
throw e;
}
}
return success;
});

Clazz_newMeth(C$, 'readMolecule$S',  function (molecule) {
this.readMolecule$S$Z(molecule, true);
});

Clazz_newMeth(C$, 'handleReadMolecule$S$Z',  function (molecule, repaint) {
var inputMolList=$I$(28).readJMEstringInput$S$jme_core_JMECore_Parameters(molecule, this.params);
if (inputMolList.isReallyEmpty$()) {
var err=inputMolList.getErrorMessage$();
if (err != null ) this.log$S(err);
return false;
}this.processIncomingMolecules$jme_JMEmolList$Z(inputMolList, repaint);
return true;
});

Clazz_newMeth(C$, 'showError$S',  function (errorMessage) {
this.showInfo$S("ERROR - " + errorMessage);
});

Clazz_newMeth(C$, 'getBuilder$jme_JMEmol',  function (mol) {
return p$2.getBuilder$jme_JMEmol$I.apply(this, [mol, this.action]);
}, p$2);

Clazz_newMeth(C$, 'getBuilder$jme_JMEmol$I',  function (mol, action) {
if (this.builder == null ) this.builder=Clazz_new_($I$(29,1).c$$jme_JME,[this]);
return this.builder.set$jme_JMEmol$I$Z(mol, action, this.mouseShift);
}, p$2);

Clazz_newMeth(C$, 'setTemplate$S$S',  function (t, name) {
this.afterClear=false;
try {
var err=p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).setTemplate$S(t);
if (err == null ) {
this.info$S(name);
this.action=2053;
} else {
this.showError$S(err);
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
this.info$S(e.getMessage$());
return;
} else {
throw e;
}
}
this.repaint$();
});

Clazz_newMeth(C$, 'setUserInterfaceBackgroundColor$java_awt_Color',  function (bgColor) {
this.bgColor=bgColor;
this.brightColor=this.bgColor.brighter$();
this.redrawEverything$();
});

Clazz_newMeth(C$, 'setLeftMenuAtomColor$java_awt_Color',  function (color) {
this.leftMenuAtomColor=color;
this.redrawEverything$();
});

Clazz_newMeth(C$, 'setUserInterfaceBackgroundColor$S',  function (hexColor) {
this.setUserInterfaceBackgroundColor$java_awt_Color($I$(2).parseHexColor$S(hexColor));
});

Clazz_newMeth(C$, 'setLeftMenuAtomColor$S',  function (hexColor) {
if (C$.color != null  && C$.color.length > 5 ) this.setLeftMenuAtomColor$java_awt_Color($I$(2).parseHexColor$S(hexColor));
 else this.setLeftMenuAtomColor$java_awt_Color(null);
});

Clazz_newMeth(C$, 'scaleAndCenterForDepictMode$jme_canvas_Graphical2DObjectGroup',  function (graphicalObjecList) {
var scaleToFit=this.molecularAreaScalePixelsPerCoord;
var margin=25.0;
var cdbb=C$.getChemicalDrawingPixelBoundingBox$jme_canvas_Graphical2DObjectGroup(graphicalObjecList);
var mabb=this.getMolecularAreaPixelDimensions$();
if (cdbb.isEmpty$() || mabb == null   || mabb.getWidth$() == 0   || mabb.getHeight$() == 0  ) {
return scaleToFit;
}var ratioWidth=mabb.getWidth$() / (cdbb.getWidth$() + margin);
var ratioHeight=mabb.getHeight$() / (cdbb.getHeight$() + margin);
if (ratioWidth == 0  || ratioHeight == 0  ) {
return scaleToFit;
}if (ratioWidth <= 1  || ratioHeight <= 1  ) {
scaleToFit=Math.min(ratioWidth, ratioHeight);
} else {
scaleToFit=this.molecularAreaScalePixelsPerCoord;
}this.centerAllMoleculesAsAgroup$jme_canvas_Graphical2DObjectGroup$D(graphicalObjecList, scaleToFit);
return scaleToFit;
});

Clazz_newMeth(C$, 'alignAndDistributeMolecules$I$I$I',  function (m1, m2, reactionRole) {
var nm=m2 - m1 + 1;
if (nm <= 0 || m1 >= this.moleculePartsList.size$()  || m2 >= this.moleculePartsList.size$() ) return;
var spaceBetweenMolecules=25.0;
var lastMove=0;
for (var i=m1; i <= m2; i++) {
var mol=this.moleculePartsList.get$I(i);
var moleculeBox=mol.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
var dx=moleculeBox.x * -1;
var dy=moleculeBox.y * -1;
if (reactionRole != 2) {
dx-=moleculeBox.getWidth$() / 2;
dy+=lastMove;
lastMove+=moleculeBox.getHeight$();
} else {
dy-=moleculeBox.getHeight$() / 2;
dx+=lastMove;
lastMove+=moleculeBox.getWidth$();
}mol.moveXY$D$D(dx, dy);
lastMove+=spaceBetweenMolecules;
}
});

Clazz_newMeth(C$, 'alignMolecules$I$I$I',  function (m1, m2, reactionRole) {
this.alignMolecules$I$I$I$Z(m1, m2, reactionRole, false);
});

Clazz_newMeth(C$, 'alignMolecules$I$I$I$Z',  function (m1, m2, reactionRole, donotAlignJustScale) {
if (this.nocenter) return;
var nm=m2 - m1 + 1;
if (nm <= 0 || m1 >= this.moleculePartsList.size$()  || m2 >= this.moleculePartsList.size$() ) return;
var RBOND=25.0;
var share=Clazz_array(Double.TYPE, [99]);
var sumx=0.0;
var sumy=0.0;
var maxy=0.0;
for (var i=m1; i <= m2; i++) {
if (this.moleculePartsList.get$I(i).nAtoms$() == 0) continue;
var moleculeBox=this.moleculePartsList.get$I(i).computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
sumx+=moleculeBox.getWidth$();
sumy+=moleculeBox.getHeight$();
maxy=Math.max(maxy, moleculeBox.getHeight$());
share[i]=moleculeBox.getWidth$();
if (reactionRole == 2) share[i]=moleculeBox.getHeight$();
}
if (this.isDepict$()) {
sumx+=RBOND * (nm + 1);
sumy+=RBOND * (nm + 1);
maxy+=RBOND;
}var scalex=1.0;
var scaley=1.0;
var widthAndHeight;
if (this.isDepict$()) widthAndHeight=this.getMolecularAreaPixelBoundingBox$();
 else widthAndHeight=this.getMolecularAreaCoordBoundingBox$();
var xsize=(widthAndHeight.width|0);
var ysize=(widthAndHeight.height|0);
if (reactionRole == 1 || reactionRole == 3 ) xsize=((xsize - this.arrowWidth)/2|0);
 else if (reactionRole == 2) ysize=(ysize/2|0);
if (sumx >= xsize ) scalex=(xsize) / sumx;
if (maxy >= ysize ) scaley=(ysize) / maxy;
var space=0.0;
if (this.isDepict$()) {
this.molecularAreaScalePixelsPerCoord=Math.min(scalex, scaley);
space=RBOND * xsize / sumx;
if (reactionRole == 2) space=RBOND * ysize / sumy;
}for (var i=m1; i <= m2; i++) {
if (reactionRole == 2) share[i]=share[i] * ysize / sumy;
 else share[i]=share[i] * xsize / sumx;
}
var shiftx=-xsize / 2.0;
var shifty=0.0;
if (reactionRole == 1) shiftx=-xsize - this.arrowWidth / 2.0;
 else if (reactionRole == 3) shiftx=this.arrowWidth / 2.0;
 else if (reactionRole == 2) {
shiftx=0.0;
shifty=-ysize;
}for (var i=m1; i <= m2; i++) {
if (this.isDepict$()) {
if (!true) {
this.moleculePartsList.get$I(i).scaleXY$D(this.molecularAreaScalePixelsPerCoord);
}this.moleculePartsList.get$I(i).center$();
}if (reactionRole == 2) shifty+=(share[i] / 2.0 + space);
 else shiftx+=(share[i] / 2.0 + space);
if (!donotAlignJustScale) {
this.moleculePartsList.get$I(i).moveXY$D$D(shiftx, shifty);
}if (reactionRole == 2) shifty+=share[i] / 2.0;
 else shiftx+=share[i] / 2.0;
}
});

Clazz_newMeth(C$, 'getChemicalDrawingPixelBoundingBox$jme_canvas_Graphical2DObjectGroup',  function (graphicalObjecList) {
var margin=12.5;
var boundingBox=$I$(30).newBoundingBox$jme_canvas_Graphical2DObject(graphicalObjecList);
if (boundingBox != null  && !boundingBox.isEmpty$() ) {
boundingBox.x-=margin;
boundingBox.y-=margin;
boundingBox.width+=margin * 2;
boundingBox.height+=margin * 2;
}return boundingBox;
}, 1);

Clazz_newMeth(C$, 'computeMoleculeEnsembleCoordinate2DboundingBox$',  function () {
return this.moleculePartsList.computeCoordinate2DboundingBox$();
});

Clazz_newMeth(C$, 'isMolecularAreEmpty$',  function () {
for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (mol.natoms > 0) return Boolean.valueOf$Z(true);
}
return Boolean.valueOf$Z(false);
});

Clazz_newMeth(C$, 'hasMarkedAtom$',  function () {
return this.moleculePartsList.hasMarkedAtom$();
});

Clazz_newMeth(C$, 'maximumScaleDisplayArea$',  function () {
var boundingBox=C$.getChemicalDrawingPixelBoundingBox$jme_canvas_Graphical2DObjectGroup(this.graphicalObjectList$());
if (boundingBox == null ) return -1;
var box=this.getMolecularAreaPixelDimensions$();
var maxScale=Math.min(box.width / boundingBox.width, box.height / boundingBox.height);
return maxScale;
});

Clazz_newMeth(C$, 'graphicalObjectList$jme_JMEmolList',  function (molList) {
var results=Clazz_new_($I$(31,1));
for (var mol, $mol = molList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
results.add$jme_canvas_Graphical2DObject(mol);
}
if (this.options.reaction) {
results.add$jme_canvas_Graphical2DObject(this.reactionArrow);
}return results;
});

Clazz_newMeth(C$, 'graphicalObjectList$',  function () {
return this.graphicalObjectList$jme_JMEmolList(this.moleculePartsList);
});

Clazz_newMeth(C$, 'molFile$',  function () {
return this.molFile$Z(false);
});

Clazz_newMeth(C$, 'molFile$Z',  function (isV3000) {
return this.molFileOrRxn$S$Z$Z$Z(null, true, isV3000, this.options.exportRXNmergeOption);
});

Clazz_newMeth(C$, 'molFile$jme_io_JMEWriter_MolFileOrRxnParameters',  function (pars) {
if (pars.debugDoNotUpdateReactionRole) {
this.moleculePartsList.isReaction=true;
} else {
this.updateReactionRoles$();
}return $I$(27).generateMolFileOrRxn$jme_io_JMEWriter_MolFileOrRxnParameters$jme_JMEmolList(pars, this.moleculePartsList);
});

Clazz_newMeth(C$, 'molFileOrRxn$S$Z$Z$Z',  function (header_, stampDate_, isV3000_, mergeReationComponents) {
var pars=Clazz_new_($I$(32,1));
pars.header=header_;
pars.stampDate=stampDate_;
pars.isV3000=isV3000_;
pars.mergeReationComponents=this.options.exportRXNmergeOption;
return this.molFile$jme_io_JMEWriter_MolFileOrRxnParameters(pars);
});

Clazz_newMeth(C$, 'readMolFile$S',  function (molecule) {
this.readMolFile$S$Z(molecule, true);
});

Clazz_newMeth(C$, 'readMolFile$S$Z',  function (molecule, repaint) {
try {
if (this.handleReadMolFileRXN$S$Z(molecule, repaint)) {
} else {
this.repaint$();
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
this.repaint$();
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'handleReadMolFile$S',  function (s) {
return this.handleReadMolFileRXN$S$Z(s, true);
});

Clazz_newMeth(C$, 'handleReadGenericInput$S$jme_js_AsyncCallback',  function (s, callback) {
this.handleReadGenericInput$S$jme_js_AsyncCallback$Z$Z(s, callback, true, true);
});

Clazz_newMeth(C$, 'handleReadGenericInput$S$jme_js_AsyncCallback$Z$Z',  function (s, callback, repaint, recordEvent) {
if (s == null  || s.trim$().length$() == 0 ) {
return;
}this.afterStructureChangeEvent.setOrigin_API$();
this.clearInfo$();
var runAsync=this.options.useOpenChemLib;
var jmeReader=Clazz_new_($I$(28,1).c$$O,[s]);
jmeReader.readMoleculeData$jme_JME$Z$jme_js_AsyncCallback$Z$Z(this, runAsync, callback, repaint, recordEvent);
if (runAsync) return;
this.processFileRead$jme_js_AsyncCallback$jme_io_JMEReader_SupportedInputFileFormat$S$Z(callback, recordEvent ? jmeReader.getFileTypeRead$() : null, jmeReader.getError$(), repaint);
});

Clazz_newMeth(C$, 'processFileRead$jme_js_AsyncCallback$jme_io_JMEReader_SupportedInputFileFormat$S$Z',  function (callback, fileTypeRead, error, repaint) {
if (error == null  && fileTypeRead != null  ) {
this.recordAfterStructureChangedEvent$S(p$2.getEventNameFromFormatRead$jme_io_JMEReader_SupportedInputFileFormat.apply(this, [fileTypeRead]));
}this.setMustRedrawMolecularArea$Z(error == null );
if (callback != null ) {
if (error == null ) {
callback.onSuccess(fileTypeRead);
} else {
callback.onFailure(Clazz_new_(Clazz_load('Exception').c$$S,[error]));
}} else if (error != null ) {
this.showError$S(error);
}if (repaint) {
this.repaint$();
}});

Clazz_newMeth(C$, 'getEventNameFromFormatRead$jme_io_JMEReader_SupportedInputFileFormat',  function (f) {
switch (f) {
case $I$(33).CDX:
return "readCDX";
case $I$(33).CDXML:
return "readCDXML";
case $I$(33).INCHI:
return "readInChI";
case $I$(33).INCHIKEY:
return "readInChIKey";
case $I$(33).JME:
return "readJME";
case $I$(33).MOL:
case $I$(33).MOL_V3000:
return "readMolFile";
case $I$(33).RXN:
return "readRXNFile";
case $I$(33).OCLCODE:
return "readOCLCode";
case $I$(33).SMILES:
return "readSMILES";
case $I$(33).SMARTS:
return "readSMARTS";
case $I$(33).SMIRKS:
return "readSMIRKS";
}
return null;
}, p$2);

Clazz_newMeth(C$, 'getMolecularAreaGraphicsString$',  function () {
return null;
});

Clazz_newMeth(C$, 'readGenericMolecularInput$S',  function (s) {
this.readGenericMolecularInput$S$Z(s, true);
});

Clazz_newMeth(C$, 'readGenericMolecularInput$S$Z',  function (s, recordEvent) {
this.handleReadGenericInput$S$jme_js_AsyncCallback$Z$Z(s, null, true, recordEvent);
});

Clazz_newMeth(C$, 'getOclCode$',  function () {
var molFile=this.molFileOrRxn$S$Z$Z$Z(null, false, true, false);
return C$.getOclAdapter$().getOclCode$S(molFile);
});

Clazz_newMeth(C$, 'getOclSVG$',  function () {
var molFile=this.molFileOrRxn$S$Z$Z$Z(null, false, true, false);
return C$.getOclAdapter$().getOclSVG$S(molFile);
});

Clazz_newMeth(C$, 'oclCodeToMOL$S',  function (oclCode) {
return C$.getOclAdapter$().OclCodeToMOL$S(oclCode);
});

Clazz_newMeth(C$, 'cdxToMOL$BA',  function (data) {
return C$.getOclAdapter$().cdxToMOL$BA(data);
});

Clazz_newMeth(C$, 'getInchiVersion$',  function () {
return C$.getOclAdapter$().getInchiVersion$();
});

Clazz_newMeth(C$, 'molToInChI$S$S',  function (molFileData, options) {
return C$.getOclAdapter$().molToInChI$S$S(molFileData, options);
});

Clazz_newMeth(C$, 'cdxmlToMOL$S',  function (xml) {
return C$.getOclAdapter$().cdxmlToMOL$S(xml);
});

Clazz_newMeth(C$, 'inchiToMOL$S',  function (inchi) {
return C$.getOclAdapter$().inchiToMOL$S(inchi);
});

Clazz_newMeth(C$, 'inchikeyToMOL$S',  function (inchikey) {
return C$.getOclAdapter$().inchikeyToMOL$S(inchikey);
});

Clazz_newMeth(C$, 'SMILEStoMOL$S',  function (smiles) {
return C$.getOclAdapter$().SMILEStoMOL$S(smiles);
});

Clazz_newMeth(C$, 'SMIRKStoRXN$S',  function (smirks) {
var parts=smirks.split$S(">");
Clazz_assert(C$, this, function(){return parts.length >= 1 && parts.length <= 3 });
var hasProducts=parts.length >= 3 && parts[2].length$() > 0 ;
var hasAgents=parts.length >= 2 && parts[1].length$() > 0 ;
var reactants=this.SMILEStoMOL$S(parts[0]);
var products=hasProducts ? this.SMILEStoMOL$S(parts[2]) : this.SMILEStoMOL$S("");
var agents=hasAgents ? this.SMILEStoMOL$S(parts[1]) : this.SMILEStoMOL$S("");
var s="";
s+="$RXN\n\n\nJME Molecular Editor\n";
s+=$I$(34).iformat$I$I(1, 3) + $I$(34).iformat$I$I(1, 3);
if (hasAgents) s+=$I$(34).iformat$I$I(1, 3);
s+="\n";
s+="$MOL" + "\n" + reactants ;
s+="$MOL" + "\n" + products ;
if (hasAgents) s+="$MOL" + "\n" + agents ;
return s;
});

Clazz_newMeth(C$, 'readSmirks$S',  function (smirks) {
var convertedmolFile=this.SMILESorSMIRKStoMolOrRXN$S(smirks);
this.handleReadMolFileRXN$S$Z(convertedmolFile, false);
return true;
});

Clazz_newMeth(C$, 'getOclAdapter$',  function () {
return (C$.oclAdapter == null  ? (C$.oclAdapter=Clazz_new_($I$(35,1))) : C$.oclAdapter);
}, 1);

Clazz_newMeth(C$, 'getInterface$S',  function (name) {
try {
var x=Clazz_forName(name);
return (x == null  ? null : x.newInstance$());
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.out.println$S("Interface.getInterface Error creating instance for " + C$.parserImpl + ": \n" + e );
return null;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'SMILESorSMIRKStoMolOrRXN$S',  function (smilesOrsmirks) {
if (smilesOrsmirks.contains$CharSequence(">")) {
return this.SMIRKStoRXN$S(smilesOrsmirks);
} else {
return this.SMILEStoMOL$S(smilesOrsmirks);
}});

Clazz_newMeth(C$, 'readMolFileOrRXN$S',  function (s) {
return this.handleReadMolFileRXN$S$Z(s, false);
});

Clazz_newMeth(C$, 'canBeAddedToExistingMultipartOrReaction$',  function () {
return ((this.options.reaction || this.options.multipart ) && this.options.addNewPart ) || this.newMolecule ;
});

Clazz_newMeth(C$, 'processIncomingMolecules$jme_JMEmolList$Z',  function (newMolecules, repaint) {
if (this.params.internalBondScalingForInput) {
newMolecules.internalBondLengthScaling$();
}this.activeMol=this.processIncomingMolecules$jme_JMEmolList(newMolecules);
if (this.newMolecule) {
this.newMolecule=false;
this.gui.mustReDrawTopMenu=true;
}if (repaint && !this.headless ) {
this.drawMolecularAreaRightNow$();
if (this.gui.mustReDrawTopMenu) {
this.gui.drawTopMenu$java_awt_Graphics(this.getGraphics$());
}}});

Clazz_newMeth(C$, 'processIncomingMolecules$jme_JMEmolList',  function (newMolecules) {
if (newMolecules.isReallyEmpty$()) {
return this.activeMol;
}for (var i=0; i < newMolecules.size$(); i++) {
var mol=newMolecules.get$I(i);
mol.jme=this;
mol=mol.reComputeBondOrderIfAromaticBondType$();
if (mol != null ) {
newMolecules.set$I$O(i, mol);
}mol=mol.compute2DcoordinatesIfMissing$();
if (mol != null ) {
newMolecules.set$I$O(i, mol);
}}
newMolecules.scaleInternalBondMolList$();
if (newMolecules.isReaction$()) {
p$2.processIncomingReaction$jme_JMEmolList.apply(this, [newMolecules]);
} else {
p$2.processIncomingMoleculeGroup$jme_JMEmolList.apply(this, [newMolecules]);
}this.moleculePartsList.setAtomBackGroundColors$S(this.atomBgColors);
Clazz_assert(C$, this, function(){return (this.moleculePartsList.size$() > 0)});
return newMolecules.first$();
});

Clazz_newMeth(C$, 'processIncomingMoleculeGroup$jme_JMEmolList',  function (newMolecules) {
if (this.isDepict$() || this.pasteFromSDFstack ) {
this.options.reaction=false;
}var addedToExistingMultipartOrReaction=this.canBeAddedToExistingMultipartOrReaction$();
if (!addedToExistingMultipartOrReaction) {
this.moleculePartsList.removeAll$();
this.resetMolecularAreaScale$();
}var scale=this.isDepict$() ? 1.0 : this.molecularAreaScalePixelsPerCoord;
this.centerAllMoleculesAsAgroup$jme_canvas_Graphical2DObjectGroup$D(this.graphicalObjectList$jme_JMEmolList(newMolecules), scale);
if (!this.isDepict$()) {
newMolecules.splitFragments$Z(true);
}this.moleculePartsList.addAll$java_util_Collection(newMolecules);
if (this.isDepict$()) {
this.molecularAreaScalePixelsPerCoord=this.scaleAndCenterForDepictMode$jme_canvas_Graphical2DObjectGroup(this.graphicalObjectList$jme_JMEmolList(this.moleculePartsList));
}}, p$2);

Clazz_newMeth(C$, 'processIncomingReaction$jme_JMEmolList',  function (newMolecules) {
this.options.reaction=true;
this.options.multipart=true;
var spacing=25.0;
var groups=Clazz_new_($I$(31,1));
var agentGroup=null;
for (var role, $role = 0, $$role = $I$(36).all; $role<$$role.length&&((role=($$role[$role])),1);$role++) {
var mols=newMolecules.reactionParts$I(role);
var group=Clazz_new_($I$(31,1));
group.addAll$jme_canvas_Graphical2DObjectGroup(mols.asGroup$());
if (role != 2) {
group.distributePositions$jme_util_Box_Axis$D$Z($I$(37).X, spacing, true);
group.alignCenter$jme_util_Box_Axis($I$(37).Y);
} else {
var pos=(((0.5 * group.size$()) + 0.5)|0);
group.add$I$jme_canvas_Graphical2DObject(pos, this.reactionArrow);
group.distributePositions$jme_util_Box_Axis$D$Z($I$(37).Y, spacing, false);
group.alignCenter$jme_util_Box_Axis($I$(37).X);
agentGroup=group;
}groups.add$jme_canvas_Graphical2DObject(group);
}
groups.distributePositions$jme_util_Box_Axis$D$Z($I$(37).X, spacing, false);
groups.alignCenter$jme_util_Box_Axis($I$(37).Y);
Clazz_assert(C$, this, function(){return (agentGroup != null  && agentGroup.size$() >= 1 )});
$I$(30,"move$jme_canvas_Graphical2DObject$jme_util_Box_Axis$D",[agentGroup, $I$(37).Y, agentGroup.centerY$() - this.reactionArrow.centerY$()]);
newMolecules.splitFragments$Z(true);
this.moleculePartsList.removeAll$();
this.moleculePartsList.addAll$java_util_Collection(newMolecules);
this.molecularAreaScalePixelsPerCoord=this.scaleAndCenterForDepictMode$jme_canvas_Graphical2DObjectGroup(this.graphicalObjectList$jme_JMEmolList(this.moleculePartsList));
}, p$2);

Clazz_newMeth(C$, 'handleReadMolFileRXN$S$Z',  function (s, repaint) {
var inputMolList=$I$(28).readMDLstringInput$S$jme_core_JMECore_Parameters(s, this.params);
if (inputMolList == null  || inputMolList.isReallyEmpty$() ) return false;
this.processIncomingMolecules$jme_JMEmolList$Z(inputMolList, repaint);
return true;
});

Clazz_newMeth(C$, 'findMaxAtomMapAmongAllMolecules$',  function () {
return this.moleculePartsList.findMaxAtomMap$();
});

Clazz_newMeth(C$, 'isActionEnabled$I',  function (action) {
switch (action) {
case 1301:
return this.options.rButton;
case 107:
return this.options.query;
case 201:
return this.options.stereo;
case 103:
return this.options.multipart;
case 105:
if (!(this.params.number || this.options.autonumber )) return false;
return !this.options.starNothing && this.params.mark ;
case 109:
return this.options.reaction;
case 113:
return this.options.showAtomMoveJButton;
}
return true;
});

Clazz_newMeth(C$, 'dialogActionX$',  function () {
if (this.action != 1201) {
this.action=1201;
this.active_an=32;
}});

Clazz_newMeth(C$, 'isMouseDownActionAllowed$I',  function (action) {
switch (action) {
default:
return true;
case 1201:
return this.options.xButton;
case 107:
return this.options.query;
case 201:
return this.options.stereo;
case 103:
return this.options.multipart;
case 105:
return (this.params.number || this.options.autonumber );
case 109:
return this.options.reaction;
}
}, p$2);

Clazz_newMeth(C$, 'setSubstituent$S',  function (s) {
if (s.equals$O("Select substituent")) {
this.action=202;
s="";
} else if (s.equals$O("-C(=O)OH")) this.action=2035;
 else if (s.equals$O("-C(=O)OMe")) this.action=2040;
 else if (s.equals$O("-C(=O)N")) this.action=2060;
 else if (s.equals$O("-NC=O")) this.action=2061;
 else if (s.equals$O("-OC(=O)Me")) this.action=2041;
 else if (s.equals$O("-CMe3")) this.action=2033;
 else if (s.equals$O("-CF3")) this.action=2036;
 else if (s.equals$O("-CCl3")) this.action=2037;
 else if (s.equals$O("-NO2")) this.action=2034;
 else if (s.equals$O("-NMe2")) this.action=2043;
 else if (s.equals$O("-SO2-NH2")) this.action=2052;
 else if (s.equals$O("-NH-SO2-Me")) this.action=2044;
 else if (s.equals$O("-SO3H")) this.action=2039;
 else if (s.equals$O("-PO3H2")) this.action=2051;
 else if (s.equals$O("-C#N")) this.action=2042;
 else if (s.equals$O("-C#C-Me")) this.action=2045;
 else if (s.equals$O("-C#CH")) this.action=2038;
if (this.action > 0) {
this.processMenuAction$I$Z(this.action, false);
} else s="Not known group!";
this.info$S(s);
this.repaint$();
});

Clazz_newMeth(C$, 'setRemoveHsC$',  function () {
this.params.hydrogenParams.removeHs=true;
this.params.hydrogenParams.removeOnlyCHs=true;
});

Clazz_newMeth(C$, 'log$S',  function (string) {
System.err.println$S(string);
});

Clazz_newMeth(C$, 'resetAllGraphics$',  function () {
this.mustRedrawEverything$();
this.molecularAreaImage=null;
this.topMenuImage=null;
this.leftMenuImage=null;
this.infoAreaImage=null;
this.rightBorderImage=null;
});

Clazz_newMeth(C$, 'resetJPopupMenu$',  function () {
this.copyPasteJPopupMenuMol=null;
this.copyPasteJPopupMenuReaction=null;
});

Clazz_newMeth(C$, 'ignoreBonds$',  function () {
return this.action == 105 && (this.options.starNothing || this.options.starAtomOnly )  || this.action == 113  || this.action == 205  || this.action == 112  || this.action == 108  || (this.action >= 2033 && this.action <= 1310  || (this.action == 105 && !this.params.mark ) ) ;
});

Clazz_newMeth(C$, 'ignoreAtoms$',  function () {
return (((this.options.starNothing || this.options.starBondOnly ) && this.action == 105 ));
});

Clazz_newMeth(C$, 'setText$S',  function (text) {
this.molText=text;
this.repaint$();
});

Clazz_newMeth(C$, 'showAtomNumbers$',  function () {
if (this.activeMol != null ) this.activeMol.numberAtomsSequentially$();
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
if (this.gui == null  || this.dimension.width == 0 ) return;
this.update$java_awt_Graphics(g);
});

Clazz_newMeth(C$, 'isOutsideDrawingArea$I$I',  function (screenX, screenY) {
screenX-=this.leftMenuWidth$();
screenY-=this.topMenuHeight$();
return (screenX < 0 || screenX > this.molecularArea.width  || screenY < 0  || screenY > this.molecularArea.height );
});

Clazz_newMeth(C$, 'isInMolecularArea$I$I',  function (x, y) {
return (this.isDepict$() || x >= this.leftMenuWidth$() && x <= this.dimension.width - this.rightBorder$()  && y >= this.topMenuHeight$()  && y <= this.dimension.height - this.infoAreaHeight$()  );
});

Clazz_newMeth(C$, 'updateMyMolecularAreaSize$',  function () {
if (this.dimension == null ) {
this.dimension=this.getSize$();
}this.molecularArea=this.getMolecularAreaPixelDimensions$();
});

Clazz_newMeth(C$, 'getMolecularAreaPixelDimensions$',  function () {
return Clazz_new_([this.dimension.width - ((this.isDepict$() ? 0 : this.leftMenuWidth$D(this.menuScale) + this.rightBorder$D(this.menuScale))|0), this.dimension.height - ((this.isDepict$() ? 0 : this.topMenuHeight$D(this.menuScale) + this.infoAreaHeight$D(this.menuScale))|0)],$I$(10,1).c$$I$I);
});

Clazz_newMeth(C$, 'getMolecularAreaPixelBoundingBox$',  function () {
var d=this.getMolecularAreaPixelDimensions$();
return Clazz_new_([this.isDepict$() ? 0 : this.leftMenuWidth$D(this.menuScale), this.isDepict$() ? 0 : this.topMenuHeight$D(this.menuScale), d.width, d.height],$I$(38,1).c$$D$D$D$D);
});

Clazz_newMeth(C$, 'getMolecularAreaBoundingBoxCoordinate$D',  function (pixelsPerCoord) {
var bbox=this.getMolecularAreaPixelBoundingBox$();
Clazz_assert(C$, this, function(){return (pixelsPerCoord > 0 )});
bbox.x=0;
bbox.y=0;
bbox.width/=pixelsPerCoord;
bbox.height/=pixelsPerCoord;
return bbox;
});

Clazz_newMeth(C$, 'getMolecularAreaCoordBoundingBox$',  function () {
return this.getMolecularAreaBoundingBoxCoordinate$D(this.molecularAreaScalePixelsPerCoord);
});

Clazz_newMeth(C$, 'update$java_awt_Graphics',  function (g2d) {
var initOrResize;
this.appletHasBeenResized=false;
Clazz_assert(C$, this, function(){return (this.dimension != null )});
if (this.molecularAreaImage == null ) {
initOrResize=true;
} else {
var newDimension=this.getSize$();
initOrResize=(newDimension.width != this.dimension.width) || (newDimension.height != this.dimension.height) ;
if (initOrResize) {
this.dimension=newDimension;
this.appletHasBeenResized=true;
}}if (initOrResize) {
this.mustRedrawEverything$();
this.updateMyMolecularAreaSize$();
this.molecularAreaImage=this.createOrResizePreciseImage$jme_canvas_PreciseImage$D$D(this.molecularAreaImage, this.molecularArea.width, this.molecularArea.height);
if (this.isDepict$()) {
var oldMolecularAreaScale=this.molecularAreaScalePixelsPerCoord;
this.molecularAreaScalePixelsPerCoord=this.scaleAndCenterForDepictMode$jme_canvas_Graphical2DObjectGroup(this.graphicalObjectList$());
this.log$S("update() in depict mode: oldMolecularAreaScale = " + new Double(oldMolecularAreaScale).toString() + " new   molecularAreaScale = " + new Double(this.molecularAreaScalePixelsPerCoord).toString() );
Clazz_assert(C$, this, function(){return this.topMenuImage == null });
Clazz_assert(C$, this, function(){return this.leftMenuImage == null });
Clazz_assert(C$, this, function(){return this.infoAreaImage == null });
Clazz_assert(C$, this, function(){return this.rightBorderImage == null });
} else {
this.topMenuImage=this.createOrResizePreciseImage$jme_canvas_PreciseImage$D$D(this.topMenuImage, this.dimension.width, this.topMenuHeight$());
var imageh=this.dimension.height - this.topMenuHeight$();
if (imageh < 1 ) imageh=1;
this.leftMenuImage=this.createOrResizePreciseImage$jme_canvas_PreciseImage$D$D(this.leftMenuImage, this.leftMenuWidth$(), imageh);
this.infoAreaImage=this.createOrResizePreciseImage$jme_canvas_PreciseImage$D$D(this.infoAreaImage, this.molecularArea.width + this.rightBorder$(), this.infoAreaHeight$());
this.rightBorderImage=this.createOrResizePreciseImage$jme_canvas_PreciseImage$D$D(this.rightBorderImage, this.rightBorder$(), this.molecularArea.height);
}}this.drawMolecularArea$java_awt_Graphics$java_awt_Point(g2d, null);
if (!this.isDepict$()) {
this.gui.draw$java_awt_Graphics(g2d);
}this.postInitializeIfNeeded$();
});

Clazz_newMeth(C$, 'createOrResizeImage$java_awt_Image$I$I',  function (img, width, height) {
return this.createImage$I$I(width, height);
});

Clazz_newMeth(C$, 'createOrResizePreciseImage$jme_canvas_PreciseImage$D$D',  function (img, width, d) {
return Clazz_new_([this.createOrResizeImage$java_awt_Image$I$I(img == null  ? null : img.getImage$(), Long.$ival((Math.round$D(width))), Long.$ival((Math.round$D(d))))],$I$(39,1).c$$java_awt_Image);
});

Clazz_newMeth(C$, 'atomicData$',  function () {
for (var i=14; i <= 42; i++) {
if ($I$(40).chargedMetalType$I(i) > 0) {
C$.color[i]=$I$(4).darkGray;
} else {
C$.color[i]=$I$(4).orange;
}}
C$.color[1]=$I$(4).darkGray;
C$.color[2]=$I$(4).orange;
C$.color[3]=$I$(4).darkGray;
C$.color[4]=$I$(4).blue;
C$.color[5]=$I$(4).red;
C$.color[9]=$I$(4).magenta;
C$.color[10]=$I$(4).magenta;
C$.color[11]=$I$(4).magenta;
C$.color[12]=$I$(4).magenta;
C$.color[8]=$I$(4).yellow.darker$();
C$.color[7]=$I$(4).orange;
C$.color[6]=$I$(4).darkGray;
C$.color[13]=$I$(4).darkGray;
C$.color[32]=$I$(4).darkGray;
}, 1);

Clazz_newMeth(C$, 'drawMolecularAreaRightNow$',  function () {
this.setMustRedrawMolecularArea$Z(true);
if (this.molecularAreaImage != null ) {
var g=this.getGraphics$().create$();
this.drawMolecularArea$java_awt_Graphics$java_awt_Point(g, null);
g.dispose$();
this.setMustRedrawMolecularArea$Z(false);
} else {
this.repaint$();
}});

Clazz_newMeth(C$, 'drawMolecularArea$java_awt_Graphics$java_awt_Point',  function (g, margins) {
var img=null;
var coordOffset=null;
var needRecenter=this.activeMol.needRecentering;
if (g == null ) {
var coordBox=null;
for (var i=this.moleculePartsList.size$(); --i >= 0; ) {
var m=this.moleculePartsList.get$I(i);
coordBox=m.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(coordBox);
m.needRecentering=false;
}
var f=this.molecularAreaScalePixelsPerCoord;
img=Clazz_new_([((coordBox.getWidth$() * f)|0) + margins.x * 2, ((coordBox.getHeight$() * f)|0) + margins.y * 2, 2],$I$(41,1).c$$I$I$I);
coordOffset=Clazz_new_([((margins.x / f - coordBox.x)|0), ((margins.y / f - coordBox.y)|0)],$I$(42,1).c$$I$I);
} else if (g != null  && !this.gui.mustReDrawMolecularArea ) {
return null;
}if (this.params.computeValenceState) {
if (this.afterStructureChangeEvent != null  && this.afterStructureChangeEvent.action != null  ) {
if (this.afterStructureChangeEvent.action != "undo" && this.afterStructureChangeEvent.action != "redo" ) {
for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.cleanAfterChanged$Z(this.options.polarnitro);
}
}}}var imgWidth=(img != null  ? img.getWidth$() : this.molecularArea.width);
var imgHeight=(img != null  ? img.getHeight$() : this.molecularArea.height);
var molecularScreenArea=Clazz_new_([this.leftMenuWidth$(), this.topMenuHeight$(), imgWidth, imgHeight],$I$(38,1).c$$D$D$D$D);
var og=$I$(21,"getScaledGraphicsOfPreciseImage$jme_canvas_PreciseImage$D$java_awt_geom_Rectangle2D_Double",[(img == null  ? this.molecularAreaImage : Clazz_new_($I$(39,1).c$$java_awt_Image,[img])), this.molecularAreaScalePixelsPerCoord, molecularScreenArea]);
og.setColor$java_awt_Color(this.canvasBg);
var coordWidth=imgWidth / this.molecularAreaScalePixelsPerCoord;
var coordHeight=imgHeight / this.molecularAreaScalePixelsPerCoord;
og.fillRect$D$D$D$D(0, 0, coordWidth, coordHeight);
if (coordOffset != null ) {
og.translate$D$D(coordOffset.x, coordOffset.y);
}var valueAntiAlias=this.molecularAreaAntiAlias ? $I$(43).VALUE_ANTIALIAS_ON : $I$(43).VALUE_ANTIALIAS_OFF;
og.setRenderingHint$java_awt_RenderingHints_Key$O($I$(43).KEY_ANTIALIASING, valueAntiAlias);
og.setStroke$java_awt_BasicStroke(Clazz_new_($I$(44,1).c$$F,[this.molecularAreaLineWidth]));
if (img == null  && (this.fullScreenEnterOrExit || (this.appletHasBeenResized && this.previousScaledScreenArea != null  ) ) ) {
var graphicalObjecList=this.graphicalObjectList$();
this.centerAllMoleculesAsAgroup$jme_canvas_Graphical2DObjectGroup$D(graphicalObjecList, this.molecularAreaScalePixelsPerCoord);
this.fullScreenEnterOrExit=false;
}for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.draw$jme_canvas_PreciseGraphicsAWT(og);
}
if (img != null ) {
this.activeMol.needRecentering=needRecenter;
return img;
}if (this.previousScaledScreenArea == null ) this.previousScaledScreenArea=Clazz_new_($I$(38,1));
this.previousScaledScreenArea.width=coordWidth;
this.previousScaledScreenArea.height=coordHeight;
if (this.options.reaction) {
if (!this.reactionArrow.hasBeenPlaced) {
this.reactionArrow.XY$D$D(imgWidth / 2, imgHeight / 2);
}this.reactionArrow.draw$jme_canvas_PreciseGraphicsAWT(og);
}if (this.isDepict$()) {
if (this.molText != null ) {
var w=$I$(21).menuCellFontMet.stringWidth$S(this.molText);
var xstart=(imgWidth - w) / 2.0;
var ystart=imgHeight - 13;
og.setColor$java_awt_Color($I$(4).black);
og.setFont$java_awt_Font($I$(21).menuCellFont);
og.drawString$S$D$D(this.molText, xstart, ystart);
}if (this.options.showDragAndDropIconInDepictMode) this.gui.drawDragAndDropIcon$jme_canvas_PreciseGraphicsAWT$D(og, this.smallerIconsForDepictMode / this.molecularAreaScalePixelsPerCoord);
 else this.gui.dragAndDropIcon=null;
}g.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(this.molecularAreaImage.getImage$(), og.screenX$(), og.screenY$(), this);
this.setMustRedrawMolecularArea$Z(false);
if (this.saveCurrentState) {
this.postSave$();
this.saveCurrentState=false;
}if (this.afterStructureChangeEvent != null  && this.afterStructureChangeEvent.action != null  ) {
this.notifyStructuralChange$S("draw");
if (this.newMolecule == true ) {
this.newMolecule=false;
this.gui.mustReDrawTopMenu=true;
this.repaint$();
}}return null;
});

Clazz_newMeth(C$, 'centerAllMoleculesAsAgroup$jme_canvas_Graphical2DObjectGroup$D',  function (graphicalObjecList, molecularAreaScalePixelsPerCoord) {
if (this.dimension == null ) return;
var chemicalDrawingBoundingBox=C$.getChemicalDrawingPixelBoundingBox$jme_canvas_Graphical2DObjectGroup(graphicalObjecList);
if (chemicalDrawingBoundingBox == null ) return;
var appletMolBoundingBox=this.getMolecularAreaBoundingBoxCoordinate$D(molecularAreaScalePixelsPerCoord);
var dx=appletMolBoundingBox.getCenterX$() - chemicalDrawingBoundingBox.getCenterX$();
var dy=appletMolBoundingBox.getCenterY$() - chemicalDrawingBoundingBox.getCenterY$();
for (var each, $each = graphicalObjecList.group.iterator$(); $each.hasNext$()&&((each=($each.next$())),1);) {
each.moveXY$D$D(dx, dy);
}
});

Clazz_newMeth(C$, 'isFullScreenSupported$',  function () {
return true;
}, 1);

Clazz_newMeth(C$, 'toggleFullScreen$',  function () {
this.mustRedrawEverything$();
var newDim;
var frameSize=(this.myFrame == null  ? null : this.myFrame.getSize$());
if (!this.isFullScreen && this.myFrame != null   && this.myFrame.getExtendedState$() == 6 ) return;
if (this.isFullScreen) {
this.molecularAreaScalePixelsPerCoord=this.nonFullFrameMolecularAreaScalePixelsPerCoord;
this.menuScale=this.nonFullScreenMenuScale;
newDim=this.nonFullScreenSize;
if (this.myFrame != null ) {
this.myFrame.setResizable$Z(true);
this.myFrame.setVisible$Z(false);
this.myFrame.setSize$java_awt_Dimension(this.nonFullFrameSize);
this.myFrame.setLocation$java_awt_Point(this.nonFullFrameLocation);
this.myFrame.setVisible$Z(true);
}} else {
this.nonFullScreenMenuScale=this.menuScale;
this.nonFullScreenSize.setSize$I$I(this.dimension.width, this.dimension.height);
this.nonFullFrameMolecularAreaScalePixelsPerCoord=this.molecularAreaScalePixelsPerCoord;
if (this.myFrame != null ) {
this.nonFullFrameSize=frameSize;
this.nonFullFrameLocation=this.myFrame.getLocation$();
this.myFrame.setExtendedState$I(6);
this.myFrame.setResizable$Z(false);
newDim=this.myFrame.getContentPane$().getSize$();
} else {
newDim=$I$(45).getDefaultToolkit$().getScreenSize$();
}this.molecularAreaScalePixelsPerCoord=Math.min(this.molecularAreaScalePixelsPerCoord * 3.0, 10.0);
this.menuScale=Math.min(this.menuScale * 3.0, 2.0);
}this.isFullScreen=!this.isFullScreen;
this.setSize$java_awt_Dimension(newDim);
});

Clazz_newMeth(C$, 'processMenuAction$I$Z',  function (thisAction, isMouse) {
if (thisAction == 0) return false;
this.mustRedrawNothing$();
var actionOld=this.action;
this.action=thisAction;
var structureChangePerformed=(thisAction < 301 ? p$2.topMenuAction$I.apply(this, [actionOld]) : thisAction < 2000 ? p$2.leftMenuAction$Z.apply(this, [isMouse]) : false);
if (!structureChangePerformed && (this.activeMol.touchedAtom > 0 || this.activeMol.touchedBond > 0 ) ) {
structureChangePerformed=p$2.bondRingAction.apply(this, []);
}if (structureChangePerformed) {
this.action=actionOld;
}p$2.postAction$Z.apply(this, [structureChangePerformed]);
return true;
});

Clazz_newMeth(C$, 'postAction$Z',  function (changed) {
if (changed) {
this.setMustRedrawMolecularArea$Z(true);
this.activeMol.setBondCenters$();
}if (this.gui.mustReDrawMolecularArea) {
this.drawMolecularAreaRightNow$();
}this.repaint$();
}, p$2);

Clazz_newMeth(C$, 'topMenuAction$I',  function (actionOld) {
this.gui.mustReDrawTopMenu=true;
this.gui.mustReDrawLeftMenu=true;
this.clearInfo$();
switch (this.action) {
case 102:
this.clear$();
p$2.handleMouseLeaveActionMenu$I.apply(this, [102]);
p$2.handleMouseEnterActionMenu$I.apply(this, [102]);
return true;
case 110:
this.action=actionOld;
return this.doUndoRedo$I(-1);
case 111:
this.action=actionOld;
return this.doUndoRedo$I(1);
case 101:
this.handleSmilesBox$();
this.action=actionOld;
return false;
case 107:
this.handleQueryBox$();
return false;
case 114:
this.handleAboutBox$();
this.action=actionOld;
return false;
case 103:
this.newMolecule=true;
this.action=actionOld;
return false;
case 105:
if (this.options.markerMenu) {
this.action=actionOld;
this.showJPopupMenuRealtiveToScaledMainMenu$javax_swing_JPopupMenu$I$I(this.gui.createFBackgroundColorPopumemu$(), this.gui.markerJPopupMenuPosition.x, this.gui.markerJPopupMenuPosition.y);
return false;
}if (this.options.autonumber && this.mouseShift ) {
this.mouseShift=false;
this.activeMol.numberAtomsSequentially$();
this.setMustRedrawMolecularArea$Z(true);
this.recordAfterStructureChangedEvent$S("autonumber");
this.action=actionOld;
return true;
}this.keyboradInputMark=1;
return false;
case 109:
this.action=actionOld;
this.updateReactionRoles$();
if (this.activeMol.getReactionRole$() == 2) {
this.info$S("Copying the agent not possible !");
return false;
}var cad=this.activeMol.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
if (cad == null ) return false;
this.setMustRedrawMolecularArea$Z(true);
this.activeMol=Clazz_new_($I$(17,1).c$$jme_JMEmol,[this.activeMol]);
var molArea=this.getMolecularAreaCoordBoundingBox$();
var dx=molArea.getCenterX$() - cad.getCenterX$();
this.activeMol.moveXY$D$D(dx * 2, 0);
this.moleculePartsList.add$O(this.activeMol);
this.recordAfterStructureChangedEvent$S("reactionCopy");
p$2.handleMouseLeaveActionMenu$I.apply(this, [109]);
p$2.handleMouseEnterActionMenu$I.apply(this, [109]);
return true;
case 104:
if (this.activeMol.touchedAtom == 0 && this.activeMol.touchedBond == 0 ) return false;
p$2.doDeleteAtomOrBond.apply(this, []);
return true;
case 108:
if (this.activeMol.touchedAtom == 0) return false;
if (!p$2.doChangeCharge.apply(this, [])) return false;
return true;
case 112:
p$2.getBuilder$jme_JMEmol.apply(this, [null]).spiroAdding=true;
this.info$S("Next ring will be added as spiro");
this.repaint$();
return true;
case 113:
if (this.options.showAtomMoveJButton) {
this.info$S("Move one atom");
this.repaint$();
}return false;
case 106:
return false;
case 213:
this.action=actionOld;
this.showJPopupMenuRealtiveToScaledMainMenu$javax_swing_JPopupMenu$I$I(this.gui.getFunctionalGroupPopumemu$(), this.gui.functionalGroupJPopupMenuPosition.x, this.gui.functionalGroupJPopupMenuPosition.y);
return false;
case 214:
this.handleCopyPasteJPopupMenu$java_awt_event_MouseEvent$I$I(null, this.gui.fixedCopyPasteJPopupMenuPosition.x, this.gui.fixedCopyPasteJPopupMenuPosition.y);
this.action=actionOld;
return false;
}
return false;
}, p$2);

Clazz_newMeth(C$, 'doUndoRedo$I',  function (direction) {
switch (direction) {
case -1:
return p$2.undo.apply(this, []);
default:
case 1:
return p$2.redo.apply(this, []);
}
});

Clazz_newMeth(C$, 'undo',  function () {
this.setMustRedrawMolecularArea$Z(true);
if (!this.molChangeManager.canUndo$()) {
this.info$S("No more undo");
} else if (this.afterClear) {
this.activeMol=this.moleculePartsList.last$();
this.afterClear=false;
}if (!this.molChangeManager.canUndo$()) return false;
this.restoreState$jme_JME_SavedState(this.molChangeManager.undo$());
this.recordAfterStructureChangedEvent$S("undo");
this.willPostSave$Z(false);
this.setMustRedrawMolecularArea$Z(true);
return false;
}, p$2);

Clazz_newMeth(C$, 'redo',  function () {
if (!this.canMultipleUndo) {
this.alert$S("The redo feature is not implemented yet");
return false;
}if (!this.molChangeManager.canRedo$()) {
this.info$S("No more redo");
return false;
}if (this.afterClear) {
this.activeMol=this.moleculePartsList.last$();
this.afterClear=false;
}if (!this.molChangeManager.canRedo$()) return false;
this.restoreState$jme_JME_SavedState(this.molChangeManager.redo$());
this.recordAfterStructureChangedEvent$S("redo");
this.willPostSave$Z(false);
this.setMustRedrawMolecularArea$Z(true);
return false;
}, p$2);

Clazz_newMeth(C$, 'doChangeCharge',  function () {
p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).checkAtomOrBondAction$();
return true;
}, p$2);

Clazz_newMeth(C$, 'doDeleteAtomOrBond',  function () {
p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).checkAtomOrBondAction$();
}, p$2);

Clazz_newMeth(C$, 'handleMouseLeaveActionMenu$I',  function (action) {
return this.gui.handleMouseLeaveActionMenu$I(action);
}, p$2);

Clazz_newMeth(C$, 'handleMouseEnterActionMenu$I',  function (action) {
return this.gui.handleMouseEnterActionMenu$I$jme_JMEmol(action, this.activeMol);
}, p$2);

Clazz_newMeth(C$, 'bondRingAction',  function () {
switch (this.action) {
case 202:
case 203:
case 204:
if (this.activeMol.touchedAtom > 0) {
this.lastAction=0;
p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).addBond$();
this.recordBondEvent$S("addBond");
return true;
}var bond=this.activeMol.bonds[this.activeMol.touchedBond];
var bondType=1;
var eventType="setBondSingle";
var changed;
switch (this.action) {
case 203:
bondType=2;
eventType="setBondDouble";
break;
case 204:
bondType=3;
eventType="setBondTriple";
break;
}
changed=(bondType != bond.bondType);
if (changed) {
this.activeMol.setBondType$I$I(this.activeMol.touchedBond, bondType);
this.recordBondEvent$S(eventType);
bond.stereo=0;
return true;
}if (bondType == 2) {
this.activeMol.toggleDoubleBondStereo$jme_core_Bond(bond);
return true;
}return false;
default:
if (this.action < 206 || this.action > 229 ) return false;
this.setLastAction$I(2);
p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).addRing$();
this.recordBondEvent$S("addRingBond");
return true;
}
}, p$2);

Clazz_newMeth(C$, 'leftMenuAction$Z',  function (isMouse) {
var active_an=this.active_an;
active_an=this.mapActionToAtomNumberXorR$I(this.action);
this.clearInfo$();
if (active_an == 32) {
this.handleAtomXbox$();
}if (this.action >= 1301 && this.action <= 1310 ) {
active_an=33 + (this.action - 1301);
}if (isMouse) {
this.gui.mustReDrawLeftMenu=true;
this.gui.mustReDrawTopMenu=true;
this.active_an=active_an;
}return (this.activeMol.touchedAtom != 0 && p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).setAtom$I(active_an) );
}, p$2);

Clazz_newMeth(C$, 'updatePartsList$',  function () {
if (this.moleculePartsList.isEmpty$()) {
this.moleculePartsList.add$O(Clazz_new_($I$(17,1)));
}this.activeMol=this.moleculePartsList.get$I(0);
this.moleculePartsList.splitFragments$Z(true);
});

Clazz_newMeth(C$, 'alert$S',  function (message) {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
Clazz_new_($I$(47,1).c$$S$java_awt_Component$java_awt_Color,[this.$finals$.message, this.b$['jme.JME'], this.b$['jme.JME'].bgColor]).setVisible$Z.apply(Clazz_new_($I$(47,1).c$$S$java_awt_Component$java_awt_Color,[this.$finals$.message, this.b$['jme.JME'], this.b$['jme.JME'].bgColor]), [true]);
});
})()
), Clazz_new_(P$.JME$lambda1.$init$,[this, {message:message}]))]);
});

Clazz_newMeth(C$, 'handleAboutBox$',  function () {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda2||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
if (this.b$['jme.JME'].aboutBox != null ) {
this.b$['jme.JME'].aboutBox.disposeIfShowing$.apply(this.b$['jme.JME'].aboutBox, []);
}this.b$['jme.JME'].aboutBox=Clazz_new_($I$(48,1).c$$I$jme_JME,[0, this.b$['jme.JME']]);
});
})()
), Clazz_new_(P$.JME$lambda2.$init$,[this, null]))]);
});

Clazz_newMeth(C$, 'handleQueryBox$',  function () {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda3||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
if (this.b$['jme.JME'].queryBox == null ) {
this.b$['jme.JME'].queryBox=Clazz_new_($I$(49,1).c$$jme_JME,[this.b$['jme.JME']]);
} else {
if (this.b$['jme.JME'].queryBox.isShowing$.apply(this.b$['jme.JME'].queryBox, [])) {
this.b$['jme.JME'].queryBox.toFront$.apply(this.b$['jme.JME'].queryBox, []);
} else {
this.b$['jme.JME'].queryBox.setVisible$Z.apply(this.b$['jme.JME'].queryBox, [true]);
}}});
})()
), Clazz_new_(P$.JME$lambda3.$init$,[this, null]))]);
});

Clazz_newMeth(C$, 'handleSmilesBox$',  function () {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda4||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
if (this.b$['jme.JME'].smilesBox != null ) {
this.b$['jme.JME'].smilesBox.disposeIfShowing$.apply(this.b$['jme.JME'].smilesBox, []);
}this.b$['jme.JME'].smilesBox=Clazz_new_($I$(48,1).c$$I$jme_JME,[1, this.b$['jme.JME']]);
});
})()
), Clazz_new_(P$.JME$lambda4.$init$,[this, null]))]);
});

Clazz_newMeth(C$, 'handleAtomXbox$',  function () {
if (!false) {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda5||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda5", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
if (this.b$['jme.JME'].atomxBox != null ) {
this.b$['jme.JME'].atomxBox.disposeIfShowing$.apply(this.b$['jme.JME'].atomxBox, []);
this.b$['jme.JME'].atomxBox=null;
}if (this.b$['jme.JME'].activeMol.touchedAtom == 0) this.b$['jme.JME'].atomxBox=Clazz_new_($I$(48,1).c$$I$jme_JME,[2, this.b$['jme.JME']]);
});
})()
), Clazz_new_(P$.JME$lambda5.$init$,[this, null]))]);
}});

Clazz_newMeth(C$, 'isFullScreen$',  function () {
return this.isFullScreen;
});

Clazz_newMeth(C$, 'clearInfo$',  function () {
this.info$S(this.customDefaultInfoText);
});

Clazz_newMeth(C$, 'info$S',  function (text) {
if (text == null ) text=this.customDefaultInfoText;
var dolog=(this.infoText != text && text !== ""  );
this.gui.mustReDrawInfo=true;
this.infoText=text;
if (dolog) this.log$S("info: " + text);
});

Clazz_newMeth(C$, 'infoNoLog$S',  function (text) {
if (text == null ) text=this.customDefaultInfoText;
this.gui.mustReDrawInfo=true;
this.infoText=text;
});

Clazz_newMeth(C$, 'showInfo$S',  function (text) {
this.info$S(text);
this.repaint$();
});

Clazz_newMeth(C$, 'setCustomDefaultInfoText$S',  function (text) {
this.showInfo$S(text);
this.customDefaultInfoText=text;
});

Clazz_newMeth(C$, 'setAction$I',  function (action) {
this.action=action;
});

Clazz_newMeth(C$, 'setMolecularAreaScale$D$I$I',  function (scale, x, y) {
var previousAreaSize=this.getMolecularAreaCoordBoundingBox$();
this.molecularAreaScalePixelsPerCoord=scale;
var newAreaSize=this.getMolecularAreaCoordBoundingBox$();
var touchedMol=Clazz_new_($I$(6,1),[this, null]);
this.findMolAndAtomOrBondWithinRadius$I$I$I$jme_JME_Touched(x, y, 2147483647, touchedMol);
var shiftXY=C$.getTranslationToCenterAfterScaling$jme_JME_Touched$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double(touchedMol, previousAreaSize, newAreaSize);
if (shiftXY != null ) {
$I$(30,"move$jme_canvas_Graphical2DObject$java_awt_geom_Point2D_Double",[this.graphicalObjectList$(), shiftXY]);
}this.setMustRedrawMolecularArea$Z(true);
});

Clazz_newMeth(C$, 'getTranslationToCenterAfterScaling$jme_JME_Touched$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double',  function (mol, previousAreaSize, newAreaSize) {
var result=Clazz_new_($I$(50,1));
var closestMolecule=mol.mol;
if (closestMolecule == null  || closestMolecule.nAtoms$() == 0 ) {
return result;
}Clazz_assert(C$, this, function(){return previousAreaSize.width > 0 });
Clazz_assert(C$, this, function(){return previousAreaSize.height > 0 });
var x;
var y;
if (mol.atomIndex > 0) {
x=closestMolecule.atoms[mol.atomIndex].x;
y=closestMolecule.atoms[mol.atomIndex].y;
} else {
x=closestMolecule.bonds[mol.bondIndex].centerX;
y=closestMolecule.bonds[mol.bondIndex].centerY;
}var newX=x / previousAreaSize.width * newAreaSize.width;
var newY=y / previousAreaSize.height * newAreaSize.height;
var shiftX=newX - x;
var shiftY=newY - y;
result.setLocation$D$D(shiftX, shiftY);
return result;
}, 1);

Clazz_newMeth(C$, 'canDoAtomOrBondAction$I',  function (action) {
return (!this.isDepict$() || (this.isDepict$() && action == 105 ) );
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
this.requestFocusInWindow$();
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'keyTyped$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'keyReleased$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'keyPressed$java_awt_event_KeyEvent',  function (e) {
if (this.keyDown$java_awt_event_KeyEvent$I(e, e.getKeyCode$())) {
e.consume$();
}});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent',  function (e) {
if (this.isDepict$() && !((this.canHandleAtomHighLightCallBack$()).$c() || (this.canHandleBondHighLightCallBack$()).$c() || this.options.depictActionEnabled  ) ) return;
if (C$.isEventContextMenu$java_awt_event_MouseEvent(e)) {
return;
}this.moveTo$I$I$I(e.getX$(), e.getY$(), 0);
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
if (this.mouseDown$java_awt_event_MouseEvent$I$I(e, e.getX$(), e.getY$())) {
}});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent',  function (e) {
if (this.mouseDrag$java_awt_event_MouseEvent$I$I(e, e.getX$(), e.getY$())) {
}});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
if (this.mouseUp$java_awt_event_MouseEvent$I$I(e, e.getX$(), e.getY$())) {
}});

Clazz_newMeth(C$, 'mouseWheelMoved$java_awt_event_MouseWheelEvent',  function (e) {
var newScale;
if (!this.options.allowZooming) return;
var notches=e.getPreciseWheelRotation$() * 10.0;
if (notches == 0 ) return;
notches*=-1;
var x=e.getX$();
var y=e.getY$();
var sizeChange=(100.0 + 2 * notches) / 100;
if (this.isInMolecularArea$I$I(x, y)) {
newScale=this.molecularAreaScalePixelsPerCoord * sizeChange;
if ((newScale > this.molecularAreaScalePixelsPerCoord  && newScale <= 10.0  ) || (newScale < this.molecularAreaScalePixelsPerCoord  && newScale >= 0.3  ) ) {
this.lastAction=8;
if (this.options.reaction) {
this.setMolecularAreaScale$D(newScale);
} else {
this.setMolecularAreaScale$D$I$I(newScale, x, y);
this.repaint$();
}}} else {
if (this.options.allowGUIzooming) {
newScale=this.menuScale * sizeChange;
if (newScale >= 0.7  && newScale <= 2.0  ) {
this.setMenuScale$D(newScale);
}}}});

Clazz_newMeth(C$, 'mouseDown$java_awt_event_MouseEvent$I$I',  function (e, x, y) {
this.mouseDownWasUsed=false;
if (this.options.contextMenuEnabledOption && this.handleCopyPasteJPopupMenu$java_awt_event_MouseEvent$I$I(e, x, y) ) {
this.mouseDownWasUsed=true;
this.movePossible=false;
return true;
}var eventNotUsed=false;
this.clearInfo$();
this.mouseX=x;
this.mouseY=y;
this.mouseShift=e.isShiftDown$();
this.movePossible=false;
if (!this.isDepict$() && (y > this.dimension.height - this.infoAreaHeight$()) ) {
return eventNotUsed;
}if (!this.isInMolecularArea$I$I(x, y)) {
var action=this.gui.determineMenuAction$D$D$Z(x, y, true);
return (action == 0 || p$2.isMouseDownActionAllowed$I.apply(this, [action]) && (this.mouseDownWasUsed=this.processMenuAction$I$Z(action, true))  );
}this.activeGraphicalObject=this.findClosestGraphicalObject$I$I(this.mouseX, this.mouseY);
this.activeMol=this.findClosestMol$I$I(this.mouseX, this.mouseY);
this.activeMol.clearRotation$();
if (this.activeGraphicalObject === this.reactionArrow ) {
this.activeMol.touchedAtom=0;
this.activeMol.touchedBond=0;
}if ((this.canHandleAtomClickedCallBack$()).valueOf()) {
if (this.activeMol.touchedAtom > 0) {
this.handleAtomClickedCallBack$I$I(this.activeMolIndex$(), this.activeMol.touchedAtom);
if (this.isDepict$() && !this.options.depictActionEnabled ) {
return true;
}}if (this.activeMol.touchedBond > 0) {
this.handleBondClickedCallBack$I$I(this.activeMolIndex$(), this.activeMol.touchedBond);
if (this.isDepict$() && !this.options.depictActionEnabled ) {
return true;
}}}this.movePossible=true;
var returnStatus;
if (this.activeMol.touchedAtom > 0 && this.canDoAtomOrBondAction$I(this.action) ) {
var an=this.activeMol.an$I(this.activeMol.touchedAtom);
this.actions.setAtomVariableAction$Z$I(an >= 33 && an <= 42 , this.action);
p$2.processAtomPicked$I.apply(this, [this.action]);
returnStatus=true;
} else if (this.activeMol.touchedBond > 0 && this.canDoAtomOrBondAction$I(this.action) ) {
p$2.processBondPicked$I.apply(this, [0]);
returnStatus=true;
} else if ((this.moleculePartsList.isReallyEmpty$() || this.newMolecule == true  ) && !this.isDepict$() ) {
if (this.action <= 201) return true;
this.moleculePartsList.removeEmptyMolecules$();
this.activeMol=Clazz_new_($I$(17,1).c$$jme_JME$jme_core_JMECore_Parameters,[this, this.params]);
this.moleculePartsList.add$O(this.activeMol);
this.lastTouched.mol=this.activeMol;
this.smol=null;
p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).newMolecule$D$D(this.screenToDrawingX$D(x), this.screenToDrawingY$D(y));
this.activeMol.setBondCenters$();
returnStatus=true;
} else {
returnStatus=false;
}if (returnStatus) {
this.setMustRedrawMolecularArea$Z(true);
this.repaint$();
}this.mouseDownWasUsed=returnStatus;
return returnStatus;
});

Clazz_newMeth(C$, 'processAtomPicked$I',  function (action) {
if (this.activeMol.touchedAtom == 0) return false;
this.lastTouched.mol=this.activeMol;
if (action == 107) {
if (this.queryBox.isBondQuery$()) return true;
this.activeMol.setAtom$I$S(this.activeMol.touchedAtom, this.queryBox.getSmarts$());
this.activeMol.isQuery=true;
this.recordAtomEvent$S("addAtomQuery");
} else if (action == 105) {
var marked;
if (!this.options.pseudoMark && !this.options.starNothing ) {
var newMap=-1;
if (this.markFromKeyboardInput) {
newMap=this.keyboradInputMark;
this.resetExtendAtomMark=true;
this.markFromKeyboardInput=false;
this.clearInfo$();
if (this.params.mark) {
this.activateMarkerColor$I(newMap);
}}if (this.params.mark) {
marked=this.activeMol.markAtom$I(newMap > 0 ? newMap : this.activeMarkerColorIndex);
} else {
if (newMap == -1) {
if (this.options.reaction) {
var reactionRole=this.activeMol.getReactionRole$();
newMap=this.findMaxAtomMapOfMoleculeParts$jme_JMEmolList$I(this.moleculePartsList, reactionRole);
} else {
newMap=this.activeMol.getMaxAtomMap$();
}if (!this.mouseShift || newMap == 0 ) ++newMap;
}marked=this.activeMol.markAtom$I(newMap);
}} else {
marked=true;
}this.recordAtomEvent$S(marked ? "markAtom" : "unMarkAtom");
if (this.options.pseudoMark) {
this.willPostSave$Z(false);
}} else if (action == 113) {
} else {
p$2.getBuilder$jme_JMEmol$I.apply(this, [this.activeMol, action]).checkAtomAction$();
this.activeMol.setBondCenters$();
return true;
}return true;
}, p$2);

Clazz_newMeth(C$, 'processBondPicked$I',  function (action) {
if (this.activeMol.touchedBond == 0) return false;
var actionOld=0;
if (action == 0) {
action=this.action;
} else {
actionOld=this.action;
this.action=action;
}this.lastTouched.mol=this.activeMol;
if (action == 107) {
if (!this.queryBox.isBondQuery$()) return (Boolean.TRUE).valueOf();
var bondQuery=this.queryBox.getSmarts$();
this.activeMol.bonds[this.activeMol.touchedBond].bondType=9;
this.activeMol.bonds[this.activeMol.touchedBond].btag=bondQuery;
this.recordBondEvent$S("setQueryBond");
} else if (action == 105) {
var marked=(this.options.pseudoMark || this.activeMol.markBond$I(this.activeMarkerColorIndex) );
this.recordBondEvent$S(marked ? "markBond" : "unMarkBond");
if (this.options.pseudoMark) {
this.willPostSave$Z(false);
}} else {
p$2.getBuilder$jme_JMEmol.apply(this, [this.activeMol]).checkBondAction$();
this.activeMol.setBondCenters$();
return true;
}if (actionOld != 0) this.action=actionOld;
this.repaint$();
return true;
}, p$2);

Clazz_newMeth(C$, 'getAtomSymbolForX$',  function () {
var xx=this.atomicSymbol.getText$();
return (xx.length$() == 0 ? "X" : xx);
});

Clazz_newMeth(C$, 'mouseUp$java_awt_event_MouseEvent$I$I',  function (e, x, y) {
var eventUsed=false;
if (this.movingAtom) {
this.movingAtom=false;
this.willPostSave$Z(true);
eventUsed=true;
}this.gui.mustReDrawInfo=false;
this.lastRotation=0;
if (this.lastAction == 1) {
if (this.action == 205) {
this.activeMol.checkChain$();
this.recordBondEvent$S("addChain");
this.willPostSave$Z(true);
} else {
if (this.lastTouched.mol != null  && this.activeMol !== this.lastTouched.mol  ) {
this.activeMol=this.mergeMols$jme_JME_Touched$jme_JMEmol(this.lastTouched, this.activeMol);
} else {
this.activeMol.checkBond$();
this.activeMol.setBondCenters$();
}}if (this.bondRubberBanding) {
if (this.action != 205) {
this.molChangeManager.removeLast$();
this.recordBondEvent$S("addBond");
}this.bondRubberBanding=false;
}eventUsed=true;
} else if (this.lastAction == 5) {
this.willPostSave$Z(true);
eventUsed=true;
}if (this.lastAction > 0) {
if (this.lastAction != 5 && this.lastAction != 7 ) {
}if (this.lastAction == 5 && this.options.reaction ) {
var changedPart=this.updateReactionRoles$();
++changedPart;
if (changedPart != 0) {
this.recordMoleculePartEvent$S$I("changeReactionRole", changedPart);
}}this.redrawMolecularAreaOnly$();
this.lastAction=0;
this.afterClear=false;
eventUsed=true;
}if ($I$(21).isTouchSupported$() && (this.activeMol.touchedBond != 0 || this.activeMol.touchedAtom != 0 ) ) {
this.activeMol.touchedBond=0;
this.activeMol.touchedAtom=0;
this.redrawMolecularAreaOnly$();
eventUsed=true;
}if (!eventUsed && this.gui.fullScreenIcon != null   && this.gui.fullScreenIcon.contains$I$I(x, y) ) {
eventUsed=true;
this.toggleFullScreen$();
} else if (!eventUsed && !this.mouseDownWasUsed && this.options.toggleDepictEdit  ) {
p$2.toggleDepict.apply(this, []);
eventUsed=true;
}this.mouseShift=false;
return eventUsed;
});

Clazz_newMeth(C$, 'toggleDepict',  function () {
if (this.isDepict$()) {
this.options$S("nodepict");
this.centerAllMoleculesAsAgroup$jme_canvas_Graphical2DObjectGroup$D(this.graphicalObjectList$(), this.molecularAreaScalePixelsPerCoord);
this.redrawMolecularAreaOnly$();
} else {
this.options$S("depict");
}this.handleAfterAfterDepictEditToggleEvent$();
}, p$2);

Clazz_newMeth(C$, 'mouseDrag$java_awt_event_MouseEvent$I$I',  function (e, x, y) {
if (!this.movePossible || e.isMetaDown$() ) return true;
this.gui.mustReDrawInfo=false;
var drawingAreaMoveX=this.scaleScreenToDrawing$D(x - this.mouseX);
var drawingAreaMoveY=this.scaleScreenToDrawing$D(y - this.mouseY);
var drawingAreaX=this.screenToDrawingX$D(x);
var drawingAreaY=this.screenToDrawingY$D(y);
if (this.lastAction == 2 || this.lastAction == 3  || this.lastAction == 9 ) {
return true;
}if (this.lastAction == 1) {
var done=false;
if (this.lastTouched.mol != null ) this.lastTouched.mol.touchedAtom=0;
--this.activeMol.natoms;
this.findMolAndAtomOrBondInDrawingArea$I$I$jme_JME_Touched(x, y, this.newTouched);
++this.activeMol.natoms;
if (this.newTouched.mol != null  && this.newTouched.atomIndex > 0 ) {
var touched_JMEmol=this.newTouched.mol;
touched_JMEmol.touchedAtom=this.newTouched.atomIndex;
if (touched_JMEmol !== this.activeMol  || this.newTouched.atomIndex != this.activeMol.touched_org ) {
this.activeMol.XY$I$D$D(this.activeMol.natoms, touched_JMEmol.x$I(this.newTouched.atomIndex), touched_JMEmol.y$I(this.newTouched.atomIndex));
touched_JMEmol.touchedAtom=this.newTouched.atomIndex;
done=true;
this.lastTouched.initMyselfWith$jme_JME_Touched(this.newTouched);
}}if (!done) {
this.activeMol.rubberBanding$D$D(drawingAreaX, drawingAreaY);
}this.bondRubberBanding=true;
} else if (this.action == 113 && this.activeMol.touchedAtom > 0 ) {
this.movingAtom=true;
this.activeMol.XY$I$D$D(this.activeMol.touchedAtom, drawingAreaX, drawingAreaY);
this.activeMol.setBondCenters$();
} else if (e.isShiftDown$() || e.isMetaDown$() ) {
this.activeMol.rotate$D(drawingAreaMoveX);
this.lastAction=5;
} else if (this.activeMol.touchedAtom == 0 && this.activeMol.touchedBond == 0 ) {
if (!this.isOutsideDrawingArea$I$I(x, y)) {
var boundingBox=this.getMolecularAreaCoordBoundingBox$();
$I$(30).move$jme_canvas_Graphical2DObject$D$D$java_awt_geom_Rectangle2D_Double(this.activeGraphicalObject, drawingAreaMoveX, drawingAreaMoveY, boundingBox);
this.lastAction=5;
}}this.redrawMolecularAreaOnly$();
this.mouseX=x;
this.mouseY=y;
return true;
});

Clazz_newMeth(C$, 'moveTo$I$I$I',  function (screenX, screenY, newAtom) {
this.mustRedrawNothing$();
var repaintFlag=false;
if (newAtom != 0) {
this.keyTouched.mol=this.newTouched.mol=this.activeMol;
this.keyTouched.atomIndex=this.newTouched.atomIndex=(newAtom > 0 ? newAtom : 0);
this.keyTouched.bondIndex=this.newTouched.bondIndex=(newAtom < 0 ? -newAtom : 0);
} else if (this.isInMolecularArea$I$I(screenX, screenY)) {
this.findMolAndAtomOrBondInDrawingArea$I$I$jme_JME_Touched(screenX, screenY, this.newTouched);
} else {
var action=this.gui.determineMenuAction$D$D$Z(screenX, screenY, true);
if (action > 0 && this.isActionEnabled$I(action) ) {
if (action != this.mouseWasOverAction) {
repaintFlag=p$2.handleMouseLeaveActionMenu$I.apply(this, [this.mouseWasOverAction]);
repaintFlag=p$2.handleMouseEnterActionMenu$I.apply(this, [action]) || repaintFlag ;
this.mouseWasOverAction=action;
}}}if ((this.newTouched.isTouched$() || this.lastTouched.isTouched$() ) && !this.newTouched.equals$jme_JME_Touched(this.lastTouched) ) {
repaintFlag=p$2.setTouched.apply(this, []);
}if (repaintFlag) {
this.setMustRedrawMolecularArea$Z(true);
this.repaint$();
}return repaintFlag;
});

Clazz_newMeth(C$, 'setTouched',  function () {
if (this.lastTouched.mol != null ) {
this.lastTouched.mol.touchedAtom=0;
this.lastTouched.mol.touchedBond=0;
}if (this.newTouched.mol != null ) {
this.newTouched.mol.touchedAtom=this.newTouched.atomIndex;
this.newTouched.mol.touchedBond=this.newTouched.bondIndex;
this.activeMol=this.newTouched.mol;
}this.notifyAtomHighLightJSfunction$I(this.newTouched.atomIndex);
this.notifyBondHighLightJSfunction$I(this.newTouched.bondIndex);
this.lastTouched.initMyselfWith$jme_JME_Touched(this.newTouched);
Clazz_assert(C$, this, function(){return this.lastTouched.equals$jme_JME_Touched(this.newTouched)});
return true;
}, p$2);

Clazz_newMeth(C$, 'keyDown$java_awt_event_KeyEvent$I',  function (e, key) {
if (this.gui == null ) return false;
switch (key) {
case 16:
this.activeMol.clearRotation$();
return false;
case 17:
case 157:
case 18:
return false;
}
this.gui.mustReDrawInfo=false;
var ch=e.getKeyChar$();
var allowModify=false;
if (key >= 96 && key <= 105 ) {
allowModify=true;
key=key - 96 + 48;
} else if (Character.isAlphabetic$I(key)) {
allowModify=true;
} else if (ch != "\uffff") {
key=0 + ch.$c();
}if (this.isDepict$() && !this.options.depictActionEnabled ) return false;
this.clearInfo$();
var modifiers=e.getModifiers$();
var meta=e.isMetaDown$() || e.isControlDown$() ;
var shift=(allowModify && modifiers == 1 );
if (this.activeMol.touchedAtom > 0) {
this.actions.setAtomVariableAction$Z$I(false, this.action);
} else if (this.activeMol.touchedBond > 0) {
this.actions.setBondVariableAction$Z(true);
}if (meta) {
return this.actions.doAction$O$I(this.actions.getKeyStroke$I$I(key, 2), 0);
}var action=0;
if (modifiers == 0) {
action=p$2.checkKeyPressLeftMenu$I.apply(this, [key]);
}if (action == 0) action=p$2.checkKeyBinding$I$Z.apply(this, [key, shift]);
if (action == -1) return true;
if (action == 0 && this.menuXShortcuts != null   && this.menuXShortcuts.length$() > 0 ) {
action=p$2.checkKeyPressMenuX$I$Z.apply(this, [key, shift]);
}return (action != 0 && this.processMenuAction$I$Z(action, false) );
});

Clazz_newMeth(C$, 'checkKeyBinding$I$Z',  function (key, shift) {
if (this.actions.doAction$O$I(this.actions.getKeyStroke$I$I(key, (shift ? 1 : 0)), 0)) {
return -1;
}return 0;
}, p$2);

Clazz_newMeth(C$, 'doPage$I',  function (action) {
var sdf=null;
switch (action) {
case 152:
sdf=this.sdfStack.previous$();
break;
case 151:
sdf=this.sdfStack.next$();
break;
case 154:
sdf=this.sdfStack.last$();
break;
case 153:
sdf=this.sdfStack.first$();
break;
default:
Clazz_assert(C$, this, function(){return (false)});
}
if (sdf == null ) {
this.info$S("No more molecules in SDF buffer");
return;
}this.clearMyMolecularContent$();
this.pasteFromSDFstack=true;
this.handleReadGenericInput$S$jme_js_AsyncCallback$Z$Z(sdf, null, false, false);
this.pasteFromSDFstack=false;
if (this.infoText.equals$O("")) {
this.info$S("MOL n. " + this.sdfStack.getCurrentDisplayIndex$() + " of " + this.sdfStack.size$() );
this.recordAfterStructureChangedEvent$S("SDFstack");
this.willPostSave$Z(false);
}});

Clazz_newMeth(C$, 'doAtomBond$I',  function (action) {
p$2.getBuilder$jme_JMEmol$I.apply(this, [this.activeMol, action == -1 ? p$2.updateLeftMenuActions.apply(this, []) : action]).checkAtomOrBondAction$();
this.structureChangedByAction=true;
});

Clazz_newMeth(C$, 'updateLeftMenuActions',  function () {
switch (this.action) {
case 701:
this.info$S("-F");
return 2054;
case 801:
this.info$S("-Cl");
return 2055;
case 901:
this.info$S("-Br");
return 2056;
case 1001:
this.info$S("-I");
return 2057;
case 501:
this.info$S("-OH");
return 2059;
case 401:
this.info$S("-NH2");
return 2058;
default:
return 202;
}
}, p$2);

Clazz_newMeth(C$, 'doAtomG$',  function () {
if (this.activeMol.touchedAtom > 0) {
this.atomicSymbol.setText$S("*");
this.options.xButton=true;
this.doAtomX$();
}});

Clazz_newMeth(C$, 'doAtomX$',  function () {
if (this.activeMol.touchedAtom > 0 && this.options.xButton ) {
this.info$S(this.atomicSymbol.getText$());
this.active_an=32;
p$2.getBuilder$jme_JMEmol$I.apply(this, [this.activeMol, 1201]).checkAtomAction$();
}});

Clazz_newMeth(C$, 'doNavigate$I',  function (key) {
var dir=0;
switch (key) {
case 38:
dir=1;
break;
case 40:
dir=2;
break;
case 39:
dir=4;
break;
case 37:
dir=3;
break;
default:
return;
}
var aorb=(this.activeMol.touchedAtom > 0 ? this.activeMol.touchedAtom : -this.activeMol.touchedBond);
var isMove=(aorb != 0);
if (!isMove) {
aorb=(this.keyTouched.mol !== this.activeMol  ? 0 : this.keyTouched.atomIndex > 0 ? this.keyTouched.atomIndex : -this.keyTouched.bondIndex);
}if (aorb == 0) {
isMove=true;
aorb=-1;
}var a=(!isMove ? aorb : this.activeMol.navigateBonds$I$I(aorb, dir));
if (a != 0) {
this.moveTo$I$I$I(0, 0, a);
}});

Clazz_newMeth(C$, 'getMenuXShortcuts$',  function () {
return this.menuXShortcuts;
});

Clazz_newMeth(C$, 'setMenuXShortcuts$S',  function (shortcuts) {
this.menuXShortcuts=shortcuts;
});

Clazz_newMeth(C$, 'checkKeyPressMenuX$I$Z',  function (key, shift) {
var shortcut=(shift ? Character.toUpperCase$C(String.fromCharCode(key)) : Character.toLowerCase$C(String.fromCharCode(key)));
if (this.menuXShortcuts.indexOf$I(shortcut) < 0) return 0;
this.atomicSymbol.setText$S(Character.toString$C(shortcut));
this.options.xButton=true;
this.info$S(this.atomicSymbol.getText$());
this.active_an=32;
return 1201;
}, p$2);

Clazz_newMeth(C$, 'checkKeyPressLeftMenu$I',  function (key) {
switch (key) {
case 67:
return 301;
case 78:
return 401;
case 79:
return 501;
case 83:
return 601;
case 80:
return 1101;
case 70:
return 701;
case 76:
return 801;
case 66:
return 901;
case 73:
return 1001;
case 72:
this.info$S("H");
return 1300;
case 82:
this.info$S("-R");
return 1301;
}
return 0;
}, p$2);

Clazz_newMeth(C$, 'mergeMols$jme_JME_Touched$jme_JMEmol',  function (last, active) {
active.deleteAtom$I(active.natoms);
var atom1=active.touched_org;
var atom2=last.atomIndex + active.natoms;
Clazz_assert(C$, this, function(){return atom1 != active.natoms + 1});
var otherMol=last.mol;
var merged=Clazz_new_([this, Clazz_array($I$(17), -1, [active, otherMol])],$I$(17,1).c$$jme_JME$jme_JMEmolA);
merged.atoms[0]=Clazz_new_($I$(40,1));
merged.createAndAddNewBond$I$I$I(atom1, atom2, 1);
this.moleculePartsList.remove$O(otherMol);
this.moleculePartsList.replace$jme_JMEmol$jme_JMEmol(active, merged);
last.reset$();
return merged;
});

Clazz_newMeth(C$, 'willPostSave$Z',  function (b) {
this.saveCurrentState=b;
});

Clazz_newMeth(C$, 'scaleScreenToDrawing$D',  function (pos) {
return pos / this.molecularAreaScalePixelsPerCoord;
});

Clazz_newMeth(C$, 'scaleDrawingToScreen$D',  function (coord) {
return Long.$ival(Math.round$D(coord * this.molecularAreaScalePixelsPerCoord));
});

Clazz_newMeth(C$, 'screenToDrawingX$D',  function (appletPixelPositionX) {
return this.scaleScreenToDrawing$D(appletPixelPositionX - this.leftMenuWidth$());
});

Clazz_newMeth(C$, 'screenToDrawingY$D',  function (appletPixelPositionY) {
return this.scaleScreenToDrawing$D(appletPixelPositionY - this.topMenuHeight$());
});

Clazz_newMeth(C$, 'drawingToScreenX$D',  function (xCoord) {
var screenX=this.scaleDrawingToScreen$D(xCoord);
screenX+=this.leftMenuWidth$();
return screenX;
});

Clazz_newMeth(C$, 'drawingToScreenY$D',  function (yCoord) {
var screenY=this.scaleDrawingToScreen$D(yCoord);
screenY+=this.topMenuHeight$();
return screenY;
});

Clazz_newMeth(C$, 'findClosestMol$I$I',  function (x, y) {
var found=null;
if (this.moleculePartsList.size$() == 1) return this.moleculePartsList.first$();
var xCoord=this.screenToDrawingX$D(x);
var yCoord=this.screenToDrawingY$D(y);
var min=1.7976931348623157E308;
for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var d=mol.closestDistance$D$D(xCoord, yCoord);
if (d < min ) {
min=d;
found=mol;
}}
return found;
});

Clazz_newMeth(C$, 'findClosestGraphicalObject$I$I',  function (x, y) {
var found=null;
var xCoord=this.screenToDrawingX$D(x);
var yCoord=this.screenToDrawingY$D(y);
var min=1.7976931348623157E308;
if (this.options.reaction) {
min=this.reactionArrow.closestDistance$D$D(xCoord, yCoord);
found=this.reactionArrow;
}for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var d=mol.closestDistance$D$D(xCoord, yCoord);
if (d < min ) {
min=d;
found=mol;
}}
return found;
});

Clazz_newMeth(C$, 'findMolAndAtomOrBondInDrawingArea$I$I$jme_JME_Touched',  function (x, y, result) {
if (this.isOutsideDrawingArea$I$I(x, y)) {
result.reset$();
return;
}this.findMolAndAtomOrBondWithinRadius$I$I$I$jme_JME_Touched(x, y, $I$(21).getHumanInteractionTouchRadius$(), result);
});

Clazz_newMeth(C$, 'findMolAndAtomOrBondWithinRadius$I$I$I$jme_JME_Touched',  function (screenX, screenY, radius, result) {
result.reset$();
var xCoord=this.screenToDrawingX$D(screenX);
var yCoord=this.screenToDrawingY$D(screenY);
var minDistance=radius;
var retMin=Clazz_array(Double.TYPE, [1]);
var ignoreAtoms=this.ignoreAtoms$();
var ignoreBonds=this.ignoreBonds$();
for (var eachMol, $eachMol = this.moleculePartsList.iterator$(); $eachMol.hasNext$()&&((eachMol=($eachMol.next$())),1);) {
retMin[0]=radius;
var a_or_b=eachMol.testAtomAndBondTouch$D$D$Z$Z$DA(xCoord, yCoord, ignoreAtoms, ignoreBonds, retMin);
if (retMin[0] < minDistance ) {
minDistance=retMin[0];
result.reset$();
result.mol=eachMol;
result.distance=minDistance;
if (a_or_b > 0) result.atomIndex=a_or_b;
 else result.bondIndex=-a_or_b;
}}
});

Clazz_newMeth(C$, 'isMacintosh$',  function () {
return false;
});

Clazz_newMeth(C$, 'updateMark$I',  function (n) {
if (this.options.autonumber) {
if (n == 0) {
this.keyboradInputMark=0;
this.showInfo$S("click marked atom to delete map");
this.markFromKeyboardInput=true;
return;
}}if (this.resetExtendAtomMark) {
this.keyboradInputMark=n;
this.resetExtendAtomMark=false;
} else {
if (this.keyboradInputMark > -1 && this.keyboradInputMark < 100 ) this.keyboradInputMark=this.keyboradInputMark * 10 + n;
 else {
this.keyboradInputMark=n;
this.resetExtendAtomMark=false;
}}var action_type="map";
var target="atom";
var reset_action="delete map";
if (this.params.mark) {
reset_action="remove background color";
action_type="color index";
if (this.options.starAtomOnly) {
} else if (this.options.starBondOnly) {
target="bond";
} else {
target="atom or bond";
}if (this.keyboradInputMark <= 0) {
this.keyboradInputMark=1;
}}if (this.keyboradInputMark == 0) {
this.keyboradInputMark=0;
this.showInfo$S("click marked " + target + " to " + reset_action );
} else {
if (this.params.mark) {
this.activateMarkerColor$I(this.keyboradInputMark);
}this.showInfo$S("Click " + target + " to set " + action_type + " to " + this.keyboradInputMark );
}this.markFromKeyboardInput=true;
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (evt) {
this.mustRedrawNothing$();
var cmd=evt.getActionCommand$();
if (this.subclassHandleMenuAction$S(cmd)) {
return;
}var colorInfo=this.colorManager.getColorInfoOfColorHash$S(cmd);
if (colorInfo != null ) {
var colorIndex=colorInfo.index;
this.activateMarkerColor$I(colorIndex);
this.showInfo$S(colorInfo.name);
return;
}if (cmd.equals$O($I$(25).SMILES.toString())) {
this.clipBoardManager.setClipboardContents$S(this.smiles$());
} else if (cmd.equals$O($I$(25).MOL.toString())) {
this.copyMolFileToClipboard$Z(false);
} else if (cmd.equals$O($I$(25).MOL_V3000.toString())) {
this.copyMolFileToClipboard$Z(true);
} else if (cmd.equals$O($I$(25).JME.toString())) {
this.copyJmeStringToClipboard$();
} else if (cmd.equals$O($I$(25).PASTE.toString())) {
if (this.options.paste) this.pasteMolFileFromClipboard$();
} else if (cmd.equals$O($I$(25).INCHI.toString())) {
this.copyInchiToClipboard$jme_JME_CopyPasteAction($I$(25).INCHI);
} else if (cmd.equals$O($I$(25).INCHI_KEY.toString())) {
this.copyInchiToClipboard$jme_JME_CopyPasteAction($I$(25).INCHI_KEY);
} else if (cmd.equals$O($I$(25).INCHI_AUXINFO.toString())) {
this.copyInchiToClipboard$jme_JME_CopyPasteAction($I$(25).INCHI_AUXINFO);
} else if (cmd.equals$O($I$(25).OCLCODE.toString())) {
this.copyOclCodetoClipboard$();
} else if (cmd.equals$O($I$(25).SEARCH_INCHI_KEY.toString())) {
this.searchChemicalStructureUsingInchiKey$();
} else if (cmd.equals$O($I$(25).SVG.toString())) {
this.copySVGToClipboard$();
} else if (C$.isJavaScript && cmd.equals$O($I$(25).RAW_STRING_GRAPHIC.toString()) ) {
this.copyRawGraphicToClipboard$();
} else if (cmd.equals$O("rotation")) {
if (this.lastAction != 7) {
this.lastRotation=0;
}var rotation=evt.getWhen$();
(rotation=Long.$mul(rotation,(-1)));
var deltaRotation=Long.$sub(rotation,this.lastRotation);
if (Long.$lt(Math.abs$J(deltaRotation),10 )) {
this.activeMol.clearRotation$();
this.activeMol.rotate$D(Long.$ival(deltaRotation));
}this.setMustRedrawMolecularArea$Z(true);
this.lastAction=7;
this.lastRotation=rotation;
} else if (cmd == C$.unSetChiralFlagAction || cmd == C$.setChiralFlagAction ) {
var changed=this.activeMol.setChiralFlag$Boolean(Boolean.valueOf$Z(cmd == C$.setChiralFlagAction));
if (changed) {
var n=this.moleculePartsList.size$();
var additional="";
if (n > 1) {
var index=this.moleculePartsList.indexOf$O(this.activeMol);
++index;
additional=" for molecule " + index;
}if ((this.activeMol.chiralFlag).valueOf()) {
this.info$S("Chiral flag is set" + additional);
} else {
this.info$S("No Chiral flag" + additional);
}this.recordMoleculePartEvent$S$I("changeChiral", this.activeMolIndex$());
this.setMustRedrawMolecularArea$Z(true);
}} else if (cmd == C$.autoAtomMapMoleculeAction) {
var max=this.findMaxAtomMapAmongAllMolecules$();
var changed=false;
for (var at=1; at <= this.activeMol.natoms; at++) {
var atom=this.activeMol.atoms[at];
if (!atom.hasBeenMapped$()) {
++max;
atom.setMap$I(max);
changed=true;
}}
if (changed) {
this.setMustRedrawMolecularArea$Z(true);
this.recordMoleculePartEvent$S$I("changeManyAtomMap", this.activeMolIndex$());
}} else if (cmd == C$.deleteAtomMapMoleculeAction) {
if ((this.setMustRedrawMolecularArea$Z(this.activeMol.resetAtomMaps$()))) {
this.recordMoleculePartEvent$S$I("deleteAtomMaps", this.activeMolIndex$());
}} else if (cmd == "Set coordination bond" || cmd == "Unset coordination bond" ) {
this.setMustRedrawMolecularArea$Z(true);
var bondIndex=this.inspectorEvent.bondIndex;
Clazz_assert(C$, this, function(){return (bondIndex > 0)});
var isCoordination=Boolean.valueOf$Z(this.inspectorEvent.mol.getBond$I(bondIndex).toggleCoordination$().isCoordination$());
this.recordBondEvent$S(isCoordination.booleanValue$() ? "setBondCoordination" : "unSetBondCoordination");
} else if (cmd == "Delete hydrogens") {
var options=Clazz_new_($I$(9,1)).hydrogenParams;
options.removeHs=true;
options.removeOnlyCHs=false;
this.setMustRedrawMolecularArea$Z(this.activeMol.deleteHydrogens$jme_core_JMECore_Parameters_HydrogenParams(options));
if (this.gui.mustReDrawMolecularArea) {
this.recordMoleculePartEvent$S$I("deleteHydrogens", this.activeMolIndex$());
}} else if (cmd == "Compute 2D coordinates") {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda6||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda6", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.b$['jme.JME'].compute2DSuccess$.apply(this.b$['jme.JME'], []);
});
})()
), Clazz_new_(P$.JME$lambda6.$init$,[this, null]))]);
return;
} else if (cmd.equals$O("scale100")) {
} else if (cmd.equals$O("end_gesture")) {
this.willPostSave$Z(true);
} else {
this.setSubstituent$S(cmd);
}if (this.gui.mustReDrawMolecularArea || this.gui.mustReDrawInfo ) {
this.repaint$();
}});

Clazz_newMeth(C$, 'subclassHandleMenuAction$S',  function (cmd) {
return false;
});

Clazz_newMeth(C$, 'compute2DSuccess$',  function () {
if (this.activeMol.nAtoms$() == 0) return;
var index=this.activeMolIndex$();
var centerX=this.activeMol.centerX$();
var centerY=this.activeMol.centerY$();
var newActiveMol=this.activeMol.compute2DcoordinatesIfMissing$();
if (newActiveMol != null ) {
var dx=centerX - newActiveMol.centerX$();
var dy=centerY - newActiveMol.centerY$();
newActiveMol.moveXY$D$D(dx, dy);
this.moleculePartsList.set$I$O(index, newActiveMol);
this.recordMoleculePartEvent$S$I("compute2D", index);
this.setMustRedrawMolecularArea$Z(true);
this.info$S("2D coordinates provided by OpenChemLib");
this.repaint$();
} else {
this.info$S("2D coordinates computation failed");
}});

Clazz_newMeth(C$, 'exportFile$jme_io_JMEWriter_SupportedOutputFileFormat$jme_js_AsyncCallback',  function (format, callBack) {
switch (format) {
case $I$(1).INCHI:
break;
case $I$(1).INCHI_AUXINFO:
break;
case $I$(1).INCHI_KEY:
break;
case $I$(1).JME:
break;
case $I$(1).MOL:
break;
case $I$(1).MOL_V3000:
break;
case $I$(1).OCLCODE:
break;
case $I$(1).RAW_STRING_GRAPHIC:
break;
case $I$(1).SMILES:
break;
case $I$(1).SVG:
break;
default:
break;
}
});

Clazz_newMeth(C$, 'copyFileToClipboard$',  function () {
switch (this.clipboardFormat) {
case $I$(1).MOL:
this.copyMolFileToClipboard$Z(false);
break;
case $I$(1).MOL_V3000:
this.copyMolFileToClipboard$Z(true);
break;
case $I$(1).JME:
this.copyJmeStringToClipboard$();
break;
case $I$(1).SVG:
this.copySVGToClipboard$();
break;
case $I$(1).RAW_STRING_GRAPHIC:
this.copyRawGraphicToClipboard$();
break;
case $I$(1).SMILES:
this.clipBoardManager.setClipboardContents$S(this.smiles$());
break;
case $I$(1).INCHI:
this.copyInchiToClipboard$jme_JME_CopyPasteAction($I$(25).INCHI);
break;
case $I$(1).INCHI_AUXINFO:
this.copyInchiToClipboard$jme_JME_CopyPasteAction($I$(25).INCHI_AUXINFO);
break;
case $I$(1).INCHI_KEY:
this.copyInchiToClipboard$jme_JME_CopyPasteAction($I$(25).INCHI_KEY);
break;
case $I$(1).OCLCODE:
this.copyOclCodetoClipboard$();
break;
default:
this.clipBoardManager.setClipboardContents$S("incorrect or unsupported export format");
}
});

Clazz_newMeth(C$, 'generateOuttputFile$jme_js_AsyncCallback',  function (callBack) {
this.generateOuttputFile$jme_io_JMEWriter_SupportedOutputFileFormat$jme_js_AsyncCallback(this.clipboardFormat, callBack);
});

Clazz_newMeth(C$, 'generateOuttputFile$jme_io_JMEWriter_SupportedOutputFileFormat$jme_js_AsyncCallback',  function (format, callBack) {
var output=null;
switch (format) {
case $I$(1).MOL:
output=this.molFile$Z(false);
break;
case $I$(1).MOL_V3000:
output=this.molFile$Z(true);
break;
case $I$(1).JME:
output=this.jmeFile$();
break;
case $I$(1).SVG:
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda7||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda7", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.$finals$.callBack.onSuccess.apply(this.$finals$.callBack, [this.b$['jme.JME'].getOclSVG$.apply(this.b$['jme.JME'], [])]);
});
})()
), Clazz_new_(P$.JME$lambda7.$init$,[this, {callBack:callBack}]))]);
break;
case $I$(1).RAW_STRING_GRAPHIC:
output=this.getMolecularAreaGraphicsString$();
break;
case $I$(1).SMILES:
output=this.smiles$();
break;
case $I$(1).INCHI:
case $I$(1).INCHI_AUXINFO:
case $I$(1).INCHI_KEY:
case $I$(1).INCHI_JSON:
this.computeInchi$jme_io_JMEWriter_SupportedOutputFileFormat$jme_js_AsyncCallback(format, callBack);
break;
case $I$(1).OCLCODE:
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda8||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda8", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.$finals$.callBack.onSuccess.apply(this.$finals$.callBack, [this.b$['jme.JME'].getOclCode$.apply(this.b$['jme.JME'], [])]);
});
})()
), Clazz_new_(P$.JME$lambda8.$init$,[this, {callBack:callBack}]))]);
return;
default:
var error=Clazz_new_(Throwable.c$$S,["incorrect or unsupported export format"]);
callBack.onFailure(error);
}
if (output != null ) {
callBack.onSuccess(output);
}});

Clazz_newMeth(C$, 'computeInchi$jme_io_JMEWriter_SupportedOutputFileFormat$jme_js_AsyncCallback',  function (format, callBack) {
});

Clazz_newMeth(C$, 'copyMolFileToClipboard$Z',  function (isV3000) {
this.clipBoardManager.setClipboardContents$S(this.molFile$Z(isV3000));
});

Clazz_newMeth(C$, 'copyJmeStringToClipboard$',  function () {
this.clipBoardManager.setClipboardContents$S(this.jmeFile$());
});

Clazz_newMeth(C$, 'copyOclCodetoClipboard$',  function () {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda9||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda9", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.b$['jme.JME'].clipBoardManager.setClipboardContents$S.apply(this.b$['jme.JME'].clipBoardManager, [this.b$['jme.JME'].getOclCode$.apply(this.b$['jme.JME'], [])]);
});
})()
), Clazz_new_(P$.JME$lambda9.$init$,[this, null]))]);
});

Clazz_newMeth(C$, 'copySVGToClipboard$',  function () {
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda10||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda10", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.b$['jme.JME'].clipBoardManager.setClipboardContents$S.apply(this.b$['jme.JME'].clipBoardManager, [this.b$['jme.JME'].getOclSVG$.apply(this.b$['jme.JME'], [])]);
});
})()
), Clazz_new_(P$.JME$lambda10.$init$,[this, null]))]);
});

Clazz_newMeth(C$, 'copyRawGraphicToClipboard$',  function () {
var result=this.getMolecularAreaGraphicsString$();
if (result != null ) {
this.clipBoardManager.setClipboardContents$S(result);
}});

Clazz_newMeth(C$, 'copyInchiToClipboard$jme_JME_CopyPasteAction',  function (action) {
});

Clazz_newMeth(C$, 'searchChemicalStructureUsingInchiKey$',  function () {
});

Clazz_newMeth(C$, 'pasteMolFileFromClipboard$',  function () {
this.afterStructureChangeEvent.setOrigin_PASTE$();
this.clipBoardManager.getAsyncClipboardContents$jme_io_TextTransfer_PasteAction(this.getPasteAction$());
});

Clazz_newMeth(C$, 'pasteDirect$S$Z',  function (molString, originIsDrop) {
if (!this.options.paste) {
return;
}if (molString != null  && molString.length$() > 0 ) {
if (originIsDrop) this.afterStructureChangeEvent.setOrigin_DROP$();
 else this.afterStructureChangeEvent.setOrigin_PASTE$();
this.getPasteAction$().paste$S(molString);
} else {
this.showError$S("empty or null structure");
}});

Clazz_newMeth(C$, 'getPasteAction$',  function () {
return this.createPasteActionInstanceIfNeeded$();
});

Clazz_newMeth(C$, 'createPasteActionInstanceIfNeeded$',  function () {
if (this.pasteAction == null ) {
this.pasteAction=((P$.JME$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JME$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['jme.io.TextTransfer','jme.io.TextTransfer.PasteAction']], 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'paste$S',  function (clipboardContent) {
if (clipboardContent != null ) {
this.b$['jme.JME'].handleClipboardPasteAction$S.apply(this.b$['jme.JME'], [clipboardContent]);
}});
})()
), Clazz_new_(P$.JME$1.$init$,[this, null]));
}return this.pasteAction;
});

Clazz_newMeth(C$, 'handleClipboardPasteAction$S',  function (clipboardContent) {
if (this.getPrePasteJSfunction$() != null ) {
this.getPrePasteJSfunction$().apply(this, Clazz_array(String, -1, [clipboardContent]));
return;
}if (this.handleBeforePasteEvent$S(clipboardContent)) {
return;
}this.pasteGenericInput$S$Z$jme_js_AsyncCallback(clipboardContent, true, ((P$.JME$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "JME$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'jme.js.AsyncCallback', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, ['onFailure$Throwable','onFailure'],  function (reason) {
});

Clazz_newMeth(C$, ['onSuccess$O','onSuccess'],  function (o) {
this.b$['jme.JME'].handleAfterPasteEvent$S.apply(this.b$['jme.JME'], [this.$finals$.clipboardContent]);
});
})()
), Clazz_new_(P$.JME$2.$init$,[this, {clipboardContent:clipboardContent}])));
});

Clazz_newMeth(C$, 'pasteGenericInput$S$Z$jme_js_AsyncCallback',  function (chemicalString, recordEvent, sucessAndFailureHandle) {
this.sdfPastedMessage.innerString="";
this.afterStructureChangeEvent.setOrigin_API$();
var countSDF=this.sdfStack.addEntries$S(chemicalString);
if (countSDF > 0) {
this.sdfPastedMessage.innerString=" Use Page Up/Down for SDF access (" + countSDF + ")" ;
this.afterStructureChangeEvent.setAction$S("readMultiSDF");
this.notifyStructuralChange$S("paste");
}var localSucessAndFailureHandle=((P$.JME$3||
(function(){/*a*/var C$=Clazz_newClass(P$, "JME$3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'jme.js.AsyncCallback', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, ['onFailure$Throwable','onFailure'],  function (reason) {
this.b$['jme.JME'].info$S.apply(this.b$['jme.JME'], ["ERROR: " + reason.getMessage$()]);
this.b$['jme.JME'].alert$S.apply(this.b$['jme.JME'], [this.b$['jme.JME'].infoText]);
this.b$['jme.JME'].reset$.apply(this.b$['jme.JME'], []);
this.b$['jme.JME'].repaint$.apply(this.b$['jme.JME'], []);
});

Clazz_newMeth(C$, ['onSuccess$O','onSuccess'],  function (o) {
this.b$['jme.JME'].info$S.apply(this.b$['jme.JME'], ["Structure pasted. " + this.b$['jme.JME'].sdfPastedMessage.innerString]);
this.b$['jme.JME'].setMustRedrawMolecularArea$Z.apply(this.b$['jme.JME'], [true]);
this.b$['jme.JME'].repaint$.apply(this.b$['jme.JME'], []);
this.$finals$.sucessAndFailureHandle.onSuccess(o);
});
})()
), Clazz_new_(P$.JME$3.$init$,[this, {sucessAndFailureHandle:sucessAndFailureHandle}]));
try {
this.handleReadGenericInput$S$jme_js_AsyncCallback$Z$Z(chemicalString, localSucessAndFailureHandle, false, recordEvent);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
localSucessAndFailureHandle.onFailure(e);
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'cutSelectedMoleculeForSystemClipBoard$',  function () {
if (this.activeMol.natoms == 0) {
return "";
}this.activeMol.forceUniColor$java_awt_Color($I$(4).RED);
var s=this.activeMol.createMolFile$S("");
this.redrawMolecularAreaOnly$();
this.clear$();
this.redrawMolecularAreaOnly$();
return s;
});

Clazz_newMeth(C$, 'cutSelectedMoleculeForSystemClipBoard$jme_js_AsyncCallback',  function (callBack) {
if (this.activeMol.natoms == 0) {
return;
}this.generateOuttputFile$jme_js_AsyncCallback(callBack);
this.clear$();
this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'postSave$',  function () {
if (!true) {
return;
}var state=this.createState$();
this.molChangeManager.insertItem$O(state);
System.err.println$S("JME.postSave saving state");
});

Clazz_newMeth(C$, 'createState$',  function () {
while (this.moleculePartsList.isReallyEmpty$() && this.moleculePartsList.size$() > 1 ){
this.moleculePartsList.remove$I(0);
}
var state=Clazz_new_($I$(51,1));
state.moleculePartsList=this.moleculePartsList.deepCopy$();
state.reaction=this.options.reaction;
state.multipart=this.options.multipart;
state.depictScale=this.molecularAreaScalePixelsPerCoord;
state.lastAction=this.lastAction;
return state;
});

Clazz_newMeth(C$, 'restoreState$jme_JME_SavedState',  function (state) {
this.basicRetoreState$jme_JME_SavedState(state);
switch (state.lastAction) {
case 5:
case 7:
case 9:
break;
default:
this.notifyStructuralChange$S("restore");
}
});

Clazz_newMeth(C$, 'basicRetoreState$jme_JME_SavedState',  function (state) {
if (state == null ) {
do {
this.clear$Z(false);
} while (!this.moleculePartsList.isReallyEmpty$());
return;
}this.moleculePartsList=state.moleculePartsList.deepCopy$();
if (state.activeMol != null ) {
this.activeMol=state.activeMol;
} else {
this.activeMol=Clazz_new_($I$(17,1).c$$jme_JME$jme_core_JMECore_Parameters,[this, this.params]);
}this.options.reaction=state.reaction;
this.options.multipart=state.multipart;
this.molecularAreaScalePixelsPerCoord=state.depictScale;
});

Clazz_newMeth(C$, 'getCopyPasteJPopupMenuMol$',  function () {
this.copyPasteJPopupMenuMol=this.createCopyPasteJPopupMenu$Z(false);
return this.copyPasteJPopupMenuMol;
});

Clazz_newMeth(C$, 'getCopyPasteJPopupMenuReaction$',  function () {
this.copyPasteJPopupMenuReaction=this.createCopyPasteJPopupMenu$Z(true);
return this.copyPasteJPopupMenuReaction;
});

Clazz_newMeth(C$, 'handleCopyPasteJPopupMenu$java_awt_event_MouseEvent$I$I',  function (e, x, y) {
if (e == null  || C$.isEventContextMenu$java_awt_event_MouseEvent(e) ) {
var isTouched=this.activeMol.touchedAtom > 0 || this.activeMol.touchedBond > 0 ;
if (isTouched && (this.action == 104 || this.action == 106 ) ) {
return true;
}if (isTouched && !this.isDepict$() ) {
if (this.touchedMolPopuMenu != null ) {
this.remove$java_awt_Component(this.touchedMolPopuMenu);
}this.touchedMolPopuMenu=this.createMolJPopupMenu$I$I(x, y);
this.add$java_awt_Component(this.touchedMolPopuMenu);
this.touchedMolPopuMenu.show$java_awt_Component$I$I(this, x, y);
} else {
{
var pm;
if (this.options.reaction) {
pm=this.getCopyPasteJPopupMenuReaction$();
} else {
pm=this.getCopyPasteJPopupMenuMol$();
}if (C$.isEventContextMenu$java_awt_event_MouseEvent(e)) {
pm.show$java_awt_Component$I$I(this, x, y);
} else {
this.showJPopupMenuRealtiveToScaledMainMenu$javax_swing_JPopupMenu$I$I(pm, x, y);
}}}this.processMouseMotionEvent$java_awt_event_MouseEvent(Clazz_new_($I$(52,1).c$$java_awt_Component$I$J$I$I$I$I$Z$I,[this, 503, 0, 0, 1000000, 100000, 0, false, 0]));
return true;
}return false;
});

Clazz_newMeth(C$, 'showJPopupMenuRealtiveToScaledMainMenu$javax_swing_JPopupMenu$I$I',  function (pm, x, y) {
pm.show$java_awt_Component$I$I(this, ((x * this.menuScale + 0.5)|0), ((y * this.menuScale + 0.5)|0));
});

Clazz_newMeth(C$, 'isEventContextMenu$java_awt_event_MouseEvent',  function (e) {
return (e != null  && (e.isMetaDown$() || e.isControlDown$() ) );
}, 1);

Clazz_newMeth(C$, 'getNotifyAtomHighLightJSfunction$',  function () {
return this.notifyAtomHighLightJSfunction;
});

Clazz_newMeth(C$, 'setNotifyAtomHighLightChangeJSfunction$jme_js_JSFunction',  function (notifyAtomHighLightJSfunction) {
this.notifyAtomHighLightJSfunction=notifyAtomHighLightJSfunction;
});

Clazz_newMeth(C$, 'notifyAtomOrBondHighLightJSfunction$I$I',  function (touchedAtomOrBond, previousTouchedAtomOrBondForHighlight) {
if (touchedAtomOrBond <= 0 && previousTouchedAtomOrBondForHighlight == 0 ) {
return -1;
}if (touchedAtomOrBond == previousTouchedAtomOrBondForHighlight && this.activeMolIndex$() == this.previousActualMoleculePartIndex ) {
return -1;
}if (touchedAtomOrBond <= 0 && previousTouchedAtomOrBondForHighlight > 0 ) {
touchedAtomOrBond=0;
}this.previousActualMoleculePartIndex=this.activeMolIndex$();
return touchedAtomOrBond;
});

Clazz_newMeth(C$, 'notifyAtomHighLightJSfunction$I',  function (touchedAtom) {
if ((this.canHandleAtomHighLightCallBack$()).valueOf()) {
touchedAtom=this.notifyAtomOrBondHighLightJSfunction$I$I(touchedAtom, this.previousTouchedAtomForHighlight);
if (touchedAtom == -1) return;
this.previousTouchedAtomForHighlight=touchedAtom;
if (this.notifyAtomHighLightJSfunction != null ) {
this.notifyAtomHighLightJSfunction.apply(this, Clazz_array(Integer.TYPE, -1, [this.activeMolIndex$(), touchedAtom]));
}this.handleAtomHighLightCallBack$I$I(this.activeMolIndex$(), touchedAtom);
}});

Clazz_newMeth(C$, 'notifyBondHighLightJSfunction$I',  function (touchedBond) {
if ((this.canHandleBondHighLightCallBack$()).valueOf()) {
touchedBond=this.notifyAtomOrBondHighLightJSfunction$I$I(touchedBond, this.previousTouchedBondForHighlight);
if (touchedBond == -1) return;
this.previousTouchedBondForHighlight=touchedBond;
this.handleBondHighLightCallBack$I$I(this.activeMolIndex$(), touchedBond);
}});

Clazz_newMeth(C$, 'canHandleAtomHighLightCallBack$',  function () {
return Boolean.valueOf$Z(true);
});

Clazz_newMeth(C$, 'canHandleBondHighLightCallBack$',  function () {
return Boolean.valueOf$Z(true);
});

Clazz_newMeth(C$, 'canHandleAtomClickedCallBack$',  function () {
return Boolean.valueOf$Z(true);
});

Clazz_newMeth(C$, 'canHandleBondClickedCallBack$',  function () {
return Boolean.valueOf$Z(true);
});

Clazz_newMeth(C$, 'handleAtomClickedCallBack$I$I',  function (actualMoleculePartIndex, clickedAtom) {
this.notifyEvent$S$O("JME_AtomClickedEvent", Clazz_array(Integer.TYPE, -1, [actualMoleculePartIndex, clickedAtom]));
});

Clazz_newMeth(C$, 'handleBondClickedCallBack$I$I',  function (actualMoleculePartIndex, clickedBond) {
this.notifyEvent$S$O("JME_BondClickedEvent", Clazz_array(Integer.TYPE, -1, [actualMoleculePartIndex, clickedBond]));
});

Clazz_newMeth(C$, 'handleBeforePasteEvent$S',  function (molecule) {
return false;
});

Clazz_newMeth(C$, 'handleAfterPasteEvent$S',  function (pasteContent) {
this.notifyEvent$S$O("JME_PasteEvent", pasteContent);
});

Clazz_newMeth(C$, 'handleAfterAfterDepictEditToggleEvent$',  function () {
this.notifyEvent$S$O("JME_DepictEditToggleEvent", Boolean.valueOf$Z(this.depict));
});

Clazz_newMeth(C$, 'handleAftertructureModifiedEvent$S',  function (cause) {
this.notifyEvent$S$O("JME_StructureModifiedEvent", this.afterStructureChangeEvent);
this.updateReactionRoles$();
});

Clazz_newMeth(C$, 'notifyEvent$S$O',  function (name, value) {
this.firePropertyChange$S$O$O(name, Clazz_array(java.lang.Object, -1, [this.options.getApplet$Z(false)]), value);
});

Clazz_newMeth(C$, 'handleAtomHighLightCallBack$I$I',  function (actualMoleculePartIndex, touchedAtom) {
this.notifyEvent$S$O("JME_AtomHighlightEvent", Clazz_array(Integer.TYPE, -1, [actualMoleculePartIndex, touchedAtom]));
});

Clazz_newMeth(C$, 'handleBondHighLightCallBack$I$I',  function (actualMoleculePartIndex, touchedBond) {
this.notifyEvent$S$O("JME_BondHighlightEvent", Clazz_array(Integer.TYPE, -1, [actualMoleculePartIndex, touchedBond]));
});

Clazz_newMeth(C$, 'setAtomToHighLight$I$I',  function (molIndex, atomIndex) {
this.moleculePartsList.resetTouchedAtomAndBond$();
if (atomIndex != 0) {
var ea=this.getEnsembleAtom$I$I(molIndex, atomIndex);
if (ea == null ) {
this.showError$S("invalid atom index or molecule index");
return;
}ea.mol.touchedAtom=ea.atomIndex;
}this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'setBondToHighLight$I$I',  function (molIndex, bondIndex) {
this.moleculePartsList.resetTouchedAtomAndBond$();
if (bondIndex != 0) {
var ea=this.getEnsembleBond$I$I(molIndex, bondIndex);
if (ea == null ) {
this.showError$S("invalid bond index or molecule index");
return;
}ea.mol.touchedBond=ea.bondIndex;
}this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'changeAtomMap$I$I$I',  function (molIndex, atomIndex, newMap) {
var mol=this.selectMolIfValidOrShowError$I(molIndex);
this.changeAtomMap$jme_JMEmol$I$I(mol, atomIndex, newMap);
});

Clazz_newMeth(C$, 'changeAtomMap$jme_JMEmol$I$I',  function (mol, atomIndex, newMap) {
var at=mol.getAtom$I(atomIndex);
if (newMap <= 0) {
at.resetObjectMark$();
} else {
at.setMapOrMark$I$Z(newMap, !this.params.mark);
}this.recordAtomEvent$S$I("changeAtomMap", atomIndex);
this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'changeAtomCharge$jme_JMEmol$I$I',  function (mol, atomIndex, newCharge) {
var at=mol.getAtom$I(atomIndex);
at.Q$I(newCharge);
this.recordAtomEvent$S$I("chargeAtom0", atomIndex);
this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'getNotifyStructuralChangeJSfunction$',  function () {
return this.notifyStructuralChangeJSfunction;
});

Clazz_newMeth(C$, 'setNotifyStructuralChangeJSfunction$jme_js_JSFunction',  function (notifyStructuralChangeJSfunction) {
this.notifyStructuralChangeJSfunction=notifyStructuralChangeJSfunction;
});

Clazz_newMeth(C$, 'notifyStructuralChange$S',  function (cause) {
if (this.afterStructureChangeEvent != null  && this.afterStructureChangeEvent.action != null  ) {
++this.afterStructureChangeEvent.stackLevel;
var MAX_RECURSIVE_LOOP=1;
if (this.afterStructureChangeEvent.stackLevel <= MAX_RECURSIVE_LOOP) {
this.handleAftertructureModifiedEvent$S(cause);
try {
if (this.notifyStructuralChangeJSfunction != null ) {
this.notifyStructuralChangeJSfunction.apply(this, null);
}} catch (t) {
t.printStackTrace$();
}
}--this.afterStructureChangeEvent.stackLevel;
if (this.afterStructureChangeEvent.stackLevel <= 0) {
this.afterStructureChangeEvent.reset$();
}}});

Clazz_newMeth(C$, 'getPrePasteJSfunction$',  function () {
return this.prePasteJSfunction;
});

Clazz_newMeth(C$, 'setPrePasteJSfunction$jme_js_JSFunction',  function (prePasteJSfunction) {
this.prePasteJSfunction=prePasteJSfunction;
});

Clazz_newMeth(C$, 'topMenuHeight$',  function () {
return Long.$ival(Math.round$D(this.topMenuHeight$D(this.menuScale)));
});

Clazz_newMeth(C$, 'topMenuHeight$D',  function (scale) {
return this.isDepict$() ? 0.0 : (this.gui.menuCellSize * 2 + this.gui.menuCellBorder$()) * scale;
});

Clazz_newMeth(C$, 'leftMenuWidth$',  function () {
return Long.$ival(Math.round$D(this.leftMenuWidth$D(this.menuScale)));
});

Clazz_newMeth(C$, 'leftMenuWidth$D',  function (scale) {
if (this.gui == null ) System.out.println$S("???");
return this.isDepict$() ? 0.0 : (this.gui.menuCellSize * 1 + this.gui.menuCellBorder$()) * scale;
});

Clazz_newMeth(C$, 'infoAreaHeight$',  function () {
return Long.$ival(Math.round$D(this.infoAreaHeight$D(this.menuScale)));
});

Clazz_newMeth(C$, 'infoAreaHeight$D',  function (scale) {
return this.isDepict$() ? 0.0 : this.gui.menuCellSize * scale;
});

Clazz_newMeth(C$, 'rightBorder$',  function () {
return Long.$ival(Math.round$D(this.rightBorder$D(this.menuScale)));
});

Clazz_newMeth(C$, 'rightBorder$D',  function (scale) {
return this.isDepict$() ? 0.0 : (this.options.newLook ? 1.0 : 3.0) * scale;
});

Clazz_newMeth(C$, 'redrawMolecularAreaOnly$',  function () {
this.mustRedrawNothing$();
this.setMustRedrawMolecularArea$Z(true);
this.repaint$();
});

Clazz_newMeth(C$, 'setMustRedrawMolecularArea$Z',  function (b) {
return true;
});

Clazz_newMeth(C$, 'redrawMolecularAreaOnylForGettingSVG$',  function () {
var savedTouchedAtom=this.activeMol.touchedAtom;
var savedTouchedBond=this.activeMol.touchedBond;
this.activeMol.touchedAtom=0;
this.activeMol.touchedBond=0;
this.afterStructureChangeEvent.reset$();
this.redrawMolecularAreaOnly$();
this.activeMol.touchedAtom=savedTouchedAtom;
this.activeMol.touchedBond=savedTouchedBond;
});

Clazz_newMeth(C$, 'setAtomColors$I$S',  function (molIndex, atomAndColorCSV) {
if (molIndex == 0) {
var cumulAtomCount=0;
for (var i=1; i <= this.moleculePartsList.size$(); i++) {
var mol=this.selectMolIfValidOrShowError$I(i);
mol.setAtomColors$S$I(atomAndColorCSV, cumulAtomCount);
cumulAtomCount+=mol.nAtoms$();
}
} else {
var molToHighLight=this.selectMolIfValidOrShowError$I(molIndex);
if (molToHighLight == null ) {
return;
}molToHighLight.setAtomColors$S$I(atomAndColorCSV, 0);
}this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'getEnsembleAtom$I$I',  function (molIndex, atomIndex) {
if (molIndex < 0 || atomIndex < 0 ) {
$I$(34,"log$S",["Invalid index for getEnsembleAtom()"]);
return null;
}return Clazz_new_($I$(53,1).c$$jme_JMEmolList$I$I,[this.moleculePartsList, molIndex, atomIndex]);
});

Clazz_newMeth(C$, 'getMolecule$I',  function (molIndex) {
if (molIndex < 0 || molIndex >= this.moleculePartsList.size$() ) {
$I$(34,"log$S",["Invalid index for getMolecule()"]);
return null;
}return this.moleculePartsList.get$I(molIndex);
});

Clazz_newMeth(C$, 'activateMarkerColor$I',  function (colorIndex) {
if (colorIndex < 1 || colorIndex > this.colorManager.numberOfBackgroundColors$() ) {
this.alert$S("Invalid color index: " + colorIndex);
this.resetExtendAtomMark=true;
this.markFromKeyboardInput=false;
this.activeMarkerColorIndex=this.lastValidColorIndex;
this.clearInfo$();
this.repaint$();
} else {
this.lastValidColorIndex=this.activeMarkerColorIndex=colorIndex;
this.setAction$I(105);
this.options$S("marker");
this.gui.mustReDrawTopMenu=true;
this.repaint$();
}});

Clazz_newMeth(C$, 'setStarColor$S',  function (hexColor) {
this.alert$S("methods setStarColor and setMarkerColor have been replaced by activateMarkerColor");
});

Clazz_newMeth(C$, 'getAtomE$I',  function (atomE) {
return this.getEnsembleAtom$I$I(0, atomE).atom;
});

Clazz_newMeth(C$, 'totalNumberOfAtoms$',  function () {
return this.moleculePartsList.totalNumberOfAtoms$();
});

Clazz_newMeth(C$, 'replaceAtom$jme_core_AtomBondCommon$jme_core_Atom',  function (oldAtom, newAtom) {
for (var i=1; i <= this.moleculePartsList.size$(); i++) {
var mol=this.selectMolIfValidOrShowError$I(i);
for (var at=0; at < mol.atoms.length; at++) {
if (mol.atoms[at] === oldAtom ) {
mol.atoms[at]=newAtom;
return;
}}
}
});

Clazz_newMeth(C$, 'resetAtomColors$I',  function (molIndex) {
if (molIndex == 0) {
for (var i=1; i <= this.moleculePartsList.size$(); i++) {
this.resetAtomColors$I(i);
}
return;
} else {
var selectedMol=this.selectMolIfValidOrShowError$I(molIndex);
if (selectedMol == null ) {
return;
}$I$(54).resetChemicalObjectColors$jme_core_AtomBondCommonA(selectedMol.atoms);
}this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'resetBondColors$I',  function (molIndex) {
if (molIndex == 0) {
this.atomBgColors="";
for (var i=1; i <= this.moleculePartsList.size$(); i++) {
this.resetBondColors$I(i);
}
return;
} else {
var selectedMol=this.selectMolIfValidOrShowError$I(molIndex);
if (selectedMol == null ) {
return;
}$I$(54).resetChemicalObjectColors$jme_core_AtomBondCommonA(selectedMol.bonds);
}this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'totalNumberOfBonds$',  function () {
return this.moleculePartsList.totalNumberOfBonds$();
});

Clazz_newMeth(C$, 'getEnsembleBond$I$I',  function (molIndex, bondIndex) {
if (molIndex < 0 || bondIndex < 0 ) {
$I$(34,"log$S",["Invalid index for getEnsembleBond()"]);
return null;
}return Clazz_new_($I$(55,1).c$$jme_JMEmolList$I$I,[this.moleculePartsList, molIndex, bondIndex]);
});

Clazz_newMeth(C$, 'getBondE$I',  function (bondE) {
return this.getEnsembleBond$I$I(0, bondE).bond;
});

Clazz_newMeth(C$, 'replaceBond$jme_core_AtomBondCommon$jme_core_Bond',  function (oldBond, newBond) {
for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
for (var b=0; b < mol.bonds.length; b++) {
if (mol.bonds[b] === oldBond ) {
mol.bonds[b]=newBond;
return;
}}
}
});

Clazz_newMeth(C$, 'setBondColors$I$S',  function (molIndex, bondAndColorCSV) {
if (molIndex == 0) {
var cumulBondCount=0;
for (var mol, $mol = this.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.setBondColors$S$I(bondAndColorCSV, cumulBondCount);
cumulBondCount+=mol.nBonds$();
}
} else {
var molToHighLight=this.selectMolIfValidOrShowError$I(molIndex);
if (molToHighLight == null ) {
return;
}molToHighLight.setBondColors$S$I(bondAndColorCSV, 0);
}this.redrawMolecularAreaOnly$();
});

Clazz_newMeth(C$, 'getMultiSDFstack$',  function () {
return this.sdfStack.getMultiSDFstack$();
});

Clazz_newMeth(C$, 'selectMolIfValidOrShowError$I',  function (molIndex) {
this.clearInfo$();
if (molIndex < 1 || molIndex > this.moleculePartsList.size$() ) {
this.showError$S("invalid mol index: " + molIndex);
return null;
}return this.moleculePartsList.get$I(molIndex - 1);
});

Clazz_newMeth(C$, 'recordAfterStructureChangedEvent$S$I$I$I',  function (action, moleculePartIndex, atomIndex, bondIndex) {
this.recordAfterStructureChangedEvent$S$I$I$I$Z(action, moleculePartIndex, atomIndex, bondIndex, true);
});

Clazz_newMeth(C$, 'recordAfterStructureChangedEvent$S$I$I$I$Z',  function (action, moleculePartIndex, atomIndex, bondIndex, willSaveOnUndoStack) {
if (this.afterStructureChangeEvent != null ) {
this.updateReactionRoles$();
this.afterStructureChangeEvent.setAction$S(action).setAtomAndBondAndMol$jme_JMEmolList$I$I$I(this.moleculePartsList, atomIndex, bondIndex, moleculePartIndex);
}this.willPostSave$Z(willSaveOnUndoStack);
});

Clazz_newMeth(C$, 'recordMoleculePartEvent$S$I',  function (action, moleculePartIndex) {
this.recordAfterStructureChangedEvent$S$I$I$I(action, moleculePartIndex, 0, 0);
});

Clazz_newMeth(C$, 'recordAtomEvent$S',  function (action) {
this.recordAtomEvent$S$I(action, this.activeMol.touchedAtom);
});

Clazz_newMeth(C$, 'recordAtomEvent$S$I',  function (action, atom) {
this.recordAfterStructureChangedEvent$S$I$I$I(action, this.activeMolIndex$(), atom, 0);
});

Clazz_newMeth(C$, 'recordBondEvent$S',  function (action) {
this.recordBondEvent$S$I(action, this.activeMol.touchedBond);
});

Clazz_newMeth(C$, 'recordBondEvent$S$I',  function (action, bond) {
this.recordAfterStructureChangedEvent$S$I$I$I(action, this.activeMolIndex$(), 0, bond);
});

Clazz_newMeth(C$, 'recordAfterStructureChangedEvent$S',  function (action) {
this.recordAfterStructureChangedEvent$S$I$I$I(action, 0, 0, 0);
});

Clazz_newMeth(C$, 'isDepictMode$',  function () {
return this.isDepict$();
});

Clazz_newMeth(C$, 'isDepict$',  function () {
return this.depict;
});

Clazz_newMeth(C$, 'setDepict$Z',  function (depict) {
this.depict=depict;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return this.moleculePartsList.isReallyEmpty$();
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (evt) {
var name=evt.getPropertyName$();
try {
switch (name) {
case "FileDropper.file":
this.readDroppedTextFile$S(evt.getNewValue$());
break;
case "FileDropper.inline":
this.readDroppedData$O(evt.getNewValue$());
break;
default:
break;
}
} catch (t) {
System.err.println$S("JME couldn't load data for drop " + name);
}
});

Clazz_newMeth(C$, 'readDroppedData$O',  function (stringOrBytes) {
Clazz_new_($I$(28,1).c$$O,[stringOrBytes]).readMoleculeData$jme_JME$Z$jme_js_AsyncCallback$Z$Z(this, false, null, true, true);
});

Clazz_newMeth(C$, 'readSmiles$S',  function (data) {
try {
this.readMolFile$S(C$.getOclAdapter$().SMILEStoMOL$S(data));
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'readDroppedTextFile$S',  function (fileName) {
var bos=Clazz_new_($I$(56,1));
var fis=null;
try {
fis=(fileName.indexOf$S("://") >= 0 ? Clazz_new_($I$(57,1).c$$S,[fileName]).openStream$() : Clazz_new_($I$(58,1).c$$S,[fileName]));
var bytes=Clazz_array(Byte.TYPE, [4096]);
var n;
while ((n=fis.read$BA(bytes)) > 0){
bos.write$BA$I$I(bytes, 0, n);
}
fis.close$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("JME error reading file " + fileName);
} else {
throw e;
}
}
this.readDroppedData$O(bos.toByteArray$());
});

Clazz_newMeth(C$, 'options$S',  function (parameters) {
this.options.set$S(parameters);
this.mustRedrawEverything$();
this.repaint$();
});

Clazz_newMeth(C$, 'handleAdditionalOptions$S',  function (options) {
});

Clazz_newMeth(C$, 'dragGestureRecognized$java_awt_dnd_DragGestureEvent',  function (dge) {
try {
var e=dge.getTriggerEvent$();
if (e.getID$() != 501) return;
var x=e.getX$();
var y=e.getY$();
if (!this.gui.dragAndDropIcon.contains$I$I(x, y)) return;
var cursor=null;
System.out.println$I(dge.getDragAction$());
if (dge.getDragAction$() == 1) {
cursor=$I$(20).DefaultCopyDrop;
dge.startDrag$java_awt_Cursor$java_awt_datatransfer_Transferable(cursor, ((P$.JME$4||
(function(){/*a*/var C$=Clazz_newClass(P$, "JME$4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.awt.datatransfer.Transferable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getTransferDataFlavors$',  function () {
return Clazz_array($I$(59), -1, [$I$(59).stringFlavor]);
});

Clazz_newMeth(C$, 'isDataFlavorSupported$java_awt_datatransfer_DataFlavor',  function (flavor) {
return flavor === $I$(59).stringFlavor ;
});

Clazz_newMeth(C$, 'getTransferData$java_awt_datatransfer_DataFlavor',  function (flavor) {
if (flavor === $I$(59).stringFlavor ) {
return this.b$['jme.JME'].molFile$.apply(this.b$['jme.JME'], []);
}return null;
});
})()
), Clazz_new_(P$.JME$4.$init$,[this, null])));
}} catch (t) {
System.out.println$S("hmm");
}
});

Clazz_newMeth(C$, 'main$SA',  function (args) {
var frame=Clazz_new_($I$(60,1).c$$S,["JME Molecular Editor"]);
frame.addWindowListener$java_awt_event_WindowListener(((P$.JME$5||
(function(){/*a*/var C$=Clazz_newClass(P$, "JME$5", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.awt.event.WindowAdapter'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent',  function (evt) {
System.exit$I(0);
});
})()
), Clazz_new_($I$(61,1),[this, null],P$.JME$5)));
frame.setBounds$I$I$I$I(300, 200, 432, 384);
var jme=Clazz_new_(C$.c$$javax_swing_JFrame$Z$SA,[frame, false, args]);
$I$(46,"invokeLater$Runnable",[((P$.JME$lambda11||
(function(){/*m*/var C$=Clazz_newClass(P$, "JME$lambda11", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
this.$finals$.frame.setVisible$Z.apply(this.$finals$.frame, [true]);
this.$finals$.jme.start$SA.apply(this.$finals$.jme, [this.$finals$.args]);
});
})()
), Clazz_new_(P$.JME$lambda11.$init$,[this, {frame:frame,args:args,jme:jme}]))]);

return jme;
}, 1);

Clazz_newMeth(C$, 'doDrawChiralText$',  function () {
return (this.activeMol != null  && this.moleculePartsList.hasOneMoleculeWithChiralFlag$() );
});

Clazz_newMeth(C$, 'startKeyboardAction$',  function () {
this.structureChangedByAction=false;
});

Clazz_newMeth(C$, 'endKeyboardAction$',  function () {
p$2.postAction$Z.apply(this, [this.structureChangedByAction]);
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.copyright=Clazz_array(String, -1, ["Copyright (c) 2014-2023, Peter Ertl, Bruno Bienfait, and Robert Hanson.", "All rights reserved."]);
C$.parserImpl="jme.ocl.OclAdapter";
C$.isStandAloneApplication=false;
C$.color=Clazz_array($I$(4), [43]);
C$.isJavaScript=System.getProperty$S("java.vm.name").equals$O("JavaScript");
{
if (C$.isJavaScript) {
C$.programName="JSME";
C$.precision=30;
} else {
C$.programName="JME";
C$.precision=1.0;
}};
C$.setChiralFlagAction="Set molecule chiral flag";
C$.unSetChiralFlagAction="Unset molecule chiral flag";
C$.changeAtomChargeAction="Change atom charge";
C$.changeAtomMapAction="Change atom map";
C$.changeAtomMarkAction="Change atom mark value";
C$.autoAtomMapMoleculeAction="Auto atom map molecule";
C$.deleteAtomMapMoleculeAction="Delete all atom map molecule";
{
C$.atomicData$();
};
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.JME, "HTML5Applet", function(){
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JME, "SavedState", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.moleculePartsList=null;
this.activeMol=null;
this.depictScale=1.0;
},1);

C$.$fields$=[['Z',['reaction','multipart'],'D',['depictScale'],'I',['lastAction'],'O',['moleculePartsList','jme.JMEmolList','activeMol','jme.JMEmol']]]

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JME, "Touched", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['distance'],'I',['atomIndex','bondIndex'],'O',['mol','jme.JMEmol']]]

Clazz_newMeth(C$, 'equals$jme_JME_Touched',  function (other) {
return this.mol === other.mol  && this.atomIndex == other.atomIndex  && this.bondIndex == other.bondIndex ;
});

Clazz_newMeth(C$, 'reset$',  function () {
this.mol=null;
this.atomIndex=0;
this.bondIndex=0;
});

Clazz_newMeth(C$, 'initMyselfWith$jme_JME_Touched',  function (other) {
this.mol=other.mol;
this.atomIndex=other.atomIndex;
this.bondIndex=other.bondIndex;
});

Clazz_newMeth(C$, 'isTouched$',  function () {
return this.mol != null  && (this.atomIndex > 0 || this.bondIndex > 0 ) ;
});

Clazz_newMeth(C$, 'toString',  function () {
return ("[TOUCH " + this.atomIndex + " " + this.bondIndex + "]" );
});

Clazz_newMeth(C$);
})()
;
(function(){/*e*/var C$=Clazz_newClass(P$.JME, "CopyPasteAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getFormat$',  function () {
return $I$(1,"valueOf$S",[this.toString()]);
});

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "JME", 0, []);
Clazz_newEnumConst($vals, C$.c$, "SMILES", 1, []);
Clazz_newEnumConst($vals, C$.c$, "MOL", 2, []);
Clazz_newEnumConst($vals, C$.c$, "MOL_V3000", 3, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI", 4, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI_KEY", 5, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI_AUXINFO", 6, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI_JSON", 7, []);
Clazz_newEnumConst($vals, C$.c$, "OCLCODE", 8, []);
Clazz_newEnumConst($vals, C$.c$, "SVG", 9, []);
Clazz_newEnumConst($vals, C$.c$, "RAW_STRING_GRAPHIC", 10, []);
Clazz_newEnumConst($vals, C$.c$, "SEARCH_INCHI_KEY", 11, []);
Clazz_newEnumConst($vals, C$.c$, "PASTE", 12, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JME, "StringWrapper", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['innerString']]]

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JME, "Options", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.addNewPart=false;
this.allowGUIzooming=true;
this.allowZooming=true;
this.autonumber=false;
this.contextMenuEnabledOption=true;
this.depictActionEnabled=false;
this.depictBorder=false;
this.exportInchi=true;
this.exportInchiAuxInfo=true;
this.exportInchiKey=true;
this.exportRXNmergeOption=false;
this.exportSVG=true;
this.fgMenuOption=true;
this.fullScreenIconOption=false;
this.markerMenu=false;
this.markOnly1=false;
this.newLook=false;
this.paste=true;
this.polarnitro=false;
this.pseudoMark=false;
this.rButton=false;
this.searchInchiKey=true;
this.showAtomMoveJButton=true;
this.showDragAndDropIconInDepictMode=true;
this.showFullScreenIconInDepictMode=true;
this.starAtomOnly=false;
this.starBondOnly=false;
this.starNothing=false;
this.stereo=true;
this.toggleDepictEdit=false;
this.useOclIdCode=false;
this.useOpenChemLib=true;
this.boldAtomLabels=true;
this.multipart=true;
this.query=false;
this.reaction=false;
this.xButton=true;
this.jmeString=null;
this.molString=null;
this.genericChemicalInputFromInit=null;
this.atomBGcircleRelativeSize=0.8;
this.bondBGrectRelativeSize=0.5;
this.runsmi=true;
},1);

C$.$fields$=[['Z',['addNewPart','allowGUIzooming','allowZooming','autonumber','contextMenuEnabledOption','depictActionEnabled','depictBorder','exportInchi','exportInchiAuxInfo','exportInchiKey','exportRXNmergeOption','exportSVG','fgMenuOption','fullScreenIconOption','markerMenu','markOnly1','newLook','paste','polarnitro','pseudoMark','rButton','searchInchiKey','showAtomMoveJButton','showDragAndDropIconInDepictMode','showFullScreenIconInDepictMode','starAtomOnly','starBondOnly','starNothing','stereo','toggleDepictEdit','useOclIdCode','useOpenChemLib','boldAtomLabels','multipart','query','reaction','xButton','runsmi'],'D',['atomBGcircleRelativeSize','bondBGrectRelativeSize'],'S',['jmeString','molString','genericChemicalInputFromInit','options'],'O',['args','String[]']]]

Clazz_newMeth(C$, 'parseOption$S',  function (option) {
return p$1.parseOption$S$S.apply(this, [option, "no"]);
}, p$1);

Clazz_newMeth(C$, 'registerJS$jme_JME',  function (jme) {
var a=this.getApplet$Z(false);
if (a == null ) return;
{
}});

Clazz_newMeth(C$, 'getAppletOptions$jme_JME$SA',  function (jme, args) {
try {
this.args=args;
var options=this.getParameter$S("options");
if (options != null ) this.set$S(options);
var p;
if ((p=this.getParameter$S("jme")) != null ) this.jmeString=p;
if ((p=this.getParameter$S("mol")) != null ) this.molString=p;
if ((p=this.getParameter$S("chem")) != null ) this.genericChemicalInputFromInit=p;
if ((p=this.getParameter$S("smiles")) != null ) this.genericChemicalInputFromInit=p;
if ((p=this.getParameter$S("text")) != null ) this.b$['jme.JME'].molText=p;
this.b$['jme.JME'].atomBgColors=this.getParameter$S("atombg");
if ((p=this.getParameter$S("depictbg")) != null ) this.b$['jme.JME'].canvasBg=$I$(2).parseHexColor$S(p);
if ((p=this.getParameter$S("guicolor")) != null ) this.b$['jme.JME'].setUserInterfaceBackgroundColor$S.apply(this.b$['jme.JME'], [p]);
if ((p=this.getParameter$S("guiAtomColor")) != null ) this.b$['jme.JME'].setLeftMenuAtomColor$S.apply(this.b$['jme.JME'], [p]);
if ((p=this.getParameter$S("atombgsize")) != null ) {
var d=(Double.valueOf$S(p)).valueOf();
this.atomBGcircleRelativeSize=(d < 0  ? 0.8 : d);
}if ((p=this.getParameter$S("bondbgsize")) != null ) {
var d=(Double.valueOf$S(p)).valueOf();
this.bondBGrectRelativeSize=(d < 0  ? 0.5 : d);
}if (this.b$['jme.JME'].showAtomNumbers) this.b$['jme.JME'].showAtomNumbers$.apply(this.b$['jme.JME'], []);
var f=this.getParameter$S("notify_structural_change_js_function");
if (f != null ) this.b$['jme.JME'].setNotifyStructuralChangeJSfunction$jme_js_JSFunction.apply(this.b$['jme.JME'], [f]);
this.b$['jme.JME'].handleAdditionalParameters$.apply(this.b$['jme.JME'], []);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("JME:  parameters error");
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getApplet$Z',  function (asJApplet) {
var g=$I$(3).currentThread$().getThreadGroup$();
{
var a = g.getHtmlApplet$(); return (asJApplet ? a._applet : a);
}
});

Clazz_newMeth(C$, 'callback$O$O',  function (f, args) {
var jme=this.b$['jme.JME'];

f.apply(jme, args);
});

Clazz_newMeth(C$, 'getParameter$S',  function (p) {
var applet=this.getApplet$Z(true);
if (applet == null  && this.args != null  ) {
for (var i=1; i < this.args.length; i+=2) {
if (p.equals$O(this.args[i - 1])) {
return this.args[i];
}}
return null;
}return (applet == null  ? null : applet.getParameter$S(p));
});

Clazz_newMeth(C$, 'parseOption$S$S',  function (option, negativePrefix) {
var pos=(this.options.indexOf$S(";" + option + ";" ) >= 0);
var neg=(this.options.indexOf$S(";" + negativePrefix + option ) >= 0);
if (pos && neg ) {
this.b$['jme.JME'].log$S.apply(this.b$['jme.JME'], ["check option " + option]);
return null;
}return (pos ? Boolean.TRUE : neg ? Boolean.FALSE : null);
}, p$1);

Clazz_newMeth(C$, 'parseSynonymOptions$S$SA',  function (parameters, options) {
for (var eachOption, $eachOption = 0, $$eachOption = options; $eachOption<$$eachOption.length&&((eachOption=($$eachOption[$eachOption])),1);$eachOption++) {
var found=p$1.parseOption$S.apply(this, [eachOption]);
if (found != null ) {
return found;
}}
return null;
}, p$1);

Clazz_newMeth(C$, 'set$S',  function (parameters) {
var o;
var p0=parameters;
parameters=parameters.replaceAll$S$S("[^_0-9a-zA-Z]", ";");
var one=(p0.equals$O(parameters));
this.options=";" + parameters.toLowerCase$() + ";" ;
if ((o=p$1.parseOption$S.apply(this, ["depict"])) != null ) {
p$1.setDepictOption$Z.apply(this, [o.booleanValue$()]);
if (one) return;
}if ((o=p$1.parseSynonymOptions$S$SA.apply(this, [parameters, Clazz_array(String, -1, ["star", "marker"])])) != null ) {
if (this.b$['jme.JME'].params.mark != (o).$c() ) {
this.b$['jme.JME'].params.number=this.b$['jme.JME'].params.mark=(o).valueOf();
this.b$['jme.JME'].mustRedrawEverything$.apply(this.b$['jme.JME'], []);
if ((!((o).$c()))) this.markOnly1=false;
}if (one) return;
}if ((o=p$1.parseOption$S.apply(this, ["headless"])) != null ) {
this.b$['jme.JME'].headless=true;
}if ((o=p$1.parseOption$S.apply(this, ["boldatomlabels"])) != null ) {
this.boldAtomLabels=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["rbutton"])) != null ) {
this.rButton=(o).valueOf();
this.b$['jme.JME'].gui.mustReDrawLeftMenu=true;
}if ((o=p$1.parseOption$S.apply(this, ["hydrogens"])) != null ) {
if (this.b$['jme.JME'].params.hydrogenParams.showHs != (o).$c() ) {
this.b$['jme.JME'].params.hydrogenParams.showHs=(o).valueOf();
this.b$['jme.JME'].mustReDrawMolecularArea$.apply(this.b$['jme.JME'], []);
}}if ((o=p$1.parseOption$S.apply(this, ["valencestate"])) != null ) {
if (this.b$['jme.JME'].params.computeValenceState != (o).$c() ) {
this.b$['jme.JME'].params.computeValenceState=(o).valueOf();
this.b$['jme.JME'].mustReDrawMolecularArea$.apply(this.b$['jme.JME'], []);
}}if (parameters.indexOf$S("keephs") > -1) {
this.b$['jme.JME'].params.hydrogenParams.removeHs=false;
}if (parameters.indexOf$S("removehs") > -1) {
this.b$['jme.JME'].params.hydrogenParams.removeHs=true;
this.b$['jme.JME'].params.hydrogenParams.removeOnlyCHs=false;
}if (parameters.indexOf$S("removehsc") > -1) {
this.b$['jme.JME'].setRemoveHsC$.apply(this.b$['jme.JME'], []);
}if ((o=p$1.parseOption$S.apply(this, ["query"])) != null ) if (this.query != (o).$c() ) {
this.query=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["reaction"])) != null ) {
if (this.reaction != (o).$c() ) {
this.b$['jme.JME'].setMustRedrawMolecularArea$Z.apply(this.b$['jme.JME'], [true]);
}if (!this.reaction) {
this.b$['jme.JME'].reactionArrow.hasBeenPlaced=false;
}this.reaction=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["polarnitro"])) != null ) {
this.polarnitro=this.b$['jme.JME'].params.smilesParams.polarnitro=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["smarts"])) != null  || (o=p$1.parseOption$S.apply(this, ["search"])) != null  ) {
this.b$['jme.JME'].params.smilesParams.smarts=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["stereo"])) != null ) this.stereo=this.b$['jme.JME'].params.smilesParams.stereo=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["autoez"])) != null ) this.b$['jme.JME'].params.smilesParams.autoez=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["smilesaromatic"])) != null ) this.b$['jme.JME'].params.smilesParams.allowaromatic=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["canonize"])) != null ) this.b$['jme.JME'].params.smilesParams.canonize=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["multipart"])) != null ) if (this.multipart != (o).$c() ) {
this.multipart=(o).valueOf();
}if ((o=Boolean.valueOf$Z(p$1.parseOption$S.apply(this, ["autonumber"]) != null )).valueOf()) {
if (this.autonumber != (o).$c() ) {
this.autonumber=(o).valueOf();
if (this.autonumber) {
p$1.setNumber$Z.apply(this, [true]);
}}}if ((o=Boolean.valueOf$Z(p$1.parseOption$S.apply(this, ["number"]) != null )).valueOf()) {
p$1.setNumber$Z.apply(this, [o.booleanValue$()]);
}if ((o=Boolean.valueOf$Z(p$1.parseOption$S.apply(this, ["showatommapnumberwithbackgroundcolor"]) != null )).valueOf()) {
this.b$['jme.JME'].params.showAtomMapNumberWithBackgroundColor=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["newlook"])) != null ) {
this.newLook=(o).valueOf();
this.b$['jme.JME'].resetAllGraphics$.apply(this.b$['jme.JME'], []);
}if ((o=p$1.parseOption$S.apply(this, ["oldlook"])) != null ) {
this.newLook=(!((o).$c()));
this.b$['jme.JME'].resetAllGraphics$.apply(this.b$['jme.JME'], []);
}if ((o=p$1.parseSynonymOptions$S$SA.apply(this, [parameters, Clazz_array(String, -1, ["star1", "marker1"])])) != null ) {
if (this.markOnly1 != (o).$c() ) {
this.markOnly1=(o).valueOf();
if ((o).valueOf()) {
this.b$['jme.JME'].params.number=this.b$['jme.JME'].params.mark=(o).valueOf();
} else {
}this.b$['jme.JME'].mustRedrawEverything$.apply(this.b$['jme.JME'], []);
}}if ((o=p$1.parseOption$S.apply(this, ["markermenu"])) != null ) {
this.markerMenu=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["pseudomark"])) != null ) {
this.pseudoMark=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["markatomonly"])) != null ) {
this.starAtomOnly=(o).valueOf();
if (this.starAtomOnly) {
this.starBondOnly=false;
if (this.starNothing) {
}this.starNothing=false;
}}if ((o=p$1.parseOption$S.apply(this, ["markbondonly"])) != null ) {
this.starBondOnly=(o).valueOf();
if (this.starBondOnly) {
this.starAtomOnly=false;
if (this.starNothing) {
}this.starNothing=false;
}}if ((o=p$1.parseOption$S.apply(this, ["marknothing"])) != null ) {
if (this.starNothing != (o).$c() ) {
this.starNothing=(o).valueOf();
}}if ((o=p$1.parseOption$S.apply(this, ["fgmenu"])) != null ) {
this.fgMenuOption=(o).valueOf();
this.b$['jme.JME'].gui.mustReDrawTopMenu=true;
}if ((o=p$1.parseOption$S.apply(this, ["toggle"])) != null ) this.toggleDepictEdit=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["depictaction"])) != null ) {
this.depictActionEnabled=(o).valueOf();
if (this.depictActionEnabled) {
p$1.setDepictOption$Z.apply(this, [true]);
}}if ((o=p$1.parseOption$S.apply(this, ["showdraganddropoiconindepictmode"])) != null ) this.showDragAndDropIconInDepictMode=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["showdraganddropsymbolindepictmode"])) != null ) this.showDragAndDropIconInDepictMode=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["addnewpart"])) != null ) this.addNewPart=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["exportinchi"])) != null ) this.exportInchi=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["exportinchikey"])) != null ) this.exportInchiKey=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["exportinchiauxinfo"])) != null ) this.exportInchiAuxInfo=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["searchinchikey"])) != null ) this.searchInchiKey=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["exportsvg"])) != null ) this.exportSVG=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["exportrxnmerge"])) != null ) this.exportRXNmergeOption=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["contextmenu"])) != null ) this.contextMenuEnabledOption=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["fullscreenicon"])) != null ) this.fullScreenIconOption=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["showfullscreeniconindepictmode"])) != null ) this.showFullScreenIconInDepictMode=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["useoclidcode"])) != null ) this.useOclIdCode=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["xbutton"])) != null ) {
if (this.xButton != (o).$c() ) {
this.xButton=(o).valueOf();
}}if ((o=p$1.parseOption$S.apply(this, ["paste"])) != null ) if (this.paste != (o).$c() ) {
this.paste=(o).valueOf();
}if ((o=p$1.parseOption$S.apply(this, ["border"])) != null ) if (this.depictBorder != (o).$c() ) {
this.depictBorder=(o).valueOf();
this.b$['jme.JME'].mustRedrawEverything$.apply(this.b$['jme.JME'], []);
}if (parameters.indexOf$S("nocenter") > -1) this.b$['jme.JME'].nocenter=true;
if (parameters.indexOf$S("jmeh") > -1) this.b$['jme.JME'].jmeh=true;
if (parameters.indexOf$S("showan") > -1) this.b$['jme.JME'].showAtomNumbers=true;
if ((o=p$1.parseOption$S.apply(this, ["atommovebutton"])) != null ) this.showAtomMoveJButton=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["useopenchemlib"])) != null ) this.useOpenChemLib=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["zoom"])) != null ) this.allowGUIzooming=this.allowZooming=(o).valueOf();
if ((o=p$1.parseOption$S.apply(this, ["zoomgui"])) != null ) this.allowGUIzooming=(o).$c() && this.allowZooming ;
if (this.reaction) {
this.autonumber=true;
this.multipart=true;
}if (!this.b$['jme.JME'].isDepict$.apply(this.b$['jme.JME'], [])) this.depictBorder=false;
this.b$['jme.JME'].handleAdditionalOptions$S.apply(this.b$['jme.JME'], [this.options]);
this.b$['jme.JME'].resetJPopupMenu$.apply(this.b$['jme.JME'], []);
if (this.b$['jme.JME'].action == 105 && (this.b$['jme.JME'].params.mark == false  || this.starNothing ) ) {
this.b$['jme.JME'].action=202;
}});

Clazz_newMeth(C$, 'setDepictOption$Z',  function (tf) {
var depicting=this.b$['jme.JME'].isDepict$.apply(this.b$['jme.JME'], []);
if (tf != depicting ) {
if (depicting) {
this.b$['jme.JME'].setDepict$Z.apply(this.b$['jme.JME'], [false]);
this.b$['jme.JME'].resetMolecularAreaScale$.apply(this.b$['jme.JME'], []);
this.b$['jme.JME'].gui.menuCellSize=24.0;
this.paste=true;
this.b$['jme.JME'].resetAllGraphics$.apply(this.b$['jme.JME'], []);
} else {
this.b$['jme.JME'].setDepict$Z.apply(this.b$['jme.JME'], [true]);
this.b$['jme.JME'].gui.menuCellSize=0;
this.b$['jme.JME'].molecularAreaImage=null;
this.paste=false;
if (this.b$['jme.JME'].moleculePartsList.size$() > 0) {
this.b$['jme.JME'].molecularAreaScalePixelsPerCoord=this.b$['jme.JME'].scaleAndCenterForDepictMode$jme_canvas_Graphical2DObjectGroup.apply(this.b$['jme.JME'], [this.b$['jme.JME'].graphicalObjectList$.apply(this.b$['jme.JME'], [])]);
}this.b$['jme.JME'].resetAllGraphics$.apply(this.b$['jme.JME'], []);
}}}, p$1);

Clazz_newMeth(C$, 'setNumber$Z',  function (tf) {
if (this.b$['jme.JME'].params.number != tf ) this.b$['jme.JME'].gui.mustReDrawTopMenu=true;
this.b$['jme.JME'].params.number=tf;
if (!this.b$['jme.JME'].params.number) this.autonumber=false;
 else {
if (this.b$['jme.JME'].params.mark) this.b$['jme.JME'].mustRedrawEverything$.apply(this.b$['jme.JME'], []);
this.b$['jme.JME'].params.mark=false;
}}, p$1);

Clazz_newMeth(C$, 'getInfo$S',  function (param) {
var html5applet=this.getApplet$Z(false);
{
return (param == null ? html5applet.__Info : html5applet.__Info[param]);
}
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme"),p$1={},I$=[[0,['jme.io.JMEReader','.SupportedInputFileFormat'],'jme.io.JMEWriter','jme.io.JMEReader','java.awt.Color','jme.canvas.ColorManager','jme.gui.GUI','jme.JME','jme.gui.AtomDisplayLabel','jme.util.Box','java.util.StringTokenizer','jme.util.JMEUtil','jme.core.JMESmiles','jme.core.Atom','jme.ocl.OclAdapter',['jme.gui.GUI','.RingInfo']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMEmol", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'jme.core.JMECore', 'jme.canvas.Graphical2DObject');
C$.$classes$=[['ReactionRole',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.chain=Clazz_array(Integer.TYPE, [101]);
this.touchedAtom=0;
this.touchedBond=0;
this.touched_org=0;
this.stopChain=false;
this.needRecentering=false;
this.isQuery=false;
this.uniColor=null;
this.reactionRole=0;
this.mixPastelBackGroundColors=true;
this.centerx=NaN;
},1);

C$.$fields$=[['Z',['stopChain','needRecentering','isQuery','mixPastelBackGroundColors','haveMultipleBonds'],'D',['xorg','yorg','centerx','centery'],'I',['touchedAtom','touchedBond','touched_org','nchain','reactionRole'],'O',['jme','jme.JME','chain','int[]','uniColor','java.awt.Color','atomLabels','jme.gui.AtomDisplayLabel[]','ringInfo','jme.gui.GUI.RingInfo']]]

Clazz_newMeth(C$, 'c$',  function () {
C$.c$$jme_JME$jme_core_JMECore_Parameters.apply(this, [null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$jme_core_JMECore_Parameters',  function (pars) {
C$.c$$jme_JME$jme_core_JMECore_Parameters.apply(this, [null, pars]);
}, 1);

Clazz_newMeth(C$, 'c$$jme_JME$jme_core_JMECore_Parameters',  function (jme, pars) {
;C$.superclazz.c$$jme_event_JMEStatusListener$jme_core_JMECore_Parameters.apply(this,[jme, pars]);C$.$init$.apply(this);
this.jme=jme;
}, 1);

Clazz_newMeth(C$, 'c$$jme_JMEmol',  function (m) {
;C$.superclazz.c$$jme_core_JMECore.apply(this,[m]);C$.$init$.apply(this);
this.jme=m.jme;
this.haveMultipleBonds=m.haveMultipleBonds;
this.reactionRole=m.reactionRole;
this.ringInfo=m.ringInfo;
}, 1);

Clazz_newMeth(C$, 'c$$jme_JME$jme_JMEmolA',  function (jme, mols) {
;C$.superclazz.c$$jme_event_JMEStatusListener$jme_core_JMECoreA.apply(this,[jme, mols]);C$.$init$.apply(this);
this.jme=jme;
if (mols.length > 0) this.reactionRole=mols[0].reactionRole;
}, 1);

Clazz_newMeth(C$, 'c$$jme_JME$jme_JMEmol$I',  function (jme, m, part) {
;C$.superclazz.c$$jme_event_JMEStatusListener$jme_core_JMECore$I.apply(this,[jme, m, part]);C$.$init$.apply(this);
this.jme=jme;
this.reactionRole=m.reactionRole;
this.ringInfo=m.ringInfo;
}, 1);

Clazz_newMeth(C$, 'c$$jme_JME$jme_JMEmol$I$O',  function (jme, m, part, NOT_USED) {
C$.c$$jme_JME$jme_core_JMECore_Parameters.apply(this, [jme, m.parameters]);
this.setPart$jme_core_JMECore$I(m, part);
}, 1);

Clazz_newMeth(C$, 'c$$jme_JME$O$jme_io_JMEReader_SupportedInputFileFormat$jme_core_JMECore_Parameters',  function (jme, molecule, type, pars) {
C$.c$$jme_JME$jme_core_JMECore_Parameters.apply(this, [jme, pars]);
if (molecule == null ) return;
switch (type) {
case $I$(1).JME:
p$1.createFromJMEString$S.apply(this, [molecule]);
break;
case $I$(1).MOL:
p$1.createFromMOLString$S.apply(this, [molecule]);
break;
default:
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Unrecognized format"]);
}
}, 1);

Clazz_newMeth(C$, 'createJMEString$java_awt_geom_Rectangle2D_Double',  function (boundingBox) {
return $I$(2).createJMEString$jme_core_JMECore$Z$java_awt_geom_Rectangle2D_Double(this, false, boundingBox);
});

Clazz_newMeth(C$, 'createFromJMEString$S',  function (jmeString) {
$I$(3).createMolFromString$jme_core_JMECore$S(this, jmeString);
}, p$1);

Clazz_newMeth(C$, 'createFromMOLString$S',  function (molData) {
$I$(3).createMolFromMolData$jme_core_JMECore$S(this, molData);
}, p$1);

Clazz_newMeth(C$, 'mergeMols$java_util_ArrayList',  function (mols) {
return (mols.size$() == 0 ? Clazz_new_(C$) : Clazz_new_(C$.c$$jme_JME$jme_JMEmolA,[mols.get$I(0).jme, mols.toArray$OA(Clazz_array(C$, [mols.size$()]))]));
}, 1);

Clazz_newMeth(C$, 'setPresetPastelBackGroundColor$jme_canvas_PreciseGraphicsAWT$I$Z',  function (og, ab, isAtom) {
var colors=Clazz_array(Integer.TYPE, [1]);
var colorIsSet=false;
var showMappingNumbers=this.parameters.number;
var showColorMark=this.parameters.mark;
var showAtomMapNumberWithBackgroundColor=this.parameters.showAtomMapNumberWithBackgroundColor;
var atomOrBond=isAtom ? this.atoms[ab] : this.bonds[ab];
if (showMappingNumbers && showAtomMapNumberWithBackgroundColor && isAtom  ) {
var atom=this.atoms[ab];
if (atom.isMapped$()) {
var map=atom.getMap$();
var max_map=this.jme.colorManager.numberOfBackgroundColors$();
while (map > max_map){
map-=max_map;
}
colors[0]=map;
colorIsSet=true;
}}if (!colorIsSet && showColorMark && atomOrBond.isMarked$()  ) {
colors[0]=atomOrBond.getMark$();
colorIsSet=true;
}if (!colorIsSet) {
colors=isAtom ? this.getAtomBackgroundColors$I(ab) : this.getBondBackgroundColors$I(ab);
}var color=(colors != null  && colors.length > 0  ? this.jme.colorManager.averageColor$IA(colors) : null);
if (color != null ) {
og.setColor$java_awt_Color(color);
}return color;
});

Clazz_newMeth(C$, 'forceUniColor$java_awt_Color',  function (color) {
this.uniColor=color;
});

Clazz_newMeth(C$, 'resetForceUniColor$',  function () {
this.uniColor=null;
});

Clazz_newMeth(C$, 'getReactionRole$',  function () {
return this.reactionRole;
});

Clazz_newMeth(C$, 'setReactionRole$I',  function (reactionRole) {
this.reactionRole=reactionRole;
});

Clazz_newMeth(C$, 'center$',  function () {
this.center$D(1.0);
});

Clazz_newMeth(C$, 'center$D',  function (factor) {
if (this.natoms == 0) return;
var widthAndHeight=this.jme.getMolecularAreaCoordBoundingBox$();
var xpix=widthAndHeight.width;
var ypix=widthAndHeight.height;
if (xpix <= 0  || ypix <= 0  ) {
this.needRecentering=true;
return;
}var cad=this.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
var shiftx=xpix / 2 - cad.getCenterX$();
var shifty=ypix / 2 - cad.getCenterY$();
if (!this.jme.nocenter) this.moveXY$D$D(shiftx * factor, shifty * factor);
});

Clazz_newMeth(C$, 'closestDistance$D$D',  function (x, y) {
return this.closestAtomDistance$D$D(x, y);
});

Clazz_newMeth(C$, 'draw$jme_canvas_PreciseGraphicsAWT',  function (og) {
var offset2=2;
var offset3=3;
if (this.nAtoms$() == 0) return;
var markColorBackground=this.parameters.mark;
var atomTextStrokeColorArray=Clazz_array($I$(4), [this.nAtoms$() + 1]);
og.setDefaultBackGroundColor$java_awt_Color(this.jme.canvasBg);
if (this.jme.options.depictBorder) {
og.setColor$java_awt_Color($I$(4).black);
og.drawRect$D$D$D$D(0, 0, this.jme.dimension.width - 1, this.jme.dimension.height - 1);
}if (this.uniColor != null ) {
og.overrideColor$java_awt_Color(this.uniColor);
}if (this.needRecentering) {
this.center$();
this.jme.alignMolecules$I$I$I(1, this.jme.moleculePartsList.size$(), 0);
this.needRecentering=false;
}var rs=this.jme.options.bondBGrectRelativeSize;
if (rs > 0 ) {
for (var i=1; i <= this.nbonds; i++) {
if (this.setPresetPastelBackGroundColor$jme_canvas_PreciseGraphicsAWT$I$Z(og, i, false) != null ) {
var atom1=this.bonds[i].va;
var atom2=this.bonds[i].vb;
this.setCosSin$I$I(atom1, atom2);
var cos2=(9.0) * this.temp[0];
var sin2=(9.0) * this.temp[1];
sin2*=rs;
cos2*=rs;
var xr=Clazz_array(Double.TYPE, [4]);
var yr=Clazz_array(Double.TYPE, [4]);
xr[0]=this.x$I(atom1) + sin2;
yr[0]=this.y$I(atom1) - cos2;
xr[1]=this.x$I(atom2) + sin2;
yr[1]=this.y$I(atom2) - cos2;
xr[2]=this.x$I(atom2) - sin2;
yr[2]=this.y$I(atom2) + cos2;
xr[3]=this.x$I(atom1) - sin2;
yr[3]=this.y$I(atom1) + cos2;
og.fillPolygon$DA$DA$I(xr, yr, 4);
}}
}var cs=24.0;
rs=this.jme.options.atomBGcircleRelativeSize;
if (rs > 0 ) {
for (var i=1; i <= this.natoms; i++) {
var backgroundColor=this.setPresetPastelBackGroundColor$jme_canvas_PreciseGraphicsAWT$I$Z(og, i, true);
if (backgroundColor != null ) {
var scs=cs * rs;
og.fillOval$D$D$D$D(this.x$I(i) - scs / 2.0, this.y$I(i) - scs / 2.0, scs, scs);
if (og.currentZoomFactor$() >= 2 ) {
var contrastColor=$I$(5).contrast$java_awt_Color(backgroundColor);
atomTextStrokeColorArray[i]=contrastColor;
}}}
}if (this.ringInfo == null  && this.haveMultipleBonds ) {
p$1.setRingInfo.apply(this, []);
}this.computeAtomLabels$();
og.setFont$java_awt_Font(this.jme.gui.getAtomDrawingFont$());
var fm=this.jme.gui.getAtomDrawingFontMetrics$();
var h=$I$(6).stringHeight$java_awt_FontMetrics(fm);
for (var i=1; i <= this.nbonds; i++) {
var bond=this.bonds[i];
var atom1=bond.va;
var atom2=bond.vb;
og.setColor$java_awt_Color(bond.isCoordination$() ? $I$(4).LIGHT_GRAY : $I$(4).BLACK);
if (this.jme.action == 106 && this.touchedBond == i  && this.isRotatableBond$I(i) ) {
continue;
}if (bond.stereo == 3 || bond.stereo == 4  || bond.stereo == 6 ) {
var d=atom1;
atom1=atom2;
atom2=d;
}var xa=this.x$I(atom1);
var ya=this.y$I(atom1);
var xb=this.x$I(atom2);
var yb=this.y$I(atom2);
if (!(bond.isSingle$() || bond.isCoordination$() ) || bond.stereo != 0 ) {
this.setCosSin$I$I(atom1, atom2);
}switch (bond.bondType) {
case 2:
var cos2=2.0 * this.temp[0];
var sin2=2.0 * this.temp[1];
if (p$1.bondIsSidelined$jme_core_Bond.apply(this, [bond])) {
og.drawLine$D$D$D$D(xa, ya, xb, yb);
p$1.drawSideLine$jme_canvas_PreciseGraphicsAWT$jme_core_Bond$D$D$D$D$D$D.apply(this, [og, bond, xa, ya, xb, yb, cos2, sin2]);
} else if (bond.stereo == 10) {
og.drawLine$D$D$D$D(xa + sin2, ya - cos2, xb - sin2, yb + cos2);
og.drawLine$D$D$D$D(xa - sin2, ya + cos2, xb + sin2, yb - cos2);
} else {
og.drawLine$D$D$D$D(xa + sin2, ya - cos2, xb + sin2, yb - cos2);
og.drawLine$D$D$D$D(xa - sin2, ya + cos2, xb - sin2, yb + cos2);
}og.setColor$java_awt_Color($I$(4).black);
break;
case 3:
og.drawLine$D$D$D$D(xa, ya, xb, yb);
var cos3=3.0 * this.temp[0];
var sin3=3.0 * this.temp[1];
og.drawLine$D$D$D$D(xa + sin3, ya - cos3, xb + sin3, yb - cos3);
og.drawLine$D$D$D$D(xa - sin3, ya + cos3, xb - sin3, yb + cos3);
break;
case 9:
for (var k=0; k < 10; k++) {
var xax=xa - (xa - xb) / 10.0 * k;
var yax=ya - (ya - yb) / 10.0 * k;
og.drawLine$D$D$D$D(xax, yax, xax, yax);
}
var o=bond.btag;
var z="?";
if (o != null ) z=o;
var w=fm.stringWidth$S(z);
var xstart=(xa + xb) / 2.0 - w / 2.0;
var ystart=(ya + yb) / 2.0 + h / 2 - 1;
og.setColor$java_awt_Color($I$(4).magenta);
og.drawString$S$D$D(z, xstart, ystart);
og.setColor$java_awt_Color($I$(4).black);
break;
default:
switch (bond.stereo) {
default:
og.drawLine$D$D$D$D(xa, ya, xb, yb);
break;
case 1:
case 3:
cos2=3.0 * this.temp[0];
sin2=3.0 * this.temp[1];
var px=Clazz_array(Double.TYPE, [3]);
var py=Clazz_array(Double.TYPE, [3]);
px[0]=xb + sin2;
py[0]=yb - cos2;
px[1]=xa;
py[1]=ya;
px[2]=xb - sin2;
py[2]=yb + cos2;
og.fillPolygon$DA$DA$I(px, py, 3);
break;
case 2:
case 4:
cos2=3.0 * this.temp[0];
sin2=3.0 * this.temp[1];
for (var k=0; k < 10 ; k++) {
var xax=xa - (xa - xb) / 10.0 * k;
var yax=ya - (ya - yb) / 10.0 * k;
var sc=k / 10.0;
og.drawLine$D$D$D$D(xax + sin2 * sc, yax - cos2 * sc, xax - sin2 * sc, yax + cos2 * sc);
}
break;
case 5:
case 6:
var x1=0;
var x2=0;
var y1=0;
var y2=0;
cos2=3.0 * this.temp[0];
sin2=3.0 * this.temp[1];
var m=8;
for (var k=0; k < m + 1 ; k+=1) {
var xax=xa - (xa - xb) / m * k;
var yax=ya - (ya - yb) / m * k;
var sc=k / m;
x1=xax + sin2 * sc;
y1=yax - cos2 * sc;
if (k > 0 ) {
og.drawLine$D$D$D$D(x2, y2, x1, y1);
}x2=xax - sin2 * sc;
y2=yax + cos2 * sc;
og.drawLine$D$D$D$D(x1, y1, x2, y2);
}
break;
}
break;
}
if (false) {
var btag=bond.btag;
if (btag != null  && btag.length$() > 0 ) {
var w=fm.stringWidth$S(btag);
var xstart=(xa + xb) / 2.0 - w / 2.0;
var ystart=(ya + yb) / 2.0 + h / 2 - 1;
og.setColor$java_awt_Color($I$(4).red);
og.drawString$S$D$D(btag, xstart, ystart);
og.setColor$java_awt_Color($I$(4).black);
}}}
for (var i=1; i <= this.natoms; i++) {
if (this.atomLabels[i].noLabelAtom) {
continue;
}og.setBackGroundColor$();
this.setPresetPastelBackGroundColor$jme_canvas_PreciseGraphicsAWT$I$Z(og, i, true);
this.atomLabels[i].fill$jme_canvas_PreciseGraphicsAWT(og);
og.setColor$java_awt_Color($I$(7).color[this.an$I(i)]);
var strokeColor=atomTextStrokeColorArray[i];
this.atomLabels[i].draw$jme_canvas_PreciseGraphicsAWT$java_awt_Color$D$java_awt_FontMetrics(og, strokeColor, h, fm);
}
if (!markColorBackground) {
og.setFont$java_awt_Font(this.jme.gui.atomMapDrawingAreaFont);
for (var i=1; i <= this.natoms; i++) {
var al=this.atomLabels[i];
var mapString=al.mapString;
if (mapString == null ) continue;
var atomMapX=al.atomMapX;
var atomMapY=al.atomMapY;
og.setColor$java_awt_Color($I$(4).magenta);
var strokeColor=atomTextStrokeColorArray[i];
if (strokeColor == null ) {
og.drawString$S$D$D(mapString, atomMapX, atomMapY);
} else {
og.drawStringWithStroke$S$D$D$java_awt_Color$D(mapString, atomMapX, atomMapY, strokeColor, h / 20);
}}
}if (false) {
for (var i=1; i <= this.natoms; i++) {
var a=this.atoms[i];
if (a.atag == null  || a.atag.equals$O("") ) continue;
var al=this.atomLabels[i];
var smallWidth=al.smallAtomWidthLabel;
var fullWidth=al.fullAtomWidthLabel;
var xstart=a.x - smallWidth / 2.0;
var ystart=a.y + h / 2 - 1;
og.setColor$java_awt_Color($I$(4).red);
og.drawString$S$D$D(" " + a.atag, xstart + fullWidth, ystart);
}
}if ((this.touchedAtom > 0 || this.touchedBond > 0 ) && !false ) {
og.setColor$java_awt_Color(this.jme.action == 104 ? $I$(4).red : $I$(4).blue);
if (this.touchedAtom > 0 && this.jme.action != 106 ) {
var r=this.atomLabels[this.touchedAtom].drawBox;
og.drawRect$D$D$D$D(r.x, r.y, r.width, r.height);
}if (this.touchedBond > 0 && this.jme.action != 113 ) {
var b=this.bonds[this.touchedBond];
var atom1=b.va;
var atom2=b.vb;
this.setCosSin$I$I(atom1, atom2);
var cos2=(4.0) * this.temp[0];
var sin2=(4.0) * this.temp[1];
if (p$1.bondIsSidelined$jme_core_Bond.apply(this, [b])) {
cos2*=1.5;
sin2*=1.5;
}var px=Clazz_array(Double.TYPE, [5]);
var py=Clazz_array(Double.TYPE, [5]);
px[0]=this.x$I(atom1) + sin2;
px[1]=this.x$I(atom2) + sin2;
py[0]=this.y$I(atom1) - cos2;
py[1]=this.y$I(atom2) - cos2;
px[3]=this.x$I(atom1) - sin2;
px[2]=this.x$I(atom2) - sin2;
py[3]=this.y$I(atom1) + cos2;
py[2]=this.y$I(atom2) + cos2;
px[4]=px[0];
py[4]=py[0];
if (this.jme.action != 106) {
og.drawPolygon$DA$DA$I(px, py, 5);
} else if (this.isRotatableBond$I(this.touchedBond)) {
p$1.drawRotatableBond$jme_canvas_PreciseGraphicsAWT.apply(this, [og]);
}}}if (this.uniColor != null ) {
og.resetOverrideColor$();
}});

Clazz_newMeth(C$, 'bondIsSidelined$jme_core_Bond',  function (bond) {
return bond.bondType == 2 && bond.stereo != 10  && (!Double.isNaN$D(bond.guideX) || !Double.isNaN$D(bond.guideY) && this.atomLabels[bond.va].noLabelAtom && this.atomLabels[bond.vb].noLabelAtom   ) ;
}, p$1);

Clazz_newMeth(C$, 'drawRotatableBond$jme_canvas_PreciseGraphicsAWT',  function (og) {
var va=this.bonds[this.touchedBond].va;
var vb=this.bonds[this.touchedBond].vb;
this.computeMultiPartIndices$I(this.touchedBond);
var partA=this.atoms[va].partIndex;
var partB=this.atoms[vb].partIndex;
var sizeA=0;
var sizeB=0;
for (var i=1; i <= this.natoms; i++) {
var pi=this.atoms[i].partIndex;
if (pi == partA) {
++sizeA;
} else if (pi == partB) {
++sizeB;
}}
var partToDelete=sizeA > sizeB ? partB : partA;
og.setColor$java_awt_Color($I$(4).red);
for (var i=1; i <= this.natoms; i++) {
this.atoms[i].deleteFlag=false;
if (this.atoms[i].partIndex == partToDelete) {
this.atoms[i].deleteFlag=true;
var r=this.atomLabels[i].drawBox;
og.drawRect$D$D$D$D(r.x, r.y, r.width, r.height);
}}
}, p$1);

Clazz_newMeth(C$, 'drawSideLine$jme_canvas_PreciseGraphicsAWT$jme_core_Bond$D$D$D$D$D$D',  function (og, bond, xa, ya, xb, yb, cos2, sin2) {
var cx=bond.centerX;
var cy=bond.centerY;
var ox=cx + sin2 * 2;
var oy=cy - cos2 * 2;
var gx=bond.guideX;
var gy=bond.guideY;
var min=3;
if ((cx - gx) * (cx - gx) + (cy - gy) * (cy - gy) < min ) {
gx=NaN;
}var f=(Double.isNaN$D(gx) ? -2.0 : (ox - gx) * (ox - gx) + (oy - gy) * (oy - gy) > (cx - gx) * (cx - gx) + (cy - gy) * (cy - gy)  ? -2 : 2);
var g=0.1;
var dx=xb - xa;
var dy=yb - ya;
xa+=dx * g;
xb-=dx * g;
ya+=dy * g;
yb-=dy * g;
var x1=xa + sin2 * f;
var y1=ya - cos2 * f;
var x2=xb + sin2 * f;
var y2=yb - cos2 * f;
og.drawLine$D$D$D$D(x1, y1, x2, y2);
}, p$1);

Clazz_newMeth(C$, 'computeAtomLabels$',  function () {
var showHs=this.parameters.hydrogenParams.showHs;
var showMap=(!this.parameters.mark || this.parameters.showAtomMapNumberWithBackgroundColor );
var fm=this.jme.gui.getAtomDrawingFontMetrics$();
var rb=25.0;
this.atomLabels=$I$(8).createLabels$jme_JMEmol$D$java_awt_FontMetrics$Z$Z$jme_gui_AtomDisplayLabelA(this, rb, fm, showHs, showMap, this.atomLabels);
});

Clazz_newMeth(C$, 'computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double',  function (union) {
if (this.natoms == 0) return union;
this.computeAtomLabels$();
for (var i=1; i <= this.natoms; i++) union=$I$(9).createUnion$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double(this.atomLabels[i].drawBox, union, union);

return union;
});

Clazz_newMeth(C$, 'rubberBanding$D$D',  function (xnew, ynew) {
this.touchedAtom=0;
this.XY$I$D$D(0, xnew, ynew);
if (this.jme.action != 205) {
var atom=this.checkTouch$I$Z(0, true);
if (atom > 0) {
this.touchedAtom=atom;
if (atom == this.touched_org) {
this.XY$I$D$D(this.natoms, this.xorg, this.yorg);
} else {
this.XY$I$D$D(this.natoms, this.x$I(atom), this.y$I(atom));
}} else {
this.setCosSin$I$I(this.touched_org, 0);
this.XY$I$D$D(this.natoms, this.x$I(this.touched_org) + 25.0 * this.temp[0], this.y$I(this.touched_org) + 25.0 * this.temp[1]);
}return;
}this.touchedBond=0;
var last=this.chain[this.nchain];
var parent=this.chain[this.nchain - 1];
var dx=this.x$I(last) - this.x$I(parent);
var dy=this.y$I(last) - this.y$I(parent);
var rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 1.0 ) rx=1.0;
var sina=dy / rx;
var cosa=dx / rx;
var vv=rx / 2.0 / Math.tan(0.5235987755982988) ;
var xx=xnew - this.x$I(parent);
var yy=ynew - this.y$I(parent);
var xm=-rx / 2.0 + xx * cosa + yy * sina;
var ym=yy * cosa - xx * sina;
if (xm < 0.0 ) {
if (this.nchain > 1) {
this.deleteAtom$I(this.natoms);
--this.nchain;
this.stopChain=false;
} else if (this.natoms == 2) {
if (this.y$I(2) - this.y$I(1) < 0  && ynew - this.y$I(1) > 0  ) this.atoms[2].y=this.y$I(1) + rx / 2.0;
 else if (this.y$I(2) - this.y$I(1) > 0  && ynew - this.y$I(1) < 0  ) this.atoms[2].y=this.y$I(1) - rx / 2.0;
if (this.x$I(2) - this.x$I(1) < 0  && xnew - this.x$I(1) > 0  ) this.atoms[2].x=this.x$I(1) + rx * 0.866;
 else if (this.x$I(2) - this.x$I(1) > 0  && xnew - this.x$I(1) < 0  ) this.atoms[2].x=this.x$I(1) - rx * 0.866;
} else {
if (this.nv$I(this.chain[0]) == 2) {
var ref=this.v$I(this.chain[0])[1];
if (ref == this.chain[1]) ref=this.v$I(this.chain[0])[2];
dx=this.x$I(this.chain[0]) - this.x$I(ref);
dy=this.y$I(this.chain[0]) - this.y$I(ref);
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 1.0 ) rx=1.0;
sina=dy / rx;
cosa=dx / rx;
xx=xnew - this.x$I(ref);
yy=ynew - this.y$I(ref);
var ymm=yy * cosa - xx * sina;
xx=this.x$I(this.chain[1]) - this.x$I(ref);
yy=this.y$I(this.chain[1]) - this.y$I(ref);
var yc1=yy * cosa - xx * sina;
if (ymm > 0.0  && yc1 < 0.0   || ymm < 0.0  && yc1 > 0.0   ) {
var bd=this.nbonds;
this.addBondToAtom$I$I$I$Z(0, this.chain[0], 0, false);
this.deleteBond$I$Z(bd, true);
if (this.checkTouch$I$Z(this.natoms, true) > 0) this.stopChain=true;
}}}} else {
if (this.stopChain) return;
var th=-1.0;
if (xm < rx * 1.5 ) th=(rx * 1.5 - xm) * vv / (rx * 1.5);
if (Math.abs(ym) > th ) {
++this.nchain;
if (this.nchain > 100) {
this.jme.showInfo$S("You are too focused on chains, enough of it for now !");
--this.nchain;
return;
}this.addBondToAtom$I$I$I$Z(1, this.natoms, Long.$ival(Math.round$D(ym)), false);
this.jme.willPostSave$Z(false);
this.chain[this.nchain]=this.natoms;
if (this.checkTouch$I$Z(this.natoms, true) > 0) this.stopChain=true;
}}this.touchedAtom=0;
});

Clazz_newMeth(C$, 'checkChain$',  function () {
if (this.stopChain) {
var n=this.checkTouch$I$Z(this.natoms, false);
if (this.nv$I(n) < 6) {
var parent=this.chain[this.nchain - 1];
this.createAndAddNewBond$I$I$I(n, parent, 1);
}this.deleteAtom$I(this.natoms);
}this.stopChain=false;
});

Clazz_newMeth(C$, 'checkTouch$I$Z',  function (atom, onlyOne) {
return this.checkTouchToAtom$I$I$I$D$Z(atom, 1, this.natoms, 50, onlyOne);
});

Clazz_newMeth(C$, 'countNumberOverlapAtomOfAddedFragment$I$I',  function (fragmentFirstAtom, fragmentLastAtom) {
var result=0;
for (var at=1; at <= this.natoms; at++) {
if (at < fragmentFirstAtom && at > fragmentLastAtom  && this.checkTouchToAtom$I$I$I$D$Z(at, fragmentFirstAtom, fragmentLastAtom, 50, true) != 0 ) {
++result;
}}
return result;
});

Clazz_newMeth(C$, 'avoidTouch$I',  function (from) {
if (from == 0) from=this.natoms;
for (var i=this.natoms; i > this.natoms - from; i--) {
if (this.checkTouch$I$Z(i, true) != 0) this.moveXY$I$D$D(i, 6, 6);
}
});

Clazz_newMeth(C$, 'checkBond$',  function () {
var atom=this.checkTouch$I$Z(this.natoms, false);
if (atom == 0) return;
--this.natoms;
var i=this.getBondIndex$I$I(atom, this.touched_org);
if (i > 0) {
--this.nbonds;
this.incrNV$I$I(this.touched_org, -1);
if (this.bonds[i].bondType < (this.bonds[i].smallRing ? 2 : 3)) {
++this.bonds[i].bondType;
this.bonds[i].stereo=0;
this.setBondCenter$jme_core_Bond(this.bonds[i]);
} else {
this.info$S("Maximum allowed bond order has been reached!");
}return;
} else if (this.nv$I(atom) == 6) {
--this.nbonds;
this.incrNV$I$I(this.touched_org, -1);
this.info$S("Not possible connection !");
return;
}this.bonds[this.nbonds].vb=atom;
this.incrNV$I$I(this.touched_org, -1);
this.addBothNeighbors$I$I(atom, this.touched_org);
this.setBondCenter$jme_core_Bond(this.bonds[this.nbonds]);
});

Clazz_newMeth(C$, 'addOtherMolToMe$jme_JMEmol',  function (otherMol) {
var nn=this.natoms;
for (var i=1; i <= otherMol.natoms; i++) {
this.createAtomFromOther$jme_core_Atom(otherMol.atoms[i]);
this.AN$I$I(this.natoms, otherMol.an$I(i));
}
for (var i=1; i <= otherMol.nbonds; i++) {
this.createAndAddBondFromOther$jme_core_Bond(otherMol.bonds[i]);
this.bonds[this.nbonds].va=otherMol.bonds[i].va + nn;
this.bonds[this.nbonds].vb=otherMol.bonds[i].vb + nn;
}
});

Clazz_newMeth(C$, 'createAtomFromOther$jme_core_Atom',  function (atomToDuplicate) {
this.atomLabels=null;
return C$.superclazz.prototype.createAtomFromOther$jme_core_Atom.apply(this, [atomToDuplicate]);
});

Clazz_newMeth(C$, 'setAtomOrBondColors$S$I$Z',  function (s, delta, isAtom) {
var st=Clazz_new_($I$(10,1).c$$S$S,[s, ","]);
try {
while (st.hasMoreTokens$()){
var atomOrBond=Integer.valueOf$S(st.nextToken$()).intValue$() - delta;
var color=Integer.valueOf$S(st.nextToken$()).intValue$();
if (isAtom) this.addAtomColor$I$I(atomOrBond, color);
 else {
this.addBondColor$I$I(atomOrBond, color);
}}
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("Error in atom coloring");
$I$(11).log$S("Error in atom coloring");
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'setAtomColors$S$I',  function (s, delta) {
this.setAtomOrBondColors$S$I$Z(s, delta, true);
});

Clazz_newMeth(C$, 'setBondColors$S$I',  function (s, delta) {
this.setAtomOrBondColors$S$I$Z(s, delta, false);
});

Clazz_newMeth(C$, 'addAtomColor$I$I',  function (at, c) {
if (at > 0 && at <= this.natoms ) {
this.atoms[at].addBackgroundColor$I(c);
}});

Clazz_newMeth(C$, 'getAtomBackgroundColors$I',  function (at) {
return (at > 0 && at <= this.natoms  ? this.atoms[at].getBackgroundColors$() : null);
});

Clazz_newMeth(C$, 'addBondColor$I$I',  function (b, c) {
if (b > 0 && b <= this.nbonds ) {
this.bonds[b].addBackgroundColor$I(c);
}});

Clazz_newMeth(C$, 'getBondBackgroundColors$I',  function (b) {
return (b > 0 && b <= this.nbonds  ? this.bonds[b].getBackgroundColors$() : null);
});

Clazz_newMeth(C$, 'deepCopy$',  function () {
return Clazz_new_(C$.c$$jme_JMEmol,[this]);
});

Clazz_newMeth(C$, 'isRotatableBond$I$I',  function (a1, a2) {
return this.minimumRingSize$I$I(a1, a2) == 0;
});

Clazz_newMeth(C$, 'isRotatableBond$I',  function (b) {
return this.isRotatableBond$I$I(this.bonds[b].va, this.bonds[b].vb);
});

Clazz_newMeth(C$, 'createSmiles$',  function () {
return this.createSmiles$jme_core_JMECore_Parameters(this.parameters);
});

Clazz_newMeth(C$, 'createSmiles$jme_core_JMECore_Parameters',  function (pars) {
return $I$(12,"getSmiles$jme_core_JMECore$jme_core_JMECore_Parameters$Z",[this.deepCopy$(), pars, this.isQuery]);
});

Clazz_newMeth(C$, 'findAtomChargeForOutput$I',  function (atomIndex) {
var charge=0;
if (atomIndex > 0 && atomIndex <= this.nAtoms$() ) {
var atom=this.atoms[atomIndex];
charge=atom.q$();
}return charge;
});

Clazz_newMeth(C$, 'hasMarkedAtom$',  function () {
for (var at=1; at <= this.natoms; at++) {
if (this.findAtomMapForOutput$I(at) > 0) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'createMolFile$S',  function (header) {
return $I$(2,"createMolFile$jme_core_JMECore$S$Z$java_awt_geom_Rectangle2D_Double",[this, header, true, this.computeCoordinate2DboundingBox$()]);
});

Clazz_newMeth(C$, 'changeCharge$I$I',  function (atom, type) {
var np="Charge change not possible on ";
if (type == 1) {
this.incrQ$I$I(atom, 1);
return true;
} else if (type == -1) {
this.incrQ$I$I(atom, -1);
return true;
}var startCharge=this.q$I(atom);
var startNH=this.atoms[atom].nh;
var sbo=this.getSumOfBondOrder$I(atom);
if (sbo == -1) {
if (type == 0) {
if (this.q$I(atom) == 0) this.Q$I$I(atom, 1);
 else if (this.q$I(atom) == 1) this.Q$I$I(atom, -1);
 else if (this.q$I(atom) == -1) this.Q$I$I(atom, 0);
}}switch (this.an$I(atom)) {
case 1:
if (sbo == 0) {
if (this.q$I(atom) == 0) this.Q$I$I(atom, 1);
 else if (this.q$I(atom) == 1) this.Q$I$I(atom, -1);
 else {
this.Q$I$I(atom, 0);
}}break;
case 2:
if (sbo > 2) this.info$S(np + "this boron !");
if (this.q$I(atom) == 0) this.Q$I$I(atom, 1);
 else if (this.q$I(atom) == 1) this.Q$I$I(atom, 0);
break;
case 3:
if (sbo > 3) this.info$S(np + "this carbon !");
 else if (sbo < 4) {
if (this.q$I(atom) == 0) this.Q$I$I(atom, -1);
 else if (this.q$I(atom) == -1) this.Q$I$I(atom, 1);
 else if (this.q$I(atom) == 1) this.Q$I$I(atom, 0);
}break;
case 4:
case 7:
if (sbo > 3) this.info$S(np + "multibonded N or P !");
 else if (sbo == 3 && this.q$I(atom) == 0 ) this.Q$I$I(atom, 1);
 else if (sbo == 3 && this.q$I(atom) == 1 ) this.Q$I$I(atom, 0);
 else if (sbo < 3 && this.q$I(atom) == 0 ) this.Q$I$I(atom, 1);
 else if (sbo < 3 && this.q$I(atom) == 1 ) this.Q$I$I(atom, -1);
 else if (sbo < 3 && this.q$I(atom) == -1 ) this.Q$I$I(atom, 0);
break;
case 5:
case 8:
case 13:
if (sbo > 2) this.info$S(np + "multibonded " + $I$(13).zlabel[this.an$I(atom)] + " !" );
 else if (sbo == 2 && this.q$I(atom) == 0 ) this.Q$I$I(atom, 1);
 else if (sbo == 2 && this.q$I(atom) == 1 ) this.Q$I$I(atom, 0);
 else if (sbo < 2 && this.q$I(atom) == 0 ) this.Q$I$I(atom, -1);
 else if (sbo < 2 && this.q$I(atom) == -1 ) this.Q$I$I(atom, 1);
 else if (sbo < 2 && this.q$I(atom) == 1 ) this.Q$I$I(atom, 0);
break;
case 9:
case 10:
case 11:
case 12:
if (sbo == 0 && this.q$I(atom) == 0 ) this.Q$I$I(atom, -1);
 else if (sbo == 0 && this.q$I(atom) == -1 ) this.Q$I$I(atom, 0);
 else this.info$S(np + "the halogen !");
break;
case 32:
this.info$S("Use X button to change charge on the X atom !");
break;
}
if ($I$(13,"chargedMetalType$I",[this.an$I(atom)]) > 0) if (!this.toggleChargeAndHydrogenCountOfMetalAtom$jme_core_Atom$I(this.atoms[atom], sbo)) this.info$S(np + $I$(13).zlabel[this.an$I(atom)]);
return startCharge != this.q$I(atom) || startNH != this.atoms[atom].nh ;
});

Clazz_newMeth(C$, 'toggleChargeAndHydrogenCountOfMetalAtom$jme_core_Atom$I',  function (atom, sbo) {
var changed=false;
var maxMetalCharge=$I$(13).chargedMetalType$I(atom.an);
if (maxMetalCharge > 0) {
var maxChargeIncrease=maxMetalCharge - sbo;
if (maxChargeIncrease > 0) {
var q=atom.q;
var nh=atom.nh;
if (q + nh < maxChargeIncrease) {
q+=maxChargeIncrease - nh;
} else if (q + nh == maxChargeIncrease) {
if (q == maxChargeIncrease) {
q=0;
nh=maxChargeIncrease;
} else {
q=0;
nh=0;
if (sbo == 0) this.info$S("Metallic " + $I$(13).zlabel[atom.an]);
}}changed=(atom.q != q || atom.nh != nh );
atom.q=q;
atom.nh=nh;
}}return changed;
});

Clazz_newMeth(C$, 'markAtom$I',  function (newMark) {
if (this.parameters.mark) {
if (this.jme.options.markOnly1) {
for (var at=1; at <= this.natoms; at++) {
if (at != this.touchedAtom) {
this.atoms[at].resetMark$();
}}
}if (newMark != this.atoms[this.touchedAtom].getMark$()) {
this.atoms[this.touchedAtom].setMark$I(newMark);
return true;
} else {
this.atoms[this.touchedAtom].resetMark$();
return false;
}}var hasBeenMarked;
var touchedAtomObject=this.atoms[this.touchedAtom];
if (newMark <= 0) {
touchedAtomObject.resetMap$();
hasBeenMarked=false;
} else {
hasBeenMarked=newMark != touchedAtomObject.getMap$();
touchedAtomObject.setMap$I(newMark);
hasBeenMarked=true;
}return hasBeenMarked;
});

Clazz_newMeth(C$, 'markBond$I',  function (newMark) {
if (this.parameters.mark) {
if (this.jme.options.markOnly1) {
for (var at=1; at <= this.nbonds; at++) {
if (at != this.touchedBond) {
this.bonds[at].resetMark$();
}}
}if (newMark != this.bonds[this.touchedBond].getMark$()) {
this.bonds[this.touchedBond].setMark$I(newMark);
return true;
} else {
this.bonds[this.touchedBond].resetMark$();
return false;
}}return false;
});

Clazz_newMeth(C$, 'failed$S',  function (msg) {
this.info$S(msg);
this.jme.setLastAction$I(9);
});

Clazz_newMeth(C$, 'compute2DcoordinatesIfMissing$',  function () {
return (this.has2Dcoordinates$() ? null : $I$(14).compute2Dcoordinates$jme_JMEmol(this));
});

Clazz_newMeth(C$, 'clearRotation$',  function () {
this.centerx=this.centery=NaN;
});

Clazz_newMeth(C$, 'rotate$D',  function (movex) {
if (Double.isNaN$D(this.centerx)) {
var bbox=this.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
this.centerx=bbox.getCenterX$();
this.centery=bbox.getCenterY$();
}this.rotate$D$D$D(movex, this.centerx, this.centery);
});

Clazz_newMeth(C$, 'reComputeBondOrderIfAromaticBondType$',  function () {
return $I$(14).reComputeBondOrderIfAromaticBondType$jme_JMEmol(this);
});

Clazz_newMeth(C$, 'addBondToAtom$I$I$I$Z',  function (action, ia, up, forceLinear) {
var bondType=(action == 204 ? 3 : action == 203 ? 2 : 1);
var b=C$.superclazz.prototype.addBondToAtom$I$I$I$Z$D.apply(this, [bondType, ia, up, forceLinear, 50]);
if (b == null ) return false;
if (action == 201) this.toggleBondStereo$I(this.nbonds);
this.xorg=this.x$I(this.natoms);
this.yorg=this.y$I(this.natoms);
return b.booleanValue$();
});

Clazz_newMeth(C$, 'cleanAfterChanged$Z',  function (polarNitro) {
this.setValenceState$();
this.cleanPolarBonds$Z(polarNitro);
this.ringInfo=null;
});

Clazz_newMeth(C$, 'deleteAtomGroup$',  function () {
while (true){
var atd=0;
for (var i=this.natoms; i >= 1; i--) if (this.atoms[i].deleteFlag && i > atd ) {
atd=i;
}
if (atd == 0) break;
this.deleteAtom$I(atd);
this.atoms[atd].deleteFlag=false;
}
});

Clazz_newMeth(C$, 'deleteCoordinationBonds$',  function () {
var cbCount=0;
for (var b=this.nbonds + 1; --b >= 1; ) {
if (this.bonds[b].bondType == 0) {
this.deleteBond$I$Z(b, false);
++cbCount;
}}
return cbCount;
});

Clazz_newMeth(C$, 'toggleBondStereo$I',  function (bondIndex) {
var bond=this.bonds[bondIndex];
if (bond.bondType == 2) {
this.toggleDoubleBondStereo$jme_core_Bond(bond);
return;
}if (!bond.isSingle$() && !bond.isCoordination$() ) {
this.info$S("Stereomarking allowed only on single and double bonds!");
return;
}var atom1=this.bonds[bondIndex].va;
var atom2=this.bonds[bondIndex].vb;
if (this.nv$I(atom1) < 2 && this.nv$I(atom2) < 2 ) {
bond.stereo=0;
this.info$S("Stereomarking meaningless on this bond !");
return;
}switch (bond.stereo) {
case 0:
if (this.nv$I(atom2) <= this.nv$I(atom1)) bond.stereo=1;
 else bond.stereo=3;
break;
case 1:
bond.stereo=2;
break;
case 2:
bond.stereo=5;
break;
case 5:
if (this.nv$I(atom2) > 2) bond.stereo=3;
 else bond.stereo=1;
break;
case 3:
bond.stereo=4;
break;
case 4:
bond.stereo=6;
break;
case 6:
if (this.nv$I(atom1) > 2) bond.stereo=1;
 else bond.stereo=3;
break;
}
});

Clazz_newMeth(C$, 'numberAtomsSequentially$',  function () {
for (var i=1; i <= this.natoms; i++) {
this.atoms[i].setMap$I(i);
}
});

Clazz_newMeth(C$, 'setRingInfo',  function () {
this.ringInfo=Clazz_new_($I$(15,1).c$$jme_core_JMECore,[this]);
}, p$1);

Clazz_newMeth(C$, 'setBondCenters$',  function () {
this.ringInfo=null;
this.haveMultipleBonds=false;
C$.superclazz.prototype.setBondCenters$.apply(this, []);
});

Clazz_newMeth(C$, 'setBondCenter$jme_core_Bond',  function (b) {
C$.superclazz.prototype.setBondCenter$jme_core_Bond.apply(this, [b]);
if (b.bondType == 2 || b.bondType == 3 ) this.haveMultipleBonds=true;
this.ringInfo=null;
});

Clazz_newMeth(C$, 'navigateBonds$I$I',  function (from, dir) {
if (this.natoms == 0 || this.nbonds == 0 ) return 0;
if (from == 0 || from > this.natoms  || -from > this.nbonds ) from=-1;
var dirx=0;
var diry=0;
switch (dir) {
case 1:
diry=-1;
break;
case 2:
diry=1;
break;
case 3:
dirx=-1;
break;
case 4:
dirx=1;
break;
}
if (from < 0) {
var b=this.bonds[-from];
this.setCosSin$I$I(b.va, b.vb);
var dotprod=dirx * this.temp[0] + diry * this.temp[1];
return (dotprod < 0  ? b.va : b.vb);
}var a=this.atoms[from];
var max=-1;
var maxi=0;
for (var i=1; i <= a.nv; i++) {
this.setCosSin$I$I(from, a.v[i]);
var dotprod=dirx * this.temp[0] + diry * this.temp[1];
if (dotprod > max ) {
max=dotprod;
maxi=a.v[i];
}}
return -this.getBondIndex$I$I(from, maxi);
});

Clazz_newMeth(C$, 'toggleDoubleBondStereo$jme_core_Bond',  function (bond) {
this.ringInfo=null;
bond.toggleNormalCrossedDoubleBond$();
});

Clazz_newMeth(C$, 'setBondType$I$I',  function (b, type) {
this.bonds[b].bondType=type;
this.setBondCenter$jme_core_Bond(this.bonds[b]);
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMEmol, "ReactionRole", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['all','int[]']]]

C$.$static$=function(){C$.$static$=0;
C$.all=Clazz_array(Integer.TYPE, -1, [1, 2, 3]);
};

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme"),I$=[[0,'jme.JME','jme.util.JMEUtil',['jme.JMEmolList','.EnsembleAtom'],['jme.JMEmolList','.EnsembleBond'],'jme.JMEmol','jme.util.Box',['java.awt.geom.Rectangle2D','.Double'],['jme.util.Box','.Axis'],'jme.canvas.Graphical2DObjectGroup','jme.canvas.Graphical2DObject']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMEmolList", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.util.ArrayList');
C$.$classes$=[['EnsembleAtom',9],['EnsembleBond',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.isReaction=false;
this.errorMsg=null;
this.warnng=null;
this.error=null;
},1);

C$.$fields$=[['Z',['isReaction'],'S',['errorMsg','warnng'],'O',['error','Exception']]]

Clazz_newMeth(C$, 'removeAll$',  function () {
C$.superclazz.prototype.clear$.apply(this, []);
});

Clazz_newMeth(C$, 'getErrorMessage$',  function () {
if (this.errorMsg != null ) return this.errorMsg;
if (this.error != null ) return $I$(1).makeErrorMessage$Exception(this.error);
return null;
});

Clazz_newMeth(C$, 'setErrorMsg$S',  function (msg) {
this.errorMsg=msg;
this.removeAll$();
return this;
});

Clazz_newMeth(C$, 'isReaction$',  function () {
return this.isReaction;
});

Clazz_newMeth(C$, 'getEnsembleAtom$I$I',  function (mol, atom) {
if (mol < 0 || atom < 0 ) {
$I$(2,"log$S",["Invalid index for getEnsembleAtom()"]);
return null;
}return Clazz_new_($I$(3,1).c$$jme_JMEmolList$I$I,[this, mol, atom]);
});

Clazz_newMeth(C$, 'getEnsembleBond$I$I',  function (mol, bond) {
if (mol < 0 || bond < 0 ) {
$I$(2,"log$S",["Invalid index for getEnsembleBond()"]);
return null;
}return Clazz_new_($I$(4,1).c$$jme_JMEmolList$I$I,[this, mol, bond]);
});

Clazz_newMeth(C$, 'computeAtomEnsembleIndex$I$I',  function (mol, atom) {
return this.getEnsembleAtom$I$I(mol, atom).atomEnsembleIndex;
});

Clazz_newMeth(C$, 'computeBondEnsembleIndex$I$I',  function (mol, bond) {
return this.getEnsembleBond$I$I(mol, bond).bondEnsembleIndex;
});

Clazz_newMeth(C$, 'reComputeAtomLabels$',  function () {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.computeAtomLabels$();
}
});

Clazz_newMeth(C$, 'splitFragments$Z',  function (removeEmpty) {
var fragmentList=Clazz_new_(C$);
var changed=false;
for (var each, $each = this.iterator$(); $each.hasNext$()&&((each=($each.next$())),1);) {
var nparts=each.computeMultiPartIndices$();
var jme=each.jme;
if (nparts == 1) {
fragmentList.add$O(each);
} else if (nparts == 0) {
if (removeEmpty) {
changed=true;
} else fragmentList.add$O(each);
} else {
for (var p=1; p <= nparts; p++) {
var newFragment=Clazz_new_($I$(5,1).c$$jme_JME$jme_JMEmol$I$O,[jme, each, p, null]);
newFragment.setReactionRole$I(each.getReactionRole$());
fragmentList.add$O(newFragment);
}
changed=true;
}}
if (changed) {
this.removeAll$();
for (var each, $each = fragmentList.iterator$(); $each.hasNext$()&&((each=($each.next$())),1);) {
this.add$O(each);
}
}return changed;
});

Clazz_newMeth(C$, 'reactionParts$I',  function (reactionRole) {
return this.reactionParts$I$Z(reactionRole, false);
});

Clazz_newMeth(C$, 'reactionParts$I$Z',  function (reactionRole, mergeMolecules) {
var reactionParts=Clazz_new_(C$);
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (mol.nAtoms$() > 0 && mol.getReactionRole$() == reactionRole ) reactionParts.add$O(mol);
}
if (mergeMolecules && reactionParts.size$() > 1 ) {
var merged=$I$(5).mergeMols$java_util_ArrayList(reactionParts);
merged.setReactionRole$I(reactionRole);
reactionParts=Clazz_new_(C$);
reactionParts.add$O(merged);
}return reactionParts;
});

Clazz_newMeth(C$, 'last$',  function () {
return this.get$I(this.size$() - 1);
});

Clazz_newMeth(C$, 'first$',  function () {
return this.get$I(0);
});

Clazz_newMeth(C$, 'overlap$',  function () {
var closeContactDist=2.5;
var results=Clazz_array(Integer.TYPE, [this.size$() * (this.size$() - 1)]);
var rpos=0;
for (var m1=0; m1 < this.size$() - 1; m1++) {
var mol1=this.get$I(m1);
for (var m2=m1 + 1; m2 < this.size$() - 1; m1++) {
var mol2=this.get$I(m1);
if (mol1.hasCloseContactWith$jme_core_JMECore$D(mol2, closeContactDist)) {
results[rpos++]=m1;
results[rpos++]=m2;
}}
}
return results;
});

Clazz_newMeth(C$, 'hasCloseContact$D',  function (closeContactDist) {
for (var m1=0; m1 < this.size$() - 1; m1++) {
var mol1=this.get$I(m1);
for (var m2=m1 + 1; m2 < this.size$() - 1; m2++) {
var mol2=this.get$I(m2);
if (mol1.hasCloseContactWith$jme_core_JMECore$D(mol2, closeContactDist)) {
return true;
}}
}
return false;
});

Clazz_newMeth(C$, 'removeEmptyMolecules$',  function () {
var emptyList=Clazz_new_(C$);
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (mol.nAtoms$() == 0) {
emptyList.add$O(mol);
}}
for (var mol, $mol = emptyList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
this.remove$O(mol);
}
return emptyList.size$() > 0;
});

Clazz_newMeth(C$, 'computeCoordinate2DboundingBox$',  function () {
var boundingBox=null;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var moleculeBox=mol.computeCoordinate2DboundingBox$();
if (moleculeBox != null ) boundingBox=(boundingBox == null  ? moleculeBox : $I$(6).createUnion$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double(boundingBox, moleculeBox, boundingBox));
}
return boundingBox;
});

Clazz_newMeth(C$, 'computeBoundingBoxWithAtomLabels$',  function () {
var boundingBox=null;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
boundingBox=mol.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(boundingBox);
}
return boundingBox;
});

Clazz_newMeth(C$, 'safeComputeBoundingBoxWithAtomLabels$D$D',  function (minWidth, minHeight) {
var boundingBox=this.computeBoundingBoxWithAtomLabels$();
if (boundingBox == null ) {
boundingBox=Clazz_new_($I$(7,1));
}boundingBox.width=Math.max(boundingBox.width, minWidth);
boundingBox.height=Math.max(boundingBox.height, minHeight);
return boundingBox;
});

Clazz_newMeth(C$, 'distributeAndCenterPositionsHorizontally$D',  function (margin) {
this.distributePositions$jme_util_Box_Axis$D($I$(8).X, margin);
this.alignCenter$jme_util_Box_Axis($I$(8).Y);
});

Clazz_newMeth(C$, 'distributeAndCenterPositionsVertically$D',  function (margin) {
this.distributePositions$jme_util_Box_Axis$D($I$(8).Y, margin);
this.alignCenter$jme_util_Box_Axis($I$(8).X);
});

Clazz_newMeth(C$, 'distributePositions$jme_util_Box_Axis$D',  function (xOrY, margin) {
var distributer=Clazz_new_($I$(9,1));
distributer.addAll$java_util_ArrayList(this);
distributer.distributePositions$jme_util_Box_Axis$D(xOrY, margin);
});

Clazz_newMeth(C$, 'alignCenterY$',  function () {
this.alignCenter$jme_util_Box_Axis($I$(8).Y);
});

Clazz_newMeth(C$, 'alignCenter$jme_util_Box_Axis',  function (xOrY) {
var aligner=Clazz_new_($I$(9,1).c$$java_util_ArrayList,[this]);
aligner.alignCenter$jme_util_Box_Axis(xOrY);
});

Clazz_newMeth(C$, 'replace$jme_JMEmol$jme_JMEmol',  function (mol, newMol) {
var index=this.indexOf$O(mol);
if (index >= 0) this.set$I$O(index, newMol);
return index;
});

Clazz_newMeth(C$, 'jmeIndex$jme_JMEmol',  function (mol) {
return this.indexOf$O(mol) + 1;
});

Clazz_newMeth(C$, 'findMaxAtomMap$I',  function (reactionRole) {
var max=-2147483648;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (reactionRole == -1 || mol.getReactionRole$() == reactionRole ) {
var m=mol.getMaxAtomMap$();
if (m > max) max=m;
}}
return max;
});

Clazz_newMeth(C$, 'findMaxAtomMap$',  function () {
return this.findMaxAtomMap$I(-1);
});

Clazz_newMeth(C$, 'hasMarkedAtom$',  function () {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (mol.hasMarkedAtom$()) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'hasOneMoleculeWithChiralFlag$',  function () {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if ((mol.getChiralFlag$()).valueOf()) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'deepCopy$',  function () {
var copy=Clazz_new_(C$);
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
copy.add$O(mol.deepCopy$());
}
return copy;
});

Clazz_newMeth(C$, 'isReallyEmpty$',  function () {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (mol.nAtoms$() > 0) {
return false;
}}
return true;
});

Clazz_newMeth(C$, 'scaleXY$D',  function (scale) {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.scaleXY$D(scale);
}
});

Clazz_newMeth(C$, 'moveXY$D$D',  function (dx, dy) {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.moveXY$D$D(dx, dy);
}
});

Clazz_newMeth(C$, 'move$jme_util_Box_Axis$D',  function (xOrY, dist) {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
$I$(10).move$jme_canvas_Graphical2DObject$jme_util_Box_Axis$D(mol, xOrY, dist);
}
});

Clazz_newMeth(C$, 'setAtomBackGroundColors$S',  function (s) {
if (s != null ) for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.setAtomColors$S$I(s, 0);
}
return this;
});

Clazz_newMeth(C$, 'internalBondLengthScaling$',  function () {
var referenceBondLength=0;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
referenceBondLength=mol.internalBondLengthScaling$();
}
return referenceBondLength;
});

Clazz_newMeth(C$, 'scaleInternalBondMolList$',  function () {
var sumlen=0;
var scale=0;
var bondCount=0;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var n=mol.nbonds;
for (var i=1; i <= n; i++) {
sumlen+=mol.bondDistance$I(i);
}
bondCount+=n;
}
if (bondCount > 0) {
sumlen=sumlen / bondCount;
scale=25.0 / sumlen;
} else {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
if (mol.nAtoms$() > 1) {
scale=75.0 / mol.distance$I$I(1, 2);
break;
}}
}if (scale > 0 ) {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.scaleXY$D(scale);
}
}});

Clazz_newMeth(C$, 'totalNumberOfAtoms$',  function () {
var cumulAtomCount=0;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
cumulAtomCount+=mol.nAtoms$();
}
return cumulAtomCount;
});

Clazz_newMeth(C$, 'totalNumberOfBonds$',  function () {
var cumulBOndCount=0;
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
cumulBOndCount+=mol.nBonds$();
}
return cumulBOndCount;
});

Clazz_newMeth(C$, 'resetTouchedAtomAndBond$',  function () {
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.touchedAtom=mol.touchedBond=0;
}
});

Clazz_newMeth(C$, 'asGroup$',  function () {
var newGroup=Clazz_new_($I$(9,1));
for (var mol, $mol = this.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
newGroup.add$jme_canvas_Graphical2DObject(mol);
}
return newGroup;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMEmolList, "EnsembleAtom", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['molIndex','atomIndex','atomEnsembleIndex'],'O',['mol','jme.JMEmol','atom','jme.core.Atom']]]

Clazz_newMeth(C$, 'c$$jme_JMEmolList$I$I',  function (moleculeParts, molIndex, atomIndex) {
;C$.$init$.apply(this);
Clazz_assert(C$, this, function(){return atomIndex >= 0 && molIndex >= 0 });
var cumulAtomCount=0;
var molCount=0;
for (var mol, $mol = moleculeParts.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
++molCount;
molIndex=molCount;
mol=mol;
if (atomIndex > cumulAtomCount + mol.nAtoms$()) {
this.atomEnsembleIndex=atomIndex;
atomIndex=this.atomEnsembleIndex - cumulAtomCount;
break;
}if (molIndex > 0 && molIndex == molCount ) {
this.atomEnsembleIndex=atomIndex + cumulAtomCount;
atomIndex=atomIndex;
break;
}cumulAtomCount+=mol.nAtoms$();
}
if (this.mol != null ) {
this.atom=this.mol.getAtom$I(atomIndex);
if (this.atom == null ) System.out.println$S("DETLETED >>>");
}}, 1);

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMEmolList, "EnsembleBond", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['molIndex','bondIndex','bondEnsembleIndex'],'O',['mol','jme.JMEmol','bond','jme.core.Bond']]]

Clazz_newMeth(C$, 'c$$jme_JMEmolList$I$I',  function (molList, molIndex, bondIndex) {
;C$.$init$.apply(this);
var cumulBondCount=0;
var molCount=0;
for (var mol, $mol = molList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
++molCount;
molIndex=molCount;
mol=mol;
if (bondIndex > cumulBondCount + mol.nBonds$()) {
this.bondEnsembleIndex=bondIndex;
bondIndex=this.bondEnsembleIndex - cumulBondCount;
break;
}if (molIndex > 0 && molIndex == molCount ) {
this.bondEnsembleIndex=bondIndex + cumulBondCount;
bondIndex=bondIndex;
break;
}cumulBondCount+=mol.nBonds$();
}
if (this.mol != null ) {
this.bond=this.mol.getBond$I(bondIndex);
}}, 1);

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.canvas"),I$=[[0,['jme.canvas.ColorManager','.ColorInfo'],'java.awt.Color',['jme.canvas.ColorManager','.ColorSpec']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ColorManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['ColorSpec',9],['ColorInfo',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['psColor','jme.canvas.ColorManager.ColorInfo[]']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'initDefaultBackGroundColorPaletteIfNeeded$',  function () {
if (this.psColor == null ) {
this.psColor=Clazz_array($I$(1), [8]);
this.psColor[0]=Clazz_new_([this, null, $I$(2).gray, null, 0],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[1]=Clazz_new_([this, null, $I$(2).cyan, "1", 1],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[2]=Clazz_new_([this, null, Clazz_new_($I$(2,1).c$$I$I$I,[255, 204, 102]), "2", 2],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[3]=Clazz_new_([this, null, Clazz_new_($I$(2,1).c$$I$I$I,[255, 255, 0]), "3", 3],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[4]=Clazz_new_([this, null, Clazz_new_($I$(2,1).c$$I$I$I,[255, 153, 153]), "4", 4],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[5]=Clazz_new_([this, null, Clazz_new_($I$(2,1).c$$I$I$I,[51, 204, 255]), "5", 5],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[6]=Clazz_new_([this, null, Clazz_new_($I$(2,1).c$$I$I$I,[255, 153, 255]), "6", 6],$I$(1,1).c$$java_awt_Color$S$I);
this.psColor[7]=Clazz_new_([this, null, Clazz_new_($I$(2,1).c$$I$I$I,[102, 255, 102]), "7", 7],$I$(1,1).c$$java_awt_Color$S$I);
}});

Clazz_newMeth(C$, 'numberOfBackgroundColors$',  function () {
this.initDefaultBackGroundColorPaletteIfNeeded$();
return this.psColor.length - 1;
});

Clazz_newMeth(C$, 'getBackGroundColorPaletteAsInteger$',  function () {
this.initDefaultBackGroundColorPaletteIfNeeded$();
var result=Clazz_array(Integer.TYPE, [this.psColor.length - 1, 3]);
for (var i=1; i < this.psColor.length; i++) {
var c=this.getColor$I(i);
result[i - 1][0]=c.getRed$();
result[i - 1][1]=c.getGreen$();
result[i - 1][2]=c.getBlue$();
}
return result;
});

Clazz_newMeth(C$, 'getBackGroundColorPalette$',  function () {
this.initDefaultBackGroundColorPaletteIfNeeded$();
var result=Clazz_array(String, [this.psColor.length - 1]);
for (var i=1; i < this.psColor.length; i++) {
result[i - 1]=C$.makeHexColor$java_awt_Color(this.psColor[i].color);
}
return result;
});

Clazz_newMeth(C$, 'getColorInfo$I',  function (index) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
if (index >= 0 && index < this.psColor.length ) {
return this.psColor[index];
}return null;
});

Clazz_newMeth(C$, 'getColorInfoOfColorHash$S',  function (hash) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
for (var each, $each = 0, $$each = this.psColor; $each<$$each.length&&((each=($$each[$each])),1);$each++) {
if (each.hash == hash) {
return each;
}}
return null;
});

Clazz_newMeth(C$, 'getColor$I',  function (index) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
if (index >= 0 && index < this.psColor.length ) {
return this.psColor[index].color;
}return null;
});

Clazz_newMeth(C$, 'getColorAssociatedLabel$I',  function (index) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
if (index >= 0 && index < this.psColor.length ) {
return this.psColor[index].name;
}return null;
});

Clazz_newMeth(C$, 'getColorAssociatedHash$I',  function (index) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
if (index >= 0 && index < this.psColor.length ) {
return this.psColor[index].hash;
}return null;
});

Clazz_newMeth(C$, 'setBackGroundColorPalette$SA',  function (palette) {
var n=palette.length;
var colorSpecPalette=Clazz_array($I$(3), [n]);
for (var i=0; i < n; i++) {
var color=palette[i];
var label="" + (i + 1);
colorSpecPalette[i]=Clazz_new_($I$(3,1).c$$S$S,[color, label]);
}
this.setMarkerMenuBackGroundColorPalette$jme_canvas_ColorManager_ColorSpecA(colorSpecPalette);
});

Clazz_newMeth(C$, 'setMarkerMenuBackGroundColorPalette$jme_canvas_ColorManager_ColorSpecA',  function (palette) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
var firstColor=this.psColor[0];
this.psColor=Clazz_array($I$(1), [palette.length + 1]);
this.psColor[0]=firstColor;
for (var i=0; i < palette.length; i++) {
this.psColor[i + 1]=Clazz_new_([this, null, C$.parseHexColor$S(palette[i].color), palette[i].label, i + 1],$I$(1,1).c$$java_awt_Color$S$I);
}
});

Clazz_newMeth(C$, 'averageColor$IA',  function (colorCodes) {
this.initDefaultBackGroundColorPaletteIfNeeded$();
var singleColorIndex=-1;
if (colorCodes != null  && colorCodes.length >= 1 ) {
var red=0;
var green=0;
var blue=0;
var count=0;
for (var colorIndex, $colorIndex = 0, $$colorIndex = colorCodes; $colorIndex<$$colorIndex.length&&((colorIndex=($$colorIndex[$colorIndex])),1);$colorIndex++) {
if (colorIndex >= 0 && colorIndex < this.psColor.length ) {
var color=this.psColor[colorIndex].color;
red+=color.getRed$();
green+=color.getGreen$();
blue+=color.getBlue$();
++count;
singleColorIndex=colorIndex;
}}
if (count > 0) {
if (count == 1) {
if (singleColorIndex >= 0) {
return this.psColor[singleColorIndex].color;
}} else {
var color=Clazz_new_([(red/count|0), (green/count|0), (blue/count|0)],$I$(2,1).c$$I$I$I);
return color;
}}}return null;
});

Clazz_newMeth(C$, 'parseHexColor$S',  function (hex) {
var c=$I$(2).white;
try {
if (!hex.startsWith$S("#")) throw Clazz_new_(Clazz_load('Exception').c$$S,["bad hex encoding"]);
var r=Integer.parseInt$S$I(hex.substring$I$I(1, 3), 16);
var g=Integer.parseInt$S$I(hex.substring$I$I(3, 5), 16);
var b=Integer.parseInt$S$I(hex.substring$I$I(5, 7), 16);
c=Clazz_new_($I$(2,1).c$$I$I$I,[r, g, b]);
return c;
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("Problems in parsing background color " + hex);
return c;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'makeHexColor$java_awt_Color',  function (c) {
var hex="#" + C$.byteToHexString$I(c.getRed$()) + C$.byteToHexString$I(c.getGreen$()) + C$.byteToHexString$I(c.getBlue$()) ;
return hex;
}, 1);

Clazz_newMeth(C$, 'byteToHexString$I',  function (c) {
var hex=Integer.toHexString$I(c);
if (hex.length$() == 1) {
hex="0" + hex;
}return hex;
}, 1);

Clazz_newMeth(C$, 'brightness$java_awt_Color',  function (c) {
var result=c.getRed$() * 299.0 + c.getGreen$() * 587.0 + c.getBlue$() * 114;
result/=1000.0;
return result;
}, 1);

Clazz_newMeth(C$, 'contrast$java_awt_Color',  function (c) {
var result=C$.brightness$java_awt_Color(c) > 123  ? $I$(2).BLACK : $I$(2).WHITE;
return result;
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.ColorManager, "ColorSpec", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['color','label']]]

Clazz_newMeth(C$, 'c$$S$S',  function (hexColor, label) {
;C$.$init$.apply(this);
this.color=hexColor;
this.label=label;
}, 1);

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.ColorManager, "ColorInfo", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['index'],'S',['name','hash'],'O',['color','java.awt.Color']]]

Clazz_newMeth(C$, 'c$$java_awt_Color$S$I',  function (color, name, index) {
;C$.$init$.apply(this);
this.color=color;
this.name=name;
this.hash="COLOR_HASH" + "\t" + index ;
this.index=index;
}, 1);

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.canvas"),I$=[[0,['jme.util.Box','.Axis'],['java.awt.geom.Rectangle2D','.Double']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "Graphical2DObject");

Clazz_newMeth(C$, 'move$jme_canvas_Graphical2DObject$jme_util_Box_Axis$D',  function (o, xOrY, d) {
if (xOrY === $I$(1).X ) o.moveXY$D$D(d, 0);
 else o.moveXY$D$D(0, d);
}, 1);

Clazz_newMeth(C$, 'center$jme_canvas_Graphical2DObject$jme_util_Box_Axis',  function (o, xOrY) {
return (xOrY === $I$(1).X  ? o.centerX$() : o.centerY$());
}, 1);

Clazz_newMeth(C$, 'move$jme_canvas_Graphical2DObject$D$D$java_awt_geom_Rectangle2D_Double',  function (o, movex, movey, boundingBoxLimits) {
if (o.isEmpty$()) return;
var bbox=o.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
var centerx=bbox.getCenterX$();
var centery=bbox.getCenterY$();
if ((movex < 0  && centerx < boundingBoxLimits.x  ) || (movex > 0  && centerx > boundingBoxLimits.width  ) || (movey < 0  && centery < boundingBoxLimits.y  ) || (movey > 0  && centery > boundingBoxLimits.height  )  ) return;
o.moveXY$D$D(movex, movey);
}, 1);

Clazz_newMeth(C$, 'move$jme_canvas_Graphical2DObject$java_awt_geom_Point2D_Double',  function (o, shiftXY) {
o.moveXY$D$D(shiftXY.x, shiftXY.y);
}, 1);

Clazz_newMeth(C$, 'newBoundingBox$jme_canvas_Graphical2DObject',  function (o) {
var box=o.computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double(null);
return (box == null  ? Clazz_new_($I$(2,1)) : box);
}, 1);

Clazz_newMeth(C$, 'shortestDistance$D$D$D$D$D$D',  function (x1, y1, x2, y2, x3, y3) {
var px=x2 - x1;
var py=y2 - y1;
var temp=(px * px) + (py * py);
var dist;
var dx;
var dy;
if (temp == 0 ) {
dx=x2 - x3;
dy=y2 - y3;
} else {
var u=((x3 - x1) * px + (y3 - y1) * py) / (temp);
if (u > 1 ) {
u=1;
} else if (u < 0 ) {
u=0;
}var x=x1 + u * px;
var y=y1 + u * py;
dx=x - x3;
dy=y - y3;
}dist=Math.sqrt(dx * dx + dy * dy);
return dist;
}, 1);

Clazz_newMeth(C$, 'closestDistancePointToLine$D$D$java_awt_geom_Line2D_Double',  function (x0, y0, line) {
return C$.shortestDistance$D$D$D$D$D$D(line.x1, line.y1, line.x2, line.y2, x0, y0);
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.canvas"),I$=[[0,'java.awt.BasicStroke',['java.awt.geom.Rectangle2D','.Double'],'jme.JME',['jme.canvas.PreciseGraphicsAWT','.ExtendedGraphics2D']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PreciseGraphicsAWT", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['ExtendedGraphics2D',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.scale=1.0;
this.colorOverride=null;
this.defaultBackGroundColor=null;
this.savedColor=null;
this.screenArea=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['D',['scale'],'O',['baseGraphics','java.awt.Graphics2D','extendedBaseGraphics','jme.canvas.PreciseGraphicsAWT.ExtendedGraphics2D','unscaledFont','java.awt.Font','+enlargeddFont','unscaledStroke','java.awt.BasicStroke','+enlargedStroke','colorOverride','java.awt.Color','+defaultBackGroundColor','+savedColor','screenArea','java.awt.geom.Rectangle2D.Double']]
,['O',['defaultStroke','java.awt.BasicStroke']]]

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.screenArea.width / this.scale;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.screenArea.height / this.scale;
});

Clazz_newMeth(C$, 'setDrawOnScreenCoordinates$I$I',  function (x, y) {
this.screenArea.x=x;
this.screenArea.y=y;
});

Clazz_newMeth(C$, 'setDrawOnScreenCoordinates$java_awt_geom_Rectangle2D_Double',  function (screenArea) {
this.screenArea.x=screenArea.x;
this.screenArea.y=screenArea.y;
this.screenArea.height=screenArea.height;
this.screenArea.width=screenArea.width;
});

Clazz_newMeth(C$, 'setDrawOnScreenCoordinates$I$I$I$I',  function (x, y, width, height) {
this.screenArea.x=x;
this.screenArea.y=y;
this.screenArea.height=height;
this.screenArea.width=width;
});

Clazz_newMeth(C$, 'screenX$',  function () {
return (this.screenArea.x|0);
});

Clazz_newMeth(C$, 'screenY$',  function () {
return (this.screenArea.y|0);
});

Clazz_newMeth(C$, 'screenToCoord$I',  function (pixel) {
return pixel / this.scale;
});

Clazz_newMeth(C$, 'coordToScreen$D',  function (coord) {
return ((coord * this.scale + 0.5)|0);
});

Clazz_newMeth(C$, 'screenToCoordX$I',  function (x) {
return this.screenToCoord$I(x - (this.screenArea.x|0));
});

Clazz_newMeth(C$, 'screenToCoordY$I',  function (y) {
return this.screenToCoord$I(y - (this.screenArea.y|0));
});

Clazz_newMeth(C$, 'currentZoomFactor$',  function () {
return this.scale;
});

Clazz_newMeth(C$, 'c$$java_awt_Graphics',  function (graphics) {
;C$.$init$.apply(this);
this.baseGraphics=graphics;
if ($I$(3).precision > 1.0 ) {
this.setStroke$java_awt_BasicStroke(C$.defaultStroke);
}this.extendedBaseGraphics=Clazz_new_($I$(4,1),[this, null]);
}, 1);

Clazz_newMeth(C$, 'initPrecisionScale$',  function () {
this.initPrecisionScale$D(1.0);
});

Clazz_newMeth(C$, 'initPrecisionScale$D',  function (absoluteScale) {
if (absoluteScale != this.scale ) {
var transformScale=absoluteScale / this.scale;
this.baseGraphics.scale$D$D(transformScale / $I$(3).precision, transformScale / $I$(3).precision);
this.scale=absoluteScale;
}});

Clazz_newMeth(C$, 'getGraphics$',  function () {
return this.baseGraphics;
});

Clazz_newMeth(C$, 'getDefaultBackGroundColor$',  function () {
return this.defaultBackGroundColor;
});

Clazz_newMeth(C$, 'setDefaultBackGroundColor$java_awt_Color',  function (backGroundColor) {
this.defaultBackGroundColor=backGroundColor;
});

Clazz_newMeth(C$, 'setBackGroundColor$',  function () {
this.setColor$java_awt_Color(this.defaultBackGroundColor);
});

Clazz_newMeth(C$, 'overrideColor$java_awt_Color',  function (color) {
this.colorOverride=color;
this.savedColor=this.baseGraphics.getColor$();
this.baseGraphics.setColor$java_awt_Color(color);
});

Clazz_newMeth(C$, 'resetOverrideColor$',  function () {
this.colorOverride=null;
this.baseGraphics.setColor$java_awt_Color(this.savedColor);
});

Clazz_newMeth(C$, 'setColor$java_awt_Color',  function (color) {
if (this.colorOverride == null ) this.baseGraphics.setColor$java_awt_Color(color);
 else {
if (color === this.defaultBackGroundColor  || color.equals$O(this.defaultBackGroundColor) ) {
this.baseGraphics.setColor$java_awt_Color(this.defaultBackGroundColor);
} else {
this.baseGraphics.setColor$java_awt_Color(this.colorOverride);
}}});

Clazz_newMeth(C$, 'fillRect$D$D$D$D',  function (x, y, width, height) {
this.baseGraphics.fillRect$I$I$I$I(this.r$D(x), this.r$D(y), this.r$D(width), this.r$D(height));
});

Clazz_newMeth(C$, 'fillRoundRect$D$D$D$D$D$D',  function (x, y, width, height, arcWidth, arcHeight) {
this.baseGraphics.fillRoundRect$I$I$I$I$I$I(this.r$D(x), this.r$D(y), this.r$D(width), this.r$D(height), this.r$D(arcWidth), this.r$D(arcHeight));
});

Clazz_newMeth(C$, 'fill3DRect$D$D$D$D$Z',  function (x, y, width, height, raised) {
var savedPaint=this.baseGraphics.getPaint$();
var color=this.baseGraphics.getColor$();
var colorUp;
var colorDown;
if (raised) {
colorUp=color.brighter$();
colorDown=color.darker$();
this.baseGraphics.setColor$java_awt_Color(color);
} else {
colorUp=color.darker$();
colorDown=color.brighter$();
this.baseGraphics.setColor$java_awt_Color(colorUp);
}var border=this.r$D(1.0);
var widthInt=this.r$D(width);
var heightInt=this.r$D(height);
var xInt=this.r$D(x);
var yInt=this.r$D(y);
widthInt-=border;
heightInt-=border;
this.baseGraphics.fillRect$I$I$I$I(xInt + border, yInt + border, widthInt - border, heightInt - border);
this.baseGraphics.setColor$java_awt_Color(colorUp);
this.baseGraphics.fillRect$I$I$I$I(xInt, yInt, widthInt, border);
this.baseGraphics.fillRect$I$I$I$I(xInt, yInt + border, border, heightInt);
this.baseGraphics.setColor$java_awt_Color(colorDown);
this.baseGraphics.fillRect$I$I$I$I(xInt + widthInt, yInt, border, heightInt + border);
this.baseGraphics.fillRect$I$I$I$I(xInt + 1, yInt + heightInt, widthInt, border);
this.baseGraphics.setPaint$java_awt_Paint(savedPaint);
});

Clazz_newMeth(C$, 'drawRect$D$D$D$D',  function (x, y, width, height) {
this.baseGraphics.drawRect$I$I$I$I(this.r$D(x), this.r$D(y), this.r$D(width), this.r$D(height));
});

Clazz_newMeth(C$, 'drawLine$D$D$D$D',  function (x1, y1, x2, y2) {
this.baseGraphics.drawLine$I$I$I$I(this.r$D(x1), this.r$D(y1), this.r$D(x2), this.r$D(y2));
});

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (font) {
if (this.unscaledFont === font ) return;
this.unscaledFont=font;
this.enlargeddFont=font.deriveFont$F((font.getSize$() * $I$(3).precision));
this.baseGraphics.setFont$java_awt_Font(this.enlargeddFont);
});

Clazz_newMeth(C$, 'drawString$S$D$D',  function (str, x, y) {
this.baseGraphics.drawString$S$I$I(str, this.r$D(x), this.r$D(y));
});

Clazz_newMeth(C$, 'drawStringWithStroke$S$D$D$java_awt_Color$D',  function (str, x, y, strokeColor, strokeWidth) {
this.extendedBaseGraphics.drawStringWithStroke$S$I$I$java_awt_Color$I(str, this.r$D(x), this.r$D(y), strokeColor, this.r$D(strokeWidth));
});

Clazz_newMeth(C$, 'drawStringWithStrokeAndBaselineShifts$S$D$D$java_awt_Color$D$IAA$IAA',  function (str, x, y, strokeColor, strokeWidth, subscripts, superscript) {
this.extendedBaseGraphics.drawStringWithStrokeAndBaselineShifts$S$I$I$java_awt_Color$I$IAA$IAA(str, this.r$D(x), this.r$D(y), strokeColor, this.r$D(strokeWidth), subscripts, superscript);
});

Clazz_newMeth(C$, 'r$D',  function (v) {
return Long.$ival(Math.round$D(v * $I$(3).precision));
});

Clazz_newMeth(C$, 'ir$I',  function (v) {
return v / $I$(3).precision;
});

Clazz_newMeth(C$, 'fillOval$D$D$D$D',  function (x, y, width, height) {
this.baseGraphics.fillOval$I$I$I$I(this.r$D(x), this.r$D(y), this.r$D(width), this.r$D(height));
});

Clazz_newMeth(C$, 'drawOval$D$D$D$D',  function (x, y, width, height) {
this.baseGraphics.drawOval$I$I$I$I(this.r$D(x), this.r$D(y), this.r$D(width), this.r$D(height));
});

Clazz_newMeth(C$, 'drawArc$D$D$D$D$D$D',  function (x, y, width, height, startAngle, arcAngle) {
this.baseGraphics.drawArc$I$I$I$I$I$I(this.r$D(x), this.r$D(y), this.r$D(width), this.r$D(height), Long.$ival(Math.round$D(startAngle)), Long.$ival(Math.round$D(arcAngle)));
});

Clazz_newMeth(C$, 'translate$D$D',  function (x, y) {
this.baseGraphics.translate$I$I(this.r$D(x), this.r$D(y));
});

Clazz_newMeth(C$, 'drawPolygon$DA$DA$I',  function (xPoints, yPoints, nPoints) {
var xPointsInt=Clazz_array(Integer.TYPE, [nPoints]);
var yPointsInt=Clazz_array(Integer.TYPE, [nPoints]);
for (var i=0; i < nPoints; i++) {
xPointsInt[i]=this.r$D(xPoints[i]);
yPointsInt[i]=this.r$D(yPoints[i]);
}
this.baseGraphics.drawPolygon$IA$IA$I(xPointsInt, yPointsInt, nPoints);
});

Clazz_newMeth(C$, 'fillPolygon$DA$DA$I',  function (xPoints, yPoints, nPoints) {
var xPointsInt=Clazz_array(Integer.TYPE, [nPoints]);
var yPointsInt=Clazz_array(Integer.TYPE, [nPoints]);
for (var i=0; i < nPoints; i++) {
xPointsInt[i]=this.r$D(xPoints[i]);
yPointsInt[i]=this.r$D(yPoints[i]);
}
this.baseGraphics.fillPolygon$IA$IA$I(xPointsInt, yPointsInt, nPoints);
});

Clazz_newMeth(C$, 'setRenderingHint$java_awt_RenderingHints_Key$O',  function (hintKey, hintValue) {
this.baseGraphics.setRenderingHint$java_awt_RenderingHints_Key$O(hintKey, hintValue);
});

Clazz_newMeth(C$, 'setStroke$java_awt_BasicStroke',  function (basicStroke) {
this.unscaledStroke=basicStroke;
this.enlargedStroke=Clazz_new_([($I$(3).precision * basicStroke.getLineWidth$())],$I$(1,1).c$$F);
this.baseGraphics.setStroke$java_awt_Stroke(this.enlargedStroke);
});

C$.$static$=function(){C$.$static$=0;
C$.defaultStroke=Clazz_new_($I$(1,1).c$$F,[1.0]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.PreciseGraphicsAWT, "ExtendedGraphics2D", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'drawStringWithStroke$S$I$I$java_awt_Color$I',  function (str, x, y, strokeColor, strokeWidth) {
this.b$['jme.canvas.PreciseGraphicsAWT'].baseGraphics.drawString$S$I$I(str, x, y);
});

Clazz_newMeth(C$, 'drawStringWithStrokeAndBaselineShifts$S$I$I$java_awt_Color$I$IAA$IAA',  function (str, x, y, strokeColor, strokeWidth, subscripts, superscript) {
this.b$['jme.canvas.PreciseGraphicsAWT'].baseGraphics.drawString$S$I$I(str, x, y);
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.canvas"),I$=[[0,'jme.canvas.PreciseGraphicsAWT']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PreciseImage");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['implImage','java.awt.Image','preciseGraphics','jme.canvas.PreciseGraphicsAWT']]]

Clazz_newMeth(C$, 'getImage$',  function () {
return this.implImage;
});

Clazz_newMeth(C$, 'c$$java_awt_Image',  function (src) {
;C$.$init$.apply(this);
this.implImage=src;
this.preciseGraphics=Clazz_new_([src.getGraphics$()],$I$(1,1).c$$java_awt_Graphics);
}, 1);

Clazz_newMeth(C$, 'getGraphics$',  function () {
return this.getGraphics$D(1.0);
});

Clazz_newMeth(C$, 'getGraphics$D',  function (scale) {
this.preciseGraphics.initPrecisionScale$D(scale);
return this.preciseGraphics;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.canvas"),I$=[[0,['java.awt.geom.Line2D','.Double'],['java.awt.geom.Rectangle2D','.Double'],'java.awt.Color','jme.util.Box','jme.canvas.Graphical2DObject']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ReactionArrow", null, null, 'jme.canvas.Graphical2DObject');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.arrowWidth=48;
this.centerX=0;
this.centerY=0;
this.hasBeenPlaced=false;
this.horizontalLine=Clazz_new_($I$(1,1));
this.topTipLine=Clazz_new_($I$(1,1));
this.bottomTipLine=Clazz_new_($I$(1,1));
this.lines=Clazz_array($I$(1), -1, [this.horizontalLine, this.topTipLine, this.bottomTipLine]);
},1);

C$.$fields$=[['Z',['hasBeenPlaced'],'D',['arrowWidth','centerX','centerY'],'O',['boundingBox','java.awt.geom.Rectangle2D.Double','horizontalLine','java.awt.geom.Line2D.Double','+topTipLine','+bottomTipLine','lines','java.awt.geom.Line2D.Double[]']]]

Clazz_newMeth(C$, 'c$$D',  function (size) {
;C$.$init$.apply(this);
this.boundingBox=Clazz_new_($I$(2,1));
this.arrowWidth=size;
}, 1);

Clazz_newMeth(C$, 'width$',  function () {
return this.arrowWidth;
});

Clazz_newMeth(C$, 'draw$jme_canvas_PreciseGraphicsAWT',  function (og) {
var m=this.arrowHeigth$() / 2;
og.setColor$java_awt_Color($I$(3).magenta);
var xLeft=this.centerX - this.arrowWidth / 2;
var xRight=this.centerX + this.arrowWidth / 2;
this.horizontalLine.setLine$D$D$D$D(xLeft, this.centerY, xRight, this.centerY);
this.topTipLine.setLine$D$D$D$D(xRight, this.centerY, xRight - m, this.centerY + m);
this.bottomTipLine.setLine$D$D$D$D(xRight, this.centerY, xRight - m, this.centerY - m);
for (var eachLine, $eachLine = 0, $$eachLine = this.lines; $eachLine<$$eachLine.length&&((eachLine=($$eachLine[$eachLine])),1);$eachLine++) {
og.drawLine$D$D$D$D(eachLine.x1, eachLine.y1, eachLine.x2, eachLine.y2);
}
});

Clazz_newMeth(C$, 'arrowHeigth$',  function () {
return this.arrowWidth / 4;
});

Clazz_newMeth(C$, 'XY$D$D',  function (x, y) {
this.hasBeenPlaced=true;
this.centerX=x;
this.centerY=y;
});

Clazz_newMeth(C$, 'moveXY$D$D',  function (moveX, moveY) {
this.hasBeenPlaced=true;
this.centerX+=moveX;
this.centerY+=moveY;
});

Clazz_newMeth(C$, 'updateBoundingBox$',  function () {
this.boundingBox.setRect$D$D$D$D(this.centerX - this.arrowWidth / 2, this.centerY$() + this.arrowHeigth$() / 2, this.arrowWidth, this.arrowHeigth$());
return this.boundingBox;
});

Clazz_newMeth(C$, 'computeBoundingBoxWithAtomLabels$java_awt_geom_Rectangle2D_Double',  function (union) {
this.updateBoundingBox$();
if (union != null ) return $I$(4).createUnion$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double$java_awt_geom_Rectangle2D_Double(this.boundingBox, union, union);
union=Clazz_new_($I$(2,1));
union.setFrame$java_awt_geom_Rectangle2D(this.boundingBox);
return union;
});

Clazz_newMeth(C$, 'centerX$',  function () {
return this.centerX;
});

Clazz_newMeth(C$, 'centerY$',  function () {
return this.centerY;
});

Clazz_newMeth(C$, 'closestDistance$D$D',  function (x, y) {
var min=1.7976931348623157E308;
for (var eachLine, $eachLine = 0, $$eachLine = this.lines; $eachLine<$$eachLine.length&&((eachLine=($$eachLine[$eachLine])),1);$eachLine++) {
var d=$I$(5).closestDistancePointToLine$D$D$java_awt_geom_Line2D_Double(x, y, eachLine);
min=Math.min(d, min);
}
return min;
});

Clazz_newMeth(C$, 'isEmpty$',  function () {
return false;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.core"),I$=[[0,'java.util.regex.Pattern','jme.core.AtomBondCommon','jme.util.Isotopes']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Atom", null, null, 'jme.core.AtomBondCommon');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.map=-99199;
this.mark=-99199;
this.q=0;
this.v=Clazz_array(Integer.TYPE, [7]);
this.an=3;
this.nh=0;
},1);

C$.$fields$=[['Z',['deleteFlag'],'D',['x','y','z'],'I',['map','mark','iso','q','partIndex','nv','an','nh','sbo'],'S',['label','atag'],'O',['backgroundColors','int[]','+v']]
,['O',['zlabel','String[]','atomicSymbolPattern','java.util.regex.Pattern','+atomicSymbolPatternIsotopAndCharge']]]

Clazz_newMeth(C$, 'chargedMetalType$I',  function (an) {
if (an >= 14 && an <= 20 ) return 1;
if (an >= 21 && an <= 28 ) return 2;
if (an >= 29 && an <= 31 ) return 3;
return 0;
}, 1);

Clazz_newMeth(C$, 'atomicData$',  function () {
C$.zlabel[32]="X";
C$.zlabel[1]="H";
C$.zlabel[2]="B";
C$.zlabel[3]="C";
C$.zlabel[4]="N";
C$.zlabel[5]="O";
C$.zlabel[9]="F";
C$.zlabel[10]="Cl";
C$.zlabel[11]="Br";
C$.zlabel[12]="I";
C$.zlabel[8]="S";
C$.zlabel[7]="P";
C$.zlabel[6]="Si";
C$.zlabel[13]="Se";
C$.zlabel[32]="X";
C$.zlabel[14]="K";
C$.zlabel[16]="Li";
C$.zlabel[15]="Na";
C$.zlabel[17]="Rb";
C$.zlabel[18]="Cs";
C$.zlabel[19]="Fr";
C$.zlabel[20]="Ag";
C$.zlabel[21]="Mg";
C$.zlabel[22]="Ca";
C$.zlabel[24]="Sr";
C$.zlabel[23]="Ba";
C$.zlabel[25]="Zn";
C$.zlabel[26]="Ni";
C$.zlabel[27]="Cu";
C$.zlabel[28]="Cd";
C$.zlabel[29]="Al";
C$.zlabel[30]="Ga";
C$.zlabel[31]="Au";
for (var i=33; i <= 42; i++) {
C$.zlabel[i]="R" + (i > 33 ? Integer.valueOf$I((i - 33)) : "");
}
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.resetBackgroundColors$();
}, 1);

Clazz_newMeth(C$, 'deepCopy$',  function () {
return this.copyTo$jme_core_Atom(Clazz_new_(C$));
});

Clazz_newMeth(C$, 'copyTo$jme_core_Atom',  function (a) {
a.backgroundColors=$I$(2).copyArray$IA(this.backgroundColors);
a.mark=this.mark;
a.map=this.map;
a.iso=this.iso;
a.x=this.x;
a.y=this.y;
a.z=this.z;
a.q=this.q;
a.label=this.label;
a.v=$I$(2).copyArray$IA(this.v);
a.nv=this.nv;
a.an=this.an;
a.atag=this.atag;
a.nh=this.nh;
a.sbo=this.sbo;
a.partIndex=this.partIndex;
a.deleteFlag=this.deleteFlag;
return a;
});

Clazz_newMeth(C$, 'addNeighbor$I',  function (neighbor) {
if (this.nv < 6) {
++this.nv;
this.v[this.nv]=neighbor;
}});

Clazz_newMeth(C$, 'hasBeenMapped$',  function () {
return this.map != -99199;
});

Clazz_newMeth(C$, 'resetObjectMark$',  function () {
return this.resetMap$();
});

Clazz_newMeth(C$, 'resetMap$',  function () {
var hasChanged=this.hasBeenMapped$();
this.map=-99199;
return hasChanged;
});

Clazz_newMeth(C$, 'getMap$',  function () {
return this.hasBeenMapped$() ? this.map : 0;
});

Clazz_newMeth(C$, 'getMapOrMark$Z',  function (isMap) {
return isMap ? this.getMap$() : this.getMark$();
});

Clazz_newMeth(C$, 'setMapOrMark$I$Z',  function (m, isMap) {
if (isMap) this.setMap$I(m);
 else this.setMark$I(m);
});

Clazz_newMeth(C$, 'setMap$I',  function (map) {
this.map=map;
});

Clazz_newMeth(C$, 'isMapped$',  function () {
return this.getMap$() != 0;
});

Clazz_newMeth(C$, 'isMappedOrMarked$',  function () {
return this.isMapped$() || this.getMark$() != 0 ;
});

Clazz_newMeth(C$, 'isCumuleneSP$',  function () {
return this.sbo >= 4 && this.nv == 2 ;
});

Clazz_newMeth(C$, 'moveXY$D$D',  function (dx, dy) {
this.x+=dx;
this.y+=dy;
});

Clazz_newMeth(C$, 'scaleXY$D',  function (scale) {
this.x*=scale;
this.y*=scale;
});

Clazz_newMeth(C$, 'XY$D$D',  function (x, y) {
this.x=x;
this.y=y;
});

Clazz_newMeth(C$, 'iso$',  function () {
return this.iso;
});

Clazz_newMeth(C$, 'q$',  function () {
return this.q;
});

Clazz_newMeth(C$, 'Q$I',  function (charge) {
this.q=charge;
});

Clazz_newMeth(C$, 'incrQ$I',  function (incr) {
this.q+=incr;
});

Clazz_newMeth(C$, 'squareDistance$jme_core_Atom',  function (other) {
return Math.pow(this.x - other.x, 2) + Math.pow(this.y - other.y, 2);
});

Clazz_newMeth(C$, 'hasCloseContactWith$jme_core_Atom$D',  function (other, minDistance) {
var dist=this.squareDistance$jme_core_Atom(other);
return dist < Math.pow(minDistance, 2) ;
});

Clazz_newMeth(C$, 'parseAtomSymbolIsotop$S',  function (symbol) {
this.iso=0;
var m=C$.atomicSymbolPattern.matcher$CharSequence(symbol);
if (m.find$()) {
var isomass=Integer.parseInt$S(m.group$I(1));
var element=m.group$I(2);
if ($I$(3).isKnown$S$I(element, isomass)) {
this.iso=isomass;
symbol=element + m.group$I(3);
}}return symbol;
});

Clazz_newMeth(C$, 'parseAtomicSymbolPatternIsotopMappAndCharge$S$jme_core_JMECore_Parameters',  function (symbol, parameters) {
var m=C$.atomicSymbolPatternIsotopAndCharge.matcher$CharSequence(symbol);
if (m.find$()) {
var iso=m.group$I(1);
var element=m.group$I(2);
var hCount=m.group$I(3);
var hCountNumber=m.group$I(4);
var chargeNumber=m.group$I(6);
var chargeSign=m.group$I(5);
var multiCharge=m.group$I(7);
var query=m.group$I(8);
var atomMap=m.group$I(10);
var charge=0;
var isValid=true;
if ($I$(3).getNaturalMass$S(element) != -1) {
if (iso != null  && iso.length$() > 0 ) {
var isomass=Integer.parseInt$S(iso);
if ($I$(3).isKnown$S$I(element, isomass)) {
this.iso=isomass;
} else {
isValid=false;
}}} else {
isValid=false;
}if (isValid) {
var hasChargeSign=chargeSign != null  && chargeSign.length$() > 0 ;
var hasChargeNumber=chargeNumber != null  && chargeNumber.length$() > 0 ;
var hasMultiCharge=multiCharge != null  && multiCharge.length$() > 0 ;
if (hasChargeSign || hasChargeNumber ) {
charge=1;
if (hasChargeNumber) {
charge=Integer.parseInt$S(chargeNumber);
}charge*=chargeSign.equals$O("-") ? -1 : 1;
} else if (hasMultiCharge) {
charge=multiCharge.length$();
charge*=multiCharge.equals$O("-") ? -1 : 1;
}}if (isValid) {
symbol=element + (query != null  ? query : "");
this.q=charge;
}if (atomMap != null  && atomMap.length$() > 0 ) {
try {
var map=Integer.parseInt$S(atomMap);
if (map > 0) {
if (parameters.mark) {
this.setMark$I(map);
}if (parameters.number) {
this.setMap$I(map);
}}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
}if (hCount != null ) {
this.nh=1;
if (hCountNumber != null  && hCountNumber.length$() > 0 ) this.nh=Integer.parseInt$S(hCountNumber);
}}return symbol;
});

Clazz_newMeth(C$, 'getLabel$',  function () {
return (this.an == 32 ? this.label : C$.zlabel[this.an]);
});

Clazz_newMeth(C$, 'addBackgroundColor$I',  function (c) {
for (var i=0; i < this.backgroundColors.length; i++) {
if (this.backgroundColors[i] == c) {
return;
};}
this.backgroundColors=$I$(2).growArray$IA$I(this.backgroundColors, this.backgroundColors.length + 1);
this.backgroundColors[this.backgroundColors.length - 1]=c;
});

Clazz_newMeth(C$, 'resetBackgroundColors$',  function () {
this.backgroundColors=Clazz_array(Integer.TYPE, -1, [-99199]);
});

Clazz_newMeth(C$, 'resetMark$',  function () {
if (this.mark == -99199) return false;
this.mark=-99199;
return true;
});

Clazz_newMeth(C$, 'getMark$',  function () {
return Math.max(this.mark, 0);
});

Clazz_newMeth(C$, 'setMark$I',  function (markOrMap) {
this.mark=markOrMap;
});

Clazz_newMeth(C$, 'isMarked$',  function () {
return this.mark > 0;
});

Clazz_newMeth(C$, 'toString',  function () {
return "[Atom " + this.getLabel$() + " " + new Double(this.x).toString() + " " + new Double(this.y).toString() + "]" ;
});

Clazz_newMeth(C$, 'getBackgroundColors$',  function () {
return this.backgroundColors;
});

Clazz_newMeth(C$, 'checkAtomicSymbol$S',  function (s) {
for (var an=1; an < C$.zlabel.length; an++) {
if (s.equals$O(C$.zlabel[an])) return an;
}
return 32;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.zlabel=Clazz_array(String, [43]);
{
C$.atomicData$();
};
C$.atomicSymbolPattern=$I$(1,"compile$S",["^(\\d+)([A-Z][a-z]?)(\\b.*)"]);
C$.atomicSymbolPatternIsotopAndCharge=$I$(1,"compile$S",["^(\\d+)?\\s*([A-Z][a-z]?)\\s*(H(\\d*))?(?:(?:([+-])(\\d*))|((?:\\++)|(?:-+)))?([^:+-]+?([,;#!])?[^:+-]+?)?(?::(\\d+))?$"]);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.core"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "AtomBondCommon");

Clazz_newMeth(C$, 'resetChemicalObjectColors$jme_core_AtomBondCommonA',  function (chemicalObjects) {
for (var chemicalObject, $chemicalObject = 0, $$chemicalObject = chemicalObjects; $chemicalObject<$$chemicalObject.length&&((chemicalObject=($$chemicalObject[$chemicalObject])),1);$chemicalObject++) {
if (chemicalObject != null ) {
chemicalObject.resetBackgroundColors$();
}}
}, 1);

Clazz_newMeth(C$, 'growArray$IA$I',  function (array, newSize) {
var newArray=Clazz_array(Integer.TYPE, [newSize]);
System.arraycopy$O$I$O$I$I(array, 0, newArray, 0, array.length);
return newArray;
}, 1);

Clazz_newMeth(C$, 'copyArray$IA',  function (array) {
var copy=Clazz_array(Integer.TYPE, [array.length]);
System.arraycopy$O$I$O$I$I(array, 0, copy, 0, array.length);
return copy;
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.core"),I$=[[0,'jme.core.AtomBondCommon']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Bond", null, null, 'jme.core.AtomBondCommon');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.bondType=1;
this.guideX=NaN;
this.mark=-99199;
},1);

C$.$fields$=[['Z',['smallRing'],'D',['centerX','centerY','guideX','guideY'],'I',['va','vb','bondType','stereo','partIndex','mark'],'S',['btag'],'O',['backgroundColors','int[]']]]

Clazz_newMeth(C$, 'setBondType$I',  function (type) {
this.bondType=type;
});

Clazz_newMeth(C$, 'getBondType$',  function () {
return this.bondType;
});

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.resetBackgroundColors$();
}, 1);

Clazz_newMeth(C$, 'deepCopy$',  function () {
return this.copyTo$jme_core_Bond(Clazz_new_(C$));
});

Clazz_newMeth(C$, 'copyTo$jme_core_Bond',  function (b) {
b.backgroundColors=$I$(1).copyArray$IA(this.backgroundColors);
b.mark=this.mark;
b.va=this.va;
b.vb=this.vb;
b.bondType=this.bondType;
b.smallRing=this.smallRing;
b.stereo=this.stereo;
b.btag=this.btag;
b.centerX=this.centerX;
b.centerY=this.centerY;
b.guideX=this.guideX;
b.guideY=this.guideY;
b.partIndex=this.partIndex;
return b;
});

Clazz_newMeth(C$, 'convertBondType$I',  function (bondType) {
var result=null;
switch (bondType) {
case 1:
result="single";
break;
case 2:
result="double";
break;
case 3:
result="triple";
break;
case 5:
result="aromatic";
break;
case 0:
result="coordination";
break;
case 9:
result="query";
break;
}
return result;
}, 1);

Clazz_newMeth(C$, 'convertBondStereo$I',  function (stereo) {
var result=null;
switch (stereo) {
case 2:
case 4:
result="down";
break;
case 1:
case 3:
result="up";
break;
case 5:
case 6:
result="either";
break;
case 10:
result="either";
break;
}
return result;
}, 1);

Clazz_newMeth(C$, 'is$jme_core_Bond',  function (b) {
return (this.va == b.va && this.vb == b.vb  || this.va == b.vb && this.vb == b.va  );
});

Clazz_newMeth(C$, 'isAB$I$I',  function (atom1, atom2) {
return (this.va == atom1 && this.vb == atom2  || this.va == atom2 && this.vb == atom1  );
});

Clazz_newMeth(C$, 'isSingle$',  function () {
return this.bondType == 1;
});

Clazz_newMeth(C$, 'isDouble$',  function () {
return this.bondType == 2;
});

Clazz_newMeth(C$, 'isTriple$',  function () {
return this.bondType == 3;
});

Clazz_newMeth(C$, 'toggleNormalCrossedDoubleBond$',  function () {
if (this.isDouble$()) {
this.stereo=(this.smallRing ? 0 : 10 - this.stereo);
}});

Clazz_newMeth(C$, 'isCoordination$',  function () {
return this.bondType == 0;
});

Clazz_newMeth(C$, 'setCoordination$Boolean',  function (yesOrNo) {
this.bondType=yesOrNo.booleanValue$() ? 0 : 1;
return this;
});

Clazz_newMeth(C$, 'isQuery$',  function () {
return this.bondType == 9;
});

Clazz_newMeth(C$, 'toggleCoordination$',  function () {
return this.setCoordination$Boolean(Boolean.valueOf$Z(!this.isCoordination$()));
});

Clazz_newMeth(C$, 'resetObjectMark$',  function () {
var hasChanged=this.backgroundColors[0] != -99199;
this.resetBackgroundColors$();
;return hasChanged;
});

Clazz_newMeth(C$, 'addBackgroundColor$I',  function (c) {
for (var i=0; i < this.backgroundColors.length; i++) {
if (this.backgroundColors[i] == c) {
return;
}}
this.backgroundColors=$I$(1).growArray$IA$I(this.backgroundColors, this.backgroundColors.length + 1);
this.backgroundColors[this.backgroundColors.length - 1]=c;
});

Clazz_newMeth(C$, 'resetBackgroundColors$',  function () {
this.backgroundColors=Clazz_array(Integer.TYPE, -1, [-99199]);
});

Clazz_newMeth(C$, 'getBackgroundColors$',  function () {
return this.backgroundColors;
});

Clazz_newMeth(C$, 'resetMark$',  function () {
if (this.mark == -99199) return false;
this.mark=-99199;
return true;
});

Clazz_newMeth(C$, 'getMark$',  function () {
return Math.max(this.mark, 0);
});

Clazz_newMeth(C$, 'setMark$I',  function (mark) {
this.mark=mark;
});

Clazz_newMeth(C$, 'isMarked$',  function () {
return this.mark > 0;
});

Clazz_newMeth(C$, 'checkSmallRing$',  function () {
if (this.smallRing) {
if (this.bondType == 3) this.bondType=1;
 else if (this.bondType == 2 && this.stereo == 10 ) this.stereo=0;
}});

Clazz_newMeth(C$, 'toString',  function () {
return "[Bond " + this.va + " " + this.vb + " " + this.bondType + "]" ;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.core"),I$=[[0,['jme.core.JMECore','.Parameters','.SmilesParams'],['jme.core.JMECore','.Parameters','.HydrogenParams'],['jme.core.JMECore','.Parameters'],'jme.core.Atom','jme.core.Bond',['java.awt.geom.Rectangle2D','.Double']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMECore", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['Parameters',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.atoms=Clazz_array($I$(4), [10]);
this.bonds=Clazz_array($I$(5), [10]);
this.chiralFlag=Boolean.FALSE;
this.temp=Clazz_array(Double.TYPE, [2]);
},1);

C$.$fields$=[['I',['natoms','nbonds'],'O',['jmesl','jme.event.JMEStatusListener','atoms','jme.core.Atom[]','bonds','jme.core.Bond[]','chiralFlag','Boolean','parameters','jme.core.JMECore.Parameters','temp','double[]']]
,['O',['DefaultParameters','jme.core.JMECore.Parameters']]]

Clazz_newMeth(C$, 'c$$jme_core_JMECore$I',  function (mol, part) {
;C$.$init$.apply(this);
this.setPart$jme_core_JMECore$I(mol, part);
}, 1);

Clazz_newMeth(C$, 'c$$jme_event_JMEStatusListener$jme_core_JMECore_Parameters',  function (jmesl, pars) {
;C$.$init$.apply(this);
this.jmesl=jmesl;
this.parameters=(pars == null  ? Clazz_new_($I$(3,1)) : pars);
this.atoms[0]=Clazz_new_($I$(4,1));
this.natoms=0;
this.nbonds=0;
}, 1);

Clazz_newMeth(C$, 'c$$jme_core_JMECore',  function (m) {
;C$.$init$.apply(this);
this.parameters=m.parameters;
this.natoms=m.natoms;
this.nbonds=m.nbonds;
this.chiralFlag=m.chiralFlag;
this.atoms=Clazz_array($I$(4), [this.natoms + 1]);
for (var i=this.atoms.length; --i >= 0; ) {
if (m.atoms[i] != null ) {
this.atoms[i]=m.atoms[i].deepCopy$();
}}
this.bonds=Clazz_array($I$(5), [this.nbonds + 1]);
for (var i=this.bonds.length; --i >= 0; ) {
if (m.bonds[i] != null ) {
this.bonds[i]=m.bonds[i].deepCopy$();
}}
}, 1);

Clazz_newMeth(C$, 'c$$jme_event_JMEStatusListener$jme_core_JMECore$I',  function (jme, m, part) {
C$.c$$jme_event_JMEStatusListener$jme_core_JMECore_Parameters.apply(this, [jme, m.parameters]);
m.computeMultiPartIndices$();
var newn=Clazz_array(Integer.TYPE, [m.natoms + 1]);
for (var i=1, n=m.natoms; i <= n; i++) {
if (this.atoms[i].partIndex == part) newn[i]=this.natoms;
}
for (var i=1; i <= m.nbonds; i++) {
var atom1=m.bonds[i].va;
var atom2=m.bonds[i].vb;
var p1=this.atoms[atom1].partIndex;
var p2=this.atoms[atom2].partIndex;
if (p1 != part && p2 != part ) continue;
if (p1 != p2) {
System.err.println$S("MOL multipart inconsistency - report bug !");
continue;
}var newAddedBond=this.createAndAddBondFromOther$jme_core_Bond(m.bonds[i]);
newAddedBond.va=newn[atom1];
newAddedBond.vb=newn[atom2];
}
this.setNeighborsFromBonds$();
}, 1);

Clazz_newMeth(C$, 'c$$jme_event_JMEStatusListener$jme_core_JMECoreA',  function (jme, mols) {
C$.c$$jme_event_JMEStatusListener$jme_core_JMECore_Parameters.apply(this, [jme, null]);
if (mols.length > 0 && mols[0] != null  ) this.parameters=mols[0].parameters;
var nmols=mols.length;
for (var i=0; i < nmols; i++) {
this.natoms+=mols[i].natoms;
this.nbonds+=mols[i].nbonds;
if ((mols[i].getChiralFlag$()).valueOf()) this.setChiralFlag$Boolean(Boolean.valueOf$Z(true));
}
this.atoms=Clazz_array($I$(4), [this.natoms + 1]);
this.bonds=Clazz_array($I$(5), [this.nbonds + 1]);
var na=0;
var nb=0;
var nadd=0;
for (var i=0; i < nmols; i++) {
for (var j=1, ni=mols[i].natoms; j <= ni; j++) {
++na;
this.atoms[na]=mols[i].atoms[j].deepCopy$();
}
for (var j=1, ni=mols[i].nbonds; j <= ni; j++) {
++nb;
this.bonds[nb]=mols[i].bonds[j].deepCopy$();
this.bonds[nb].va+=nadd;
this.bonds[nb].vb+=nadd;
}
nadd=na;
}
this.setNeighborsFromBonds$();
}, 1);

Clazz_newMeth(C$, 'isEmpty$',  function () {
return (this.natoms == 0);
});

Clazz_newMeth(C$, 'reset$',  function () {
this.natoms=0;
this.nbonds=0;
});

Clazz_newMeth(C$, 'getAtomCount$',  function () {
return this.natoms;
});

Clazz_newMeth(C$, 'nAtoms$',  function () {
return this.natoms;
});

Clazz_newMeth(C$, 'getBondCount$',  function () {
return this.nbonds;
});

Clazz_newMeth(C$, 'nBonds$',  function () {
return this.nbonds;
});

Clazz_newMeth(C$, 'getBond$I',  function (bondIndex) {
return this.bonds[bondIndex];
});

Clazz_newMeth(C$, 'getAtomLabel$I',  function (i) {
return this.atoms[i].getLabel$();
});

Clazz_newMeth(C$, 'hasHydrogen$',  function () {
for (var i=this.natoms; i >= 1; i--) {
if (this.an$I(i) == 1) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'an$I',  function (i) {
return this.atoms[i].an;
});

Clazz_newMeth(C$, 'AN$I$I',  function (i, an) {
this.atoms[i].an=an;
});

Clazz_newMeth(C$, 'getAtom$I',  function (i) {
return this.atoms[i];
});

Clazz_newMeth(C$, 'x$I',  function (i) {
return this.atoms[i].x;
});

Clazz_newMeth(C$, 'y$I',  function (i) {
return this.atoms[i].y;
});

Clazz_newMeth(C$, 'z$I',  function (i) {
return this.atoms[i].z;
});

Clazz_newMeth(C$, 'XY$I$D$D',  function (i, x, y) {
this.atoms[i].x=x;
this.atoms[i].y=y;
});

Clazz_newMeth(C$, 'XY$jme_core_Atom$D$D',  function (atom, x, y) {
atom.x=x;
atom.y=y;
}, 1);

Clazz_newMeth(C$, 'moveXY$I$D$D',  function (i, x, y) {
this.atoms[i].moveXY$D$D(x, y);
});

Clazz_newMeth(C$, 'q$I',  function (i) {
return this.atoms[i].q;
});

Clazz_newMeth(C$, 'Q$I$I',  function (i, charge) {
this.atoms[i].q=charge;
});

Clazz_newMeth(C$, 'incrQ$I$I',  function (i, incr) {
this.atoms[i].q+=incr;
});

Clazz_newMeth(C$, 'getIso$I',  function (i) {
return this.atoms[i].iso;
});

Clazz_newMeth(C$, 'getSumOfBondOrder$I',  function (i) {
return this.atoms[i].sbo;
});

Clazz_newMeth(C$, 'atag$I',  function (i) {
return this.atoms[i].atag;
});

Clazz_newMeth(C$, 'v$I',  function (i) {
return this.atoms[i].v;
});

Clazz_newMeth(C$, 'nv$I',  function (i) {
return this.atoms[i].nv;
});

Clazz_newMeth(C$, 'NV$I$I',  function (i, nv) {
this.atoms[i].nv=nv;
});

Clazz_newMeth(C$, 'incrNV$I$I',  function (i, change) {
return this.atoms[i].nv+=change;
});

Clazz_newMeth(C$, 'getChiralFlag$',  function () {
return this.chiralFlag;
});

Clazz_newMeth(C$, 'canBeChiral$',  function () {
for (var i=1; i <= this.nbonds; i++) {
if (this.bonds[i].bondType == 1 && this.bonds[i].stereo > 0 ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'setChiralFlag$Boolean',  function (chiralFlag) {
if (this.chiralFlag !== chiralFlag ) {
this.chiralFlag=chiralFlag;
return true;
}return false;
});

Clazz_newMeth(C$, 'setPart$jme_core_JMECore$I',  function (m, part) {
this.chiralFlag=m.chiralFlag;
var newAtomIndexMap=Clazz_array(Integer.TYPE, [m.natoms + 1]);
for (var i=1; i <= m.natoms; i++) {
if (m.atoms[i].partIndex != part) continue;
this.createAtomFromOther$jme_core_Atom(m.atoms[i]);
newAtomIndexMap[i]=this.natoms;
}
for (var i=1; i <= m.nbonds; i++) {
var bond=m.bonds[i];
if (bond.partIndex == part) {
var newAddedBond=this.createAndAddBondFromOther$jme_core_Bond(bond);
newAddedBond.va=newAtomIndexMap[bond.va];
newAddedBond.vb=newAtomIndexMap[bond.vb];
}}
this.setNeighborsFromBonds$();
});

Clazz_newMeth(C$, 'createAtomFromOther$jme_core_Atom',  function (atomToDuplicate) {
++this.natoms;
if (this.natoms > this.atoms.length - 1) {
var storage=this.atoms.length + 20;
var newAtoms=Clazz_array($I$(4), [storage]);
System.arraycopy$O$I$O$I$I(this.atoms, 0, newAtoms, 0, this.atoms.length);
this.atoms=newAtoms;
}return this.atoms[this.natoms]=(atomToDuplicate == null  ? Clazz_new_($I$(4,1)) : atomToDuplicate.deepCopy$());
});

Clazz_newMeth(C$, 'cleanPolarBonds$Z',  function (polarnitro) {
for (var i=1; i <= this.nbonds; i++) {
var bond=this.bonds[i];
var atom1=bond.va;
var atom2=bond.vb;
bond.checkSmallRing$();
var bondType=bond.bondType;
if ((this.q$I(atom1) == 1 && this.q$I(atom2) == -1 ) || (this.q$I(atom1) == -1 && this.q$I(atom2) == 1 ) ) {
if (bondType == 1 || bondType == 2 ) {
if (this.an$I(atom1) != 3 && this.an$I(atom2) != 3  && polarnitro ) continue;
if (this.an$I(atom1) == 1 || this.an$I(atom2) == 1 ) continue;
if (this.an$I(atom1) == 2 || this.an$I(atom2) == 2 ) continue;
if (this.an$I(atom1) == 9 || this.an$I(atom1) == 10  || this.an$I(atom1) == 11  || this.an$I(atom1) == 12  || this.an$I(atom2) == 9  || this.an$I(atom2) == 10  || this.an$I(atom2) == 11  || this.an$I(atom2) == 12 ) continue;
this.Q$I$I(atom1, 0);
this.Q$I$I(atom2, 0);
++bondType;
bond.bondType=bondType;
this.setValenceState$();
}}if (this.q$I(atom1) == 1 && this.q$I(atom2) == 1 ) {
if (bondType == 2) bondType=1;
 else if (bondType == 3) bondType=2;
bond.bondType=bondType;
this.setValenceState$();
}if (bondType == 4) bondType=1;
bond.bondType=bondType;
}
});

Clazz_newMeth(C$, 'setNeighborsFromBonds$',  function () {
for (var i=1; i <= this.natoms; i++) this.atoms[i].nv=0;

for (var i=1; i <= this.nbonds; i++) {
var atom1=this.bonds[i].va;
var atom2=this.bonds[i].vb;
this.addBothNeighbors$I$I(atom1, atom2);
}
});

Clazz_newMeth(C$, 'addBothNeighbors$I$I',  function (at1, at2) {
this.atoms[at1].addNeighbor$I(at2);
this.atoms[at2].addNeighbor$I(at1);
});

Clazz_newMeth(C$, 'setValenceState$',  function () {
for (var i=1; i <= this.natoms; i++) {
this.setAtomValenceState$I(i);
}
});

Clazz_newMeth(C$, 'setAtomValenceState$I',  function (i) {
var atom=this.atoms[i];
var sbo=atom.sbo=this.sumBondOrders$I(i);
if (sbo == -1) {
atom.nh=0;
return;
}switch (atom.an) {
case 1:
if (sbo == 2) this.Q$I$I(i, 1);
 else if (sbo >= 1) {
this.Q$I$I(i, 0);
} else {
}atom.nh=0;
break;
case 2:
if (sbo == 3 || sbo == 5 ) {
atom.nh=0;
this.Q$I$I(i, 0);
} else if (sbo < 3) {
atom.nh=3 - sbo - this.q$I(i) ;
} else if (sbo == 4) {
this.Q$I$I(i, -1);
atom.nh=0;
} else if (sbo > 5) {
this.Q$I$I(i, sbo - 5);
atom.nh=0;
}break;
case 3:
case 6:
if (sbo < 4) {
if (this.q$I(i) > 0) atom.nh=2 - sbo + this.q$I(i);
 else if (this.q$I(i) < 0) atom.nh=2 - sbo - this.q$I(i) ;
 else atom.nh=4 - sbo;
} else {
this.Q$I$I(i, sbo - 4);
atom.nh=4 - sbo + this.q$I(i);
}break;
case 4:
case 7:
if (sbo < 3) atom.nh=3 - sbo + this.q$I(i);
 else if (sbo == 3) {
if (this.q$I(i) < 0) {
this.Q$I$I(i, 0);
atom.nh=0;
} else if (this.q$I(i) > 0) atom.nh=this.q$I(i);
 else atom.nh=3 - sbo;
} else if (sbo == 4) {
this.Q$I$I(i, 1);
atom.nh=0;
} else if (sbo == 6) {
this.Q$I$I(i, -1);
atom.nh=0;
} else {
this.Q$I$I(i, sbo - 5);
;atom.nh=0;
}break;
case 5:
if (sbo == 2) {
if (this.q$I(i) < 0) {
this.Q$I$I(i, 0);
atom.nh=0;
} else if (this.q$I(i) > 0) atom.nh=this.q$I(i);
 else atom.nh=2 - sbo;
}if (sbo > 2) this.Q$I$I(i, sbo - 2);
atom.nh=2 - sbo + this.q$I(i);
break;
case 8:
case 13:
if (sbo < 2) atom.nh=2 - sbo + this.q$I(i);
 else if (sbo == 2) {
if (this.q$I(i) < 0) {
this.Q$I$I(i, 0);
atom.nh=0;
} else if (this.q$I(i) > 0) atom.nh=this.q$I(i);
 else atom.nh=2 - sbo;
} else if (sbo == 3) {
if (this.atoms[i].nv == 2) {
this.Q$I$I(i, 0);
atom.nh=1;
} else {
this.Q$I$I(i, 1);
atom.nh=0;
}} else if (sbo == 4) {
this.Q$I$I(i, 0);
atom.nh=0;
} else if (sbo == 5) {
this.Q$I$I(i, 0);
atom.nh=1;
} else {
this.Q$I$I(i, sbo - 6);
atom.nh=0;
}break;
case 9:
case 10:
case 11:
case 12:
if (sbo >= 1) this.Q$I$I(i, sbo - 1);
atom.nh=1 - sbo + this.q$I(i);
if (sbo > 2) {
this.Q$I$I(i, 0);
atom.nh=0;
}break;
case 33:
case 32:
atom.nh=0;
break;
}
var maxMetalCharge=$I$(4).chargedMetalType$I(atom.an);
if (maxMetalCharge > 0) {
while (atom.q + atom.nh + sbo  > maxMetalCharge){
if (atom.nh > 0) {
--atom.nh;
continue;
}if (atom.q > 0) {
--atom.q;
} else break;
}
}if (atom.nh < 0) atom.nh=0;
});

Clazz_newMeth(C$, 'sumBondOrders$I',  function (atom) {
var sbo=0;
for (var i=1; i <= this.nv$I(atom); i++) {
var bond=this.getBond$I$I(atom, this.v$I(atom)[i]);
if (bond == null ) {
System.out.println$S("??JMECore.sumBondOrders null after touching atom for aromatic");
}if (bond.isSingle$()) sbo+=1;
 else if (bond.isDouble$()) sbo+=2;
 else if (bond.bondType == 3) sbo+=3;
 else if (bond.bondType == 9) return -1;
}
return sbo;
});

Clazz_newMeth(C$, 'getBond$I$I',  function (atom1, atom2) {
return this.bonds[this.getBondIndex$I$I(atom1, atom2)];
});

Clazz_newMeth(C$, 'getBondIndex$I$I',  function (atom1, atom2) {
for (var i=1; i <= this.nbonds; i++) {
if (this.bonds[i].isAB$I$I(atom1, atom2)) {
return i;
}}
return 0;
});

Clazz_newMeth(C$, 'isSingle$I',  function (bond) {
return this.bonds[bond].isSingle$();
});

Clazz_newMeth(C$, 'isDouble$I',  function (bond) {
return this.bonds[bond].isDouble$();
});

Clazz_newMeth(C$, 'bondType$I',  function (bond) {
return this.bonds[bond].bondType;
});

Clazz_newMeth(C$, 'complete$Z',  function (computeValenceState) {
this.setNeighborsFromBonds$();
this.setBondCenters$();
if (computeValenceState) {
this.setValenceState$();
}});

Clazz_newMeth(C$, 'setBondCenters$',  function () {
for (var b=1; b <= this.nbonds; b++) {
this.setBondCenter$jme_core_Bond(this.bonds[b]);
}
});

Clazz_newMeth(C$, 'setBondCenter$jme_core_Bond',  function (b) {
b.centerX=(this.atoms[b.va].x + this.atoms[b.vb].x) / 2;
b.centerY=(this.atoms[b.va].y + this.atoms[b.vb].y) / 2;
});

Clazz_newMeth(C$, 'minimumRingSize$jme_core_Bond',  function (b) {
var a1=b.va;
var a2=b.vb;
return this.minimumRingSize$I$I(a1, a2);
});

Clazz_newMeth(C$, 'minimumRingSize$I$I',  function (a1, a2) {
var bondDist=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var visited=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var toVisit=Clazz_array(Integer.TYPE, [this.natoms + 1]);
bondDist[a1]=1;
toVisit[1]=a1;
 BOND_SPHERE_LOOP : while (true){
var visitCount=0;
for (var v=1; toVisit[v] != 0; v++) {
var at=toVisit[v];
 NEIGHBOR_LOOP : for (var n=1; n <= this.nv$I(at); n++) {
var neighbor=this.v$I(at)[n];
if (neighbor == a2 && at == a1 ) continue NEIGHBOR_LOOP;
if (bondDist[neighbor] == 0) {
bondDist[neighbor]=bondDist[at] + 1;
++visitCount;
visited[visitCount]=neighbor;
}}
if (bondDist[a2] > 2) break BOND_SPHERE_LOOP;
}
if (visitCount == 0) break BOND_SPHERE_LOOP;
visited[visitCount + 1]=0;
{
var tmp=toVisit;
toVisit=visited;
visited=tmp;
}}
return bondDist[a2];
});

Clazz_newMeth(C$, 'findAtomMapForOutput$I',  function (i) {
return (i > 0 && i <= this.natoms  ? this.atoms[i].getMapOrMark$Z(!this.parameters.mark) : 0);
});

Clazz_newMeth(C$, 'findFirstMappdedOrMarkedAtom$',  function () {
for (var i=1; i <= this.natoms; i++) {
var at=this.atoms[i];
if (at.isMappedOrMarked$()) {
return i;
}}
return 0;
});

Clazz_newMeth(C$, 'hasMappedOrMarkedAtom$',  function () {
return this.findFirstMappdedOrMarkedAtom$() > 0;
});

Clazz_newMeth(C$, 'haveQueryOrCoordBonds$',  function () {
for (var b=1; b <= this.nbonds; b++) {
switch (this.bonds[b].bondType) {
case 9:
case 0:
return true;
}
}
return false;
});

Clazz_newMeth(C$, 'deleteHydrogens$jme_core_JMECore_Parameters_HydrogenParams',  function (pars) {
var changed=false;
if (pars.removeHs == false ) {
return changed;
}this.setNeighborsFromBonds$();
 atom_loop : for (var i=this.natoms; i >= 1; i--) {
var a=this.atoms[i];
var parent=this.atoms[a.v[1]];
if (pars.removeOnlyCHs && parent.an != 3 ) {
continue;
}if (a.an == 1 && a.nv == 1  && a.q == 0  && parent.an != 1  && parent.an < 32 ) {
if (pars.keepIsotopicHs && a.iso != 0 ) {
continue atom_loop;
}if (pars.keepMappedHs && a.isMapped$() ) {
continue atom_loop;
}var b=this.getBond$I$I(i, a.v[1]);
if (b.bondType == 1) {
if (!(pars.keepStereoHs && b.stereo != 0 )) {
this.deleteAtom$I(i);
changed=true;
}}}}
return changed;
});

Clazz_newMeth(C$, 'info$S',  function (msg) {
if (this.jmesl != null ) this.jmesl.info$S(msg);
 else System.err.println$S(msg);
});

Clazz_newMeth(C$, 'hasAromaticBondType$',  function () {
if (this.nbonds < 1) {
return false;
}for (var b=1; b <= this.nbonds; b++) {
var bond=this.bonds[b];
if (bond.bondType == 4 || bond.bondType == 5  || bond.bondType == 9 ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'distance$I$I',  function (atom1, atom2) {
var dx=this.atoms[atom2].x - this.atoms[atom1].x;
var dy=this.atoms[atom2].y - this.atoms[atom1].y;
return Math.sqrt(dx * dx + dy * dy);
});

Clazz_newMeth(C$, 'bondDistance$I',  function (i) {
return this.distance$I$I(this.bonds[i].va, this.bonds[i].vb);
});

Clazz_newMeth(C$, 'squareEuclideanDist$D$D$D$D',  function (x1, y1, x2, y2) {
var dx=x2 - x1;
var dy=y2 - y1;
return dx * dx + dy * dy;
}, 1);

Clazz_newMeth(C$, 'dotProduct$D$D$D$D',  function (x1, y1, x2, y2) {
return x1 * x2 + y1 * y2;
}, 1);

Clazz_newMeth(C$, 'setCosSin$I$I',  function (atom1, atom2) {
var dx=this.x$I(atom2) - this.x$I(atom1);
var dy=this.y$I(atom2) - this.y$I(atom1);
var rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
this.temp[0]=dx / rx;
this.temp[1]=dy / rx;
});

Clazz_newMeth(C$, 'rotate$D$D$D',  function (movex, centerx, centery) {
if (this.natoms == 0) return;
this.moveXY$D$D(-centerx, -centery);
var sinu=Math.sin(movex * 3.141592653589793 / 180.0);
var cosu=Math.cos(movex * 3.141592653589793 / 180.0);
for (var i=1; i <= this.natoms; i++) {
var xx=this.x$I(i) * cosu + this.y$I(i) * sinu;
var yy=-this.x$I(i) * sinu + this.y$I(i) * cosu;
this.atoms[i].x=xx;
this.atoms[i].y=yy;
}
this.moveXY$D$D(centerx, centery);
});

Clazz_newMeth(C$, 'moveXY$D$D',  function (dx, dy) {
for (var at=1; at <= this.natoms; at++) {
this.atoms[at].moveXY$D$D(dx, dy);
}
this.setBondCenters$();
});

Clazz_newMeth(C$, 'computeMultiPartIndices$',  function () {
return this.computeMultiPartIndices$I(0);
});

Clazz_newMeth(C$, 'computeMultiPartIndices$I',  function (bondToBeIgnored) {
var nparts=0;
for (var at=1; at <= this.natoms; at++) {
this.atoms[at].partIndex=0;
}
for (var b=1; b <= this.nbonds; b++) {
this.bonds[b].partIndex=0;
}
while (true){
var newPartAssignedToAtom=false;
for (var at=1; at <= this.natoms; at++) {
var atom=this.atoms[at];
if (atom.partIndex == 0) {
atom.partIndex=++nparts;
newPartAssignedToAtom=true;
break;
}}
if (!newPartAssignedToAtom) break;
while (newPartAssignedToAtom){
newPartAssignedToAtom=false;
for (var b=1; b <= this.nbonds; b++) {
if (b == bondToBeIgnored) continue;
var bond=this.bonds[b];
if (bond.partIndex > 0) {
continue;
}var atom1=this.atoms[bond.va];
var atom2=this.atoms[bond.vb];
if (atom1.partIndex != atom2.partIndex) {
bond.partIndex=atom1.partIndex=atom2.partIndex=nparts;
newPartAssignedToAtom=true;
} else {
bond.partIndex=atom1.partIndex;
}}
}
}
return nparts;
});

Clazz_newMeth(C$, 'computeCoordinate2DboundingBox$',  function () {
var bbox=null;
if (this.natoms == 0) return bbox;
var minx=1.7976931348623157E308;
var maxx=4.9E-324;
var miny=1.7976931348623157E308;
var maxy=4.9E-324;
for (var i=1; i <= this.natoms; i++) {
var x=this.x$I(i);
var y=this.y$I(i);
if (x < minx ) minx=x;
maxx=Math.max(x, maxx);
if (y < miny ) miny=y;
maxy=Math.max(y, maxy);
}
bbox=Clazz_new_($I$(6,1));
bbox.x=minx;
bbox.y=miny;
bbox.width=maxx - minx;
bbox.height=maxy - miny;
return bbox;
});

Clazz_newMeth(C$, 'getNewPoint$I$D$DA',  function (pt, rbond, newPoint) {
var atom1=this.v$I(pt)[1];
var atom2=this.v$I(pt)[2];
var dx=this.x$I(atom2) - this.x$I(atom1);
var dy=-(this.y$I(atom2) - this.y$I(atom1));
var rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
var sina=dy / rx;
var cosa=dx / rx;
var vzd=Math.abs((this.y$I(pt) - this.y$I(atom1)) * cosa + (this.x$I(pt) - this.x$I(atom1)) * sina);
if (vzd < 1.0 ) {
dx=this.x$I(pt) - this.x$I(atom1);
dy=this.y$I(pt) - this.y$I(atom1);
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
var xx=rx;
var yy=rbond;
sina=dy / rx;
cosa=dx / rx;
newPoint[0]=this.x$I(atom1) + xx * cosa - yy * sina;
newPoint[1]=this.y$I(atom1) + yy * cosa + xx * sina;
} else {
var xpoint=(this.x$I(atom1) + this.x$I(atom2)) / 2.0;
var ypoint=(this.y$I(atom1) + this.y$I(atom2)) / 2.0;
dx=this.x$I(pt) - xpoint;
dy=this.y$I(pt) - ypoint;
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
newPoint[0]=this.x$I(pt) + rbond * dx / rx;
newPoint[1]=this.y$I(pt) + rbond * dy / rx;
}});

Clazz_newMeth(C$, 'createAndAddBondFromOther$jme_core_Bond',  function (otherBond) {
++this.nbonds;
if (this.nbonds > this.bonds.length - 1) {
var storage=this.bonds.length + 10;
var newBonds=Clazz_array($I$(5), [storage]);
System.arraycopy$O$I$O$I$I(this.bonds, 0, newBonds, 0, this.bonds.length);
this.bonds=newBonds;
}return this.bonds[this.nbonds]=(otherBond == null  ? Clazz_new_($I$(5,1)) : otherBond.deepCopy$());
});

Clazz_newMeth(C$, 'deleteAtom$I',  function (delatom) {
var bondCount=0;
var deltaSBO=0;
for (var i=1; i <= this.nbonds; i++) {
var bondI=this.bonds[i];
var atom1=bondI.va;
var atom2=bondI.vb;
if (atom1 != delatom && atom2 != delatom ) {
++bondCount;
var bondJ=this.bonds[bondCount];
bondI.copyTo$jme_core_Bond(bondJ);
bondJ.va=atom1;
if (atom1 > delatom) --bondJ.va;
bondJ.vb=atom2;
if (atom2 > delatom) --bondJ.vb;
} else {
deltaSBO+=bondI.bondType;
}}
this.nbonds=bondCount;
for (var i=delatom; i < this.natoms; i++) {
this.atoms[i]=this.atoms[i + 1];
}
--this.natoms;
if (this.natoms == 0) {
return;
}for (var i=1; i <= this.natoms; i++) {
var a=this.atoms[i];
var nv=0;
for (var j=1, ni=a.nv; j <= ni; j++) {
var atom1=a.v[j];
if (atom1 == delatom) {
a.nh+=deltaSBO;
continue;
}if (atom1 > delatom) --atom1;
a.v[++nv]=atom1;
}
a.nv=nv;
}
});

Clazz_newMeth(C$, 'createAtom$',  function () {
return this.createAtomFromOther$jme_core_Atom(null);
});

Clazz_newMeth(C$, 'setAtom$I$S',  function (atom, symbol) {
if (symbol.startsWith$S("[") && symbol.endsWith$S("]") ) {
symbol=symbol.substring$I$I(1, symbol.length$() - 1);
this.AN$I$I(atom, 32);
this.atoms[atom].label=symbol;
this.atoms[atom].nh=0;
return;
}if (symbol.length$() < 1) System.err.println$S("Error - null atom !");
symbol=this.atoms[atom].parseAtomicSymbolPatternIsotopMappAndCharge$S$jme_core_JMECore_Parameters(symbol, this.parameters);
var isQuery=false;
if (symbol.indexOf$S(",") > -1) isQuery=true;
if (symbol.indexOf$S(";") > -1) isQuery=true;
if (symbol.indexOf$S("#") > -1) isQuery=true;
if (symbol.indexOf$S("!") > -1) isQuery=true;
var hpos=symbol.indexOf$S("H");
 atomProcessing : {
if (isQuery) {
this.atoms[atom].label=symbol;
this.AN$I$I(atom, 32);
this.atoms[atom].nh=0;
break atomProcessing;
}var as=symbol;
if (hpos > 0) as=symbol.substring$I$I(0, hpos);
this.AN$I$I(atom, $I$(4).checkAtomicSymbol$S(as));
if (this.an$I(atom) == 32) this.atoms[atom].label=as;
symbol+=" ";
var nhs=0;
if (hpos > 0) {
nhs=1;
var c=symbol.charAt$I(++hpos);
if (c >= "0" && c <= "9" ) nhs=c.$c() - 48;
}if (this.an$I(atom) == 32) {
this.atoms[atom].nh=nhs;
}}});

Clazz_newMeth(C$, 'createAndAddNewBond$I$I$I',  function (at1, at2, bondType) {
var newBond=this.createAndAddBondFromOther$jme_core_Bond(null);
this.addBothNeighbors$I$I(at1, at2);
newBond.va=at1;
newBond.vb=at2;
this.setBondCenter$jme_core_Bond(newBond);
newBond.bondType=bondType;
return newBond;
});

Clazz_newMeth(C$, 'deleteBond$I$Z',  function (delbond, deleteLonelyAtoms) {
var a1=this.bonds[delbond].va;
var atom1=this.atoms[a1];
var a2=this.bonds[delbond].vb;
var atom2=this.atoms[a2];
for (var i=delbond; i < this.nbonds; i++) {
this.bonds[i]=this.bonds[i + 1];
}
--this.nbonds;
var k=0;
var ni=atom1.nv;
for (var i=1; i <= ni; i++) if (atom1.v[i] != a2) atom1.v[++k]=atom1.v[i];

atom1.nv=k;
k=0;
ni=atom2.nv;
for (var i=1; i <= ni; i++) if (atom2.v[i] != a1) atom2.v[++k]=atom2.v[i];

atom2.nv=k;
var deletedAtoms=0;
if (deleteLonelyAtoms && a1 < a2 ) {
k=a1;
a1=a2;
a2=k;
}if (this.atoms[a1].nv == 0) {
if (deleteLonelyAtoms) {
this.deleteAtom$I(a1);
}deletedAtoms+=1;
}if (this.atoms[a2].nv == 0) {
if (deleteLonelyAtoms) {
this.deleteAtom$I(a2);
}deletedAtoms+=2;
}this.setBondCenters$();
return deletedAtoms;
});

Clazz_newMeth(C$, 'addBondToAtom$I$I$I$Z$D',  function (bondType, ia, up, forceLinear, limit) {
var upWasUsed=false;
var atom=this.atoms[ia];
if (atom.nv > 5) {
return null;
}this.createAtomFromOther$jme_core_Atom(null);
switch (atom.nv) {
case 0:
this.XY$I$D$D(this.natoms, atom.x + 21.65, atom.y + 12.5);
break;
case 1:
var ia1=atom.v[1];
var atom1=this.atoms[ia1];
var atom3=(atom1.nv != 2 ? null : atom1.v[1] == ia ? this.atoms[atom1.v[2]] : this.atoms[atom1.v[1]]);
var dx=atom.x - atom1.x;
var dy=atom.y - atom1.y;
var rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
var sina=dy / rx;
var cosa=dx / rx;
var xx;
var yy;
var b=this.getBond$I$I(ia, ia1);
if (forceLinear || bondType == 3  || b.bondType == 3  || bondType == 2 && b.bondType == 2  ) {
xx=rx + 25.0;
yy=0.0;
} else {
xx=rx + 25.0 * Math.cos(1.0471975511965976);
yy=25.0 * Math.sin(1.0471975511965976);
}if (atom3 != null ) if (((atom3.y - atom1.y) * cosa - (atom3.x - atom1.x) * sina) > 0 ) yy=-yy;
if (up > 0 && yy < 0  ) yy=-yy;
 else if (up < 0 && yy > 0  ) yy=-yy;
this.XY$I$D$D(this.natoms, atom1.x + xx * cosa - yy * sina, atom1.y + yy * cosa + xx * sina);
upWasUsed=true;
break;
case 2:
var newPoint=Clazz_array(Double.TYPE, [2]);
this.getNewPoint$I$D$DA(ia, 25.0, newPoint);
this.XY$I$D$D(this.natoms, newPoint[0], newPoint[1]);
break;
case 3:
case 4:
case 5:
for (var i=1; i <= atom.nv; i++) {
atom1=this.atoms[atom.v[i]];
dx=atom.x - atom1.x;
dy=atom.y - atom1.y;
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
this.XY$I$D$D(this.natoms, atom.x + 25.0 * dx / rx, atom.y + 25.0 * dy / rx);
if (i == atom.nv || this.checkTouchToAtom$I$I$I$D$Z(this.natoms, 1, this.natoms, limit, true) == 0 ) break;
}
break;
}
this.createAndAddNewBond$I$I$I(ia, this.natoms, bondType);
return Boolean.valueOf$Z(upWasUsed);
});

Clazz_newMeth(C$, 'checkTouchToAtom$I$I$I$D$Z',  function (ia, firstAtom, lastAtom, limit, justOne) {
var dx;
var dy;
var rx;
var min=limit + 1;
var touch=0;
var atom=this.atoms[ia];
for (var i=firstAtom; i <= lastAtom; i++) {
if (ia == i) continue;
dx=atom.x - this.atoms[i].x;
dy=atom.y - this.atoms[i].y;
rx=dx * dx + dy * dy;
if (rx < limit ) if (rx < min ) {
min=rx;
touch=i;
if (justOne) return i;
}}
return touch;
});

Clazz_newMeth(C$, 'hasCloseContactWith$jme_core_JMECore$D',  function (other, minAtomDist) {
for (var a1=1, n=this.nAtoms$(); a1 <= n; a1++) {
var at1=this.getAtom$I(a1);
for (var a2=1, n2=other.nAtoms$(); a2 <= n2; a2++) {
var at2=other.getAtom$I(a2);
if (at1.hasCloseContactWith$jme_core_Atom$D(at2, minAtomDist)) {
return true;
}}
}
return false;
});

Clazz_newMeth(C$, 'testAtomAndBondTouch$D$D$Z$Z$DA',  function (xx, yy, ignoreAtoms, ignoreBonds, retMin) {
var i;
var found=0;
var rx;
var min=retMin[0];
if (!ignoreBonds) {
for (i=1; i <= this.nbonds; i++) {
var b=this.bonds[i];
rx=C$.squareEuclideanDist$D$D$D$D(xx, yy, b.centerX, b.centerY);
if (rx < min ) {
min=rx;
found=-i;
var ax=this.atoms[b.va].x;
var ay=this.atoms[b.va].y;
var vx=this.atoms[b.vb].x - ax;
var vy=this.atoms[b.vb].y - ay;
for (var third=1; third <= 2; third++) {
var x3=ax + third * vx / 3;
var y3=ay + third * vy / 3;
rx=C$.squareEuclideanDist$D$D$D$D(xx, yy, x3, y3);
if (rx < min ) {
min=rx;
}}
}}
}if (!ignoreAtoms) {
for (i=1; i <= this.natoms; i++) {
rx=C$.squareEuclideanDist$D$D$D$D(xx, yy, this.x$I(i), this.y$I(i));
if (rx < min ) {
min=rx;
found=i;
}}
}if (found == 0 && !ignoreBonds ) {
for (i=1; i <= this.nbonds; i++) {
var at1=this.bonds[i].va;
var at2=this.bonds[i].vb;
var at1X=this.x$I(at1);
var at1Y=this.y$I(at1);
var at2X=this.x$I(at2);
var at2Y=this.y$I(at2);
at2X-=at1X;
at2Y-=at1Y;
var xx2=xx - at1X;
var yy2=yy - at1Y;
var sqBondLength=at2X * at2X + at2Y * at2Y;
var sqDistToAtom1=xx2 * xx2 + yy2 * yy2;
var sqDistToAtom2=C$.squareEuclideanDist$D$D$D$D(xx2, yy2, at2X, at2Y);
if (sqDistToAtom1 + sqDistToAtom2 > sqBondLength + min ) {
continue;
}var dp=C$.dotProduct$D$D$D$D(xx2, yy2, at2X, at2Y);
if (dp < 0 ) {
continue;
}sqBondLength=Math.sqrt(sqBondLength);
sqDistToAtom1=Math.sqrt(sqDistToAtom1);
var cos=dp / (sqBondLength * sqDistToAtom1);
if (cos >= 1 ) {
continue;
}var otherAngle=1.5707963267948966 - Math.acos(cos);
var dist=sqDistToAtom1 * Math.cos(otherAngle);
dist*=dist;
if (dist < min ) {
found=i * -1;
min=dist;
}}
}retMin[0]=min;
return found;
});

Clazz_newMeth(C$, 'scaleXY$D',  function (scale) {
if (scale > 0 ) {
for (var at=1; at <= this.natoms; at++) {
this.atoms[at].scaleXY$D(scale);
}
this.setBondCenters$();
}});

Clazz_newMeth(C$, 'createAtom$S',  function (symbol) {
var atom=this.createAtom$();
this.setAtom$I$S(this.natoms, symbol);
return atom;
});

Clazz_newMeth(C$, 'setAtomHydrogenCount$I$I',  function (atom, nh) {
var a=this.atoms[atom];
if (a.an == 32) {
a.label+="H";
if (nh > 1) a.label+=nh;
}});

Clazz_newMeth(C$, 'getHydrogenCount$I',  function (i) {
return this.atoms[i].nh;
});

Clazz_newMeth(C$, 'getCharge$I',  function (i) {
return this.atoms[i].q;
});

Clazz_newMeth(C$, 'getMaxAtomMap$',  function () {
if (this.natoms == 0) return 0;
var max=-999999;
for (var at=1; at <= this.natoms; at++) {
var map=this.atoms[at].getMap$();
if (map > max) max=map;
}
return max;
});

Clazz_newMeth(C$, 'resetAtomMaps$',  function () {
var hasChanged=false;
for (var at=1; at <= this.natoms; at++) {
hasChanged=this.atoms[at].resetMap$() || hasChanged ;
}
return hasChanged;
});

Clazz_newMeth(C$, 'has2Dcoordinates$',  function () {
if (this.natoms == 0) {
return true;
}if (this.has3Dcoordinates$()) {
return false;
}if (this.natoms == 2) {
return this.atoms[1].x != this.atoms[2].x  || this.atoms[1].y != this.atoms[2].y  ;
}for (var i=1; i <= this.natoms; i++) {
if (this.atoms[i].x != 0  || this.atoms[i].y != 0  ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'has3Dcoordinates$',  function () {
if (this.nAtoms$() <= 1) {
return true;
}for (var at=1; at <= this.natoms; at++) {
if (Math.abs(this.z$I(at)) > 0.001 ) {
return true;
}}
return false;
});

Clazz_newMeth(C$, 'internalBondLengthScaling$',  function () {
var sumlen=0;
var scale=0;
var max=0;
var min=1.7976931348623157E308;
var refBondLength=25.0;
for (var i=1; i <= this.nbonds; i++) {
var b=this.bonds[i];
var d=this.distance$I$I(b.va, b.vb);
sumlen+=d;
if (d > max ) max=d;
if (d < min ) min=d;
}
if (sumlen == 0 ) return 0;
if (this.nbonds > 0) {
var average=sumlen / this.nbonds;
scale=(average - min < max - average  ? min : max);
scale=refBondLength / scale;
} else if (this.natoms > 1) {
scale=3 * refBondLength / this.distance$I$I(1, 2);
}this.scaleXY$D(scale);
this.setBondCenters$();
return refBondLength;
});

Clazz_newMeth(C$, 'centerX$',  function () {
var sum=0;
for (var i=1; i <= this.natoms; i++) {
sum+=this.x$I(i);
}
return (this.natoms > 0 ? sum / this.natoms : 0);
});

Clazz_newMeth(C$, 'centerY$',  function () {
var sum=0;
for (var i=1; i <= this.natoms; i++) {
sum+=this.y$I(i);
}
return (this.natoms > 0 ? sum / this.natoms : 0);
});

Clazz_newMeth(C$, 'closestAtomDistance$D$D',  function (xx, yy) {
var min=1.7976931348623157E308;
for (var i=1; i <= this.natoms; i++) {
var rx=C$.squareEuclideanDist$D$D$D$D(xx, yy, this.x$I(i), this.y$I(i));
if (rx < min ) {
min=rx;
}}
return Math.sqrt(min);
});

Clazz_newMeth(C$, 'checkNeedsCleaning$',  function () {
for (var i=this.natoms + 1; --i >= 1; ) {
var x=this.atoms[i].x;
var y=this.atoms[i].y;
for (var j=i; --j >= 1; ) {
var x2=this.atoms[j].x;
var y2=this.atoms[j].y;
if (Math.abs(x - x2) + Math.abs(y - y2) < 2 ) {
return true;
}}
}
return false;
});

Clazz_newMeth(C$, 'setAtomMapFromInput$I$I',  function (atomIndex, map) {
if (atomIndex > 0 && atomIndex <= this.nAtoms$() ) {
var atom=this.atoms[atomIndex];
atom.setMapOrMark$I$Z(map, !this.parameters.mark);
}return map;
});

Clazz_newMeth(C$, 'finalizeMolecule$',  function () {
this.setNeighborsFromBonds$();
this.deleteHydrogens$jme_core_JMECore_Parameters_HydrogenParams(this.parameters.hydrogenParams);
this.complete$Z(this.parameters.computeValenceState);
if (this.parameters.internalBondScalingForInput) {
this.internalBondLengthScaling$();
}});

Clazz_newMeth(C$, 'getSp2Other$I$I$Z',  function (ia, not, first) {
var a=this.atoms[ia];
if (first) {
for (var i=1; i <= a.nv; i++) {
if (a.v[i] != not && this.atoms[a.v[i]].an != 1 ) return a.v[i];
}
return 0;
}for (var i=a.nv + 1; --i >= 1; ) {
if (a.v[i] != not && this.atoms[a.v[i]].an != 1 ) return a.v[i];
}
return 0;
});

C$.$static$=function(){C$.$static$=0;
C$.DefaultParameters=Clazz_new_($I$(3,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMECore, "Parameters", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});
C$.$classes$=[['SmilesParams',1],['HydrogenParams',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.smilesParams=Clazz_new_($I$(1,1),[this, null]);
this.hydrogenParams=Clazz_new_($I$(2,1),[this, null]);
this.computeValenceState=true;
this.ignoreStereo=false;
this.mark=false;
this.number=false;
this.showAtomMapNumberWithBackgroundColor=false;
this.internalBondScalingForInput=false;
this.keepSameCoordinatesForOutput=false;
},1);

C$.$fields$=[['Z',['computeValenceState','ignoreStereo','mark','number','showAtomMapNumberWithBackgroundColor','internalBondScalingForInput','keepSameCoordinatesForOutput'],'O',['smilesParams','jme.core.JMECore.Parameters.SmilesParams','hydrogenParams','jme.core.JMECore.Parameters.HydrogenParams']]]
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMECore.Parameters, "SmilesParams", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.allowaromatic=true;
this.stereo=true;
this.canonize=true;
this.autoez=true;
this.allHs=false;
this.smarts=false;
this.star=false;
this.polarnitro=false;
},1);

C$.$fields$=[['Z',['allowaromatic','stereo','canonize','autoez','allHs','smarts','star','polarnitro']]]

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMECore.Parameters, "HydrogenParams", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.keepStereoHs=true;
this.keepMappedHs=true;
this.keepIsotopicHs=true;
this.removeHs=false;
this.removeOnlyCHs=false;
this.showHs=true;
},1);

C$.$fields$=[['Z',['keepStereoHs','keepMappedHs','keepIsotopicHs','removeHs','removeOnlyCHs','showHs']]]

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.core"),p$1={},I$=[[0,'StringBuffer',['jme.core.JMECore','.Parameters'],'jme.core.Atom','jme.util.Isotopes']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMESmiles", null, 'jme.core.JMECore');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.smartsMode=false;
},1);

C$.$fields$=[['Z',['doMark','isQuery','autoez','smartsMode'],'O',['a','int[]','+btype']]]

Clazz_newMeth(C$, 'c$$jme_core_JMECore$I$Z',  function (mol, part, isQuery) {
;C$.superclazz.c$$jme_core_JMECore$I.apply(this,[mol, part]);C$.$init$.apply(this);
this.isQuery=isQuery;
}, 1);

Clazz_newMeth(C$, 'createSmilesWithSideEffect$jme_core_JMECore_Parameters',  function (mpars) {
if (this.natoms == 0) return "";
this.parameters=mpars;
this.doMark=mpars.mark;
this.autoez=mpars.smilesParams.autoez;
var con1=Clazz_array(Integer.TYPE, [this.natoms + 10]);
var con2=Clazz_array(Integer.TYPE, [this.natoms + 10]);
var branch=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var candidate=Clazz_array(Integer.TYPE, [7]);
var parent=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var isAromatic=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
var isRingBond=Clazz_array(Boolean.TYPE, [this.nbonds + 1]);
var bondMinimumRingSize=Clazz_array(Integer.TYPE, [this.nbonds + 1]);
var nconnections=0;
if (mpars.smilesParams.canonize && !this.haveQueryOrCoordBonds$() ) {
this.smartsMode=mpars.smilesParams.smarts;
var pars=C$.setHydrogenParams$jme_core_JMECore_Parameters(mpars);
this.deleteHydrogens$jme_core_JMECore_Parameters_HydrogenParams(pars);
this.cleanPolarBonds$Z(mpars.smilesParams.polarnitro);
this.findRingBonds$IA(bondMinimumRingSize);
var allowAromatic=mpars.smilesParams.allowaromatic;
this.setBondTypes$ZA$IA$Z(isAromatic, bondMinimumRingSize, allowAromatic);
this.canonize$Z(mpars.computeValenceState);
this.setValenceState$();
this.findRingBonds$IA(bondMinimumRingSize);
this.setBondTypes$ZA$IA$Z(isAromatic, bondMinimumRingSize, allowAromatic);
} else {
this.findRingBonds$IA(bondMinimumRingSize);
this.btype=Clazz_array(Integer.TYPE, [this.nbonds + 1]);
for (var i=1; i <= this.nbonds; i++) this.btype[i]=this.bonds[i].bondType;

}for (var b=1; b <= this.nbonds; b++) {
isRingBond[b]=bondMinimumRingSize[b] > 0;
}
var atom=1;
this.a=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var step=1;
this.a[atom]=step;
var nbranch=0;
while (true){
var ncandidates=0;
for (var i=1; i <= this.nv$I(atom); i++) {
var atomx=this.v$I(atom)[i];
if (this.a[atomx] > 0) {
if (this.a[atomx] > this.a[atom]) continue;
if (atomx == parent[atom]) continue;
var newcon=true;
for (var k=1; k <= nconnections; k++) if (con1[k] == atom && con2[k] == atomx  || con1[k] == atomx && con2[k] == atom  ) {
newcon=false;
break;
}
if (newcon) {
++nconnections;
con1[nconnections]=atom;
con2[nconnections]=atomx;
}} else candidate[++ncandidates]=atomx;
}
if (ncandidates == 0) {
if (step == this.natoms) break;
atom=branch[nbranch--];
} else if (ncandidates == 1) {
parent[candidate[1]]=atom;
atom=candidate[1];
this.a[atom]=++step;
} else {
branch[++nbranch]=atom;
var atomnew=0;
for (var i=1; i <= ncandidates; i++) {
var b=this.getBondIndex$I$I(candidate[i], atom);
if (isRingBond[b]) continue;
atomnew=candidate[i];
break;
}
if (atomnew == 0) {
for (var i=1; i <= ncandidates; i++) {
var b=this.getBondIndex$I$I(candidate[i], atom);
if (this.btype[b] == 2 || this.btype[b] == 3 ) {
atomnew=candidate[i];
break;
}}
}if (atomnew == 0) atomnew=candidate[1];
parent[atomnew]=atom;
atom=atomnew;
this.a[atom]=++step;
}}
parent=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var aa=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var leftBracket=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
var rightBracket=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
nbranch=0;
step=0;
var atomold=0;
for (var i=1; i <= this.natoms; i++) if (this.a[i] == 1) {
atom=i;
break;
}
 loopTwo : while (true){
if (atomold > 0) parent[atom]=atomold;
aa[++step]=atom;
this.a[atom]=0;
var atomnew;
var ncandidates;
while (true){
atomnew=0;
ncandidates=0;
var min=this.natoms + 1;
 cs1 : for (var i=1; i <= this.nv$I(atom); i++) {
var atomx=this.v$I(atom)[i];
for (var j=1; j <= nconnections; j++) if (con1[j] == atomx && con2[j] == atom  || con1[j] == atom && con2[j] == atomx  ) continue cs1;

if (this.a[atomx] > 0) {
++ncandidates;
if (this.a[atomx] < min) {
atomnew=atomx;
min=this.a[atomx];
}}}
if (atomnew == 0) {
if (nbranch == 0) break loopTwo;
rightBracket[atom]=true;
atom=branch[nbranch--];
} else break;
}
atomold=atom;
atom=atomnew;
if (ncandidates > 1) {
branch[++nbranch]=atomold;
leftBracket[atom]=true;
}}
var slashBond=Clazz_array(Integer.TYPE, [this.nbonds + 1]);
var stereo=Clazz_array(Integer.TYPE, [this.natoms + 1]);
if (mpars.smilesParams.stereo) p$1.smilesStereo$IA$IA$IA$IA$IA$IA$IA$I.apply(this, [aa, parent, slashBond, stereo, bondMinimumRingSize, con1, con2, nconnections]);
var queryMode=false;
var smiles=Clazz_new_($I$(1,1).c$$S,[""]);
var ax=Clazz_array(Integer.TYPE, [this.natoms + 1]);
for (var i=1; i <= this.natoms; i++) ax[aa[i]]=i;

for (var i=1; i <= this.natoms; i++) {
atom=aa[i];
if (leftBracket[atom]) smiles.append$S("(");
if (parent[i] > 0) p$1.smilesAddBond$I$I$StringBuffer$IA$Z.apply(this, [atom, parent[atom], smiles, slashBond, queryMode]);
p$1.smilesAddAtom$I$StringBuffer$Z$IA.apply(this, [atom, smiles, isAromatic[atom], stereo]);
for (var j=1; j <= nconnections; j++) {
if (con1[j] == atom || con2[j] == atom ) {
var atom2=con2[j];
if (atom2 == atom) atom2=con1[j];
if (ax[atom] < ax[atom2]) p$1.smilesAddBond$I$I$StringBuffer$IA$Z.apply(this, [con1[j], con2[j], smiles, slashBond, queryMode]);
if (j > 9) smiles.append$S("%");
smiles.append$S( new Integer(j).toString());
}}
if (rightBracket[atom]) smiles.append$S(")");
}
return smiles.toString();
});

Clazz_newMeth(C$, 'setHydrogenParams$jme_core_JMECore_Parameters',  function (mpars) {
var pars=Clazz_new_($I$(2,1)).hydrogenParams;
pars.keepStereoHs=!mpars.smilesParams.stereo;
pars.removeOnlyCHs=mpars.smilesParams.smarts;
return pars;
}, 1);

Clazz_newMeth(C$, 'smilesAddAtom$I$StringBuffer$Z$IA',  function (at, smiles, isAromatic, stereo) {
var z="X";
var atom=this.atoms[at];
var iso=atom.iso;
var nh=atom.nh;
var q=atom.q;
var an=atom.an;
var map=this.findAtomMapForOutput$I(at);
var isMapped=(map != 0);
var bracket=(q != 0 || iso != 0  || stereo[at] != 0  || isMapped  || this.doMark && atom.backgroundColors[0] > 0   || this.smartsMode && nh > 0  && an != 3  );
switch (an) {
case 2:
z="B";
break;
case 3:
if (isAromatic) z="c";
 else z="C";
break;
case 4:
if (isAromatic) {
z="n";
if (nh > 0) bracket=true;
} else z="N";
break;
case 5:
if (isAromatic) z="o";
 else z="O";
break;
case 7:
if (isAromatic) {
z="p";
if (nh > 0) bracket=true;
} else z="P";
break;
case 8:
if (isAromatic) z="s";
 else z="S";
break;
case 13:
if (isAromatic) z="se";
 else z="Se";
bracket=true;
break;
case 6:
z="Si";
bracket=true;
break;
case 9:
z="F";
break;
case 10:
z="Cl";
break;
case 11:
z="Br";
break;
case 12:
z="I";
break;
case 1:
z="H";
bracket=true;
break;
case 32:
bracket=true;
z=atom.label;
if (z == null ) {
z="X";
}if ((!isMapped) && (z.equals$O("*") || z.equals$O("a") || z.equals$O("A")  ) ) bracket=false;
break;
}
if ($I$(3).chargedMetalType$I(an) > 0) {
z=$I$(3).zlabel[an];
bracket=true;
}if (an >= 33 && an <= 42 ) {
bracket=true;
z=$I$(3).zlabel[an];
}if (bracket) {
if (iso != 0) {
z="[" + iso + z ;
} else {
z="[" + z;
}if (stereo[at] == 1) z+="@";
 else if (stereo[at] == -1) z+="@@";
if (true) {
if (nh == 1) z+="H";
 else if (nh > 1) z+="H" + nh;
}if (q != 0) {
if (q > 0) z+="+";
 else z+="-";
if (Math.abs(q) > 1) z+=Math.abs(q);
}if (isMapped) z+=":" + map;
z+="]";
}smiles.append$S(z);
}, p$1);

Clazz_newMeth(C$, 'smilesAddBond$I$I$StringBuffer$IA$Z',  function (atom1, atom2, smiles, slashBond, queryMode) {
var b=this.getBondIndex$I$I(atom1, atom2);
var bond=this.bonds[b];
if (this.btype[b] != 5 && bond.isDouble$() ) smiles.append$S("=");
 else if (bond.isTriple$()) smiles.append$S("#");
 else if (bond.isQuery$()) {
var z="?";
var o=bond.btag;
if (o != null ) z=o;
smiles.append$S(z);
} else if (this.btype[b] == 5 && queryMode ) smiles.append$S(":");
 else if (bond.isCoordination$()) smiles.append$S("~");
 else if (slashBond[b] == 1) smiles.append$S("/");
 else if (slashBond[b] == -1) smiles.append$S("\\");
 else {
}}, p$1);

Clazz_newMeth(C$, 'smilesStereo$IA$IA$IA$IA$IA$IA$IA$I',  function (aa, parent, slashBond, stereo, bondMinimumRingSize, con1, con2, nconnections) {
var ax=Clazz_array(Integer.TYPE, [this.natoms + 1]);
for (var at=1; at <= this.natoms; at++) ax[aa[at]]=at;

var doneEZ=Clazz_array(Boolean.TYPE, [this.nbonds + 1]);
for (var i=1; i <= this.natoms; i++) {
var atom1=aa[i];
var atom2=parent[atom1];
var bi=this.getBondIndex$I$I(atom1, atom2);
if (bi == 0) continue;
p$1.stereoEZ$I$IA$IA$IA.apply(this, [bi, ax, slashBond, bondMinimumRingSize]);
doneEZ[bi]=true;
}
for (var i=1; i <= this.nbonds; i++) {
if (!doneEZ[i]) p$1.stereoEZ$I$IA$IA$IA.apply(this, [i, ax, slashBond, bondMinimumRingSize]);
}
doneEZ=null;
 atom_loop : for (var at=1; at <= this.natoms; at++) {
if (this.nv$I(at) < 2 || this.nv$I(at) > 4 ) continue;
var nstereo=0;
var doubleBonded=0;
for (var neighbor=1; neighbor <= this.nv$I(at); neighbor++) {
var bi=this.getBondIndex$I$I(at, this.v$I(at)[neighbor]);
if (this.btype[bi] == 5) continue atom_loop;
if (this.bonds[bi].bondType == 1 && C$.upDownBond$jme_core_Bond$I(this.bonds[bi], at) != 0 ) ++nstereo;
if (this.bonds[bi].bondType == 2) doubleBonded=this.v$I(at)[neighbor];
}
if (nstereo == 0) continue;
if (doubleBonded > 0) p$1.stereoAllene$I$IA$IA$IA$IA$IA$I.apply(this, [at, ax, stereo, parent, con1, con2, nconnections]);
 else p$1.stereoC4$I$IA$IA$IA$IA$I$IA.apply(this, [at, parent, ax, con1, con2, nconnections, stereo]);
}
}, p$1);

Clazz_newMeth(C$, 'stereoC4$I$IA$IA$IA$IA$I$IA',  function (atom, parent, ax, con1, con2, nconnections, stereo) {
var ref=Clazz_array(Integer.TYPE, [4]);
var refx=Clazz_array(Integer.TYPE, [4]);
p$1.identifyNeighbors$I$IA$IA$IA$IA$I$IA.apply(this, [atom, ax, parent, con1, con2, nconnections, ref]);
var nup=0;
var ndown=0;
var up=0;
var down=0;
var marked=0;
var nonmarked=0;
for (var i=0; i < 4; i++) {
if (ref[i] <= 0) continue;
var bi=this.getBondIndex$I$I(atom, ref[i]);
refx[i]=C$.upDownBond$jme_core_Bond$I(this.bonds[bi], atom);
if (refx[i] > 0) {
++nup;
up=ref[i];
marked=ref[i];
} else if (refx[i] < 0) {
++ndown;
down=ref[i];
marked=ref[i];
} else nonmarked=ref[i];
}
var nstereo=nup + ndown;
var ox;
var t=Clazz_array(Integer.TYPE, [4]);
var stereoRef=0;
if (this.atoms[atom].nv == 3) {
if ((nup == 1 && ndown == 1 ) || (nstereo == 3 && nup > 0  && ndown > 0 ) ) {
this.info$S("Error in C3H stereospecification !");
return;
}var refAtom=ref[0];
if (nstereo == 1) refAtom=marked;
 else if (nstereo == 2) refAtom=nonmarked;
ox=this.C4order$I$I$IA(atom, refAtom, ref);
t[0]=marked;
t[1]=-1;
t[2]=ox[2];
t[3]=ox[1];
if (nup > 0) stereoRef=1;
 else stereoRef=-1;
} else if (this.nv$I(atom) == 4) {
if (nstereo == 1) {
ox=this.C4order$I$I$IA(atom, marked, ref);
t[0]=ox[0];
t[1]=ox[3];
t[2]=ox[2];
t[3]=ox[1];
if (nup > 0) stereoRef=1;
 else stereoRef=-1;
} else {
var refAtom=ref[0];
if (nonmarked > 1) refAtom=nonmarked;
if (nup == 1) refAtom=up;
 else if (ndown == 1) refAtom=down;
ox=this.C4order$I$I$IA(atom, refAtom, ref);
var box=Clazz_array(Integer.TYPE, [4]);
for (var i=0; i < 4; i++) {
var bi=this.getBondIndex$I$I(atom, ox[i]);
box[i]=C$.upDownBond$jme_core_Bond$I(this.bonds[bi], atom);
}
if (nstereo == 4) {
if (nup == 0 || ndown == 0 ) {
this.info$S("Error in C4 stereospecification !");
return;
} else if (nup == 1 || ndown == 1 ) {
t[0]=ox[0];
t[1]=ox[3];
t[2]=ox[2];
t[3]=ox[1];
stereoRef=box[0];
} else {
for (var i=0; i < 4; i++) if (box[i] == -1) box[i]=0;

nstereo=2;
}} else if (nstereo == 3) {
if (nup == 3 || ndown == 3 ) {
t[0]=ox[0];
t[1]=ox[3];
t[2]=ox[2];
t[3]=ox[1];
if (nup > 0) stereoRef=-1;
 else stereoRef=1;
} else {
var d=0;
if (nup == 1) {
d=1;
nup=1;
} else {
d=-1;
ndown=-1;
}for (var i=0; i < 4; i++) if (box[i] == d) box[i]=0;

nstereo=2;
}}if (nstereo == 2) {
if (nup == 1 && ndown == 1 ) {
if (ox[1] == down) {
ox[1]=ox[2];
ox[2]=ox[3];
} else if (ox[2] == down) {
ox[2]=ox[3];
}t[0]=up;
t[1]=down;
t[2]=ox[2];
t[3]=ox[1];
stereoRef=1;
} else {
if ((box[0] == box[1]) || (box[1] == box[2]) ) {
this.info$S("Error in C4 stereospecification ! 2/0r");
return;
}if (box[0] != 0) {
t[0]=ox[0];
t[1]=ox[2];
t[2]=ox[1];
t[3]=ox[3];
} else {
t[0]=ox[1];
t[1]=ox[3];
t[2]=ox[2];
t[3]=ox[0];
}if (nup > 1) stereoRef=1;
 else stereoRef=-1;
}}}}C$.stereoTransformation$IA$IA(t, ref);
if (t[2] == ref[2]) stereo[atom]=1;
 else if (t[2] == ref[3]) stereo[atom]=-1;
 else this.info$S("Error in stereoprocessing ! - t30");
stereo[atom]*=stereoRef;
}, p$1);

Clazz_newMeth(C$, 'identifyNeighbors$I$IA$IA$IA$IA$I$IA',  function (atom, ax, parent, con1, con2, nconnections, ref) {
var nref=-1;
if (parent[atom] > 0) ref[++nref]=parent[atom];
for (var i=1; i <= nconnections; i++) {
if (con1[i] == atom) ref[++nref]=con2[i];
if (con2[i] == atom) ref[++nref]=con1[i];
}
for (var i=nref + 1; i < this.nv$I(atom); i++) {
var min=this.natoms + 1;
 jloop : for (var j=1; j <= this.nv$I(atom); j++) {
var atomx=this.v$I(atom)[j];
for (var k=0; k < i; k++) if (atomx == ref[k]) continue jloop;

if (ax[atomx] < min) {
min=ax[atomx];
ref[i]=atomx;
}}
}
if (parent[atom] == 0 && this.atoms[atom].nh > 0 ) {
ref[3]=ref[2];
ref[2]=ref[1];
ref[1]=ref[0];
ref[0]=-1;
System.out.println$S("stereowarning #7");
} else if (this.atoms[atom].nh > 0) {
ref[3]=ref[2];
ref[2]=ref[1];
ref[1]=-1;
}}, p$1);

Clazz_newMeth(C$, 'C4order$I$I$IA',  function (center, ref0, ref) {
var ox=Clazz_array(Integer.TYPE, [4]);
this.setCosSin$I$I(center, ref0);
var p=Clazz_array(Integer.TYPE, [4]);
for (var i=0; i < 4; i++) {
if (ref[i] == ref0 || ref[i] <= 0 ) continue;
if (p[1] == 0) {
p[1]=ref[i];
continue;
}if (p[2] == 0) {
p[2]=ref[i];
continue;
}if (p[3] == 0) {
p[3]=ref[i];
continue;
}}
var sin=Clazz_array(Double.TYPE, [4]);
var cos=Clazz_array(Double.TYPE, [4]);
for (var i=1; i <= 3; i++) {
if (i == 3 && p[3] == 0 ) continue;
this.setCosSin$I$I(center, p[i]);
cos[i]=this.temp[0];
sin[i]=this.temp[1];
}
var c12=C$.compareAngles$D$D$D$D(sin[1], cos[1], sin[2], cos[2]);
if (p[3] > 0) {
var c23=C$.compareAngles$D$D$D$D(sin[2], cos[2], sin[3], cos[3]);
var c13=C$.compareAngles$D$D$D$D(sin[1], cos[1], sin[3], cos[3]);
if (c12 > 0 && c23 > 0 ) {
ox[1]=p[1];
ox[2]=p[2];
ox[3]=p[3];
} else if (c13 > 0 && c23 < 0 ) {
ox[1]=p[1];
ox[2]=p[3];
ox[3]=p[2];
} else if (c12 < 0 && c13 > 0 ) {
ox[1]=p[2];
ox[2]=p[1];
ox[3]=p[3];
} else if (c23 > 0 && c13 < 0 ) {
ox[1]=p[2];
ox[2]=p[3];
ox[3]=p[1];
} else if (c13 < 0 && c12 > 0 ) {
ox[1]=p[3];
ox[2]=p[1];
ox[3]=p[2];
} else if (c23 < 0 && c12 < 0 ) {
ox[1]=p[3];
ox[2]=p[2];
ox[3]=p[1];
}} else {
if (c12 > 0) {
ox[1]=p[1];
ox[2]=p[2];
} else {
ox[1]=p[2];
ox[2]=p[1];
}var u12=p$1.angle$I$I$I.apply(this, [center, p[1], p[2]]);
var u23=p$1.angle$I$I$I.apply(this, [center, p[2], ref0]);
var u13=p$1.angle$I$I$I.apply(this, [center, p[1], ref0]);
if ((u12 + u23) < 3.141592653589793  || (u23 + u13) < 3.141592653589793   || (u12 + u13) < 3.141592653589793  ) {
if (u12 > u23  && u12 > u13  ) {
var o=ox[1];
ox[1]=ox[2];
ox[2]=o;
}}}ox[0]=ref0;
return ox;
});

Clazz_newMeth(C$, 'angle$I$I$I',  function (p1, p2, p3) {
var r12=this.distance$I$I(p1, p2);
var r13=this.distance$I$I(p1, p3);
var r23=this.distance$I$I(p2, p3);
return Math.acos((r12 * r12 + r13 * r13 - r23 * r23) / (2.0 * r12 * r13 ));
}, p$1);

Clazz_newMeth(C$, 'doubleBondNeighborsOfAtom1WithoutDoubleBondedAtom$I',  function (atom1) {
var neighbors=Clazz_array(Integer.TYPE, -1, [0, 0]);
for (var j=1, n=0; j <= this.nv$I(atom1); j++) {
var atomx=this.v$I(atom1)[j];
var bi=this.getBondIndex$I$I(atom1, atomx);
if (this.bondType$I(bi) == 2) continue;
neighbors[n++]=atomx;
}
return neighbors;
}, p$1);

Clazz_newMeth(C$, 'stereoEZ$I$IA$IA$IA',  function (bond, ax, slashBond, bondMinimumRingSize) {
if (this.bondType$I(bond) != 2 || this.btype[bond] == 5 ) return;
if (bondMinimumRingSize[bond] > 0 && bondMinimumRingSize[bond] <= 7 ) return;
if (!this.autoez && this.bonds[bond].stereo != 10 ) return;
if (this.bonds[bond].stereo == 10) return;
var atom1=this.bonds[bond].va;
var atom2=this.bonds[bond].vb;
if (this.atoms[atom1].isCumuleneSP$() && this.atoms[atom2].isCumuleneSP$() ) {
return;
}var cumuleneAtoms=null;
if (this.atoms[atom1].isCumuleneSP$()) {
cumuleneAtoms=p$1.findCumuleneChain$I.apply(this, [atom2]);
} else if (this.atoms[atom2].isCumuleneSP$()) {
cumuleneAtoms=p$1.findCumuleneChain$I.apply(this, [atom1]);
}if (cumuleneAtoms != null ) {
if ((cumuleneAtoms[0] - 1) % 2 == 1) {
atom1=cumuleneAtoms[1];
atom2=cumuleneAtoms[cumuleneAtoms[0]];
} else return;
}var a=Clazz_array(Integer.TYPE, -1, [atom1, atom2]);
for (var eachBondAtom, $eachBondAtom = 0, $$eachBondAtom = a; $eachBondAtom<$$eachBondAtom.length&&((eachBondAtom=($$eachBondAtom[$eachBondAtom])),1);$eachBondAtom++) {
var nv=this.nv$I(eachBondAtom);
if (nv < 2 || nv > 3 ) return;
}
if (ax[atom1] > ax[atom2]) {
var d=atom1;
atom1=atom2;
atom2=d;
}var neighbors=p$1.doubleBondNeighborsOfAtom1WithoutDoubleBondedAtom$I.apply(this, [atom1]);
var ref11=neighbors[0];
var ref12=neighbors[1];
var ref1=0;
var ref1x=false;
if (ref12 > 0 && ax[ref11] > ax[ref12] ) {
var d=ref11;
ref11=ref12;
ref12=d;
}var bi=this.getBondIndex$I$I(atom1, ref11);
if (slashBond[bi] != 0) {
ref1=ref11;
} else if (this.bondType$I(bi) == 1 && this.btype[bi] != 5 ) ref1=ref11;
if (ref1 == 0 && ref12 > 0 ) {
bi=this.getBondIndex$I$I(atom1, ref12);
if (slashBond[bi] != 0) ref1=ref12;
 else if (this.bondType$I(bi) == 1 && this.btype[bi] != 5 ) ref1=ref12;
}if (ax[ref1] > ax[atom1]) ref1x=true;
neighbors=p$1.doubleBondNeighborsOfAtom1WithoutDoubleBondedAtom$I.apply(this, [atom2]);
var ref21=neighbors[0];
var ref22=neighbors[1];
if (ref21 == 0 && ref22 == 0 ) {
return;
}var ref2=0;
if (ref22 > 0 && ax[ref21] < ax[ref22] ) {
var d=ref21;
ref21=ref22;
ref22=d;
}bi=this.getBondIndex$I$I(atom2, ref21);
if (this.bondType$I(bi) == 1 && this.btype[bi] != 5  && slashBond[bi] == 0 ) ref2=ref21;
if (ref2 == 0 && ref22 > 0 ) {
bi=this.getBondIndex$I$I(atom2, ref22);
if (this.bondType$I(bi) == 1 && this.btype[bi] != 5 ) ref2=ref22;
}if (ref1 == 0 || ref2 == 0 ) return;
this.setCosSin$I$I(atom1, atom2);
var y1=(this.y$I(ref1) - this.y$I(atom1)) * this.temp[0] - (this.x$I(ref1) - this.x$I(atom1)) * this.temp[1];
var y2=(this.y$I(ref2) - this.y$I(atom1)) * this.temp[0] - (this.x$I(ref2) - this.x$I(atom1)) * this.temp[1];
if (Math.abs(y1) < 2  || Math.abs(y2) < 2  ) {
this.info$S("Not unique E/Z geometry !");
return;
}var b1=this.getBondIndex$I$I(ref1, atom1);
var b2=this.getBondIndex$I$I(ref2, atom2);
var newSlash=1;
if (slashBond[b1] == 0) {
for (var j=1; j <= this.nv$I(ref1); j++) {
var atomx=this.v$I(ref1)[j];
if (atomx == atom1) continue;
bi=this.getBondIndex$I$I(ref1, atomx);
if (slashBond[bi] != 0) {
if (ax[atomx] > ax[ref1]) newSlash=-slashBond[bi];
 else newSlash=slashBond[bi];
break;
}}
slashBond[b1]=newSlash;
}if (slashBond[b2] != 0) {
System.err.println$S("E/Z internal error !");
return;
}if ((y1 > 0  && y2 > 0  ) || (y1 < 0  && y2 < 0  ) ) slashBond[b2]=-slashBond[b1];
 else slashBond[b2]=slashBond[b1];
if (ref1x) slashBond[b2]=-slashBond[b2];
}, p$1);

Clazz_newMeth(C$, 'upDownBond$jme_core_Bond$I',  function (bond, atom) {
var sb=bond.stereo;
if (sb == 0 || sb > 4 ) return 0;
if (sb == 1 && bond.va == atom ) return 1;
if (sb == 2 && bond.va == atom ) return -1;
if (sb == 3 && bond.vb == atom ) return 1;
if (sb == 4 && bond.vb == atom ) return -1;
return 0;
}, 1);

Clazz_newMeth(C$, 'findCumuleneChain$I',  function (startAtom) {
var numberCumuleneAtoms=1;
var currentCumuleneAtom=startAtom;
var cumuleneAtoms;
cumuleneAtoms=Clazz_array(Integer.TYPE, [this.natoms + 1]);
if (this.atoms[startAtom].isCumuleneSP$()) {
cumuleneAtoms[0]=0;
return cumuleneAtoms;
}cumuleneAtoms[1]=startAtom;
 FIND_CUMULENE_ATOM : while (true){
 NEIGHBOR_LOOP : for (var ni=1; ni <= this.nv$I(currentCumuleneAtom); ni++) {
var atomx=this.v$I(currentCumuleneAtom)[ni];
if (atomx == cumuleneAtoms[1] || atomx == cumuleneAtoms[numberCumuleneAtoms - 1] ) continue NEIGHBOR_LOOP;
var bi=this.getBondIndex$I$I(currentCumuleneAtom, atomx);
if (this.bonds[bi].bondType == 2 && this.btype[bi] != 5 ) {
cumuleneAtoms[++numberCumuleneAtoms]=atomx;
currentCumuleneAtom=atomx;
continue FIND_CUMULENE_ATOM;
}}
break FIND_CUMULENE_ATOM;
}
cumuleneAtoms[0]=numberCumuleneAtoms;
return cumuleneAtoms;
}, p$1);

Clazz_newMeth(C$, 'stereoAllene$I$IA$IA$IA$IA$IA$I',  function (ati, ax, stereo, parent, con1, con2, nconnections) {
var cumuleneAtoms=p$1.findCumuleneChain$I.apply(this, [ati]);
var numberCumuleneAtoms=cumuleneAtoms[0];
if (numberCumuleneAtoms % 2 == 0) return;
var start=cumuleneAtoms[1];
var center=cumuleneAtoms[((numberCumuleneAtoms + 1)/2|0)];
var end=cumuleneAtoms[numberCumuleneAtoms];
if (this.nv$I(end) < 2 || this.nv$I(end) > 3 ) return;
var ref11=0;
var ref12=0;
var ref21=0;
var ref22=0;
var ref1=0;
var ref2=0;
var ref1x=false;
var ref2x=false;
for (var ni=1; ni <= this.nv$I(start); ni++) {
var atomx=this.v$I(start)[ni];
if (atomx == cumuleneAtoms[2]) continue;
if (ref11 == 0) ref11=atomx;
 else ref12=atomx;
}
if (ax[ref12] > 0 && ax[ref11] > ax[ref12] ) {
var d=ref11;
ref11=ref12;
ref12=d;
}ref1=ref11;
if (ref1 == 0) {
ref1=ref12;
ref1x=true;
}for (var j=1; j <= this.nv$I(end); j++) {
var atomx=this.v$I(end)[j];
if (atomx == cumuleneAtoms[numberCumuleneAtoms - 1]) continue;
if (ref21 == 0) ref21=atomx;
 else ref22=atomx;
}
if (ax[ref22] > 0 && ax[ref21] > ax[ref22] ) {
var d=ref21;
ref21=ref22;
ref22=d;
}ref2=ref21;
if (ref2 == 0) {
ref2=ref22;
ref2x=true;
}var ref11x=ref11 > 0 ? C$.upDownBond$jme_core_Bond$I(this.bonds[this.getBondIndex$I$I(start, ref11)], start) : 0;
var ref12x=ref12 > 0 ? C$.upDownBond$jme_core_Bond$I(this.bonds[this.getBondIndex$I$I(start, ref12)], start) : 0;
var ref21x=ref21 > 0 ? C$.upDownBond$jme_core_Bond$I(this.bonds[this.getBondIndex$I$I(end, ref21)], end) : 0;
var ref22x=ref22 > 0 ? C$.upDownBond$jme_core_Bond$I(this.bonds[this.getBondIndex$I$I(end, ref22)], end) : 0;
if (Math.abs(ref11x + ref12x) > 1 || ref21x != 0  || ref22x != 0 ) {
this.info$S("Bad stereoinfo on allene !");
return;
}var atom2=cumuleneAtoms[numberCumuleneAtoms - 1];
this.setCosSin$I$I(end, atom2);
var y2=(this.y$I(ref2) - this.y$I(atom2)) * this.temp[0] - (this.x$I(ref2) - this.x$I(atom2)) * this.temp[1];
if (y2 > 0 ) stereo[center]=1;
 else stereo[center]=-1;
if (ref1x) stereo[center]*=-1;
if (ref2x) stereo[center]*=-1;
if (ref1 == ref11 && ref11x < 0 ) stereo[center]*=-1;
if (ref1 == ref12 && ref12x < 0 ) stereo[center]*=-1;
if (ax[ref1] > ax[ref2]) stereo[center]*=-1;
}, p$1);

Clazz_newMeth(C$, 'getSmiles$jme_core_JMECore$jme_core_JMECore_Parameters$Z',  function (deepCopy, pars, isQuery) {
var nparts=deepCopy.computeMultiPartIndices$();
var parts=Clazz_array(C$, [nparts]);
for (var part=1; part <= nparts; part++) {
parts[part - 1]=Clazz_new_(C$.c$$jme_core_JMECore$I$Z,[deepCopy, part, isQuery]);
}
var result="";
for (var p=0; p < parts.length; p++) {
var smiles=parts[p].createSmilesWithSideEffect$jme_core_JMECore_Parameters(pars);
if (result.length$() > 0) {
result+=".";
}result+=smiles;
parts[p]=null;
}
return result;
}, 1);

Clazz_newMeth(C$, 'findRingBonds$IA',  function (sizes) {
for (var i=1; i <= this.nbonds; i++) {
sizes[i]=this.minimumRingSize$jme_core_Bond(this.bonds[i]);
}
});

Clazz_newMeth(C$, 'isInRing$I$IA',  function (atom, minBondRingSizes) {
for (var i=1; i <= this.nv$I(atom); i++) {
if (minBondRingSizes[this.getBondIndex$I$I(atom, this.v$I(atom)[i])] > 0) return true;
}
return false;
});

Clazz_newMeth(C$, 'setBondTypes$ZA$IA$Z',  function (isAromatic, minBondRingSizes, allowAromatic) {
this.btype=Clazz_array(Integer.TYPE, [this.nbonds + 1]);
var pa=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
if (allowAromatic) {
for (var i=1; i <= this.natoms; i++) {
pa[i]=false;
isAromatic[i]=false;
if (!this.isInRing$I$IA(i, minBondRingSizes)) continue;
if (this.nv$I(i) + this.atoms[i].nh > 3) continue;
switch (this.an$I(i)) {
case 3:
case 4:
case 7:
case 5:
case 8:
case 13:
pa[i]=true;
break;
case 32:
if (this.atoms[i].label.startsWith$S("A")) pa[i]=false;
 else pa[i]=true;
break;
}
}
}if (this.isQuery) this.doRingQueryCheck$ZA$IA(isAromatic, minBondRingSizes);
for (var b=1; b <= this.nbonds; b++) {
if (this.isSingle$I(b)) this.btype[b]=1;
 else if (this.isDouble$I(b)) this.btype[b]=2;
 else if (this.bonds[b].bondType == 3) this.btype[b]=3;
 else System.err.println$S("problems in findAromatic " + this.bonds[b].bondType);
}
 bondloop : for (var b=1; b <= this.nbonds; b++) {
if (minBondRingSizes[b] == 0) continue;
var atom1=this.bonds[b].va;
var atom2=this.bonds[b].vb;
if (!pa[atom1] || !pa[atom2] ) continue;
var a=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
for (var i=1; i <= this.nv$I(atom1); i++) {
var atom=this.v$I(atom1)[i];
if (atom != atom2 && pa[atom] ) a[atom]=true;
}
var ok=false;
while (true){
for (var i=1; i <= this.natoms; i++) {
ok=false;
if (a[i] && pa[i] && i != atom1  ) {
for (var j=1; j <= this.nv$I(i); j++) {
var atom=this.v$I(i)[j];
if (atom == atom2) {
isAromatic[atom1]=true;
isAromatic[atom2]=true;
this.btype[b]=5;
continue bondloop;
}if (!a[atom] && pa[atom] ) {
a[atom]=true;
ok=true;
}}
}if (ok) break;
}
if (!ok) break;
}
}
});

Clazz_newMeth(C$, 'doRingQueryCheck$ZA$IA',  function (isAromatic, minBondRingSizes) {
var ra=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
var doCheck=false;
for (var b=1; b <= this.nbonds; b++) {
var atom1=this.bonds[b].va;
var atom2=this.bonds[b].vb;
ra[atom1]=true;
ra[atom2]=true;
if (this.an$I(atom1) == 32 || this.an$I(atom2) == 32 ) doCheck=true;
}
if (!doCheck) return;
 bondloop1 : for (var b=1; b <= this.nbonds; b++) {
if (minBondRingSizes[b] == 0) continue;
var atom1=this.bonds[b].va;
var atom2=this.bonds[b].vb;
var a=Clazz_array(Boolean.TYPE, [this.natoms + 1]);
for (var i=1; i <= this.nv$I(atom1); i++) {
var atom=this.v$I(atom1)[i];
if (atom != atom2 && ra[atom] ) a[atom]=true;
}
var ok=false;
while (true){
for (var i=1; i <= this.natoms; i++) {
ok=false;
if (a[i] && ra[i] && i != atom1  ) {
for (var j=1; j <= this.nv$I(i); j++) {
var atom=this.v$I(i)[j];
if (atom == atom2) {
for (var k=1; k <= this.natoms; k++) {
if (!a[k]) continue;
if (this.an$I(k) == 5) {
this.AN$I$I(k, 32);
this.atoms[k].label="#8";
}if (this.an$I(k) == 4) {
this.AN$I$I(k, 32);
this.atoms[k].label="#7";
}if (this.an$I(k) == 8) {
this.AN$I$I(k, 32);
this.atoms[k].label="#16";
}}
continue bondloop1;
}if (!a[atom] && ra[atom] ) {
a[atom]=true;
ok=true;
}}
}if (ok) break;
}
if (!ok) break;
}
}
});

Clazz_newMeth(C$, 'canonize$Z',  function (computeValenceState) {
var ok;
var a=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var aold=Clazz_array(Integer.TYPE, [this.natoms + 1]);
var d=Clazz_array(Long.TYPE, [this.natoms + 1]);
var prime=Clazz_array(Long.TYPE, [this.natoms + 2]);
prime=C$.generatePrimes$I(this.natoms);
for (var i=1; i <= this.natoms; i++) {
var atom=this.atoms[i];
var xbo=1;
for (var j=1; j <= this.nbonds; j++) {
if (this.bonds[j].va == i || this.bonds[j].vb == i ) {
xbo*=this.btype[j];
}}
var xan=this.an$I(i);
if (xan == 32) {
var zlabel=this.atoms[i].label;
if (zlabel != null  && zlabel.length$() > 0 ) {
var c1=(zlabel.charCodeAt$I(0)) - 65 + 1;
var c2=0;
if (zlabel.length$() > 1) c2=(zlabel.charCodeAt$I(1)) - 97;
if (c1 < 0) c1=0;
if (c2 < 0) c2=0;
xan=c1 * 28 + c2;
}}var qq=0;
if (this.q$I(i) != 0) {
if (this.q$I(i) < -2) qq=1;
 else if (this.q$I(i) == -2) qq=2;
 else if (this.q$I(i) == -1) qq=3;
 else if (this.q$I(i) == 1) qq=4;
 else if (this.q$I(i) == 2) qq=5;
 else if (this.q$I(i) > 2) qq=6;
}var deltaIso=0;
if (atom.iso != 0) {
deltaIso=$I$(4,"getDeltaIsotopicMassOfElement$S$I",[this.getAtomLabel$I(i), atom.iso]);
if (deltaIso < 0) {
deltaIso=10 - deltaIso;
}}var xx=126;
var dFactor=xbo;
dFactor+=this.atoms[i].nh * xx;
xx*=7;
dFactor+=qq * xx;
xx*=7;
if (deltaIso != 0) dFactor+=deltaIso * xx;
xx*=7;
dFactor+=xan * xx;
xx*=783;
dFactor+=this.nv$I(i) * xx;
d[i]=dFactor;
}
var breaklevel=0;
while (true){
if (this.canonsort$IA$JA(a, d)) break;
ok=false;
for (var i=1; i <= this.natoms; i++) if (a[i] != aold[i]) {
aold[i]=a[i];
ok=true;
}
if (ok) {
for (var i=1; i <= this.natoms; i++) {
d[i]=1;
for (var j=1; j <= this.nv$I(i); j++) (d[i]=Long.$mul(d[i],(prime[a[this.v$I(i)[j]]])));

}
breaklevel=0;
} else {
if (breaklevel > 0) {
for (var i=1; i <= this.natoms; i++) d[i]=1;

 bd : for (var i=1; i <= this.natoms - 1; i++) for (var j=i + 1; j <= this.natoms; j++) if (a[i] == a[j]) {
d[i]=2;
break bd;
}

} else {
for (var i=1; i <= this.natoms; i++) {
d[i]=1;
for (var j=1; j <= this.nv$I(i); j++) {
var atom=this.v$I(i)[j];
(d[i]=Long.$mul(d[i],(this.an$I(atom) * this.btype[this.getBondIndex$I$I(i, atom)])));
}
}
breaklevel=1;
}}this.canonsort$IA$JA(a, d);
for (var i=1; i <= this.natoms; i++) d[i]=aold[i] * this.natoms + a[i];

}
for (var i=1; i <= this.natoms; i++) aold[i]=a[i];

for (var s=1; s <= this.natoms; s++) {
for (var i=1; i <= this.natoms; i++) {
if (aold[i] == s) {
C$.swap$jme_core_AtomBondCommonA$I$I(this.atoms, i, s);
aold[i]=aold[s];
aold[s]=s;
break;
}}
}
for (var i=1; i <= this.nbonds; i++) {
this.bonds[i].va=a[this.bonds[i].va];
this.bonds[i].vb=a[this.bonds[i].vb];
if (this.bonds[i].va > this.bonds[i].vb) {
var du=this.bonds[i].va;
this.bonds[i].va=this.bonds[i].vb;
this.bonds[i].vb=du;
if (this.bonds[i].stereo == 1) this.bonds[i].stereo=3;
 else if (this.bonds[i].stereo == 2) this.bonds[i].stereo=4;
 else if (this.bonds[i].stereo == 3) this.bonds[i].stereo=1;
 else if (this.bonds[i].stereo == 4) this.bonds[i].stereo=2;
}}
for (var i=1; i < this.nbonds; i++) {
var minva=this.natoms;
var minvb=this.natoms;
var b=0;
for (var j=i; j <= this.nbonds; j++) {
if (this.bonds[j].va < minva) {
minva=this.bonds[j].va;
minvb=this.bonds[j].vb;
b=j;
} else if (this.bonds[j].va == minva && this.bonds[j].vb < minvb ) {
minvb=this.bonds[j].vb;
b=j;
}}
C$.swap$jme_core_AtomBondCommonA$I$I(this.bonds, i, b);
}
this.complete$Z(computeValenceState);
});

Clazz_newMeth(C$, 'swap$jme_core_AtomBondCommonA$I$I',  function (array, i, j) {
var temp=array[j];
array[j]=array[i];
array[i]=temp;
}, 1);

Clazz_newMeth(C$, 'canonsort$IA$JA',  function (a, d) {
var min=0;
var nth=0;
var ndone=0;
while (true){
++nth;
for (var i=1; i <= this.natoms; i++) if (Long.$gt(d[i],0 )) {
min=d[i];
break;
}
for (var i=1; i <= this.natoms; i++) if (Long.$gt(d[i],0 ) && Long.$lt(d[i],min ) ) min=d[i];

for (var i=1; i <= this.natoms; i++) if (Long.$eq(d[i],min )) {
a[i]=nth;
d[i]=0;
++ndone;
}
if (ndone == this.natoms) break;
}
if (nth == this.natoms) return true;
 else return false;
});

Clazz_newMeth(C$, 'generatePrimes$I',  function (n) {
var npn;
var pn=Clazz_array(Long.TYPE, [n + 2]);
var prime=Clazz_array(Integer.TYPE, [100]);
var test=5;
var index=0;
var num=0;
var check=true;
prime[0]=3;
pn[1]=2;
pn[2]=3;
npn=2;
if (n < 3) return pn;
while (test < (prime[num] * prime[num])){
index=0;
check=true;
while (check == true  && index <= num  && test >= (prime[index] * prime[index]) ){
if (test % prime[index] == 0) check=false;
 else ++index;
}
if (check == true ) {
pn[++npn]=test;
if (npn >= n) return pn;
if (num < (prime.length - 1)) {
++num;
prime[num]=test;
}}test+=2;
}
System.err.println$S("ERROR - Prime Number generator failed !");
return pn;
}, 1);

Clazz_newMeth(C$, 'stereoTransformation$IA$IA',  function (t, ref) {
var d=0;
if (ref[0] == t[1]) {
d=t[0];
t[0]=t[1];
t[1]=d;
d=t[2];
t[2]=t[3];
t[3]=d;
} else if (ref[0] == t[2]) {
d=t[2];
t[2]=t[0];
t[0]=d;
d=t[1];
t[1]=t[3];
t[3]=d;
} else if (ref[0] == t[3]) {
d=t[3];
t[3]=t[0];
t[0]=d;
d=t[1];
t[1]=t[2];
t[2]=d;
}if (ref[1] == t[2]) {
d=t[1];
t[1]=t[2];
t[2]=d;
d=t[2];
t[2]=t[3];
t[3]=d;
} else if (ref[1] == t[3]) {
d=t[1];
t[1]=t[3];
t[3]=d;
d=t[2];
t[2]=t[3];
t[3]=d;
}}, 1);

Clazz_newMeth(C$, 'compareAngles$D$D$D$D',  function (sina, cosa, sinb, cosb) {
var qa=0;
var qb=0;
if (sina >= 0.0  && cosa >= 0.0  ) qa=1;
 else if (sina >= 0.0  && cosa < 0.0  ) qa=2;
 else if (sina < 0.0  && cosa < 0.0  ) qa=3;
 else if (sina < 0.0  && cosa >= 0.0  ) qa=4;
if (sinb >= 0.0  && cosb >= 0.0  ) qb=1;
 else if (sinb >= 0.0  && cosb < 0.0  ) qb=2;
 else if (sinb < 0.0  && cosb < 0.0  ) qb=3;
 else if (sinb < 0.0  && cosb >= 0.0  ) qb=4;
if (qa < qb) return 1;
 else if (qa > qb) return -1;
switch (qa) {
case 1:
case 4:
if (sina < sinb ) return 1;
 else return -1;
case 2:
case 3:
if (sina > sinb ) return 1;
 else return -1;
}
System.err.println$S("stereowarning #31");
return 0;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.event"),I$=[[0,'javax.swing.SwingUtilities','jme.JME','jme.event.ChangeAtomPropertyCallback','jme.gui.AtomInspector']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "InspectorEvent", null, null, 'java.awt.event.ActionListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['atomIndex','bondIndex','molIndex','x','y'],'O',['jme','jme.JME','mol','jme.JMEmol']]]

Clazz_newMeth(C$, 'c$$jme_JME',  function (jme) {
;C$.$init$.apply(this);
this.jme=jme;
}, 1);

Clazz_newMeth(C$, 'reset$',  function () {
this.mol=null;
this.molIndex=this.atomIndex=this.bondIndex=this.x=this.y=0;
});

Clazz_newMeth(C$, 'getAtomMap$',  function () {
return this.mol.findAtomMapForOutput$I(this.atomIndex);
});

Clazz_newMeth(C$, 'getAtomCharge$',  function () {
return this.mol.findAtomChargeForOutput$I(this.atomIndex);
});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
$I$(1,"invokeLater$Runnable",[((P$.InspectorEvent$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "InspectorEvent$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
var change=null;
if (this.$finals$.e.getActionCommand$.apply(this.$finals$.e, []) == $I$(2).changeAtomMapAction || this.$finals$.e.getActionCommand$.apply(this.$finals$.e, []) == $I$(2).changeAtomMarkAction ) {
var actionType=this.$finals$.e.getActionCommand$.apply(this.$finals$.e, []) == $I$(2).changeAtomMapAction ? "map" : "mark";
change=((P$.InspectorEvent$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "InspectorEvent$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('jme.event.ChangeAtomPropertyCallback'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'setAtomValue$I',  function (newValue) {
this.b$['jme.event.InspectorEvent'].changeAtomMap$I.apply(this.b$['jme.event.InspectorEvent'], [newValue]);
});

Clazz_newMeth(C$, 'getAtomValue$',  function () {
return this.b$['jme.event.InspectorEvent'].getAtomMap$.apply(this.b$['jme.event.InspectorEvent'], []);
});

Clazz_newMeth(C$, 'actionType$',  function () {
return this.$finals$.actionType;
});

Clazz_newMeth(C$, 'reportError$S',  function (errorMessage) {
this.b$['jme.event.InspectorEvent'].showError$S.apply(this.b$['jme.event.InspectorEvent'], [errorMessage]);
});

Clazz_newMeth(C$, 'finished$',  function () {
this.b$['jme.event.InspectorEvent'].jme.setAtomToHighLight$I$I.apply(this.b$['jme.event.InspectorEvent'].jme, [this.b$['jme.event.InspectorEvent'].molIndex, 0]);
this.b$['jme.event.InspectorEvent'].jme.requestFocusInWindow$.apply(this.b$['jme.event.InspectorEvent'].jme, []);
});
})()
), Clazz_new_($I$(3,1),[this, {actionType:actionType}],P$.InspectorEvent$1));
} else if (this.$finals$.e.getActionCommand$.apply(this.$finals$.e, []) == $I$(2).changeAtomChargeAction) {
var actionType="charge";
change=((P$.InspectorEvent$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "InspectorEvent$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('jme.event.ChangeAtomPropertyCallback'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'setAtomValue$I',  function (newValue) {
this.b$['jme.event.InspectorEvent'].changeAtomCharge$I.apply(this.b$['jme.event.InspectorEvent'], [newValue]);
});

Clazz_newMeth(C$, 'getAtomValue$',  function () {
return this.b$['jme.event.InspectorEvent'].getAtomCharge$.apply(this.b$['jme.event.InspectorEvent'], []);
});

Clazz_newMeth(C$, 'actionType$',  function () {
return "charge";
});

Clazz_newMeth(C$, 'reportError$S',  function (errorMessage) {
this.b$['jme.event.InspectorEvent'].showError$S.apply(this.b$['jme.event.InspectorEvent'], [errorMessage]);
});

Clazz_newMeth(C$, 'finished$',  function () {
this.b$['jme.event.InspectorEvent'].jme.setAtomToHighLight$I$I.apply(this.b$['jme.event.InspectorEvent'].jme, [this.b$['jme.event.InspectorEvent'].molIndex, 0]);
this.b$['jme.event.InspectorEvent'].jme.requestFocusInWindow$.apply(this.b$['jme.event.InspectorEvent'].jme, []);
});
})()
), Clazz_new_($I$(3,1),[this, null],P$.InspectorEvent$2));
}if (change != null ) {
change.atomSymbol=this.b$['jme.event.InspectorEvent'].mol.getAtomLabel$I.apply(this.b$['jme.event.InspectorEvent'].mol, [this.b$['jme.event.InspectorEvent'].atomIndex]);
var atomInspector=Clazz_new_($I$(4,1).c$$jme_event_ChangeAtomPropertyCallback,[change]);
this.b$['jme.event.InspectorEvent'].jme.setAtomToHighLight$I$I.apply(this.b$['jme.event.InspectorEvent'].jme, [this.b$['jme.event.InspectorEvent'].molIndex, this.b$['jme.event.InspectorEvent'].atomIndex]);
atomInspector.action$jme_event_InspectorEvent.apply(atomInspector, [this.b$['jme.event.InspectorEvent']]);
}});
})()
), Clazz_new_(P$.InspectorEvent$lambda1.$init$,[this, {e:e}]))]);
});

Clazz_newMeth(C$, 'changeAtomMap$I',  function (newMap) {
if (newMap >= 0) {
this.jme.changeAtomMap$jme_JMEmol$I$I(this.mol, this.atomIndex, newMap);
} else {
this.showError$S("Atom map or mark should be positive");
}});

Clazz_newMeth(C$, 'changeAtomCharge$I',  function (newCharge) {
this.jme.changeAtomCharge$jme_JMEmol$I$I(this.mol, this.atomIndex, newCharge);
});

Clazz_newMeth(C$, 'showError$S',  function (message) {
this.jme.showError$S(message);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.event"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "JMEStatusListener");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.event"),p$1={},I$=[[0,['jme.event.JMEevent','.Origin']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMEevent", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['Origin',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.stackLevel=0;
},1);

C$.$fields$=[['I',['atom','bond','atomBackgroundColorIndex','atomE','bondE','molecule','stackLevel'],'S',['action','argument','origin'],'O',['bondAtoms','int[]','+bondAtomsE','argumentJSO','java.lang.Object']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.reset$();
}, 1);

Clazz_newMeth(C$, 'reset$',  function () {
this.atom=0;
this.bond=0;
this.molecule=0;
this.atomBackgroundColorIndex=-1;
this.bondAtoms=Clazz_array(Integer.TYPE, -1, [0, 0]);
this.atomE=0;
this.bondE=0;
this.bondAtomsE=Clazz_array(Integer.TYPE, -1, [0, 0]);
this.action=null;
this.argument=null;
this.origin=null;
this.stackLevel=0;
return this;
});

Clazz_newMeth(C$, 'getAtom$',  function () {
return this.atom;
});

Clazz_newMeth(C$, 'log$S',  function (string) {
p$1.consoleLog$S.apply(this, [string]);
});

Clazz_newMeth(C$, 'consoleLog$S',  function (msg) {
alert('native method must be replaced! consoleLog');
}
, p$1);

Clazz_newMeth(C$, 'setAtomAndMol$jme_JMEmolList$I$I',  function (moleculeParts, atom, mol) {
this.atom=atom;
this.molecule=mol + 1;
this.atomE=moleculeParts.computeAtomEnsembleIndex$I$I(mol, atom);
var eAtom=moleculeParts.getEnsembleAtom$I$I(mol, atom);
if (eAtom != null  && eAtom.atom != null  ) {
this.atomBackgroundColorIndex=eAtom.atom.getMark$();
}return this;
});

Clazz_newMeth(C$, 'getBond$',  function () {
return this.bond;
});

Clazz_newMeth(C$, 'setBondAndMol$jme_JMEmolList$I$I',  function (moleculeParts, bond, mol) {
this.bond=bond;
if (bond > 0 && mol >= 0 ) {
this.molecule=mol;
var jmeMol=moleculeParts.get$I(mol);
this.bondAtoms[0]=jmeMol.bonds[bond].va;
this.bondAtoms[1]=jmeMol.bonds[bond].vb;
this.bondE=moleculeParts.computeBondEnsembleIndex$I$I(mol, bond);
this.bondAtomsE[0]=moleculeParts.computeAtomEnsembleIndex$I$I(mol, this.bondAtoms[0]);
this.bondAtomsE[1]=moleculeParts.computeAtomEnsembleIndex$I$I(mol, this.bondAtoms[1]);
}return this;
});

Clazz_newMeth(C$, 'getAction$',  function () {
return this.action;
});

Clazz_newMeth(C$, 'setAction$S',  function (action) {
this.action=action;
return this;
});

Clazz_newMeth(C$, 'setAtomAndBondAndMol$jme_JMEmolList$I$I$I',  function (moleculeParts, atom, bond, mol) {
this.setBondAndMol$jme_JMEmolList$I$I(moleculeParts, bond, mol);
return this.setAtomAndMol$jme_JMEmolList$I$I(moleculeParts, atom, mol);
});

Clazz_newMeth(C$, 'setArgument$S',  function (arg) {
this.argument=arg;
return this;
});

Clazz_newMeth(C$, 'setOrigin_API$',  function () {
p$1.setOriginIfNotAlreadySet$S.apply(this, [$I$(1).API]);
});

Clazz_newMeth(C$, 'setOrigin_GUI$',  function () {
p$1.setOriginIfNotAlreadySet$S.apply(this, [$I$(1).GUI]);
});

Clazz_newMeth(C$, 'setOrigin_DROP$',  function () {
p$1.setOriginIfNotAlreadySet$S.apply(this, [$I$(1).DROP]);
});

Clazz_newMeth(C$, 'setOrigin_INIT$',  function () {
p$1.setOriginIfNotAlreadySet$S.apply(this, [$I$(1).INIT]);
});

Clazz_newMeth(C$, 'setOrigin_PASTE$',  function () {
p$1.setOriginIfNotAlreadySet$S.apply(this, [$I$(1).PASTE]);
});

Clazz_newMeth(C$, 'setOriginIfNotAlreadySet$S',  function (newOrigin) {
if (this.origin == null ) {
this.origin=newOrigin;
}}, p$1);

Clazz_newMeth(C$, 'isOrigin_API$',  function () {
return this.origin == $I$(1).API;
});

Clazz_newMeth(C$, 'toString',  function () {
return "[JMEEvent " + this.action + (this.origin == null  ? "" : " origin=" + this.origin) + (this.atom > 0 ? " atom=" + this.atom : "") + (this.bond > 0 ? " bond=" + this.bond + "(" + this.bondAtoms[0] + "-" + this.bondAtoms[1] + ")"  : "") + "]" ;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMEevent, "Origin", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['S',['API','PASTE','DROP','GUI','INIT']]]

C$.$static$=function(){C$.$static$=0;
C$.API="API";
C$.PASTE="PASTE";
C$.DROP="DROP";
C$.GUI="GUI";
C$.INIT="INIT";
};

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.gui"),I$=[[0,'java.awt.event.ActionEvent','java.util.HashMap','javax.swing.KeyStroke',['jme.gui.Actions','.WrappedAction'],'javax.swing.AbstractAction']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Actions", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['WrappedAction',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.actions=Clazz_new_($I$(2,1));
this.actions0_9=0;
this.actionsBond=0;
},1);

C$.$fields$=[['I',['actions0_9','actionsBond'],'O',['jme','jme.JME','actions','java.util.Map','actionAtomBond','javax.swing.AbstractAction']]
,['O',['actionToAtomNumberArray','int[]']]]

Clazz_newMeth(C$, 'c$$jme_JME',  function (jme) {
;C$.$init$.apply(this);
this.jme=jme;
this.setActions$();
}, 1);

Clazz_newMeth(C$, 'mapActionToAtomNumberX$I',  function (action) {
if (action >= 1301 && action <= 1310 ) {
var delta=action - 1301;
return 33 + delta;
}for (var i=0; i < C$.actionToAtomNumberArray.length; i+=2) {
if (C$.actionToAtomNumberArray[i] == action) {
return C$.actionToAtomNumberArray[i + 1];
}}
return -1;
}, 1);

Clazz_newMeth(C$, 'getKeyStroke$I$I',  function (key, modifiers) {
if (modifiers == 4) {
modifiers=2;
}if (key < 127) return $I$(3,"getKeyStroke$Character$I",[Character.valueOf$C(String.fromCharCode(key)), modifiers]);
return $I$(3).getKeyStroke$I$I(key, modifiers);
});

Clazz_newMeth(C$, 'addAction$S$I$I$I$javax_swing_AbstractAction',  function (name, id, key, modifiers, a) {
a.putValue$S$O("Name", name);
if (id == 0) id=key;
if (id != 0) {
a=Clazz_new_($I$(4,1).c$$S$I$javax_swing_AbstractAction,[name, id, a]);
}this.actions.put$O$O(name, a);
if (key != 0) {
var shortcut=this.getKeyStroke$I$I(key, modifiers);
a.putValue$S$O("AcceleratorKey", shortcut);
this.actions.put$O$O(shortcut, a);
}});

Clazz_newMeth(C$, 'doAction$O$I',  function (key, id) {
var a=this.actions.get$O(key);
if (a == null ) return false;
var actionCommand=key.toString();
if (Clazz_instanceOf(a, "jme.gui.Actions.WrappedAction")) {
if (id == 0) id=(a).id;
a=(a).a;
}this.jme.startKeyboardAction$();
a.actionPerformed$java_awt_event_ActionEvent(Clazz_new_($I$(1,1).c$$O$I$S,[a, id, actionCommand]));
this.jme.endKeyboardAction$();
return true;
});

Clazz_newMeth(C$, 'setActions$',  function () {
this.addAction$S$I$I$I$javax_swing_AbstractAction("copy", 0, 67, 2, ((P$.Actions$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.copyFileToClipboard$();
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$1)));
this.addAction$S$I$I$I$javax_swing_AbstractAction("cut", 0, 88, 2, ((P$.Actions$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.cutSelectedMoleculeForSystemClipBoard$();
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$2)));
this.addAction$S$I$I$I$javax_swing_AbstractAction("paste", 0, 86, 2, ((P$.Actions$3||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$3", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
if (this.b$['jme.gui.Actions'].jme.options.paste) this.b$['jme.gui.Actions'].jme.pasteMolFileFromClipboard$();
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$3)));
var a=((P$.Actions$4||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$4", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.doUndoRedo$I(e.getID$());
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$4));
this.addAction$S$I$I$I$javax_swing_AbstractAction("redo", 1, "Y".$c(), 2, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("undo", -1, "U".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("undo", -1, "Z".$c(), 2, a);
a=((P$.Actions$5||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$5", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.doNavigate$I(e.getID$());
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$5));
this.addAction$S$I$I$I$javax_swing_AbstractAction("navigate", 0, 38, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("navigate", 0, 40, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("navigate", 0, 37, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("navigate", 0, 39, 0, a);
a=((P$.Actions$6||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$6", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.doAtomG$();
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$6));
this.addAction$S$I$I$I$javax_swing_AbstractAction("atomG", 0, 106, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atomG", 0, 151, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atomG", 0, 71, 0, a);
a=((P$.Actions$7||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$7", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.doAtomX$();
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$7));
this.addAction$S$I$I$I$javax_swing_AbstractAction("atomX", 0, 88, 0, a);
a=this.actionAtomBond=((P$.Actions$8||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$8", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.doAtomBond$I(e.getID$());
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$8));
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 104, 68, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 104, 8, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 104, 127, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 202, 27, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 209, "P".$c(), 1, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2034, "Y".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2039, "Z".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2035, "A".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2038, "E".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2058, "Q".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 223, "0".$c(), 8, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 223, "0".$c(), 1, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 205, " ".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 204, "#".$c(), 0, a);
a=((P$.Actions$9||
(function(){/*a*/var C$=Clazz_newClass(P$, "Actions$9", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.AbstractAction'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['jme.gui.Actions'].jme.doPage$I(e.getID$());
});
})()
), Clazz_new_($I$(5,1),[this, null],P$.Actions$9));
this.addAction$S$I$I$I$javax_swing_AbstractAction("page", 151, "M".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("page", 151, 33, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("page", 152, "W".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("page", 152, 34, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("page", 153, 36, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("page", 154, 35, 0, a);
});

Clazz_newMeth(C$, 'setBondVariableAction$Z',  function (isBond) {
var newActions=(isBond ? 202 : 301);
var a=this.actionAtomBond;
if (this.actionsBond != newActions) {
this.actionsBond=newActions;
if (newActions == 202) {
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 202, "-".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 201, "+".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 201, 107, 0, a);
} else {
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 108, "+".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 108, 107, 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", -1, "-".$c(), 0, a);
}}});

Clazz_newMeth(C$, 'setAtomVariableAction$Z$I',  function (isR, action) {
this.setBondVariableAction$Z(false);
var a=this.actionAtomBond;
switch (action) {
case 701:
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2036, "T".$c(), 0, a);
break;
case 801:
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2037, "T".$c(), 0, a);
break;
default:
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 2033, "T".$c(), 0, a);
break;
}
var newActions=(isR ? 1301 : 2053);
if (action == 105 && this.actions0_9 != 105 ) {
this.actions0_9=105;
for (var i=0; i <= 9; ) this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 105, "0".$c(), 0, a);

return;
}if (this.actions0_9 == newActions) {
return;
}this.actions0_9=newActions;
if (isR) {
for (var i=0; i <= 9; i++) this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 1301 + i, String.fromCharCode((48 + i)).$c(), 0, a);

} else {
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 221, "0".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 202, "1".$c(), 0, a);
var id=(action == 501 ? 2050 : 203);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", id, "2".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", id, "=".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 206, "3".$c(), 1, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 204, "3".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 207, "4".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 208, "5".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 210, "6".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 211, "7".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 212, "8".$c(), 0, a);
this.addAction$S$I$I$I$javax_swing_AbstractAction("atombond", 229, "9".$c(), 0, a);
}});

Clazz_newMeth(C$, 'dispose$',  function () {
this.jme=null;
this.actions=null;
});

C$.$static$=function(){C$.$static$=0;
C$.actionToAtomNumberArray=Clazz_array(Integer.TYPE, -1, [301, 3, 401, 4, 501, 5, 701, 9, 801, 10, 901, 11, 1001, 12, 601, 8, 1101, 7, 1300, 1, 1201, 32, 1301, 33]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.Actions, "WrappedAction", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'javax.swing.AbstractAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['id'],'S',['name'],'O',['a','javax.swing.AbstractAction']]]

Clazz_newMeth(C$, 'c$$S$I$javax_swing_AbstractAction',  function (name, id, a) {
;C$.superclazz.c$$S.apply(this,[name]);C$.$init$.apply(this);
this.id=id;
this.name=name;
this.a=a;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
var id=e.getID$();
if (this.id != 0) {
id=this.id;
e=Clazz_new_([e.getSource$(), id, this.name],$I$(1,1).c$$O$I$S);
}this.a.actionPerformed$java_awt_event_ActionEvent(e);
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.gui"),I$=[[0,'java.util.BitSet',['java.awt.geom.Rectangle2D','.Double'],'jme.gui.GUI']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AtomDisplayLabel");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.smallAtomWidthLabel=0;
this.boundingBoxpadding=2;
},1);

C$.$fields$=[['Z',['noLabelAtom'],'D',['smallAtomWidthLabel','fullAtomWidthLabel','labelX','labelY','atomMapY','atomMapX'],'I',['alignment','boundingBoxpadding'],'S',['str','mapString'],'O',['drawBox','java.awt.geom.Rectangle2D.Double','+fillSupBox','+fillBox','subscripts','java.util.BitSet','+superscripts','+bsSS']]]

Clazz_newMeth(C$, 'create$jme_core_Atom$I$java_awt_FontMetrics$D$Z$Z',  function (atom, alignment, fm, h, showHs, showMap) {
return Clazz_new_(C$.c$$jme_core_Atom$I$java_awt_FontMetrics$D$Z$Z,[atom, alignment, fm, h, showHs, showMap]);
}, 1);

Clazz_newMeth(C$, 'c$$jme_core_Atom$I$java_awt_FontMetrics$D$Z$Z',  function (a, alignment, fm, h, showHs, showMap) {
;C$.$init$.apply(this);
var map=(showMap && a.hasBeenMapped$()  ? a.getMap$() : -1);
var z=a.getLabel$();
if (z == null  || z.length$() < 1 ) {
z="*";
System.err.println$S("Z error!");
}this.alignment=alignment;
var padding=2;
this.noLabelAtom=(a.an == 3 && a.q == 0  && a.iso == 0  && a.nv > 0  && (a.nv != 2 || a.sbo != 4 ) );
var hydrogenSymbols="";
if (showHs && !this.noLabelAtom ) {
if (a.nh > 0) {
hydrogenSymbols+="H";
if (a.nh > 1) {
hydrogenSymbols+=a.nh;
}}}var isoSymbol=(a.iso == 0 ? "" : "[" + a.iso + "]" );
var chargeSymbols=(a.q == 0 ? "" : (Math.abs(a.q) > 1 ? "" + Math.abs(a.q) : "") + (a.q > 0 ? "+" : "-"));
var stringForWidth=z;
if (alignment == 2) {
z=chargeSymbols + hydrogenSymbols + isoSymbol + z ;
} else {
z=isoSymbol + z + hydrogenSymbols + chargeSymbols ;
}this.str=z;
if (alignment == 1) {
stringForWidth=z;
}if (hydrogenSymbols.length$() > 1) {
var pos=z.indexOf$S(hydrogenSymbols);
if (this.subscripts == null ) this.subscripts=Clazz_new_($I$(1,1));
this.subscripts.set$I$I(pos + 1, pos + hydrogenSymbols.length$());
}if (chargeSymbols.length$() > 0) {
var pos=z.indexOf$S(chargeSymbols);
if (this.superscripts == null ) this.superscripts=Clazz_new_($I$(1,1));
this.superscripts.set$I$I(pos, pos + chargeSymbols.length$());
}if (isoSymbol.length$() > 0) {
var pos=z.indexOf$S(isoSymbol);
if (this.superscripts == null ) this.superscripts=Clazz_new_($I$(1,1));
this.superscripts.set$I$I(pos, pos + isoSymbol.length$());
}var nsub=(this.subscripts == null  ? 0 : this.subscripts.cardinality$());
var nsup=(this.superscripts == null  ? 0 : this.superscripts.cardinality$());
var xAdj1=0;
var xAdj2=0;
var yAdj1=0;
var yAdj2=0;
var ssCharWidth=fm.charWidth$C("2");
if (nsub != 0 || nsup != 0 ) {
this.bsSS=Clazz_new_($I$(1,1));
if (nsub > 0) {
this.bsSS.or$java_util_BitSet(this.subscripts);
yAdj1=1;
}if (nsup > 0) {
this.bsSS.or$java_util_BitSet(this.superscripts);
yAdj2=1;
}xAdj2=nsup * ssCharWidth * 0.4 ;
xAdj1=nsub * ssCharWidth * 0.4 ;
}var smallWidth=fm.stringWidth$S(stringForWidth);
var fullWidth=fm.stringWidth$S(z) - xAdj1 - xAdj2 ;
this.smallAtomWidthLabel=smallWidth;
this.fullAtomWidthLabel=fullWidth;
var lineThickness=1;
var x=a.x;
var y=a.y;
var xstart=x - smallWidth / 2.0;
switch (alignment) {
case 2:
xstart-=(fullWidth - smallWidth);
xstart+=nsup * ssCharWidth * 0.6 ;
break;
case 1:
xstart+=nsup * ssCharWidth * 0.6 ;
break;
case 0:
break;
}
var ystart=y - h / 2;
xstart-=lineThickness;
fullWidth+=lineThickness;
this.fillBox=Clazz_new_($I$(2,1).c$$D$D$D$D,[xstart - padding, ystart - padding, fullWidth + 2 * padding - nsup * ssCharWidth * 0.6 , h + 2 * padding]);
this.fillSupBox=(nsup == 0 ? null : Clazz_new_($I$(2,1).c$$D$D$D$D,[xstart - padding + fullWidth - nsup * ssCharWidth * 0.6 , ystart - padding, nsup * ssCharWidth, h / 2]));
var box=this.drawBox=Clazz_new_([xstart - padding, ystart - padding - yAdj2 * h / 3 , fullWidth + 2 * padding, h + 2 * padding + (yAdj1 + yAdj2) * h / 3],$I$(2,1).c$$D$D$D$D);
this.mapString=null;
this.labelX=xstart + 1;
this.labelY=ystart + h;
if (map < 0) return;
this.mapString=" " + map;
var superscriptMove=h * 0.3;
if (this.noLabelAtom) {
this.atomMapX=x + smallWidth / 4;
this.atomMapY=y - (h + yAdj2 * 0.6) * 0.1;
} else {
var atomMapStringWidth=fm.stringWidth$S(this.mapString);
if (alignment == 0) {
this.atomMapX=x - smallWidth / 2.0 + fullWidth;
} else {
box.x-=atomMapStringWidth;
this.atomMapX=x + smallWidth / 2 - fullWidth - atomMapStringWidth;
}this.atomMapY=y - superscriptMove;
box.y-=superscriptMove;
box.height+=superscriptMove;
box.width+=atomMapStringWidth;
}}, 1);

Clazz_newMeth(C$, 'draw$jme_canvas_PreciseGraphicsAWT$java_awt_Color$D$java_awt_FontMetrics',  function (og, strokeColor, h, fm) {
var strokeWidth=h / 20;
if (this.bsSS == null ) {
og.drawStringWithStroke$S$D$D$java_awt_Color$D(this.str, this.labelX, this.labelY, strokeColor, strokeWidth);
return;
}var normalFont=og.baseGraphics.getFont$();
var subFont=normalFont.deriveFont$F((h * 0.8));
var x=this.labelX;
var y=this.labelY;
var subOffset=h / 3;
var superOffset=-2 * subOffset;
var yoff;
for (var i=0; i < this.str.length$(); ) {
var pt0=i;
var pt1=this.bsSS.nextSetBit$I(i);
if (pt1 == pt0) {
if (this.subscripts != null  && this.subscripts.get$I(i) ) {
pt1=this.subscripts.nextClearBit$I(i + 1);
yoff=subOffset;
} else {
pt1=this.superscripts.nextClearBit$I(i + 1);
yoff=superOffset;
}} else {
if (pt1 < 0) pt1=this.str.length$();
yoff=0;
}var s=this.str.substring$I$I(pt0, pt1);
if (yoff != 0 ) og.setFont$java_awt_Font(subFont);
og.drawStringWithStroke$S$D$D$java_awt_Color$D(s, x, y + yoff, strokeColor, strokeWidth);
if (yoff != 0 ) og.setFont$java_awt_Font(normalFont);
x+=fm.stringWidth$S(s) * (yoff == 0  ? 1 : 0.6);
i=pt1;
}
});

Clazz_newMeth(C$, 'createLabels$jme_JMEmol$D$java_awt_FontMetrics$Z$Z$jme_gui_AtomDisplayLabelA',  function (mol, rb, fm, showHs, showMap, labels) {
var natoms=mol.natoms;
var bonds=mol.bonds;
var atoms=mol.atoms;
if (labels == null  || labels.length < natoms + 1 ) {
labels=Clazz_array(C$, [natoms + 1]);
}var neighborXSum=Clazz_array(Double.TYPE, [natoms + 1]);
var neighborCount=Clazz_array(Integer.TYPE, [natoms + 1]);
for (var i=1, n=mol.nbonds; i <= n; i++) {
var atom1=bonds[i].va;
var atom2=bonds[i].vb;
neighborXSum[atom1]+=atoms[atom2].x;
neighborXSum[atom2]+=atoms[atom1].x;
++neighborCount[atom1];
++neighborCount[atom2];
}
var h=$I$(3).stringHeight$java_awt_FontMetrics(fm);
for (var i=1; i <= natoms; i++) {
var n=neighborCount[i];
var diff=neighborXSum[i] / n - atoms[i].x;
var alignment;
if (n > 2 || n == 0  || n == 2 && Math.abs(diff) < rb / 3   ) {
alignment=1;
} else if (n == 1 && Math.abs(diff) < rb / 10  ) {
alignment=0;
} else {
alignment=(diff < 0  ? 0 : 2);
}labels[i]=C$.create$jme_core_Atom$I$java_awt_FontMetrics$D$Z$Z(atoms[i], alignment, fm, h, showHs, showMap);
}
return labels;
}, 1);

Clazz_newMeth(C$, 'fill$jme_canvas_PreciseGraphicsAWT',  function (og) {
C$.fillBox$jme_canvas_PreciseGraphicsAWT$java_awt_geom_Rectangle2D_Double(og, this.fillBox);
if (this.fillSupBox != null ) C$.fillBox$jme_canvas_PreciseGraphicsAWT$java_awt_geom_Rectangle2D_Double(og, this.fillSupBox);
});

Clazz_newMeth(C$, 'fillBox$jme_canvas_PreciseGraphicsAWT$java_awt_geom_Rectangle2D_Double',  function (og, r) {
var h=r.height;
og.fillRoundRect$D$D$D$D$D$D(r.x, r.y, r.width, h, h / 2, h / 2);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.gui"),p$1={},I$=[[0,'java.util.BitSet','java.util.ArrayList','jme.JME','jme.gui.GUI',['jme.gui.GUI','.RingComparator'],'java.awt.Font','java.awt.FontMetrics','java.awt.Color','jme.core.Atom','java.awt.Point',['jme.gui.GUI','.Icon'],['java.awt.geom.Rectangle2D','.Double'],'javax.swing.JPopupMenu','javax.swing.JMenuItem','jme.canvas.ColorManager']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "GUI", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['Icon',9],['RingComparator',9],['Ring',9],['RingInfo',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.mustReDrawLeftMenu=true;
this.mustReDrawTopMenu=true;
this.mustReDrawMolecularArea=true;
this.mustReDrawInfo=true;
this.mustReDrawRightBorderImage=true;
this.menuCellSize=24.0;
this.uniColorMolecule=null;
},1);

C$.$fields$=[['Z',['mustReDrawLeftMenu','mustReDrawTopMenu','mustReDrawMolecularArea','mustReDrawInfo','mustReDrawRightBorderImage'],'D',['menuCellSize','ioArrowWidth'],'I',['ioMargin'],'O',['jme','jme.JME','atomDrawingAreaFont','java.awt.Font','atomDrawingAreaFontMet','java.awt.FontMetrics','atomMapDrawingAreaFont','java.awt.Font','atomMapDrawingAreaFontMet','java.awt.FontMetrics','functionalGroupPopumemu','javax.swing.JPopupMenu','functionalGroupJPopupMenuPosition','java.awt.Point','+markerJPopupMenuPosition','+fixedCopyPasteJPopupMenuPosition','dragAndDropIcon','jme.gui.GUI.Icon','+fullScreenIcon','uniColorMolecule','jme.JMEmol']]
,['Z',['isSwingJS'],'O',['touchSupported','Boolean','copyRigthSmallTextFont','java.awt.Font','+menuCellFont','+menuCellFontBold','+menuCellFontSmaller','menuCellFontMet','java.awt.FontMetrics','+menuCellFontBoldMet','+menuCellFontSmallerMet','atomDrawingAreaFontCache','java.awt.Font[]','atomDrawingAreaFontMetCache','java.awt.FontMetrics[]','atomMapDrawingAreaFontCache','java.awt.Font[]','atomMapDrawingAreaFontMetCache','java.awt.FontMetrics[]','ringComparator','jme.gui.GUI.RingComparator']]]

Clazz_newMeth(C$, 'isTouchSupported$',  function () {
if (C$.touchSupported == null ) {
var supported;
{
supported = !J2S._haveMouse;
}
C$.touchSupported=Boolean.valueOf$Z(supported);
}return C$.touchSupported.booleanValue$();
}, 1);

Clazz_newMeth(C$, 'c$$jme_JME',  function (jme) {
;C$.$init$.apply(this);
this.jme=jme;
C$.menuCellFontMet=jme.getFontMetrics$java_awt_Font(C$.menuCellFont);
C$.menuCellFontBoldMet=jme.getFontMetrics$java_awt_Font(C$.menuCellFontBold);
C$.menuCellFontSmallerMet=jme.getFontMetrics$java_awt_Font(C$.menuCellFontSmaller);
var realFs=13.0;
var fs=Math.round(realFs);
if (C$.atomDrawingAreaFontCache[fs] == null ) {
C$.atomDrawingAreaFontCache[fs]=Clazz_new_($I$(6,1).c$$S$I$I,["Helvetica", jme.options.boldAtomLabels ? 1 : 0, fs]);
}if (C$.atomDrawingAreaFontMetCache[fs] == null ) {
C$.atomDrawingAreaFontMetCache[fs]=jme.getFontMetrics$java_awt_Font(C$.atomDrawingAreaFontCache[fs]);
}this.atomDrawingAreaFont=C$.atomDrawingAreaFontCache[fs];
this.atomDrawingAreaFontMet=C$.atomDrawingAreaFontMetCache[fs];
fs=Long.$ival(Math.round$D(realFs * 0.8));
if (C$.atomMapDrawingAreaFontCache[fs] == null ) {
C$.atomMapDrawingAreaFontCache[fs]=Clazz_new_($I$(6,1).c$$S$I$I,["Helvetica", 0, fs]);
}if (C$.atomMapDrawingAreaFontMetCache[fs] == null ) {
C$.atomMapDrawingAreaFontMetCache[fs]=jme.getFontMetrics$java_awt_Font(C$.atomMapDrawingAreaFontCache[fs]);
}this.atomMapDrawingAreaFont=C$.atomMapDrawingAreaFontCache[fs];
this.atomMapDrawingAreaFontMet=C$.atomMapDrawingAreaFontMetCache[fs];
}, 1);

Clazz_newMeth(C$, 'stringHeight$java_awt_FontMetrics',  function (fm) {
return fm.getAscent$() - fm.getDescent$();
}, 1);

Clazz_newMeth(C$, 'getHumanInteractionTouchRadius$',  function () {
return 50 + (C$.isTouchSupported$() ? 300 : 120);
}, 1);

Clazz_newMeth(C$, 'createSquare$jme_canvas_PreciseGraphicsAWT$I$I',  function (g, xpos, ypos) {
var square=ypos * 100 + xpos;
var xstart=(xpos - 1) * (this.menuCellSize + this.menuCellBorder$());
var ystart=(ypos - 1) * (this.menuCellSize + this.menuCellBorder$());
if (xpos == 1 && ypos > 2 ) ystart-=(2 * this.menuCellSize);
g.setColor$java_awt_Color(this.jme.bgColor);
if (this.jme.options.newLook) {
if (square == this.jme.action) {
g.setColor$java_awt_Color(this.jme.bgColor.darker$());
}g.fillRect$D$D$D$D(xstart, ystart, this.menuCellSize, this.menuCellSize);
g.setColor$java_awt_Color($I$(8).darkGray);
g.drawRect$D$D$D$D(xstart, ystart, this.menuCellSize - 1, this.menuCellSize - 1);
} else {
if (square == this.jme.action) g.fill3DRect$D$D$D$D$Z(xstart + 1, ystart + 1, this.menuCellSize, this.menuCellSize, false);
 else g.fill3DRect$D$D$D$D$Z(xstart, ystart, this.menuCellSize, this.menuCellSize, true);
}if (!this.jme.isActionEnabled$I(square)) {
return;
}var marginFromCellBorder=this.menuCellSize / 4;
if (ypos >= 3) {
var dan=this.jme.mapActionToAtomNumberXorR$I(square);
if (dan != -1) {
var label=$I$(9).zlabel[dan];
var atomSymbolColor=this.jme.leftMenuAtomColor == null  ? $I$(3).color[dan] : this.jme.leftMenuAtomColor;
this.squareTextBold$jme_canvas_PreciseGraphicsAWT$D$D$java_awt_Color$S(g, xstart, ystart, atomSymbolColor, label);
}return;
}g.setColor$java_awt_Color($I$(8).black);
switch (square) {
case 101:
if (true) {
g.setColor$java_awt_Color($I$(8).yellow);
g.fillOval$D$D$D$D(xstart + 3, ystart + 3, this.menuCellSize - 6, this.menuCellSize - 6);
g.setColor$java_awt_Color($I$(8).black);
}g.drawOval$D$D$D$D(xstart + 3, ystart + 3, this.menuCellSize - 6, this.menuCellSize - 6);
g.drawArc$D$D$D$D$D$D(xstart + 6, ystart + 6, this.menuCellSize - 12, this.menuCellSize - 12, -35, -110);
g.fillRect$D$D$D$D(xstart + 9, ystart + 9, 2, 4);
g.fillRect$D$D$D$D(xstart + this.menuCellSize - 10, ystart + 9, 2, 4);
if (Math.random() < 0.04 ) {
g.setColor$java_awt_Color($I$(8).red);
g.fillRect$D$D$D$D(xstart + 10, ystart + 18, 4, 4);
}if (Math.random() > 0.96 ) {
g.setColor$java_awt_Color($I$(8).yellow);
g.fillRect$D$D$D$D(xstart + this.menuCellSize - 10, ystart + 8, 2, 3);
}break;
case 112:
var xFarLeft=xstart + marginFromCellBorder;
var xFarRight=xstart + this.menuCellSize - marginFromCellBorder;
var xMiddle=xstart + this.menuCellSize / 2;
g.drawLine$D$D$D$D(xFarLeft, ystart + this.menuCellSize - marginFromCellBorder, xMiddle, ystart + this.menuCellSize / 2);
g.drawLine$D$D$D$D(xstart + this.menuCellSize / 2, ystart + this.menuCellSize / 2, xFarRight, ystart + this.menuCellSize - marginFromCellBorder);
var y=ystart + this.menuCellSize - marginFromCellBorder;
var dotLength=this.menuCellSize / 24.0;
g.drawLine$D$D$D$D(xMiddle - dotLength, y, xMiddle - 2 * dotLength, y);
g.drawLine$D$D$D$D(xMiddle + dotLength, y, xMiddle + 2 * dotLength, y);
g.setColor$java_awt_Color($I$(8).magenta);
g.drawLine$D$D$D$D(xFarLeft, ystart + marginFromCellBorder, xMiddle, ystart + this.menuCellSize / 2);
g.drawLine$D$D$D$D(xstart + this.menuCellSize / 2, ystart + this.menuCellSize / 2, xFarRight, ystart + marginFromCellBorder);
y=ystart + marginFromCellBorder;
g.drawLine$D$D$D$D(xMiddle - dotLength, y, xMiddle - 2 * dotLength, y);
g.drawLine$D$D$D$D(xMiddle + dotLength, y, xMiddle + 2 * dotLength, y);
g.setColor$java_awt_Color($I$(8).black);
break;
case 107:
g.setColor$java_awt_Color($I$(8).orange);
g.fillRect$D$D$D$D(xstart + 4, ystart + 4, this.menuCellSize - 8, this.menuCellSize - 8);
g.setColor$java_awt_Color($I$(8).black);
g.drawRect$D$D$D$D(xstart + 4, ystart + 4, this.menuCellSize - 8, this.menuCellSize - 8);
g.drawArc$D$D$D$D$D$D(xstart + 6, ystart + 6, this.menuCellSize - 11, this.menuCellSize - 12, -35, -110);
g.fillRect$D$D$D$D(xstart + 9, ystart + 9, 2, 4);
g.fillRect$D$D$D$D(xstart + this.menuCellSize - 10, ystart + 9, 2, 4);
break;
case 108:
var padding=this.menuCellSize / 4;
g.drawLine$D$D$D$D(xstart + padding, ystart + this.menuCellSize - padding, xstart + this.menuCellSize - padding, ystart + padding);
var symbolSize=this.menuCellSize / 2 - padding;
var minusY=ystart + this.menuCellSize * 2 / 3;
var minusStartX=xstart + this.menuCellSize / 2;
var minusEndX=minusStartX + symbolSize;
g.drawLine$D$D$D$D(minusStartX, minusY, minusEndX, minusY);
var hY=ystart + this.menuCellSize * 1 / 3;
var hEndX=minusStartX;
var hStartX=minusStartX - symbolSize;
g.drawLine$D$D$D$D(hStartX, hY, hEndX, hY);
var vX=(hStartX + hEndX) / 2;
var vStartY=hY - symbolSize / 2;
var vEndY=vStartY + symbolSize;
g.drawLine$D$D$D$D(vX, vStartY, vX, vEndY);
break;
case 113:
if (this.jme.options.showAtomMoveJButton) {
var reduction=marginFromCellBorder / 2;
var squareSize=this.menuCellSize - 2 * marginFromCellBorder - 2 * reduction;
var brx=xstart + reduction + marginFromCellBorder ;
var bry=ystart + (brx - xstart);
g.setColor$java_awt_Color($I$(8).BLUE);
g.drawRect$D$D$D$D(brx, bry, squareSize, squareSize);
g.setColor$java_awt_Color($I$(8).BLACK);
var middleX=xstart + this.menuCellSize / 2;
var middleY=ystart + this.menuCellSize / 2;
var arrowMarginFromCellBorder=reduction;
var arrowHeight=reduction;
var arrowWidth=squareSize;
Clazz_assert(C$, this, function(){return arrowHeight > 0 });
var xLeft=brx;
var xRight=brx + arrowWidth;
var yTop=ystart + arrowMarginFromCellBorder;
var yBottom=yTop + arrowHeight;
g.drawLine$D$D$D$D(xLeft, yBottom, middleX, yTop);
g.drawLine$D$D$D$D(middleX, yTop, xRight, yBottom);
yBottom=bry + squareSize + reduction ;
yTop=yBottom + arrowHeight;
g.drawLine$D$D$D$D(xLeft, yBottom, middleX, yTop);
g.drawLine$D$D$D$D(middleX, yTop, xRight, yBottom);
xLeft=xstart + reduction;
xRight=xLeft + arrowHeight;
yTop=bry;
yBottom=yTop + arrowWidth;
g.drawLine$D$D$D$D(xRight, yTop, xLeft, middleY);
g.drawLine$D$D$D$D(xLeft, middleY, xRight, yBottom);
xLeft=brx + squareSize + reduction ;
xRight=xLeft + arrowHeight;
g.drawLine$D$D$D$D(xLeft, yTop, xRight, middleY);
g.drawLine$D$D$D$D(xRight, middleY, xLeft, yBottom);
}break;
case 110:
C$.drawUndoOrRedoArrowMenuCell$jme_canvas_PreciseGraphicsAWT$D$D$D$Z(g, xstart, ystart, this.menuCellSize, true);
break;
case 111:
C$.drawUndoOrRedoArrowMenuCell$jme_canvas_PreciseGraphicsAWT$D$D$D$Z(g, xstart, ystart, this.menuCellSize, false);
break;
case 214:
this.drawInputOutputArrowsMenuCell$jme_canvas_PreciseGraphicsAWT$D$D$D(g, xstart, ystart, this.menuCellSize);
this.fixedCopyPasteJPopupMenuPosition=Clazz_new_([(xstart|0), (ystart|0)],$I$(10,1).c$$I$I);
break;
case 109:
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2);
g.drawLine$D$D$D$D(xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder * 3 / 2, ystart + this.menuCellSize / 2 + marginFromCellBorder / 2);
g.drawLine$D$D$D$D(xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder * 3 / 2, ystart + this.menuCellSize / 2 - marginFromCellBorder / 2);
break;
case 102:
g.setColor$java_awt_Color($I$(8).white);
g.fillRect$D$D$D$D(xstart + 3, ystart + 5, this.menuCellSize - 7, this.menuCellSize - 11);
g.setColor$java_awt_Color($I$(8).black);
g.drawRect$D$D$D$D(xstart + 3, ystart + 5, this.menuCellSize - 7, this.menuCellSize - 11);
break;
case 103:
g.setColor$java_awt_Color(this.jme.bgColor);
if (this.jme.newMolecule) g.fill3DRect$D$D$D$D$Z(xstart + 1, ystart + 1, this.menuCellSize, this.menuCellSize, false);
g.setColor$java_awt_Color($I$(8).black);
this.squareText$jme_canvas_PreciseGraphicsAWT$D$D$S(g, xstart, ystart, "NEW");
break;
case 106:
g.setColor$java_awt_Color($I$(8).red);
g.drawLine$D$D$D$D(xstart + 7, ystart + 7, xstart + this.menuCellSize - 7, ystart + this.menuCellSize - 7);
g.drawLine$D$D$D$D(xstart + 7, ystart + this.menuCellSize - 7, xstart + this.menuCellSize - 7, ystart + 7);
g.setColor$java_awt_Color($I$(8).black);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + 12, ystart + this.menuCellSize / 2);
this.squareText$jme_canvas_PreciseGraphicsAWT$D$D$S(g, xstart + 6, ystart, "R");
break;
case 104:
g.setColor$java_awt_Color($I$(8).red);
g.drawLine$D$D$D$D(xstart + 7, ystart + 7, xstart + this.menuCellSize - 7, ystart + this.menuCellSize - 7);
g.drawLine$D$D$D$D(xstart + 7, ystart + this.menuCellSize - 7, xstart + this.menuCellSize - 7, ystart + 7);
g.setColor$java_awt_Color($I$(8).black);
break;
case 105:
if (!this.jme.options.starNothing) {
if (this.jme.params.mark) {
var pseudoRadius=9;
var color=this.jme.colorManager.getColor$I(this.jme.activeMarkerColorIndex);
if (color != null ) {
g.setColor$java_awt_Color(color);
g.fillOval$D$D$D$D(xstart + pseudoRadius / 2, ystart + pseudoRadius / 2, this.menuCellSize - pseudoRadius, this.menuCellSize - pseudoRadius);
g.setColor$java_awt_Color($I$(8).black);
} else {
this.jme.showInfo$S("invalid color index:" + this.jme.activeMarkerColorIndex);
Clazz_assert(C$, this, function(){return (false)});
}} else {
this.squareText$jme_canvas_PreciseGraphicsAWT$D$D$S(g, xstart, ystart, "123");
}this.markerJPopupMenuPosition=Clazz_new_([(xstart|0), (ystart|0)],$I$(10,1).c$$I$I);
}break;
case 114:
g.setColor$java_awt_Color($I$(8).blue);
var coloredRectSize=this.menuCellSize - 8;
var coloredRectSizeX=xstart + (this.menuCellSize - coloredRectSize) / 2;
var coloredRectSizeY=ystart + (this.menuCellSize - coloredRectSize) / 2;
g.fillRect$D$D$D$D(coloredRectSizeX, coloredRectSizeY, coloredRectSize, coloredRectSize);
g.setColor$java_awt_Color($I$(8).black);
this.squareTextBold$jme_canvas_PreciseGraphicsAWT$D$D$java_awt_Color$S(g, xstart, ystart, $I$(8).white, "i");
break;
case 201:
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 + 2);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 - 2);
g.drawLine$D$D$D$D(xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 + 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 - 2);
break;
case 202:
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2);
break;
case 203:
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2 - 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 - 2);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2 + 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 + 2);
break;
case 204:
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2 - 3, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 - 3);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder, ystart + this.menuCellSize / 2 + 3, xstart + this.menuCellSize - marginFromCellBorder, ystart + this.menuCellSize / 2 + 3);
break;
case 205:
g.drawLine$D$D$D$D(xstart + marginFromCellBorder / 2, ystart + marginFromCellBorder * 2 + marginFromCellBorder / 3, xstart + marginFromCellBorder / 2 * 3, ystart + marginFromCellBorder * 2 - marginFromCellBorder / 3);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder / 2 * 3, ystart + marginFromCellBorder * 2 - marginFromCellBorder / 3, xstart + marginFromCellBorder / 2 * 5, ystart + marginFromCellBorder * 2 + marginFromCellBorder / 3);
g.drawLine$D$D$D$D(xstart + marginFromCellBorder / 2 * 5, ystart + marginFromCellBorder * 2 + marginFromCellBorder / 3, xstart + marginFromCellBorder / 2 * 7, ystart + marginFromCellBorder * 2 - marginFromCellBorder / 3);
break;
case 206:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart + 2, 3);
break;
case 207:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart, 4);
break;
case 208:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart, 5);
break;
case 209:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart, 1);
break;
case 210:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart, 6);
break;
case 211:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart, 7);
break;
case 212:
this.drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I(g, xstart, ystart, 8);
break;
case 213:
if (this.jme.options.fgMenuOption) {
this.squareText$jme_canvas_PreciseGraphicsAWT$D$D$S(g, xstart, ystart, "FG");
this.functionalGroupJPopupMenuPosition=Clazz_new_([(xstart|0), (ystart|0)],$I$(10,1).c$$I$I);
}break;
}
});

Clazz_newMeth(C$, 'drawUndoOrRedoArrowMenuCell$jme_canvas_PreciseGraphicsAWT$D$D$D$Z',  function (g, xstart, ystart, cellSize, undo) {
var arrowWidth=(cellSize / 4.0);
var arrowHeight=arrowWidth;
var margin=2;
ystart-=1;
var xStartArrowLine=margin;
var xArrowTip=xStartArrowLine + arrowWidth / 2.0;
var xEndArrowLine=xStartArrowLine + arrowWidth;
var yStartArrowLine=ystart + (10.0 * cellSize / 24.0);
var yArrowTip=yStartArrowLine + arrowHeight;
var xEnd=xstart + cellSize;
var absoluteXArrowTip=0;
var absoluteXstartArrowLine=0;
var absoluteXEndArrowLine=0;
if (undo) {
absoluteXstartArrowLine=xStartArrowLine + xstart;
absoluteXArrowTip=xArrowTip + xstart;
absoluteXEndArrowLine=xEndArrowLine + xstart;
} else {
absoluteXArrowTip=xEnd - xArrowTip;
absoluteXstartArrowLine=xEnd - xStartArrowLine;
absoluteXEndArrowLine=xEnd - xEndArrowLine;
}g.drawLine$D$D$D$D(absoluteXstartArrowLine, yStartArrowLine, absoluteXArrowTip, yArrowTip);
g.drawLine$D$D$D$D(absoluteXEndArrowLine, yStartArrowLine, absoluteXArrowTip, yArrowTip);
var yArrowCenterCorrection=arrowHeight / 3 - 0.5;
g.drawLine$D$D$D$D(absoluteXArrowTip, yStartArrowLine + yArrowCenterCorrection, absoluteXArrowTip, yArrowTip);
var xStartArcBoxTopLeft=xArrowTip;
var yStartArcBoxTopLeft=ystart + xStartArcBoxTopLeft;
var arcBoxWidth=cellSize - xStartArcBoxTopLeft - 2 * margin ;
var arcBoxHeight=cellSize - 2 * margin;
yStartArcBoxTopLeft-=yArrowCenterCorrection;
arcBoxHeight-=yArrowCenterCorrection;
arcBoxHeight-=1;
var arcSpan=270;
var startAngle=0;
var absoluteXxtartArcBoxTopLeft=0;
if (undo) {
absoluteXxtartArcBoxTopLeft=xstart + xStartArcBoxTopLeft;
startAngle=270;
} else {
absoluteXxtartArcBoxTopLeft=xEnd - arcBoxWidth - xStartArcBoxTopLeft ;
arcSpan*=-1;
startAngle=-90;
}g.drawArc$D$D$D$D$D$D(absoluteXxtartArcBoxTopLeft, yStartArcBoxTopLeft, arcBoxWidth, arcBoxHeight, startAngle, arcSpan);
}, 1);

Clazz_newMeth(C$, 'drawInputOutputArrowsMenuCell$jme_canvas_PreciseGraphicsAWT$D$D$D',  function (g, xstart, ystart, cellSize) {
var arrowWidth=this.ioArrowWidth;
var arrowHeight=arrowWidth;
var margin=this.ioMargin;
var xStartArrowLine=margin + xstart;
var xArrowTip=xStartArrowLine + arrowWidth / 2.0;
var xEndArrowLine=xStartArrowLine + arrowWidth;
var yStartArrowLine=ystart + margin;
var yArrowTip=yStartArrowLine + arrowHeight;
g.setColor$java_awt_Color($I$(8).BLUE);
g.fillPolygon$DA$DA$I(Clazz_array(Double.TYPE, -1, [xStartArrowLine, xArrowTip, xEndArrowLine]), Clazz_array(Double.TYPE, -1, [yStartArrowLine, yArrowTip, yStartArrowLine]), 3);
xStartArrowLine=xArrowTip;
xArrowTip=xStartArrowLine + arrowWidth / 2.0;
xEndArrowLine=xStartArrowLine + arrowWidth;
yArrowTip=yStartArrowLine + arrowHeight / 2.0;
yStartArrowLine=yArrowTip + arrowHeight;
g.fillPolygon$DA$DA$I(Clazz_array(Double.TYPE, -1, [xStartArrowLine, xArrowTip, xEndArrowLine]), Clazz_array(Double.TYPE, -1, [yStartArrowLine, yArrowTip, yStartArrowLine]), 3);
});

Clazz_newMeth(C$, 'drawDragAndDropIcon$jme_canvas_PreciseGraphicsAWT$D',  function (g, iconScale) {
var graphicsContainerWidth=g.getWidth$();
var graphicsContainerHeight=g.getHeight$();
var margin=this.ioMargin * iconScale;
var arrowWidth=this.ioArrowWidth * iconScale;
var arrowHeight=arrowWidth;
if (this.dragAndDropIcon == null ) this.dragAndDropIcon=Clazz_new_($I$(11,1).c$$jme_canvas_PreciseGraphicsAWT,[g]);
 else this.dragAndDropIcon.pg=g;
if (this.jme.isDepict$()) {
margin=0;
}var xStartArrowLine=graphicsContainerWidth - margin - arrowWidth ;
var xArrowTip=xStartArrowLine + arrowWidth;
var yArrowBottom;
var yArrowTop;
var yArrowMiddle;
if (!this.jme.isDepict$()) {
yArrowMiddle=graphicsContainerHeight / 2;
yArrowBottom=yArrowMiddle + arrowHeight / 2;
yArrowTop=yArrowMiddle - arrowHeight / 2;
} else {
yArrowBottom=graphicsContainerHeight;
yArrowTop=yArrowBottom - arrowHeight;
yArrowMiddle=(yArrowTop + yArrowBottom) / 2;
}g.setColor$java_awt_Color($I$(8).BLUE);
g.fillPolygon$DA$DA$I(Clazz_array(Double.TYPE, -1, [xStartArrowLine, xArrowTip, xStartArrowLine]), Clazz_array(Double.TYPE, -1, [yArrowTop, yArrowMiddle, yArrowBottom]), 3);
this.dragAndDropIcon.setRect$D$D$D$D(xStartArrowLine, yArrowTop, arrowWidth, arrowHeight);
});

Clazz_newMeth(C$, 'drawRightBorderImage$java_awt_Graphics',  function (g) {
if (!this.mustReDrawRightBorderImage) return;
var screenArea=Clazz_new_([this.jme.dimension.width - this.jme.rightBorder$(), this.jme.topMenuHeight$(), this.jme.rightBorder$(), this.jme.molecularArea.height],$I$(12,1).c$$D$D$D$D);
var og=C$.getScaledGraphicsOfPreciseImage$jme_canvas_PreciseImage$D$java_awt_geom_Rectangle2D_Double(this.jme.rightBorderImage, this.jme.menuScale, screenArea);
var imgWidth=this.jme.rightBorder$D(1);
var imgHeight=screenArea.height / this.jme.menuScale;
if (this.jme.options.newLook) {
og.setColor$java_awt_Color($I$(8).darkGray);
og.fillRect$D$D$D$D(0, 0, imgWidth, imgHeight);
} else {
og.setColor$java_awt_Color(this.jme.bgColor.darker$());
og.drawLine$D$D$D$D(imgWidth - 1, 0, imgWidth - 1, imgHeight);
og.setColor$java_awt_Color(this.jme.bgColor);
og.drawLine$D$D$D$D(imgWidth - 2, 0, imgWidth - 2, imgHeight);
og.setColor$java_awt_Color(this.jme.brightColor);
og.drawLine$D$D$D$D(imgWidth - 3, 0, imgWidth - 3, imgHeight);
}g.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(this.jme.rightBorderImage.getImage$(), (screenArea.x|0), (screenArea.y|0), this.jme);
});

Clazz_newMeth(C$, 'drawTopMenu$java_awt_Graphics',  function (g) {
if (this.jme.topMenuImage == null ) return;
var action=this.jme.action;
var screenArea=Clazz_new_([0, 0, this.jme.dimension.width, this.jme.topMenuHeight$()],$I$(12,1).c$$D$D$D$D);
var og=C$.getScaledGraphicsOfPreciseImage$jme_canvas_PreciseImage$D$java_awt_geom_Rectangle2D_Double(this.jme.topMenuImage, this.jme.menuScale, screenArea);
var imgWidth=this.jme.dimension.width / this.jme.menuScale;
var imgHeight=this.jme.topMenuHeight$D(1.0);
og.setColor$java_awt_Color(this.jme.bgColor);
og.fillRect$D$D$D$D(0, 0, imgWidth, imgHeight);
if (this.jme.options.newLook) {
og.setColor$java_awt_Color(this.jme.bgColor.darker$());
var s=(this.menuCellSize + this.menuCellBorder$()) * 14;
og.drawRect$D$D$D$D(s, 0, imgWidth - s - 1 , imgHeight - 1);
} else {
og.setColor$java_awt_Color(this.jme.bgColor.darker$());
og.drawLine$D$D$D$D(imgWidth - 1, 0, imgWidth - 1, imgHeight - 1);
og.drawLine$D$D$D$D(0, imgHeight - 1, imgWidth - 1, imgHeight - 1);
og.setColor$java_awt_Color(this.jme.brightColor);
og.drawLine$D$D$D$D(0, 0, imgWidth - 1, 0);
}var savedAction=action;
if (2033 <= action && action <= 2062 ) {
action=213;
}for (var i=1; i <= 14; i++) {
this.createSquare$jme_canvas_PreciseGraphicsAWT$I$I(og, i, 1);
this.createSquare$jme_canvas_PreciseGraphicsAWT$I$I(og, i, 2);
}
action=savedAction;
g.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(this.jme.topMenuImage.getImage$(), 0, 0, this.jme);
});

Clazz_newMeth(C$, 'drawLeftMenu$java_awt_Graphics',  function (g) {
var screenArea=Clazz_new_([0, this.jme.topMenuHeight$(), this.jme.leftMenuWidth$(), this.jme.dimension.height - this.jme.topMenuHeight$()],$I$(12,1).c$$D$D$D$D);
var og=C$.getScaledGraphicsOfPreciseImage$jme_canvas_PreciseImage$D$java_awt_geom_Rectangle2D_Double(this.jme.leftMenuImage, this.jme.menuScale, screenArea);
var imgWidth=this.jme.leftMenuWidth$D(1);
var imgHeight=(this.jme.dimension.height - this.jme.topMenuHeight$()) / this.jme.menuScale;
og.setColor$java_awt_Color(this.jme.bgColor);
og.fillRect$D$D$D$D(0, 0, imgWidth, imgHeight);
var yInfoArea=imgHeight - this.jme.infoAreaHeight$D(1);
var leftMenuCellCount=this.jme.getLeftMenuCellCount$();
if (this.jme.options.newLook) {
og.setColor$java_awt_Color($I$(8).darkGray);
var y=leftMenuCellCount * (this.menuCellSize + this.menuCellBorder$()) + 3;
if (yInfoArea > y ) {
og.drawLine$D$D$D$D(0, y, this.menuCellSize - 1, y);
og.drawLine$D$D$D$D(0, y, 0, imgHeight - 1);
og.drawLine$D$D$D$D(this.menuCellSize - 1, y, this.menuCellSize - 1, yInfoArea);
og.drawLine$D$D$D$D(this.menuCellSize - 1, yInfoArea, imgWidth, yInfoArea);
}og.drawLine$D$D$D$D(0, imgHeight - 1, imgWidth, imgHeight - 1);
} else {
og.setColor$java_awt_Color(this.jme.brightColor);
og.drawLine$D$D$D$D(0, 0, 0, imgHeight - 1);
og.drawLine$D$D$D$D(0, leftMenuCellCount * this.menuCellSize, imgHeight - 1, leftMenuCellCount * this.menuCellSize);
og.setColor$java_awt_Color(this.jme.bgColor.darker$());
og.drawLine$D$D$D$D(imgWidth - 1, 0, imgWidth - 1, yInfoArea + 1);
og.drawLine$D$D$D$D(0, imgHeight - 1, imgWidth - 0, imgHeight - 1);
}for (var i=3; i <= leftMenuCellCount + 2; i++) {
this.createSquare$jme_canvas_PreciseGraphicsAWT$I$I(og, 1, i);
}
g.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(this.jme.leftMenuImage.getImage$(), (screenArea.x|0), (screenArea.y|0), this.jme);
});

Clazz_newMeth(C$, 'drawInfo$java_awt_Graphics',  function (g) {
var text=(this.jme.infoText == null  ? "" : this.jme.infoText);
var textYPosition=15;
var screenArea=Clazz_new_([this.jme.leftMenuWidth$(), this.jme.dimension.height - this.jme.infoAreaHeight$(), this.jme.dimension.width - this.jme.leftMenuWidth$(), this.jme.infoAreaHeight$()],$I$(12,1).c$$D$D$D$D);
var og=C$.getScaledGraphicsOfPreciseImage$jme_canvas_PreciseImage$D$java_awt_geom_Rectangle2D_Double(this.jme.infoAreaImage, this.jme.menuScale, screenArea);
var imgWidth=screenArea.width / this.jme.menuScale;
var imgHeight=this.jme.infoAreaHeight$D(1);
og.setColor$java_awt_Color(this.jme.bgColor);
og.fillRect$D$D$D$D(0, 0, imgWidth, imgHeight);
if (this.jme.options.newLook) {
og.setColor$java_awt_Color($I$(8).darkGray);
og.drawRect$D$D$D$D(-10, 0, imgWidth - 1 + 10, imgHeight - 1);
} else {
og.setColor$java_awt_Color(this.jme.brightColor);
og.drawLine$D$D$D$D(0, 0, imgWidth - this.jme.rightBorder$D(1) + 1, 0);
og.setColor$java_awt_Color(this.jme.bgColor.darker$());
og.drawLine$D$D$D$D(0, imgHeight - 1, imgWidth - 1, imgHeight - 1);
og.drawLine$D$D$D$D(imgWidth - 1, 0, imgWidth - 1, imgHeight - 1);
}og.setFont$java_awt_Font(C$.menuCellFontSmaller);
og.setColor$java_awt_Color($I$(8).black);
if (text.toLowerCase$().contains$CharSequence("error")) og.setColor$java_awt_Color($I$(8).red);
og.drawString$S$D$D(text, 10, textYPosition);
if (!this.jme.isDepict$()) {
this.drawDragAndDropIcon$jme_canvas_PreciseGraphicsAWT$D(og, 1.0);
if (this.jme.options.fullScreenIconOption && $I$(3).isFullScreenSupported$() ) this.drawFullScreenIcon$jme_canvas_PreciseGraphicsAWT$D$jme_gui_GUI_Icon(og, 1.0, this.dragAndDropIcon);
 else this.fullScreenIcon=null;
}if (imgWidth > 100  && this.jme.doDrawChiralText$() ) {
var chiralText="Chiral";
og.setColor$java_awt_Color($I$(8).black);
og.drawString$S$D$D(chiralText, imgWidth - 100, textYPosition);
}g.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(this.jme.infoAreaImage.getImage$(), (screenArea.x|0), (screenArea.y|0), this.jme);
});

Clazz_newMeth(C$, 'draw$java_awt_Graphics',  function (g2d) {
this.ioMargin=3;
this.ioArrowWidth=(this.menuCellSize - 2 * this.ioMargin) / 1.5;
this.drawInfo$java_awt_Graphics(g2d);
this.drawTopMenu$java_awt_Graphics(g2d);
this.drawLeftMenu$java_awt_Graphics(g2d);
this.drawRightBorderImage$java_awt_Graphics(g2d);
});

Clazz_newMeth(C$, 'squareText$jme_canvas_PreciseGraphicsAWT$D$D$S',  function (g, xstart, ystart, text) {
var fm=C$.menuCellFontMet;
var w=fm.stringWidth$S(text);
if (w >= this.menuCellSize - 1 ) {
var size=fm.getFont$().getSize$();
while (w >= this.menuCellSize - 1  && size > 1 ){
--size;
var smallerFont=Clazz_new_([fm.getFont$().getName$(), fm.getFont$().getStyle$(), size],$I$(6,1).c$$S$I$I);
fm=this.jme.getFontMetrics$java_awt_Font(smallerFont);
w=fm.stringWidth$S(text);
g.setFont$java_awt_Font(smallerFont);
}
} else {
g.setFont$java_awt_Font(C$.menuCellFont);
}var h=C$.stringHeight$java_awt_FontMetrics(fm);
g.drawString$S$D$D(text, xstart + (this.menuCellSize - w) / 2, ystart + (this.menuCellSize - h) / 2 + h);
});

Clazz_newMeth(C$, 'squareTextBold$jme_canvas_PreciseGraphicsAWT$D$D$java_awt_Color$S',  function (g, xstart, ystart, col, text) {
var h=C$.stringHeight$java_awt_FontMetrics(C$.menuCellFontBoldMet);
var w=C$.menuCellFontBoldMet.stringWidth$S(text);
g.setFont$java_awt_Font(C$.menuCellFontBold);
g.setColor$java_awt_Color(col);
g.drawString$S$D$D(text, xstart + (this.menuCellSize - w) / 2, ystart + (this.menuCellSize - h) / 2 + h);
});

Clazz_newMeth(C$, 'drawRingIcon$jme_canvas_PreciseGraphicsAWT$D$D$I',  function (g, xstart, d, n) {
var m=this.menuCellSize / 4;
var ph=false;
var xp=Clazz_array(Double.TYPE, [9]);
var yp=Clazz_array(Double.TYPE, [9]);
var xcenter=xstart + this.menuCellSize / 2;
var ycenter=d + this.menuCellSize / 2;
var rc=this.menuCellSize / 2 - m / 2;
if (n == 1) {
n=6;
ph=true;
}for (var i=0; i <= n; i++) {
var uhol=6.283185307179586 / n * (i - 0.5);
xp[i]=xcenter + rc * Math.sin(uhol);
yp[i]=ycenter + rc * Math.cos(uhol);
}
g.drawPolygon$DA$DA$I(xp, yp, n + 1);
if (ph) {
for (var i=0; i <= n; i++) {
var uhol=6.283185307179586 / n * (i - 0.5);
xp[i]=xcenter + (rc - 3) * Math.sin(uhol);
yp[i]=ycenter + (rc - 3) * Math.cos(uhol);
}
g.drawLine$D$D$D$D(xp[0], yp[0], xp[1], yp[1]);
g.drawLine$D$D$D$D(xp[2], yp[2], xp[3], yp[3]);
g.drawLine$D$D$D$D(xp[4], yp[4], xp[5], yp[5]);
}});

Clazz_newMeth(C$, 'drawFullScreenIcon$jme_canvas_PreciseGraphicsAWT$D$jme_gui_GUI_Icon',  function (g, iconScale, rightIcon) {
var expand=!this.jme.isFullScreen$();
if (this.fullScreenIcon == null ) {
this.fullScreenIcon=Clazz_new_($I$(11,1).c$$jme_canvas_PreciseGraphicsAWT,[g]);
} else {
this.fullScreenIcon.pg=g;
}var margin=this.ioMargin * iconScale;
var iconHeight=this.ioArrowWidth * iconScale;
var rightX=g.getWidth$();
var graphicsContainerHeight=g.getHeight$();
if (rightIcon != null ) {
rightX=rightIcon.x;
iconHeight=rightIcon.height;
rightX-=2 * margin;
}var rectangleWidth=iconHeight * 16 / 9;
var startSize=1.0;
var endSize=0.3;
var startColor=0;
var endColor=1.0;
var steps=20;
var firstLoop=true;
for (var relativeSize=startSize; relativeSize >= endSize ; relativeSize-=(startSize - endSize) / steps) {
var c=((startSize - relativeSize) * (endColor - startColor) / (startSize - endSize));
if (!expand) {
c=endColor - c;
}var color=Clazz_new_($I$(8,1).c$$F$F$F,[c, c, 1.0]);
g.setColor$java_awt_Color(color);
var h=iconHeight * relativeSize;
var w=h / iconHeight * rectangleWidth;
var x=rightX - rectangleWidth + (rectangleWidth - w) / 2;
var y;
if (!this.jme.isDepict$()) {
y=graphicsContainerHeight / 2 - h / 2;
} else {
y=graphicsContainerHeight - iconHeight / 2 - h / 2;
}g.fillRect$D$D$D$D(x, y, w, h);
if (firstLoop) {
firstLoop=false;
this.fullScreenIcon.setRect$D$D$D$D(x, y, w, h);
}}
});

Clazz_newMeth(C$, 'menuCellBorder$',  function () {
return (this.jme.options.newLook ? 1 : 0);
});

Clazz_newMeth(C$, 'getFunctionalGroupPopumemu$',  function () {
if (this.functionalGroupPopumemu == null ) {
this.functionalGroupPopumemu=this.createFunctionalGroupPopumemu$();
}return this.functionalGroupPopumemu;
});

Clazz_newMeth(C$, 'createFunctionalGroupPopumemu$',  function () {
var popup=Clazz_new_($I$(13,1));
for (var eachFG, $eachFG = 0, $$eachFG = this.jme.functionalGroups; $eachFG<$$eachFG.length&&((eachFG=($$eachFG[$eachFG])),1);$eachFG++) {
var mi=Clazz_new_($I$(14,1).c$$S,[eachFG]);
popup.add$javax_swing_JMenuItem(mi);
mi.setActionCommand$S(eachFG);
mi.addActionListener$java_awt_event_ActionListener(this.jme);
}
this.jme.add$java_awt_Component(popup);
return popup;
});

Clazz_newMeth(C$, 'createFBackgroundColorPopumemu$',  function () {
var popup=Clazz_new_($I$(13,1));
for (var i=1; i < this.jme.colorManager.psColor.length; i++) {
var ci=this.jme.colorManager.getColorInfo$I(i);
var color=ci.color;
var label=ci.name;
var colorrHash=ci.hash;
;var mi=Clazz_new_([label + "\t" + $I$(15).makeHexColor$java_awt_Color(color) ],$I$(14,1).c$$S);
popup.add$javax_swing_JMenuItem(mi);
mi.setActionCommand$S(colorrHash);
mi.addActionListener$java_awt_event_ActionListener(this.jme);
}
this.jme.add$java_awt_Component(popup);
return popup;
});

Clazz_newMeth(C$, 'mustRedrawNSomething$',  function () {
return this.mustReDrawLeftMenu || this.mustReDrawTopMenu || this.mustReDrawMolecularArea || this.mustReDrawInfo || this.mustReDrawRightBorderImage  ;
});

Clazz_newMeth(C$, 'getScaledGraphicsOfPreciseImage$jme_canvas_PreciseImage$D$java_awt_geom_Rectangle2D_Double',  function (pi, scale, screenArea) {
var og=pi.getGraphics$D(true ? scale : 1);
og.setDrawOnScreenCoordinates$java_awt_geom_Rectangle2D_Double(screenArea);
return og;
}, 1);

Clazz_newMeth(C$, 'getAtomDrawingFont$',  function () {
return this.atomDrawingAreaFont;
});

Clazz_newMeth(C$, 'getAtomDrawingFontMetrics$',  function () {
return this.atomDrawingAreaFontMet;
});

Clazz_newMeth(C$, 'determineMenuAction$D$D$Z',  function (x, y, ignoreDisabledActions) {
var action=0;
x=Long.$ival(Math.round$D(x / this.jme.menuScale));
y=Long.$ival(Math.round$D(y / this.jme.menuScale));
if (x < this.jme.leftMenuWidth$D(1.0)  || y < this.jme.topMenuHeight$D(1.0)  ) {
var xbutton=0;
for (var i=1; i <= 14; i++) if (x < i * (this.menuCellSize + this.menuCellBorder$()) ) {
xbutton=i;
break;
}
var ybutton=0;
var n=this.jme.getLeftMenuCellCount$();
var h=this.menuCellSize + this.menuCellBorder$();
for (var i=1; i <= n + 2; i++) {
if (y < i * h ) {
ybutton=i;
break;
}}
if (xbutton > 0 && ybutton > 0 ) {
action=ybutton * 100 + xbutton;
}}if (ignoreDisabledActions) {
switch (action) {
case 109:
if (!this.jme.options.reaction) action=0;
break;
case 213:
if (!this.jme.options.fgMenuOption) action=0;
break;
case 105:
if (this.jme.options.starNothing) {
action=0;
}break;
}
}return action;
});

Clazz_newMeth(C$, 'handleMouseEnterActionMenu$I$jme_JMEmol',  function (action, mol) {
var note=null;
switch (action) {
case 103:
note="Add new molecule";
break;
case 113:
note="Move atom";
break;
case 213:
note="Add a functional group";
break;
case 112:
note="Activate spiro ring";
break;
case 201:
note="Stereo bond single or double";
break;
case 205:
note="Create alkyl chain";
break;
case 104:
note="Delete atom or bond";
break;
case 106:
note="Click bond to delete smallest fragment";
break;
case 101:
note="Show " + (this.jme.params.smilesParams.smarts ? "SMARTS" : "SMILES or SMIRKS");
break;
case 107:
note="Open query box for SMARTS";
break;
case 1201:
note="Select other atom type (" + this.jme.getAtomSymbolForX$() + ")" ;
break;
case 1301:
note="Select R group";
break;
}
if (note != null ) this.jme.infoNoLog$S(note);
if (mol == null  || mol.natoms == 0 ) {
return false;
}switch (action) {
case 102:
note=(this.jme.moleculePartsList.size$() > 1 ? "Delete selected molecule (red)" : "Clear canvas");
mol.forceUniColor$java_awt_Color($I$(8).RED);
this.uniColorMolecule=mol;
break;
case 109:
note="Copy selected (blue) molecule to the other side of the reaction";
mol.forceUniColor$java_awt_Color($I$(8).BLUE);
this.uniColorMolecule=mol;
}
if (note == null ) {
this.jme.setMustRedrawMolecularArea$Z(false);
this.mustReDrawTopMenu=false;
} else {
this.jme.info$S(note);
this.jme.setMustRedrawMolecularArea$Z(true);
this.mustReDrawTopMenu=true;
}return note != null ;
});

Clazz_newMeth(C$, 'handleMouseLeaveActionMenu$I',  function (action) {
switch (action) {
case 213:
case 103:
case 113:
case 112:
case 101:
case 107:
case 1201:
case 1301:
case 201:
case 205:
case 106:
case 104:
this.jme.clearInfo$();
return true;
}
if (this.uniColorMolecule != null  && (action == 102 || (this.jme.options.reaction && action == 109 ) ) ) {
this.uniColorMolecule.resetForceUniColor$();
this.uniColorMolecule=null;
for (var mol, $mol = this.jme.moleculePartsList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
mol.resetForceUniColor$();
}
this.jme.clearInfo$();
this.jme.setMustRedrawMolecularArea$Z(true);
this.mustReDrawTopMenu=true;
} else {
this.jme.setMustRedrawMolecularArea$Z(false);
this.mustReDrawTopMenu=false;
}return this.mustReDrawMolecularArea;
});

Clazz_newMeth(C$, 'dispose$',  function () {
this.jme=null;
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
C$.isSwingJS=true ||false;
C$.copyRigthSmallTextFont=Clazz_new_($I$(6,1).c$$S$I$I,[null, 0, 8]);
C$.menuCellFont=Clazz_new_($I$(6,1).c$$S$I$I,["Helvetica", 0, 13]);
C$.menuCellFontBold=Clazz_new_($I$(6,1).c$$S$I$I,["Helvetica", 1, 13]);
C$.menuCellFontSmaller=Clazz_new_($I$(6,1).c$$S$I$I,["Helvetica", 0, 11]);
C$.atomDrawingAreaFontCache=Clazz_array($I$(6), [100]);
C$.atomDrawingAreaFontMetCache=Clazz_array($I$(7), [100]);
C$.atomMapDrawingAreaFontCache=Clazz_array($I$(6), [100]);
C$.atomMapDrawingAreaFontMetCache=Clazz_array($I$(7), [100]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.GUI, "Icon", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, ['java.awt.geom.Rectangle2D','.Double']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['pg','jme.canvas.PreciseGraphicsAWT']]]

Clazz_newMeth(C$, 'c$$jme_canvas_PreciseGraphicsAWT',  function (pg) {
Clazz_super_(C$, this);
this.pg=pg;
}, 1);

Clazz_newMeth(C$, 'contains$I$I',  function (screenX, screenY) {
return this.contains$D$D(this.pg.screenToCoordX$I(screenX), this.pg.screenToCoordY$I(screenY));
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GUI, "RingComparator", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, null, 'java.util.Comparator');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.phase=0;
},1);

C$.$fields$=[['I',['phase']]]

Clazz_newMeth(C$, ['compare$jme_gui_GUI_Ring$jme_gui_GUI_Ring','compare$O$O'],  function (a, b) {
if (a.isAromatic != b.isAromatic ) {
return (a.isAromatic ? -1 : 1);
}if (a.bondCount != b.bondCount) {
return (a.bondCount > b.bondCount ? -1 : 1);
}if (a.size != b.size) {
return (a.size > b.size ? -1 : 1);
}if (a.isHetero != b.isHetero ) {
return (a.isHetero ? 1 : -1);
}return 0;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GUI, "Ring", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.bsBonds=Clazz_new_($I$(1,1));
this.bsAtoms=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['Z',['isAromatic','isHetero'],'D',['cx','cy'],'I',['bondCount','size'],'O',['bsBonds','java.util.BitSet','+bsAtoms']]]

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.GUI, "RingInfo", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.bsAromaticRings=Clazz_new_($I$(1,1));
this.bsAromaticBonds=Clazz_new_($I$(1,1));
this.rings=Clazz_new_($I$(2,1));
this.bsRingBonds=Clazz_new_($I$(1,1));
this.bsRingAtoms=Clazz_new_($I$(1,1));
this.bsAromaticAtoms=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['O',['bsAromaticRings','java.util.BitSet','+bsAromaticBonds','rings','java.util.List','bsRingBonds','java.util.BitSet','+bsRingAtoms','+bsAromaticAtoms']]]

Clazz_newMeth(C$, 'c$$jme_core_JMECore',  function (mol) {
;C$.$init$.apply(this);
var bsDouble=Clazz_new_($I$(1,1));
for (var i=1; i <= mol.nbonds; i++) {
var b=mol.bonds[i];
if (b.bondType == 2) {
bsDouble.set$I(i);
}b.guideX=NaN;
}
$I$(3).getOclAdapter$().getRingInfo$jme_gui_GUI_RingInfo$jme_core_JMECore(this, mol);
if (this.rings.size$() > 0) {
for (var i=0, n=this.rings.size$(); i < n; i++) {
var r=this.rings.get$I(i);
r.bsBonds.and$java_util_BitSet(bsDouble);
r.bondCount=r.bsBonds.cardinality$();
}
if ($I$(4).ringComparator == null ) $I$(4).ringComparator=Clazz_new_($I$(5,1));
this.rings.sort$java_util_Comparator($I$(4).ringComparator);
var bsBonds=Clazz_new_($I$(1,1));
var bsToDo=Clazz_new_($I$(1,1));
bsToDo.set$I$I(0, this.rings.size$());
p$1.removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z.apply(this, [bsToDo, 3, bsBonds, true]);
p$1.removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z.apply(this, [bsToDo, 2, bsBonds, true]);
p$1.removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z.apply(this, [bsToDo, 1, bsBonds, true]);
p$1.removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z.apply(this, [bsToDo, 3, bsBonds, false]);
p$1.removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z.apply(this, [bsToDo, 2, bsBonds, false]);
p$1.removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z.apply(this, [bsToDo, 1, bsBonds, false]);
for (var i=0, n=this.rings.size$(); i < n; i++) {
var r=this.rings.get$I(i);
r.bondCount=r.bsBonds.cardinality$();
}
for (var i=0, n=this.rings.size$(); i < n; i++) {
var r=this.rings.get$I(i);
var cx=0;
var cy=0;
for (var j=r.bsAtoms.nextSetBit$I(0); j >= 0; j=r.bsAtoms.nextSetBit$I(j + 1)) {
cx+=mol.atoms[j].x;
cy+=mol.atoms[j].y;
}
cx/=r.size;
cy/=r.size;
r.cx=cx;
r.cy=cy;
for (var j=r.bsBonds.nextSetBit$I(0); j >= 0; j=r.bsBonds.nextSetBit$I(j + 1)) {
mol.bonds[j].guideX=cx;
mol.bonds[j].guideY=cy;
}
}
}for (var i=1; i <= mol.nbonds; i++) {
var b=mol.bonds[i];
var type=b.bondType;
if (this.bsRingBonds.get$I(i)) {
b.smallRing=true;
if (type == 3) b.bondType=1;
} else {
b.smallRing=false;
}if (type == 2) {
if (!Double.isNaN$D(b.guideX)) {
continue;
}var a1=mol.atoms[b.va];
var a2=mol.atoms[b.vb];
if (a1.nv == 3 && a2.nv == 3 ) {
continue;
}if (a1.an != 3 || a2.an != 3 ) {
continue;
}if (a1.nv == 3 && a2.nv == 1  || a1.nv == 1 && a2.nv == 3  ) {
b.guideY=NaN;
}var ia1s1=mol.getSp2Other$I$I$Z(b.va, b.vb, true);
var ia2s1=mol.getSp2Other$I$I$Z(b.vb, b.va, true);
var ia1s2=(a1.nv == 2 ? 0 : mol.getSp2Other$I$I$Z(b.va, b.vb, false));
var ia2s2=(a2.nv == 2 ? 0 : mol.getSp2Other$I$I$Z(b.vb, b.va, false));
if (ia1s1 == 0 || ia2s1 == 0 ) {
continue;
}var n1=(ia1s2 == 0 ? 1 : 2);
var n2=(ia2s2 == 0 ? 1 : 2);
var gx=mol.atoms[ia1s1].x + mol.atoms[ia2s1].x + (n1 == 2 ? mol.atoms[ia1s2].x : 0) + (n2 == 2 ? mol.atoms[ia2s2].x : 0) ;
var gy=mol.atoms[ia1s1].y + mol.atoms[ia2s1].y + (n1 == 2 ? mol.atoms[ia1s2].y : 0) + (n2 == 2 ? mol.atoms[ia2s2].y : 0) ;
b.guideX=gx / (n1 + n2);
b.guideY=gy / (n1 + n2);
}}
}, 1);

Clazz_newMeth(C$, 'removeDuplicates$java_util_BitSet$I$java_util_BitSet$Z',  function (bsToDo, nBonds, bsBonds, checkIntersect) {
for (var i=bsToDo.nextSetBit$I(0); i >= 0; i=bsToDo.nextSetBit$I(i + 1)) {
var r=this.rings.get$I(i);
if (r.bondCount < nBonds) continue;
if (checkIntersect && r.bsBonds.intersects$java_util_BitSet(bsBonds) ) continue;
bsToDo.clear$I(i);
r.bsBonds.andNot$java_util_BitSet(bsBonds);
r.bondCount=r.bsBonds.cardinality$();
bsBonds.or$java_util_BitSet(r.bsBonds);
}
}, p$1);

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.gui"),p$1={},p$2={},I$=[[0,'jme.core.JMECore',['jme.gui.JMEBuilder','.GroupTemplateBondDirection'],['jme.core.JMECore','.Parameters'],'jme.JMEmol',['jme.io.JMEReader','.SupportedInputFileFormat']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMEBuilder", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['GroupTemplateBondDirection',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.spiroAdding=false;
},1);

C$.$fields$=[['Z',['spiroAdding','spiroMode','linearAdding'],'I',['touchedAtom','touchedBond','action'],'S',['templateString'],'O',['jme','jme.JME','mol','jme.JMEmol','atoms','jme.core.Atom[]','bonds','jme.core.Bond[]','templateMolecule','jme.JMEmol']]]

Clazz_newMeth(C$, 'c$$jme_JME',  function (jme) {
;C$.$init$.apply(this);
this.jme=jme;
}, 1);

Clazz_newMeth(C$, 'set$jme_JMEmol$I$Z',  function (mol, action, spiroMode) {
if (mol != null ) {
this.mol=mol;
this.atoms=mol.atoms;
this.bonds=mol.bonds;
this.touchedAtom=mol.touchedAtom;
this.touchedBond=mol.touchedBond;
this.action=action;
this.spiroMode=spiroMode;
}return this;
});

Clazz_newMeth(C$, 'addBond$',  function () {
this.mol.addBondToAtom$I$I$I$Z(this.action, this.touchedAtom, 0, false);
this.bonds=this.mol.bonds;
});

Clazz_newMeth(C$, 'addRing$',  function () {
var atom1;
var atom2;
var atom3;
var dx;
var dy;
var rx;
var sina;
var cosa;
var xx;
var yy;
var diel;
var rc;
var uhol;
var xstart;
var ystart;
var returnTouch=-1;
var nmembered=6;
switch (this.action) {
case 206:
nmembered=3;
break;
case 207:
nmembered=4;
break;
case 208:
case 221:
case 223:
nmembered=5;
break;
case 210:
case 209:
nmembered=6;
break;
case 211:
nmembered=7;
break;
case 212:
nmembered=8;
break;
case 229:
nmembered=9;
break;
}
diel=6.283185307179586 / nmembered;
rc=Math.sqrt(625.0 / 2.0 / (1.0 - Math.cos(diel)));
var a=this.atoms[this.touchedAtom];
var b=this.bonds[this.touchedBond];
if (this.touchedAtom > 0) {
if (a.nv < 2) {
this.addRingToBond$I$D$D(nmembered, diel, rc);
} else if (this.spiroMode || this.spiroAdding ) {
this.spiroAdding=false;
if (this.action == 209 || this.action == 221  || this.action == 223 ) {
this.mol.failed$S("ERROR - cannot add aromatic spiro ring !");
return;
}for (var i=1; i <= a.nv; i++) {
var bo=this.mol.getBond$I$I(this.touchedAtom, a.v[i]).bondType;
if (i > 2 || bo != 1 ) {
this.mol.failed$S("ERROR - spiro ring not possible here !");
return;
}}
var newPoint=Clazz_array(Double.TYPE, [2]);
this.mol.getNewPoint$I$D$DA(this.touchedAtom, rc, newPoint);
dx=a.x - newPoint[0];
dy=a.y - newPoint[1];
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
sina=dy / rx;
cosa=dx / rx;
for (var i=1; i <= nmembered; i++) {
var newAtom=p$2.createAtom.apply(this, []);
uhol=diel * i + 1.5707963267948966;
$I$(1,"XY$jme_core_Atom$D$D",[newAtom, newPoint[0] + rc * (Math.sin(uhol) * cosa - Math.cos(uhol) * sina), newPoint[1] + rc * (Math.cos(uhol) * cosa + Math.sin(uhol) * sina)]);
}
} else {
returnTouch=this.touchedAtom;
this.jme.setLastAction$I(2);
this.addBond$();
this.touchedAtom=this.mol.natoms;
this.addRingToBond$I$D$D(nmembered, diel, rc);
}} else if (this.touchedBond > 0) {
var revert;
atom1=b.va;
atom2=b.vb;
var a1=this.atoms[atom1];
var a2=this.atoms[atom2];
atom3=0;
if (a1.nv == 2) {
if (a1.v[1] != atom2) atom3=a1.v[1];
 else atom3=a1.v[2];
} else if (a2.nv == 2) {
if (a2.v[1] != atom1) atom3=a2.v[1];
 else atom3=a2.v[2];
revert=atom1;
atom1=atom2;
atom2=revert;
}if (atom3 == 0) if (a1.v[1] != atom2) atom3=a1.v[1];
 else atom3=a1.v[2];
dx=a2.x - a1.x;
dy=a2.y - a1.y;
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
sina=dy / rx;
cosa=dx / rx;
xx=rx / 2.0;
yy=rc * Math.sin((3.141592653589793 - diel) * 0.5);
revert=1;
var a3=this.atoms[atom3];
if (((a3.y - a1.y) * cosa - (a3.x - a1.x) * sina) > 0.0 ) {
yy=-yy;
revert=0;
}xstart=a1.x + xx * cosa - yy * sina;
ystart=a1.y + yy * cosa + xx * sina;
for (var i=1; i <= nmembered; i++) {
var newAtom=p$2.createAtom.apply(this, []);
uhol=diel * (i + 0.5) + 3.141592653589793 * revert;
$I$(1,"XY$jme_core_Atom$D$D",[newAtom, xstart + rc * (Math.sin(uhol) * cosa - Math.cos(uhol) * sina), ystart + rc * (Math.cos(uhol) * cosa + Math.sin(uhol) * sina)]);
if (revert == 1) {
if (i == nmembered) {
$I$(1).XY$jme_core_Atom$D$D(newAtom, a1.x, a1.y);
}if (i == nmembered - 1) {
$I$(1).XY$jme_core_Atom$D$D(newAtom, a2.x, a2.y);
}} else {
if (i == nmembered - 1) {
$I$(1).XY$jme_core_Atom$D$D(newAtom, a1.x, a1.y);
}if (i == nmembered) {
$I$(1).XY$jme_core_Atom$D$D(newAtom, a2.x, a2.y);
}}}
} else {
var helpv=0.5;
if (nmembered == 6) helpv=0.0;
for (var i=1; i <= nmembered; i++) {
var newAtom=p$2.createAtom.apply(this, []);
uhol=diel * (i - helpv);
$I$(1,"XY$jme_core_Atom$D$D",[newAtom, this.mol.xorg + rc * Math.sin(uhol), this.mol.yorg + rc * Math.cos(uhol)]);
}
}this.completeRing$I(nmembered);
p$2.checkRing$I.apply(this, [nmembered]);
this.mol.setBondCenters$();
if (returnTouch > -1) this.touchedAtom=returnTouch;
});

Clazz_newMeth(C$, 'addRingToBond$I$D$D',  function (nmembered, diel, rc) {
var sina;
var cosa;
var dx;
var dy;
var rx;
var uhol;
var atom1=0;
var a=this.atoms[this.touchedAtom];
if (a.nv == 0) {
sina=0.0;
cosa=1.0;
} else {
atom1=a.v[1];
dx=a.x - this.mol.x$I(atom1);
dy=a.y - this.mol.y$I(atom1);
rx=Math.sqrt(dx * dx + dy * dy);
if (rx < 0.001 ) rx=0.001;
sina=dy / rx;
cosa=dx / rx;
}var xstart=a.x + rc * cosa;
var ystart=a.y + rc * sina;
for (var i=1; i <= nmembered; i++) {
var newAtom=p$2.createAtom.apply(this, []);
uhol=diel * i - 1.5707963267948966;
newAtom.XY$D$D(xstart + rc * (Math.sin(uhol) * cosa - Math.cos(uhol) * sina), ystart + rc * (Math.cos(uhol) * cosa + Math.sin(uhol) * sina));
}
});

Clazz_newMeth(C$, 'completeRing$I',  function (nmembered) {
var atom=0;
var atom3;
var b=null;
for (var i=1; i <= nmembered; i++) {
b=p$2.createAndAddNewBond.apply(this, []);
atom=this.mol.natoms - nmembered + i;
this.mol.NV$I$I(atom, 2);
b.va=atom;
b.vb=atom + 1;
}
b.vb=this.mol.natoms - nmembered + 1;
b=this.bonds[this.touchedBond];
if (this.action == 209) {
if (this.touchedBond > 0) {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2, 1, 2, 1, 2])]);
if (b.isSingle$()) {
atom3=0;
if (this.mol.nv$I(b.va) > 1) {
atom3=this.mol.v$I(b.va)[1];
atom=b.va;
if (atom3 == b.vb) atom3=this.mol.v$I(b.va)[2];
}if (atom3 == 0 && this.mol.nv$I(b.vb) > 1 ) {
atom3=this.mol.v$I(b.vb)[1];
atom=b.vb;
if (atom3 == b.vb) atom3=this.mol.v$I(b.vb)[2];
}if (atom3 > 0) {
for (var i=1; i <= this.mol.nbonds; i++) {
if (this.bonds[i].isAB$I$I(atom, atom3)) {
if (!this.bonds[i].isSingle$()) {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2, 1, 2, 1, 3, 1])]);
}break;
}}
}} else {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2, 1, 2, 1, 2, 1])]);
}} else {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2, 1, 2, 1, 2])]);
}} else if (this.action == 221 || this.action == 223 ) {
if (this.touchedBond > 0) {
if (b.bondType == 1) {
var va=this.atoms[b.va];
var vb=this.atoms[b.vb];
var isConjugated=false;
for (var i=1; i <= va.nv; i++) {
if (this.mol.getBond$I$I(b.va, va.v[i]).bondType > 1) {
isConjugated=true;
break;
}}
for (var i=1; i <= this.mol.nv$I(b.vb); i++) {
var ax=vb.v[i];
if (this.mol.getBond$I$I(b.vb, ax).bondType > 1) {
isConjugated=true;
break;
}}
if (!isConjugated) b.bondType=2;
}this.bonds[this.mol.nbonds - 4].bondType=2;
this.mol.AN$I$I(this.mol.natoms - 2, 5);
} else if (this.touchedAtom > 0) {
if (this.action == 221) {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 2, 1, 1, 2])]);
this.mol.AN$I$I(this.mol.natoms - 1, 5);
} else {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2, 1, 1, 2, 1])]);
this.mol.AN$I$I(this.mol.natoms - 2, 5);
}} else {
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2, 1, 1, 2, 1])]);
this.mol.AN$I$I(this.mol.natoms - 2, 5);
}}});

Clazz_newMeth(C$, 'createAndAddNewBond$I$I$I',  function (a, b, bondType) {
var bond=this.mol.createAndAddNewBond$I$I$I(a, b, bondType);
this.bonds=this.mol.bonds;
return bond;
}, p$2);

Clazz_newMeth(C$, 'createAndAddNewBond',  function () {
var b=this.mol.createAndAddBondFromOther$jme_core_Bond(null);
this.bonds=this.mol.bonds;
return b;
}, p$2);

Clazz_newMeth(C$, 'createAtom',  function () {
var a=this.mol.createAtom$();
this.atoms=this.mol.atoms;
return a;
}, p$2);

Clazz_newMeth(C$, 'createAtom$D$D',  function (x, y) {
p$2.createAtom.apply(this, []);
this.mol.nbonds=0;
this.mol.XY$I$D$D(1, x, y);
this.touchedAtom=this.mol.touchedAtom=1;
this.mol.touched_org=1;
}, p$2);

Clazz_newMeth(C$, 'checkRing$I',  function (nmembered) {
var parent=Clazz_array(Integer.TYPE, [this.mol.natoms + 1]);
for (var i=1; i <= nmembered; i++) {
var ratom=this.mol.natoms - nmembered + i;
var rbond=this.mol.nbonds - nmembered + i;
this.atoms[ratom].v[1]=ratom - 1;
this.atoms[ratom].v[2]=ratom + 1;
this.mol.setBondCenter$jme_core_Bond(this.bonds[rbond]);
}
var n=this.mol.natoms;
this.mol.v$I(n - nmembered + 1)[1]=n;
this.mol.v$I(n)[2]=n - nmembered + 1;
for (var i=this.mol.natoms - nmembered + 1; i <= this.mol.natoms; i++) {
parent[i]=0;
var a=this.atoms[i];
var min=51;
var tooCloseAtom=0;
for (var j=1; j <= this.mol.natoms - nmembered; j++) {
var b=this.atoms[j];
var dx=a.x - b.x;
var dy=a.y - b.y;
var rx=dx * dx + dy * dy;
if (rx < 50 ) if (rx < min ) {
min=rx;
tooCloseAtom=j;
}}
if (tooCloseAtom > 0) if (this.touchedAtom == 0 || tooCloseAtom == this.touchedAtom ) parent[i]=tooCloseAtom;
}
var noldbonds=this.mol.nbonds - nmembered;
 bloop : for (var i=noldbonds + 1; i <= noldbonds + nmembered; i++) {
var atom1=this.bonds[i].va;
var atom2=this.bonds[i].vb;
var p1=parent[atom1];
var p2=parent[atom2];
if (p1 > 0 && p2 > 0 ) {
for (var k=1; k <= noldbonds; k++) {
if (this.bonds[k].isAB$I$I(p1, p2)) continue bloop;
}
p$2.createAndAddNewBond$I$I$I.apply(this, [p1, p2, this.bonds[i].bondType]);
} else if (p1 > 0) {
p$2.createAndAddNewBond$I$I$I.apply(this, [p1, atom2, this.bonds[i].bondType]);
} else if (p2 > 0) {
p$2.createAndAddNewBond$I$I$I.apply(this, [p2, atom1, this.bonds[i].bondType]);
}}
var noldatoms=this.mol.natoms - nmembered;
for (var i=this.mol.natoms; i > noldatoms; i--) {
var pi=parent[i];
if (pi > 0) {
this.mol.deleteAtom$I(i);
if (this.atoms[pi].an == 3) {
var sum=0;
for (var j=1; j <= this.atoms[pi].nv; j++) {
var aj=this.atoms[pi].v[j];
for (var k=1; k <= this.mol.nbonds; k++) {
var b=this.bonds[k];
if (b.isAB$I$I(pi, aj)) sum+=b.bondType;
}
}
if (sum > 4) {
for (var k=noldbonds + 1; k <= noldbonds + nmembered; k++) this.bonds[k].bondType=1;

}}}}
if (this.touchedAtom > 0) this.mol.avoidTouch$I(nmembered);
}, p$2);

Clazz_newMeth(C$, 'addGroupTemplate$Z',  function (emptyCanvas) {
var tmol=this.templateMolecule;
if (tmol == null  || tmol.natoms == 0 ) return 0;
var mark1=0;
mark1=tmol.findFirstMappdedOrMarkedAtom$();
if (mark1 == 0) {
mark1=1;
}var nn=this.mol.natoms;
var source=this.touchedAtom;
var bd=Clazz_new_($I$(2,1));
var hasTwoPossibleAddAngle=bd.initBondCreate$jme_JMEmol$I$I(this.mol, source, 1);
var alternativeBD=null;
if (hasTwoPossibleAddAngle) {
alternativeBD=Clazz_new_($I$(2,1));
alternativeBD.initBondCreate$jme_JMEmol$I$I(this.mol, source, -1);
}var templateBD=Clazz_new_($I$(2,1));
templateBD.initBondCreate$jme_JMEmol$I$I(tmol, mark1, 0);
this.mol.addOtherMolToMe$jme_JMEmol(tmol);
this.mol.complete$Z(this.mol.parameters.computeValenceState);
this.atoms[nn + mark1].resetMap$();
if (!emptyCanvas) {
templateBD.moveAndRotateFragment$jme_JMEmol$I$I$I$jme_gui_JMEBuilder_GroupTemplateBondDirection(this.mol, nn + 1, this.mol.natoms, source, bd);
if (hasTwoPossibleAddAngle) {
var closeContactFactor=bd.sumAtomTooCloseContactsOfAddedFragment$I$I(nn + 1, this.mol.natoms);
for (var ta=1; ta <= tmol.natoms; ta++) {
this.mol.XY$I$D$D(nn + ta, tmol.x$I(ta), tmol.y$I(ta));
}
templateBD.moveAndRotateFragment$jme_JMEmol$I$I$I$jme_gui_JMEBuilder_GroupTemplateBondDirection(this.mol, nn + 1, this.mol.natoms, source, alternativeBD);
var alternativecloseContactFactor=bd.sumAtomTooCloseContactsOfAddedFragment$I$I(nn + 1, this.mol.natoms);
if (alternativecloseContactFactor <= closeContactFactor ) {
} else {
for (var ta=1; ta <= tmol.natoms; ta++) {
this.mol.XY$I$D$D(nn + ta, tmol.x$I(ta), tmol.y$I(ta));
}
templateBD.moveAndRotateFragment$jme_JMEmol$I$I$I$jme_gui_JMEBuilder_GroupTemplateBondDirection(this.mol, nn + 1, this.mol.natoms, source, bd);
}}}p$2.createAndAddNewBond.apply(this, []);
this.bonds[this.mol.nbonds].va=source;
this.bonds[this.mol.nbonds].vb=mark1 + nn;
if (emptyCanvas) {
this.mol.deleteAtom$I(source);
this.mol.center$();
}this.mol.complete$Z(this.mol.parameters.computeValenceState);
return tmol.natoms;
});

Clazz_newMeth(C$, 'addGroup$Z',  function (emptyCanvas) {
this.mol.touched_org=this.touchedAtom;
var nadded=0;
switch (this.action) {
case 2033:
case 2037:
case 2036:
case 2039:
case 2051:
case 2052:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 2147483647, 0, -2147483648, -1, -2])]);
switch (this.action) {
case 2037:
p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [10, 10, 10])]);
break;
case 2036:
p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [9, 9, 9])]);
break;
case 2039:
p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [8, 5, 5, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 1, 2, 2])]);
break;
case 2052:
p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [8, 4, 5, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 1, 2, 2])]);
break;
case 2051:
p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [7, 5, 5, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 1, 1, 2])]);
break;
}
nadded=4;
break;
case 2044:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, 2147483647, 0, -2147483648, -1, -2])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [4, 8, 3, 5, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 1, 1, 2, 2])]);
break;
case 2034:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, -1])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [4, 5, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 2, this.jme.options.polarnitro ? 1 : 2])]);
if (this.jme.options.polarnitro) {
p$2.setCharges$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [-1])]);
}break;
case 2035:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, -1])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 5, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [1, 1, 2])]);
break;
case 2040:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, 0, -2])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 5, 3, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2])]);
break;
case 2060:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, -1])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 4, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2])]);
break;
case 2061:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, 0])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [4, 3, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2])]);
break;
case 2041:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, 0, -1])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [5, 3, 3, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2])]);
break;
case 2043:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, -1])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [4, 3, 3])]);
break;
case 2038:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 2147483647, 0, -2147483648])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3])]);
nadded=2;
break;
case 2049:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2])]);
break;
case 2050:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [5])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [2])]);
break;
case 2045:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 2147483647, 0, 0, -2147483648])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 3, 3])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 1])]);
break;
case 2042:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 2147483647, 0, -2147483648])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3, 4])]);
p$2.setBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [3])]);
break;
case 2054:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [9])]);
break;
case 2055:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [10])]);
break;
case 2056:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [11])]);
break;
case 2057:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [12])]);
break;
case 2058:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [4])]);
break;
case 2059:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom])]);
nadded=p$2.setAtoms$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [5])]);
break;
case 2046:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0])]);
break;
case 2047:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, 0])]);
break;
case 2048:
p$2.addBonds$IA.apply(this, [Clazz_array(Integer.TYPE, -1, [this.touchedAtom, 0, 0, 0])]);
break;
case 2053:
nadded=this.addGroupTemplate$Z(emptyCanvas);
break;
}
this.mol.avoidTouch$I(nadded);
if (emptyCanvas) this.mol.touchedAtom=0;
});

Clazz_newMeth(C$, 'addBonds$IA',  function (b) {
for (var i=0; i < b.length; i++) {
var mode=b[i];
switch (mode) {
case 2147483647:
this.linearAdding=true;
break;
case -2147483648:
this.linearAdding=false;
break;
default:
this.mol.addBondToAtom$I$I$I$Z(0, mode > 0 ? mode : this.mol.natoms + mode, 0, this.linearAdding);
this.bonds=this.mol.bonds;
break;
}
}
}, p$2);

Clazz_newMeth(C$, 'setBonds$IA',  function (bo) {
for (var i=0, pt=this.mol.nbonds - bo.length + 1; i < bo.length; i++) {
this.mol.bonds[pt++].bondType=bo[i];
}
}, p$2);

Clazz_newMeth(C$, 'setAtoms$IA',  function (an) {
var n=an.length;
for (var i=0, pt=this.mol.natoms - n + 1; i < n; i++) {
this.mol.atoms[pt++].an=an[i];
}
return n;
}, p$2);

Clazz_newMeth(C$, 'setCharges$IA',  function (ch) {
for (var i=0, pt=this.mol.natoms - ch.length + 1; i < ch.length; i++) {
this.mol.atoms[pt++].q=ch[i];
}
}, p$2);

Clazz_newMeth(C$, 'setTemplate$S',  function (t) {
this.templateString=t;
var pars=Clazz_new_($I$(3,1));
pars.mark=true;
this.templateMolecule=Clazz_new_([this.jme, t, $I$(5).JME, pars],$I$(4,1).c$$jme_JME$O$jme_io_JMEReader_SupportedInputFileFormat$jme_core_JMECore_Parameters);
this.templateMolecule.internalBondLengthScaling$();
if (!this.templateMolecule.hasMappedOrMarkedAtom$()) {
return "template molecule has no mapped atom";
}return null;
});

Clazz_newMeth(C$, 'getTemplateString$',  function () {
return this.templateString;
});

Clazz_newMeth(C$, 'checkBondAction$',  function () {
var event=null;
var cleanPolar=false;
var b=this.mol.bonds[this.mol.touchedBond];
switch (this.action) {
case 104:
this.deleteAtomOrBond$();
this.jme.updatePartsList$();
break;
case 106:
this.mol.deleteAtomGroup$();
cleanPolar=true;
this.mol.touchedBond=0;
event="delBondGroup";
break;
case 201:
this.mol.toggleBondStereo$I(this.mol.touchedBond);
event="setBondStereo";
break;
case 202:
case 205:
if (b.bondType == 1 && b.stereo == 0 ) {
b.bondType=2;
event="setBondDouble";
} else {
b.bondType=1;
b.stereo=0;
event="setBondSingle";
}b.stereo=0;
break;
case 203:
var differentBondOrder=b.bondType != 2;
b.bondType=2;
if (!differentBondOrder) {
this.mol.toggleDoubleBondStereo$jme_core_Bond(b);
} else {
b.stereo=0;
}cleanPolar=true;
event="setBondDouble";
break;
case 204:
if (!b.smallRing) {
b.bondType=3;
b.stereo=0;
cleanPolar=true;
event="setBondTriple";
}break;
default:
if (this.action >= 206 && this.action <= 229 ) {
this.jme.setLastAction$I(2);
this.addRing$();
cleanPolar=true;
event="addRingBond";
}break;
}
if (cleanPolar) this.mol.cleanAfterChanged$Z(this.jme.options.polarnitro);
if (event != null ) this.jme.recordBondEvent$S$I(event, this.mol.touchedBond);
});

Clazz_newMeth(C$, 'checkAtomOrBondAction$',  function () {
if (this.touchedAtom > 0) this.checkAtomAction$();
 else if (this.touchedBond > 0) this.checkBondAction$();
});

Clazz_newMeth(C$, 'checkAtomAction$',  function () {
var event=null;
if (this.action == 104) {
this.deleteAtomOrBond$();
this.jme.updatePartsList$();
} else if (this.action == 106) {
return;
} else if (this.action == 108) {
if (this.mol.changeCharge$I$I(this.mol.touchedAtom, 0)) event="chargeAtom0";
} else if (this.action == 202 || this.action == 203  || this.action == 204  || this.action == 201  || this.action == 205 ) {
this.jme.setLastAction$I(1);
this.addBond$();
this.mol.touched_org=this.mol.touchedAtom;
if (this.action == 205) {
this.mol.nchain=1;
this.mol.chain[1]=this.mol.natoms;
this.mol.chain[0]=this.mol.touchedAtom;
this.mol.touchedBond=0;
this.jme.willPostSave$Z(false);
} else {
this.jme.recordBondEvent$S("addBond");
event=null;
}} else if (this.action >= 206 && this.action <= 229 ) {
this.jme.setLastAction$I(2);
this.addRing$();
event="addRing";
} else if (this.action == 2030) {
this.jme.setLastAction$I(3);
event="addTemplate";
} else if (this.action >= 2033 && this.action < 2062 ) {
this.addGroup$Z(false);
event="addGroup";
this.jme.setLastAction$I(3);
} else if (this.action > 300) {
if (this.jme.active_an != this.mol.an$I(this.mol.touchedAtom) || this.jme.active_an == 32 ) {
this.mol.AN$I$I(this.mol.touchedAtom, this.jme.active_an);
this.mol.Q$I$I(this.mol.touchedAtom, 0);
this.mol.atoms[this.mol.touchedAtom].iso=0;
this.mol.atoms[this.mol.touchedAtom].nh=0;
if (this.jme.active_an == 32) {
this.mol.setAtom$I$S(this.mol.touchedAtom, this.jme.getAtomSymbolForX$());
}event="setAtom";
}}if (event != null ) this.jme.recordAtomEvent$S$I(event, this.mol.touchedAtom);
});

Clazz_newMeth(C$, 'deleteAtomOrBond$',  function () {
if (this.mol.touchedAtom > 0) {
this.mol.deleteAtom$I(this.mol.touchedAtom);
this.jme.recordAtomEvent$S("delAtom");
this.mol.touchedAtom=0;
} else if (this.mol.touchedBond > 0) {
var b=this.mol.bonds[this.mol.touchedBond];
var deletableAtoms=this.mol.deleteBond$I$Z(this.mol.touchedBond, false);
this.jme.recordBondEvent$S("delBond");
switch (deletableAtoms) {
case 0:
break;
case 3:
case 1:
this.mol.deleteAtom$I(b.va);
this.jme.recordAtomEvent$S("delAtom");
if (deletableAtoms == 1) break;
case 2:
this.mol.deleteAtom$I(b.vb);
this.jme.recordAtomEvent$S("delAtom");
break;
}
this.mol.touchedBond=0;
} else {
}this.mol.cleanAfterChanged$Z(this.jme.options.polarnitro);
});

Clazz_newMeth(C$, 'newMolecule$D$D',  function (x, y) {
if (this.action >= 202 && this.action <= 204  || this.action == 205 ) {
p$2.createAtom$D$D.apply(this, [x, y]);
this.jme.setLastAction$I(1);
this.addBond$();
if (this.action == 205) {
this.mol.XY$I$D$D(2, x + 21.65, y - 12.5);
this.mol.chain[0]=1;
this.mol.chain[1]=2;
this.mol.nchain=1;
this.jme.recordBondEvent$S("addChain");
} else {
this.jme.recordBondEvent$S("addBond");
}return;
}if (this.action >= 206 && this.action <= 229 ) {
this.mol.xorg=x;
this.mol.yorg=y;
this.jme.setLastAction$I(2);
this.addRing$();
this.jme.recordAfterStructureChangedEvent$S("addRing");
return;
}if (this.action == 2030) {
this.jme.recordAfterStructureChangedEvent$S("addTemplate");
return;
}if (this.action >= 2033 && this.action < 2062 ) {
p$2.createAtom$D$D.apply(this, [x, y]);
this.addGroup$Z(true);
this.jme.recordAfterStructureChangedEvent$S("addGroup");
return;
}if (this.action >= 301) {
p$2.createAtom$D$D.apply(this, [x, y]);
if (this.jme.active_an == 32) {
this.mol.setAtom$I$S(1, this.jme.getAtomSymbolForX$());
} else {
this.mol.AN$I$I(1, this.jme.active_an);
}this.jme.recordAtomEvent$S("addAtom");
return;
}System.err.println$S("error -report fall through bug Builder.newMolecule! " + this.action);
});

Clazz_newMeth(C$, 'setAtom$I',  function (active_an) {
if (active_an != this.mol.an$I(this.mol.touchedAtom) && active_an != 32 ) {
this.mol.AN$I$I(this.mol.touchedAtom, active_an);
this.mol.Q$I$I(this.mol.touchedAtom, 0);
this.mol.atoms[this.mol.touchedAtom].iso=0;
this.mol.atoms[this.mol.touchedAtom].nh=0;
} else if (active_an == 32) {
var xx=this.jme.atomicSymbol.getText$();
this.mol.setAtom$I$S(this.mol.touchedAtom, xx);
} else {
return false;
}this.jme.recordAtomEvent$S("setAtom");
return true;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMEBuilder, "GroupTemplateBondDirection", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['sin','cos','x','y'],'O',['mol','jme.JMEmol']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'init$jme_JMEmol$I$I',  function (mol, sourceAtom, destAtom) {
this.x=mol.x$I(destAtom);
this.y=mol.y$I(destAtom);
var dx=mol.x$I(sourceAtom) - this.x;
var dy=mol.y$I(sourceAtom) - this.y;
var r=Math.sqrt(dx * dx + dy * dy);
this.sin=dy / r;
this.cos=dx / r;
});

Clazz_newMeth(C$, 'initBondCreate$jme_JMEmol$I$I',  function (mol, sourceAtom, addBondArgument) {
this.mol=mol;
var nh=mol.atoms[sourceAtom].nh;
var nv=mol.atoms[sourceAtom].nv;
var q=mol.atoms[sourceAtom].q;
var b=Boolean.valueOf$Z(mol.addBondToAtom$I$I$I$Z(0, sourceAtom, addBondArgument, false));
var hasTwoPossibleAddAngle=(b === Boolean.TRUE );
var destAtom=mol.natoms;
this.init$jme_JMEmol$I$I(mol, sourceAtom, destAtom);
mol.deleteAtom$I(destAtom);
mol.atoms[sourceAtom].nh=nh;
mol.atoms[sourceAtom].nv=nv;
mol.atoms[sourceAtom].q=q;
return hasTwoPossibleAddAngle;
});

Clazz_newMeth(C$, 'moveAndRotateFragment$jme_JMEmol$I$I$I$jme_gui_JMEBuilder_GroupTemplateBondDirection',  function (mol, ffirst, flast, sourceAt, sourceBD) {
for (var i=ffirst; i <= flast; i++) {
var atom=mol.atoms[i];
atom.moveXY$D$D(-this.x, -this.y);
var xx=atom.x * this.cos + atom.y * this.sin;
var yy=atom.y * this.cos - atom.x * this.sin;
atom.XY$D$D(xx, yy);
xx=-atom.x * sourceBD.cos + atom.y * sourceBD.sin;
yy=-atom.y * sourceBD.cos - atom.x * sourceBD.sin;
atom.XY$D$D(xx, yy);
atom.moveXY$D$D(mol.atoms[sourceAt].x, mol.atoms[sourceAt].y);
}
});

Clazz_newMeth(C$, 'sumAtomTooCloseContactsOfAddedFragment$I$I',  function (fragmentFirstAtom, fragmentLastAtom) {
var result=0;
for (var at=1; at <= this.mol.natoms; at++) {
if (at < fragmentFirstAtom || at > fragmentLastAtom ) result+=p$1.sumAtomTooCloseContacts$I$I$I.apply(this, [at, fragmentFirstAtom, fragmentLastAtom]);
}
return result;
});

Clazz_newMeth(C$, 'sumAtomTooCloseContacts$I$I$I',  function (atom, firstAtom, lastAtom) {
var dx;
var dy;
var rx;
var min=100;
var sum=0;
var x=this.mol.atoms[atom].x;
var y=this.mol.atoms[atom].y;
for (var i=firstAtom; i <= lastAtom; i++) {
if (atom == i) continue;
dx=x - this.mol.atoms[i].x;
dy=y - this.mol.atoms[i].y;
rx=dx * dx + dy * dy;
if (rx < min ) {
if (rx == 0 ) {
rx=1.0E-4;
}sum+=1 / rx;
}}
return sum;
}, p$1);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.io"),p$1={},I$=[[0,'java.beans.PropertyChangeSupport','java.awt.dnd.DropTarget','java.awt.datatransfer.DataFlavor']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FileDropper", null, null, 'java.awt.dnd.DropTargetListener');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['fd_propSupport','java.beans.PropertyChangeSupport','pcl','java.beans.PropertyChangeListener']]
,['O',['uriDrop','java.awt.datatransfer.DataFlavor']]]

Clazz_newMeth(C$, 'c$$java_beans_PropertyChangeListener',  function (fileDropListener) {
;C$.$init$.apply(this);
this.fd_propSupport=Clazz_new_($I$(1,1).c$$O,[this]);
this.addPropertyChangeListener$java_beans_PropertyChangeListener(fileDropListener);
this.addPropertyChangeListener$java_beans_PropertyChangeListener((this.pcl=((P$.FileDropper$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "FileDropper$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.beans.PropertyChangeListener', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (evt) {
if (evt.getPropertyName$().equals$O("inline")) p$1.loadInline$O.apply(this.b$['jme.io.FileDropper'], [evt.getNewValue$()]);
});
})()
), Clazz_new_(P$.FileDropper$1.$init$,[this, null]))));
var receiver=fileDropListener;
receiver.setDropTarget$java_awt_dnd_DropTarget(Clazz_new_($I$(2,1).c$$java_awt_Component$java_awt_dnd_DropTargetListener,[receiver, this]));
}, 1);

Clazz_newMeth(C$, 'dispose$',  function () {
this.removePropertyChangeListener$java_beans_PropertyChangeListener(this.pcl);
this.pcl=null;
this.fd_propSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(null);
this.fd_propSupport=null;
});

Clazz_newMeth(C$, 'loadFile$S',  function (fname) {
this.fd_propSupport.firePropertyChange$S$O$O("FileDropper.file", null, fname);
}, p$1);

Clazz_newMeth(C$, 'loadInline$O',  function (content) {
this.fd_propSupport.firePropertyChange$S$O$O("FileDropper.inline", null, content);
}, p$1);

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (l) {
this.fd_propSupport.addPropertyChangeListener$java_beans_PropertyChangeListener(l);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (l) {
this.fd_propSupport.removePropertyChangeListener$java_beans_PropertyChangeListener(l);
});

Clazz_newMeth(C$, 'dragOver$java_awt_dnd_DropTargetDragEvent',  function (dtde) {
});

Clazz_newMeth(C$, 'dragEnter$java_awt_dnd_DropTargetDragEvent',  function (dtde) {
dtde.acceptDrag$I(3);
});

Clazz_newMeth(C$, 'dragExit$java_awt_dnd_DropTargetEvent',  function (dtde) {
});

Clazz_newMeth(C$, 'dropActionChanged$java_awt_dnd_DropTargetDragEvent',  function (dtde) {
});

Clazz_newMeth(C$, 'drop$java_awt_dnd_DropTargetDropEvent',  function (dtde) {
System.out.println$S("FileDropper? " + dtde.getDropTargetContext$().getComponent$());
var t=dtde.getTransferable$();
var isAccepted=false;
if (C$.uriDrop != null  && t.isDataFlavorSupported$java_awt_datatransfer_DataFlavor(C$.uriDrop) ) {
if (p$1.doURIDrop$java_awt_datatransfer_Transferable$java_awt_dnd_DropTargetDropEvent$Z$java_awt_datatransfer_DataFlavor.apply(this, [t, dtde, isAccepted, C$.uriDrop])) return;
}if (t.isDataFlavorSupported$java_awt_datatransfer_DataFlavor($I$(3).javaFileListFlavor)) {
while (true){
var o=null;
try {
dtde.acceptDrop$I(3);
o=t.getTransferData$java_awt_datatransfer_DataFlavor($I$(3).javaFileListFlavor);
isAccepted=true;
if (Clazz_instanceOf(o, "java.util.List")) {
var fileList=o;
var length=fileList.size$();
if (length >= 1) {
var fileName=fileList.get$I(0).getAbsolutePath$().trim$();
if (fileName.endsWith$S(".URL")) {
break;
}dtde.getDropTargetContext$().dropComplete$Z(true);
p$1.loadFile$S.apply(this, [fileName]);
return;
}dtde.getDropTargetContext$().dropComplete$Z(true);
return;
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("jme.FileDropper failed " + e);
} else {
throw e;
}
}
break;
}
}var df=t.getTransferDataFlavors$();
if (df == null  || df.length == 0 ) return;
for (var i=0; i < df.length; ++i) {
var flavor=df[i];
var o=null;
var mimeType=flavor.getMimeType$();
if (mimeType.startsWith$S("text/uri-list") && flavor.getRepresentationClass$().getName$().equals$O("java.lang.String") ) {
C$.uriDrop=flavor;
if (p$1.doURIDrop$java_awt_datatransfer_Transferable$java_awt_dnd_DropTargetDropEvent$Z$java_awt_datatransfer_DataFlavor.apply(this, [t, dtde, isAccepted, flavor])) return;
} else if (mimeType.equals$O("application/x-java-serialized-object; class=java.lang.String") || mimeType.startsWith$S("text/plain;") ) {
try {
if (!isAccepted) dtde.acceptDrop$I(3);
isAccepted=true;
o=t.getTransferData$java_awt_datatransfer_DataFlavor(df[i]);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("D.....");
} else {
throw e;
}
}
if (Clazz_instanceOf(o, "java.lang.String")) {
var content=o;
if (content.startsWith$S("file:/")) {
p$1.loadFile$S.apply(this, [content]);
} else {
p$1.loadInline$O.apply(this, [content]);
}dtde.getDropTargetContext$().dropComplete$Z(true);
return;
}}}
if (!isAccepted) dtde.rejectDrop$();
});

Clazz_newMeth(C$, 'doURIDrop$java_awt_datatransfer_Transferable$java_awt_dnd_DropTargetDropEvent$Z$java_awt_datatransfer_DataFlavor',  function (t, dtde, isAccepted, flavor) {
var o;
try {
if (!isAccepted) dtde.acceptDrop$I(3);
isAccepted=true;
o=t.getTransferData$java_awt_datatransfer_DataFlavor(flavor);
if (Clazz_instanceOf(o, "java.lang.String")) {
System.err.println$S("jme.FileDropper drop for " + o);
p$1.loadFile$S.apply(this, [o.toString()]);
dtde.getDropTargetContext$().dropComplete$Z(true);
return true;
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("jme.FileDropper failed drop for " + flavor);
} else {
throw e;
}
}
return false;
}, p$1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.io"),I$=[[0,'jme.util.JMEUtil','jme.util.Isotopes','jme.core.Atom','java.util.ArrayList','jme.JMEmol']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JMEWriter", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'jme.core.JMECore');
C$.$classes$=[['MolFileOrRxnParameters',9],['SupportedOutputFileFormat',25]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'createJMEString$jme_core_JMECore$Z$java_awt_geom_Rectangle2D_Double',  function (mol, addHydrogens, box) {
return Clazz_new_(C$.c$$jme_core_JMECore,[mol]).createJME$Z$java_awt_geom_Rectangle2D_Double(addHydrogens, box);
}, 1);

Clazz_newMeth(C$, 'createMolFile$jme_core_JMECore$S$Z$java_awt_geom_Rectangle2D_Double',  function (mol, header, stampDate, box) {
return Clazz_new_(C$.c$$jme_core_JMECore,[mol]).createMolFile$S$Z$java_awt_geom_Rectangle2D_Double(header, stampDate, box);
}, 1);

Clazz_newMeth(C$, 'createExtendedMolFile$jme_core_JMECore$S$Z$java_awt_geom_Rectangle2D_Double',  function (mol, header, stampDate, box) {
return Clazz_new_(C$.c$$jme_core_JMECore,[mol]).createExtendedMolFile$S$Z$java_awt_geom_Rectangle2D_Double(header, stampDate, box);
}, 1);

Clazz_newMeth(C$, 'c$$jme_core_JMECore',  function (mol) {
;C$.superclazz.c$$jme_core_JMECore.apply(this,[mol]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'transformAtomCoordinatesForOutput$java_awt_geom_Rectangle2D_Double',  function (boundingBox) {
var scale=0.055999999999999994;
if (boundingBox == null ) boundingBox=this.computeCoordinate2DboundingBox$();
if (boundingBox == null ) {
return;
}var ymax=boundingBox.y + boundingBox.height;
var xmin=boundingBox.x;
if (this.parameters.keepSameCoordinatesForOutput) {
xmin=0.0;
ymax=0.0;
scale=1.0;
}for (var i=1; i <= this.natoms; i++) {
var atom=this.atoms[i];
atom.x=(atom.x - xmin) * scale;
atom.y=(ymax - atom.y) * scale;
}
});

Clazz_newMeth(C$, 'createJME$Z$java_awt_geom_Rectangle2D_Double',  function (addHydrogens, box) {
var s="" + this.natoms + " " + this.nbonds ;
this.transformAtomCoordinatesForOutput$java_awt_geom_Rectangle2D_Double(box);
for (var i=1; i <= this.natoms; i++) {
var atom=this.atoms[i];
var iso=atom.iso;
var sa="";
if (iso != 0) {
sa+=iso;
}sa+=atom.getLabel$();
if ((addHydrogens || this.getValenceForMolOutput$I(i) > 0 ) && atom.nh > 0 ) {
sa+="H";
if (atom.nh > 1) sa+=atom.nh;
}if (atom.q != 0) {
if (atom.q > 0) sa+="+";
 else sa+="-";
if (Math.abs(atom.q) > 1) sa+=Math.abs(atom.q);
}var map=this.findAtomMapForOutput$I(i);
if (map != 0) sa+=":" + map;
s+=" " + sa + " " + $I$(1).fformat$D$I$I(atom.x, 0, 2) + " " + $I$(1).fformat$D$I$I(atom.y, 0, 2) ;
}
var d;
for (var i=1; i <= this.nbonds; i++) {
var a1=this.bonds[i].va;
var a2=this.bonds[i].vb;
var nas=this.bonds[i].bondType;
var stereo=this.bonds[i].stereo;
if (this.bonds[i].bondType == 9) {
nas=stereo;
} else {
switch (stereo) {
case 1:
nas=-1;
break;
case 2:
nas=-2;
break;
case 3:
case 4:
nas=(stereo == 3 ? -1 : -2);
d=a1;
a1=a2;
a2=d;
break;
case 10:
nas=-5;
break;
}
}s+=" " + a1 + " " + a2 + " " + nas ;
}
return s;
});

Clazz_newMeth(C$, 'createMolFile$S$Z$java_awt_geom_Rectangle2D_Double',  function (header, stampDate, box) {
var s=this.mdlHeaderLines$S$Z$Z(header, stampDate, false);
this.transformAtomCoordinatesForOutput$java_awt_geom_Rectangle2D_Double(box);
for (var i=1; i <= this.natoms; i++) {
var atom=this.atoms[i];
s+=$I$(1).fformat$D$I$I(atom.x, 10, 4) + $I$(1).fformat$D$I$I(atom.y, 10, 4) + $I$(1).fformat$D$I$I(0.0, 10, 4) ;
var z=this.getAtomLabel$I(i);
if (z.length$() == 1) z+="  ";
 else if (z.length$() == 2) z+=" ";
 else if (z.length$() > 3) z="Q  ";
s+=" " + z;
var charge=0;
if (this.q$I(i) > 0 && this.q$I(i) < 4 ) charge=4 - this.q$I(i);
 else if (this.q$I(i) < 0 && this.q$I(i) > -4 ) charge=4 - this.q$I(i);
var deltaIsotop=0;
if (atom.iso != 0) {
var delta=$I$(2,"getDeltaIsotopicMassOfElement$S$I",[this.getAtomLabel$I(i), this.atoms[i].iso]);
if (delta >= -3 && delta <= 4 ) {
deltaIsotop=delta;
}}var vv=0;
vv=this.getValenceForMolOutput$I(i);
z=$I$(1).iformat$I$I(deltaIsotop, 2) + $I$(1).iformat$I$I(charge, 3) + "  0" + $I$(1).iformat$I$I(vv, 3) + "  0  0  0  0  0" ;
var map=this.findAtomMapForOutput$I(i);
z+=$I$(1).iformat$I$I(map, 3);
s+=z + "  0  0" + "\n" ;
}
for (var i=1; i <= this.nbonds; i++) {
s+=C$.getMOLStereoBond$jme_core_Bond$Z(this.bonds[i], false) + "\n";
;}
for (var i=1; i <= this.natoms; i++) {
if (this.q$I(i) != 0) {
s+="M  CHG  1" + $I$(1).iformat$I$I(i, 4) + $I$(1,"iformat$I$I",[this.q$I(i), 4]) + "\n" ;
}if (this.atoms[i].iso != 0) {
s+="M  ISO  1" + $I$(1).iformat$I$I(i, 4) + $I$(1).iformat$I$I(this.atoms[i].iso, 4) + "\n" ;
}}
s+="M  END\n";
return s;
});

Clazz_newMeth(C$, 'getValenceForMolOutput$I',  function (at) {
var val=0;
var atom=this.atoms[at];
if (atom.nh > 0 && $I$(3).chargedMetalType$I(atom.an) != 0 ) {
val=atom.nh + atom.nv;
}return val;
});

Clazz_newMeth(C$, 'createExtendedMolFile2$S',  function (smiles) {
return this.createExtendedMolFile$S$Z$java_awt_geom_Rectangle2D_Double(smiles, true, null);
});

Clazz_newMeth(C$, 'createExtendedMolFile$S$Z$java_awt_geom_Rectangle2D_Double',  function (header, stampDate, box) {
var s=this.mdlHeaderLines$S$Z$Z(header, stampDate, true);
var mv30="M  V30 ";
s+=mv30 + "BEGIN CTAB" + "\n" ;
s+=mv30 + "COUNTS " + this.natoms + " " + this.nbonds + " 0 0 " + this.mdlChiralFlag$() + "\n" ;
s+=mv30 + "BEGIN ATOM" + "\n" ;
this.transformAtomCoordinatesForOutput$java_awt_geom_Rectangle2D_Double(box);
for (var i=1; i <= this.natoms; i++) {
var atom=this.atoms[i];
s+=mv30;
s+=i + " " + this.getAtomLabel$I(i) ;
var m=this.findAtomMapForOutput$I(i);
s+=" " + $I$(1).fformat$D$I$I(atom.x, 0, 4) + " " + $I$(1).fformat$D$I$I(atom.y, 0, 4) + " " + $I$(1).fformat$D$I$I(0.0, 0, 4) + " " + m ;
if (atom.q != 0) s+=" CHG=" + atom.q;
if (atom.iso > 0) {
s+=" MASS=" + atom.iso;
}var val=this.getValenceForMolOutput$I(i);
if (val != 0) s+=" VAL=" + val;
s+="\n";
}
s+=mv30 + "END ATOM" + "\n" ;
s+=mv30 + "BEGIN BOND" + "\n" ;
for (var i=1; i <= this.nbonds; i++) {
s+=mv30 + i + " " + C$.getMOLStereoBond$jme_core_Bond$Z(this.bonds[i], true) + "\n" ;
}
s+=mv30 + "END BOND" + "\n" ;
var abs=Clazz_new_($I$(4,1));
var orlists=Clazz_new_($I$(4,1));
var mixlists=Clazz_new_($I$(4,1));
for (var i=0; i < 10; i++) {
orlists.add$O(null);
mixlists.add$O(null);
}
for (var i=1; i <= this.natoms; i++) {
var atag=this.atoms[i].atag;
if (atag == null  || atag.length$() == 0 ) continue;
if (atag.equals$O("abs")) abs.add$O( new Integer(i));
 else if (atag.startsWith$S("mix")) {
var n=Integer.parseInt$S(atag.substring$I(3));
var o=(mixlists.size$() > n ? mixlists.get$I(n) : null);
var l=(o == null  ? Clazz_new_($I$(4,1)) : o);
l.add$O( new Integer(i));
mixlists.set$I$O(n, l);
} else if (atag.startsWith$S("or")) {
var n=Integer.parseInt$S(atag.substring$I(2));
var o=(orlists.size$() > n ? orlists.get$I(n) : null);
var l=(o == null  ? Clazz_new_($I$(4,1)) : o);
l.add$O( new Integer(i));
orlists.set$I$O(n, l);
}}
s+=C$.appendMOLCollection$S$java_util_ArrayList$S("MDLV30/STEABS", abs, mv30);
if (orlists.size$() > 0) for (var i=1; i < orlists.size$(); i++) s+=C$.appendMOLCollection$S$java_util_ArrayList$S("MDLV30/STEREL" + i, orlists.get$I(i), mv30);

if (mixlists.size$() > 0) for (var i=1; i < mixlists.size$(); i++) s+=C$.appendMOLCollection$S$java_util_ArrayList$S("MDLV30/STERAC" + i, mixlists.get$I(i), mv30);

s+=mv30 + "END CTAB" + "\n" ;
s+="M  END\n";
return s;
});

Clazz_newMeth(C$, 'appendMOLCollection$S$java_util_ArrayList$S',  function (name, list, mv30) {
if (list == null  || list.size$() == 0 ) return "";
var s="";
s+=mv30 + "BEGIN COLLECTION" + "\n" ;
s+=mv30 + name + " [ATOMS=(" + list.size$() ;
for (var i=list.iterator$(); i.hasNext$(); ) s+=" " + i.next$();

s+=")]\n";
s+=mv30 + "END COLLECTION" + "\n" ;
return s;
}, 1);

Clazz_newMeth(C$, 'mdlHeaderLines$S$Z$Z',  function (header, stampDate, isV3000) {
var writeChiralFlag=isV3000 ? 0 : this.mdlChiralFlag$();
var s=(header != null  && (header=header.trim$()).length$() > 0  ? header : "_");
if (s.length$() > 79) s=s.substring$I$I(0, 76) + "...";
s+="\n";
var versiondate="JME" + "2024-12-13" + " " + Clazz_new_(java.util.Date) ;
s+=C$.getSDFDateLine$S("JME2024-12-13") + "\n";
s+=versiondate + "\n";
s+=$I$(1).iformat$I$I(isV3000 ? 0 : this.natoms, 3) + $I$(1).iformat$I$I(isV3000 ? 0 : this.nbonds, 3);
s+="  0  0" + $I$(1).iformat$I$I(writeChiralFlag, 3) + "  0  0  0  0  0999 " + (isV3000 ? "V3000" : "V2000") + "\n" ;
return s;
});

Clazz_newMeth(C$, 'getMOLStereoBond$jme_core_Bond$Z',  function (bond, isV3000) {
var bondType=bond.bondType;
var a1=bond.va;
var a2=bond.vb;
var stereo=0;
if (bondType == 1 || bondType == 0 ) {
switch (bond.stereo) {
case 1:
case 3:
stereo=1;
break;
case 2:
case 4:
stereo=6;
break;
case 5:
case 6:
stereo=4;
}
switch (bond.stereo) {
case 3:
case 4:
case 6:
var t=a1;
a1=a2;
a2=t;
}
}if (bondType == 2 && bond.stereo == 10 ) {
stereo=3;
}if (isV3000) {
switch (stereo) {
case 6:
stereo=3;
break;
case 4:
case 3:
stereo=2;
}
}if (bondType == 0) {
bondType=8;
} else if (bondType == 9 || bondType == 5 ) {
bondType=4;
}var bonds;
if (isV3000) {
bonds=bondType + " " + a1 + " " + a2 ;
if (stereo != 0) bonds+=" CFG=" + stereo;
} else {
bonds=$I$(1).iformat$I$I(a1, 3) + $I$(1).iformat$I$I(a2, 3) + $I$(1).iformat$I$I(bondType, 3) + $I$(1).iformat$I$I(stereo, 3) + "  0  0  0" ;
}return bonds;
}, 1);

Clazz_newMeth(C$, 'mdlChiralFlag$',  function () {
return (this.getChiralFlag$()).$c() && this.canBeChiral$()  ? 1 : 0;
});

Clazz_newMeth(C$, 'createMolfile$jme_JMEmol$jme_io_JMEWriter_MolFileOrRxnParameters',  function (mol, arg) {
return (arg.isV3000 ? C$.createExtendedMolFile$jme_core_JMECore$S$Z$java_awt_geom_Rectangle2D_Double(mol, arg.header, arg.stampDate, null) : C$.createMolFile$jme_core_JMECore$S$Z$java_awt_geom_Rectangle2D_Double(mol, arg.header, arg.stampDate, null));
}, 1);

Clazz_newMeth(C$, 'generateMolFileOrRxn$jme_io_JMEWriter_MolFileOrRxnParameters$jme_JMEmolList',  function (pars, molList) {
if (!molList.isReaction) {
return C$.createMolfile$jme_JMEmol$jme_io_JMEWriter_MolFileOrRxnParameters(molList.size$() > 1 ? $I$(5).mergeMols$java_util_ArrayList(molList) : molList.get$I(0), pars);
}var s="";
var roles;
if (molList.reactionParts$I(2).size$() > 0) {
roles=Clazz_array(Integer.TYPE, -1, [1, 3, 2]);
} else {
roles=Clazz_array(Integer.TYPE, -1, [1, 3]);
}s+="$RXN\n\n\nJME Molecular Editor\n";
for (var r, $r = 0, $$r = roles; $r<$$r.length&&((r=($$r[$r])),1);$r++) {
var n=pars.mergeReationComponents ? 1 : molList.reactionParts$I(r).size$();
s+=$I$(1).iformat$I$I(n, 3);
}
s+="\n";
for (var r, $r = 0, $$r = roles; $r<$$r.length&&((r=($$r[$r])),1);$r++) {
var mols=molList.reactionParts$I$Z(r, pars.mergeReationComponents);
for (var mol, $mol = mols.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
s+="$MOL\n";
s+=C$.createMolfile$jme_JMEmol$jme_io_JMEWriter_MolFileOrRxnParameters(mol, pars);
}
}
return s;
}, 1);

Clazz_newMeth(C$, 'generateSmilesOrSmirks$jme_core_JMECore_Parameters$jme_JMEmolList',  function (pars, molList) {
if (molList.isReaction) {
return C$.generateSmilesOrSmirks$jme_core_JMECore_Parameters$jme_JMEmolList(pars, molList.reactionParts$I(1)) + ">" + C$.generateSmilesOrSmirks$jme_core_JMECore_Parameters$jme_JMEmolList(pars, molList.reactionParts$I(2)) + ">" + C$.generateSmilesOrSmirks$jme_core_JMECore_Parameters$jme_JMEmolList(pars, molList.reactionParts$I(3)) ;
}var result="";
for (var mol, $mol = molList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var smiles=mol.createSmiles$jme_core_JMECore_Parameters(pars);
if (smiles.length$() > 0) {
if (result.length$() > 0) result+=".";
result+=smiles;
}}
return result;
}, 1);

Clazz_newMeth(C$, 'generateJMEstring$Z$java_awt_geom_Rectangle2D_Double$jme_JMEmolList',  function (showImplicitHydrogens, boundingBox, molList) {
if (molList.isReaction) {
return C$.generateJMEstring$Z$java_awt_geom_Rectangle2D_Double$jme_JMEmolList(showImplicitHydrogens, boundingBox, molList) + ">" + C$.generateJMEstring$Z$java_awt_geom_Rectangle2D_Double$jme_JMEmolList(showImplicitHydrogens, boundingBox, molList) + ">" + C$.generateJMEstring$Z$java_awt_geom_Rectangle2D_Double$jme_JMEmolList(showImplicitHydrogens, boundingBox, molList) ;
}var result="";
for (var mol, $mol = molList.iterator$(); $mol.hasNext$()&&((mol=($mol.next$())),1);) {
var jme=C$.createJMEString$jme_core_JMECore$Z$java_awt_geom_Rectangle2D_Double(mol, showImplicitHydrogens, boundingBox);
if (jme.length$() > 0) {
if (result.length$() > 0) result+="|";
result+=jme;
}}
return result;
}, 1);

Clazz_newMeth(C$, 'getSDFDateLine$S',  function (version) {
var mol=(version + "         ").substring$I$I(0, 10);
var cMM;
var cDD;
var cYYYY;
var cHH;
var cmm;
{
var c = new Date(); cMM = c.getMonth(); cDD = c.getDate(); cYYYY = c.getFullYear(); cHH = c.getHours(); cmm = c.getMinutes();
}
mol+=$I$(1,"rightJustify$S$S",["00", "" + (1 + cMM)]);
mol+=$I$(1).rightJustify$S$S("00", "" + cDD);
mol+=("" + cYYYY).substring$I$I(2, 4);
mol+=$I$(1).rightJustify$S$S("00", "" + cHH);
mol+=$I$(1).rightJustify$S$S("00", "" + cmm);
mol+="2D 1   1.00000     0.00000     0";
return mol;
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.JMEWriter, "MolFileOrRxnParameters", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.header="";
this.stampDate=false;
this.isV3000=false;
this.mergeReationComponents=false;
this.debugDoNotUpdateReactionRole=false;
},1);

C$.$fields$=[['Z',['stampDate','isV3000','mergeReationComponents','debugDoNotUpdateReactionRole'],'S',['header']]]

Clazz_newMeth(C$);
})()
;
(function(){/*e*/var C$=Clazz_newClass(P$.JMEWriter, "SupportedOutputFileFormat", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "JME", 0, []);
Clazz_newEnumConst($vals, C$.c$, "SMILES", 1, []);
Clazz_newEnumConst($vals, C$.c$, "MOL", 2, []);
Clazz_newEnumConst($vals, C$.c$, "MOL_V3000", 3, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI", 4, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI_KEY", 5, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI_AUXINFO", 6, []);
Clazz_newEnumConst($vals, C$.c$, "INCHI_JSON", 7, []);
Clazz_newEnumConst($vals, C$.c$, "OCLCODE", 8, []);
Clazz_newEnumConst($vals, C$.c$, "SVG", 9, []);
Clazz_newEnumConst($vals, C$.c$, "RAW_STRING_GRAPHIC", 10, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.io"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SDFstack", null, 'java.util.ArrayList');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.currentIndex=-1;
},1);

C$.$fields$=[['I',['currentIndex']]]

Clazz_newMeth(C$, 'getCurrentDisplayIndex$',  function () {
return this.currentIndex + 1;
});

Clazz_newMeth(C$, 'addEntries$S',  function (sdfInput) {
if (sdfInput == null ) return 0;
var inputSDFentries=sdfInput.split$S("\\$\\$\\$\\$\r?\n?");
if (inputSDFentries.length <= 1) {
return 0;
}for (var sdf, $sdf = 0, $$sdf = inputSDFentries; $sdf<$$sdf.length&&((sdf=($$sdf[$sdf])),1);$sdf++) {
this.add$O(sdf);
}
return inputSDFentries.length;
});

Clazz_newMeth(C$, 'next$',  function () {
if (this.currentIndex < this.size$() - 1) {
++this.currentIndex;
return this.get$I(this.currentIndex);
} else {
return null;
}});

Clazz_newMeth(C$, 'previous$',  function () {
if (this.currentIndex > 0) {
--this.currentIndex;
return this.get$I(this.currentIndex);
} else {
return null;
}});

Clazz_newMeth(C$, 'first$',  function () {
this.currentIndex=-1;
return this.next$();
});

Clazz_newMeth(C$, 'last$',  function () {
this.currentIndex=this.size$();
return this.previous$();
});

Clazz_newMeth(C$, 'clear$',  function () {
this.currentIndex=-1;
C$.superclazz.prototype.clear$.apply(this, []);
});

Clazz_newMeth(C$, 'getMultiSDFstack$',  function () {
return this.toArray$OA(Clazz_array(String, [this.size$()]));
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.io"),I$=[[0,'java.awt.Toolkit','java.awt.datatransfer.DataFlavor']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "TextTransfer", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, ['java.awt.datatransfer.ClipboardOwner', 'java.awt.event.ActionListener']);
C$.$classes$=[['PasteAction',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['pasteAction','jme.io.TextTransfer.PasteAction']]]

Clazz_newMeth(C$, 'test$',  function () {
var textTransfer=Clazz_new_(C$);
System.out.println$S("Clipboard contains:" + textTransfer.getClipboardContents$());
textTransfer.setClipboardContents$S("blah, blah, blah");
System.out.println$S("Clipboard contains:" + textTransfer.getClipboardContents$());
});

Clazz_newMeth(C$, 'lostOwnership$java_awt_datatransfer_Clipboard$java_awt_datatransfer_Transferable',  function (aClipboard, aContents) {
});

Clazz_newMeth(C$, 'setClipboardContents$S',  function (aString) {
{
navigator.clipboard.writeText(aString);
}
});

Clazz_newMeth(C$, 'getClipboardContents$',  function () {
var result=null;
var clipboard=$I$(1).getDefaultToolkit$().getSystemClipboard$();
var contents=clipboard.getContents$O(this);
var hasTransferableText=(contents != null ) && contents.isDataFlavorSupported$java_awt_datatransfer_DataFlavor($I$(2).stringFlavor) ;
if (hasTransferableText) {
try {
result=contents.getTransferData$java_awt_datatransfer_DataFlavor($I$(2).stringFlavor);
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"java.awt.datatransfer.UnsupportedFlavorException")){
var ex = e$$;
{
System.out.println$O(ex);
ex.printStackTrace$();
}
} else if (Clazz_exceptionOf(e$$,"java.io.IOException")){
var ex = e$$;
{
System.out.println$O(ex);
ex.printStackTrace$();
}
} else {
throw e$$;
}
}
}return result;
});

Clazz_newMeth(C$, 'getAsyncClipboardContents$jme_io_TextTransfer_PasteAction',  function (pasteAction) {
this.pasteAction=pasteAction;
var content=this.getClipboardContents$();
if (content != null ) {
pasteAction.paste$S(content);
} else {
}});

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.pasteAction.paste$S(e.getActionCommand$());
});
;
(function(){/*i*/var C$=Clazz_newInterface(P$.TextTransfer, "PasteAction", function(){
});
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.ocl"),I$=[[0,'com.actelion.research.chem.inchi.InChIOCL','com.actelion.research.chem.StereoMolecule','com.actelion.research.chem.MolfileParser','jme.io.JMESVGWriter','com.actelion.research.gui.generic.GenericRectangle','com.actelion.research.chem.IDCodeParser','com.actelion.research.chem.MolfileCreator','jme.JMEmol','com.actelion.research.chem.SmilesParser','com.actelion.research.chem.moreparsers.InChIParser','com.actelion.research.chem.moreparsers.InChIKeyResolver','com.actelion.research.chem.moreparsers.CDXParser','com.actelion.research.chem.coords.CoordinateInventor',['jme.io.JMEReader','.SupportedInputFileFormat'],'com.actelion.research.chem.AromaticityResolver',['jme.gui.GUI','.Ring']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "OclAdapter");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getInchiVersion$',  function () {
return $I$(1).getInChIVersion$();
});

Clazz_newMeth(C$, 'getOclCode$S',  function (molFile) {
var result=null;
var mol=Clazz_new_($I$(2,1));
if (Clazz_new_($I$(3,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, molFile)) {
result=mol.getIDCode$();
}return result;
});

Clazz_newMeth(C$, 'getOclSVG$S',  function (molFile) {
var width=400;
var height=300;
var mol=Clazz_new_($I$(2,1));
if (Clazz_new_($I$(3,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, molFile)) {
var svgd=Clazz_new_($I$(4,1).c$$com_actelion_research_chem_StereoMolecule$S,[mol, molFile]);
svgd.setLegacyMode$Z(false);
svgd.validateView$O$com_actelion_research_gui_generic_GenericRectangle$I(null, Clazz_new_($I$(5,1).c$$D$D$D$D,[0, 0, width, height]), 131072);
svgd.paint$O(null);
return svgd.toString();
}return null;
});

Clazz_newMeth(C$, 'OclCodeToMOL$S',  function (oclCode) {
var mol=Clazz_new_($I$(6,1)).getCompactMolecule$S(oclCode.trim$());
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
});

Clazz_newMeth(C$, 'SMILEStoMOL$S',  function (smiles) {
if (smiles == null  || smiles.length$() == 0  || smiles.trim$().length$() == 0 ) return Clazz_new_($I$(8,1)).createMolFile$S("");
var mol=Clazz_new_($I$(2,1));
Clazz_new_($I$(9,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, smiles.trim$());
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
});

Clazz_newMeth(C$, 'v3000toV2000MOL$S',  function (v3000Mol) {
var mol=Clazz_new_($I$(2,1));
var success=Clazz_new_($I$(3,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, v3000Mol);
if (success) {
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
}return null;
});

Clazz_newMeth(C$, 'inchiToMOL$S',  function (inchi) {
var mol=Clazz_new_($I$(2,1));
var success=Clazz_new_($I$(10,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, inchi);
if (success) {
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
}return null;
});

Clazz_newMeth(C$, 'molToInChI$S$S',  function (molFileData, options) {
var mol=Clazz_new_($I$(2,1));
Clazz_new_($I$(3,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, molFileData);
return $I$(1).getInChI$S$S(molFileData, options);
});

Clazz_newMeth(C$, 'inchikeyToMOL$S',  function (inchikey) {
var mol=Clazz_new_($I$(2,1));
var success=Clazz_new_($I$(11,1)).resolve$com_actelion_research_chem_StereoMolecule$S(mol, inchikey);
if (success) {
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
}return null;
});

Clazz_newMeth(C$, 'cdxmlToMOL$S',  function (xml) {
var mol=Clazz_new_($I$(2,1));
var success=Clazz_new_($I$(12,1)).parse$com_actelion_research_chem_StereoMolecule$S(mol, xml);
if (success) {
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
}return null;
});

Clazz_newMeth(C$, 'cdxToMOL$BA',  function (bytes) {
var mol=Clazz_new_($I$(2,1));
var success=Clazz_new_($I$(12,1)).parse$com_actelion_research_chem_StereoMolecule$BA(mol, bytes);
if (success) {
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[mol]);
return mfc.getMolfile$();
}return null;
});

Clazz_newMeth(C$, 'compute2Dcoordinates$jme_JMEmol',  function (mol) {
var result=mol;
var molCopy=mol;
var hasExplicitHydrogens=mol.hasHydrogen$();
if (hasExplicitHydrogens) {
molCopy=mol.deepCopy$();
for (var i=1; i <= molCopy.natoms; i++) {
var atom=molCopy.getAtom$I(i);
if (atom.an == 1) {
atom.an=32;
atom.iso=0;
atom.label="A" + i;
}}
}var molFile=molCopy.createMolFile$S("");
var oclMol=Clazz_new_($I$(2,1));
if (Clazz_new_($I$(3,1)).parse$com_actelion_research_chem_StereoMolecule$S(oclMol, molFile)) {
var computed2D=true;
try {
Clazz_new_($I$(13,1).c$$I,[0]).invent$com_actelion_research_chem_StereoMolecule(oclMol);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
computed2D=false;
result=null;
} else {
throw e;
}
}
if (computed2D) {
if (oclMol.getAllAtoms$() == mol.nAtoms$()) {
for (var i=0; i < oclMol.getAllAtoms$(); i++) {
mol.XY$I$D$D(i + 1, oclMol.getAtomX$I(i), oclMol.getAtomY$I(i));
}
mol.internalBondLengthScaling$();
} else {
var mfc=Clazz_new_($I$(7,1).c$$com_actelion_research_chem_ExtendedMolecule,[oclMol]);
try {
result=Clazz_new_([mol.jme, mfc.getMolfile$(), $I$(14).MOL, mol.parameters],$I$(8,1).c$$jme_JME$O$jme_io_JMEReader_SupportedInputFileFormat$jme_core_JMECore_Parameters);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
} else {
throw e;
}
}
result.chiralFlag=mol.chiralFlag;
result.internalBondLengthScaling$();
}}}return result;
}, 1);

Clazz_newMeth(C$, 'reComputeBondOrderIfAromaticBondType$jme_JMEmol',  function (mol) {
if (!mol.hasAromaticBondType$()) {
return mol;
}var molFile=mol.createMolFile$S("");
var result=mol.deepCopy$();
var oclMol=Clazz_new_($I$(2,1));
if (!Clazz_new_($I$(3,1)).parse$com_actelion_research_chem_StereoMolecule$S(oclMol, molFile)) {
return mol;
}if (!(oclMol.getAllAtoms$() == mol.nAtoms$() && oclMol.getAllBonds$() == mol.nBonds$() )) {
return null;
}var computeBondOrder=true;
try {
var bondFixer=Clazz_new_($I$(15,1).c$$com_actelion_research_chem_ExtendedMolecule,[oclMol]);
bondFixer.locateDelocalizedDoubleBonds$ZA(null);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
computeBondOrder=false;
result=null;
} else {
throw e;
}
}
if (computeBondOrder) {
for (var b=0; b < oclMol.getAllBonds$(); b++) {
var bo=oclMol.getBondOrder$I(b);
var at1=oclMol.getBondAtom$I$I(0, b);
var at2=oclMol.getBondAtom$I$I(1, b);
var charge1=oclMol.getAtomCharge$I(at1++);
var charge2=oclMol.getAtomCharge$I(at2++);
if (mol.q$I(at1) != charge1 || mol.q$I(at2) != charge2 ) {
return null;
}var bond=result.bonds[b + 1];
if ((at1 == bond.va && at2 == bond.vb ) || (at2 == bond.va && at1 == bond.vb ) ) {
bond.bondType=bo;
} else {
return null;
}}
}return result;
}, 1);

Clazz_newMeth(C$, 'getRingInfo$jme_gui_GUI_RingInfo$jme_core_JMECore',  function (info, mol) {
var m=Clazz_new_($I$(2,1));
for (var i=1; i <= mol.natoms; i++) {
var a=mol.atoms[i];
var an=6;
switch (a.an) {
case 2:
an=5;
break;
case 4:
an=7;
break;
case 5:
an=8;
case 7:
an=15;
break;
case 8:
an=16;
case 13:
an=34;
break;
case 6:
an=14;
break;
case 9:
case 10:
case 11:
case 12:
an=9;
break;
case 1:
an=1;
break;
}
m.setAtomicNo$I$I(m.addAtom$D$D(a.x, a.y), an);
}
for (var i=1; i <= mol.nbonds; i++) {
var b=mol.bonds[i];
var type=b.bondType;
switch (b.bondType) {
case 1:
case 2:
type=b.bondType;
break;
case 3:
type=4;
break;
default:
type=1;
break;
}
m.setBondType$I$I(m.addBond$I$I(b.va - 1, b.vb - 1), type);
}
try {
var sys=m.getRingSet$();
for (var i=sys.getSize$(); --i >= 0; ) {
var isAromatic=sys.isAromatic$I(i);
if (isAromatic) info.bsAromaticRings.set$I(i);
var r=Clazz_new_($I$(16,1));
info.rings.add$O(r);
var bonds=sys.getRingBonds$I(i);
for (var j=bonds.length; --j >= 0; ) {
var pt=bonds[j] + 1;
r.bsBonds.set$I(pt);
var a1=mol.bonds[pt].va;
var a2=mol.bonds[pt].vb;
r.bsAtoms.set$I(a1);
r.bsAtoms.set$I(a2);
r.isAromatic=isAromatic;
if (mol.atoms[a1].an != 3) r.isHetero=true;
}
r.size=r.bsAtoms.cardinality$();
r.bondCount=r.bsBonds.cardinality$();
info.bsRingAtoms.or$java_util_BitSet(r.bsAtoms);
info.bsRingBonds.or$java_util_BitSet(r.bsBonds);
if (isAromatic) info.bsAromaticAtoms.or$java_util_BitSet(r.bsAtoms);
}
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.out.println$O(e);
} else {
throw e;
}
}
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:49:44 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("jme.util"),p$1={},I$=[[0,['jme.util.ChangeManager','.Node']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "ChangeManager", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['Node',2]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.currentIndex=null;
this.parentNode=Clazz_new_($I$(1,1),[this, null]);
},1);

C$.$fields$=[['O',['currentIndex','jme.util.ChangeManager.Node','+parentNode']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.currentIndex=this.parentNode;
}, 1);

Clazz_newMeth(C$, 'c$$jme_util_ChangeManager',  function (manager) {
C$.c$.apply(this, []);
this.currentIndex=manager.currentIndex;
}, 1);

Clazz_newMeth(C$, 'clear$',  function () {
this.currentIndex=this.parentNode;
this.parentNode.right=null;
});

Clazz_newMeth(C$, 'insertItem$O',  function (item) {
if (item == null ) {
System.err.println$S("Null item");
}var node=Clazz_new_($I$(1,1).c$$O,[this, null, item]);
Clazz_assert(C$, this, function(){return (item != null )});
var savedRight=this.currentIndex.right;
this.currentIndex.right=node;
node.left=this.currentIndex;
if (savedRight != null ) {
node.right=savedRight;
savedRight.left=node;
}this.currentIndex=node;
});

Clazz_newMeth(C$, 'removeLast$',  function () {
if (!this.canUndo$()) {
return null;
}var savedRight=this.currentIndex.right;
var lastItem=this.currentIndex.item;
this.undo$();
;this.currentIndex.right=savedRight;
return lastItem;
});

Clazz_newMeth(C$, 'canUndo$',  function () {
return this.currentIndex !== this.parentNode  && this.currentIndex.left !== this.parentNode  ;
});

Clazz_newMeth(C$, 'canRedo$',  function () {
return this.currentIndex.right != null ;
});

Clazz_newMeth(C$, 'undo$',  function () {
if (!this.canUndo$()) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Cannot undo. Index is out of range."]);
}p$1.moveLeft.apply(this, []);
var item=this.currentIndex.item;
return item;
});

Clazz_newMeth(C$, 'moveLeft',  function () {
if (this.currentIndex.left == null ) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Internal index set to null."]);
}this.currentIndex=this.currentIndex.left;
}, p$1);

Clazz_newMeth(C$, 'moveRight',  function () {
if (this.currentIndex.right == null ) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Internal index set to null."]);
}this.currentIndex=this.currentIndex.right;
}, p$1);

Clazz_newMeth(C$, 'redo$',  function () {
if (!this.canRedo$()) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Cannot redo. Index is out of range."]);
}p$1.moveRight.apply(this, []);
var item=this.currentIndex.item;
return item;
});

C$.$static$=function(){C$.$static$=0;
C$.$_ASSERT_ENABLED_ = ClassLoader.getClassAssertionStatus$(C$);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.ChangeManager, "Node", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.left=null;
this.right=null;
},1);

C$.$fields$=[['O',['left','jme.util.ChangeManager.Node','+right','item','<N>']]]

Clazz_newMeth(C$, 'c$$O',  function (c) {
;C$.$init$.apply(this);
this.item=c;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
this.item=null;
}, 1);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2025-02-16 14:17:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("org.jmol.api"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "SmilesMatcherInterface");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-12 16:30:58 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "InvalidSmilesException", null, 'Exception');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['S',['lastError']]]

Clazz_newMeth(C$, 'getLastError$',  function () {
return C$.lastError;
}, 1);

Clazz_newMeth(C$, 'clear$',  function () {
C$.lastError=null;
}, 1);

Clazz_newMeth(C$, 'getMessage$',  function () {
return C$.lastError;
});

Clazz_newMeth(C$, 'c$$S',  function (message) {
;C$.superclazz.c$$S.apply(this,[message]);C$.$init$.apply(this);
C$.lastError=(message.startsWith$S("Jmol SMILES") ? message : "Jmol SMILES Exception: " + message);
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:19 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),I$=[[0,'org.jmol.util.BSUtil','javajs.util.Lst','org.jmol.smiles.SmilesRing','javajs.util.V3d','javajs.util.MeasureD','org.jmol.util.Logger','javajs.util.BS','java.util.Hashtable','org.jmol.smiles.SmilesRingSet']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesAromatic");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['OS_PI_COUNTS','int[][]']]]

Clazz_newMeth(C$, 'setAromatic$I$org_jmol_util_NodeA$javajs_util_BS$javajs_util_Lst$javajs_util_BS$I$Z$Z$Z$org_jmol_smiles_VTemp$javajs_util_Lst$javajs_util_Lst$IA$Z',  function (n, jmolAtoms, bsSelected, vR, bsAromatic, strictness, isOpenSMILES, justCheckBonding, checkExplicit, v, vOK, lstSP2, eCounts, doTestAromatic) {
var doCheck=(isOpenSMILES || strictness > 0 );
if (!doTestAromatic) {
for (var r=vR.size$(); --r >= 0; ) {
var bs=$I$(1,"copy$javajs_util_BS",[vR.get$I(r)]);
bs.and$javajs_util_BS(bsAromatic);
if (bs.cardinality$() == n) vOK.addLast$O(bs);
}
return;
}for (var r=vR.size$(); --r >= 0; ) {
var bs=vR.get$I(r);
var isOK=C$.isSp2Ring$I$org_jmol_util_NodeA$javajs_util_BS$javajs_util_BS$D$Z$Z(n, jmolAtoms, bsSelected, bs, (justCheckBonding ? 1.7976931348623157E308 : strictness > 0 ? 0.1 : 0.01), checkExplicit, strictness == 0);
if (!isOK) continue;
bsAromatic.or$javajs_util_BS(bs);
if (doCheck) {
var edges=Clazz_new_($I$(2,1));
for (var i=bs.nextSetBit$I(0); i >= 0; i=bs.nextSetBit$I(i + 1)) {
var a=jmolAtoms[i];
var aedges=a.getEdges$();
var ai=a.getIndex$();
for (var j=aedges.length; --j >= 0; ) {
var a2=aedges[j].getOtherNode$org_jmol_util_SimpleNode(a);
var a2i=a2.getIndex$();
if (a2i > ai && bs.get$I(a2i) ) edges.addLast$O(aedges[j]);
}
}
switch (C$.checkHueckelAromatic$I$org_jmol_util_NodeA$javajs_util_BS$javajs_util_BS$I$IA(n, jmolAtoms, bsAromatic, bs, strictness, eCounts)) {
case -1:
continue;
case 0:
isOK=false;
case 1:
if (lstSP2 != null ) lstSP2.addLast$O(Clazz_new_($I$(3,1).c$$I$javajs_util_BS$javajs_util_Lst$Z,[n, bs, edges, isOK]));
if (!isOK) continue;
}
}vOK.addLast$O(bs);
}
}, 1);

Clazz_newMeth(C$, 'checkAromaticDefined$org_jmol_util_NodeA$javajs_util_BS$javajs_util_BS',  function (jmolAtoms, bsSelected, bsAromatic) {
for (var i=bsSelected.nextSetBit$I(0); i >= 0; i=bsSelected.nextSetBit$I(i + 1)) {
var bonds=jmolAtoms[i].getEdges$();
for (var j=0; j < bonds.length; j++) {
switch (bonds[j].getBondType$()) {
case 515:
case 514:
case 513:
bsAromatic.set$I(bonds[j].getAtomIndex1$());
bsAromatic.set$I(bonds[j].getAtomIndex2$());
}
}
}
}, 1);

Clazz_newMeth(C$, 'isSp2Ring$I$org_jmol_util_NodeA$javajs_util_BS$javajs_util_BS$D$Z$Z',  function (n, atoms, bsSelected, bs, cutoff, checkExplicit, allowSOxide) {
if (checkExplicit) {
for (var i=bs.nextSetBit$I(0); i >= 0; i=bs.nextSetBit$I(i + 1)) if (atoms[i].getCovalentBondCount$() > 3) return false;

} else {
for (var i=bs.nextSetBit$I(0); i >= 0; i=bs.nextSetBit$I(i + 1)) if (atoms[i].getCovalentBondCountPlusMissingH$() > 3) return false;

}if (cutoff == 1.7976931348623157E308 ) return true;
if (cutoff <= 0 ) cutoff=0.01;
var vNorm=null;
var vTemp=null;
var vMean=null;
var nPoints=bs.cardinality$();
var vNorms=Clazz_array($I$(4), [nPoints * 2]);
var nNorms=0;
var maxDev=(1 - cutoff * 5);
for (var i=bs.nextSetBit$I(0); i >= 0; i=bs.nextSetBit$I(i + 1)) {
var ringAtom=atoms[i];
var bonds=ringAtom.getEdges$();
var iSub=-1;
var r1=-1;
var r2=-1;
for (var k=bonds.length; --k >= 0; ) {
var iAtom=ringAtom.getBondedAtomIndex$I(k);
if (!bsSelected.get$I(iAtom)) continue;
if (!bs.get$I(iAtom)) {
if (ringAtom.getElementNumber$() == 16) {
if (!allowSOxide) return false;
iAtom=-1;
}iSub=iAtom;
} else if (r1 < 0) {
r1=iAtom;
} else {
r2=iAtom;
}}
if (vMean == null ) {
vMean=Clazz_new_($I$(4,1));
vNorm=Clazz_new_($I$(4,1));
vTemp=Clazz_new_($I$(4,1));
}for (var k=0, j=i; k < 2; k++) {
$I$(5).getNormalThroughPoints$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(atoms[r1], atoms[j], atoms[r2], vNorm, vTemp);
if (!C$.addNormal$javajs_util_V3d$javajs_util_V3d$D(vNorm, vMean, maxDev)) return false;
vNorms[nNorms++]=$I$(4).newV$javajs_util_T3d(vNorm);
if ((j=iSub) < 0) break;
}
}
return C$.checkStandardDeviation$javajs_util_V3dA$javajs_util_V3d$I$D(vNorms, vMean, nNorms, cutoff);
}, 1);

Clazz_newMeth(C$, 'addNormal$javajs_util_V3d$javajs_util_V3d$D',  function (vTemp, vMean, maxDev) {
var similarity=vMean.dot$javajs_util_T3d(vTemp);
if (similarity != 0  && Math.abs(similarity) < maxDev  ) return false;
if (similarity < 0 ) vTemp.scale$D(-1);
vMean.add$javajs_util_T3d(vTemp);
vMean.normalize$();
return true;
}, 1);

Clazz_newMeth(C$, 'checkStandardDeviation$javajs_util_V3dA$javajs_util_V3d$I$D',  function (vNorms, vMean, n, cutoff) {
var sum=0;
var sum2=0;
for (var i=0; i < n; i++) {
var v=vNorms[i].dot$javajs_util_T3d(vMean);
sum+=v;
sum2+=v * v;
}
sum=Math.sqrt((sum2 - sum * sum / n) / (n - 1));
return (sum < cutoff );
}, 1);

Clazz_newMeth(C$, 'checkHueckelAromatic$I$org_jmol_util_NodeA$javajs_util_BS$javajs_util_BS$I$IA',  function (nAtoms, jmolAtoms, bsAromatic, bsRing, strictness, eCounts) {
var npi=0;
var n1=0;
for (var i=bsRing.nextSetBit$I(0); i >= 0 && npi >= 0 ; i=bsRing.nextSetBit$I(i + 1)) {
var atom=jmolAtoms[i];
var z=atom.getElementNumber$();
var n=atom.getCovalentBondCountPlusMissingH$();
n+=atom.getValence$();
n-=4;
if (z == 6) {
var fc=atom.getFormalCharge$();
if (fc != -2147483648) n+=fc;
}var pt=(z >= 5 && z <= 8  ? z - 5 : z == 15 ? 2 : z == 34 ? 3 : z == 33 ? 4 : z == 16 ? 5 : -1);
if (pt >= 0) {
var a=C$.OS_PI_COUNTS[pt];
if (n < 0 || n >= a.length ) return -1;
switch (n=a[n]) {
case -2:
return -1;
case -1:
var bonds=atom.getEdges$();
n=0;
for (var j=bonds.length; --j >= 0; ) {
var b=bonds[j];
if (b.getCovalentOrder$() != 2) continue;
var het=b.getOtherNode$org_jmol_util_SimpleNode(atom);
n=(het.getElementNumber$() == 6 || bsAromatic.get$I(het.getIndex$())  ? 1 : strictness > 0 ? -100 : 0);
break;
}
default:
if (n < 0) return -1;
if (eCounts != null ) eCounts[i]=n;
npi+=n;
if (n == 1) ++n1;
if ($I$(6).debuggingHigh) $I$(6,"info$S",["atom " + atom + " pi=" + n + " npi=" + npi ]);
continue;
}
}}
return ((npi - 2) % 4 == 0 && (strictness < 2 || nAtoms == 5  || n1 == 6 )  ? 1 : 0);
}, 1);

Clazz_newMeth(C$, 'finalizeAromatic$org_jmol_util_NodeA$javajs_util_BS$javajs_util_Lst$javajs_util_Lst$IA$Z$Z',  function (jmolAtoms, bsAromatic, lstAromatic, lstSP2, eCounts, isOpenNotStrict, isStrict) {
if (isStrict) C$.removeBridgingRings$javajs_util_Lst$javajs_util_Lst(lstAromatic, lstSP2);
C$.checkFusedRings$javajs_util_Lst$IA$javajs_util_Lst(lstSP2, eCounts, lstAromatic);
bsAromatic.clearAll$();
for (var i=lstAromatic.size$(); --i >= 0; ) bsAromatic.or$javajs_util_BS(lstAromatic.get$I(i));

if (isStrict || isOpenNotStrict ) {
for (var i=bsAromatic.nextSetBit$I(0); i >= 0; i=bsAromatic.nextSetBit$I(i + 1)) {
var bonds=jmolAtoms[i].getEdges$();
var naro=0;
for (var j=bonds.length; --j >= 0; ) {
var otherAtom=bonds[j].getOtherNode$org_jmol_util_SimpleNode(jmolAtoms[i]);
var order=bonds[j].getCovalentOrder$();
var ai2=otherAtom.getIndex$();
var isJAro=bsAromatic.get$I(ai2);
if (isJAro) {
if (order == 2) {
var isOK=false;
for (var k=lstSP2.size$(); --k >= 0; ) {
var r=lstSP2.get$I(k);
if (r.get$I(i) && r.get$I(ai2) ) {
isOK=true;
break;
}}
if (!isOK) {
naro=-1;
break;
}}++naro;
} else if (isStrict && otherAtom.getElementNumber$() == 6  && order == 2 ) {
naro=-1;
break;
}}
if (naro < 2) {
bsAromatic.clear$I(i);
i=-1;
}}
}}, 1);

Clazz_newMeth(C$, 'removeBridgingRings$javajs_util_Lst$javajs_util_Lst',  function (lstAromatic, lstSP2) {
var bs=Clazz_new_($I$(7,1));
var bsBad=Clazz_new_($I$(7,1));
var bsBad2=Clazz_new_($I$(7,1));
C$.checkBridges$javajs_util_Lst$javajs_util_BS$javajs_util_Lst$javajs_util_BS$javajs_util_BS(lstAromatic, bsBad, lstAromatic, bsBad, bs);
C$.checkBridges$javajs_util_Lst$javajs_util_BS$javajs_util_Lst$javajs_util_BS$javajs_util_BS(lstSP2, bsBad2, lstSP2, bsBad2, bs);
C$.checkBridges$javajs_util_Lst$javajs_util_BS$javajs_util_Lst$javajs_util_BS$javajs_util_BS(lstAromatic, bsBad, lstSP2, bsBad2, bs);
for (var i=lstAromatic.size$(); --i >= 0; ) if (bsBad.get$I(i)) lstAromatic.removeItemAt$I(i);

for (var i=lstSP2.size$(); --i >= 0; ) if (bsBad2.get$I(i)) lstSP2.removeItemAt$I(i);

}, 1);

Clazz_newMeth(C$, 'checkBridges$javajs_util_Lst$javajs_util_BS$javajs_util_Lst$javajs_util_BS$javajs_util_BS',  function (lst, bsBad, lst2, bsBad2, bs) {
var isSameList=(lst === lst2 );
for (var i=lst.size$(); --i >= 0; ) {
var bs1=lst.get$I(i);
for (var j0=(isSameList ? i + 1 : 0), j=lst2.size$(); --j >= j0; ) {
var bs2=lst2.get$I(j);
if (bs2.equals$O(bs1)) continue;
bs.clearAll$();
bs.or$javajs_util_BS(bs1);
bs.and$javajs_util_BS(bs2);
var n=bs.cardinality$();
if (n > 2) {
bsBad.set$I(i);
bsBad2.set$I(j);
}}
}
}, 1);

Clazz_newMeth(C$, 'checkFusedRings$javajs_util_Lst$IA$javajs_util_Lst',  function (rings, eCounts, lstAromatic) {
var htEdgeMap=Clazz_new_($I$(8,1));
for (var i=rings.size$(); --i >= 0; ) {
var r=rings.get$I(i);
var edges=r.edges;
for (var j=edges.size$(); --j >= 0; ) {
var set=$I$(3,"getSetByEdge$org_jmol_util_Edge$java_util_Hashtable",[edges.get$I(j), htEdgeMap]);
if (set == null  || set === r.set  ) continue;
if (r.set != null ) set.addSet$org_jmol_smiles_SmilesRingSet$java_util_Hashtable(r.set, htEdgeMap);
 else set.addRing$org_jmol_smiles_SmilesRing(r);
}
(r.set == null  ? r.set=Clazz_new_($I$(9,1)) : r.set).addRing$org_jmol_smiles_SmilesRing(r);
r.addEdges$java_util_Hashtable(htEdgeMap);
}
var set;
var r;
for (var i=rings.size$(); --i >= 0; ) {
if ((r=rings.get$I(i)).isOK || (set=r.set) == null   || set.isEmpty$() ) continue;
if ((set.getElectronCount$IA(eCounts) % 4) == 2) for (var j=set.size$(); --j >= 0; ) if (!(r=set.get$I(j)).isOK) lstAromatic.addLast$O(r);

set.clear$();
}
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.OS_PI_COUNTS=Clazz_array(Integer.TYPE, -2, [Clazz_array(Integer.TYPE, -1, [-2, 1, 0]), Clazz_array(Integer.TYPE, -1, [1, 2, 1, -1]), Clazz_array(Integer.TYPE, -1, [2, 1, 2, 1, 1]), Clazz_array(Integer.TYPE, -1, [2, 1]), Clazz_array(Integer.TYPE, -1, [-2, 1, 2, 1, -2]), Clazz_array(Integer.TYPE, -1, [2, 1, 2, 2])]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-10 14:32:03 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),p$1={},I$=[[0,'org.jmol.smiles.SmilesBond','javajs.util.AU','org.jmol.util.Logger','org.jmol.util.Elements','org.jmol.viewer.JC']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesAtom", null, 'javajs.util.P3d', 'org.jmol.util.Node');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.patternIndex=-1;
this.bioType="\u0000";
this.notBondedIndex=-1;
this.aromaticAmbiguous=true;
this.covalentHydrogenCount=-1;
this.isFirst=true;
this.jmolIndex=-1;
this.elementNumber=-2;
this.atomNumber=-2147483648;
this.residueNumber=-2147483648;
this.explicitHydrogenCount=-2147483648;
this.implicitHydrogenCount=-2147483648;
this.bonds=Clazz_array($I$(1), [4]);
this.iNested=0;
this.atomicMass=-2147483648;
this.charge=-2147483648;
this.matchingIndex=-1;
this.component=-2147483648;
this.degree=-1;
this.nonhydrogenDegree=-1;
this.valence=0;
this.connectivity=-1;
this.ringMembership=-2147483648;
this.ringSize=-2147483648;
this.ringConnectivity=-1;
this.mapIndex=-1;
this.atomClass=NaN;
},1);

C$.$fields$=[['Z',['isAND','isBioAtom','isBioResidue','isBioAtomWild','isLeadAtom','notCrossLinked','aromaticAmbiguous','not','selected','hasSymbol','elementDefined','isFirst','isAromatic','hasSubpattern','isTopoAtom','hasDoubleBond'],'C',['insCode','bioType'],'D',['atomClass'],'I',['patternIndex','primitiveType','nSubAtoms','index','notBondedIndex','covalentHydrogenCount','jmolIndex','elementNumber','atomNumber','residueNumber','explicitHydrogenCount','implicitHydrogenCount','bondCount','iNested','atomicMass','charge','matchingIndex','component','matchingComponent','atomSite','degree','nonhydrogenDegree','valence','connectivity','ringMembership','ringSize','ringConnectivity','mapIndex','missingHydrogenCount','cipChirality'],'S',['pattern','referance','residueName','residueChar','atomType','bioAtomName','symbol'],'O',['subAtoms','org.jmol.smiles.SmilesAtom[]','parent','org.jmol.smiles.SmilesAtom','bonds','org.jmol.smiles.SmilesBond[]','stereo','org.jmol.smiles.SmilesStereo','matchingNode','org.jmol.util.Node']]]

Clazz_newMeth(C$, 'allowSmilesUnbracketed$S',  function (xx) {
return ("B, C, N, O, P, S, F, Cl, Br, I, *,".indexOf$S(xx + ",") >= 0);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'getAtomType$',  function () {
return (this.atomType == null  ? this.bioAtomName : this.atomType);
});

Clazz_newMeth(C$, 'getChiralClass$',  function () {
return (this.stereo == null  ? -2147483648 : this.stereo.getChiralClass$org_jmol_smiles_SmilesAtom(this));
});

Clazz_newMeth(C$, 'isDefined$',  function () {
return (this.hasSubpattern || this.iNested != 0  || this.isBioAtom  || this.component != -2147483648  || this.elementNumber != -2  || this.nSubAtoms > 0 );
});

Clazz_newMeth(C$, 'setBioAtom$C',  function (bioType) {
this.isBioAtom=(bioType != "\u0000");
this.bioType=bioType;
if (this.parent != null ) {
this.parent.bioType=bioType;
this.parent.isBioAtom=this.isBioAtom;
this.parent.isBioAtomWild=this.isBioAtomWild;
}});

Clazz_newMeth(C$, 'setAtomName$S',  function (name) {
if (name == null ) return;
if (name.length$() > 0) this.bioAtomName=name;
if (name.equals$O("\u0000")) this.isLeadAtom=true;
if (this.parent != null ) {
this.parent.bioAtomName=name;
}});

Clazz_newMeth(C$, 'setBonds$org_jmol_smiles_SmilesBondA',  function (bonds) {
this.bonds=bonds;
});

Clazz_newMeth(C$, 'addSubAtom$org_jmol_smiles_SmilesAtom$Z',  function (sAtom, isAND) {
this.isAND=isAND;
if (this.subAtoms == null ) this.subAtoms=Clazz_array(C$, [2]);
if (this.nSubAtoms >= this.subAtoms.length) this.subAtoms=$I$(2).doubleLength$O(this.subAtoms);
sAtom.setIndex$I(this.index);
sAtom.parent=this;
this.subAtoms[this.nSubAtoms++]=sAtom;
this.setSymbol$S("*");
this.hasSymbol=false;
return sAtom;
});

Clazz_newMeth(C$, 'setIndex$I',  function (index) {
this.index=index;
return this;
});

Clazz_newMeth(C$, 'setTopoAtom$I$I$S$I$I',  function (iComponent, ptAtom, symbol, charge, patternIndex) {
this.component=iComponent;
this.index=ptAtom;
this.patternIndex=patternIndex;
this.setSymbol$S(symbol);
this.charge=charge;
this.isTopoAtom=true;
return this;
});

Clazz_newMeth(C$, 'setHydrogenCount$',  function () {
this.missingHydrogenCount=this.explicitHydrogenCount;
if (this.explicitHydrogenCount != -2147483648) return true;
var charge=this.getFormalCharge$();
var count=C$.getDefaultHCount$I$Z$I(this.elementNumber, this.isAromatic, charge == -2147483648 ? 0 : charge);
if (count < 0) {
this.missingHydrogenCount=0;
return (count == -1);
}if (this.elementNumber == 7 && this.isAromatic  && this.bondCount == 2 ) {
if (this.bonds[0].getBondType$() == 1 && this.bonds[1].getBondType$() == 1 ) ++count;
}for (var i=0; i < this.bondCount; i++) {
var bond=this.bonds[i];
switch (bond.getBondType$()) {
case 81:
if (this.elementNumber == 7) {
$I$(3).info$S("Ambiguous bonding to aromatic N found -- MF may be in error");
}count-=1;
break;
case 1025:
case 1041:
case 65537:
case 65538:
count-=1;
break;
case 2:
count-=(this.isAromatic && this.elementNumber == 6  ? 1 : 2);
break;
case 1:
case 3:
case 4:
count-=bond.getBondType$();
break;
}
}
if (count >= 0) this.missingHydrogenCount=this.explicitHydrogenCount=count;
return true;
});

Clazz_newMeth(C$, 'getDefaultHCount$I$Z$I',  function (elementNumber, isAromatic, charge) {
switch (elementNumber) {
case 0:
case -1:
case -2:
return -1;
case 1:
return 1;
case 6:
return (isAromatic ? 3 : 4) + (charge == 0 ? 0 : 1);
case 8:
case 16:
return 2 + charge;
case 7:
return (isAromatic ? 2 : 3) + charge;
case 5:
case 15:
return 3;
case 9:
case 17:
case 35:
case 53:
return 1 + charge;
default:
return 0;
}
}, 1);

Clazz_newMeth(C$, 'getIndex$',  function () {
return this.index;
});

Clazz_newMeth(C$, 'setSymbol$S',  function (symbol) {
this.symbol=symbol;
this.isAromatic=symbol.equals$O(symbol.toLowerCase$());
this.hasSymbol=true;
this.elementDefined=true;
if (symbol.equals$O("*")) {
this.isAromatic=false;
this.elementNumber=-2;
return true;
}if (symbol.equals$O("Xx")) {
this.elementNumber=0;
return true;
}this.aromaticAmbiguous=false;
if (symbol.equals$O("a") || symbol.equals$O("A") ) {
if (this.elementNumber < 0) this.elementNumber=-1;
return true;
}if (this.isAromatic) symbol=symbol.substring$I$I(0, 1).toUpperCase$() + (symbol.length$() == 1 ? "" : symbol.substring$I(1));
this.elementNumber=$I$(4).elementNumberFromSymbol$S$Z(symbol, true);
return (this.elementNumber != 0);
});

Clazz_newMeth(C$, 'getElementNumber$',  function () {
return this.elementNumber;
});

Clazz_newMeth(C$, 'getAtomicMass$',  function () {
return this.atomicMass;
});

Clazz_newMeth(C$, 'getAtomNumber$',  function () {
return this.atomNumber;
});

Clazz_newMeth(C$, 'setAtomicMass$I',  function (mass) {
this.atomicMass=mass;
});

Clazz_newMeth(C$, 'getCharge$',  function () {
return this.charge;
});

Clazz_newMeth(C$, 'setCharge$I',  function (charge) {
this.charge=charge;
});

Clazz_newMeth(C$, 'getMatchingAtomIndex$',  function () {
return this.matchingIndex;
});

Clazz_newMeth(C$, 'getMatchingAtom$',  function () {
return this.matchingNode == null  ? this : this.matchingNode;
});

Clazz_newMeth(C$, 'setMatchingAtom$org_jmol_util_Node$I',  function (jmolAtom, index) {
this.matchingNode=jmolAtom;
this.matchingIndex=index;
});

Clazz_newMeth(C$, 'setExplicitHydrogenCount$I',  function (count) {
this.explicitHydrogenCount=count;
});

Clazz_newMeth(C$, 'setImplicitHydrogenCount$I',  function (count) {
this.implicitHydrogenCount=count;
});

Clazz_newMeth(C$, 'setDegree$I',  function (degree) {
this.degree=degree;
});

Clazz_newMeth(C$, 'setNonhydrogenDegree$I',  function (degree) {
this.nonhydrogenDegree=degree;
});

Clazz_newMeth(C$, 'setValence$I',  function (valence) {
this.valence=valence;
});

Clazz_newMeth(C$, 'setConnectivity$I',  function (connectivity) {
this.connectivity=connectivity;
});

Clazz_newMeth(C$, 'setRingMembership$I',  function (rm) {
this.ringMembership=rm;
});

Clazz_newMeth(C$, 'setRingSize$I',  function (rs) {
this.ringSize=rs;
if (this.ringSize == 500 || this.ringSize == 600 ) this.isAromatic=true;
});

Clazz_newMeth(C$, 'setRingConnectivity$I',  function (rc) {
this.ringConnectivity=rc;
});

Clazz_newMeth(C$, 'getModelIndex$',  function () {
return this.component;
});

Clazz_newMeth(C$, 'getMoleculeNumber$Z',  function (inModel) {
return this.component;
});

Clazz_newMeth(C$, 'getAtomSite$',  function () {
return this.atomSite;
});

Clazz_newMeth(C$, 'getFormalCharge$',  function () {
return this.charge;
});

Clazz_newMeth(C$, 'getIsotopeNumber$',  function () {
return this.atomicMass;
});

Clazz_newMeth(C$, 'getAtomicAndIsotopeNumber$',  function () {
return $I$(4).getAtomicAndIsotopeNumber$I$I(this.elementNumber, this.atomicMass);
});

Clazz_newMeth(C$, 'getAtomName$',  function () {
return this.bioAtomName == null  ? "" : this.bioAtomName;
});

Clazz_newMeth(C$, 'getGroup3$Z',  function (allowNull) {
return this.residueName == null  ? "" : this.residueName;
});

Clazz_newMeth(C$, 'getGroup1$C',  function (c0) {
return this.residueChar == null  ? "" : this.residueChar;
});

Clazz_newMeth(C$, 'addBond$org_jmol_smiles_SmilesBond',  function (bond) {
if (this.bondCount >= this.bonds.length) this.bonds=$I$(2).doubleLength$O(this.bonds);
this.bonds[this.bondCount]=bond;
if (bond.order == 2) {
this.hasDoubleBond=true;
}++this.bondCount;
});

Clazz_newMeth(C$, 'setBondArray$',  function () {
if (this.bonds.length > this.bondCount) this.bonds=$I$(2).arrayCopyObject$O$I(this.bonds, this.bondCount);
if (this.subAtoms != null  && this.subAtoms.length > this.nSubAtoms ) this.subAtoms=$I$(2).arrayCopyObject$O$I(this.subAtoms, this.subAtoms.length);
for (var i=0; i < this.bonds.length; i++) {
var b=this.bonds[i];
if (this.isBioAtom && b.getBondType$() == 17 ) {
b.order=112;
} else if (b.order == 2) {
b.atom1.hasDoubleBond=b.atom2.hasDoubleBond=true;
}if (b.atom1.index > b.atom2.index) {
b.switchAtoms$();
}}
});

Clazz_newMeth(C$, 'getEdges$',  function () {
return (this.parent != null  ? this.parent.getEdges$() : this.bonds);
});

Clazz_newMeth(C$, 'getBond$I',  function (number) {
return (this.parent != null  ? this.parent.getBond$I(number) : number >= 0 && number < this.bondCount  ? this.bonds[number] : null);
});

Clazz_newMeth(C$, 'getCovalentBondCount$',  function () {
return this.getBondCount$();
});

Clazz_newMeth(C$, 'getBondCount$',  function () {
return (this.parent != null  ? this.parent.getBondCount$() : this.bondCount);
});

Clazz_newMeth(C$, 'getCovalentBondCountPlusMissingH$',  function () {
return this.getBondCount$() + (this.isTopoAtom ? 0 : this.missingHydrogenCount);
});

Clazz_newMeth(C$, 'getTotalHydrogenCount$',  function () {
return this.getCovalentHydrogenCount$() + (this.isTopoAtom ? 0 : this.missingHydrogenCount);
});

Clazz_newMeth(C$, 'getImplicitHydrogenCount$',  function () {
return this.implicitHydrogenCount;
});

Clazz_newMeth(C$, 'getExplicitHydrogenCount$',  function () {
return this.explicitHydrogenCount;
});

Clazz_newMeth(C$, 'getMatchingBondedAtom$I',  function (i) {
if (this.parent != null ) return this.parent.getMatchingBondedAtom$I(i);
if (i >= this.bondCount) return -1;
var b=this.bonds[i];
return (b.atom1 === this  ? b.atom2 : b.atom1).matchingIndex;
});

Clazz_newMeth(C$, 'getBondedAtomIndex$I',  function (j) {
return (this.parent != null  ? this.parent.getBondedAtomIndex$I(j) : this.bonds[j].getOtherAtom$org_jmol_smiles_SmilesAtom(this).index);
});

Clazz_newMeth(C$, 'getCovalentHydrogenCount$',  function () {
if (this.covalentHydrogenCount >= 0) return this.covalentHydrogenCount;
if (this.parent != null ) return (this.covalentHydrogenCount=this.parent.getCovalentHydrogenCount$());
this.covalentHydrogenCount=0;
for (var k=0; k < this.bonds.length; k++) if (this.bonds[k].getOtherAtom$org_jmol_smiles_SmilesAtom(this).elementNumber == 1) ++this.covalentHydrogenCount;

return this.covalentHydrogenCount;
});

Clazz_newMeth(C$, 'getValence$',  function () {
if (this.parent != null ) return this.parent.getValence$();
var n=this.valence;
if (n <= 0 && this.bonds != null  ) for (var i=this.bondCount; --i >= 0; ) n+=this.bonds[i].getValence$();

this.valence=n;
return n;
});

Clazz_newMeth(C$, 'getTotalValence$',  function () {
return this.getValence$() + (this.isTopoAtom ? 0 : this.missingHydrogenCount);
});

Clazz_newMeth(C$, 'getBondTo$org_jmol_smiles_SmilesAtom',  function (atom) {
if (this.parent != null ) return this.parent.getBondTo$org_jmol_smiles_SmilesAtom(atom);
var bond;
for (var k=0; k < this.bonds.length; k++) {
if ((bond=this.bonds[k]) == null ) continue;
if (atom == null  ? bond.atom2 === this  : bond.getOtherAtom$org_jmol_smiles_SmilesAtom(this) === atom ) return bond;
}
return null;
});

Clazz_newMeth(C$, 'getBondNotTo$org_jmol_smiles_SmilesAtom$Z',  function (atom, allowH) {
var bond;
for (var k=0; k < this.bonds.length; k++) {
if ((bond=this.bonds[k]) == null ) continue;
var atom2=bond.getOtherAtom$org_jmol_smiles_SmilesAtom(this);
if (atom !== atom2  && (allowH || atom2.elementNumber != 1 ) ) return bond;
}
return null;
});

Clazz_newMeth(C$, 'isLeadAtom$',  function () {
return this.isLeadAtom;
});

Clazz_newMeth(C$, 'getOffsetResidueAtom$S$I',  function (name, offset) {
if (this.isBioAtom) {
if (offset == 0) return this.index;
for (var k=0; k < this.bonds.length; k++) if (this.bonds[k].getAtomIndex1$() == this.index && this.bonds[k].getBondType$() == 96 ) return this.bonds[k].getOtherAtom$org_jmol_smiles_SmilesAtom(this).index;

}return -1;
});

Clazz_newMeth(C$, 'getGroupBits$javajs_util_BS',  function (bs) {
bs.set$I(this.index);
return;
});

Clazz_newMeth(C$, 'isCrossLinked$org_jmol_util_Node',  function (node) {
var bond=this.getBondTo$org_jmol_smiles_SmilesAtom(node);
return bond.isHydrogen$();
});

Clazz_newMeth(C$, 'getCrossLinkVector$javajs_util_Lst$Z$Z',  function (vLinks, crosslinkCovalent, crosslinkHBond) {
var haveCrossLinks=false;
for (var k=0; k < this.bonds.length; k++) if (this.bonds[k].order == 112) {
if (vLinks == null ) return true;
vLinks.addLast$O(Integer.valueOf$I(this.index));
vLinks.addLast$O(Integer.valueOf$I(this.bonds[k].getOtherAtom$org_jmol_smiles_SmilesAtom(this).index));
vLinks.addLast$O(Integer.valueOf$I(this.bonds[k].getOtherAtom$org_jmol_smiles_SmilesAtom(this).index));
haveCrossLinks=true;
}
return haveCrossLinks;
});

Clazz_newMeth(C$, 'getBioStructureTypeName$',  function () {
return null;
});

Clazz_newMeth(C$, 'getInsertionCode$',  function () {
return this.insCode;
});

Clazz_newMeth(C$, 'getResno$',  function () {
return this.residueNumber;
});

Clazz_newMeth(C$, 'getChainID$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getChainIDStr$',  function () {
return "";
});

Clazz_newMeth(C$, 'getAtomLabel$I$I$I$I$D$I$Z$S$Z',  function (atomicNumber, isotopeNumber, valence, charge, osclass, nH, isAromatic, stereo, is2D) {
var sym=$I$(4).elementSymbolFromNumber$I(atomicNumber);
if (atomicNumber == 1 || isAromatic && !(sym=sym.toLowerCase$()).equals$O("c") && !sym.equals$O("o") && !sym.equals$O("s")   ) {
valence=2147483647;
}var simple=(valence != 2147483647 && isotopeNumber <= 0  && charge == 0  && Double.isNaN$D(osclass)  && (stereo == null  || stereo.length$() == 0 ) );
var norm=C$.getDefaultHCount$I$Z$I(atomicNumber, false, charge == -2147483648 ? 0 : charge);
if (is2D && nH == 0 ) {
if (simple && atomicNumber == 6 ) return sym;
nH=norm - valence;
}return (simple && norm == valence  ? sym : "[" + (isotopeNumber <= 0 ? "" : "" + isotopeNumber) + sym + (stereo == null  ? "" : stereo) + (nH > 1 ? "H" + nH : nH == 1 ? "H" : "") + (charge == -2147483648 || charge == 0  ? "" : charge < 0 ? "" + charge : "+" + charge) + (Double.isNaN$D(osclass) ? "" : ":" + (osclass|0)) + "]" );
}, 1);

Clazz_newMeth(C$, 'getBioSmilesType$',  function () {
return this.bioType;
});

Clazz_newMeth(C$, 'isNucleic$',  function () {
return this.bioType == "n" || this.bioType == "r"  || this.bioType == "d" ;
});

Clazz_newMeth(C$, 'isPurine$',  function () {
return this.residueChar != null  && this.isNucleic$()  && "AG".indexOf$S(this.residueChar) >= 0 ;
});

Clazz_newMeth(C$, 'isPyrimidine$',  function () {
return this.residueChar != null  && this.isNucleic$()  && "CTUI".indexOf$S(this.residueChar) >= 0 ;
});

Clazz_newMeth(C$, 'isDeleted$',  function () {
return false;
});

Clazz_newMeth(C$, 'findAtomsLike$S',  function (substring) {
return null;
});

Clazz_newMeth(C$, 'getDoubleProperty$S',  function (property) {
if (property === "property_atomclass"  && this.atomClass != 0  ) return this.atomClass;
return NaN;
});

Clazz_newMeth(C$, 'getMass$',  function () {
return this.atomicMass;
});

Clazz_newMeth(C$, 'getCIPChirality$Z',  function (doCalculate) {
return $I$(5).getCIPChiralityName$I(this.cipChirality & ~224);
});

Clazz_newMeth(C$, 'setCIPChirality$I',  function (c) {
this.cipChirality=c;
});

Clazz_newMeth(C$, 'getCIPChiralityCode$',  function () {
return this.cipChirality;
});

Clazz_newMeth(C$, 'getXYZ$',  function () {
return this;
});

Clazz_newMeth(C$, 'getStereo$',  function () {
return this.stereo;
});

Clazz_newMeth(C$, 'getPatternIndex$',  function () {
return this.patternIndex;
});

Clazz_newMeth(C$, 'modelIsRawPDB$',  function () {
return false;
});

Clazz_newMeth(C$, 'definesStereo$',  function () {
return false;
});

Clazz_newMeth(C$, 'getStereoAtAt$org_jmol_util_SimpleNodeA',  function (nodes) {
return null;
});

Clazz_newMeth(C$, 'isStereoOpposite$I$I$I',  function (i2, iA, iB) {
return null;
});

Clazz_newMeth(C$, 'toString',  function () {
var s2="";
for (var i=0; i < this.bondCount; i++) s2+=p$1.getAtomForToString.apply(this.bonds[i].getOtherAtom$org_jmol_smiles_SmilesAtom(this), []) + ";bo=" + this.bonds[i].getCovalentOrder$() + ", " ;

return p$1.getAtomForToString.apply(this, []) + "->" + s2 + "(" + new Double(this.x).toString() + "," + new Double(this.y).toString() + "," + new Double(this.z).toString() + ")" ;
});

Clazz_newMeth(C$, 'getAtomForToString',  function () {
var s=(this.residueChar != null  || this.residueName != null   ? (this.residueChar == null  ? this.residueName : this.residueChar) + "." + this.bioAtomName  : (this.bioAtomName != null  && this.atomNumber != -2147483648  ? null : this.elementNumber == -1 ? "A" : this.elementNumber == -2 ? "*" : $I$(4).elementSymbolFromNumber$I(this.elementNumber)));
if (s == null ) return this.bioAtomName + " #" + this.atomNumber ;
if (this.isAromatic) s=s.toLowerCase$();
return "[" + s + '.' + this.index + (this.matchingIndex >= 0 ? "(" + this.matchingNode + ")"  : "") + "]" ;
}, p$1);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-10 14:32:03 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SmilesBond", null, 'org.jmol.util.Edge');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isNot','isConnection','isChain'],'I',['nPrimitives','nBondsOr'],'O',['atom1','org.jmol.smiles.SmilesAtom','+atom2','matchingBond','org.jmol.util.Edge','primitives','org.jmol.smiles.SmilesBond[]','+bondsOr','atropType','int[]']]]

Clazz_newMeth(C$, 'getBondOrderString$I',  function (order) {
switch (order) {
case 2:
return "=";
case 3:
return "#";
case 4:
return "$";
default:
return "";
}
}, 1);

Clazz_newMeth(C$, 'getBondTypeFromCode$C',  function (code) {
switch (code.$c()) {
case 46:
return 0;
case 45:
return 1;
case 61:
return 2;
case 35:
return 3;
case 36:
return 4;
case 58:
return 17;
case 47:
return 1025;
case 92:
return 1041;
case 94:
return 65537;
case 96:
return 65538;
case 64:
return 65;
case 126:
return 81;
case 43:
return 96;
}
return -1;
}, 1);

Clazz_newMeth(C$, 'getAtom1$',  function () {
return this.atom1;
});

Clazz_newMeth(C$, 'set$org_jmol_smiles_SmilesBond',  function (bond) {
this.order=bond.order;
this.isNot=bond.isNot;
this.primitives=bond.primitives;
this.nPrimitives=bond.nPrimitives;
this.bondsOr=bond.bondsOr;
this.nBondsOr=bond.nBondsOr;
this.atropType=bond.atropType;
});

Clazz_newMeth(C$, 'setAtropType$I',  function (nn) {
this.atropType=Clazz_array(Integer.TYPE, -1, [(nn/10|0) - 1, nn % 10 - 1]);
});

Clazz_newMeth(C$, 'setPrimitive$I',  function (i) {
var p=this.primitives[i];
this.order=p.order;
this.isNot=p.isNot;
this.atropType=p.atropType;
return p;
});

Clazz_newMeth(C$, 'addBondOr$',  function () {
if (this.bondsOr == null ) this.bondsOr=Clazz_array(C$, [2]);
if (this.nBondsOr >= this.bondsOr.length) {
var tmp=Clazz_array(C$, [this.bondsOr.length * 2]);
System.arraycopy$O$I$O$I$I(this.bondsOr, 0, tmp, 0, this.bondsOr.length);
this.bondsOr=tmp;
}var sBond=Clazz_new_(C$.c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[null, null, -1, false]);
this.bondsOr[this.nBondsOr]=sBond;
++this.nBondsOr;
return sBond;
});

Clazz_newMeth(C$, 'addPrimitive$',  function () {
if (this.primitives == null ) this.primitives=Clazz_array(C$, [2]);
if (this.nPrimitives >= this.primitives.length) {
var tmp=Clazz_array(C$, [this.primitives.length * 2]);
System.arraycopy$O$I$O$I$I(this.primitives, 0, tmp, 0, this.primitives.length);
this.primitives=tmp;
}var sBond=Clazz_new_(C$.c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[null, null, -1, false]);
this.primitives[this.nPrimitives]=sBond;
++this.nPrimitives;
return sBond;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.atom1 + " -" + (this.isNot ? "!" : "") + this.order + "- " + this.atom2 ;
});

Clazz_newMeth(C$, 'c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z',  function (atom1, atom2, bondType, isNot) {
Clazz_super_(C$, this);
this.set2$I$Z(bondType, isNot);
this.set2a$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom(atom1, atom2);
}, 1);

Clazz_newMeth(C$, 'set2$I$Z',  function (bondType, isNot) {
this.order=bondType;
this.isNot=isNot;
});

Clazz_newMeth(C$, 'set2a$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom',  function (a1, a2) {
if (a1 != null ) {
this.atom1=a1;
a1.addBond$org_jmol_smiles_SmilesBond(this);
}if (a2 != null ) {
this.atom2=a2;
if (a2.isBioAtomWild && this.atom1.isBioAtomWild ) this.order=96;
a2.isFirst=false;
a2.addBond$org_jmol_smiles_SmilesBond(this);
}});

Clazz_newMeth(C$, 'setAtom2$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesSearch',  function (atom, molecule) {
this.atom2=atom;
if (this.atom2 != null ) {
atom.addBond$org_jmol_smiles_SmilesBond(this);
this.isConnection=true;
}});

Clazz_newMeth(C$, 'isFromPreviousTo$org_jmol_smiles_SmilesAtom',  function (atom) {
return (!this.isConnection && this.atom2 === atom  );
});

Clazz_newMeth(C$, 'isBondType$C$Z$Z',  function (ch, isSearch, isBioSequence) {
if (ch == ">") return 1;
if ("-=#$:/\\.~^`+!,&;@".indexOf$I(ch) < 0) return 0;
if (!isSearch && "-=#$:/\\.~^`".indexOf$I(ch) < 0 ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["SMARTS bond type " + ch + " not allowed in SMILES" ]);
switch (ch.$c()) {
case 126:
return (isBioSequence ? 0 : 1);
case 94:
case 96:
return -1;
default:
return 1;
}
}, 1);

Clazz_newMeth(C$, 'getValence$',  function () {
return (this.order & 7);
});

Clazz_newMeth(C$, 'getOtherAtom$org_jmol_smiles_SmilesAtom',  function (a) {
return (this.atom1 === a  ? this.atom2 : this.atom1);
});

Clazz_newMeth(C$, 'getAtomIndex1$',  function () {
return this.atom1.index;
});

Clazz_newMeth(C$, 'getAtomIndex2$',  function () {
return this.atom2.index;
});

Clazz_newMeth(C$, 'getCovalentOrder$',  function () {
return this.order & 131071;
});

Clazz_newMeth(C$, 'getOtherNode$org_jmol_util_SimpleNode',  function (atom) {
return (atom === this.atom1  ? this.atom2 : atom === this.atom2  || atom == null   ? this.atom1 : null);
});

Clazz_newMeth(C$, 'isPartial$',  function () {
return false;
});

Clazz_newMeth(C$, 'isCovalent$',  function () {
return this.order != 112;
});

Clazz_newMeth(C$, 'isHydrogen$',  function () {
return this.order == 112;
});

Clazz_newMeth(C$, 'switchAtoms$',  function () {
var a=this.atom1;
this.atom1=this.atom2;
this.atom2=a;
switch (this.order & 131071) {
case 65537:
this.order=65538;
break;
case 65538:
this.order=65537;
break;
case 1025:
this.order=1041;
break;
case 1041:
this.order=1025;
break;
}
});

Clazz_newMeth(C$, 'getRealCovalentOrder$',  function () {
switch (this.order & 131071) {
case 65537:
case 65538:
case 1025:
case 1041:
return 1;
}
return this.order & 131071;
});

Clazz_newMeth(C$, 'getMatchingBond$',  function () {
return this.matchingBond == null  ? this : this.matchingBond;
});

Clazz_newMeth(C$, 'getAtom$I',  function (i) {
return (i == 1 ? this.atom2 : this.atom1);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-12 16:14:01 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),p$1={},I$=[[0,'org.jmol.smiles.SmilesParser','org.jmol.smiles.SmilesGenerator','javajs.util.BS','javajs.util.PT','org.jmol.smiles.SmilesSearch','org.jmol.util.BSUtil','org.jmol.smiles.SmilesAtom','org.jmol.smiles.SmilesBond','javajs.util.AU','org.jmol.util.Elements','org.jmol.util.Logger']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesMatcher", null, null, 'org.jmol.api.SmilesMatcherInterface');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.okMF=true;
},1);

C$.$fields$=[['Z',['okMF']]
,['Z',['j2sHeadless']]]

Clazz_newMeth(C$, ['getLastException$','getLastException'],  function () {
return (this.okMF == true  ? Clazz_load('org.jmol.smiles.InvalidSmilesException').getLastError$() : "MF_FAILED");
});

Clazz_newMeth(C$, ['getMolecularFormula$O$Z$Z','getMolecularFormula'],  function (pattern, isSmarts, isEmpirical) {
p$1.clearExceptions.apply(this, []);
var search=$I$(1,"newSearch$S$Z$Z",["/nostereo/" + pattern.toString(), isSmarts, true]);
search.createTopoMap$javajs_util_BS(null);
search.nodes=search.target.nodes;
return search.getMolecularFormula$Z$DA$Z(!isSmarts, null, isEmpirical);
});

Clazz_newMeth(C$, 'clearExceptions',  function () {
Clazz_load('org.jmol.smiles.InvalidSmilesException').clear$();
}, p$1);

Clazz_newMeth(C$, ['getSmiles$org_jmol_util_NodeA$I$javajs_util_BS$S$I','getSmiles'],  function (atoms, ac, bsSelected, bioComment, flags) {
p$1.clearExceptions.apply(this, []);
return (Clazz_new_($I$(2,1))).getSmiles$org_jmol_smiles_SmilesMatcher$org_jmol_util_NodeA$I$javajs_util_BS$S$I(this, atoms, ac, bsSelected, bioComment, flags);
});

Clazz_newMeth(C$, ['areEqual$O$O','areEqual'],  function (smiles1, smiles2) {
p$1.clearExceptions.apply(this, []);
if ((smiles1 == null ) != (smiles2 == null ) ) return 0;
if (smiles1 == null ) return 1;
var isWild=false;
if (Clazz_instanceOf(smiles1, "java.lang.String") && Clazz_instanceOf(smiles2, "java.lang.String") ) {
isWild=((smiles1).indexOf$S("*") >= 0);
if (!isWild && smiles1.equals$O(smiles2) ) return 1;
}var flags=(isWild ? 2 : 1) | 8;
var result=p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [smiles1, null, 0, null, null, false, flags, 2, p$1.newSearch$O.apply(this, [smiles2])]);
return (result == null  ? -1 : result.length);
});

Clazz_newMeth(C$, ['areEqualTest$S$org_jmol_smiles_SmilesSearch','areEqualTest'],  function (smiles, search) {
search.set$();
var ret=p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [smiles, null, 0, null, null, false, 9, 2, search]);
return (ret != null  && ret.length == 1 );
});

Clazz_newMeth(C$, ['find$O$O$I','find'],  function (pattern, target, flags) {
p$1.clearExceptions.apply(this, []);
if (Clazz_instanceOf(target, "java.lang.String")) target=$I$(1).cleanPattern$S(target);
if (Clazz_instanceOf(pattern, "java.lang.String")) pattern=$I$(1).cleanPattern$S(pattern);
var search=p$1.newSearch$O.apply(this, [target]);
var array=p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [pattern, null, 0, null, null, false, flags, 3, search]);
for (var i=array.length; --i >= 0; ) {
var a=array[i];
for (var j=a.length; --j >= 0; ) a[j]=(search.target.nodes[a[j]]).mapIndex;

}
return array;
});

Clazz_newMeth(C$, ['getAtoms$O','getAtoms'],  function (target) {
p$1.clearExceptions.apply(this, []);
var search=p$1.newSearch$O.apply(this, [target]);
search.createTopoMap$javajs_util_BS(Clazz_new_($I$(3,1)));
return search.target.nodes;
});

Clazz_newMeth(C$, 'newSearch$O',  function (s) {
return (s == null  ? null : Clazz_instanceOf(s, "org.jmol.smiles.SmilesSearch") ? s : $I$(1,"newSearch$S$Z$Z",[$I$(1,"cleanPattern$S",[s.toString()]), false, true]));
}, p$1);

Clazz_newMeth(C$, ['getRelationship$S$S','getRelationship'],  function (smiles1, smiles2) {
if (smiles1 == null  || smiles2 == null   || smiles1.length$() == 0  || smiles2.length$() == 0 ) return "";
var mf1=this.getMolecularFormula$O$Z$Z(smiles1, false, false);
var mf2=this.getMolecularFormula$O$Z$Z(smiles2, false, false);
if (!mf1.equals$O(mf2)) return "none";
var check;
var n1=$I$(4,"countChar$S$C",[$I$(4).rep$S$S$S(smiles1, "@@", "@"), "@"]);
var n2=$I$(4,"countChar$S$C",[$I$(4).rep$S$S$S(smiles2, "@@", "@"), "@"]);
check=(n1 == n2 && this.areEqual$O$O(smiles2, smiles1) > 0 );
if (!check) {
var s=smiles1 + smiles2;
if (s.indexOf$S("/") >= 0 || s.indexOf$S("\\") >= 0  || s.indexOf$S("@") >= 0 ) {
if (n1 == n2 && n1 > 0  && s.indexOf$S("@SP") < 0 ) {
check=(this.areEqual$O$O("/invertstereo/" + smiles2, smiles1) > 0);
if (check) return "enantiomers";
}check=(this.areEqual$O$O("/nostereo/" + smiles2, smiles1) > 0);
if (check) return (n1 == n2 ? "diastereomers" : "ambiguous stereochemistry!");
}return "constitutional isomers";
}return "identical";
});

Clazz_newMeth(C$, ['reverseChirality$S','reverseChirality'],  function (smiles) {
smiles=$I$(4).rep$S$S$S(smiles, "@@", "!@");
smiles=$I$(4).rep$S$S$S(smiles, "@", "@@");
smiles=$I$(4).rep$S$S$S(smiles, "!@@", "@");
return smiles;
});

Clazz_newMeth(C$, ['getSubstructureSet$O$O$I$javajs_util_BS$I','getSubstructureSet'],  function (pattern, target, ac, bsSelected, flags) {
var atoms=(Clazz_instanceOf(target, "org.jmol.smiles.SmilesSearch") ? null : target);
return p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [pattern, atoms, ac, bsSelected, null, true, flags | (Clazz_instanceOf(pattern, "java.lang.String") ? $I$(1,"getFlags$S",[pattern.toString()]) : 0), 1, (atoms == null  ? target : null)]);
});

Clazz_newMeth(C$, ['getMMFF94AtomTypes$SA$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_Lst$javajs_util_LstA','getMMFF94AtomTypes'],  function (smarts, atoms, ac, bsSelected, ret, vRings) {
p$1.clearExceptions.apply(this, []);
var sp=Clazz_new_($I$(1,1).c$$Z$Z,[true, true]);
var search=null;
var flags=(770);
search=sp.parse$S("");
search.exitFirstMatch=false;
search.target.setAtoms$org_jmol_util_NodeA$I$javajs_util_BS(atoms, Math.abs(ac), bsSelected);
search.flags=flags;
search.getRingData$javajs_util_LstA$Z$Z(vRings, true, true);
search.asVector=false;
search.subSearches=Clazz_array($I$(5), [1]);
search.getSelections$();
var bsDone=Clazz_new_($I$(3,1));
for (var i=0; i < smarts.length; i++) {
if (smarts[i] == null  || smarts[i].length$() == 0  || smarts[i].startsWith$S("#") ) {
ret.addLast$O(null);
continue;
}search.clear$();
search.subSearches[0]=sp.getSubsearch$org_jmol_smiles_SmilesSearch$S$I(search, $I$(1).cleanPattern$S(smarts[i]), flags);
var bs=$I$(6,"copy$javajs_util_BS",[search.search$()]);
ret.addLast$O(bs);
bsDone.or$javajs_util_BS(bs);
if (bsDone.cardinality$() == ac) return;
}
});

Clazz_newMeth(C$, ['getSubstructureSetArray$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$I','getSubstructureSetArray'],  function (pattern, atoms, ac, bsSelected, bsAromatic, flags) {
return p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [pattern, atoms, ac, bsSelected, bsAromatic, true, flags, 2, null]);
});

Clazz_newMeth(C$, ['getAtropisomerKeys$S$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$I','getAtropisomerKeys'],  function (pattern, atoms, ac, bsSelected, bsAromatic, flags) {
return p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [pattern, atoms, ac, bsSelected, bsAromatic, false, flags, 4, null]);
});

Clazz_newMeth(C$, ['polyhedronToSmiles$org_jmol_util_Node$IAA$I$javajs_util_P3dA$I$S','polyhedronToSmiles'],  function (center, faces, atomCount, points, flags, details) {
var atoms=Clazz_array($I$(7), [atomCount]);
for (var i=0; i < atomCount; i++) {
atoms[i]=Clazz_new_($I$(7,1));
var pt=(points == null  ? null : points[i]);
if (Clazz_instanceOf(pt, "org.jmol.util.Node")) {
atoms[i].elementNumber=(pt).getElementNumber$();
atoms[i].bioAtomName=(pt).getAtomName$();
atoms[i].atomNumber=(pt).getAtomNumber$();
atoms[i].setT$javajs_util_T3d(pt);
} else {
atoms[i].elementNumber=(Clazz_instanceOf(pt, "org.jmol.util.Point3fi") ? (pt).sD : ($s$[0] = -2, $s$[0]));
if (pt != null ) atoms[i].setT$javajs_util_T3d(pt);
}atoms[i].index=i;
}
var nBonds=0;
for (var i=faces.length; --i >= 0; ) {
var face=faces[i];
var n=face.length;
var iatom;
var iatom2;
for (var j=n; --j >= 0; ) {
if ((iatom=face[j]) >= atomCount || (iatom2=face[(j + 1) % n]) >= atomCount ) continue;
if (atoms[iatom].getBondTo$org_jmol_smiles_SmilesAtom(atoms[iatom2]) == null ) {
var b=Clazz_new_($I$(8,1).c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[atoms[iatom], atoms[iatom2], 1, false]);
b.index=nBonds++;
}}
}
for (var i=0; i < atomCount; i++) {
var n=atoms[i].bondCount;
if (n == 0 || n != atoms[i].bonds.length ) atoms[i].bonds=$I$(9).arrayCopyObject$O$I(atoms[i].bonds, n);
}
var s=null;
var g=Clazz_new_($I$(2,1));
if (points != null ) g.polySmilesCenter=center;
p$1.clearExceptions.apply(this, []);
s=g.getSmiles$org_jmol_smiles_SmilesMatcher$org_jmol_util_NodeA$I$javajs_util_BS$S$I(this, atoms, atomCount, $I$(6).newBitSet2$I$I(0, atomCount), null, flags | 4096 | 16 | 32 );
if ((flags & 65536) == 65536) {
s=((flags & 131072) == 0 ? "" : "//* " + center + " *//\t" ) + "[" + $I$(10,"elementSymbolFromNumber$I",[center.getElementNumber$()]) + "@PH" + atomCount + (details == null  ? "" : "/" + details + "/" ) + "]." + s ;
}return s;
});

Clazz_newMeth(C$, ['getCorrelationMaps$O$org_jmol_util_NodeA$I$javajs_util_BS$I','getCorrelationMaps'],  function (pattern, atoms, atomCount, bsSelected, flags) {
return p$1.matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [pattern, atoms, atomCount, bsSelected, null, true, flags, 3, null]);
});

Clazz_newMeth(C$, 'matchPriv$O$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch',  function (pattern, atoms, ac, bsSelected, bsAromatic, doTestAromatic, flags, mode, searchTarget) {
p$1.clearExceptions.apply(this, []);
try {
var isCompiled=(Clazz_instanceOf(pattern, "org.jmol.smiles.SmilesSearch"));
if (isCompiled) {
flags|=2;
(pattern).reset$();
}var isSmarts=((flags & 2) == 2);
var searchPattern=(isCompiled ? pattern : $I$(1,"newSearch$S$Z$Z",[pattern == null  ? null : pattern.toString(), isSmarts, false]));
if (searchTarget != null ) searchTarget.setFlags$I(flags | searchTarget.flags | (isCompiled ? 0 : $I$(1,"getFlags$S",[pattern.toString()])) );
return p$1.matchPattern$org_jmol_smiles_SmilesSearch$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [searchPattern, atoms, ac, bsSelected, bsAromatic, doTestAromatic, flags, mode, searchTarget]);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
if ($I$(11).debugging) e.printStackTrace$();
if (Clazz_load('org.jmol.smiles.InvalidSmilesException').getLastError$() == null ) p$1.clearExceptions.apply(this, []);
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,[Clazz_load('org.jmol.smiles.InvalidSmilesException').getLastError$()]);
} else {
throw e;
}
}
}, p$1);

Clazz_newMeth(C$, 'matchPattern$org_jmol_smiles_SmilesSearch$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch',  function (search, atoms, ac, bsSelected, bsAromatic, doTestAromatic, flags, mode, searchTarget) {
var isSmarts=((flags & 2) == 2);
this.okMF=true;
if (searchTarget != null ) {
if (searchTarget.targetSet) {
search.setTarget$org_jmol_smiles_SmilesSearch(searchTarget);
} else {
search.haveSmilesTarget=true;
bsAromatic=Clazz_new_($I$(3,1));
searchTarget.createTopoMap$javajs_util_BS(bsAromatic);
atoms=searchTarget.target.nodes;
ac=searchTarget.target.nodes.length;
if (isSmarts) {
var a1=searchTarget.elementCounts;
var a2=search.elementCounts;
var n=search.elementNumberMax;
if (n <= searchTarget.elementNumberMax) {
for (var i=1; i <= n; i++) {
if (a1[i] < a2[i]) {
this.okMF=false;
break;
}}
} else {
this.okMF=false;
}} else {
var mf=search.getMFArray$Z$DA$Z(true, null, false);
var mft=searchTarget.getMFArray$Z$DA$Z(true, null, false);
var n=searchTarget.elementNumberMax;
if (n == search.elementNumberMax) {
for (var i=2; i <= n; i++) {
if (mf[i] != mft[i]) {
this.okMF=false;
break;
}}
} else {
this.okMF=false;
}}}}if (this.okMF) {
if (!isSmarts && !search.patternAromatic ) {
if (bsAromatic == null ) bsAromatic=Clazz_new_($I$(3,1));
search.normalizeAromaticity$javajs_util_BS(bsAromatic);
search.isNormalized=true;
}if (!search.targetSet) search.target.setAtoms$org_jmol_util_NodeA$I$javajs_util_BS(atoms, ac, bsSelected);
if (search.targetSet || ac != 0 && (bsSelected == null  || !bsSelected.isEmpty$() )  ) {
var is3D=search.targetSet || !(Clazz_instanceOf(atoms[0], "org.jmol.smiles.SmilesAtom")) ;
search.getSelections$();
if (!doTestAromatic) search.target.bsAromatic=bsAromatic;
if (!search.target.hasRingData$I(flags)) search.setRingData$javajs_util_BS$javajs_util_LstA$Z(null, null, is3D || doTestAromatic || search.patternAromatic  );
search.exitFirstMatch=((flags & 8) == 8);
search.mapUnique=((flags & 128) == 128);
}}switch (mode) {
case 1:
search.asVector=false;
return (this.okMF ? search.search$() : Clazz_new_($I$(3,1)));
case 2:
if (!this.okMF) return Clazz_array($I$(3), [0]);
search.asVector=true;
var vb=search.search$();
return vb.toArray$OA(Clazz_array($I$(3), [vb.size$()]));
case 4:
if (!this.okMF) return "";
search.exitFirstMatch=true;
search.setAtropicity=true;
search.search$();
return search.atropKeys;
case 3:
if (!this.okMF) return Clazz_array(Integer.TYPE, [0, 0]);
search.getMaps=true;
search.setFlags$I(flags | search.flags);
var vl=search.search$();
return vl.toArray$OA($I$(9,"newInt2$I",[vl.size$()]));
case 5:
if (!this.okMF) return Boolean.FALSE;
search.retBoolean=true;
search.setFlags$I(flags | search.flags);
return search.search$();
}
return null;
}, p$1);

Clazz_newMeth(C$, ['cleanSmiles$S','cleanSmiles'],  function (smiles) {
return $I$(1).cleanPattern$S(smiles);
});

Clazz_newMeth(C$, ['getMapForJME$S$org_jmol_modelset_AtomA$javajs_util_BS','getMapForJME'],  function (jme, at, bsAtoms) {
try {
var molecule=C$.jmeToMolecule$S(jme);
var bs=$I$(6).newBitSet2$I$I(0, molecule.ac);
var s=this.getSmiles$org_jmol_util_NodeA$I$javajs_util_BS$S$I(molecule.patternAtoms, molecule.ac, bs, null, 34);
var map=this.getCorrelationMaps$O$org_jmol_util_NodeA$I$javajs_util_BS$I(s, molecule.patternAtoms, molecule.ac, bs, 42);
var map2=this.getCorrelationMaps$O$org_jmol_util_NodeA$I$javajs_util_BS$I(s, at, bsAtoms.cardinality$(), bsAtoms, 42);
return Clazz_array(Integer.TYPE, -2, [map[0], map2[0]]);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
} else {
throw e;
}
}
return null;
});

Clazz_newMeth(C$, ['jmeToMolecule$S','jmeToMolecule'],  function (jme) {
var molecule=Clazz_new_($I$(5,1));
var tokens=$I$(4).getTokens$S(jme);
var nAtoms=$I$(4).parseInt$S(tokens[0]);
var nBonds=$I$(4).parseInt$S(tokens[1]);
var pt=2;
for (var i=0; i < nAtoms; i++, pt+=3) {
var sa=tokens[pt];
var a=molecule.addAtom$();
var ic=sa.indexOf$S("+");
var charge=0;
if (ic >= 0) {
charge=(ic == sa.length$() - 1 ? 1 : $I$(4,"parseInt$S",[sa.substring$I(ic + 1)]));
} else if ((ic=sa.indexOf$S("-")) >= 0) {
charge=$I$(4,"parseInt$S",[sa.substring$I(ic)]);
}a.setCharge$I(charge);
a.setSymbol$S(ic < 0 ? sa : sa.substring$I$I(0, ic));
}
for (var i=0; i < nBonds; i++) {
var ia=$I$(4).parseInt$S(tokens[pt++]) - 1;
var ib=$I$(4).parseInt$S(tokens[pt++]) - 1;
var iorder=$I$(4).parseInt$S(tokens[pt++]);
var a1=molecule.patternAtoms[ia];
var a2=molecule.patternAtoms[ib];
var order=1;
switch (iorder) {
default:
case 1:
break;
case 2:
order=2;
break;
case 3:
order=3;
break;
}
Clazz_new_($I$(8,1).c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[a1, a2, order, false]).index=i;
}
molecule.isSmarts=true;
molecule.set$();
return molecule;
}, 1);

Clazz_newMeth(C$, ['getSmilesFromJME$S','getSmilesFromJME'],  function (jme) {
try {
var molecule=C$.jmeToMolecule$S(jme);
var bs=$I$(6).newBitSet2$I$I(0, molecule.ac);
return this.getSmiles$org_jmol_util_NodeA$I$javajs_util_BS$S$I(molecule.patternAtoms, molecule.ac, bs, null, 1);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, ['compileSmartsPattern$S','compileSmartsPattern'],  function (pattern) {
pattern=$I$(1).cleanPattern$S(pattern);
return $I$(1).newSearch$S$Z$Z(pattern, true, false);
});

Clazz_newMeth(C$, ['compileSearchTarget$org_jmol_util_NodeA$I$javajs_util_BS','compileSearchTarget'],  function (atoms, atomCount, bsSelected) {
var ss=Clazz_new_($I$(5,1));
ss.target.setAtoms$org_jmol_util_NodeA$I$javajs_util_BS(atoms, atomCount, bsSelected);
ss.targetSet=true;
return ss;
});

Clazz_newMeth(C$, ['hasStructure$O$OA$I','hasStructure'],  function (pattern, smilesSet, flags) {
var ret=Clazz_array(Integer.TYPE, [smilesSet.length]);
if ((flags & 1) != 1) {
flags=flags | 2;
}p$1.clearExceptions.apply(this, []);
if (Clazz_instanceOf(pattern, "java.lang.String")) pattern=$I$(1).cleanPattern$S(pattern);
try {
var search=(Clazz_instanceOf(pattern, "java.lang.String") ? $I$(1).newSearch$S$Z$Z(pattern, true, false) : pattern);
for (var i=0; i < smilesSet.length; i++) {
var smiles=smilesSet[i];
var searchTarget;
if (Clazz_instanceOf(smiles, "java.lang.String")) {
searchTarget=p$1.newSearch$O.apply(this, [smiles]);
searchTarget.setFlags$I(searchTarget.flags | (Clazz_instanceOf(pattern, "java.lang.String") ? $I$(1).getFlags$S(pattern) : 0));
} else {
searchTarget=smiles;
}try {
p$1.clearExceptions.apply(this, []);
ret[i]=(p$1.matchPattern$org_jmol_smiles_SmilesSearch$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_BS$Z$I$I$org_jmol_smiles_SmilesSearch.apply(this, [search, null, 0, null, null, false, flags | 8, 5, searchTarget]) === Boolean.TRUE  ? 1 : 0);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
ret[i]=-1;
e.printStackTrace$();
} else {
throw e;
}
}
}
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
if ($I$(11).debugging) e.printStackTrace$();
if (Clazz_load('org.jmol.smiles.InvalidSmilesException').getLastError$() == null ) p$1.clearExceptions.apply(this, []);
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,[Clazz_load('org.jmol.smiles.InvalidSmilesException').getLastError$()]);
} else {
throw e;
}
}
return ret;
});

Clazz_newMeth(C$, ['main$SA','main'],  function (args) {
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.j2sHeadless=true;
};
var $s$ = new Int16Array(1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-12 18:58:23 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),p$1={},I$=[[0,'java.util.Hashtable','org.jmol.smiles.SmilesSearch','javajs.util.PT','javajs.util.SB','org.jmol.smiles.SmilesBond','org.jmol.util.Elements','org.jmol.smiles.SmilesMeasure','org.jmol.util.Logger','javajs.util.Lst','org.jmol.smiles.SmilesAtom','org.jmol.smiles.SmilesStereo']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesParser");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.connections=Clazz_new_($I$(1,1));
this.htMeasures=Clazz_new_($I$(1,1));
this.bioType="\u0000";
this.bondDirectionPaired=true;
},1);

C$.$fields$=[['Z',['isSmarts','isBioSequence','ignoreStereochemistry','bondDirectionPaired','isTarget'],'C',['bioType'],'I',['flags','braceCount','branchLevel','componentCount','componentParenCount'],'O',['connections','java.util.Map','+htMeasures']]]

Clazz_newMeth(C$, 'newSearch$S$Z$Z',  function (pattern, isSmarts, isTarget) {
return (Clazz_new_(C$.c$$Z$Z,[isSmarts, isTarget])).parse$S(pattern);
}, 1);

Clazz_newMeth(C$, 'c$$Z$Z',  function (isSmarts, isTarget) {
;C$.$init$.apply(this);
this.isSmarts=isSmarts;
this.isTarget=isTarget;
}, 1);

Clazz_newMeth(C$, 'parse$S',  function (pattern) {
if (pattern == null ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["expression must not be null"]);
var search=Clazz_new_($I$(2,1));
if (this.isSmarts && !this.isTarget ) search.pattern0=pattern;
if (pattern.indexOf$S("$(select") >= 0) pattern=p$1.parseNested$org_jmol_smiles_SmilesSearch$S$S.apply(this, [search, pattern, "select"]);
var ret=Clazz_array(Integer.TYPE, [1]);
pattern=C$.extractFlags$S$IA(pattern, ret);
this.flags=ret[0];
search.setFlags$I(this.flags);
if (pattern.indexOf$S("$") >= 0) pattern=p$1.parseVariables$S.apply(this, [pattern]);
if (this.isSmarts && pattern.indexOf$S("[$") >= 0 ) pattern=p$1.parseVariableLength$S.apply(this, [pattern]);
if (pattern.indexOf$S("||") < 0) return this.getSubsearch$org_jmol_smiles_SmilesSearch$S$I(search, pattern, this.flags);
var patterns=$I$(3).split$S$S(pattern, "||");
var toDo="";
search.subSearches=Clazz_array($I$(2), [patterns.length]);
for (var i=0; i < patterns.length; i++) {
var key="|" + patterns[i] + "|" ;
if (toDo.indexOf$S(key) < 0) {
search.subSearches[i]=this.getSubsearch$org_jmol_smiles_SmilesSearch$S$I(search, patterns[i], this.flags);
toDo+=key;
}}
return search;
});

Clazz_newMeth(C$, 'parseVariableLength$S',  function (pattern) {
var sout=Clazz_new_($I$(4,1));
var len=pattern.length$() - 1;
var nParen=0;
var haveInternalOr=false;
for (var i=0; i < len; i++) {
switch ((pattern.charCodeAt$I(i))) {
case 40:
++nParen;
break;
case 41:
--nParen;
break;
case 124:
if (nParen > 0) {
haveInternalOr=true;
if (pattern.charAt$I(i + 1) == "|") {
pattern=pattern.substring$I$I(0, i) + pattern.substring$I(i + 1);
--len;
}}break;
}
}
if (pattern.indexOf$S("||") >= 0) {
var patterns=$I$(3).split$S$S(pattern, "||");
for (var i=0; i < patterns.length; i++) sout.append$S("||").append$S(p$1.parseVariableLength$S.apply(this, [patterns[i]]));

} else {
var pt=-1;
var ret=Clazz_array(Integer.TYPE, [1]);
var isOK=true;
var bracketed=null;
while ((pt=pattern.indexOf$S$I("[$", pt + 1)) >= 0){
var pt0=pt;
var min=-2147483648;
var max=-2147483648;
pt=C$.getDigits$S$I$IA(pattern, pt + 2, ret);
min=ret[0];
if (min != -2147483648) {
if (C$.getChar$S$I(pattern, pt) == "-") {
pt=C$.getDigits$S$I$IA(pattern, pt + 1, ret);
max=ret[0];
}}if (C$.getChar$S$I(pattern, pt) != "(") continue;
bracketed=C$.getSubPattern$S$I$C(pattern, pt0, "[");
if (!bracketed.endsWith$S(")")) continue;
var pt1=pt0 + bracketed.length$() + 2 ;
var repeat=C$.getSubPattern$S$I$C(pattern, pt, "(");
var pt2=pt;
bracketed=C$.getSubPattern$S$I$C(pattern, pt, "[");
pt+=1 + repeat.length$();
if (repeat.indexOf$I(":") >= 0 && repeat.indexOf$I("|") < 0 ) {
var parenCount=0;
var n=repeat.length$();
var ptColon=-1;
for (var i=0; i < n; i++) {
switch ((repeat.charCodeAt$I(i))) {
case 91:
case 40:
++parenCount;
break;
case 41:
case 93:
--parenCount;
break;
case 46:
if (ptColon >= 0 && parenCount == 0 ) n=i;
break;
case 58:
if (ptColon < 0 && parenCount == 0 ) ptColon=i;
break;
}
}
if (ptColon > 0) repeat=repeat.substring$I$I(0, ptColon) + "(" + repeat.substring$I$I(ptColon, n) + ")" + repeat.substring$I(n) ;
}if (min == -2147483648) {
var ptOr=repeat.indexOf$S("|");
if (ptOr >= 0) return p$1.parseVariableLength$S.apply(this, [pattern.substring$I$I(0, pt0) + "[$1" + pattern.substring$I$I(pt2, pt2 + ptOr + 1 ) + ")]" + pattern.substring$I(pt1) + "||" + pattern.substring$I$I(0, pt0) + "[$1(" + pattern.substring$I(pt2 + ptOr + 2 ) + pattern.substring$I(pt1) ]);
continue;
}if (max == -2147483648) max=min;
if (repeat.indexOf$S("|") >= 0) repeat="[$(" + repeat + ")]" ;
for (var i=min; i <= max; i++) {
var sb=Clazz_new_($I$(4,1));
sb.append$S("||").append$S(pattern.substring$I$I(0, pt0));
for (var j=0; j < i; j++) sb.append$S(repeat);

sb.append$S(pattern.substring$I(pt1));
sout.appendSB$javajs_util_SB(sb);
}
}
if (!isOK) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["bad variable expression: " + bracketed]);
}return (haveInternalOr ? p$1.parseVariableLength$S.apply(this, [sout.substring$I(2)]) : sout.length$() < 2 ? pattern : sout.substring$I(2));
}, p$1);

Clazz_newMeth(C$, 'getSubsearch$org_jmol_smiles_SmilesSearch$S$I',  function (parent, pattern, flags) {
this.htMeasures=Clazz_new_($I$(1,1));
var search=Clazz_new_($I$(2,1));
search.setTop$org_jmol_smiles_SmilesSearch(parent);
search.isSmarts=this.isSmarts;
search.pattern=pattern;
search.pattern0=parent.pattern0;
search.setFlags$I(flags);
if (pattern.indexOf$S("$(") >= 0) pattern=p$1.parseNested$org_jmol_smiles_SmilesSearch$S$S.apply(this, [search, pattern, ""]);
p$1.parseSmiles$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom$Z.apply(this, [search, pattern, null, false]);
if (this.braceCount != 0) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["unmatched \'{\'"]);
if (!this.connections.isEmpty$()) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Open connection"]);
search.set$();
if (this.isSmarts) for (var i=search.ac; --i >= 0; ) p$1.checkNested$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$I.apply(this, [search, search.patternAtoms[i], flags]);

 else if (!this.isBioSequence) search.elementCounts[1]=search.getMissingHydrogenCount$();
if (!this.ignoreStereochemistry && !this.isTarget ) p$1.fixChirality$org_jmol_smiles_SmilesSearch.apply(this, [search]);
return search;
});

Clazz_newMeth(C$, 'checkNested$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$I',  function (search, atom, flags) {
if (atom.iNested > 0) {
var o=search.getNested$I(atom.iNested);
if (Clazz_instanceOf(o, "java.lang.String")) {
var s=o;
if (s.startsWith$S("select")) return;
if (s.charAt$I(0) != "~" && atom.bioType != "\u0000" ) s="~" + atom.bioType + "~" + s ;
var nested=this.getSubsearch$org_jmol_smiles_SmilesSearch$S$I(search, s, flags);
if (nested.ac > 0 && nested.patternAtoms[0].selected ) atom.selected=true;
search.setNested$I$O(atom.iNested, nested);
}}for (var i=0; i < atom.nSubAtoms; i++) p$1.checkNested$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$I.apply(this, [search, atom.subAtoms[i], flags]);

}, p$1);

Clazz_newMeth(C$, 'fixChirality$org_jmol_smiles_SmilesSearch',  function (search) {
for (var i=search.ac; --i >= 0; ) {
var sAtom=search.patternAtoms[i];
if (sAtom.stereo != null ) sAtom.stereo.fixStereo$org_jmol_smiles_SmilesAtom(sAtom);
}
}, p$1);

Clazz_newMeth(C$, 'parseSmiles$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom$Z',  function (search, pattern, currentAtom, isBranchAtom) {
var ret=Clazz_array(Integer.TYPE, [1]);
var pt=0;
var ch;
var bond=null;
var wasMeasure=false;
var wasBranch=false;
 loop : while (pattern != null  && pattern.length$() != 0 ){
var index=0;
if (currentAtom == null ) {
index=p$1.checkBioType$S$I.apply(this, [pattern, 0]);
if (index == pattern.length$()) pattern+="*";
if (this.isBioSequence) search.needAromatic=search.top.needAromatic=false;
}ch=C$.getChar$S$I(pattern, index);
var haveOpen=p$1.checkBrace$org_jmol_smiles_SmilesSearch$C$C.apply(this, [search, ch, "{"]);
if (haveOpen) ch=C$.getChar$S$I(pattern, ++index);
if (ch == "(") {
var subString=C$.getSubPattern$S$I$C(pattern, index, "(");
var isMeasure=(C$.getChar$S$I(pattern, index + 1) == ".");
if (currentAtom == null ) {
if (isMeasure || !this.isSmarts ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["No previous atom for measure"]);
search.haveComponents=true;
do {
++this.componentCount;
++this.componentParenCount;
ch=C$.getChar$S$I(pattern=pattern.substring$I(1), 0);
} while (ch == "(");
if (!haveOpen && (haveOpen=p$1.checkBrace$org_jmol_smiles_SmilesSearch$C$C.apply(this, [search, ch, "{"])) == true  ) ch=C$.getChar$S$I(pattern=pattern.substring$I(1), 0);
} else {
wasMeasure=wasBranch=false;
if (subString.startsWith$S(".")) {
p$1.parseMeasure$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom.apply(this, [search, subString.substring$I(1), currentAtom]);
wasMeasure=true;
} else if (subString.length$() == 0 && this.isBioSequence ) {
currentAtom.notCrossLinked=true;
} else {
++this.branchLevel;
p$1.parseSmiles$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom$Z.apply(this, [search, subString, currentAtom, true]);
wasBranch=true;
--this.branchLevel;
}index=subString.length$() + 2;
ch=C$.getChar$S$I(pattern, index);
if (ch == "}" && p$1.checkBrace$org_jmol_smiles_SmilesSearch$C$C.apply(this, [search, ch, "}"]) ) ++index;
ch="\u0000";
}}if (ch != "\u0000") {
pt=index;
 out : while (ch != "\u0000"){
switch ($I$(5).isBondType$C$Z$Z(ch, this.isSmarts, this.isBioSequence)) {
case 1:
break;
case 0:
break out;
case -1:
if (!(($I$(3,"isDigit$C",[C$.getChar$S$I(pattern, ++index)]) && index++ > 0  ? $I$(3,"isDigit$C",[C$.getChar$S$I(pattern, index++)]) : true) && (ch=C$.getChar$S$I(pattern, index)) == "-" )) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["malformed atropisomerism bond ^nn-  or ^^nn-"]);
continue;
}
ch=C$.getChar$S$I(pattern, ++index);
}
ch=C$.getChar$S$I(pattern, index);
if (ch == ")") {
switch ((ch=C$.getChar$S$I(pattern, ++index)).$c()) {
case 0:
case 41:
case 46:
pattern=pattern.substring$I(index);
--this.componentParenCount;
if (this.componentParenCount >= 0) continue loop;
}
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["invalid continuation after component grouping (SMARTS).(SMARTS)"]);
}bond=p$1.parseBond$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesBond$S$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$I$IA.apply(this, [search, null, pattern.substring$I$I(pt, index), null, currentAtom, false, isBranchAtom, index - pt, ret]);
if (haveOpen && bond.order != -1 ) ch=C$.getChar$S$I(pattern, index=pt);
if (p$1.checkBrace$org_jmol_smiles_SmilesSearch$C$C.apply(this, [search, ch, "{"])) ch=C$.getChar$S$I(pattern, ++index);
switch (ch.$c()) {
case 126:
if (bond.order == 0) {
index=p$1.checkBioType$S$I.apply(this, [pattern, index]);
if (index == pattern.length$()) pattern+="*";
}break;
case 40:
do {
++this.componentCount;
++this.componentParenCount;
ch=C$.getChar$S$I(pattern, ++index);
} while (ch == "(");
break;
case 0:
if (bond.order == 0) return;
}
var isConnect=($I$(3).isDigit$C(ch) || ch == "%" );
var isAtom=(!isConnect && (ch == "_" || ch == "["  || ch == "*"  || $I$(3).isLetter$C(ch) ) );
if (isConnect) {
if (wasMeasure) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["connection number must immediately follow its connecting atom"]);
index=C$.getRingNumber$S$I$C$IA(pattern, index, ch, ret);
var ringNumber=ret[0];
p$1.parseConnection$org_jmol_smiles_SmilesSearch$I$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond.apply(this, [search, ringNumber, currentAtom, bond]);
bond=null;
} else if (isAtom) {
wasMeasure=wasBranch=false;
switch (ch.$c()) {
case 91:
case 95:
var subPattern=C$.getSubPattern$S$I$C(pattern, index, ch);
index+=subPattern.length$() + (ch == "[" ? 2 : 0);
if (this.isBioSequence && ch == "["  && subPattern.indexOf$S(".") < 0  && subPattern.indexOf$S("_") < 0 ) subPattern+=".0";
currentAtom=p$1.parseAtom$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$Z$Z$Z.apply(this, [search, null, subPattern, currentAtom, bond, ch == "[", false, isBranchAtom]);
currentAtom.hasSubpattern=true;
if (bond.order != -1 && bond.order != 0 ) p$1.setBondAtom$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesSearch.apply(this, [bond, null, currentAtom, search]);
bond=null;
break;
default:
var ch2=(!this.isBioSequence && $I$(3).isUpperCase$C(ch)  ? C$.getChar$S$I(pattern, index + 1) : "\u0000");
if (ch != "X" || ch2 != "x" ) if (!$I$(3).isLowerCase$C(ch2) || $I$(6,"elementNumberFromSymbol$S$Z",[pattern.substring$I$I(index, index + 2), true]) == 0 ) ch2="\u0000";
if (ch2 != "\u0000" && "NA CA BA PA SC AC Na Ca Ba Pa Sc Ac".indexOf$S(pattern.substring$I$I(index, index + 2)) >= 0 ) {
ch2="\u0000";
}var size=($I$(3).isUpperCase$C(ch) && $I$(3).isLowerCase$C(ch2)  ? 2 : 1);
currentAtom=p$1.parseAtom$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$Z$Z$Z.apply(this, [search, null, pattern.substring$I$I(index, index + size), currentAtom, bond, false, false, isBranchAtom]);
bond=null;
index+=size;
}
} else {
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Unexpected character: " + C$.getChar$S$I(pattern, index)]);
}ch=C$.getChar$S$I(pattern, index);
if (ch == "}" && p$1.checkBrace$org_jmol_smiles_SmilesSearch$C$C.apply(this, [search, ch, "}"]) ) ++index;
}pattern=pattern.substring$I(index);
isBranchAtom=false;
}
}, p$1);

Clazz_newMeth(C$, 'parseConnection$org_jmol_smiles_SmilesSearch$I$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond',  function (search, ringNum, currentAtom, bond) {
var r=Integer.valueOf$I(ringNum);
var bond0=this.connections.get$O(r);
if (bond0 == null ) {
this.connections.put$O$O(r, bond);
++search.target.ringCount;
return;
}this.connections.remove$O(r);
switch (bond.order) {
case -1:
bond.order=(bond0.order != -1 ? bond0.order : this.isSmarts || currentAtom.isAromatic && bond0.atom1.isAromatic   ? 81 : 1);
break;
case 1025:
bond.order=1041;
break;
case 1041:
bond.order=1025;
break;
}
if (bond0.order != -1 && bond0.order != bond.order  || currentAtom === bond0.atom1   || bond0.atom1.getBondTo$org_jmol_smiles_SmilesAtom(currentAtom) != null  ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Bad connection type or atom"]);
bond0.set$org_jmol_smiles_SmilesBond(bond);
--currentAtom.bondCount;
bond0.setAtom2$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesSearch(currentAtom, search);
}, p$1);

Clazz_newMeth(C$, 'setBondAtom$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesSearch',  function (bond, a1, a2, search) {
bond.set2a$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom(a1, a2);
if (search != null  && bond.order == 2  && bond.atom1 != null   && bond.atom2 != null   && bond.atom1.isAromatic  && bond.atom2.isAromatic  && ((this.flags & 512) == 0) ) search.setFlags$I(this.flags=(this.flags | 512));
}, p$1);

Clazz_newMeth(C$, 'getRingNumber$S$I$C$IA',  function (pattern, index, ch, ret) {
var ringNumber;
switch (ch.$c()) {
case 37:
if (C$.getChar$S$I(pattern, index + 1) == "(") {
var subPattern=C$.getSubPattern$S$I$C(pattern, index + 1, "(");
C$.getDigits$S$I$IA(subPattern, 0, ret);
index+=subPattern.length$() + 3;
if (ret[0] < 0) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid number designation: " + subPattern]);
} else {
if (index + 3 <= pattern.length$()) index=C$.getDigits$S$I$IA(pattern.substring$I$I(0, index + 3), index + 1, ret);
if (ret[0] < 10) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Two digits must follow the % sign"]);
}ringNumber=ret[0];
break;
default:
ringNumber=ch.$c() - 48;
++index;
}
ret[0]=ringNumber;
return index;
}, 1);

Clazz_newMeth(C$, 'checkBioType$S$I',  function (pattern, index) {
this.isBioSequence=(pattern.charAt$I(index) == "~");
if (this.isBioSequence) {
++index;
this.bioType="*";
var ch=C$.getChar$S$I(pattern, 2);
if (ch == "~" && ((ch=pattern.charAt$I(1)) == "*" || $I$(3).isLowerCase$C(ch) ) ) {
this.bioType=ch;
index=3;
}}return index;
}, p$1);

Clazz_newMeth(C$, 'parseMeasure$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom',  function (search, strMeasure, currentAtom) {
var pt=strMeasure.indexOf$S(":");
var id=(pt < 0 ? strMeasure : strMeasure.substring$I$I(0, pt));
while (pt != 0){
var len=id.length$();
if (len == 1) id+="0";
var m=this.htMeasures.get$O(id);
if ((m == null ) == (pt < 0)  || len == 0 ) break;
try {
if (pt > 0) {
var type=("__dat".indexOf$I(id.charAt$I(0)));
if (type < 2) break;
var ret=Clazz_array(Integer.TYPE, [1]);
C$.getDigits$S$I$IA(id, 1, ret);
var index=ret[0];
strMeasure=strMeasure.substring$I(pt + 1);
var isNot=strMeasure.startsWith$S("!");
if (isNot) strMeasure=strMeasure.substring$I(1);
var isNegative=(strMeasure.startsWith$S("-"));
if (isNegative) strMeasure=strMeasure.substring$I(1);
strMeasure=$I$(3).rep$S$S$S(strMeasure, "-", ",");
strMeasure=$I$(3).rep$S$S$S(strMeasure, ",,", ",-");
if (isNegative) strMeasure="-" + strMeasure;
var tokens=$I$(3).split$S$S(strMeasure, ",");
if (tokens.length % 2 == 1 || isNot && tokens.length != 2  ) break;
var vals=Clazz_array(Double.TYPE, [tokens.length]);
var i=tokens.length;
for (; --i >= 0; ) if (Double.isNaN$D(vals[i]=Double.parseDouble$S(tokens[i]))) break;

if (i >= 0) break;
m=Clazz_new_($I$(7,1).c$$org_jmol_smiles_SmilesSearch$I$I$Z$DA,[search, index, type, isNot, vals]);
search.measures.addLast$O(m);
if (index > 0) this.htMeasures.put$O$O(id, m);
 else if (index == 0 && $I$(8).debugging ) $I$(8).debug$S("measure created: " + m);
} else {
if (!m.addPoint$I(currentAtom.index)) break;
if (m.nPoints == m.type) {
this.htMeasures.remove$O(id);
if ($I$(8).debugging) $I$(8).debug$S("measure created: " + m);
}return;
}if (!m.addPoint$I(currentAtom.index)) break;
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
break;
} else {
throw e;
}
}
return;
}
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["invalid measure: " + strMeasure]);
}, p$1);

Clazz_newMeth(C$, 'checkBrace$org_jmol_smiles_SmilesSearch$C$C',  function (search, ch, type) {
switch (ch.$c()) {
case 123:
if (ch != type) break;
++this.braceCount;
search.top.haveSelected=true;
return true;
case 125:
if (ch != type) break;
if (this.braceCount > 0) {
--this.braceCount;
return true;
}break;
default:
return false;
}
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Unmatched \'}\'"]);
}, p$1);

Clazz_newMeth(C$, 'parseNested$org_jmol_smiles_SmilesSearch$S$S',  function (search, pattern, prefix) {
var index;
prefix="$(" + prefix;
while ((index=pattern.lastIndexOf$S(prefix)) >= 0){
var s=C$.getSubPattern$S$I$C(pattern, index + 1, "(");
var pt=index + s.length$() + 3 ;
var ext=pattern.substring$I(pt);
pattern=pattern.substring$I$I(0, index);
var op="";
if (pattern.endsWith$S("]")) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["$(...) must be enclosed in brackets: " + pattern + "$(" + s + ")" ]);
if (index > 1 && prefix.length$() == 2  && ((pt=pattern.length$()) > 1 && ",;&![".indexOf$S(pattern.substring$I(pt - 1)) < 0 ) ) op="&";
if (ext.length$() > 1 && ",;&!)]".indexOf$I(ext.charAt$I(0)) < 0 ) ext="&" + ext;
pattern=pattern + op + "_" + search.top.addNested$S(s) + "_" + ext ;
}
return pattern;
}, p$1);

Clazz_newMeth(C$, 'parseVariables$S',  function (pattern) {
var keys=Clazz_new_($I$(9,1));
var values=Clazz_new_($I$(9,1));
var index;
var ipt=0;
var iptLast=-1;
if ($I$(8).debugging) $I$(8).info$S(pattern);
while ((index=pattern.indexOf$S$I("$", ipt)) >= 0){
if (C$.getChar$S$I(pattern, index + 1) == "(") break;
ipt=C$.skipTo$S$I$C(pattern, index, "=");
if (ipt <= index + 1 || C$.getChar$S$I(pattern, ipt + 1) != "\"" ) break;
var key=pattern.substring$I$I(index, ipt);
if (key.lastIndexOf$I("$") > 0 || key.indexOf$I("]") > 0 ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid variable name: " + key]);
var s=C$.getSubPattern$S$I$C(pattern, ipt + 1, "\"");
keys.addLast$O("[" + key + "]" );
values.addLast$O(s);
ipt+=s.length$() + 2;
ipt=C$.skipTo$S$I$C(pattern, ipt, ";");
iptLast=++ipt;
}
if (iptLast < 0) return pattern;
pattern=pattern.substring$I(iptLast);
for (var i=keys.size$(); --i >= 0; ) {
var k=keys.get$I(i);
var v=values.get$I(i);
if (!v.equals$O(k)) pattern=$I$(3).rep$S$S$S(pattern, k, v);
}
if ($I$(8).debugging) $I$(8).info$S(pattern);
return pattern;
}, p$1);

Clazz_newMeth(C$, 'parseAtom$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$Z$Z$Z',  function (search, atomSet, pattern, atom, bond, isBracketed, isAND, isBranchAtom) {
if (pattern == null  || pattern.length$() == 0 ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Empty atom definition"]);
var newAtom=Clazz_new_($I$(10,1));
if (this.componentParenCount > 0) newAtom.component=this.componentCount;
if (atomSet == null ) search.appendAtom$org_jmol_smiles_SmilesAtom(newAtom);
var isNewAtom=true;
if (!p$1.checkLogic$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$IA.apply(this, [search, pattern, newAtom, null, atom, isAND, isBranchAtom, null])) {
var ret=Clazz_array(Integer.TYPE, [1]);
if (this.isBioSequence && pattern.length$() == 1 ) pattern+=".0";
var ch=pattern.charAt$I(0);
var index=0;
var isNot=false;
if (this.isSmarts && ch == "!" ) {
ch=C$.getChar$S$I(pattern, ++index);
if (ch == "\u0000") throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["invalid \'!\'"]);
newAtom.not=isNot=true;
}var biopt=(pattern.indexOf$S("@PH") >= 0 ? -1 : pattern.indexOf$I("."));
if (biopt >= 0) {
newAtom.isBioResidue=true;
var resOrName=pattern.substring$I$I(index, biopt);
pattern=pattern.substring$I(biopt + 1).toUpperCase$();
var len=resOrName.length$();
if ((biopt=resOrName.indexOf$S("^")) >= 0) {
if (biopt == len - 2) {
ch=resOrName.charAt$I(len - 1);
if (ch != "*") newAtom.insCode=ch;
}resOrName=resOrName.substring$I$I(0, biopt);
}if ((biopt=resOrName.indexOf$S("#")) >= 0) {
C$.getDigits$S$I$IA(resOrName, biopt + 1, ret);
newAtom.residueNumber=ret[0];
resOrName=resOrName.substring$I$I(0, biopt);
}if (resOrName.length$() == 0) resOrName="*";
if (resOrName.length$() > 1) newAtom.residueName=resOrName.toUpperCase$();
 else if (!resOrName.equals$O("*")) newAtom.residueChar=resOrName;
resOrName=pattern;
if ((biopt=resOrName.indexOf$S("#")) >= 0) {
C$.getDigits$S$I$IA(resOrName, biopt + 1, ret);
newAtom.elementNumber=ret[0];
resOrName=resOrName.substring$I$I(0, biopt);
}if (resOrName.length$() == 0) resOrName="*";
 else if (resOrName.equals$O("0")) resOrName="\u0000";
if (resOrName.equals$O("*")) newAtom.isBioAtomWild=true;
 else newAtom.setAtomName$S(resOrName);
ch="\u0000";
}newAtom.setBioAtom$C(this.bioType);
var hydrogenCount=-2147483648;
while (ch != "\u0000" && isNewAtom ){
newAtom.setAtomName$S(this.isBioSequence ? "\u0000" : "");
if ($I$(3).isDigit$C(ch)) {
index=C$.getDigits$S$I$IA(pattern, index, ret);
var mass=ret[0];
if (mass == -2147483648) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Non numeric atomic mass"]);
if (C$.getChar$S$I(pattern, index) == "?") {
++index;
mass=-mass;
}if (newAtom.elementDefined) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["atom mass must precede atom symbol or be separated from it with \";\""]);
newAtom.setAtomicMass$I(mass);
} else {
switch (ch.$c()) {
case 34:
var type=$I$(3).getQuotedStringAt$S$I(pattern, index);
index+=type.length$() + 2;
newAtom.atomType=type;
break;
case 95:
index=C$.getDigits$S$I$IA(pattern, index + 1, ret) + 1;
if (ret[0] == -2147483648) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid SEARCH primitive: " + pattern.substring$I(index)]);
newAtom.iNested=ret[0];
if (!isBracketed) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["nesting must appear in [...]: $(" + search.getNested$I(ret[0]) + ")" ]);
if (this.isBioSequence && index != pattern.length$() ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["invalid characters: " + pattern.substring$I(index)]);
break;
case 61:
index=C$.getDigits$S$I$IA(pattern, index + 1, ret);
newAtom.jmolIndex=ret[0];
break;
case 35:
var isAtomNo=(pattern.charAt$I(index + 1) == "-");
index=C$.getDigits$S$I$IA(pattern, index + (isAtomNo ? 2 : 1), ret);
if (isAtomNo) newAtom.atomNumber=ret[0];
 else newAtom.elementNumber=ret[0];
break;
case 45:
case 43:
index=p$1.checkCharge$S$I$org_jmol_smiles_SmilesAtom.apply(this, [pattern, index, newAtom]);
break;
case 64:
if (search.stereo == null ) search.stereo=$I$(11).newStereo$org_jmol_smiles_SmilesSearch(search);
index=$I$(11).checkChirality$org_jmol_smiles_SmilesSearch$S$I$org_jmol_smiles_SmilesAtom(search, pattern, index, search.patternAtoms[newAtom.index]);
break;
case 58:
index=C$.getDigits$S$I$IA(pattern, ++index, ret);
if (ret[0] == -2147483648) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid atom class"]);
newAtom.atomClass=ret[0];
break;
default:
var nextChar=C$.getChar$S$I(pattern, index + 1);
var len=index + ($I$(3).isLowerCase$C(nextChar) && (!isBracketed || !$I$(3,"isDigit$C",[C$.getChar$S$I(pattern, index + 2)]) )  ? 2 : 1);
var sym2=pattern.substring$I$I(index + 1, len);
var symbol=Character.toUpperCase$C(ch) + sym2;
var mustBeSymbol=true;
var checkForPrimitive=(isBracketed && $I$(3).isLetter$C(ch) );
if (checkForPrimitive) {
if (!isNot && (isAND ? atomSet : newAtom).hasSymbol ) {
mustBeSymbol=false;
} else if (ch == "H") {
mustBeSymbol=(pattern.length$() == 1 || !$I$(3).isDigit$C(nextChar) );
} else if ($I$(3).isDigit$C(nextChar)) {
mustBeSymbol=false;
} else if (!symbol.equals$O("A") && !symbol.equals$O("Xx") ) {
mustBeSymbol=((ch == "h" ? len == 2 : true) && $I$(6).elementNumberFromSymbol$S$Z(symbol, true) > 0 );
if (!mustBeSymbol && len == 2 ) {
sym2="";
symbol=symbol.substring$I$I(0, 1);
mustBeSymbol=($I$(6).elementNumberFromSymbol$S$Z(symbol, true) > 0);
}}}if (mustBeSymbol) {
if (!isBracketed && !this.isSmarts && !this.isBioSequence && !$I$(10).allowSmilesUnbracketed$S(symbol)   || !newAtom.setSymbol$S(symbol=ch + sym2) ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid atom symbol: " + symbol]);
if (isAND) atomSet.hasSymbol=true;
index+=symbol.length$();
} else {
index=C$.getDigits$S$I$IA(pattern, index + 1, ret);
var val=ret[0];
switch (ch.$c()) {
default:
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid SEARCH primitive: " + pattern.substring$I(index)]);
case 68:
newAtom.setDegree$I(val == -2147483648 ? 1 : val);
break;
case 100:
newAtom.setNonhydrogenDegree$I(val == -2147483648 ? 1 : val);
break;
case 72:
hydrogenCount=(val == -2147483648 ? 1 : val);
break;
case 104:
newAtom.setImplicitHydrogenCount$I(val == -2147483648 ? -1 : val);
break;
case 82:
if (val == -2147483648) val=-1;
newAtom.setRingMembership$I(val);
search.top.needRingData=true;
break;
case 114:
if (val == -2147483648) {
val=-1;
newAtom.setRingMembership$I(val);
} else {
newAtom.setRingSize$I(val);
switch (val) {
case 500:
val=5;
break;
case 600:
val=6;
break;
}
if (val > search.ringDataMax) search.ringDataMax=val;
}search.top.needRingData=true;
break;
case 118:
newAtom.setValence$I(val == -2147483648 ? 1 : val);
break;
case 88:
newAtom.setConnectivity$I(val == -2147483648 ? 1 : val);
break;
case 120:
newAtom.setRingConnectivity$I(val == -2147483648 ? -1 : val);
search.top.needRingData=true;
break;
}
}}
}ch=C$.getChar$S$I(pattern, index);
if (isNot && ch != "\u0000" ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["\'!\' may only involve one primitive."]);
}
if (hydrogenCount == -2147483648 && isBracketed ) hydrogenCount=-2147483647;
newAtom.setExplicitHydrogenCount$I(hydrogenCount);
search.patternAtoms[newAtom.index].setExplicitHydrogenCount$I(hydrogenCount);
}if (this.braceCount > 0) newAtom.selected=true;
if (isNewAtom && atomSet != null  ) atomSet.addSubAtom$org_jmol_smiles_SmilesAtom$Z(newAtom, isAND);
if (atom != null  && bond.order == 0 ) {
newAtom.notBondedIndex=atom.index;
}if (atom != null  && bond.order != 0 ) {
if (bond.order == -1) bond.order=(this.isBioSequence && isBranchAtom  ? 112 : this.isSmarts || atom.isAromatic && newAtom.isAromatic   ? 81 : 1);
if (!isBracketed) p$1.setBondAtom$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesSearch.apply(this, [bond, null, newAtom, search]);
if (this.branchLevel == 0 && (bond.getBondType$() == 17 || bond.order == 112 ) ) ++this.branchLevel;
}if (this.branchLevel == 0) search.lastChainAtom=newAtom;
return newAtom;
}, p$1);

Clazz_newMeth(C$, 'checkCharge$S$I$org_jmol_smiles_SmilesAtom',  function (pattern, index, newAtom) {
var len=pattern.length$();
var ch=pattern.charAt$I(index);
var count=1;
++index;
if (index < len) {
var nextChar=pattern.charAt$I(index);
if ($I$(3).isDigit$C(nextChar)) {
var ret=Clazz_array(Integer.TYPE, [1]);
index=C$.getDigits$S$I$IA(pattern, index, ret);
count=ret[0];
if (count == -2147483648) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Non numeric charge"]);
} else {
while (index < len && pattern.charAt$I(index) == ch ){
++index;
++count;
}
}}newAtom.setCharge$I(ch == "+" ? count : -count);
return index;
}, p$1);

Clazz_newMeth(C$, 'parseBond$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesBond$S$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$I$IA',  function (search, bondSet, pattern, bond, currentAtom, isAND, isBranchAtom, len, ret) {
var ch;
if (len > 0) {
switch ((ch=pattern.charAt$I(0)).$c()) {
case 62:
if (!pattern.equals$O(">>")) {
len=-1;
break;
}case 46:
if (bond == null  && bondSet == null  ) {
this.isBioSequence=(C$.getChar$S$I(pattern, 1) == "~");
return Clazz_new_($I$(5,1).c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[null, null, 0, false]);
}len=-1;
break;
case 43:
if (bondSet != null ) len=-1;
break;
}
} else {
ch="\u0000";
}var newBond=(bondSet == null  ? (bond == null  ? Clazz_new_([currentAtom, null, (this.isBioSequence && currentAtom != null   ? (isBranchAtom ? 112 : 96) : -1), false],$I$(5,1).c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z) : bond) : isAND ? bondSet.addPrimitive$() : bondSet.addBondOr$());
if (len > 0 && !p$1.checkLogic$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$IA.apply(this, [search, pattern, null, newBond, currentAtom, isAND, false, ret]) ) {
var isBondNot=(ch == "!");
if (isBondNot) {
ch=C$.getChar$S$I(pattern, 1);
if (ch == "\u0000" || ch == "!" ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["invalid \'!\'"]);
}var bondType=$I$(5).getBondTypeFromCode$C(ch);
if (bondType == 65) search.top.needRingMemberships=true;
if (currentAtom == null  && bondType != 0 ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Bond without a previous atom"]);
switch (bondType) {
case 65537:
case 65538:
if ((len=pattern.length$()) < (isBondNot ? 3 : 2) || pattern.charAt$I(len - 1) != "-" ) {
len=0;
} else {
if (len == (isBondNot ? 3 : 2)) {
newBond.setAtropType$I(22);
} else {
C$.getDigits$S$I$IA(pattern, (isBondNot ? 2 : 1), ret);
newBond.setAtropType$I(ret[0]);
}}search.haveBondStereochemistry=true;
break;
case 1025:
case 1041:
this.bondDirectionPaired=!this.bondDirectionPaired;
search.haveBondStereochemistry=true;
break;
case 17:
break;
case 2:
++search.top.nDouble;
case 1:
if (currentAtom.isAromatic) search.top.needRingData=true;
break;
}
newBond.set2$I$Z(bondType, isBondNot);
if (this.isBioSequence && bondSet != null  ) bondSet.set2$I$Z(bondType, isBondNot);
}if (len == -1) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["invalid bond:" + ch]);
return newBond;
}, p$1);

Clazz_newMeth(C$, 'checkLogic$org_jmol_smiles_SmilesSearch$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$IA',  function (search, pattern, atom, bond, currentAtom, isAND, isBranchAtom, ret) {
var pt=pattern.lastIndexOf$S("!");
if (atom != null ) atom.pattern=pattern;
while (pt > 0){
if (",;&!(".indexOf$I(pattern.charAt$I(pt - 1)) < 0) pattern=pattern.substring$I$I(0, pt) + "&" + pattern.substring$I(pt) ;
pt=pattern.lastIndexOf$S$I("!", pt - 1);
}
pt=pattern.indexOf$I(",");
var len=pattern.length$();
var and="&";
 out : while (true){
var haveOr=(pt > 0);
if (haveOr && !this.isSmarts  || pt == 0 ) break;
pt=pattern.indexOf$I(";");
if (pt >= 0) {
if (!this.isSmarts || pt == 0 ) break;
if (haveOr) {
and=";";
haveOr=false;
} else {
pattern=pattern.replace$C$C(";", "&");
}}var index=0;
if (haveOr) {
pattern+=",";
while ((pt=pattern.indexOf$I$I(",", index)) > 0 && pt <= len ){
var s=pattern.substring$I$I(index, pt);
if (s.length$() == 0) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["missing " + (bond == null  ? "atom" : "bond") + " token" ]);
if (bond == null ) p$1.parseAtom$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$Z$Z$Z.apply(this, [search, atom, s, null, null, true, false, isBranchAtom]);
 else p$1.parseBond$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesBond$S$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$I$IA.apply(this, [search, bond, s, null, currentAtom, false, false, s.length$(), ret]);
index=pt + 1;
}
} else if ((pt=pattern.indexOf$S(and)) >= 0 || bond != null  && len > 1  && !isAND  ) {
if (pt == 0 || bond == null  && !this.isSmarts  ) break;
if (bond != null  && pt < 0 ) {
if (len > 1) {
var sNew=Clazz_new_($I$(4,1));
for (var i=0; i < len; ) {
var ch=pattern.charAt$I(i++);
sNew.appendC$C(ch);
switch (ch.$c()) {
case 33:
if (!this.isSmarts) break out;
continue;
case 94:
case 96:
while ((ch=pattern.charAt$I(i++)) != "-" && ch != "\u0000" ){
sNew.appendC$C(ch);
}
sNew.appendC$C("-");
break;
}
if (i < len) {
if (!this.isSmarts) break out;
sNew.append$S(and);
}}
pattern=sNew.toString();
len=pattern.length$();
}}pattern+=and;
while ((pt=pattern.indexOf$S$I(and, index)) > 0 && pt <= len ){
var s=pattern.substring$I$I(index, pt);
if (bond == null ) p$1.parseAtom$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesAtom$S$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$Z$Z$Z.apply(this, [search, atom, s, null, null, true, true, isBranchAtom]);
 else p$1.parseBond$org_jmol_smiles_SmilesSearch$org_jmol_smiles_SmilesBond$S$org_jmol_smiles_SmilesBond$org_jmol_smiles_SmilesAtom$Z$Z$I$IA.apply(this, [search, this.isSmarts ? bond : null, s, this.isSmarts ? null : bond, currentAtom, true, false, s.length$(), ret]);
index=pt + 1;
}
} else {
return false;
}return true;
}
var ch=pattern.charAt$I(pt);
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,[(this.isSmarts ? "invalid placement for '" + ch + "'"  : "[" + ch + "] notation only valid with SMARTS, not SMILES," ) + " in " + pattern ]);
}, p$1);

Clazz_newMeth(C$, 'getSubPattern$S$I$C',  function (pattern, index, ch) {
var ch2;
var margin=1;
switch (ch.$c()) {
case 91:
ch2="]";
break;
case 34:
case 37:
case 47:
ch2=ch;
break;
case 40:
ch2=")";
break;
default:
ch2=ch;
margin=0;
}
var len=pattern.length$();
var pCount=1;
for (var pt=index + 1; pt < len; pt++) {
var ch1=pattern.charAt$I(pt);
if (ch1 == ch2) {
--pCount;
if (pCount == 0) return pattern.substring$I$I(index + margin, pt + 1 - margin);
} else if (ch1 == ch) {
++pCount;
}}
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Unmatched " + ch]);
}, 1);

Clazz_newMeth(C$, 'getChar$S$I',  function (pattern, i) {
return (i < pattern.length$() ? pattern.charAt$I(i) : "\u0000");
}, 1);

Clazz_newMeth(C$, 'getDigits$S$I$IA',  function (pattern, index, ret) {
var pt=index;
var len=pattern.length$();
while (pt < len && $I$(3,"isDigit$C",[pattern.charAt$I(pt)]) )++pt;

if (pt > index) try {
ret[0]=Integer.parseInt$S(pattern.substring$I$I(index, pt));
return pt;
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
} else {
throw e;
}
}
ret[0]=-2147483648;
return pt;
}, 1);

Clazz_newMeth(C$, 'skipTo$S$I$C',  function (pattern, index, ch0) {
var pt=index;
var ch;
while ((ch=C$.getChar$S$I(pattern, ++pt)) != ch0 && ch != "\u0000" ){
}
return (ch == "\u0000" ? -1 : pt);
}, 1);

Clazz_newMeth(C$, 'cleanPattern$S',  function (pattern) {
pattern=$I$(3).replaceAllCharacters$S$S$S(pattern, " \t\n\r", "");
pattern=$I$(3).rep$S$S$S(pattern, "^^", "`");
var i=0;
var i2=0;
while ((i=pattern.indexOf$S("//*")) >= 0 && (i2=pattern.indexOf$S("*//")) >= i )pattern=pattern.substring$I$I(0, i) + pattern.substring$I(i2 + 3);

pattern=$I$(3).rep$S$S$S(pattern, "//", "");
return pattern;
}, 1);

Clazz_newMeth(C$, 'extractFlags$S$IA',  function (pattern, ret) {
pattern=C$.cleanPattern$S(pattern);
var flags=0;
while (pattern.startsWith$S("/")){
var strFlags=C$.getSubPattern$S$I$C(pattern, 0, "/").toUpperCase$();
pattern=pattern.substring$I(strFlags.length$() + 2);
flags=$I$(2).addFlags$I$S(flags, strFlags);
}
ret[0]=flags;
return pattern;
}, 1);

Clazz_newMeth(C$, 'getFlags$S',  function (pattern) {
var ret=Clazz_array(Integer.TYPE, [1]);
C$.extractFlags$S$IA(pattern, ret);
return ret[0];
}, 1);

Clazz_newMeth(C$, 'main$SA',  function (args) {
try {
var s=Clazz_new_(C$.c$$Z$Z,[true, false]).parse$S("*aaaaC*").toString();
System.out.println$S(s);
} catch (e) {
if (Clazz_exceptionOf(e,"org.jmol.smiles.InvalidSmilesException")){
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-12 16:14:01 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "SmilesRing", null, 'javajs.util.BS');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isOK'],'I',['n'],'O',['set','org.jmol.smiles.SmilesRingSet','edges','javajs.util.Lst','bsEdgesToCheck','javajs.util.BS']]]

Clazz_newMeth(C$, 'c$$I$javajs_util_BS$javajs_util_Lst$Z',  function (n, atoms, edges, isOK) {
Clazz_super_(C$, this);
this.or$javajs_util_BS(atoms);
this.edges=edges;
this.isOK=isOK;
this.n=n;
}, 1);

Clazz_newMeth(C$, 'addEdges$java_util_Hashtable',  function (htEdgeMap) {
for (var i=this.edges.size$(); --i >= 0; ) htEdgeMap.put$O$O(C$.getKey$org_jmol_util_Edge(this.edges.get$I(i)), this.set);

});

Clazz_newMeth(C$, 'getSetByEdge$org_jmol_util_Edge$java_util_Hashtable',  function (edge, htEdgeMap) {
return htEdgeMap.get$O(C$.getKey$org_jmol_util_Edge(edge));
}, 1);

Clazz_newMeth(C$, 'getKey$org_jmol_util_Edge',  function (e) {
var i=e.getAtomIndex1$();
var j=e.getAtomIndex2$();
return (i < j ? i + "_" + j  : j + "_" + i );
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-10 14:32:03 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),I$=[[0,'javajs.util.BS']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesRingSet", null, 'javajs.util.Lst');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.bs=Clazz_new_($I$(1,1));
},1);

C$.$fields$=[['O',['bs','javajs.util.BS']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'addSet$org_jmol_smiles_SmilesRingSet$java_util_Hashtable',  function (set, htEdgeMap) {
for (var i=set.size$(); --i >= 0; ) {
var r=set.get$I(i);
this.addRing$org_jmol_smiles_SmilesRing(r);
r.addEdges$java_util_Hashtable(htEdgeMap);
}
});

Clazz_newMeth(C$, 'addRing$org_jmol_smiles_SmilesRing',  function (ring) {
this.addLast$O(ring);
ring.set=this;
this.bs.or$javajs_util_BS(ring);
});

Clazz_newMeth(C$, 'getElectronCount$IA',  function (eCounts) {
var eCount=0;
for (var j=this.bs.nextSetBit$I(0); j >= 0; j=this.bs.nextSetBit$I(j + 1)) eCount+=eCounts[j];

return eCount;
});
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:19 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),p$1={},I$=[[0,'javajs.util.BS','org.jmol.smiles.SmilesAromatic','javajs.util.Lst','org.jmol.smiles.SmilesAtom',['org.jmol.smiles.SmilesSearch','.SmilesTarget'],'org.jmol.smiles.VTemp','javajs.util.AU','java.util.Hashtable','org.jmol.smiles.SmilesParser','org.jmol.util.Logger','org.jmol.util.BSUtil','org.jmol.smiles.SmilesMeasure','org.jmol.util.Node','org.jmol.smiles.SmilesStereo','org.jmol.smiles.SmilesBond','javajs.util.SB']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesSearch", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'org.jmol.util.JmolMolecule');
C$.$classes$=[['SmilesTarget',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.patternAtoms=Clazz_array($I$(4), [16]);
this.needAromatic=true;
this.ringDataMax=-2147483648;
this.measures=Clazz_new_($I$(3,1));
this.bsFound=Clazz_new_($I$(1,1));
this.bsReturn=Clazz_new_($I$(1,1));
this.autoAddImplicitH=true;
},1);

C$.$fields$=[['Z',['isSmarts','targetSet','aromaticOpen','aromaticStrict','aromaticPlanar','aromaticDouble','aromaticMMFF94','aromaticDefined','aromaticUnknown','noAromatic','ignoreAtomClass','ignoreElement','ignoreStereochemistry','invertStereochemistry','exitFirstMatch','groupByModel','setAtropicity','patternAromatic','haveSmilesTarget','isTopology','patternBioSequence','haveSelected','haveBondStereochemistry','needRingData','needAromatic','needRingMemberships','asVector','getMaps','retBoolean','isNormalized','haveComponents','isSilent','isRingCheck','mapUnique','autoAddImplicitH'],'I',['nDouble','ringDataMax','flags','nNested'],'S',['pattern','atropKeys','pattern0'],'O',['top','org.jmol.smiles.SmilesSearch','target','org.jmol.smiles.SmilesSearch.SmilesTarget','patternAtoms','org.jmol.smiles.SmilesAtom[]','v','org.jmol.smiles.VTemp','subSearches','org.jmol.smiles.SmilesSearch[]','stereo','org.jmol.smiles.SmilesStereo','measures','javajs.util.Lst','lastChainAtom','org.jmol.smiles.SmilesAtom','bsFound','javajs.util.BS','htNested','java.util.Map','nestedBond','org.jmol.smiles.SmilesBond','vReturn','javajs.util.Lst','+uniqueList','bsReturn','javajs.util.BS','+bsCheck','polyhedronStereo','org.jmol.smiles.SmilesStereo','polyAtom','org.jmol.smiles.SmilesAtom']]]

Clazz_newMeth(C$, 'isRingBond$javajs_util_Lst$javajs_util_BS$I$I',  function (ringSets, bsAromaticRings, a1, a2) {
if (ringSets != null ) {
for (var i=ringSets.size$(); --i >= 0; ) {
var bsRing=ringSets.get$I(i);
if (bsRing.get$I(a1) && bsRing.get$I(a2) ) {
if (bsAromaticRings == null  || bsAromaticRings.get$I(i) ) return true;
}}
}return false;
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.top=this;
this.target=Clazz_new_($I$(5,1));
this.v=Clazz_new_($I$(6,1));
}, 1);

Clazz_newMeth(C$, 'setTarget$org_jmol_smiles_SmilesSearch',  function (s) {
this.target=s.target;
this.targetSet=true;
});

Clazz_newMeth(C$, 'setTop$org_jmol_smiles_SmilesSearch',  function (parent) {
while (parent.top !== parent )parent=parent.top;

this.top=parent;
});

Clazz_newMeth(C$, 'addFlags$I$S',  function (flags, strFlags) {
if (strFlags.indexOf$S("OPEN") >= 0) flags|=5;
if (strFlags.indexOf$S("BIO") >= 0) flags|=1048576;
if (strFlags.indexOf$S("HYDROGEN2") >= 0) flags|=8192;
 else if (strFlags.indexOf$S("HYDROGEN") >= 0) flags|=4096;
if (strFlags.indexOf$S("FIRSTMATCHONLY") >= 0) flags|=8;
if (strFlags.indexOf$S("STRICT") >= 0) flags|=256;
if (strFlags.indexOf$S("PLANAR") >= 0) flags|=1024;
if (strFlags.indexOf$S("NOAROMATIC") >= 0 || strFlags.indexOf$S("NONAROMATIC") >= 0 ) flags|=16;
if (strFlags.indexOf$S("AROMATICDOUBLE") >= 0) flags|=512;
if (strFlags.indexOf$S("AROMATICDEFINED") >= 0) flags|=128;
if (strFlags.indexOf$S("MMFF94") >= 0) flags|=768;
if (strFlags.indexOf$S("ALLCOMPONENTS") >= 0) flags|=32768;
if (strFlags.indexOf$S("TOPOLOGY") >= 0) flags|=16384;
if (strFlags.indexOf$S("NOATOMCLASS") >= 0) flags|=2048;
if (strFlags.indexOf$S("NOSTEREO") >= 0) {
flags|=32;
} else if (strFlags.indexOf$S("INVERTSTEREO") >= 0) {
if ((flags & 64) != 0) flags&=~64;
 else flags|=64;
}if (strFlags.indexOf$S("ATOMCOMMENT") >= 0) flags|=131072;
if (strFlags.indexOf$S("GROUPBYMODEL") >= 0) flags|=67108864;
if ((flags & 1048576) == 1048576) {
if (strFlags.indexOf$S("NOCOMMENT") >= 0) flags|=34603008;
if (strFlags.indexOf$S("UNMATCHED") >= 0) flags|=3145728;
if (strFlags.indexOf$S("COVALENT") >= 0) flags|=5242880;
if (strFlags.indexOf$S("HBOND") >= 0) flags|=9437184;
}return flags;
}, 1);

Clazz_newMeth(C$, 'reset$',  function () {
this.vReturn=null;
this.noAromatic=false;
this.exitFirstMatch=false;
this.flags=0;
});

Clazz_newMeth(C$, 'setFlags$I',  function (flags) {
this.flags=flags;
this.exitFirstMatch=!!(this.exitFirstMatch|(((flags & 8) == 8)));
this.aromaticOpen=((flags & 5) == 5);
this.aromaticStrict=((flags & 256) == 256);
this.aromaticPlanar=((flags & 1024) == 1024);
this.aromaticMMFF94=((flags & 768) == 768);
this.aromaticDouble=((flags & 512) == 512);
this.aromaticDefined=((flags & 128) == 128);
this.noAromatic=!!(this.noAromatic|(((flags & 16) == 16)));
this.aromaticUnknown=!this.noAromatic && !this.aromaticOpen && !this.aromaticDouble && !this.aromaticStrict && !this.aromaticPlanar && !this.aromaticMMFF94 && !this.aromaticDefined  ;
this.groupByModel=((flags & 67108864) == 67108864);
this.ignoreAtomClass=((flags & 2048) == 2048);
this.ignoreStereochemistry=((flags & 32) == 32);
this.invertStereochemistry=!this.ignoreStereochemistry && ((flags & 64) == 64) ;
this.ignoreElement=((flags & 16384) == 16384);
});

Clazz_newMeth(C$, 'set$',  function () {
if (this.patternAtoms.length > this.ac) this.patternAtoms=$I$(7).arrayCopyObject$O$I(this.patternAtoms, this.ac);
this.nodes=this.patternAtoms;
this.isTopology=true;
this.patternAromatic=false;
this.patternBioSequence=true;
for (var i=this.ac; --i >= 0; ) {
var atom=this.patternAtoms[i];
if (this.isTopology && atom.isDefined$() ) this.isTopology=false;
if (!atom.isBioResidue) this.patternBioSequence=false;
if (atom.isAromatic) this.patternAromatic=true;
atom.setBondArray$();
if (this.autoAddImplicitH && !this.isSmarts && atom.bioType == "\u0000"   && !atom.setHydrogenCount$() ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["unbracketed atoms must be one of: B, C, N, O, P, S, F, Cl, Br, I, *,"]);
}
if (this.haveComponents) {
for (var i=this.ac; --i >= 0; ) {
var a=this.patternAtoms[i];
var bonds=a.bonds;
var ia=a.component;
for (var j=a.bondCount; --j >= 0; ) {
var b=bonds[j];
var ib;
if (b.isConnection && b.atom2 === a   && (ib=b.atom1.component) != ia ) {
for (var k=this.ac; --k >= 0; ) if (this.patternAtoms[k].component == ia) this.patternAtoms[k].component=ib;

}}
}
}});

Clazz_newMeth(C$, 'addAtom$',  function () {
return this.appendAtom$org_jmol_smiles_SmilesAtom(Clazz_new_($I$(4,1)));
});

Clazz_newMeth(C$, 'appendAtom$org_jmol_smiles_SmilesAtom',  function (sAtom) {
if (this.ac >= this.patternAtoms.length) this.patternAtoms=$I$(7).doubleLength$O(this.patternAtoms);
return this.patternAtoms[this.ac]=sAtom.setIndex$I(this.ac++);
});

Clazz_newMeth(C$, 'addNested$S',  function (pattern) {
if (this.htNested == null ) this.htNested=Clazz_new_($I$(8,1));
this.setNested$I$O(++this.nNested, pattern);
return this.nNested;
});

Clazz_newMeth(C$, 'clear$',  function () {
this.bsReturn.clearAll$();
this.nNested=0;
this.htNested=null;
this.nestedBond=null;
p$1.clearBsFound$I.apply(this, [-1]);
});

Clazz_newMeth(C$, 'clearBsFound$I',  function (iAtom) {
if (iAtom < 0) {
if (this.bsCheck == null ) {
this.bsFound.clearAll$();
}} else this.bsFound.clear$I(iAtom);
}, p$1);

Clazz_newMeth(C$, 'setNested$I$O',  function (iNested, o) {
this.top.htNested.put$O$O("_" + iNested, o);
});

Clazz_newMeth(C$, 'getNested$I',  function (iNested) {
return this.top.htNested.get$O("_" + iNested);
});

Clazz_newMeth(C$, 'getMissingHydrogenCount$',  function () {
var n=0;
var nH;
for (var i=0; i < this.ac; i++) if ((nH=this.patternAtoms[i].explicitHydrogenCount) >= 0) n+=nH;

return n;
});

Clazz_newMeth(C$, 'setRingData$javajs_util_BS$javajs_util_LstA$Z',  function (bsA, vRings, doProcessAromatic) {
if (this.isTopology || this.patternBioSequence ) this.needAromatic=false;
this.needAromatic=!!(this.needAromatic&(!!((bsA == null ) & !this.noAromatic)));
if (this.needAromatic) this.needRingData=true;
if (!this.needAromatic) {
this.target.bsAromatic.clearAll$();
if (bsA != null ) this.target.bsAromatic.or$javajs_util_BS(bsA);
if (!this.needRingMemberships && !this.needRingData ) return;
}this.getRingData$javajs_util_LstA$Z$Z(vRings, this.needRingData, doProcessAromatic);
});

Clazz_newMeth(C$, 'getRingData$javajs_util_LstA$Z$Z',  function (vRings, needRingData, doTestAromatic) {
var isStrict=(this.needAromatic && (this.aromaticStrict || !this.aromaticOpen && !this.aromaticPlanar  ) );
if (isStrict && this.aromaticUnknown ) {
if (this.target.ac > 0 && this.target.nodes[this.target.bsSelected.nextSetBit$I(0)].modelIsRawPDB$() ) isStrict=false;
}var isOpenNotStrict=(this.needAromatic && this.aromaticOpen && !this.aromaticStrict  );
var checkExplicit=(this.needAromatic && !isStrict );
var doFinalize=(this.needAromatic && doTestAromatic && (isStrict || isOpenNotStrict )  );
var setAromatic=(this.needAromatic && !this.aromaticDefined );
var aromaticMax=7;
var lstAromatic=(vRings == null  ? Clazz_new_($I$(3,1)) : (vRings[3]=Clazz_new_($I$(3,1))));
var lstSP2=(doFinalize ? Clazz_new_($I$(3,1)) : null);
var strictness=(!isStrict ? 0 : this.aromaticMMFF94 ? 2 : 1);
if (this.needAromatic && this.aromaticDefined ) {
this.target.checkAromaticDefined$();
strictness=0;
}this.ringDataMax=this.target.setRingData$I$Z$I(strictness, needRingData, this.ringDataMax);
if (this.target.selectedAtomCount < 3) return;
var s="****";
var max=this.ringDataMax;
while (s.length$() < max)s+=s;

var eCounts=(doFinalize && setAromatic  ? Clazz_array(Integer.TYPE, [this.target.ac]) : null);
var justCheckBonding=(setAromatic && Clazz_instanceOf(this.target.nodes[0], "org.jmol.smiles.SmilesAtom") );
for (var i=3; i <= max; i++) {
if (i > this.target.ac) break;
var smarts="*1" + s.substring$I$I(0, i - 2) + "*1" ;
var search=$I$(9).newSearch$S$Z$Z(smarts, true, true);
var vR=this.subsearch$org_jmol_smiles_SmilesSearch$I(search, 2);
if (vRings != null  && i <= 5 ) {
var v=Clazz_new_($I$(3,1));
for (var j=vR.size$(); --j >= 0; ) v.addLast$O(vR.get$I(j));

vRings[i - 3]=v;
}if (vR.size$() == 0) continue;
if (setAromatic && i >= 4  && i <= aromaticMax ) {
$I$(2).setAromatic$I$org_jmol_util_NodeA$javajs_util_BS$javajs_util_Lst$javajs_util_BS$I$Z$Z$Z$org_jmol_smiles_VTemp$javajs_util_Lst$javajs_util_Lst$IA$Z(i, this.target.nodes, this.target.bsSelected, vR, this.target.bsAromatic, strictness, isOpenNotStrict, justCheckBonding, checkExplicit, this.v, lstAromatic, lstSP2, eCounts, doTestAromatic);
}if (needRingData) {
this.target.ringData[i]=Clazz_new_($I$(1,1));
for (var k=vR.size$(); --k >= 0; ) {
var r=vR.get$I(k);
this.target.ringData[i].or$javajs_util_BS(r);
for (var j=r.nextSetBit$I(0); j >= 0; j=r.nextSetBit$I(j + 1)) ++this.target.ringCounts[j];

}
}}
if (this.needAromatic) {
if (doFinalize) $I$(2).finalizeAromatic$org_jmol_util_NodeA$javajs_util_BS$javajs_util_Lst$javajs_util_Lst$IA$Z$Z(this.target.nodes, this.target.bsAromatic, lstAromatic, lstSP2, eCounts, isOpenNotStrict, isStrict);
this.target.finalizeAromatic$javajs_util_Lst(lstAromatic);
}if (needRingData) {
this.target.finalizeRingData$();
}});

Clazz_newMeth(C$, 'subsearch$org_jmol_smiles_SmilesSearch$I',  function (search, submode) {
search.mapUnique=this.mapUnique;
search.target=this.target;
search.htNested=this.htNested;
search.haveSmilesTarget=this.haveSmilesTarget;
search.bsCheck=this.bsCheck;
search.isSmarts=true;
switch (submode) {
case 1:
search.exitFirstMatch=false;
break;
case 2:
search.isRingCheck=true;
search.isSilent=true;
search.asVector=true;
break;
case 3:
search.ignoreAtomClass=this.ignoreAtomClass;
search.aromaticDouble=this.aromaticDouble;
search.haveSelected=this.haveSelected;
search.exitFirstMatch=this.exitFirstMatch;
search.getMaps=this.getMaps;
search.retBoolean=this.retBoolean;
search.asVector=this.asVector;
search.vReturn=this.vReturn;
search.bsReturn=this.bsReturn;
search.haveBondStereochemistry=this.haveBondStereochemistry;
break;
}
return p$1.search2$Z.apply(search, [submode == 1]);
});

Clazz_newMeth(C$, 'search$',  function () {
this.bsReturn.clearAll$();
return p$1.search2$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'search2$Z',  function (firstAtomOnly) {
this.setFlags$I(this.flags);
if (!this.isRingCheck && $I$(10).debuggingHigh && !this.isSilent  ) $I$(10).debug$S("SmilesSearch processing " + this.pattern);
if (this.vReturn == null  && (this.asVector || this.getMaps ) ) this.vReturn=Clazz_new_($I$(3,1));
if (this.subSearches != null ) {
for (var i=0; i < this.subSearches.length; i++) {
if (this.subSearches[i] == null ) continue;
this.subsearch$org_jmol_smiles_SmilesSearch$I(this.subSearches[i], 3);
if (this.exitFirstMatch) {
if (this.vReturn == null  ? this.bsReturn.nextSetBit$I(0) >= 0 : this.vReturn.size$() > 0) break;
}}
} else if (this.ac > 0 && this.ac <= this.target.selectedAtomCount ) {
if (this.nestedBond == null ) {
p$1.clearBsFound$I.apply(this, [-1]);
} else {
this.bsReturn.clearAll$();
}p$1.nextPatternAtom$I$I$Z$I.apply(this, [-1, -1, firstAtomOnly, -1]);
}return (this.asVector || this.getMaps  ? this.vReturn : !this.retBoolean ? this.bsReturn : Boolean.valueOf$Z(!this.bsReturn.isEmpty$()));
}, p$1);

Clazz_newMeth(C$, 'nextPatternAtom$I$I$Z$I',  function (atomNum, iAtom, firstAtomOnly, c) {
var jmolAtom;
var jmolBonds;
if (++atomNum < this.ac) {
var newPatternAtom=this.patternAtoms[atomNum];
var newPatternBond=(iAtom >= 0 ? newPatternAtom.getBondTo$org_jmol_smiles_SmilesAtom(null) : atomNum == 0 ? this.nestedBond : null);
if (newPatternBond == null ) {
var bs=$I$(11).copy$javajs_util_BS(this.bsFound);
var bs0=$I$(11).copy$javajs_util_BS(this.bsFound);
if (newPatternAtom.notBondedIndex >= 0) {
var pa=this.patternAtoms[newPatternAtom.notBondedIndex];
var a=pa.getMatchingAtom$();
if (pa.isBioAtom) {
var ii=a.getOffsetResidueAtom$S$I("\u0000", 1);
if (ii >= 0) bs.set$I(ii);
ii=a.getOffsetResidueAtom$S$I("\u0000", -1);
if (ii >= 0) bs.set$I(ii);
} else if (pa === this.polyAtom ) {
bs.set$I(pa.getMatchingAtomIndex$());
} else {
jmolBonds=a.getEdges$();
for (var k=0; k < jmolBonds.length; k++) bs.set$I(jmolBonds[k].getOtherNode$org_jmol_util_SimpleNode(a).getIndex$());

}}var skipGroup=((newPatternAtom.isBioAtomWild));
var j1=this.target.bsSelected.nextSetBit$I(0);
j1=(skipGroup && j1 >= 0  ? this.target.nodes[j1].getOffsetResidueAtom$S$I("\u0000", j1) : j1);
var oldJmolComponent;
var oldPatternComponent=(atomNum > 0 ? this.patternAtoms[atomNum - 1] : newPatternAtom).component;
var thisPatternComponent=newPatternAtom.component;
var checkComponents=this.haveComponents && thisPatternComponent != -2147483648 ;
for (var j=j1; j >= 0; j=this.target.bsSelected.nextSetBit$I(j + 1)) {
if (!bs.get$I(j) && !this.bsFound.get$I(j) ) {
jmolAtom=this.target.nodes[j];
if (checkComponents && !this.isRingCheck ) {
c=(this.groupByModel ? jmolAtom.getModelIndex$() : jmolAtom.getMoleculeNumber$Z(false));
oldJmolComponent=(atomNum > 0 ? this.patternAtoms[atomNum - 1].matchingComponent : c);
if ((oldPatternComponent == thisPatternComponent) != (oldJmolComponent == c) ) continue;
}if (!p$1.nextTargetAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_Node$I$I$Z$I.apply(this, [newPatternAtom, jmolAtom, atomNum, j, firstAtomOnly, c])) return false;
}if (skipGroup) {
j1=this.target.nodes[j].getOffsetResidueAtom$S$I(newPatternAtom.bioAtomName, 1);
if (j1 >= 0) j=j1 - 1;
}}
this.bsFound=bs0;
return true;
}jmolAtom=newPatternBond.atom1.getMatchingAtom$();
switch (newPatternBond.order) {
case 96:
var nextGroupAtom=jmolAtom.getOffsetResidueAtom$S$I(newPatternAtom.bioAtomName, 1);
if (nextGroupAtom >= 0) {
var bs=$I$(11).copy$javajs_util_BS(this.bsFound);
jmolAtom.getGroupBits$javajs_util_BS(this.bsFound);
if (p$1.doCheckAtom$I.apply(this, [nextGroupAtom]) && !p$1.nextTargetAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_Node$I$I$Z$I.apply(this, [newPatternAtom, this.target.nodes[nextGroupAtom], atomNum, nextGroupAtom, firstAtomOnly, c]) ) return false;
this.bsFound=bs;
}return true;
case 112:
var vLinks=Clazz_new_($I$(3,1));
jmolAtom.getCrossLinkVector$javajs_util_Lst$Z$Z(vLinks, true, true);
var bs=$I$(11).copy$javajs_util_BS(this.bsFound);
jmolAtom.getGroupBits$javajs_util_BS(this.bsFound);
for (var j=2; j < vLinks.size$(); j+=3) {
var ia=vLinks.get$I(j).intValue$();
if (p$1.doCheckAtom$I.apply(this, [ia]) && !p$1.nextTargetAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_Node$I$I$Z$I.apply(this, [newPatternAtom, this.target.nodes[ia], atomNum, ia, firstAtomOnly, c]) ) return false;
}
this.bsFound=bs;
return true;
}
jmolBonds=jmolAtom.getEdges$();
if (jmolBonds != null ) for (var j=0; j < jmolBonds.length; j++) {
var ia=jmolAtom.getBondedAtomIndex$I(j);
if (p$1.doCheckAtom$I.apply(this, [ia]) && !p$1.nextTargetAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_Node$I$I$Z$I.apply(this, [newPatternAtom, this.target.nodes[ia], atomNum, ia, firstAtomOnly, c]) ) return false;
}
p$1.clearBsFound$I.apply(this, [iAtom]);
return true;
}if (!this.ignoreStereochemistry && !this.isRingCheck ) {
if ($I$(10).debuggingHigh) {
for (var i=0; i < atomNum; i++) $I$(10).debug$S("pattern atoms " + this.patternAtoms[i] + " " + this.patternAtoms[i].matchingComponent );

$I$(10,"debug$S",["--ss-- " + this.bsFound.cardinality$()]);
}if (!p$1.checkStereochemistry.apply(this, [])) return true;
}var bs=Clazz_new_($I$(1,1));
var nMatch=0;
for (var j=0; j < this.ac; j++) {
var i=this.patternAtoms[j].getMatchingAtomIndex$();
if (!firstAtomOnly && this.top.haveSelected && !this.patternAtoms[j].selected  ) continue;
++nMatch;
bs.set$I(i);
if (this.patternAtoms[j].isBioAtomWild) this.target.nodes[i].getGroupBits$javajs_util_BS(bs);
if (firstAtomOnly) break;
if (!this.isSmarts) if (!this.setAtropicity && this.patternAtoms[j].explicitHydrogenCount > 0 ) {
var atom=this.target.nodes[i];
for (var k=0, n=atom.getEdges$().length; k < n; k++) {
var ia=atom.getBondedAtomIndex$I(k);
if (this.target.nodes[ia].getElementNumber$() == 1) bs.set$I(ia);
}
}}
if (!this.isSmarts && bs.cardinality$() != this.target.selectedAtomCount ) return true;
if (this.bsCheck != null ) {
if (firstAtomOnly) {
this.bsCheck.clearAll$();
for (var j=0; j < this.ac; j++) {
this.bsCheck.set$I(this.patternAtoms[j].getMatchingAtomIndex$());
}
if (this.bsCheck.cardinality$() != this.ac) return true;
} else {
if (bs.cardinality$() != this.ac) return true;
}}this.bsReturn.or$javajs_util_BS(bs);
if (this.getMaps) {
if (this.mapUnique) {
if (this.uniqueList == null ) this.uniqueList=Clazz_new_($I$(3,1));
for (var j=this.uniqueList.size$(); --j >= 0; ) if (this.uniqueList.get$I(j).equals$O(bs)) return true;

this.uniqueList.addLast$O(bs);
}var map=Clazz_array(Integer.TYPE, [nMatch]);
for (var j=0, nn=0; j < this.ac; j++) {
if (!firstAtomOnly && this.top.haveSelected && !this.patternAtoms[j].selected  ) continue;
map[nn++]=this.patternAtoms[j].getMatchingAtomIndex$();
}
this.vReturn.addLast$O(map);
return !this.exitFirstMatch;
}if (this.asVector) {
var isOK=true;
for (var j=this.vReturn.size$(); --j >= 0 && isOK ; ) isOK=!((this.vReturn.get$I(j)).equals$O(bs));

if (!isOK) return true;
this.vReturn.addLast$O(bs);
}if (this.isRingCheck) {
var bsRing=Clazz_new_($I$(1,1));
for (var k=atomNum * 3 + 2; --k > atomNum; ) bsRing.set$I(this.patternAtoms[(k <= atomNum * 2 ? atomNum * 2 - k + 1 : k - 1) % atomNum].getMatchingAtomIndex$());

this.target.ringSets.addLast$O(bsRing);
return true;
}if (this.exitFirstMatch) return false;
return (bs.cardinality$() != this.target.selectedAtomCount);
}, p$1);

Clazz_newMeth(C$, 'doCheckAtom$I',  function (j) {
return this.target.bsSelected.get$I(j) && !this.bsFound.get$I(j) ;
}, p$1);

Clazz_newMeth(C$, 'nextTargetAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_Node$I$I$Z$I',  function (patternAtom, jmolAtom, atomNum, iAtom, firstAtomOnly, c) {
var jmolBonds;
if (!this.isRingCheck && !this.isTopology ) {
if (patternAtom.subAtoms == null ) {
if (!p$1.checkPrimitiveAtom$org_jmol_smiles_SmilesAtom$I.apply(this, [patternAtom, iAtom])) return true;
} else if (patternAtom.isAND) {
for (var i=0; i < patternAtom.nSubAtoms; i++) if (!p$1.checkPrimitiveAtom$org_jmol_smiles_SmilesAtom$I.apply(this, [patternAtom.subAtoms[i], iAtom])) return true;

} else {
for (var i=0; i < patternAtom.nSubAtoms; i++) if (!p$1.nextTargetAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_Node$I$I$Z$I.apply(this, [patternAtom.subAtoms[i], jmolAtom, atomNum, iAtom, firstAtomOnly, c])) return false;

return true;
}}jmolBonds=jmolAtom.getEdges$();
for (var i=patternAtom.getBondCount$(); --i >= 0; ) {
var patternBond=patternAtom.getBond$I(i);
if (patternBond.getAtomIndex2$() != patternAtom.index) continue;
var atom1=patternBond.atom1;
var matchingAtom=atom1.getMatchingAtomIndex$();
switch (patternBond.order) {
case 96:
case 112:
if (!p$1.checkMatchBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge.apply(this, [patternAtom, atom1, patternBond, iAtom, matchingAtom, null])) return true;
break;
default:
var k=0;
var jmolBond=null;
for (; k < jmolBonds.length; k++) if ((jmolBond=jmolBonds[k]).isCovalent$() && (jmolBond.getAtomIndex1$() == matchingAtom || jmolBond.getAtomIndex2$() == matchingAtom ) ) break;

if (k == jmolBonds.length) return true;
if (!p$1.checkMatchBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge.apply(this, [patternAtom, atom1, patternBond, iAtom, matchingAtom, jmolBond])) return true;
}
}
patternAtom=this.patternAtoms[patternAtom.index];
patternAtom.setMatchingAtom$org_jmol_util_Node$I(this.target.nodes[iAtom], iAtom);
patternAtom.matchingComponent=c;
this.bsFound.set$I(iAtom);
if (!p$1.nextPatternAtom$I$I$Z$I.apply(this, [atomNum, iAtom, firstAtomOnly, c])) return false;
if (iAtom >= 0) p$1.clearBsFound$I.apply(this, [iAtom]);
return true;
}, p$1);

Clazz_newMeth(C$, 'checkPrimitiveAtom$org_jmol_smiles_SmilesAtom$I',  function (patternAtom, iTarget) {
if (patternAtom.nSubAtoms > 0) {
for (var i=0; i < patternAtom.nSubAtoms; i++) if (p$1.checkPrimitiveAtom$org_jmol_smiles_SmilesAtom$I.apply(this, [patternAtom.subAtoms[i], iTarget])) return true;

return false;
}var targetAtom=this.target.nodes[iTarget];
var foundAtom=patternAtom.not;
while (true){
if (patternAtom.iNested > 0) {
var o=this.getNested$I(patternAtom.iNested);
if (Clazz_instanceOf(o, "org.jmol.smiles.SmilesSearch")) {
var search=o;
if (patternAtom.isBioAtom) search.nestedBond=patternAtom.getBondTo$org_jmol_smiles_SmilesAtom(null);
o=this.subsearch$org_jmol_smiles_SmilesSearch$I(search, 1);
if (o == null ) o=Clazz_new_($I$(1,1));
if (!patternAtom.isBioAtom) this.setNested$I$O(patternAtom.iNested, o);
}foundAtom=(patternAtom.not != ((o).get$I(iTarget)) );
break;
}var na=targetAtom.getElementNumber$();
var n=patternAtom.elementNumber;
if (na >= 0 && n >= 0  && n != na  && !this.ignoreElement ) break;
if (patternAtom.isBioResidue) {
var a=targetAtom;
if (patternAtom.bioAtomName != null  && (patternAtom.isLeadAtom$() ? !a.isLeadAtom$() : !patternAtom.bioAtomName.equals$O(a.getAtomName$().toUpperCase$())) ) break;
if (patternAtom.residueName != null  && !patternAtom.residueName.equals$O(a.getGroup3$Z(false).toUpperCase$()) ) break;
if (patternAtom.residueNumber != -2147483648 && patternAtom.residueNumber != a.getResno$() ) break;
if (patternAtom.insCode != "\u0000" && patternAtom.insCode != a.getInsertionCode$() ) break;
if (patternAtom.residueChar != null  || patternAtom.elementNumber == -2 ) {
var atype=a.getBioSmilesType$();
var ptype=patternAtom.getBioSmilesType$();
var ok=true;
var isNucleic=false;
switch (ptype.$c()) {
case 0:
case 42:
ok=true;
break;
case 110:
ok=(atype == "r" || atype == "c" );
isNucleic=true;
break;
case 114:
case 99:
isNucleic=true;
default:
ok=(atype == ptype);
break;
}
if (!ok) break;
var s=a.getGroup1$C("\u0000").toUpperCase$();
var resChar=(patternAtom.residueChar == null  ? "*" : patternAtom.residueChar.charAt$I(0));
var isOK=(resChar == s.charAt$I(0));
switch (resChar.$c()) {
case 42:
isOK=true;
break;
case 78:
isOK=isNucleic ? (atype == "r" || atype == "c" ) : isOK;
break;
case 82:
isOK=isNucleic ? a.isPurine$() : isOK;
break;
case 89:
isOK=isNucleic ? a.isPyrimidine$() : isOK;
break;
}
if (!isOK) break;
}if (patternAtom.isBioAtom) {
if (patternAtom.notCrossLinked && a.getCrossLinkVector$javajs_util_Lst$Z$Z(null, true, true) ) break;
}} else {
if (patternAtom.atomNumber != -2147483648 && patternAtom.atomNumber != targetAtom.getAtomNumber$() ) break;
if (patternAtom.jmolIndex >= 0 && targetAtom.getIndex$() != patternAtom.jmolIndex ) break;
if (patternAtom.atomType != null  && !patternAtom.atomType.equals$O(targetAtom.getAtomType$()) ) break;
if ((n=patternAtom.getAtomicMass$()) != -2147483648 && (n >= 0 && n != (na=targetAtom.getIsotopeNumber$())  || n < 0 && na != 0  && -n != na  ) ) break;
if (!this.noAromatic && !patternAtom.aromaticAmbiguous && patternAtom.isAromatic != this.target.bsAromatic.get$I(iTarget)   ) break;
if ((n=patternAtom.getCharge$()) != -2147483648 && n != targetAtom.getFormalCharge$() ) break;
n=patternAtom.getCovalentHydrogenCount$() + patternAtom.explicitHydrogenCount;
if (n >= 0 && n != targetAtom.getTotalHydrogenCount$() ) break;
if ((n=patternAtom.implicitHydrogenCount) != -2147483648) {
na=targetAtom.getImplicitHydrogenCount$();
if (n == -1 ? na == 0 : n != na) break;
}if (patternAtom.degree > 0 && patternAtom.degree != targetAtom.getCovalentBondCount$() ) break;
if (patternAtom.nonhydrogenDegree > 0 && patternAtom.nonhydrogenDegree != targetAtom.getCovalentBondCount$() - targetAtom.getCovalentHydrogenCount$() ) break;
if (this.isSmarts && patternAtom.valence > 0  && patternAtom.valence != targetAtom.getTotalValence$() ) break;
if (patternAtom.connectivity > 0 && patternAtom.connectivity != targetAtom.getCovalentBondCountPlusMissingH$() ) break;
if (patternAtom.atomNumber != -2147483648 && patternAtom.atomNumber != targetAtom.getAtomNumber$() ) break;
if (patternAtom.jmolIndex >= 0 && targetAtom.getIndex$() != patternAtom.jmolIndex ) break;
if (patternAtom.atomType != null  && !patternAtom.atomType.equals$O(targetAtom.getAtomType$()) ) break;
if (!this.ignoreAtomClass || this.isSmarts ) {
if (!Double.isNaN$D(patternAtom.atomClass) && patternAtom.atomClass != targetAtom.getDoubleProperty$S("property_atomclass")  ) break;
}if (this.target.ringData != null ) {
if (patternAtom.ringSize >= -1) {
if (patternAtom.ringSize <= 0) {
if ((this.target.ringCounts[iTarget] == 0) != (patternAtom.ringSize == 0) ) break;
} else {
var rd=this.target.ringData[patternAtom.ringSize == 500 ? 5 : patternAtom.ringSize == 600 ? 6 : patternAtom.ringSize];
if (rd == null  || !rd.get$I(iTarget) ) break;
if (!this.noAromatic) if (patternAtom.ringSize == 500) {
if (!this.target.bsAromatic5.get$I(iTarget)) break;
} else if (patternAtom.ringSize == 600) {
if (!this.target.bsAromatic6.get$I(iTarget)) break;
}}}if (patternAtom.ringMembership >= -1) {
if (patternAtom.ringMembership == -1 ? this.target.ringCounts[iTarget] == 0 : this.target.ringCounts[iTarget] != patternAtom.ringMembership) break;
}if (patternAtom.ringConnectivity >= 0) {
n=this.target.ringConnections[iTarget];
if (patternAtom.ringConnectivity == -1 && n == 0  || patternAtom.ringConnectivity != -1 && n != patternAtom.ringConnectivity  ) break;
}}}foundAtom=!foundAtom;
break;
}
return foundAtom;
}, p$1);

Clazz_newMeth(C$, 'checkMatchBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge',  function (patternAtom, atom1, patternBond, iAtom, matchingAtom, bond) {
if (patternBond.bondsOr != null ) {
for (var ii=0; ii < patternBond.nBondsOr; ii++) if (p$1.checkMatchBond$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge.apply(this, [patternAtom, atom1, patternBond.bondsOr[ii], iAtom, matchingAtom, bond])) return true;

return false;
}if (!this.isRingCheck && !this.isTopology ) if (patternBond.nPrimitives == 0) {
if (!p$1.checkPrimitiveBond$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge.apply(this, [patternBond, iAtom, matchingAtom, bond])) return false;
} else {
for (var i=0; i < patternBond.nPrimitives; i++) {
var prim=patternBond.setPrimitive$I(i);
if (!p$1.checkPrimitiveBond$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge.apply(this, [prim, iAtom, matchingAtom, bond])) return false;
}
}patternBond.matchingBond=bond;
return true;
}, p$1);

Clazz_newMeth(C$, 'checkPrimitiveBond$org_jmol_smiles_SmilesBond$I$I$org_jmol_util_Edge',  function (patternBond, iAtom1, iAtom2, bond) {
var bondFound=false;
switch (patternBond.order) {
case 96:
return (patternBond.isNot != (this.target.nodes[iAtom2].getOffsetResidueAtom$S$I("\u0000", 1) == this.target.nodes[iAtom1].getOffsetResidueAtom$S$I("\u0000", 0)) );
case 112:
return (patternBond.isNot != this.target.nodes[iAtom1].isCrossLinked$org_jmol_util_Node(this.target.nodes[iAtom2]) );
}
var isAromatic1=(!this.noAromatic && this.target.bsAromatic.get$I(iAtom1) );
var isAromatic2=(!this.noAromatic && this.target.bsAromatic.get$I(iAtom2) );
var order=bond.getCovalentOrder$();
var patternOrder=patternBond.order;
if (isAromatic1 && isAromatic2 ) {
switch (patternOrder) {
case 17:
case 65:
bondFound=C$.isRingBond$javajs_util_Lst$javajs_util_BS$I$I(this.target.ringSets, null, iAtom1, iAtom2);
break;
case 1:
bondFound=!this.isSmarts || !C$.isRingBond$javajs_util_Lst$javajs_util_BS$I$I(this.target.ringSets, this.target.getBSAromaticRings$(), iAtom1, iAtom2) ;
break;
case 2:
bondFound=this.isNormalized || order == 81  || this.aromaticDouble && (order == 2 || order == 514 )  ;
break;
case 65537:
case 65538:
bondFound=!patternBond.isNot;
break;
case 81:
case -1:
bondFound=true;
break;
}
} else {
switch (patternOrder) {
case 17:
if (!this.noAromatic) break;
case 81:
case -1:
bondFound=true;
break;
case 1:
case 1025:
case 1041:
switch (order) {
case 1:
case 1025:
case 1041:
bondFound=true;
break;
}
break;
case 65537:
case 65538:
switch (order) {
case 1:
case 65537:
case 65538:
bondFound=!patternBond.isNot;
break;
}
break;
case 2:
case 3:
case 4:
bondFound=(order == patternOrder);
break;
case 65:
bondFound=C$.isRingBond$javajs_util_Lst$javajs_util_BS$I$I(this.target.ringSets, null, iAtom1, iAtom2);
break;
}
}return bondFound != patternBond.isNot ;
}, p$1);

Clazz_newMeth(C$, 'checkStereochemistry',  function () {
for (var i=0; i < this.measures.size$(); i++) if (!this.measures.get$I(i).check$()) return false;

if (this.stereo != null  && !this.stereo.checkStereoChemistry$org_jmol_smiles_SmilesSearch$org_jmol_smiles_VTemp(this, this.v) ) return false;
if (!this.haveBondStereochemistry) return true;
var lstAtrop=null;
var b=null;
for (var k=0; k < this.ac; k++) {
var sAtom1=this.patternAtoms[k];
var sAtom2=null;
var sAtomDirected1=null;
var sAtomDirected2=null;
var dir1=0;
var dir2=0;
var bondType=0;
var nBonds=sAtom1.getBondCount$();
var isAtropisomer=false;
var indexOrder=true;
for (var j=0; j < nBonds; j++) {
b=sAtom1.getBond$I(j);
var isAtom2=(b.atom2 === sAtom1 );
indexOrder=(b.atom1.index < b.atom2.index);
var type=b.getBondType$();
switch (type) {
case 65537:
case 65538:
if (!indexOrder) continue;
case 2:
if (isAtom2) continue;
sAtom2=b.atom2;
bondType=type;
isAtropisomer=(type != 2);
if (isAtropisomer) dir1=(b.isNot ? -1 : 1);
break;
case 1025:
case 1041:
sAtomDirected1=(isAtom2 ? b.atom1 : b.atom2);
dir1=(isAtom2 != (type == 1025)  ? 1 : -1);
break;
}
}
if (isAtropisomer) {
if (this.setAtropicity) {
if (lstAtrop == null ) lstAtrop=Clazz_new_($I$(3,1));
lstAtrop.addLast$O(b);
continue;
}var b1=sAtom1.getBond$I(b.atropType[0]);
if (b1 == null ) return false;
sAtomDirected1=b1.getOtherAtom$org_jmol_smiles_SmilesAtom(sAtom1);
b1=sAtom2.getBond$I(b.atropType[1]);
if (b1 == null ) return false;
sAtomDirected2=b1.getOtherAtom$org_jmol_smiles_SmilesAtom(sAtom2);
if ($I$(10).debugging) $I$(10).info$S("atropisomer check for atoms " + sAtomDirected1 + sAtom1 + " " + sAtom2 + sAtomDirected2 );
} else {
if (sAtom2 == null  || dir1 == 0 ) continue;
var a10=sAtom1;
var nCumulene=0;
while (sAtom2.getBondCount$() == 2 && sAtom2.getValence$() == 4 ){
++nCumulene;
var e2=sAtom2.getEdges$();
var e=e2[e2[0].getOtherNode$org_jmol_util_SimpleNode(sAtom2) === a10  ? 1 : 0];
a10=sAtom2;
sAtom2=e.getOtherNode$org_jmol_util_SimpleNode(sAtom2);
}
if (nCumulene % 2 == 1) continue;
nBonds=sAtom2.getBondCount$();
for (var j=0; j < nBonds && dir2 == 0 ; j++) {
b=sAtom2.getBond$I(j);
var type=b.getBondType$();
switch (type) {
case 1025:
case 1041:
var isAtom2=(b.atom2 === sAtom2 );
sAtomDirected2=(isAtom2 ? b.atom1 : b.atom2);
dir2=(isAtom2 != (type == 1025)  ? 1 : -1);
break;
}
}
if (dir2 == 0) continue;
}var dbAtom1=sAtom1.getMatchingAtom$();
var dbAtom2=sAtom2.getMatchingAtom$();
var dbAtom1a=sAtomDirected1.getMatchingAtom$();
var dbAtom2a=sAtomDirected2.getMatchingAtom$();
if (dbAtom1a == null  || dbAtom2a == null  ) return false;
if (this.haveSmilesTarget) C$.setTopoCoordinates$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I(dbAtom1, dbAtom2, dbAtom1a, dbAtom2a, bondType);
var d=$I$(12).setTorsionData$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$org_jmol_smiles_VTemp$Z(dbAtom1a, dbAtom1, dbAtom2, dbAtom2a, this.v, isAtropisomer);
if (isAtropisomer) {
d*=dir1 * (bondType == 65537 ? 1 : -1) * (indexOrder ? 1 : -1) * 1 * -1 ;
if ($I$(10).debugging) $I$(10,"info$S",["atrop dihedral " + new Double(d).toString() + " " + sAtom1 + " " + sAtom2 + " " + b ]);
if (d < 1 ) return false;
} else {
if (this.v.vTemp1.dot$javajs_util_T3d(this.v.vTemp2) * dir1 * dir2  < 0 ) return false;
}}
if (this.setAtropicity) {
this.atropKeys="";
for (var i=0; i < lstAtrop.size$(); i++) this.atropKeys+="," + p$1.getAtropIndex$org_jmol_smiles_SmilesBond.apply(this, [lstAtrop.get$I(i)]);

}return true;
}, p$1);

Clazz_newMeth(C$, 'getAtropIndex$org_jmol_smiles_SmilesBond',  function (b) {
var nodes=Clazz_array($I$(13), [4]);
var s="";
nodes[1]=b.atom1.getMatchingAtom$();
nodes[2]=b.atom2.getMatchingAtom$();
var b1=b.atom1.bonds;
var a;
for (var i=b.atom1.getBondCount$(); --i >= 0; ) {
if ((a=b1[i].getOtherNode$org_jmol_util_SimpleNode(b.atom1)) !== b.atom2 ) {
s+=(i + 1);
nodes[0]=a.getMatchingAtom$();
break;
}}
b1=b.atom2.bonds;
for (var i=0; i <= b.atom2.getBondCount$(); i++) {
if ((a=b1[i].getOtherNode$org_jmol_util_SimpleNode(b.atom2)) !== b.atom1 ) {
s+=(i + 1);
nodes[3]=a.getMatchingAtom$();
break;
}}
if (s.equals$O("22")) s="";
s=($I$(14).getAtropicStereoFlag$org_jmol_util_NodeA(nodes) == 1 ? "" : "^") + s;
return (s + "   ").substring$I$I(0, 3);
}, p$1);

Clazz_newMeth(C$, 'setTopoCoordinates$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I',  function (dbAtom1, dbAtom2, dbAtom1a, dbAtom2a, bondType) {
dbAtom1.set$D$D$D(-1, 0, 0);
dbAtom2.set$D$D$D(1, 0, 0);
if (bondType != 2) {
var bond=dbAtom1.getBondTo$org_jmol_smiles_SmilesAtom(dbAtom2);
var ok1=dbAtom1.getBondedAtomIndex$I(bond.atropType[0]) == dbAtom1a.index;
var ok2=dbAtom2.getBondedAtomIndex$I(bond.atropType[1]) == dbAtom2a.index;
var dir=(bond.order == 65537 ? 1 : -1) * (ok1 == ok2  ? 1 : -1);
dbAtom1a.set$D$D$D(-1, 1, 0);
dbAtom2a.set$D$D$D(1, 1, dir / 2.0 * 1 * -1);
return;
}var nBonds=0;
var dir1=0;
var bonds=dbAtom1.getEdges$();
for (var k=bonds.length; --k >= 0; ) {
var bond=bonds[k];
if (bond.order == 2) continue;
var atom=bond.getOtherNode$org_jmol_util_SimpleNode(dbAtom1);
(atom).set$D$D$D(-1, (nBonds++ == 0) ? -1 : 1, 0);
var mode=(bond.getAtomIndex2$() == dbAtom1.getIndex$() ? nBonds : -nBonds);
switch (bond.order) {
case 1025:
dir1=mode;
break;
case 1041:
dir1=-mode;
}
}
var dir2=0;
nBonds=0;
var atoms=Clazz_array($I$(13), [2]);
bonds=dbAtom2.getEdges$();
for (var k=bonds.length; --k >= 0; ) {
var bond=bonds[k];
if (bond.order == 2) continue;
var atom=bond.getOtherNode$org_jmol_util_SimpleNode(dbAtom2);
atoms[nBonds]=atom;
(atom).set$D$D$D(1, (nBonds++ == 0) ? 1 : -1, 0);
var mode=(bond.getAtomIndex2$() == dbAtom2.getIndex$() ? nBonds : -nBonds);
switch (bond.order) {
case 1025:
dir2=mode;
break;
case 1041:
dir2=-mode;
}
}
if ((dir1 * dir2 > 0) == (Math.abs(dir1) % 2 == Math.abs(dir2) % 2) ) {
var y=(atoms[0]).y;
(atoms[0]).y=(atoms[1]).y;
(atoms[1]).y=y;
}}, 1);

Clazz_newMeth(C$, 'createTopoMap$javajs_util_BS',  function (bsAro) {
var isForMF=(bsAro == null );
var nAtomsMissing=(this.autoAddImplicitH ? this.getMissingHydrogenCount$() : 0);
var totalAtoms=this.ac + nAtomsMissing;
var atoms=Clazz_array($I$(4), [totalAtoms]);
this.target.nodes=atoms;
for (var i=0, ptAtom=0; i < this.ac; i++, ptAtom++) {
var sAtom=this.patternAtoms[i];
var n=sAtom.explicitHydrogenCount;
if (n < 0 || !this.autoAddImplicitH ) n=0;
var atom=atoms[ptAtom]=Clazz_new_($I$(4,1)).setTopoAtom$I$I$S$I$I(sAtom.component, ptAtom, sAtom.symbol, sAtom.getCharge$(), i);
atom.implicitHydrogenCount=n;
if (isForMF) continue;
atom.mapIndex=i;
atom.stereo=sAtom.stereo;
atom.setAtomicMass$I(sAtom.getAtomicMass$());
atom.bioAtomName=sAtom.bioAtomName;
atom.residueName=sAtom.residueName;
atom.residueChar=sAtom.residueChar;
atom.residueNumber=sAtom.residueNumber;
atom.atomNumber=sAtom.residueNumber;
atom.insCode=sAtom.insCode;
atom.hasDoubleBond=sAtom.hasDoubleBond;
atom.isAromatic=sAtom.isAromatic;
atom.atomClass=sAtom.atomClass;
atom.explicitHydrogenCount=0;
atom.isBioAtom=sAtom.isBioAtom;
atom.bioType=sAtom.bioType;
atom.isLeadAtom=sAtom.isLeadAtom;
if (!isForMF && sAtom.isAromatic ) bsAro.set$I(ptAtom);
sAtom.setMatchingAtom$org_jmol_util_Node$I(null, ptAtom);
var bonds=Clazz_array($I$(15), [sAtom.getBondCount$() + n]);
atom.setBonds$org_jmol_smiles_SmilesBondA(bonds);
while (--n >= 0){
var atomH=atoms[++ptAtom]=Clazz_new_($I$(4,1)).setTopoAtom$I$I$S$I$I(atom.component, ptAtom, "H", 0, -1);
atomH.mapIndex=-i - 1;
atomH.setBonds$org_jmol_smiles_SmilesBondA(Clazz_array($I$(15), [1]));
var b=Clazz_new_($I$(15,1).c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[atom, atomH, 1, false]);
if ($I$(10).debugging) $I$(10).info$S("" + b);
}
}
if (isForMF) return;
for (var i=0; i < this.ac; i++) {
var sAtom=this.patternAtoms[i];
var i1=sAtom.getMatchingAtomIndex$();
var atom1=atoms[i1];
var n=sAtom.getBondCount$();
for (var j=0; j < n; j++) {
var sBond=sAtom.getBond$I(j);
var firstAtom=(sBond.atom1 === sAtom );
if (firstAtom) {
var order=1;
switch (sBond.order) {
case 1:
case 2:
case 3:
case 4:
case 1025:
case 1041:
case 65537:
case 65538:
case 112:
case 96:
order=sBond.order;
break;
case 17:
order=514;
break;
}
var atom2=atoms[sBond.atom2.getMatchingAtomIndex$()];
var b=Clazz_new_($I$(15,1).c$$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$I$Z,[atom1, atom2, order, false]);
b.isConnection=sBond.isConnection;
b.atropType=sBond.atropType;
b.isNot=sBond.isNot;
--atom2.bondCount;
if ($I$(10).debugging) $I$(10).info$S("" + b);
} else {
var atom2=atoms[sBond.atom1.getMatchingAtomIndex$()];
var b=atom2.getBondTo$org_jmol_smiles_SmilesAtom(atom1);
atom1.addBond$org_jmol_smiles_SmilesBond(b);
}}
}
for (var i=0; i < totalAtoms; i++) {
var a=atoms[i];
var bonds=a.bonds;
if (bonds.length < 2 || bonds[0].isFromPreviousTo$org_jmol_smiles_SmilesAtom(a) ) continue;
for (var k=bonds.length; --k >= 1; ) if (bonds[k].isFromPreviousTo$org_jmol_smiles_SmilesAtom(a)) {
var b=bonds[k];
bonds[k]=bonds[0];
bonds[0]=b;
break;
}
}
if (!this.ignoreStereochemistry) for (var i=this.ac; --i >= 0; ) {
var sAtom=this.patternAtoms[i];
if (sAtom.stereo != null ) sAtom.stereo.fixStereo$org_jmol_smiles_SmilesAtom(sAtom);
}
});

Clazz_newMeth(C$, 'normalizeAromaticity$javajs_util_BS',  function (bsAromatic) {
var atoms=this.patternAtoms;
var ss=Clazz_new_(C$);
ss.noAromatic=this.noAromatic;
ss.setFlags$I(this.flags);
ss.target.nodes=atoms;
ss.target.ac=atoms.length;
ss.target.bsSelected=$I$(11).newBitSet2$I$I(0, atoms.length);
var vRings=$I$(7).createArrayOfArrayList$I(4);
ss.setRingData$javajs_util_BS$javajs_util_LstA$Z(null, vRings, true);
bsAromatic.or$javajs_util_BS(ss.target.bsAromatic);
if (!bsAromatic.isEmpty$()) {
var lst=vRings[3];
if (lst != null ) for (var i=lst.size$(); --i >= 0; ) {
var bs=lst.get$I(i);
for (var j=bs.nextSetBit$I(0); j >= 0; j=bs.nextSetBit$I(j + 1)) {
var a=atoms[j];
if (a.isAromatic || a.elementNumber == -2  || a.elementNumber == 0 ) continue;
a.setSymbol$S(a.symbol.toLowerCase$());
}
}
}});

Clazz_newMeth(C$, 'getSelections$',  function () {
var ht=this.top.htNested;
if (ht == null  || this.target.nodes.length == 0 ) return;
var htNew=Clazz_new_($I$(8,1));
for (var entry, $entry = ht.entrySet$().iterator$(); $entry.hasNext$()&&((entry=($entry.next$())),1);) {
var key=entry.getValue$().toString();
if (key.startsWith$S("select")) {
var bs=(htNew.containsKey$O(key) ? htNew.get$O(key) : this.target.nodes[0].findAtomsLike$S(key.substring$I(6)));
if (bs == null ) bs=Clazz_new_($I$(1,1));
htNew.put$O$O(key, bs);
entry.setValue$O(bs);
}}
});

Clazz_newMeth(C$, 'findImplicitHydrogen$org_jmol_util_Node',  function (atom) {
var edges=atom.getEdges$();
for (var i=edges.length; --i >= 0; ) {
var k=atom.getBondedAtomIndex$I(i);
if (this.target.nodes[k].getElementNumber$() == 1 && !this.bsFound.get$I(k) ) return this.target.nodes[k];
}
return null;
});

Clazz_newMeth(C$, 'toString',  function () {
if (this.pattern0 != null ) return this.pattern0;
if (this.targetSet) {
return "molecular formula: " + this.target.getMolecularFormula$Z$DA$Z(true, null, false);
}var sb=Clazz_new_($I$(16,1)).append$S(this.pattern);
sb.append$S("\nmolecular formula: " + this.getMolecularFormula$Z$DA$Z(true, null, false));
return sb.toString();
});

Clazz_newMeth(C$, 'equals$O',  function (ss) {
return (Clazz_instanceOf(ss, "org.jmol.smiles.SmilesSearch")) && (this.pattern0 == null  ? (ss).pattern0 == null  : this.pattern0.equals$O((ss).pattern0)) ;
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.SmilesSearch, "SmilesTarget", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'org.jmol.util.JmolMolecule');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.bsAromatic=Clazz_new_($I$(1,1));
this.bsAromatic5=Clazz_new_($I$(1,1));
this.bsAromatic6=Clazz_new_($I$(1,1));
this.hasRingData=false;
this.flags=-1;
},1);

C$.$fields$=[['Z',['hasRingData'],'I',['selectedAtomCount','ringCount','ringDataMax','flags'],'O',['bsSelected','javajs.util.BS','ringSets','javajs.util.Lst','ringData','javajs.util.BS[]','ringCounts','int[]','+ringConnections','bsAromatic','javajs.util.BS','+bsAromatic5','+bsAromatic6','+bsAromaticRings']]]

Clazz_newMeth(C$, 'hasRingData$I',  function (flags) {
if (flags != this.flags) {
this.flags=flags;
this.hasRingData=false;
}var ret=this.hasRingData;
this.hasRingData=true;
return ret;
});

Clazz_newMeth(C$, 'setAtoms$org_jmol_util_NodeA$I$javajs_util_BS',  function (atoms, ac, bs) {
this.hasRingData=false;
this.nodes=atoms;
this.ac=ac;
this.selectedAtomCount=(bs == null  ? ac : bs.cardinality$());
if (bs == null ) {
bs=$I$(1).newN$I(ac);
bs.setBits$I$I(0, ac);
}this.bsSelected=bs;
});

Clazz_newMeth(C$, 'checkAromaticDefined$',  function () {
$I$(2).checkAromaticDefined$org_jmol_util_NodeA$javajs_util_BS$javajs_util_BS(this.nodes, this.bsSelected, this.bsAromatic);
});

Clazz_newMeth(C$, 'getBSAromaticRings$',  function () {
if (this.bsAromaticRings == null ) {
this.bsAromaticRings=Clazz_new_($I$(1,1));
if (this.ringSets != null  && this.bsAromatic != null  ) {
for (var i=this.ringSets.size$(); --i >= 0; ) {
var bsRing=this.ringSets.get$I(i).clone$();
bsRing.andNot$javajs_util_BS(this.bsAromatic);
if (bsRing.isEmpty$()) this.bsAromaticRings.set$I(i);
}
}}return this.bsAromaticRings;
});

Clazz_newMeth(C$, 'setRingData$I$Z$I',  function (strictness, needRingData, ringDataMax) {
if (ringDataMax < 0) ringDataMax=8;
if (strictness > 0 && ringDataMax < 6 ) ringDataMax=6;
if (needRingData) {
this.ringCounts=Clazz_array(Integer.TYPE, [this.ac]);
this.ringConnections=Clazz_array(Integer.TYPE, [this.ac]);
this.ringData=Clazz_array($I$(1), [ringDataMax + 1]);
}this.ringSets=Clazz_new_($I$(3,1));
return this.ringDataMax=ringDataMax;
});

Clazz_newMeth(C$, 'finalizeAromatic$javajs_util_Lst',  function (lstAromatic) {
this.bsAromatic5.clearAll$();
this.bsAromatic6.clearAll$();
for (var i=lstAromatic.size$(); --i >= 0; ) {
var bs=lstAromatic.get$I(i);
bs.and$javajs_util_BS(this.bsAromatic);
switch (bs.cardinality$()) {
case 5:
this.bsAromatic5.or$javajs_util_BS(bs);
break;
case 6:
this.bsAromatic6.or$javajs_util_BS(bs);
break;
}
}
});

Clazz_newMeth(C$, 'finalizeRingData$',  function () {
for (var i=this.bsSelected.nextSetBit$I(0); i >= 0; i=this.bsSelected.nextSetBit$I(i + 1)) {
var atom=this.nodes[i];
var nb=atom.getBondCount$();
for (var k=nb; --k >= 0; ) {
if (this.ringCounts[atom.getBondedAtomIndex$I(k)] > 0) ++this.ringConnections[i];
}
}
});

Clazz_newMeth(C$, 'hasDoubleBonds$',  function () {
for (var i=0; i < this.nodes.length; i++) if (this.bsSelected == null  || this.bsSelected.get$I(i) ) {
var n=this.nodes[i];
if (n.getElementNumber$() == 1) {
continue;
}var nb=n.getBondCount$();
var edges=n.getEdges$();
for (var j=0; j < nb; j++) {
if (edges[j].isCovalent$() && edges[j].getBondType$() != 1 ) return true;
}
}
return false;
});

Clazz_newMeth(C$);
})()
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-12 16:15:13 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),p$1={},I$=[[0,'java.util.Arrays','org.jmol.smiles.PolyhedronStereoSorter','javajs.util.MeasureD','org.jmol.util.Logger','org.jmol.util.Escape','org.jmol.util.Node','org.jmol.smiles.SmilesAtom','javajs.util.V3d','javajs.util.PT','org.jmol.smiles.SmilesParser','javajs.util.AU']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SmilesStereo");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.chiralClass=-2147483648;
this.chiralOrder=-2147483648;
},1);

C$.$fields$=[['Z',['isNot'],'I',['chiralClass','chiralOrder','atomCount'],'S',['details'],'O',['search','org.jmol.smiles.SmilesSearch','targetAtoms','org.jmol.util.Node[]','v','org.jmol.smiles.VTemp','polyhedralOrders','int[][]','sorter','org.jmol.smiles.PolyhedronStereoSorter']]
,['O',['PERM_TB','int[]','+PERM_OCT','+PERM_SS']]]

Clazz_newMeth(C$, 'getChiralityClass$S',  function (xx) {
return (("0;PH;AL;TP;TH;TB;OH;SP;TS;SS;".indexOf$S(xx) + 1)/3|0);
}, 1);

Clazz_newMeth(C$, 'newStereo$org_jmol_smiles_SmilesSearch',  function (search) {
var stereo=Clazz_new_(C$.c$$I$I$I$S$S,[0, 0, 0, null, null]);
stereo.search=search;
return stereo;
}, 1);

Clazz_newMeth(C$, 'c$$I$I$I$S$S',  function (chiralClass, chiralOrder, atomCount, details, directives) {
;C$.$init$.apply(this);
this.chiralClass=chiralClass;
this.chiralOrder=chiralOrder;
this.atomCount=atomCount;
this.details=details;
if (chiralClass == 1) p$1.getPolyhedralOrders.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'getChiralClass$org_jmol_smiles_SmilesAtom',  function (sAtom) {
if (this.chiralClass == 0) p$1.setChiralClass$org_jmol_smiles_SmilesAtom.apply(this, [sAtom]);
return this.chiralClass;
});

Clazz_newMeth(C$, 'setChiralClass$org_jmol_smiles_SmilesAtom',  function (sAtom) {
var nBonds=Math.max(sAtom.explicitHydrogenCount, 0) + sAtom.getBondCount$();
if (this.chiralClass == 0) {
switch (nBonds) {
case 2:
this.chiralClass=2;
break;
case 3:
this.chiralClass=3;
break;
case 4:
case 5:
case 6:
this.chiralClass=nBonds;
break;
}
}return nBonds;
}, p$1);

Clazz_newMeth(C$, 'fixStereo$org_jmol_smiles_SmilesAtom',  function (sAtom) {
var nBonds=p$1.setChiralClass$org_jmol_smiles_SmilesAtom.apply(this, [sAtom]);
var nH=Math.max(sAtom.explicitHydrogenCount, 0);
if (nH <= 1) switch (this.chiralClass) {
case 2:
if (nBonds != 2) sAtom.stereo=null;
break;
case 3:
case 8:
if (nBonds != 3) sAtom.stereo=null;
break;
case 7:
case 4:
if (nBonds != 4) sAtom.stereo=null;
break;
case 9:
case 6:
case 5:
if (nBonds != (this.chiralClass == 9 ? 4 : this.chiralClass) || !p$1.normalizeClass$org_jmol_smiles_SmilesAtom.apply(this, [sAtom]) ) sAtom.stereo=null;
break;
case 1:
if (nBonds != 0 && nBonds != this.atomCount ) sAtom.stereo=null;
break;
default:
sAtom.stereo=null;
}
if (sAtom.stereo == null ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Incorrect number of bonds for stereochemistry descriptor"]);
});

Clazz_newMeth(C$, 'normalizeClass$org_jmol_smiles_SmilesAtom',  function (atom) {
try {
var bonds=atom.bonds;
if (this.chiralOrder < 3) return true;
var pt=(this.chiralOrder - 1) * 3;
var perm;
var ilast;
switch (this.chiralClass) {
case 9:
perm=C$.PERM_SS;
ilast=3;
break;
case 5:
perm=C$.PERM_TB;
ilast=4;
break;
case 6:
perm=C$.PERM_OCT;
ilast=5;
break;
default:
return true;
}
if (this.chiralOrder > perm.length) return false;
var a=perm[pt];
var z=perm[pt + 2];
var p=Math.abs(perm[pt + 1]);
var isAtAt=(perm[pt + 1] < 0);
var b;
if (a != 0) {
b=bonds[a];
for (var i=a; i > 0; --i) bonds[i]=bonds[i - 1];

bonds[0]=b;
}if (z != ilast) {
b=bonds[z];
for (var i=z; i < ilast; i++) bonds[i]=bonds[i + 1];

bonds[ilast]=b;
}switch (p) {
case 1:
break;
default:
b=bonds[p + 1];
bonds[p + 1]=bonds[p];
bonds[p]=b;
}
this.chiralOrder=(isAtAt ? 2 : 1);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
return false;
} else {
throw e;
}
}
return true;
}, p$1);

Clazz_newMeth(C$, 'setTopoCoordinates$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$Z',  function (sAtom0, pAtom, sAtom2, cAtoms, isNot) {
var chiralOrder=(sAtom0.stereo == null  ? 0 : sAtom0.stereo.chiralOrder);
var chClass=(sAtom0.stereo == null  ? 1 : sAtom0.stereo.chiralClass);
sAtom0.set$D$D$D(0, 0, 0);
var map;
if (this.targetAtoms == null ) {
map=Clazz_array(Integer.TYPE, -1, [0, 1, 2, 3]);
} else {
sAtom0=this.targetAtoms[pAtom.getMatchingAtomIndex$()];
sAtom0.set$D$D$D(0, 0, 0);
var a2=(chClass == 2 ? this.targetAtoms[sAtom2.getMatchingAtomIndex$()] : null);
map=p$1.getMappedTopoAtoms$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$IA.apply(this, [sAtom0, a2, cAtoms, chiralOrder == 0 ? Clazz_array(Integer.TYPE, [cAtoms.length]) : null]);
}var pt;
switch (chClass) {
case 1:
sAtom0.set$D$D$D(0, 0, 0.2);
var a=6.283185307179586 / cAtoms.length;
for (var i=cAtoms.length; --i >= 0; ) {
cAtoms[map[i]].set$D$D$D((Math.cos(i * a)), Math.sin(i * a), isNot ? 1 : -1);
}
break;
case 2:
case 4:
if (chiralOrder == 2) {
pt=map[0];
map[0]=map[1];
map[1]=pt;
}cAtoms[map[0]].set$D$D$D(0, 0, 1);
cAtoms[map[1]].set$D$D$D(1, 0, -1);
cAtoms[map[2]].set$D$D$D(0, 1, -1);
cAtoms[map[3]].set$D$D$D(-1, -1, -1);
break;
case 7:
switch (chiralOrder) {
case 1:
cAtoms[map[0]].set$D$D$D(1, 0, 0);
cAtoms[map[1]].set$D$D$D(0, 1, 0);
cAtoms[map[2]].set$D$D$D(-1, 0, 0);
cAtoms[map[3]].set$D$D$D(0, -1, 0);
break;
case 2:
cAtoms[map[0]].set$D$D$D(1, 0, 0);
cAtoms[map[1]].set$D$D$D(-1, 0, 0);
cAtoms[map[2]].set$D$D$D(0, 1, 0);
cAtoms[map[3]].set$D$D$D(0, -1, 0);
break;
case 3:
cAtoms[map[0]].set$D$D$D(1, 0, 0);
cAtoms[map[1]].set$D$D$D(0, 1, 0);
cAtoms[map[2]].set$D$D$D(0, -1, 0);
cAtoms[map[3]].set$D$D$D(-1, 0, 0);
break;
}
break;
case 8:
switch (chiralOrder) {
case 1:
break;
case 2:
pt=map[2];
map[2]=map[1];
map[1]=pt;
break;
case 3:
pt=map[0];
map[0]=map[1];
map[1]=pt;
break;
}
cAtoms[map[0]].set$D$D$D(0, 0, -1);
cAtoms[map[1]].set$D$D$D(0, 1, 0);
cAtoms[map[2]].set$D$D$D(0, 0, 1);
break;
case 9:
if (chiralOrder == 2) {
pt=map[0];
map[0]=map[3];
map[3]=pt;
}cAtoms[map[0]].set$D$D$D(0, 0, 1);
cAtoms[map[1]].set$D$D$D(0, 1, 0);
cAtoms[map[1]].set$D$D$D(1, 1, 0);
cAtoms[map[2]].set$D$D$D(0, 0, -1);
break;
case 5:
case 6:
var n=map.length;
if (chiralOrder == 2) {
pt=map[0];
map[0]=map[n - 1];
map[n - 1]=pt;
}cAtoms[map[0]].set$D$D$D(0, 0, 1);
cAtoms[map[n - 1]].set$D$D$D(0, 0, -1);
cAtoms[map[1]].set$D$D$D(1, 0, 0);
cAtoms[map[2]].set$D$D$D(0, 1, 0);
cAtoms[map[3]].set$D$D$D(-1, 0, 0);
if (n == 6) cAtoms[map[4]].set$D$D$D(0, -1, 0);
break;
default:
return false;
}
return true;
});

Clazz_newMeth(C$, 'getMappedTopoAtoms$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$IA',  function (atom, a2, cAtoms, map) {
if (map == null ) map=Clazz_array(Integer.TYPE, [cAtoms[4] == null  ? 4 : cAtoms[5] == null  ? 5 : 6]);
for (var i=0; i < map.length; i++) {
map[i]=(cAtoms[i] == null  ? 10004 + i * 10000 : cAtoms[i].getIndex$());
}
var bonds=atom.bonds;
var b2=(a2 == null  ? null : a2.getEdges$());
for (var i=0; i < map.length; i++) {
var c=cAtoms[i];
if (!C$.getTopoMapPt$IA$I$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBondA$I(map, i, atom, c, bonds, 10000)) C$.getTopoMapPt$IA$I$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBondA$I(map, i, a2, c, b2, 30000);
}
$I$(1).sort$IA(map);
for (var i=0; i < map.length; i++) {
map[i]=map[i] % 10;
}
return map;
}, p$1);

Clazz_newMeth(C$, 'getTopoMapPt$IA$I$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesBondA$I',  function (map, i, atom, cAtom, bonds, n000) {
if (cAtom.index == -2147483648) {
map[i]=(bonds[0].isFromPreviousTo$org_jmol_smiles_SmilesAtom(atom) ? 100 : 0) + n000 + i ;
return true;
}var n=bonds.length;
for (var k=0; k < n; k++) {
var bAtom=bonds[k].getOtherNode$org_jmol_util_SimpleNode(atom);
if (bAtom === cAtom ) {
map[i]=(k + 1) * 10 + n000 + i;
return true;
}}
return false;
}, 1);

Clazz_newMeth(C$, 'getJmolAtom$I',  function (i) {
return (i < 0 || i >= this.targetAtoms.length  ? null : this.targetAtoms[i]);
}, p$1);

Clazz_newMeth(C$, 'sortPolyBondsByStereo$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$javajs_util_T3d$org_jmol_util_SimpleEdgeA$javajs_util_V3d',  function (atom, ref, center, bonds, vTemp) {
if (bonds.length < 2 || !(Clazz_instanceOf(atom, "javajs.util.T3d")) ) return;
var checkAlign=(ref != null );
ref=bonds[0].getOtherNode$org_jmol_util_SimpleNode(atom);
var aTemp=Clazz_array(java.lang.Object, [bonds.length, 0]);
if (this.sorter == null ) this.sorter=Clazz_new_($I$(2,1));
vTemp.sub2$javajs_util_T3d$javajs_util_T3d(ref, center);
this.sorter.setRef$javajs_util_V3d(vTemp);
var nb=bonds.length;
var f0=0;
for (var i=nb; --i >= 0; ) {
var a=bonds[i].getOtherNode$org_jmol_util_SimpleNode(atom);
var f=f0 + (a === ref  ? 0 : checkAlign && this.sorter.isAligned$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(a, center, ref)  ? -999 : $I$(3).computeTorsion$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$Z(ref, atom, center, a, true));
aTemp[i]=Clazz_array(java.lang.Object, -1, [bonds[i], Double.valueOf$D(f), a]);
}
$I$(1).sort$OA$java_util_Comparator(aTemp, this.sorter);
if ($I$(4).debugging) $I$(4,"info$S",[$I$(5).e$O(aTemp)]);
for (var i=bonds.length; --i >= 0; ) bonds[i]=aTemp[i][0];

});

Clazz_newMeth(C$, 'checkStereoChemistry$org_jmol_smiles_SmilesSearch$org_jmol_smiles_VTemp',  function (search, v) {
this.v=v;
this.search=search;
this.targetAtoms=search.target.nodes;
var haveTopo=search.haveSmilesTarget;
var invertStereochemistry=search.invertStereochemistry;
if ($I$(4).debugging) $I$(4).debug$S("checking stereochemistry...");
for (var i=0; i < search.ac; i++) {
var pAtom=search.patternAtoms[i];
if (pAtom.stereo == null  && search.polyhedronStereo == null  ) continue;
var isNot=(pAtom.not != invertStereochemistry );
switch (this.checkStereoForAtom$org_jmol_smiles_SmilesAtom$Z$Z(pAtom, isNot, haveTopo)) {
case 0:
continue;
case 1:
return true;
case -1:
return false;
}
}
return true;
});

Clazz_newMeth(C$, 'checkStereoForAtom$org_jmol_smiles_SmilesAtom$Z$Z',  function (pAtom, isNot, haveTopo) {
var atom1=null;
var atom2=null;
var atom3=null;
var atom4=null;
var atom5=null;
var atom6=null;
var sAtom0=null;
var jn;
var atom0=pAtom.getMatchingAtom$();
if (haveTopo) sAtom0=atom0;
var nH=Math.max(pAtom.explicitHydrogenCount, 0);
var order=(pAtom.stereo == null  ? 0 : pAtom.stereo.chiralOrder);
var chiralClass=(pAtom.stereo == null  ? 1 : pAtom.stereo.chiralClass);
if (haveTopo && this.chiralOrder != 0  && sAtom0.getChiralClass$() != chiralClass ) return -1;
if ($I$(4).debugging) $I$(4).debug$S("...type " + chiralClass + " for pattern atom \n " + pAtom + "\n " + atom0 );
switch (chiralClass) {
case 1:
if (pAtom.bondCount == 0) {
this.search.polyhedronStereo=pAtom.stereo;
return 0;
}if (this.chiralOrder == 0) {
var atoms12N=Clazz_array($I$(6), [pAtom.bondCount]);
for (var i=0; i < atoms12N.length; i++) atoms12N[i]=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(i)]);

return (haveTopo && !this.setTopoCoordinates$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$Z(sAtom0, pAtom, null, atoms12N, this.search.polyhedronStereo.isNot ? !isNot : isNot)  || !p$1.checkPolyHedralWinding$org_jmol_util_Node$org_jmol_util_NodeA.apply(this, [pAtom.getMatchingAtom$(), atoms12N])  ? -1 : 0);
}if (nH > 1) return 0;
if (pAtom.stereo.isNot) isNot=!isNot;
if (haveTopo) {
return 0;
}var bonds=pAtom.bonds;
var jHpt=-1;
if (nH == 1) {
jHpt=(pAtom.isFirst ? 0 : 1);
if (pAtom.getBondCount$() != 3) return -1;
this.v.vA.set$D$D$D(0, 0, 0);
for (var j=0; j < 3; j++) this.v.vA.add$javajs_util_T3d(bonds[j].getOtherAtom$org_jmol_smiles_SmilesAtom(sAtom0).getMatchingAtom$());

this.v.vA.scale$D(0.3333);
this.v.vA.sub2$javajs_util_T3d$javajs_util_T3d(atom0, this.v.vA);
this.v.vA.add$javajs_util_T3d(atom0);
}var po=pAtom.stereo.polyhedralOrders;
var pt;
for (var j=po.length; --j >= 0; ) {
var orders=po[j];
if (orders == null  || orders.length < 2 ) continue;
pt=(j > jHpt ? j - nH : j);
var ta1=(j == jHpt ? this.v.vA : bonds[pt].getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom).getMatchingAtom$());
var flast=(isNot ? 1.7976931348623157E308 : 0);
var ta2=null;
for (var k=0; k < orders.length; k++) {
pt=orders[k];
var ta3;
if (pt == jHpt) {
ta3=this.v.vA;
} else {
if (pt > jHpt) --pt;
ta3=bonds[pt].getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom).getMatchingAtom$();
}if (k == 0) {
ta2=ta3;
continue;
}var f=$I$(3).computeTorsion$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$Z(ta3, ta1, atom0, ta2, true);
if (Double.isNaN$D(f)) f=180;
if (orders.length == 2) return ((f < 0 ) != isNot  ? 1 : -1);
if (f < 0 ) f+=360;
if ((f < flast ) != isNot ) return -1;
flast=f;
}
}
return 0;
case 2:
jn=this.getAlleneAtoms$Z$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom(haveTopo, sAtom0, pAtom, null);
if (jn == null ) return 0;
if (jn.length == 0) return -1;
if (!C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(isNot, atom0, chiralClass, order, jn[0], jn[1], jn[2], jn[3], null, null, this.v)) return -1;
return 0;
case 8:
case 9:
case 3:
case 4:
case 7:
case 5:
case 6:
atom1=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(0)]);
switch (nH) {
case 0:
atom2=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(1)]);
break;
case 1:
atom2=this.search.findImplicitHydrogen$org_jmol_util_Node(pAtom.getMatchingAtom$());
if (pAtom.isFirst) {
var a=atom2;
atom2=atom1;
atom1=a;
}break;
default:
return 0;
}
atom3=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(2 - nH)]);
atom4=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(3 - nH)]);
atom5=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(4 - nH)]);
atom6=p$1.getJmolAtom$I.apply(this, [pAtom.getMatchingBondedAtom$I(5 - nH)]);
if (haveTopo && !this.setTopoCoordinates$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$Z(sAtom0, pAtom, null, Clazz_array($I$(6), -1, [atom1, atom2, atom3, atom4, atom5, atom6]), false) ) return -1;
if (!C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(isNot, atom0, chiralClass, order, atom1, atom2, atom3, atom4, atom5, atom6, this.v)) return -1;
return 0;
}
return 0;
});

Clazz_newMeth(C$, 'checkPolyHedralWinding$org_jmol_util_Node$org_jmol_util_NodeA',  function (a0, a) {
for (var i=0; i < a.length - 2; i++) if (C$.getHandedness$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(a[i], a[i + 1], a[i + 2], a0, this.v) != 1) return false;

return true;
}, p$1);

Clazz_newMeth(C$, 'getAlleneAtoms$Z$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom',  function (haveTopo, sAtom0, pAtom, pAtom1) {
if (pAtom1 == null ) pAtom1=pAtom.getBond$I(0).getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom);
var pAtom2=pAtom.getBond$I(1).getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom);
if (pAtom2 === pAtom1 ) pAtom2=pAtom.getBond$I(0).getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom);
if (pAtom1 == null  || pAtom2 == null  ) return null;
var pAtom1a=pAtom;
var pAtom2a=pAtom;
while (pAtom1.getBondCount$() == 2 && pAtom2.getBondCount$() == 2  && pAtom1.getValence$() == 4  && pAtom2.getValence$() == 4 ){
var b=pAtom1.getBondNotTo$org_jmol_smiles_SmilesAtom$Z(pAtom1a, true);
pAtom1a=pAtom1;
pAtom1=b.getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom1);
b=pAtom2.getBondNotTo$org_jmol_smiles_SmilesAtom$Z(pAtom2a, true);
pAtom2a=pAtom2;
pAtom2=b.getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom2);
}
pAtom=pAtom1;
var jn=Clazz_array($I$(6), [6]);
jn[4]=Clazz_new_($I$(7,1)).setIndex$I(60004);
var nBonds=pAtom.getBondCount$();
if (nBonds != 2 && nBonds != 3 ) return null;
for (var k=0, p=0; k < nBonds; k++) {
var b=pAtom.bonds[k];
pAtom1=b.getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom);
if (b.getMatchingBond$().getCovalentOrder$() == 2) {
if (pAtom2 == null ) pAtom2=pAtom1;
continue;
}if ((b.atom1 === pAtom1 ) && (!b.isConnection || pAtom1.index > pAtom.index ) ) {
p=0;
} else if (jn[1] == null ) {
p=1;
} else {
jn[0]=jn[p=1];
}jn[p]=pAtom1.getMatchingAtom$();
}
if (pAtom2 == null ) return null;
nBonds=pAtom2.getBondCount$();
if (nBonds != 2 && nBonds != 3 ) return null;
for (var p=0, k=0; k < nBonds; k++) {
var b=pAtom2.bonds[k];
pAtom1=b.getOtherAtom$org_jmol_smiles_SmilesAtom(pAtom2);
if (b.getMatchingBond$().getCovalentOrder$() == 2) {
continue;
}if ((b.atom1 === pAtom1 ) && (!b.isConnection || pAtom1.index > pAtom2.index ) ) {
p=2;
} else if (jn[3] == null ) {
p=3;
} else {
jn[2]=jn[p=3];
}jn[p]=pAtom1.getMatchingAtom$();
}
for (var k=0; k < 4; k++) if (jn[k] == null ) p$1.addAlleneLonePair$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$I.apply(this, [k < 2 ? pAtom : pAtom2, jn, k]);

if (haveTopo && !this.setTopoCoordinates$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$Z(sAtom0, pAtom, pAtom2, jn, false) ) return Clazz_array($I$(6), [0]);
return jn;
});

Clazz_newMeth(C$, 'addAlleneLonePair$org_jmol_smiles_SmilesAtom$org_jmol_util_NodeA$I',  function (pAtom, jn, k) {
var atom=pAtom.getMatchingAtom$();
jn[k]=this.search.findImplicitHydrogen$org_jmol_util_Node(atom);
if (jn[k] != null ) return;
var v=Clazz_new_($I$(8,1));
for (var i=0; i < 4; i++) if (jn[i] != null ) v.sub$javajs_util_T3d(jn[i]);

if (v.length$() == 0 ) {
v.setT$javajs_util_T3d((jn[4]));
} else {
v.scaleAdd2$D$javajs_util_T3d$javajs_util_T3d(2, pAtom.getMatchingAtom$(), v);
}jn[k]=Clazz_new_($I$(7,1)).setIndex$I(-2147483648);
(jn[k]).setT$javajs_util_T3d(v);
}, p$1);

Clazz_newMeth(C$, 'getStereoFlag$org_jmol_util_SimpleNode$org_jmol_util_SimpleNodeA$I$org_jmol_smiles_VTemp$Z',  function (atom0, atoms, nAtoms, v, is2D) {
var atom1=atoms[0];
var atom2=atoms[1];
var atom3=atoms[2];
var atom4=atoms[3];
var atom5=atoms[4];
var atom6=atoms[5];
var chiralClass=4;
switch (nAtoms) {
default:
case 5:
case 6:
return (C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(false, atom0, chiralClass, 1, atom1, atom2, atom3, atom4, atom5, atom6, v) ? "@" : "@@");
case 2:
case 4:
if (atom3 == null  || atom4 == null  ) return "";
var d=$I$(3).getNormalThroughPoints$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(atom1, atom2, atom3, v.vTemp, v.vA);
if (Math.abs($I$(3).distanceToPlaneV$javajs_util_V3d$D$javajs_util_P3d(v.vTemp, d, atom4)) < 0.2 ) {
if (is2D) return "";
chiralClass=7;
if (C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(false, atom0, chiralClass, 1, atom1, atom2, atom3, atom4, atom5, atom6, v)) return "@SP1";
if (C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(false, atom0, chiralClass, 2, atom1, atom2, atom3, atom4, atom5, atom6, v)) return "@SP2";
if (C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(false, atom0, chiralClass, 3, atom1, atom2, atom3, atom4, atom5, atom6, v)) return "@SP3";
} else {
return (C$.checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(false, atom0, chiralClass, 1, atom1, atom2, atom3, atom4, atom5, atom6, v) ? "@" : "@@");
}}
return "";
}, 1);

Clazz_newMeth(C$, 'checkStereochemistryAll$Z$org_jmol_util_SimpleNode$I$I$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp',  function (isNot, atom0, chiralClass, order, atom1, atom2, atom3, atom4, atom5, atom6, v) {
switch (chiralClass) {
default:
return true;
case 2:
case 4:
return (isNot == (C$.getHandedness$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(atom2, atom3, atom4, atom1, v) != order) );
case 7:
C$.getPlaneNormals$javajs_util_P3d$javajs_util_P3d$javajs_util_P3d$javajs_util_P3d$org_jmol_smiles_VTemp(atom1, atom2, atom3, atom4, v);
return (v.vNorm2.dot$javajs_util_T3d(v.vNorm3) < 0  ? isNot == (order != 3)  : v.vNorm3.dot$javajs_util_T3d(v.vNorm4) < 0  ? isNot == (order != 2)  : isNot == (order != 1) );
case 3:
return (isNot == (C$.getHandedness$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(atom1, atom2, atom3, atom0, v) != order) );
case 5:
if (!C$.isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D(atom0, atom0, atom5, atom1, v, -0.95)) return false;
return (isNot == (C$.getHandedness$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(atom2, atom3, atom4, atom1, v) != order) );
case 8:
switch (order) {
case 1:
break;
case 2:
atom3=atom2;
break;
case 3:
atom1=atom2;
break;
}
return (isNot == !C$.isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D(atom0, atom0, atom1, atom3, v, -0.95) );
case 9:
if (!C$.isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D(atom0, atom0, atom4, atom1, v, -0.95)) return false;
return (isNot == (C$.getHandedness$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp(atom2, atom3, atom4, atom1, v) != order) );
case 6:
if (!C$.isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D(atom0, atom0, atom6, atom1, v, -0.95) || !C$.isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D(atom0, atom0, atom2, atom4, v, -0.95) || !C$.isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D(atom0, atom0, atom3, atom5, v, -0.95)  ) return false;
C$.getPlaneNormals$javajs_util_P3d$javajs_util_P3d$javajs_util_P3d$javajs_util_P3d$org_jmol_smiles_VTemp(atom2, atom3, atom4, atom5, v);
if (v.vNorm2.dot$javajs_util_T3d(v.vNorm3) < 0  || v.vNorm3.dot$javajs_util_T3d(v.vNorm4) < 0  ) return false;
v.vNorm3.sub2$javajs_util_T3d$javajs_util_T3d(atom0, atom1);
return (isNot == ((v.vNorm2.dot$javajs_util_T3d(v.vNorm3) < 0  ? 2 : 1) == order) );
case 1:
return true;
}
}, 1);

Clazz_newMeth(C$, 'isDiaxial$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp$D',  function (atomA, atomB, atom1, atom2, v, f) {
v.vA.sub2$javajs_util_T3d$javajs_util_T3d(atomA, atom1);
v.vB.sub2$javajs_util_T3d$javajs_util_T3d(atomB, atom2);
v.vA.normalize$();
v.vB.normalize$();
return (v.vA.dot$javajs_util_T3d(v.vB) < f );
}, 1);

Clazz_newMeth(C$, 'getHandedness$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_util_SimpleNode$org_jmol_smiles_VTemp',  function (a, b, c, pt, v) {
var d=$I$(3).getNormalThroughPoints$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(a, b, c, v.vTemp, v.vA);
d=$I$(3).distanceToPlaneV$javajs_util_V3d$D$javajs_util_P3d(v.vTemp, d, pt);
return (d > 0  ? 1 : 2);
}, 1);

Clazz_newMeth(C$, 'getPlaneNormals$javajs_util_P3d$javajs_util_P3d$javajs_util_P3d$javajs_util_P3d$org_jmol_smiles_VTemp',  function (atom1, atom2, atom3, atom4, v) {
$I$(3).getNormalThroughPoints$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(atom1, atom2, atom3, v.vNorm2, v.vTemp1);
$I$(3).getNormalThroughPoints$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(atom2, atom3, atom4, v.vNorm3, v.vTemp1);
$I$(3).getNormalThroughPoints$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d(atom3, atom4, atom1, v.vNorm4, v.vTemp1);
}, 1);

Clazz_newMeth(C$, 'checkChirality$org_jmol_smiles_SmilesSearch$S$I$org_jmol_smiles_SmilesAtom',  function (search, pattern, index, newAtom) {
var stereoClass=0;
var order=-2147483648;
var len=pattern.length$();
var details=null;
var directives=null;
var atomCount=0;
var ch;
stereoClass=0;
order=1;
var isPoly=false;
if (++index < len) {
switch ((ch=pattern.charAt$I(index)).$c()) {
case 64:
order=2;
++index;
break;
case 43:
case 45:
case 72:
break;
case 80:
isPoly=true;
case 65:
case 79:
case 83:
case 84:
stereoClass=(index + 1 < len ? C$.getChiralityClass$S(pattern.substring$I$I(index, index + 2)) : -1);
index+=2;
break;
default:
order=($I$(9).isDigit$C(ch) ? 1 : -1);
}
var pt=index;
if (order == 1 || isPoly ) {
while (pt < len && $I$(9,"isDigit$C",[pattern.charAt$I(pt)]) )++pt;

if (pt > index) {
try {
var n=Integer.parseInt$S(pattern.substring$I$I(index, pt));
if (isPoly) {
atomCount=n;
if (pt < len && pattern.charAt$I(pt) == "(" ) {
details=$I$(10,"getSubPattern$S$I$C",[pattern, pt, "("]);
pt+=details.length$() + 2;
} else if (pt < len && pattern.charAt$I(pt) == "@" ) {
details="@";
++pt;
}if (pt < len && pattern.charAt$I(pt) == "/" ) {
directives=$I$(10).getSubPattern$S$I$C(pattern, pt, "/");
pt+=directives.length$() + 2;
}} else {
order=n;
}} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
order=-1;
} else {
throw e;
}
}
index=pt;
}}if (order < 1 || stereoClass < 0 ) throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,["Invalid stereochemistry descriptor"]);
}newAtom.stereo=Clazz_new_(C$.c$$I$I$I$S$S,[stereoClass, order, atomCount, details, directives]);
if (stereoClass == 1) {
search.polyAtom=newAtom;
search.noAromatic=true;
}newAtom.stereo.search=search;
if ($I$(10).getChar$S$I(pattern, index) == "?") {
$I$(4).info$S("Ignoring \'?\' in stereochemistry");
++index;
}return index;
}, 1);

Clazz_newMeth(C$, 'getPolyhedralOrders',  function () {
var po=this.polyhedralOrders=$I$(11).newInt2$I(this.atomCount);
if (this.details == null ) return;
if (this.details.length$() > 0 && this.details.charAt$I(0) == "@" ) this.details="!" + this.details.substring$I(1);
if (this.details.length$() == 0 || this.details.equals$O("!") ) {
for (var i=2; i <= this.atomCount; i++) this.details+=(i < 10 ? "" + i : "%" + i);

}var temp=Clazz_array(Integer.TYPE, [this.details.length$()]);
var ret=Clazz_array(Integer.TYPE, [1]);
var msg=null;
var pt=0;
var s=this.details + "/";
var n=0;
var len=s.length$();
var index=0;
var atomPt=0;
do {
var ch=s.charAt$I(index);
switch (ch.$c()) {
case 33:
this.isNot=true;
++index;
break;
case 47:
case 46:
if ((pt=atomPt) >= this.atomCount) {
msg="Too many descriptors";
break;
}var a=po[atomPt]=Clazz_array(Integer.TYPE, [n]);
for (; --n >= 0; ) a[n]=temp[n];

n=0;
if ($I$(4).debugging) $I$(4,"info$S",[$I$(9).toJSON$S$O("@PH" + this.atomCount + "[" + atomPt + "]" , a)]);
if (ch == "/") index=2147483647;
 else ++index;
++atomPt;
break;
default:
index=$I$(10).getRingNumber$S$I$C$IA(s, index, ch, ret);
pt=temp[n++]=ret[0] - 1;
if (pt == atomPt) msg="Atom cannot connect to itself";
 else if (pt < 0 || pt >= this.atomCount ) msg="Connection number outside of range (1-" + this.atomCount + ")" ;
 else if (n >= this.atomCount) msg="Too many connections indicated";
}
if (msg != null ) {
msg+=": " + s.substring$I$I(0, index) + "<<" ;
throw Clazz_new_(Clazz_load('org.jmol.smiles.InvalidSmilesException').c$$S,[msg]);
}} while (index < len);
return;
}, p$1);

Clazz_newMeth(C$, 'getAtropicStereoFlag$org_jmol_util_NodeA',  function (nodes) {
return ($I$(3).computeTorsion$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$javajs_util_T3d$Z(nodes[0], nodes[1], nodes[2], nodes[3], true) < 0  ? 1 : -1);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.PERM_TB=Clazz_array(Integer.TYPE, -1, [0, 1, 4, 0, -1, 4, 0, 1, 3, 0, -1, 3, 0, 1, 2, 0, -1, 2, 0, 1, 1, 0, -1, 1, 1, 1, 4, 1, 1, 3, 1, -1, 4, 1, -1, 3, 1, 1, 2, 1, -1, 2, 2, 1, 4, 2, 1, 3, 3, 1, 4, 3, -1, 4, 2, -1, 3, 2, -1, 4]);
C$.PERM_OCT=Clazz_array(Integer.TYPE, -1, [0, 1, 5, 0, -1, 5, 0, 1, 4, 0, 3, 5, 0, 3, 4, 0, 1, 3, 0, 3, 3, 0, 2, 5, 0, 2, 4, 0, -2, 5, 0, -2, 4, 0, 2, 3, 0, -2, 3, 0, -3, 5, 0, -3, 4, 0, -1, 4, 0, -3, 3, 0, -1, 3, 0, 1, 2, 0, 3, 2, 0, 2, 2, 0, -2, 2, 0, -3, 2, 0, -1, 2, 0, 1, 1, 0, 3, 1, 0, 2, 1, 0, -2, 1, 0, -3, 1, 0, -1, 1]);
C$.PERM_SS=Clazz_array(Integer.TYPE, -1, [0, 1, 3, 0, -1, 3, 0, 1, 2, 0, -1, 2, 0, 1, 1, 0, -1, 1, 1, 1, 3, 1, -1, 3, 1, 1, 2, 1, -1, 2, 2, 1, 3, 2, -1, 3]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-12 16:14:01 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.smiles"),I$=[[0,'javajs.util.V3d','javajs.util.BS']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "VTemp");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.vTemp=Clazz_new_($I$(1,1));
this.vA=Clazz_new_($I$(1,1));
this.vB=Clazz_new_($I$(1,1));
this.vTemp1=Clazz_new_($I$(1,1));
this.vTemp2=Clazz_new_($I$(1,1));
this.vNorm2=Clazz_new_($I$(1,1));
this.vNorm3=Clazz_new_($I$(1,1));
this.vNorm4=Clazz_new_($I$(1,1));
this.bsTemp=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['O',['vTemp','javajs.util.V3d','+vA','+vB','+vTemp1','+vTemp2','+vNorm2','+vNorm3','+vNorm4','bsTemp','javajs.util.BS']]]

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:19 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[[0,'javajs.util.BS']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BSUtil");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['emptySet','javajs.util.BS']]]

Clazz_newMeth(C$, 'newAndSetBit$I',  function (i) {
var bs=$I$(1).newN$I(i + 1);
bs.set$I(i);
return bs;
}, 1);

Clazz_newMeth(C$, 'areEqual$javajs_util_BS$javajs_util_BS',  function (a, b) {
return (a == null  || b == null   ? a == null  && b == null   : a.equals$O(b));
}, 1);

Clazz_newMeth(C$, 'haveCommon$javajs_util_BS$javajs_util_BS',  function (a, b) {
return (a == null  || b == null   ? false : a.intersects$javajs_util_BS(b));
}, 1);

Clazz_newMeth(C$, 'cardinalityOf$javajs_util_BS',  function (bs) {
return (bs == null  ? 0 : bs.cardinality$());
}, 1);

Clazz_newMeth(C$, 'newBitSet2$I$I',  function (i0, i1) {
var bs=$I$(1).newN$I(i1);
bs.setBits$I$I(i0, i1);
return bs;
}, 1);

Clazz_newMeth(C$, 'setAll$I',  function (n) {
var bs=$I$(1).newN$I(n);
bs.setBits$I$I(0, n);
return bs;
}, 1);

Clazz_newMeth(C$, 'andNot$javajs_util_BS$javajs_util_BS',  function (a, b) {
if (b != null  && a != null  ) a.andNot$javajs_util_BS(b);
return a;
}, 1);

Clazz_newMeth(C$, 'copy$javajs_util_BS',  function (bs) {
return bs == null  ? null : bs.clone$();
}, 1);

Clazz_newMeth(C$, 'copy2$javajs_util_BS$javajs_util_BS',  function (a, b) {
if (a == null  || b == null  ) return null;
b.clearAll$();
b.or$javajs_util_BS(a);
return b;
}, 1);

Clazz_newMeth(C$, 'copyInvert$javajs_util_BS$I',  function (bs, n) {
return (bs == null  ? null : C$.andNot$javajs_util_BS$javajs_util_BS(C$.setAll$I(n), bs));
}, 1);

Clazz_newMeth(C$, 'invertInPlace$javajs_util_BS$I',  function (bs, n) {
return C$.copy2$javajs_util_BS$javajs_util_BS(C$.copyInvert$javajs_util_BS$I(bs, n), bs);
}, 1);

Clazz_newMeth(C$, 'toggleInPlace$javajs_util_BS$javajs_util_BS',  function (a, b) {
if (a.equals$O(b)) {
a.clearAll$();
} else if (C$.andNot$javajs_util_BS$javajs_util_BS(C$.copy$javajs_util_BS(b), a).length$() == 0) {
C$.andNot$javajs_util_BS$javajs_util_BS(a, b);
} else {
a.or$javajs_util_BS(b);
}return a;
}, 1);

Clazz_newMeth(C$, 'deleteBits$javajs_util_BS$javajs_util_BS',  function (bs, bsDelete) {
if (bs == null  || bsDelete == null  ) return bs;
var ipt=bsDelete.nextSetBit$I(0);
if (ipt < 0) return bs;
var len=bs.length$();
var lend=Math.min(len, bsDelete.length$());
var i;
for (i=bsDelete.nextClearBit$I(ipt); i < lend && i >= 0 ; i=bsDelete.nextClearBit$I(i + 1)) bs.setBitTo$I$Z(ipt++, bs.get$I(i));

for (i=lend; i < len; i++) bs.setBitTo$I$Z(ipt++, bs.get$I(i));

if (ipt < len) bs.clearBits$I$I(ipt, len);
return bs;
}, 1);

Clazz_newMeth(C$, 'shiftBits$javajs_util_BS$javajs_util_BS$Z$I',  function (bs, bsAdded, setIfFound, iLast) {
if (bs == null  || bsAdded == null  ) return;
var n=bsAdded.length$();
var bsNew=$I$(1).newN$I(n);
var isFound=false;
var doSet=false;
var checkFound=setIfFound;
for (var j=0, i=0; j < n && i < iLast ; j++) {
if (bsAdded.get$I(j)) {
if (doSet) bsNew.set$I(j);
checkFound=setIfFound;
isFound=false;
} else if (bs.get$I(i++)) {
bsNew.set$I(j);
if (checkFound) {
checkFound=false;
isFound=true;
doSet=true;
}} else if (checkFound && !isFound ) {
doSet=false;
}}
bs.clearAll$();
bs.or$javajs_util_BS(bsNew);
}, 1);

Clazz_newMeth(C$, 'offset$javajs_util_BS$I$I',  function (bs0, pos, offset) {
if (bs0 == null ) return;
var bsTemp=$I$(1,"newN$I",[bs0.length$() + offset]);
for (var i=bs0.nextSetBit$I(0); i >= pos; i=bs0.nextSetBit$I(i + 1)) bsTemp.set$I(i + offset);

C$.copy2$javajs_util_BS$javajs_util_BS(bsTemp, bs0);
}, 1);

Clazz_newMeth(C$, 'setMapBitSet$java_util_Map$I$I$S',  function (ht, i1, i2, key) {
var bs;
if (ht.containsKey$O(key)) bs=ht.get$O(key);
 else ht.put$O$O(key, bs=Clazz_new_($I$(1,1)));
bs.setBits$I$I(i1, i2 + 1);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.emptySet=Clazz_new_($I$(1,1));
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[[0,'org.jmol.util.Logger']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "DefaultLogger", null, null, 'org.jmol.util.LoggerInterface');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'log$java_io_PrintStream$I$S$Throwable',  function (out, level, txt, e) {
if (out === System.err ) System.out.flush$();
if ((out != null ) && ((txt != null ) || (e != null ) ) ) {
txt=(txt != null  ? txt : "");
txt=($I$(1).logLevel$() ? "[" + $I$(1).getLevel$I(level) + "] "  : "") + txt + (e != null  ? ": " + e.toString() : "") ;
out.println$S(txt);
if (e != null ) {
var elements=e.getStackTrace$();
if (elements != null ) {
for (var i=0; i < elements.length; i++) {
out.println$S(elements[i].getClassName$() + " - " + elements[i].getLineNumber$() + " - " + elements[i].getMethodName$() );
}
}}}if (out === System.err ) System.err.flush$();
return txt;
});

Clazz_newMeth(C$, 'debug$S',  function (txt) {
this.log$java_io_PrintStream$I$S$Throwable(System.out, 5, txt, null);
});

Clazz_newMeth(C$, 'info$S',  function (txt) {
this.log$java_io_PrintStream$I$S$Throwable(System.out, 4, txt, null);
});

Clazz_newMeth(C$, 'warn$S',  function (txt) {
this.log$java_io_PrintStream$I$S$Throwable(System.out, 3, txt, null);
});

Clazz_newMeth(C$, 'warnEx$S$Throwable',  function (txt, e) {
this.log$java_io_PrintStream$I$S$Throwable(System.out, 3, txt, e);
});

Clazz_newMeth(C$, 'error$S',  function (txt) {
this.log$java_io_PrintStream$I$S$Throwable(System.err, 2, txt, null);
});

Clazz_newMeth(C$, 'errorEx$S$Throwable',  function (txt, e) {
this.log$java_io_PrintStream$I$S$Throwable(System.err, 2, txt, e);
});

Clazz_newMeth(C$, 'fatal$S',  function (txt) {
this.log$java_io_PrintStream$I$S$Throwable(System.err, 1, txt, null);
});

Clazz_newMeth(C$, 'fatalEx$S$Throwable',  function (txt, e) {
this.log$java_io_PrintStream$I$S$Throwable(System.err, 1, txt, e);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),p$1={},I$=[[0,['org.jmol.util.Edge','.EnumBondOrder'],'javajs.util.PT']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Edge", function(){
Clazz_newInstance(this, arguments,0,C$);
}, null, 'org.jmol.util.SimpleEdge');
C$.$classes$=[['EnumBondOrder',26]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.index=-1;
},1);

C$.$fields$=[['I',['index','order']]
,['O',['argbsHbondType','int[]']]]

Clazz_newMeth(C$, 'isPartial$',  function () {
return !p$1.isPymolMultiple.apply(this, []) && ((this.order & 224) != 0 && !this.isStereo$()  && !p$1.isPymolMultiple.apply(this, []) ) ;
});

Clazz_newMeth(C$, 'isPymolMultiple',  function () {
return ((this.order & 98304) == 98304);
}, p$1);

Clazz_newMeth(C$, 'isStereo$',  function () {
return ((this.order & 1024) != 0);
});

Clazz_newMeth(C$, 'getArgbHbondType$I',  function (order) {
var argbIndex=((order & 30720) >> 11);
return C$.argbsHbondType[argbIndex];
}, 1);

Clazz_newMeth(C$, 'getBondOrderNumberFromOrder$I',  function (order) {
order&=131071;
switch (order) {
case 131071:
case 65535:
return "0";
case 1025:
case 1041:
return "1";
case 32768:
break;
default:
if ((order & 98304) != 0) order=order & 3;
break;
}
if (C$.isOrderH$I(order) || C$.isAtropism$I(order) || (order & 256) != 0  ) return "1";
if ((order & 224) != 0) return (order >> 5) + "." + (order & 31) ;
return $I$(1).getNumberFromCode$I(order);
}, 1);

Clazz_newMeth(C$, 'getCmlBondOrder$I',  function (order) {
var sname=C$.getBondOrderNameFromOrder$I(order);
switch ((sname.charCodeAt$I(0))) {
case 115:
case 100:
case 116:
return "" + sname.toUpperCase$().charAt$I(0);
case 97:
if (sname.indexOf$S("Double") >= 0) return "D";
 else if (sname.indexOf$S("Single") >= 0) return "S";
return "aromatic";
case 112:
if (sname.indexOf$S(" ") >= 0) return sname.substring$I(sname.indexOf$S(" ") + 1);
return "partial12";
}
return null;
}, 1);

Clazz_newMeth(C$, 'getBondOrderNameFromOrder$I',  function (order) {
order&=131071;
switch (order) {
case 65535:
case 131071:
return "";
case 1025:
return "near";
case 1041:
return "far";
case 32768:
return $I$(1).STRUT.$name;
case 1:
return $I$(1).SINGLE.$name;
case 2:
return $I$(1).DOUBLE.$name;
default:
if ((order & 98304) != 0) order&=3;
break;
}
if ((order & 224) != 0) return "partial " + C$.getBondOrderNumberFromOrder$I(order);
if (C$.isOrderH$I(order)) return $I$(1).H_REGULAR.$name;
if ((order & 65537) == 65537) {
var code=C$.getAtropismCode$I(order);
return "atropisomer_" + ((code/4|0)) + (code % 4) ;
}if ((order & 256) != 0) return $I$(1).SINGLE.$name;
return $I$(1).getNameFromCode$I(order);
}, 1);

Clazz_newMeth(C$, 'getAtropismOrder$I$I',  function (nn, mm) {
return C$.getAtropismOrder12$I(((nn) << 2) + mm);
}, 1);

Clazz_newMeth(C$, 'getAtropismOrder12$I',  function (nnmm) {
return ((nnmm << 11) | 65537);
}, 1);

Clazz_newMeth(C$, 'getAtropismCode$I',  function (order) {
return (order >> (11)) & 15;
}, 1);

Clazz_newMeth(C$, 'getAtropismNode$I$org_jmol_util_Node$Z',  function (order, a1, isFirst) {
var i1=(order >> (11 + (isFirst ? 0 : 2))) & 3;
return a1.getEdges$()[i1 - 1].getOtherNode$org_jmol_util_SimpleNode(a1);
}, 1);

Clazz_newMeth(C$, 'isAtropism$I',  function (order) {
return (order & 65537) == 65537;
}, 1);

Clazz_newMeth(C$, 'isOrderH$I',  function (order) {
return (order & 30720) != 0 && (order & 65537) == 0 ;
}, 1);

Clazz_newMeth(C$, 'getPartialBondDotted$I',  function (order) {
return (order & 31);
}, 1);

Clazz_newMeth(C$, 'getPartialBondOrder$I',  function (order) {
return ((order & 1024) != 0 ? 1 : (order & 131071) >> 5);
}, 1);

Clazz_newMeth(C$, 'getCovalentBondOrder$I',  function (order) {
if ((order & 1024) != 0) return 1;
if ((order & 1023) == 0) return 0;
order&=131071;
if ((order & 224) != 0) return C$.getPartialBondOrder$I(order);
if ((order & 256) != 0) order&=~256;
if ((order & 248) != 0) order=1;
return order & 7;
}, 1);

Clazz_newMeth(C$, 'getBondOrderFromFloat$D',  function (fOrder) {
switch (((fOrder * 10)|0)) {
case 10:
return 1;
case 5:
case -10:
return 33;
case 15:
return 515;
case -15:
return 66;
case 20:
return 2;
case 25:
return 97;
case -25:
return 100;
case 30:
return 3;
case 40:
return 4;
case 50:
return 5;
case 60:
return 6;
}
return 131071;
}, 1);

Clazz_newMeth(C$, 'getBondOrderFromString$S',  function (s) {
if (s.indexOf$I(" ") < 0) {
if (s.indexOf$S(".") >= 0) {
s="partial " + s;
} else {
if ($I$(2).isOneOf$S$S(s, ";1;2;3;4;5;6;")) {
return (s.charCodeAt$I(0)) - 48;
}var order=$I$(1).getCodeFromName$S(s);
if (order != 131071 || !s.toLowerCase$().startsWith$S("atropisomer_")  || s.length$() != 14 ) return order;
try {
order=C$.getAtropismOrder$I$I(Integer.parseInt$S(s.substring$I$I(12, 13)), Integer.parseInt$S(s.substring$I$I(13, 14)));
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
} else {
throw e;
}
}
return order;
}}if (s.toLowerCase$().indexOf$S("partial ") != 0) return 131071;
s=s.substring$I(8).trim$();
return C$.getPartialBondOrderFromFloatEncodedInt$I(C$.getFloatEncodedInt$S(s));
}, 1);

Clazz_newMeth(C$, 'getPartialBondOrderFromFloatEncodedInt$I',  function (bondOrderInteger) {
return ((((bondOrderInteger/1000000|0)) % 7) << 5) + ((bondOrderInteger % 1000000) & 31);
}, 1);

Clazz_newMeth(C$, 'getFloatEncodedInt$S',  function (strDecimal) {
var pt=strDecimal.indexOf$S(".");
if (pt < 1 || strDecimal.charAt$I(0) == "-"  || strDecimal.endsWith$S(".")  || strDecimal.contains$CharSequence(".0") ) return 2147483647;
var i=0;
var j=0;
if (pt > 0) {
try {
i=Integer.parseInt$S(strDecimal.substring$I$I(0, pt));
if (i < 0) i=-i;
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
i=-1;
} else {
throw e;
}
}
}var n=strDecimal.length$();
if (pt < n - 1) try {
var pt1=pt + Math.min(6, n - pt);
j=Integer.parseInt$S(strDecimal.substring$I$I(pt + 1, pt1));
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
} else {
throw e;
}
}
i=i * 1000000 + j;
return (i < 0 || i > 2147483647  ? 2147483647 : i);
}, 1);

Clazz_newMeth(C$, 'getBondType$',  function () {
return this.order & 131071;
});

Clazz_newMeth(C$, 'setCIPChirality$I',  function (c) {
});

Clazz_newMeth(C$, 'getCIPChirality$Z',  function (doCalculate) {
return "";
});

C$.$static$=function(){C$.$static$=0;
C$.argbsHbondType=Clazz_array(Integer.TYPE, -1, [-38476, -256, -256, -1, -65281, -65536, -23296, -16711681, -16711936, -32640]);
};
;
(function(){/*e*/var C$=Clazz_newClass(P$.Edge, "EnumBondOrder", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['code'],'S',['number','$name']]]

Clazz_newMeth(C$, 'c$$I$S$S',  function (code, number, name) {
;C$.$init$.apply(this);
this.code=code;
this.number=number;
this.$name=name;
}, 1);

Clazz_newMeth(C$, 'getCodeFromName$S',  function (name) {
for (var item, $item = 0, $$item = C$.values$(); $item<$$item.length&&((item=($$item[$item])),1);$item++) if (item.$name.equalsIgnoreCase$S(name)) return item.code;

return 131071;
}, 1);

Clazz_newMeth(C$, 'getNameFromCode$I',  function (code) {
for (var item, $item = 0, $$item = C$.values$(); $item<$$item.length&&((item=($$item[$item])),1);$item++) if (item.code == code) return item.$name;

return "?";
}, 1);

Clazz_newMeth(C$, 'getNumberFromCode$I',  function (code) {
for (var item, $item = 0, $$item = C$.values$(); $item<$$item.length&&((item=($$item[$item])),1);$item++) if (item.code == code) return item.number;

return "?";
}, 1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "SINGLE", 0, [1, "1", "single"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "DOUBLE", 1, [2, "2", "double"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "TRIPLE", 2, [3, "3", "triple"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "QUADRUPLE", 3, [4, "4", "quadruple"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "QUINTUPLE", 4, [5, "5", "quintuple"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "sextuple", 5, [6, "6", "sextuple"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "AROMATIC", 6, [515, "1.5", "aromatic"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "STRUT", 7, [32768, "1", "struts"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "H_REGULAR", 8, [2048, "1", "hbond"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "PARTIAL01", 9, [33, "0.5", "partial"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "PARTIAL12", 10, [66, "1.5", "partialDouble"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "PARTIAL23", 11, [97, "2.5", "partialTriple"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "PARTIAL32", 12, [100, "2.5", "partialTriple2"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "AROMATIC_SINGLE", 13, [513, "1", "aromaticSingle"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "AROMATIC_DOUBLE", 14, [514, "2", "aromaticDouble"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "ATROPISOMER", 15, [65537, "1", "atropisomer"]);
Clazz_newEnumConst($vals, C$.c$$I$S$S, "UNSPECIFIED", 16, [17, "1", "unspecified"]);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-10 15:58:33 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[[0,'javajs.util.BS','org.jmol.util.Logger','java.util.Hashtable','javajs.util.PT']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Elements");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['I',['elementNumberMax','altElementMax','covalentVersion','bondingVersion'],'S',['commonNmrIsotopes'],'O',['elementSymbols','String[]','atomicMass','double[]','isotopeMass','int[]','htElementMap','java.util.Map','elementNames','String[]','altElementNumbers','int[]','altElementSymbols','String[]','+altElementNames','vanderwaalsMars','short[]','+defaultBondingMars','+cationLookupTable','+anionLookupTable','bsCations','javajs.util.BS','+bsAnions','hydrophobicities','double[]','+electroNegativities']]]

Clazz_newMeth(C$, 'getNaturalIsotope$I',  function (elementNumber) {
return C$.isotopeMass[elementNumber & 127];
}, 1);

Clazz_newMeth(C$, 'getAtomicMass$I',  function (i) {
return (i < 1 || i >= C$.atomicMass.length  ? 0 : C$.atomicMass[i]);
}, 1);

Clazz_newMeth(C$, 'elementNumberFromSymbol$S$Z',  function (elementSymbol, isSilent) {
if (C$.htElementMap == null ) {
var map=Clazz_new_($I$(3,1));
for (var elementNumber=C$.elementNumberMax; --elementNumber >= 0; ) {
var symbol=C$.elementSymbols[elementNumber];
var boxed=Integer.valueOf$I(elementNumber);
map.put$O$O(symbol, boxed);
if (symbol.length$() == 2) map.put$O$O(symbol.toUpperCase$(), boxed);
}
for (var i=C$.altElementMax; --i >= 4; ) {
var symbol=C$.altElementSymbols[i];
var boxed=Integer.valueOf$I(C$.altElementNumbers[i]);
map.put$O$O(symbol, boxed);
if (symbol.length$() == 2) map.put$O$O(symbol.toUpperCase$(), boxed);
}
map.put$O$O("Z", Integer.valueOf$I(0));
C$.htElementMap=map;
}if (elementSymbol == null ) return 0;
var boxedAtomicNumber=C$.htElementMap.get$O(elementSymbol);
if (boxedAtomicNumber != null ) return boxedAtomicNumber.intValue$();
if ($I$(4,"isDigit$C",[elementSymbol.charAt$I(0)])) {
var pt=elementSymbol.length$() - 2;
if (pt >= 0 && $I$(4,"isDigit$C",[elementSymbol.charAt$I(pt)]) ) ++pt;
var isotope=(pt > 0 ? $I$(4,"parseInt$S",[elementSymbol.substring$I$I(0, pt)]) : 0);
if (isotope > 0) {
var n=C$.elementNumberFromSymbol$S$Z(elementSymbol.substring$I(pt), true);
if (n > 0) {
isotope=C$.getAtomicAndIsotopeNumber$I$I(n, isotope);
C$.htElementMap.put$O$O(elementSymbol.toUpperCase$(), Integer.valueOf$I(isotope));
return isotope;
}}}if (!isSilent) $I$(2).error$S("'" + elementSymbol + "' is not a recognized symbol" );
return 0;
}, 1);

Clazz_newMeth(C$, 'elementSymbolFromNumber$I',  function (elemNo) {
var isoNumber=0;
if (elemNo >= C$.elementNumberMax) {
for (var j=C$.altElementMax; --j >= 0; ) if (elemNo == C$.altElementNumbers[j]) return C$.altElementSymbols[j];

isoNumber=C$.getIsotopeNumber$I(elemNo);
elemNo&=127;
return "" + isoNumber + C$.getElementSymbol$I(elemNo) ;
}return C$.getElementSymbol$I(elemNo);
}, 1);

Clazz_newMeth(C$, 'getElementSymbol$I',  function (elemNo) {
if (elemNo < 0 || elemNo >= C$.elementNumberMax ) elemNo=0;
return C$.elementSymbols[elemNo];
}, 1);

Clazz_newMeth(C$, 'elementNameFromNumber$I',  function (elementNumber) {
if (elementNumber >= C$.elementNumberMax) {
for (var j=C$.altElementMax; --j >= 0; ) if (elementNumber == C$.altElementNumbers[j]) return C$.altElementNames[j];

elementNumber%=128;
}if (elementNumber < 0 || elementNumber >= C$.elementNumberMax ) elementNumber=0;
return C$.elementNames[elementNumber];
}, 1);

Clazz_newMeth(C$, 'elementNumberFromName$S',  function (name) {
for (var i=1; i < C$.elementNumberMax; i++) if (C$.elementNames[i].equalsIgnoreCase$S(name)) return i;

return -1;
}, 1);

Clazz_newMeth(C$, 'altElementNameFromIndex$I',  function (i) {
return C$.altElementNames[i];
}, 1);

Clazz_newMeth(C$, 'altElementNumberFromIndex$I',  function (i) {
return C$.altElementNumbers[i];
}, 1);

Clazz_newMeth(C$, 'altElementSymbolFromIndex$I',  function (i) {
return C$.altElementSymbols[i];
}, 1);

Clazz_newMeth(C$, 'altIsotopeSymbolFromIndex$I',  function (i) {
var code=C$.altElementNumbers[i];
return (code >> 7) + C$.elementSymbolFromNumber$I(code & 127);
}, 1);

Clazz_newMeth(C$, 'altIsotopeSymbolFromIndex2$I',  function (i) {
var code=C$.altElementNumbers[i];
return C$.elementSymbolFromNumber$I(code & 127) + ((code) >> 7);
}, 1);

Clazz_newMeth(C$, 'getElementNumber$I',  function (atomicAndIsotopeNumber) {
return atomicAndIsotopeNumber & 127;
}, 1);

Clazz_newMeth(C$, 'getIsotopeNumber$I',  function (atomicAndIsotopeNumber) {
return (atomicAndIsotopeNumber & 32640) >> 7;
}, 1);

Clazz_newMeth(C$, 'getAtomicAndIsotopeNumber$I$I',  function (n, mass) {
return ((n < 0 ? 0 : n) + (mass <= 0 ? 0 : mass << 7));
}, 1);

Clazz_newMeth(C$, 'altElementIndexFromNumber$I',  function (atomicAndIsotopeNumber) {
for (var i=0; i < C$.altElementMax; i++) if (C$.altElementNumbers[i] == atomicAndIsotopeNumber) return i;

return 0;
}, 1);

Clazz_newMeth(C$, 'getCommonNMRIsotope$S',  function (sym) {
if ($I$(4,"isDigit$C",[sym.charAt$I(0)])) return sym;
if (sym.equals$O("D")) return "2H";
var pt=C$.commonNmrIsotopes.indexOf$S(sym + ",");
return (pt < 0 ? sym : C$.commonNmrIsotopes.substring$I$I(pt - 2, pt + sym.length$()).trim$());
}, 1);

Clazz_newMeth(C$, 'getNmrNucleusFromName$S',  function (name) {
return C$.getCommonNMRIsotope$S(C$.elementSymbolFromNumber$I(C$.elementNumberFromName$S(name)));
}, 1);

Clazz_newMeth(C$, 'isNaturalIsotope$S',  function (isotopeSymbol) {
return ("1H,12C,14N".indexOf$S(isotopeSymbol + ",") >= 0);
}, 1);

Clazz_newMeth(C$, 'getBondingRadius$I$I',  function (atomicNumberAndIsotope, charge) {
var atomicNumber=atomicNumberAndIsotope & 127;
return (charge > 0 && C$.bsCations.get$I(atomicNumber)  ? C$.getBondingRadFromTable$I$I$HA(atomicNumber, charge, C$.cationLookupTable) : charge < 0 && C$.bsAnions.get$I(atomicNumber)  ? C$.getBondingRadFromTable$I$I$HA(atomicNumber, charge, C$.anionLookupTable) : C$.defaultBondingMars[(atomicNumber << 1) + C$.bondingVersion] / 1000.0);
}, 1);

Clazz_newMeth(C$, 'getCovalentRadius$I',  function (atomicNumberAndIsotope) {
return C$.defaultBondingMars[((atomicNumberAndIsotope & 127) << 1) + C$.covalentVersion] / 1000.0;
}, 1);

Clazz_newMeth(C$, 'getBondingRadFromTable$I$I$HA',  function (atomicNumber, charge, table) {
var ionic=(atomicNumber << 4) + (charge + 4);
var iVal=0;
var iMid=0;
var iMin=0;
var iMax=(table.length/2|0);
while (iMin != iMax){
iMid=((iMin + iMax)/2|0);
iVal=table[iMid << 1];
if (iVal > ionic) iMax=iMid;
 else if (iVal < ionic) iMin=iMid + 1;
 else return table[(iMid << 1) + 1] / 1000.0;
}
if (iVal > ionic) --iMid;
iVal=table[iMid << 1];
if (atomicNumber != (iVal >> 4)) ++iMid;
return table[(iMid << 1) + 1] / 1000.0;
}, 1);

Clazz_newMeth(C$, 'getVanderwaalsMar$I$org_jmol_c_VDW',  function (atomicAndIsotopeNumber, type) {
return C$.vanderwaalsMars[((atomicAndIsotopeNumber & 127) << 2) + (type.pt % 4)];
}, 1);

Clazz_newMeth(C$, 'getHydrophobicity$I',  function (i) {
return (i < 1 || i >= C$.hydrophobicities.length  ? 0 : C$.hydrophobicities[i]);
}, 1);

Clazz_newMeth(C$, 'getAllredRochowElectroNeg$I',  function (elemno) {
return (elemno > 0 && elemno < C$.electroNegativities.length  ? C$.electroNegativities[elemno] : 0);
}, 1);

Clazz_newMeth(C$, 'isElement$I$I',  function (atomicAndIsotopeNumber, elemNo) {
return ((atomicAndIsotopeNumber & 127) == elemNo);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.elementSymbols=Clazz_array(String, -1, ["Xx", "H", "He", "Li", "Be", "B", "C", "N", "O", "F", "Ne", "Na", "Mg", "Al", "Si", "P", "S", "Cl", "Ar", "K", "Ca", "Sc", "Ti", "V", "Cr", "Mn", "Fe", "Co", "Ni", "Cu", "Zn", "Ga", "Ge", "As", "Se", "Br", "Kr", "Rb", "Sr", "Y", "Zr", "Nb", "Mo", "Tc", "Ru", "Rh", "Pd", "Ag", "Cd", "In", "Sn", "Sb", "Te", "I", "Xe", "Cs", "Ba", "La", "Ce", "Pr", "Nd", "Pm", "Sm", "Eu", "Gd", "Tb", "Dy", "Ho", "Er", "Tm", "Yb", "Lu", "Hf", "Ta", "W", "Re", "Os", "Ir", "Pt", "Au", "Hg", "Tl", "Pb", "Bi", "Po", "At", "Rn", "Fr", "Ra", "Ac", "Th", "Pa", "U", "Np", "Pu", "Am", "Cm", "Bk", "Cf", "Es", "Fm", "Md", "No", "Lr", "Rf", "Db", "Sg", "Bh", "Hs", "Mt"]);
C$.atomicMass=Clazz_array(Double.TYPE, -1, [0, 1.008, 4.002, 6.9675, 9.012, 10.8135, 12.0106, 14.006, 15.999, 18.998, 20.1797, 22.989, 24.307, 26.981, 28.084, 30.973, 32.059, 35.4515, 39.948, 39.0983, 40.078, 44.955, 47.867, 50.9415, 51.9961, 54.938, 55.845, 58.933, 58.6934, 63.546, 65.38, 69.723, 72.63, 74.921, 78.971, 79.904, 83.798, 85.4678, 87.62, 88.905, 91.224, 92.906, 95.95, 98.91, 101.07, 102.905, 106.42, 107.8682, 112.414, 114.818, 118.71, 121.76, 127.6, 126.904, 131.293, 132.905, 137.327, 138.905, 140.116, 140.907, 144.242, 144.9, 150.36, 151.964, 157.25, 158.925, 162.5, 164.93, 167.259, 168.934, 173.054, 174.9668, 178.49, 180.947, 183.84, 186.207, 190.23, 192.217, 195.084, 196.966, 200.592, 204.3835, 207.2, 208.98, 210.0, 210.0, 222.0, 223.0, 226.03, 227.03, 232.0377, 231.035, 238.028, 237.05, 239.1, 243.1, 247.1, 247.1, 252.1, 252.1, 257.1, 256.1, 259.1, 260.1, 261.0, 262.0, 263.0, 262.0, 265.0, 268.0]);
C$.isotopeMass=Clazz_array(Integer.TYPE, -1, [0, 1, 4, 7, 9, 11, 12, 14, 16, 19, 20, 23, 24, 27, 28, 31, 32, 35, 40, 39, 40, 45, 48, 51, 52, 55, 56, 59, 59, 64, 65, 70, 73, 75, 79, 80, 84, 85, 88, 89, 91, 93, 96, 98, 101, 103, 106, 108, 112, 115, 119, 122, 128, 127, 131, 133, 137, 139, 140, 141, 144, 145, 150, 152, 157, 159, 163, 165, 167, 169, 173, 175, 179, 181, 184, 186, 190, 192, 195, 197, 201, 204, 207, 209, 209, 210, 222, 223, 226, 227, 232, 231, 238, 237, 244, 243, 247, 247, 251, 252, 257, 258, 259, 260, 261, 262, 263, 262, 265, 268]);
C$.elementNumberMax=C$.elementSymbols.length;
C$.elementNames=Clazz_array(String, -1, ["unknown", "hydrogen", "helium", "lithium", "beryllium", "boron", "carbon", "nitrogen", "oxygen", "fluorine", "neon", "sodium", "magnesium", "aluminum", "silicon", "phosphorus", "sulfur", "chlorine", "argon", "potassium", "calcium", "scandium", "titanium", "vanadium", "chromium", "manganese", "iron", "cobalt", "nickel", "copper", "zinc", "gallium", "germanium", "arsenic", "selenium", "bromine", "krypton", "rubidium", "strontium", "yttrium", "zirconium", "niobium", "molybdenum", "technetium", "ruthenium", "rhodium", "palladium", "silver", "cadmium", "indium", "tin", "antimony", "tellurium", "iodine", "xenon", "cesium", "barium", "lanthanum", "cerium", "praseodymium", "neodymium", "promethium", "samarium", "europium", "gadolinium", "terbium", "dysprosium", "holmium", "erbium", "thulium", "ytterbium", "lutetium", "hafnium", "tantalum", "tungsten", "rhenium", "osmium", "iridium", "platinum", "gold", "mercury", "thallium", "lead", "bismuth", "polonium", "astatine", "radon", "francium", "radium", "actinium", "thorium", "protactinium", "uranium", "neptunium", "plutonium", "americium", "curium", "berkelium", "californium", "einsteinium", "fermium", "mendelevium", "nobelium", "lawrencium", "rutherfordium", "dubnium", "seaborgium", "bohrium", "hassium", "meitnerium"]);
C$.commonNmrIsotopes=", 1H, 2H, 6Li, 7Li,10B,13C,15N,17O,19F,";
C$.altElementNumbers=Clazz_array(Integer.TYPE, -1, [0, 13, 16, 55, 257, 385, 1414, 1670, 1798, 1927]);
C$.altElementMax=C$.altElementNumbers.length;
C$.altElementSymbols=Clazz_array(String, -1, ["Xx", "Al", "S", "Cs", "D", "T", "11C", "13C", "14C", "15N"]);
C$.altElementNames=Clazz_array(String, -1, ["dummy", "aluminium", "sulphur", "caesium", "deuterium", "tritium", "", "", "", ""]);
C$.vanderwaalsMars=Clazz_array(Short.TYPE, -1, [1000, 1000, 1000, 1000, 1200, 1100, 1100, 1200, 1400, 1400, 2200, 1400, 1820, 1810, 1220, 2200, 1700, 1530, 628, 1900, 2080, 1920, 1548, 1800, 1950, 1700, 1548, 1700, 1850, 1550, 1400, 1600, 1700, 1520, 1348, 1550, 1730, 1470, 1300, 1500, 1540, 1540, 2020, 1540, 2270, 2270, 2200, 2400, 1730, 1730, 1500, 2200, 2050, 1840, 1500, 2100, 2100, 2100, 2200, 2100, 2080, 1800, 1880, 1950, 2000, 1800, 1808, 1800, 1970, 1750, 1748, 1800, 1880, 1880, 2768, 1880, 2750, 2750, 2388, 2800, 1973, 2310, 1948, 2400, 1700, 2300, 1320, 2300, 1700, 2150, 1948, 2150, 1700, 2050, 1060, 2050, 1700, 2050, 1128, 2050, 1700, 2050, 1188, 2050, 1700, 2050, 1948, 2050, 1700, 2000, 1128, 2000, 1630, 2000, 1240, 2000, 1400, 2000, 1148, 2000, 1390, 2100, 1148, 2100, 1870, 1870, 1548, 2100, 1700, 2110, 3996, 2100, 1850, 1850, 828, 2050, 1900, 1900, 900, 1900, 2100, 1830, 1748, 1900, 2020, 2020, 1900, 2020, 1700, 3030, 2648, 2900, 1700, 2490, 2020, 2550, 1700, 2400, 1608, 2400, 1700, 2300, 1420, 2300, 1700, 2150, 1328, 2150, 1700, 2100, 1748, 2100, 1700, 2050, 1800, 2050, 1700, 2050, 1200, 2050, 1700, 2000, 1220, 2000, 1630, 2050, 1440, 2050, 1720, 2100, 1548, 2100, 1580, 2200, 1748, 2200, 1930, 2200, 1448, 2200, 2170, 1930, 1668, 2250, 2200, 2170, 1120, 2200, 2060, 2060, 1260, 2100, 2150, 1980, 1748, 2100, 2160, 2160, 2100, 2160, 1700, 3430, 3008, 3000, 1700, 2680, 2408, 2700, 1700, 2500, 1828, 2500, 1700, 2480, 1860, 2480, 1700, 2470, 1620, 2470, 1700, 2450, 1788, 2450, 1700, 2430, 1760, 2430, 1700, 2420, 1740, 2420, 1700, 2400, 1960, 2400, 1700, 2380, 1688, 2380, 1700, 2370, 1660, 2370, 1700, 2350, 1628, 2350, 1700, 2330, 1608, 2330, 1700, 2320, 1588, 2320, 1700, 2300, 1568, 2300, 1700, 2280, 1540, 2280, 1700, 2270, 1528, 2270, 1700, 2250, 1400, 2250, 1700, 2200, 1220, 2200, 1700, 2100, 1260, 2100, 1700, 2050, 1300, 2050, 1700, 2000, 1580, 2000, 1700, 2000, 1220, 2000, 1720, 2050, 1548, 2050, 1660, 2100, 1448, 2100, 1550, 2050, 1980, 2050, 1960, 1960, 1708, 2200, 2020, 2020, 2160, 2300, 1700, 2070, 1728, 2300, 1700, 1970, 1208, 2000, 1700, 2020, 1120, 2000, 1700, 2200, 2300, 2000, 1700, 3480, 3240, 2000, 1700, 2830, 2568, 2000, 1700, 2000, 2120, 2000, 1700, 2400, 1840, 2400, 1700, 2000, 1600, 2000, 1860, 2300, 1748, 2300, 1700, 2000, 1708, 2000, 1700, 2000, 1668, 2000, 1700, 2000, 1660, 2000, 1700, 2000, 1648, 2000, 1700, 2000, 1640, 2000, 1700, 2000, 1628, 2000, 1700, 2000, 1620, 2000, 1700, 2000, 1608, 2000, 1700, 2000, 1600, 2000, 1700, 2000, 1588, 2000, 1700, 2000, 1580, 2000, 1700, 2000, 1600, 2000, 1700, 2000, 1600, 2000, 1700, 2000, 1600, 2000, 1700, 2000, 1600, 2000, 1700, 2000, 1600, 2000, 1700, 2000, 1600, 2000]);
C$.covalentVersion=1;
C$.bondingVersion=0;
C$.defaultBondingMars=Clazz_array(Short.TYPE, -1, [0, 0, 230, 320, 930, 460, 680, 1330, 350, 1020, 830, 850, 680, 750, 680, 710, 680, 630, 640, 640, 1120, 670, 970, 1550, 1100, 1390, 1350, 1260, 1200, 1160, 750, 1110, 1020, 1030, 990, 990, 1570, 960, 1330, 1960, 990, 1710, 1440, 1480, 1470, 1360, 1330, 1340, 1350, 1220, 1350, 1190, 1340, 1160, 1330, 1110, 1500, 1100, 1520, 1120, 1450, 1180, 1220, 1240, 1170, 1210, 1210, 1210, 1220, 1160, 1210, 1140, 1910, 1170, 1470, 2100, 1120, 1850, 1780, 1630, 1560, 1540, 1480, 1470, 1470, 1380, 1350, 1280, 1400, 1250, 1450, 1250, 1500, 1200, 1590, 1280, 1690, 1360, 1630, 1420, 1460, 1400, 1460, 1400, 1470, 1360, 1400, 1330, 1980, 1310, 1670, 2320, 1340, 1960, 1870, 1800, 1830, 1630, 1820, 1760, 1810, 1740, 1800, 1730, 1800, 1720, 1990, 1680, 1790, 1690, 1760, 1680, 1750, 1670, 1740, 1660, 1730, 1650, 1720, 1640, 1940, 1700, 1720, 1620, 1570, 1520, 1430, 1460, 1370, 1370, 1350, 1310, 1370, 1290, 1320, 1220, 1500, 1230, 1500, 1240, 1700, 1330, 1550, 1440, 1540, 1440, 1540, 1510, 1680, 1450, 1700, 1470, 2400, 1420, 2000, 2230, 1900, 2010, 1880, 1860, 1790, 1750, 1610, 1690, 1580, 1700, 1550, 1710, 1530, 1720, 1510, 1660, 1500, 1660, 1500, 1680, 1500, 1680, 1500, 1650, 1500, 1670, 1500, 1730, 1500, 1760, 1500, 1610, 1600, 1570, 1600, 1490, 1600, 1430, 1600, 1410, 1600, 1340, 1600, 1290]);
C$.cationLookupTable=Clazz_array(Short.TYPE, -1, [53, 680, 69, 440, 70, 350, 85, 350, 87, 230, 104, 160, 117, 680, 119, 160, 121, 130, 133, 220, 138, 90, 155, 80, 165, 1120, 181, 970, 197, 820, 198, 660, 215, 510, 229, 650, 232, 420, 247, 440, 249, 350, 262, 2190, 264, 370, 266, 300, 281, 340, 283, 270, 293, 1540, 309, 1330, 325, 1180, 326, 990, 343, 732, 357, 960, 358, 940, 359, 760, 360, 680, 374, 880, 375, 740, 376, 630, 377, 590, 389, 810, 390, 890, 391, 630, 394, 520, 406, 800, 407, 660, 408, 600, 411, 460, 422, 740, 423, 640, 438, 720, 439, 630, 454, 690, 469, 960, 470, 720, 485, 880, 486, 740, 501, 810, 503, 620, 518, 730, 520, 530, 535, 580, 537, 460, 549, 660, 552, 500, 554, 420, 569, 470, 571, 390, 597, 1470, 614, 1120, 631, 893, 645, 1090, 648, 790, 661, 1000, 664, 740, 665, 690, 677, 930, 680, 700, 682, 620, 699, 979, 712, 670, 727, 680, 742, 800, 744, 650, 757, 1260, 758, 890, 773, 1140, 774, 970, 791, 810, 806, 930, 808, 710, 823, 760, 825, 620, 837, 820, 840, 700, 842, 560, 857, 620, 859, 500, 885, 1670, 901, 1530, 902, 1340, 917, 1390, 919, 1016, 933, 1270, 935, 1034, 936, 920, 951, 1013, 952, 900, 967, 995, 983, 979, 999, 964, 1014, 1090, 1015, 950, 1031, 938, 1047, 923, 1048, 840, 1063, 908, 1079, 894, 1095, 881, 1111, 870, 1126, 930, 1127, 858, 1143, 850, 1160, 780, 1177, 680, 1192, 700, 1194, 620, 1208, 720, 1211, 560, 1224, 880, 1226, 690, 1240, 680, 1254, 800, 1256, 650, 1269, 1370, 1271, 850, 1285, 1270, 1286, 1100, 1301, 1470, 1303, 950, 1318, 1200, 1320, 840, 1333, 980, 1335, 960, 1337, 740, 1354, 670, 1371, 620, 1397, 1800, 1414, 1430, 1431, 1180, 1448, 1020, 1463, 1130, 1464, 980, 1465, 890, 1480, 970, 1482, 800, 1495, 1100, 1496, 950, 1499, 710, 1511, 1080, 1512, 930, 1527, 1070, 1528, 920]);
C$.anionLookupTable=Clazz_array(Short.TYPE, -1, [19, 1540, 96, 2600, 113, 1710, 130, 1360, 131, 680, 147, 1330, 241, 2120, 258, 1840, 275, 1810, 512, 2720, 529, 2220, 546, 1980, 563, 1960, 800, 2940, 803, 3700, 817, 2450, 834, 2110, 835, 2500, 851, 2200]);
C$.bsCations=Clazz_new_($I$(1,1));
C$.bsAnions=Clazz_new_($I$(1,1));
{
for (var i=0; i < C$.anionLookupTable.length; i+=2) C$.bsAnions.set$I(C$.anionLookupTable[i] >> 4);

for (var i=0; i < C$.cationLookupTable.length; i+=2) C$.bsCations.set$I(C$.cationLookupTable[i] >> 4);

};
C$.hydrophobicities=Clazz_array(Double.TYPE, -1, [0.0, 0.62, -2.53, -0.78, -0.9, 0.29, -0.85, -0.74, 0.48, -0.4, 1.38, 1.06, -1.5, 0.64, 1.19, 0.12, -0.18, -0.05, 0.81, 0.26, 1.08]);
{
if ((C$.elementNames.length != C$.elementNumberMax) || (C$.vanderwaalsMars.length >> 2 != C$.elementNumberMax) || (C$.defaultBondingMars.length >> 1 != C$.elementNumberMax)  ) {
$I$(2,"error$S",["ERROR!!! Element table length mismatch:\n elementSymbols.length=" + C$.elementSymbols.length + "\n elementNames.length=" + C$.elementNames.length + "\n vanderwaalsMars.length=" + C$.vanderwaalsMars.length + "\n covalentMars.length=" + C$.defaultBondingMars.length ]);
}};
C$.electroNegativities=Clazz_array(Double.TYPE, -1, [0, 2.2, 0, 0.97, 1.47, 2.01, 2.5, 3.07, 3.5, 4.1, 0.0, 1.01, 1.23, 1.47, 1.74, 2.06, 2.44, 2.83, 0.0, 0.91, 1.04, 1.2, 1.32, 1.45, 1.56, 1.6, 1.64, 1.7, 1.75, 1.75, 1.66, 1.82, 2.02, 2.2, 2.48, 2.74, 0.0, 0.89, 0.99, 1.11, 1.22, 1.23, 1.3, 1.36, 1.42, 1.45, 1.35, 1.42, 1.46, 1.49, 1.72, 1.82, 2.01, 2.21]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[[0,'org.jmol.util.Elements','javajs.util.BS','javajs.util.AU','java.util.Hashtable','javajs.util.PT']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JmolMolecule");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.elementCounts=Clazz_array(Integer.TYPE, [$I$(1).elementNumberMax]);
this.altElementCounts=Clazz_array(Integer.TYPE, [$I$(1).altElementMax]);
},1);

C$.$fields$=[['I',['moleculeIndex','modelIndex','indexInModel','firstAtomIndex','ac','nElements','elementNumberMax','altElementMax'],'S',['mf'],'O',['nodes','org.jmol.util.Node[]','elementCounts','int[]','+altElementCounts','atomList','javajs.util.BS','atNos','int[]']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getMolecules$org_jmol_util_NodeA$javajs_util_BSA$javajs_util_Lst$javajs_util_BS',  function (atoms, bsModelAtoms, biobranches, bsExclude) {
var bsToTest=null;
var bsBranch=Clazz_new_($I$(2,1));
var thisModelIndex=-1;
var indexInModel=0;
var moleculeCount=0;
var molecules=Clazz_array(C$, [4]);
if (bsExclude == null ) bsExclude=Clazz_new_($I$(2,1));
for (var i=0; i < atoms.length; i++) if (!bsExclude.get$I(i) && !bsBranch.get$I(i) ) {
var a=atoms[i];
if (a == null  || a.isDeleted$() ) {
bsExclude.set$I(i);
continue;
}var modelIndex=a.getModelIndex$();
if (modelIndex != thisModelIndex) {
thisModelIndex=modelIndex;
indexInModel=0;
bsToTest=bsModelAtoms[modelIndex];
}bsBranch=C$.getBranchBitSet$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_Lst$I$Z$Z(atoms, i, bsToTest, biobranches, -1, true, true);
if (bsBranch.nextSetBit$I(0) >= 0) {
molecules=C$.addMolecule$org_jmol_util_JmolMoleculeA$I$org_jmol_util_NodeA$I$javajs_util_BS$I$I$javajs_util_BS(molecules, moleculeCount++, atoms, i, bsBranch, modelIndex, indexInModel++, bsExclude);
}}
return C$.allocateArray$org_jmol_util_JmolMoleculeA$I(molecules, moleculeCount);
}, 1);

Clazz_newMeth(C$, 'getBranchBitSet$org_jmol_util_NodeA$I$javajs_util_BS$javajs_util_Lst$I$Z$Z',  function (atoms, atomIndex, bsToTest, biobranches, atomIndexNot, allowCyclic, allowBioResidue) {
var bs=$I$(2).newN$I(atoms.length);
if (atomIndex < 0) return bs;
if (atomIndexNot >= 0) bsToTest.clear$I(atomIndexNot);
return (C$.getCovalentlyConnectedBitSet$org_jmol_util_NodeA$org_jmol_util_Node$javajs_util_BS$Z$Z$javajs_util_Lst$javajs_util_BS$org_jmol_util_Node$org_jmol_util_Node(atoms, atoms[atomIndex], bsToTest, allowCyclic, allowBioResidue, biobranches, bs, null, null) ? bs : Clazz_new_($I$(2,1)));
}, 1);

Clazz_newMeth(C$, 'addMolecule$org_jmol_util_JmolMoleculeA$I$org_jmol_util_NodeA$I$javajs_util_BS$I$I$javajs_util_BS',  function (molecules, iMolecule, atoms, iAtom, bsBranch, modelIndex, indexInModel, bsExclude) {
bsExclude.or$javajs_util_BS(bsBranch);
if (iMolecule == molecules.length) molecules=C$.allocateArray$org_jmol_util_JmolMoleculeA$I(molecules, iMolecule * 2 + 1);
molecules[iMolecule]=C$.initialize$org_jmol_util_NodeA$I$I$javajs_util_BS$I$I(atoms, iMolecule, iAtom, bsBranch, modelIndex, indexInModel);
return molecules;
}, 1);

Clazz_newMeth(C$, 'getMolecularFormulaAtoms$org_jmol_util_NodeA$javajs_util_BS$DA$Z',  function (atoms, bsSelected, wts, isEmpirical) {
var m=Clazz_new_(C$);
m.nodes=atoms;
m.atomList=bsSelected;
return m.getMolecularFormula$Z$DA$Z(false, wts, isEmpirical);
}, 1);

Clazz_newMeth(C$, 'getMolecularFormula$Z$DA$Z',  function (includeMissingHydrogens, wts, isEmpirical) {
this.getMFArray$Z$DA$Z(includeMissingHydrogens, wts, isEmpirical);
if (this.elementCounts[0] < 0) return "?";
var mf="";
var sep="";
var nX;
for (var i=1; i <= this.elementNumberMax; i++) {
nX=this.elementCounts[i];
if (nX != 0) {
mf+=sep + $I$(1).elementSymbolFromNumber$I(i) + " " + nX ;
sep=" ";
}}
return mf;
});

Clazz_newMeth(C$, 'getMFArray$Z$DA$Z',  function (includeMissingHydrogens, wts, isEmpirical) {
if (this.atomList == null ) {
this.atomList=Clazz_new_($I$(2,1));
this.atomList.setBits$I$I(0, this.atNos == null  ? this.nodes.length : this.atNos.length);
}this.elementCounts=Clazz_array(Integer.TYPE, [$I$(1).elementNumberMax]);
this.altElementCounts=Clazz_array(Integer.TYPE, [$I$(1).altElementMax]);
this.ac=this.atomList.cardinality$();
this.nElements=0;
for (var p=0, i=this.atomList.nextSetBit$I(0); i >= 0; i=this.atomList.nextSetBit$I(i + 1), p++) {
var n;
var node=null;
if (this.atNos == null ) {
node=this.nodes[i];
if (node == null ) continue;
n=node.getAtomicAndIsotopeNumber$();
} else {
n=this.atNos[i];
}var f=(wts == null  ? 1 : ((8 * wts[p])|0));
if (n < $I$(1).elementNumberMax) {
if (this.elementCounts[n] == 0) ++this.nElements;
this.elementCounts[n]+=f;
this.elementNumberMax=Math.max(this.elementNumberMax, n);
} else {
n=$I$(1).altElementIndexFromNumber$I(n);
if (this.altElementCounts[n] == 0) ++this.nElements;
this.altElementCounts[n]+=f;
this.altElementMax=Math.max(this.altElementMax, n);
}if (includeMissingHydrogens) {
var nH=Math.max(0, node.getImplicitHydrogenCount$()) + Math.max(node.getExplicitHydrogenCount$(), 0);
if (nH > 0) {
if (this.elementCounts[1] == 0) ++this.nElements;
this.elementCounts[1]+=nH * f;
this.elementNumberMax=Math.max(this.elementNumberMax, 1);
}}}
if (wts != null ) for (var i=1; i <= this.elementNumberMax; i++) {
var c=(this.elementCounts[i]/8|0);
if (c * 8 != this.elementCounts[i]) {
this.elementCounts[0]=-1;
return this.elementCounts;
}this.elementCounts[i]=c;
}
if (isEmpirical) {
var min=2;
var ok=true;
while (ok){
min=100000;
var c;
for (var i=1; i <= this.elementNumberMax; i++) if ((c=this.elementCounts[i]) > 0 && c < min ) min=c;

if (min == 1) break;
var j=min;
for (; j > 1; j--) {
ok=true;
for (var i=1; i <= this.elementNumberMax && ok ; i++) if (((c=this.elementCounts[i])/j|0) * j != c) ok=false;

if (ok) {
for (var i=1; i <= this.elementNumberMax; i++) this.elementCounts[i]=(this.elementCounts[i]/(j)|0);

break;
}}
}
}return this.elementCounts;
});

Clazz_newMeth(C$, 'initialize$org_jmol_util_NodeA$I$I$javajs_util_BS$I$I',  function (nodes, moleculeIndex, firstAtomIndex, atomList, modelIndex, indexInModel) {
var jm=Clazz_new_(C$);
jm.nodes=nodes;
jm.firstAtomIndex=firstAtomIndex;
jm.atomList=atomList;
jm.ac=atomList.cardinality$();
jm.moleculeIndex=moleculeIndex;
jm.modelIndex=modelIndex;
jm.indexInModel=indexInModel;
return jm;
}, 1);

Clazz_newMeth(C$, 'getCovalentlyConnectedBitSet$org_jmol_util_NodeA$org_jmol_util_Node$javajs_util_BS$Z$Z$javajs_util_Lst$javajs_util_BS$org_jmol_util_Node$org_jmol_util_Node',  function (atoms, atom, bsToTest, allowCyclic, allowBioResidue, biobranches, bsResult, origAtom, prevAtom) {
var atomIndex=atom.getIndex$();
if (!bsToTest.get$I(atomIndex)) return allowCyclic;
if (!allowBioResidue && atom.getBioStructureTypeName$().length$() > 0 ) return allowCyclic;
bsToTest.clear$I(atomIndex);
if (biobranches != null  && !bsResult.get$I(atomIndex) ) {
for (var i=biobranches.size$(); --i >= 0; ) {
var b=biobranches.get$I(i);
if (b.get$I(atomIndex)) {
bsResult.or$javajs_util_BS(b);
bsToTest.andNot$javajs_util_BS(b);
for (var j=b.nextSetBit$I(0); j >= 0; j=b.nextSetBit$I(j + 1)) {
var atom1=atoms[j];
if (atom1 == null ) continue;
bsToTest.set$I(j);
C$.getCovalentlyConnectedBitSet$org_jmol_util_NodeA$org_jmol_util_Node$javajs_util_BS$Z$Z$javajs_util_Lst$javajs_util_BS$org_jmol_util_Node$org_jmol_util_Node(atoms, atom1, bsToTest, allowCyclic, allowBioResidue, biobranches, bsResult, origAtom, atom);
bsToTest.clear$I(j);
}
break;
}}
}bsResult.set$I(atomIndex);
var bonds=atom.getEdges$();
if (bonds == null ) return true;
for (var i=bonds.length; --i >= 0; ) {
var bond=bonds[i];
if (bond != null  && bond.isCovalent$() ) {
var n=bond.getOtherNode$org_jmol_util_SimpleNode(atom);
if (n === prevAtom ) continue;
if (n === origAtom ) return false;
if (!C$.getCovalentlyConnectedBitSet$org_jmol_util_NodeA$org_jmol_util_Node$javajs_util_BS$Z$Z$javajs_util_Lst$javajs_util_BS$org_jmol_util_Node$org_jmol_util_Node(atoms, n, bsToTest, allowCyclic, allowBioResidue, biobranches, bsResult, origAtom, atom)) return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'allocateArray$org_jmol_util_JmolMoleculeA$I',  function (molecules, len) {
return (len == molecules.length ? molecules : $I$(3).arrayCopyObject$O$I(molecules, len));
}, 1);

Clazz_newMeth(C$, 'getBitSetForMF$org_jmol_modelset_AtomA$javajs_util_BS$S',  function (at, bsAtoms, mf) {
var map=Clazz_new_($I$(4,1));
var ch;
var isDigit;
mf=$I$(5,"rep$S$S$S",[$I$(5).clean$S(mf + "Z"), " ", ""]);
for (var i=0, pt=0, pt0=0, n=mf.length$(); i < n; i++) {
if ((isDigit=Character.isDigit$C((ch=mf.charAt$I(i)))) || i > 0 && Character.isUpperCase$C(ch)  ) {
pt0=i;
var s=mf.substring$I$I(pt, pt0).trim$();
if (isDigit) while (i < n && Character.isDigit$C(mf.charAt$I(i)) )++i;

pt=i;
map.put$O$O(s, Clazz_array(Integer.TYPE, -1, [isDigit ? $I$(5,"parseInt$S",[mf.substring$I$I(pt0, pt)]) : 1]));
}}
var bs=Clazz_new_($I$(2,1));
for (var i=bsAtoms.nextSetBit$I(0); i >= 0; i=bsAtoms.nextSetBit$I(i + 1)) {
var a=at[i].getElementSymbol$();
var c=map.get$O(a);
if (c == null  || c[0]-- < 1 ) continue;
bs.set$I(i);
}
for (var e, $e = map.values$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) if (e[0] > 0) return Clazz_new_($I$(2,1));

return bs;
}, 1);

Clazz_newMeth(C$, 'getBranchesForInversion$org_jmol_util_NodeA$I$javajs_util_BS',  function (at, atomIndex, bsToTest) {
var bs=Clazz_new_($I$(2,1));
var a=at[atomIndex];
var bonds=a.getEdges$();
for (var i=a.getBondCount$(); --i >= 0; ) {
if (bonds[i].getBondType$() == 1) bs.set$I(bonds[i].getOtherNode$org_jmol_util_SimpleNode(a).getIndex$());
}
if (bs.cardinality$() < 2) {
bs.clearAll$();
} else {
for (var i=bs.nextSetBit$I(0); i >= 0; i=bs.nextSetBit$I(i + 1)) {
if (at[i].getCovalentBondCount$() == 1) continue;
var bs0=$I$(2).copy$javajs_util_BS(bsToTest);
bs0.clear$I(atomIndex);
var bs1=$I$(2).newN$I(at.length);
if (!C$.getCovalentlyConnectedBitSet$org_jmol_util_NodeA$org_jmol_util_Node$javajs_util_BS$Z$Z$javajs_util_Lst$javajs_util_BS$org_jmol_util_Node$org_jmol_util_Node(at, at[i], bs0, true, true, null, bs1, at[atomIndex], at[atomIndex])) {
bs.clear$I(i);
}}
}return bs;
}, 1);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-10 14:32:02 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[[0,'org.jmol.util.DefaultLogger','java.util.Hashtable']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Logger");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['Z',['_logLevel','debugging','debuggingHigh'],'O',['_logger','org.jmol.util.LoggerInterface','_activeLevels','boolean[]','htTiming','java.util.Map']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getProperty$S$Z',  function (level, defaultValue) {
try {
var property=System.getProperty$S$S("jmol.logger." + level, null);
if (property != null ) {
return (property.equalsIgnoreCase$S("true"));
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
return defaultValue;
}, 1);

Clazz_newMeth(C$, 'setLogger$org_jmol_util_LoggerInterface',  function (logger) {
C$._logger=logger;
C$.debugging=C$.isActiveLevel$I(5) || C$.isActiveLevel$I(6) ;
C$.debuggingHigh=(C$.debugging && C$._activeLevels[6] );
}, 1);

Clazz_newMeth(C$, 'isActiveLevel$I',  function (level) {
return C$._logger != null  && level >= 0  && level < 7  && C$._activeLevels[level] ;
}, 1);

Clazz_newMeth(C$, 'setActiveLevel$I$Z',  function (level, active) {
if (level < 0) level=0;
if (level >= 7) level=6;
C$._activeLevels[level]=active;
C$.debugging=C$.isActiveLevel$I(5) || C$.isActiveLevel$I(6) ;
C$.debuggingHigh=(C$.debugging && C$._activeLevels[6] );
}, 1);

Clazz_newMeth(C$, 'setLogLevel$I',  function (level) {
for (var i=7; --i >= 0; ) C$.setActiveLevel$I$Z(i, i <= level);

}, 1);

Clazz_newMeth(C$, 'getLevel$I',  function (level) {
switch (level) {
case 6:
return "DEBUGHIGH";
case 5:
return "DEBUG";
case 4:
return "INFO";
case 3:
return "WARN";
case 2:
return "ERROR";
case 1:
return "FATAL";
}
return "????";
}, 1);

Clazz_newMeth(C$, 'logLevel$',  function () {
return C$._logLevel;
}, 1);

Clazz_newMeth(C$, 'doLogLevel$Z',  function (log) {
C$._logLevel=log;
}, 1);

Clazz_newMeth(C$, 'debug$S',  function (txt) {
if (!C$.debugging) return;
try {
C$._logger.debug$S(txt);
} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'info$S',  function (txt) {
try {
if (C$.isActiveLevel$I(4)) {
C$._logger.info$S(txt);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'warn$S',  function (txt) {
try {
if (C$.isActiveLevel$I(3)) {
C$._logger.warn$S(txt);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'warnEx$S$Throwable',  function (txt, e) {
try {
if (C$.isActiveLevel$I(3)) {
C$._logger.warnEx$S$Throwable(txt, e);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'error$S',  function (txt) {
try {
if (C$.isActiveLevel$I(2)) {
C$._logger.error$S(txt);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'errorEx$S$Throwable',  function (txt, e) {
try {
if (C$.isActiveLevel$I(2)) {
C$._logger.errorEx$S$Throwable(txt, e);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'getLogLevel$',  function () {
for (var i=7; --i >= 0; ) if (C$.isActiveLevel$I(i)) return i;

return 0;
}, 1);

Clazz_newMeth(C$, 'fatal$S',  function (txt) {
try {
if (C$.isActiveLevel$I(1)) {
C$._logger.fatal$S(txt);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'fatalEx$S$Throwable',  function (txt, e) {
try {
if (C$.isActiveLevel$I(1)) {
C$._logger.fatalEx$S$Throwable(txt, e);
}} catch (t) {
}
}, 1);

Clazz_newMeth(C$, 'startTimer$S',  function (msg) {
if (msg != null ) C$.htTiming.put$O$O(msg, Long.valueOf$J(System.currentTimeMillis$()));
}, 1);

Clazz_newMeth(C$, 'getTimerMsg$S$I',  function (msg, time) {
if (time == 0) time=C$.getTimeFrom$S(msg);
return "Time for " + msg + ": " + (time) + " ms" ;
}, 1);

Clazz_newMeth(C$, 'getTimeFrom$S',  function (msg) {
var t;
return Long.$ival((msg == null  || (t=C$.htTiming.get$O(msg)) == null   ? -1 : Long.$sub(System.currentTimeMillis$(),t.longValue$())));
}, 1);

Clazz_newMeth(C$, 'checkTimer$S$Z',  function (msg, andReset) {
var time=C$.getTimeFrom$S(msg);
if (time >= 0 && !msg.startsWith$S("(") ) C$.info$S(C$.getTimerMsg$S$I(msg, time));
if (andReset) C$.startTimer$S(msg);
return time;
}, 1);

Clazz_newMeth(C$, 'checkMemory$',  function () {
var bTotal=0;
var bFree=0;
var bMax=0;

{}
C$.info$S("Memory: Total-Free=" + (Long.$s(Long.$sub(bTotal,bFree))) + "; Total=" + Long.$s(bTotal) + "; Free=" + Long.$s(bFree) + "; Max=" + Long.$s(bMax) );
}, 1);

C$.$static$=function(){C$.$static$=0;
C$._logger=Clazz_new_($I$(1,1));
C$._activeLevels=Clazz_array(Boolean.TYPE, [7]);
C$._logLevel=false;
{
C$._activeLevels[6]=C$.getProperty$S$Z("debugHigh", false);
C$._activeLevels[5]=C$.getProperty$S$Z("debug", false);
C$._activeLevels[4]=C$.getProperty$S$Z("info", true);
C$._activeLevels[3]=C$.getProperty$S$Z("warn", true);
C$._activeLevels[2]=C$.getProperty$S$Z("error", true);
C$._activeLevels[1]=C$.getProperty$S$Z("fatal", true);
C$._logLevel=C$.getProperty$S$Z("logLevel", false);
C$.debugging=(C$._logger != null  && (C$._activeLevels[5] || C$._activeLevels[6] ) );
C$.debuggingHigh=(C$.debugging && C$._activeLevels[6] );
};
C$.htTiming=Clazz_new_($I$(2,1));
};
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "LoggerInterface");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "Node", null, null, 'org.jmol.util.SimpleNode');

C$.$clinit$=2;
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-10 14:32:01 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "SimpleEdge");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("org.jmol.util"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "SimpleNode");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:21 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("sun.awt"),p$1={},I$=[[0,'java.util.HashSet','java.util.IdentityHashMap','java.awt.AWTEvent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AWTAutoShutdown", null, null, 'Runnable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.busyThreadSet=Clazz_new_($I$(1,1).c$$I,[7]);
this.toolkitThreadBusy=false;
this.peerMap=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['Z',['toolkitThreadBusy'],'O',['busyThreadSet','java.util.HashSet','peerMap','java.util.Map']]
,['O',['theInstance','sun.awt.AWTAutoShutdown']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getInstance$',  function () {
return (C$.theInstance == null  ? (C$.theInstance=Clazz_new_(C$)) : C$.theInstance);
}, 1);

Clazz_newMeth(C$, 'notifyToolkitThreadBusy$',  function () {
p$1.setToolkitBusy$Z.apply(C$.getInstance$(), [true]);
}, 1);

Clazz_newMeth(C$, 'notifyToolkitThreadFree$',  function () {
p$1.setToolkitBusy$Z.apply(C$.getInstance$(), [false]);
}, 1);

Clazz_newMeth(C$, 'notifyThreadBusy$Thread',  function (thread) {
this.busyThreadSet.add$O(thread);
});

Clazz_newMeth(C$, 'notifyThreadFree$Thread',  function (thread) {
this.busyThreadSet.remove$O(thread);
});

Clazz_newMeth(C$, 'notifyPeerMapUpdated$',  function () {
if (!p$1.isReadyToShutdown.apply(this, [])) {
p$1.activateBlockerThread.apply(this, []);
}});

Clazz_newMeth(C$, 'isReadyToShutdown',  function () {
return (!this.toolkitThreadBusy && this.peerMap.isEmpty$() && this.busyThreadSet.isEmpty$()  );
}, p$1);

Clazz_newMeth(C$, 'setToolkitBusy$Z',  function (busy) {
if (busy != this.toolkitThreadBusy ) {
if (busy != this.toolkitThreadBusy ) {
if (busy) {
this.toolkitThreadBusy=busy;
} else {
this.toolkitThreadBusy=busy;
}}}}, p$1);

Clazz_newMeth(C$, 'run$',  function () {
});

Clazz_newMeth(C$, 'getShutdownEvent$',  function () {
return ((P$.AWTAutoShutdown$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "AWTAutoShutdown$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('java.awt.AWTEvent'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
})()
), Clazz_new_([this, null, C$.getInstance$(), 0],$I$(3,1).c$$O$I,P$.AWTAutoShutdown$1));
}, 1);

Clazz_newMeth(C$, 'activateBlockerThread',  function () {
}, p$1);

Clazz_newMeth(C$, 'registerPeer$O$O',  function (target, peer) {
this.peerMap.put$O$O(target, peer);
this.notifyPeerMapUpdated$();
});

Clazz_newMeth(C$, 'unregisterPeer$O$O',  function (target, peer) {
if (this.peerMap.get$O(target) === peer ) {
this.peerMap.remove$O(target);
}});

Clazz_newMeth(C$, 'getPeer$O',  function (target) {
return this.peerMap.get$O(target);
});

Clazz_newMeth(C$, 'dumpPeers$java_util_logging_Logger',  function (aLog) {
aLog.fine$S("Mapped peers:");
for (var key, $key = this.peerMap.keySet$().iterator$(); $key.hasNext$()&&((key=($key.next$())),1);) {
aLog.fine$S(key + "->" + this.peerMap.get$O(key) );
}
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),p$1={},I$=[[0,'java.util.HashMap','java.util.HashSet','swingjs.JSUtil','Thread','sun.awt.SunToolkit','sun.awt.MostRecentThreadAppContext','sun.awt.MostRecentKeyValue','java.beans.PropertyChangeListener','java.beans.PropertyChangeSupport']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "AppContext");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.table=Clazz_new_($I$(1,1));
this.changeSupport=null;
this.isDisposed=false;
this.mostRecentKeyValue=null;
this.shadowMostRecentKeyValue=null;
},1);

C$.$fields$=[['Z',['isDisposed'],'O',['table','java.util.HashMap','threadGroup','ThreadGroup','changeSupport','java.beans.PropertyChangeSupport','contextClassLoader','ClassLoader','mostRecentKeyValue','sun.awt.MostRecentKeyValue','+shadowMostRecentKeyValue']]
,['I',['numAppContexts'],'O',['threadGroup2appContext','java.util.Map','mostRecentThreadAppContext','sun.awt.MostRecentThreadAppContext']]]

Clazz_newMeth(C$, 'getAppContexts$',  function () {
return Clazz_new_([C$.threadGroup2appContext.values$()],$I$(2,1).c$$java_util_Collection);
}, 1);

Clazz_newMeth(C$, 'isDisposed$',  function () {
return this.isDisposed;
});

Clazz_newMeth(C$, 'c$$ThreadGroup',  function (threadGroup) {
;C$.$init$.apply(this);
++C$.numAppContexts;
this.threadGroup=threadGroup;
C$.threadGroup2appContext.put$O$O($I$(3).getJSID$O(threadGroup), this);
this.contextClassLoader=this ||null;
}, 1);

Clazz_newMeth(C$, 'getAppContext$',  function () {
var currentThread=$I$(4).currentThread$();
var appContext=null;
var recent=C$.mostRecentThreadAppContext;
if ((recent != null ) && (recent.thread === currentThread ) ) {
appContext=recent.appContext;
} else {
var currentThreadGroup=currentThread.getThreadGroup$();
var threadGroup=currentThreadGroup;
appContext=C$.threadGroup2appContext.get$O($I$(3).getJSID$O(threadGroup));
while (appContext == null ){
threadGroup=threadGroup.getParent$();
if (threadGroup == null ) {
appContext=$I$(5).createNewAppContext$();
break;
}appContext=C$.threadGroup2appContext.get$O($I$(3).getJSID$O(threadGroup));
}
for (var tg=currentThreadGroup; tg !== threadGroup ; tg=tg.getParent$()) {
C$.threadGroup2appContext.put$O$O($I$(3).getJSID$O(tg), appContext);
}
C$.mostRecentThreadAppContext=Clazz_new_($I$(6,1).c$$Thread$sun_awt_AppContext,[currentThread, appContext]);
}return appContext;
}, 1);

Clazz_newMeth(C$, 'isMainContext$sun_awt_AppContext',  function (ctx) {
return false;
}, 1);

Clazz_newMeth(C$, 'dispose$',  function () {
});

Clazz_newMeth(C$, 'get$O',  function (key) {
key=p$1.秘fixKey$O.apply(this, [key]);
{
var recent=this.mostRecentKeyValue;
if ((recent != null ) && (recent.key === key ) ) {
return recent.value;
}var value=this.table.get$O(key);
if (this.mostRecentKeyValue == null ) {
this.mostRecentKeyValue=Clazz_new_($I$(7,1).c$$O$O,[key, value]);
this.shadowMostRecentKeyValue=Clazz_new_($I$(7,1).c$$O$O,[key, value]);
} else {
var auxKeyValue=this.mostRecentKeyValue;
this.shadowMostRecentKeyValue.setPair$O$O(key, value);
this.mostRecentKeyValue=this.shadowMostRecentKeyValue;
this.shadowMostRecentKeyValue=auxKeyValue;
}return value;
}});

Clazz_newMeth(C$, '秘fixKey$O',  function (key) {
return $I$(3).getJSID$O(key);
}, p$1);

Clazz_newMeth(C$, 'put$O$O',  function (key, value) {
key=p$1.秘fixKey$O.apply(this, [key]);
{
var recent=this.mostRecentKeyValue;
if ((recent != null ) && (recent.key === key ) ) recent.value=value;
return this.table.put$O$O(key, value);
}});

Clazz_newMeth(C$, 'remove$O',  function (key) {
key=p$1.秘fixKey$O.apply(this, [key]);
{
var recent=this.mostRecentKeyValue;
if ((recent != null ) && (recent.key === key ) ) recent.value=null;
return this.table.remove$O(key);
}});

Clazz_newMeth(C$, 'getThreadGroup$',  function () {
return this.threadGroup;
});

Clazz_newMeth(C$, 'getContextClassLoader$',  function () {
return this.contextClassLoader;
});

Clazz_newMeth(C$, 'toString',  function () {
return this.getClass$().getName$() + "[threadGroup=" + this.threadGroup.getName$() + "]" ;
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$',  function () {
if (this.changeSupport == null ) {
return Clazz_array($I$(8), [0]);
}return this.changeSupport.getPropertyChangeListeners$();
});

Clazz_newMeth(C$, 'addPropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
if (listener == null ) {
return;
}if (this.changeSupport == null ) {
this.changeSupport=Clazz_new_($I$(9,1).c$$O,[this]);
}this.changeSupport.addPropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
});

Clazz_newMeth(C$, 'removePropertyChangeListener$S$java_beans_PropertyChangeListener',  function (propertyName, listener) {
if (listener == null  || this.changeSupport == null  ) {
return;
}this.changeSupport.removePropertyChangeListener$S$java_beans_PropertyChangeListener(propertyName, listener);
});

Clazz_newMeth(C$, 'getPropertyChangeListeners$S',  function (propertyName) {
if (this.changeSupport == null ) {
return Clazz_array($I$(8), [0]);
}return this.changeSupport.getPropertyChangeListeners$S(propertyName);
});

C$.$static$=function(){C$.$static$=0;
C$.threadGroup2appContext=Clazz_new_($I$(1,1));
C$.numAppContexts=0;
C$.mostRecentThreadAppContext=null;
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[[0,['sun.awt.CausedFocusEvent','.Cause']]],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "CausedFocusEvent", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.event.FocusEvent');
C$.$classes$=[['Cause',25]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['cause','sun.awt.CausedFocusEvent.Cause']]]

Clazz_newMeth(C$, 'getCause$',  function () {
return this.cause;
});

Clazz_newMeth(C$, 'toString',  function () {
return "java.awt.FocusEvent[" + C$.superclazz.prototype.paramString$.apply(this, []) + ",cause=" + this.cause + "] on " + this.getSource$() ;
});

Clazz_newMeth(C$, 'c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause',  function (source, id, temporary, opposite, cause) {
;C$.superclazz.c$$java_awt_Component$I$Z$java_awt_Component.apply(this,[source, id, temporary, opposite]);C$.$init$.apply(this);
if (cause == null ) {
cause=$I$(1).UNKNOWN;
}this.cause=cause;
}, 1);

Clazz_newMeth(C$, 'retarget$java_awt_event_FocusEvent$java_awt_Component',  function (e, newSource) {
if (e == null ) return null;
return Clazz_new_(C$.c$$java_awt_Component$I$Z$java_awt_Component$sun_awt_CausedFocusEvent_Cause,[newSource, e.getID$(), e.isTemporary$(), e.getOppositeComponent$(), (Clazz_instanceOf(e, "sun.awt.CausedFocusEvent")) ? (e).getCause$() : $I$(1).RETARGETED]);
}, 1);
;
(function(){/*e*/var C$=Clazz_newClass(P$.CausedFocusEvent, "Cause", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "UNKNOWN", 0, []);
Clazz_newEnumConst($vals, C$.c$, "MOUSE_EVENT", 1, []);
Clazz_newEnumConst($vals, C$.c$, "TRAVERSAL", 2, []);
Clazz_newEnumConst($vals, C$.c$, "TRAVERSAL_UP", 3, []);
Clazz_newEnumConst($vals, C$.c$, "TRAVERSAL_DOWN", 4, []);
Clazz_newEnumConst($vals, C$.c$, "TRAVERSAL_FORWARD", 5, []);
Clazz_newEnumConst($vals, C$.c$, "TRAVERSAL_BACKWARD", 6, []);
Clazz_newEnumConst($vals, C$.c$, "MANUAL_REQUEST", 7, []);
Clazz_newEnumConst($vals, C$.c$, "AUTOMATIC_TRAVERSE", 8, []);
Clazz_newEnumConst($vals, C$.c$, "ROLLBACK", 9, []);
Clazz_newEnumConst($vals, C$.c$, "NATIVE_SYSTEM", 10, []);
Clazz_newEnumConst($vals, C$.c$, "ACTIVATION", 11, []);
Clazz_newEnumConst($vals, C$.c$, "CLEAR_GLOBAL_FOCUS_OWNER", 12, []);
Clazz_newEnumConst($vals, C$.c$, "RETARGETED", 13, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "ComponentFactory");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "EventQueueItem");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['event','java.awt.AWTEvent','next','sun.awt.EventQueueItem']]]

Clazz_newMeth(C$, 'c$$java_awt_AWTEvent',  function (evt) {
;C$.$init$.apply(this);
this.event=evt;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "MostRecentKeyValue");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['key','java.lang.Object','+value']]]

Clazz_newMeth(C$, 'c$$O$O',  function (k, v) {
;C$.$init$.apply(this);
this.key=k;
this.value=v;
}, 1);

Clazz_newMeth(C$, 'setPair$O$O',  function (k, v) {
this.key=k;
this.value=v;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "MostRecentThreadAppContext");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['thread','Thread','appContext','sun.awt.AppContext']]]

Clazz_newMeth(C$, 'c$$Thread$sun_awt_AppContext',  function (key, value) {
;C$.$init$.apply(this);
this.thread=key;
this.appContext=value;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[[0,'java.awt.event.PaintEvent','java.awt.Rectangle']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PaintEventDispatcher");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['dispatcher','sun.awt.PaintEventDispatcher']]]

Clazz_newMeth(C$, 'setPaintEventDispatcher$sun_awt_PaintEventDispatcher',  function (dispatcher) {
{
C$.dispatcher=dispatcher;
}}, 1);

Clazz_newMeth(C$, 'getPaintEventDispatcher$',  function () {
{
if (C$.dispatcher == null ) {
C$.dispatcher=Clazz_new_(C$);
}return C$.dispatcher;
}}, 1);

Clazz_newMeth(C$, 'createPaintEvent$java_awt_Component$I$I$I$I',  function (target, x, y, w, h) {
return Clazz_new_([target, 800, Clazz_new_($I$(2,1).c$$I$I$I$I,[x, y, w, h])],$I$(1,1).c$$java_awt_Component$I$java_awt_Rectangle);
});

Clazz_newMeth(C$, 'shouldDoNativeBackgroundErase$java_awt_Component',  function (c) {
return true;
});

Clazz_newMeth(C$, 'queueSurfaceDataReplacing$java_awt_Component$Runnable',  function (c, r) {
return false;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[[0,'sun.awt.EventQueueItem','sun.awt.SunToolkit']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "PostEventQueue");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.queueHead=null;
this.queueTail=null;
},1);

C$.$fields$=[['O',['queueHead','sun.awt.EventQueueItem','+queueTail','eventQueue','java.awt.EventQueue']]]

Clazz_newMeth(C$, 'c$$java_awt_EventQueue',  function (eq) {
;C$.$init$.apply(this);
this.eventQueue=eq;
}, 1);

Clazz_newMeth(C$, 'noEvents$',  function () {
return this.queueHead == null ;
});

Clazz_newMeth(C$, 'flush$',  function () {
if (this.queueHead != null ) {
var tempQueue;
{
tempQueue=this.queueHead;
this.queueHead=this.queueTail=null;
while (tempQueue != null ){
this.eventQueue.postEvent$java_awt_AWTEvent(tempQueue.event);
tempQueue=tempQueue.next;
}
}}});

Clazz_newMeth(C$, 'postEvent$java_awt_AWTEvent',  function (event) {
var item=Clazz_new_($I$(1,1).c$$java_awt_AWTEvent,[event]);
{
if (this.queueHead == null ) {
this.queueHead=this.queueTail=item;
} else {
this.queueTail.next=item;
this.queueTail=item;
}}$I$(2).wakeupEventQueue$java_awt_EventQueue$Z(this.eventQueue, false);
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "RequestFocusController");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[[0,'java.awt.JSComponent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SunGraphicsCallback", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['PaintHeavyweightComponentsCallback',25]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'constrainGraphics$java_awt_Graphics$java_awt_Rectangle',  function (g, bounds) {
g.clipRect$I$I$I$I(0, 0, bounds.width, bounds.height);
});

Clazz_newMeth(C$, 'runOneComponent$java_awt_Component$java_awt_Rectangle$java_awt_Graphics$java_awt_Shape$I',  function (comp, bounds, g, clip, weightFlags) {
if (comp == null  || !comp.isVisible$() ) {
return;
}var lightweight=true;
if ((lightweight && (weightFlags & 2) == 0 ) || (!lightweight && (weightFlags & 1) == 0 ) ) {
return;
}if (bounds == null ) {
bounds=comp.getBounds$();
}if (clip == null  || clip.intersects$java_awt_geom_Rectangle2D(bounds) ) {
var cg=g.create$();
try {
cg.setFont$java_awt_Font(comp.getFont$());
cg.setColor$java_awt_Color(comp.getForeground$());
if (Clazz_instanceOf(cg, "java.awt.Graphics2D")) {
(cg).setBackground$java_awt_Color(comp.getBackground$());
} else if (Clazz_instanceOf(cg, "sun.awt.Graphics2Delegate")) {
(cg).setBackground$java_awt_Color(comp.getBackground$());
}this.run$java_awt_Component$java_awt_Graphics(comp, cg);
} finally {
cg.dispose$();
}
}});

Clazz_newMeth(C$, 'runComponents$I$java_awt_ComponentA$java_awt_Graphics$I',  function (n, comps, g, weightFlags) {
var ncomponents=comps.length;
var clip=g.getClip$();
for (var i=ncomponents - 1; i >= 0; i--) {
this.runOneComponent$java_awt_Component$java_awt_Rectangle$java_awt_Graphics$java_awt_Shape$I(comps[i], null, g, clip, weightFlags);
}
});
;
(function(){/*c*/var C$=Clazz_newClass(P$.SunGraphicsCallback, "PaintHeavyweightComponentsCallback", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'sun.awt.SunGraphicsCallback');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['instance','sun.awt.SunGraphicsCallback.PaintHeavyweightComponentsCallback']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'run$java_awt_Component$java_awt_Graphics',  function (comp, cg) {
if (!comp.isLightweight$()) {
comp.paintAll$java_awt_Graphics(cg);
} else if (Clazz_instanceOf(comp, "java.awt.Container")) {
this.runComponents$I$java_awt_ComponentA$java_awt_Graphics$I((comp).getComponentCount$(), $I$(1).秘getChildArray$java_awt_Container(comp), cg, 3);
}});

Clazz_newMeth(C$, 'getInstance$',  function () {
return C$.instance;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.instance=Clazz_new_(C$);
};
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt"),I$=[[0,'java.util.HashMap','java.awt.EventQueue','sun.awt.AppContext','sun.awt.PostEventQueue','Thread','sun.awt.AWTAutoShutdown','sun.awt.PeerEvent','java.awt.Toolkit','java.awt.Dimension','sun.font.FontDesignMetrics','java.util.Locale']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SunToolkit", null, 'java.awt.Toolkit', 'sun.awt.ComponentFactory');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.windowClosingListener=null;
},1);

C$.$fields$=[['O',['windowClosingListener','sun.awt.WindowClosingListener']]
,['S',['dataTransfererClassName'],'O',['appContextMap','java.util.Map','imgCache','java.util.HashMap','startupLocale','java.util.Locale']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
var eventQueue;
eventQueue=Clazz_new_($I$(2,1));
var appContext=$I$(3).getAppContext$();
if (appContext != null ) {
appContext.put$O$O("AppContext_EVENT_QUEUE_KEY", eventQueue);
var postEventQueue=Clazz_new_($I$(4,1).c$$java_awt_EventQueue,[eventQueue]);
appContext.put$O$O("PostEventQueue", postEventQueue);
}}, 1);

Clazz_newMeth(C$, 'useBufferPerWindow$',  function () {
return false;
});

Clazz_newMeth(C$, 'createNewAppContext$',  function () {
var threadGroup=$I$(5).currentThread$().getThreadGroup$();
return C$.createNewAppContext$ThreadGroup(threadGroup);
}, 1);

Clazz_newMeth(C$, 'createNewAppContext$ThreadGroup',  function (threadGroup) {
var eventQueue;
var eqName=System.getProperty$S$S("AWT.EventQueueClass", "java.awt.EventQueue");
try {
eventQueue=Clazz_forName(eqName).newInstance$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.err.println$S("Failed loading " + eqName + ": " + e );
eventQueue=Clazz_new_($I$(2,1));
} else {
throw e;
}
}
var appContext=Clazz_new_($I$(3,1).c$$ThreadGroup,[threadGroup]);
appContext.put$O$O("AppContext_EVENT_QUEUE_KEY", eventQueue);
var postEventQueue=Clazz_new_($I$(4,1).c$$java_awt_EventQueue,[eventQueue]);
appContext.put$O$O("PostEventQueue", postEventQueue);
return appContext;
}, 1);

Clazz_newMeth(C$, 'wakeupEventQueue$java_awt_EventQueue$Z',  function (q, isShutdown) {
q.wakeup$Z(isShutdown);
}, 1);

Clazz_newMeth(C$, 'targetToPeer$O',  function (target) {
if (target != null ) {
return $I$(6).getInstance$().getPeer$O(target);
}return null;
}, 1);

Clazz_newMeth(C$, 'targetCreatedPeer$O$O',  function (target, peer) {
if (target != null  && peer != null  ) {
$I$(6).getInstance$().registerPeer$O$O(target, peer);
}}, 1);

Clazz_newMeth(C$, 'targetDisposedPeer$O$O',  function (target, peer) {
if (target != null  && peer != null  ) {
$I$(6).getInstance$().unregisterPeer$O$O(target, peer);
}}, 1);

Clazz_newMeth(C$, 'setAppContext$O$sun_awt_AppContext',  function (target, context) {
return false;
}, 1);

Clazz_newMeth(C$, 'getAppContext$O',  function (target) {
if (Clazz_instanceOf(target, "java.awt.Component")) {
{
return target.appContext;
}
} else {
return null;
}}, 1);

Clazz_newMeth(C$, 'targetToAppContext$O',  function (target) {
if (target == null ) {
return null;
}var context=C$.getAppContext$O(target);
if (context == null ) {
context=C$.appContextMap.get$O(target);
}return context;
}, 1);

Clazz_newMeth(C$, 'setLWRequestStatus$java_awt_Window$Z',  function (changed, status) {
changed.setLWRequestStatus$Z(status);
}, 1);

Clazz_newMeth(C$, 'checkAndSetPolicy$java_awt_Container$Z',  function (cont, isSwingCont) {
}, 1);

Clazz_newMeth(C$, 'insertTargetMapping$O$sun_awt_AppContext',  function (target, appContext) {
if (!C$.setAppContext$O$sun_awt_AppContext(target, appContext)) {
C$.appContextMap.put$O$O(target, appContext);
}}, 1);

Clazz_newMeth(C$, 'postEvent$sun_awt_AppContext$java_awt_AWTEvent',  function (appContext, event) {
if (event == null ) {
throw Clazz_new_(Clazz_load('NullPointerException'));
}var postEventQueue=appContext.get$O("PostEventQueue");
if (postEventQueue != null ) {
postEventQueue.postEvent$java_awt_AWTEvent(event);
}}, 1);

Clazz_newMeth(C$, 'postPriorityEvent$java_awt_AWTEvent',  function (e) {
var pe=Clazz_new_([$I$(8).getDefaultToolkit$(), ((P$.SunToolkit$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "SunToolkit$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
this.$finals$.e.setPosted$();
(this.$finals$.e.getSource$()).dispatchEvent$java_awt_AWTEvent(this.$finals$.e);
});
})()
), Clazz_new_(P$.SunToolkit$1.$init$,[this, {e:e}])), 2],$I$(7,1).c$$O$Runnable$J);
C$.postEvent$sun_awt_AppContext$java_awt_AWTEvent(C$.targetToAppContext$O(e.getSource$()), pe);
}, 1);

Clazz_newMeth(C$, 'flushPendingEvents$',  function () {
var appContext=$I$(3).getAppContext$();
var postEventQueue=appContext.get$O("PostEventQueue");
if (postEventQueue != null ) {
postEventQueue.flush$();
}}, 1);

Clazz_newMeth(C$, 'isPostEventQueueEmpty$',  function () {
var appContext=$I$(3).getAppContext$();
var postEventQueue=appContext.get$O("PostEventQueue");
return (postEventQueue == null  || postEventQueue.noEvents$() );
}, 1);

Clazz_newMeth(C$, 'executeOnEventHandlerThread$O$Runnable',  function (target, runnable) {
C$.executeOnEventHandlerThread$sun_awt_PeerEvent(Clazz_new_($I$(7,1).c$$O$Runnable$J,[target, runnable, 1]));
}, 1);

Clazz_newMeth(C$, 'executeOnEventHandlerThread$O$Runnable$J',  function (target, runnable, when) {
C$.executeOnEventHandlerThread$sun_awt_PeerEvent(((P$.SunToolkit$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "SunToolkit$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('sun.awt.PeerEvent'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getWhen$',  function () {
return this.$finals$.when;
});
})()
), Clazz_new_($I$(7,1).c$$O$Runnable$J,[this, {when:when}, target, runnable, 1],P$.SunToolkit$2)));
}, 1);

Clazz_newMeth(C$, 'executeOnEventHandlerThread$sun_awt_PeerEvent',  function (peerEvent) {
C$.postEvent$sun_awt_AppContext$java_awt_AWTEvent(C$.targetToAppContext$O(peerEvent.getSource$()), peerEvent);
}, 1);

Clazz_newMeth(C$, 'invokeLaterOnAppContext$sun_awt_AppContext$Runnable',  function (appContext, dispatcher) {
C$.postEvent$sun_awt_AppContext$java_awt_AWTEvent(appContext, Clazz_new_([$I$(8).getDefaultToolkit$(), dispatcher, 1],$I$(7,1).c$$O$Runnable$J));
}, 1);

Clazz_newMeth(C$, 'isDispatchThreadForAppContext$O',  function (target) {
var appContext=C$.targetToAppContext$O(target);
var eq=appContext.get$O("AppContext_EVENT_QUEUE_KEY");
return $I$(2).isDispatchThread$();
}, 1);

Clazz_newMeth(C$, 'getScreenSize$',  function () {
return Clazz_new_([this.getScreenWidth$(), this.getScreenHeight$()],$I$(9,1).c$$I$I);
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (font) {
return $I$(10).getMetrics$java_awt_Font(font);
});

Clazz_newMeth(C$, 'getFontList$',  function () {
var hardwiredFontList=Clazz_array(String, -1, ["Dialog", "SansSerif", "Serif", "Monospaced", "DialogInput"]);
return hardwiredFontList;
});

Clazz_newMeth(C$, 'createPanel$java_awt_Panel',  function (target) {
return this.createComponent$java_awt_Component(target);
});

Clazz_newMeth(C$, 'disableBackgroundErase$java_awt_Component',  function (component) {
component.setBackgroundEraseDisabled$Z(true);
});

Clazz_newMeth(C$, 'getSunAwtNoerasebackground$',  function () {
return false;
}, 1);

Clazz_newMeth(C$, 'getSunAwtErasebackgroundonresize$',  function () {
return true;
}, 1);

Clazz_newMeth(C$, 'setOverrideRedirect$java_awt_Window',  function (target) {
});

Clazz_newMeth(C$, 'getImageFromHash$java_awt_Toolkit$java_net_URL',  function (tk, url) {
var img=C$.imgCache.get$O(url);
if (img == null ) {
try {
img=tk.createImage$java_net_URL(url);
C$.imgCache.put$O$O(url, img);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
}return img;
}, 1);

Clazz_newMeth(C$, 'getImageFromHash$java_awt_Toolkit$S',  function (tk, filename) {
var img=C$.imgCache.get$O(filename);
if (img == null ) {
try {
tk.createImage$S(filename);
C$.imgCache.put$O$O(filename, img);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
}return img;
}, 1);

Clazz_newMeth(C$, 'getImage$S',  function (filename) {
return C$.getImageFromHash$java_awt_Toolkit$S(this, filename);
});

Clazz_newMeth(C$, 'getImage$java_net_URL',  function (url) {
return C$.getImageFromHash$java_awt_Toolkit$java_net_URL(this, url);
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (img, w, h, o) {
return 0;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (img, w, h, o) {
if (w == 0 || h == 0 ) {
return true;
}return true;
});

Clazz_newMeth(C$, 'getSystemEventQueueImpl$',  function () {
return C$.getSystemEventQueueImplPP$sun_awt_AppContext($I$(3).getAppContext$());
});

Clazz_newMeth(C$, 'getSystemEventQueueImplPPS$',  function () {
return C$.getSystemEventQueueImplPP$sun_awt_AppContext($I$(3).getAppContext$());
}, 1);

Clazz_newMeth(C$, 'getSystemEventQueueImplPP$sun_awt_AppContext',  function (appContext) {
var theEventQueue=appContext.get$O("AppContext_EVENT_QUEUE_KEY");
return theEventQueue;
}, 1);

Clazz_newMeth(C$, 'getNativeContainer$java_awt_Component',  function (c) {
return $I$(8).getNativeContainer$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'getFocusAcceleratorKeyMask$',  function () {
return 8;
});

Clazz_newMeth(C$, 'enableInputMethodsForTextComponent$',  function () {
return false;
});

Clazz_newMeth(C$, 'getStartupLocale$',  function () {
if (C$.startupLocale == null ) {
C$.startupLocale=$I$(11).US;


}return C$.startupLocale;
}, 1);

Clazz_newMeth(C$, 'getDefaultKeyboardLocale$',  function () {
return C$.getStartupLocale$();
});

Clazz_newMeth(C$, 'setDataTransfererClassName$S',  function (className) {
C$.dataTransfererClassName=className;
}, 1);

Clazz_newMeth(C$, 'getDataTransfererClassName$',  function () {
if (C$.dataTransfererClassName == null ) {
$I$(8).getDefaultToolkit$();
}return C$.dataTransfererClassName;
}, 1);

Clazz_newMeth(C$, 'getWindowClosingListener$',  function () {
return this.windowClosingListener;
});

Clazz_newMeth(C$, 'setWindowClosingListener$sun_awt_WindowClosingListener',  function (wcl) {
this.windowClosingListener=wcl;
});

Clazz_newMeth(C$, 'windowClosingNotify$java_awt_event_WindowEvent',  function (event) {
if (this.windowClosingListener != null ) {
return this.windowClosingListener.windowClosingNotify$java_awt_event_WindowEvent(event);
} else {
return null;
}});

Clazz_newMeth(C$, 'windowClosingDelivered$java_awt_event_WindowEvent',  function (event) {
if (this.windowClosingListener != null ) {
return this.windowClosingListener.windowClosingDelivered$java_awt_event_WindowEvent(event);
} else {
return null;
}});

Clazz_newMeth(C$, 'isModalExcluded$java_awt_Window',  function (window) {
return true;
}, 1);

Clazz_newMeth(C$, 'getDesktopAAHints$',  function () {
return null;
});

Clazz_newMeth(C$, 'getContainingWindow$java_awt_Component',  function (comp) {
while (comp != null  && !comp.isWindowOrJSApplet$() ){
comp=comp.getParent$();
}
return comp;
}, 1);

Clazz_newMeth(C$, 'isNativeGTKAvailable$',  function () {
return false;
});

Clazz_newMeth(C$, 'isWindowOpacitySupported$',  function () {
return false;
});

Clazz_newMeth(C$, 'isWindowShapingSupported$',  function () {
return false;
});

Clazz_newMeth(C$, 'isWindowTranslucencySupported$',  function () {
return false;
});

Clazz_newMeth(C$, 'isTranslucencyCapable$java_awt_GraphicsConfiguration',  function (gc) {
return false;
});

Clazz_newMeth(C$, 'needUpdateWindow$',  function () {
return false;
});

C$.$static$=function(){C$.$static$=0;
C$.appContextMap=Clazz_new_($I$(1,1));
C$.imgCache=Clazz_new_($I$(1,1));
C$.startupLocale=null;
C$.dataTransfererClassName=null;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:29 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt.image"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "DataStealer");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:30 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt.image"),p$1={},I$=[[0,'java.awt.Rectangle','sun.awt.image.SunWritableRaster','java.awt.Point']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "IntegerComponentRaster", null, 'sun.awt.image.SunWritableRaster');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['bandOffset','scanlineStride','pixelStride','numDataElems','type','maxX','maxY'],'O',['dataOffsets','int[]','+data']]]

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_Point',  function (sampleModel, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerComponentRaster.apply(this, [sampleModel, sampleModel.createDataBuffer$(), Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(1,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sampleModel, dataBuffer, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerComponentRaster.apply(this, [sampleModel, dataBuffer, Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(1,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerComponentRaster',  function (sampleModel, dataBuffer, aRegion, origin, parent) {
;C$.superclazz.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster.apply(this,[sampleModel, dataBuffer, aRegion, origin, parent]);C$.$init$.apply(this);
this.maxX=this.minX + this.width;
this.maxY=this.minY + this.height;
if (!(Clazz_instanceOf(dataBuffer, "java.awt.image.DataBufferInt"))) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["IntegerComponentRasters must haveinteger DataBuffers"]);
}var dbi=dataBuffer;
if (dbi.getNumBanks$() != 1) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["DataBuffer for IntegerComponentRasters must only have 1 bank."]);
}this.data=$I$(2).stealData$java_awt_image_DataBufferInt$I(dbi, 0);
if (Clazz_instanceOf(sampleModel, "java.awt.image.SinglePixelPackedSampleModel")) {
var sppsm=sampleModel;
var boffsets=sppsm.getBitOffsets$();
var notByteBoundary=false;
for (var i=1; i < boffsets.length; i++) {
if ((boffsets[i] % 8) != 0) {
notByteBoundary=true;
}}
this.type=(notByteBoundary ? 9 : 10);
this.scanlineStride=sppsm.getScanlineStride$();
this.pixelStride=1;
this.dataOffsets=Clazz_array(Integer.TYPE, [1]);
this.dataOffsets[0]=dbi.getOffset$();
this.bandOffset=this.dataOffsets[0];
var xOffset=aRegion.x - origin.x;
var yOffset=aRegion.y - origin.y;
this.dataOffsets[0]+=xOffset + yOffset * this.scanlineStride;
this.numDataElems=sppsm.getNumDataElements$();
} else {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["IntegerComponentRasters must have SinglePixelPackedSampleModel"]);
}this.verify$();
}, 1);

Clazz_newMeth(C$, 'getDataOffsets$',  function () {
return this.dataOffsets.clone$();
});

Clazz_newMeth(C$, 'getDataOffset$I',  function (band) {
return this.dataOffsets[band];
});

Clazz_newMeth(C$, 'getScanlineStride$',  function () {
return this.scanlineStride;
});

Clazz_newMeth(C$, 'getPixelStride$',  function () {
return this.pixelStride;
});

Clazz_newMeth(C$, 'getDataStorage$',  function () {
this.dataBuffer.秘checkImage$();
return this.data;
});

Clazz_newMeth(C$, 'getDataElements$I$I$O',  function (x, y, obj) {
if ((x < this.minX) || (y < this.minY) || (x >= this.maxX) || (y >= this.maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var outData;
if (obj == null ) {
outData=Clazz_array(Integer.TYPE, [this.numDataElements]);
} else {
outData=obj;
}var off=(y - this.minY) * this.scanlineStride + (x - this.minX) * this.pixelStride;
for (var band=0; band < this.numDataElements; band++) {
outData[band]=this.data[this.dataOffsets[band] + off];
}
return outData;
});

Clazz_newMeth(C$, 'getDataElements$I$I$I$I$O',  function (x, y, w, h, obj) {
if ((x < this.minX) || (y < this.minY) || (x + w > this.maxX) || (y + h > this.maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var outData;
if (Clazz_instanceOf(obj, Clazz_array(Integer.TYPE, -1))) {
outData=obj;
} else {
outData=Clazz_array(Integer.TYPE, [this.numDataElements * w * h ]);
}var yoff=(y - this.minY) * this.scanlineStride + (x - this.minX) * this.pixelStride;
var xoff;
var off=0;
var xstart;
var ystart;
for (ystart=0; ystart < h; ystart++, yoff+=this.scanlineStride) {
xoff=yoff;
for (xstart=0; xstart < w; xstart++, xoff+=this.pixelStride) {
for (var c=0; c < this.numDataElements; c++) {
outData[off++]=this.data[this.dataOffsets[c] + xoff];
}
}
}
return outData;
});

Clazz_newMeth(C$, 'setDataElements$I$I$O',  function (x, y, obj) {
if ((x < this.minX) || (y < this.minY) || (x >= this.maxX) || (y >= this.maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var inData=obj;
var off=(y - this.minY) * this.scanlineStride + (x - this.minX) * this.pixelStride;
for (var i=0; i < this.numDataElements; i++) {
this.data[this.dataOffsets[i] + off]=inData[i];
}
this.markDirty$();
});

Clazz_newMeth(C$, 'setDataElements$I$I$java_awt_image_Raster',  function (x, y, inRaster) {
var dstOffX=x + inRaster.getMinX$();
var dstOffY=y + inRaster.getMinY$();
var width=inRaster.getWidth$();
var height=inRaster.getHeight$();
if ((dstOffX < this.minX) || (dstOffY < this.minY) || (dstOffX + width > this.maxX) || (dstOffY + height > this.maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}p$1.setDataElements$I$I$I$I$java_awt_image_Raster.apply(this, [dstOffX, dstOffY, width, height, inRaster]);
});

Clazz_newMeth(C$, 'setDataElements$I$I$I$I$java_awt_image_Raster',  function (dstX, dstY, width, height, inRaster) {
if (width <= 0 || height <= 0 ) {
return;
}this.dataBuffer.秘checkImage$();
var srcOffX=inRaster.getMinX$();
var srcOffY=inRaster.getMinY$();
var tdata=null;
if (Clazz_instanceOf(inRaster, "sun.awt.image.IntegerComponentRaster") && (this.pixelStride == 1) && (this.numDataElements == 1)  ) {
var ict=inRaster;
if (ict.getNumDataElements$() != 1) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Number of bands does not match"]);
}tdata=ict.getDataStorage$();
var tss=ict.getScanlineStride$();
var toff=ict.getDataOffset$I(0);
var srcOffset=toff;
var dstOffset=this.dataOffsets[0] + (dstY - this.minY) * this.scanlineStride + (dstX - this.minX);
if (ict.getPixelStride$() == this.pixelStride) {
width*=this.pixelStride;
for (var startY=0; startY < height; startY++) {
System.arraycopy$O$I$O$I$I(tdata, srcOffset, this.data, dstOffset, width);
srcOffset+=tss;
dstOffset+=this.scanlineStride;
}
this.markDirty$();
return;
}}var odata=null;
for (var startY=0; startY < height; startY++) {
odata=inRaster.getDataElements$I$I$I$I$O(srcOffX, srcOffY + startY, width, 1, odata);
this.setDataElements$I$I$I$I$O(dstX, dstY + startY, width, 1, odata);
}
}, p$1);

Clazz_newMeth(C$, 'setDataElements$I$I$I$I$O',  function (x, y, w, h, obj) {
if ((x < this.minX) || (y < this.minY) || (x + w > this.maxX) || (y + h > this.maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var inData=obj;
var yoff=(y - this.minY) * this.scanlineStride + (x - this.minX) * this.pixelStride;
var xoff;
var off=0;
var xstart;
var ystart;
for (ystart=0; ystart < h; ystart++, yoff+=this.scanlineStride) {
xoff=yoff;
for (xstart=0; xstart < w; xstart++, xoff+=this.pixelStride) {
for (var c=0; c < this.numDataElements; c++) {
this.data[this.dataOffsets[c] + xoff]=inData[off++];
}
}
}
this.markDirty$();
});

Clazz_newMeth(C$, 'createWritableChild$I$I$I$I$I$I$IA',  function (x, y, width, height, x0, y0, bandList) {
if (x < this.minX) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["x lies outside raster"]);
}if (y < this.minY) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["y lies outside raster"]);
}if ((x + width < x) || (x + width > this.minX + this.width) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(x + width) is outside raster"]);
}if ((y + height < y) || (y + height > this.minY + this.height) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(y + height) is outside raster"]);
}var sm;
if (bandList != null ) sm=this.sampleModel.createSubsetSampleModel$IA(bandList);
 else sm=this.sampleModel;
var deltaX=x0 - x;
var deltaY=y0 - y;
return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerComponentRaster,[sm, this.dataBuffer, Clazz_new_($I$(1,1).c$$I$I$I$I,[x0, y0, width, height]), Clazz_new_($I$(3,1).c$$I$I,[this.sampleModelTranslateX + deltaX, this.sampleModelTranslateY + deltaY]), this]);
});

Clazz_newMeth(C$, 'createChild$I$I$I$I$I$I$IA',  function (x, y, width, height, x0, y0, bandList) {
return this.createWritableChild$I$I$I$I$I$I$IA(x, y, width, height, x0, y0, bandList);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$I$I',  function (w, h) {
if (w <= 0 || h <= 0 ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["negative " + ((w <= 0) ? "width" : "height")]);
}var sm=this.sampleModel.createCompatibleSampleModel$I$I(w, h);
return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_Point,[sm, Clazz_new_($I$(3,1).c$$I$I,[0, 0])]);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$',  function () {
return this.createCompatibleWritableRaster$I$I(this.width, this.height);
});

Clazz_newMeth(C$, 'verify$',  function () {
if (this.width <= 0 || this.height <= 0  || this.height > ((2147483647/this.width|0)) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Invalid raster dimension"]);
}if (this.dataOffsets[0] < 0) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Data offset (" + this.dataOffsets[0] + ") must be >= 0" ]);
}if (Long.$lt(Long.$sub(this.minX,this.sampleModelTranslateX),0 ) || Long.$lt(Long.$sub(this.minY,this.sampleModelTranslateY),0 ) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Incorrect origin/translate: (" + this.minX + ", " + this.minY + ") / (" + this.sampleModelTranslateX + ", " + this.sampleModelTranslateY + ")" ]);
}if (this.scanlineStride < 0 || this.scanlineStride > ((2147483647/this.height|0)) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Incorrect scanline stride: " + this.scanlineStride]);
}if (this.height > 1 || this.minY - this.sampleModelTranslateY > 0 ) {
if (this.scanlineStride > this.data.length) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Incorrect scanline stride: " + this.scanlineStride]);
}}var lastScanOffset=(this.height - 1) * this.scanlineStride;
if (this.pixelStride < 0 || this.pixelStride > ((2147483647/this.width|0))  || this.pixelStride > this.data.length ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Incorrect pixel stride: " + this.pixelStride]);
}var lastPixelOffset=(this.width - 1) * this.pixelStride;
if (lastPixelOffset > (2147483647 - lastScanOffset)) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Incorrect raster attributes"]);
}lastPixelOffset+=lastScanOffset;
var index;
var maxIndex=0;
for (var i=0; i < this.numDataElements; i++) {
if (this.dataOffsets[i] > (2147483647 - lastPixelOffset)) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Incorrect band offset: " + this.dataOffsets[i]]);
}index=lastPixelOffset + this.dataOffsets[i];
if (index > maxIndex) {
maxIndex=index;
}}
if (this.data.length <= maxIndex) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["Data array too small (should be > " + maxIndex + " )" ]);
}});

Clazz_newMeth(C$, 'toString',  function () {
return  String.instantialize("IntegerComponentRaster: width = " + this.width + " height = " + this.height + " #Bands = " + this.numBands + " #DataElements " + this.numDataElements + " xOff = " + this.sampleModelTranslateX + " yOff = " + this.sampleModelTranslateY + " dataOffset[0] " + this.dataOffsets[0] );
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:30 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt.image"),p$1={},I$=[[0,'java.awt.Rectangle','sun.awt.image.SunWritableRaster','java.awt.Point']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "IntegerInterleavedRaster", null, 'sun.awt.image.IntegerComponentRaster');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['$maxX','$maxY']]]

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_Point',  function (sampleModel, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerInterleavedRaster.apply(this, [sampleModel, sampleModel.createDataBuffer$(), Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(1,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sampleModel, dataBuffer, origin) {
C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerInterleavedRaster.apply(this, [sampleModel, dataBuffer, Clazz_new_([origin.x, origin.y, sampleModel.getWidth$(), sampleModel.getHeight$()],$I$(1,1).c$$I$I$I$I), origin, null]);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerInterleavedRaster',  function (sampleModel, dataBuffer, aRegion, origin, parent) {
;C$.superclazz.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerComponentRaster.apply(this,[sampleModel, dataBuffer, aRegion, origin, parent]);C$.$init$.apply(this);
this.$maxX=this.minX + this.width;
this.$maxY=this.minY + this.height;
if (!(Clazz_instanceOf(dataBuffer, "java.awt.image.DataBufferInt"))) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["IntegerInterleavedRasters must haveinteger DataBuffers"]);
}var dbi=dataBuffer;
this.data=$I$(2).stealData$java_awt_image_DataBufferInt$I(dbi, 0);
if (Clazz_instanceOf(sampleModel, "java.awt.image.SinglePixelPackedSampleModel")) {
var sppsm=sampleModel;
this.scanlineStride=sppsm.getScanlineStride$();
this.pixelStride=1;
this.dataOffsets=Clazz_array(Integer.TYPE, [1]);
this.dataOffsets[0]=dbi.getOffset$();
this.bandOffset=this.dataOffsets[0];
var xOffset=aRegion.x - origin.x;
var yOffset=aRegion.y - origin.y;
this.dataOffsets[0]+=xOffset + yOffset * this.scanlineStride;
this.numDataElems=sppsm.getNumDataElements$();
} else {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["IntegerInterleavedRasters must have SinglePixelPackedSampleModel"]);
}this.verify$();
}, 1);

Clazz_newMeth(C$, 'getDataOffsets$',  function () {
return this.dataOffsets.clone$();
});

Clazz_newMeth(C$, 'getDataOffset$I',  function (band) {
return this.dataOffsets[band];
});

Clazz_newMeth(C$, 'getScanlineStride$',  function () {
return this.scanlineStride;
});

Clazz_newMeth(C$, 'getPixelStride$',  function () {
return this.pixelStride;
});

Clazz_newMeth(C$, 'getDataStorage$',  function () {
this.dataBuffer.秘checkImage$();
return this.data;
});

Clazz_newMeth(C$, 'getDataElements$I$I$O',  function (x, y, obj) {
if ((x < this.minX) || (y < this.minY) || (x >= this.$maxX) || (y >= this.$maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var outData;
if (obj == null ) {
outData=Clazz_array(Integer.TYPE, [1]);
} else {
outData=obj;
}var off=(y - this.minY) * this.scanlineStride + (x - this.minX) + this.dataOffsets[0];
outData[0]=this.data[off];
return outData;
});

Clazz_newMeth(C$, 'getDataElements$I$I$I$I$O',  function (x, y, w, h, obj) {
this.dataBuffer.秘checkImage$();
if ((x < this.minX) || (y < this.minY) || (x + w > this.$maxX) || (y + h > this.$maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}var outData;
if (Clazz_instanceOf(obj, Clazz_array(Integer.TYPE, -1))) {
outData=obj;
} else {
outData=Clazz_array(Integer.TYPE, [w * h]);
}var yoff=(y - this.minY) * this.scanlineStride + (x - this.minX) + this.dataOffsets[0];
var off=0;
for (var ystart=0; ystart < h; ystart++) {
System.arraycopy$O$I$O$I$I(this.data, yoff, outData, off, w);
off+=w;
yoff+=this.scanlineStride;
}
return outData;
});

Clazz_newMeth(C$, 'setDataElements$I$I$O',  function (x, y, obj) {
if ((x < this.minX) || (y < this.minY) || (x >= this.$maxX) || (y >= this.$maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var inData=obj;
var off=(y - this.minY) * this.scanlineStride + (x - this.minX) + this.dataOffsets[0];
this.data[off]=inData[0];
this.markDirty$();
});

Clazz_newMeth(C$, 'setDataElements$I$I$java_awt_image_Raster',  function (x, y, inRaster) {
var dstOffX=x + inRaster.getMinX$();
var dstOffY=y + inRaster.getMinY$();
var width=inRaster.getWidth$();
var height=inRaster.getHeight$();
if ((dstOffX < this.minX) || (dstOffY < this.minY) || (dstOffX + width > this.$maxX) || (dstOffY + height > this.$maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}p$1.setDataElements$I$I$I$I$java_awt_image_Raster.apply(this, [dstOffX, dstOffY, width, height, inRaster]);
});

Clazz_newMeth(C$, 'setDataElements$I$I$I$I$java_awt_image_Raster',  function (dstX, dstY, width, height, inRaster) {
if (width <= 0 || height <= 0 ) {
return;
}this.dataBuffer.秘checkImage$();
var srcOffX=inRaster.getMinX$();
var srcOffY=inRaster.getMinY$();
var tdata=null;
if (Clazz_instanceOf(inRaster, "sun.awt.image.IntegerInterleavedRaster")) {
var ict=inRaster;
tdata=ict.getDataStorage$();
var tss=ict.getScanlineStride$();
var toff=ict.getDataOffset$I(0);
var srcOffset=toff;
var dstOffset=this.dataOffsets[0] + (dstY - this.minY) * this.scanlineStride + (dstX - this.minX);
for (var startY=0; startY < height; startY++) {
System.arraycopy$O$I$O$I$I(tdata, srcOffset, this.data, dstOffset, width);
srcOffset+=tss;
dstOffset+=this.scanlineStride;
}
this.markDirty$();
return;
}var odata=null;
for (var startY=0; startY < height; startY++) {
odata=inRaster.getDataElements$I$I$I$I$O(srcOffX, srcOffY + startY, width, 1, odata);
this.setDataElements$I$I$I$I$O(dstX, dstY + startY, width, 1, odata);
}
}, p$1);

Clazz_newMeth(C$, 'setDataElements$I$I$I$I$O',  function (x, y, w, h, obj) {
if ((x < this.minX) || (y < this.minY) || (x + w > this.$maxX) || (y + h > this.$maxY)  ) {
throw Clazz_new_(Clazz_load('ArrayIndexOutOfBoundsException').c$$S,["Coordinate out of bounds!"]);
}this.dataBuffer.秘checkImage$();
var inData=obj;
var yoff=(y - this.minY) * this.scanlineStride + (x - this.minX) + this.dataOffsets[0];
var off=0;
for (var ystart=0; ystart < h; ystart++) {
System.arraycopy$O$I$O$I$I(inData, off, this.data, yoff, w);
off+=w;
yoff+=this.scanlineStride;
}
this.markDirty$();
});

Clazz_newMeth(C$, 'createWritableChild$I$I$I$I$I$I$IA',  function (x, y, width, height, x0, y0, bandList) {
if (x < this.minX) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["x lies outside raster"]);
}if (y < this.minY) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["y lies outside raster"]);
}if ((x + width < x) || (x + width > this.minX + this.width) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(x + width) is outside raster"]);
}if ((y + height < y) || (y + height > this.minY + this.height) ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["(y + height) is outside raster"]);
}var sm;
if (bandList != null ) sm=this.sampleModel.createSubsetSampleModel$IA(bandList);
 else sm=this.sampleModel;
var deltaX=x0 - x;
var deltaY=y0 - y;
return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$sun_awt_image_IntegerInterleavedRaster,[sm, this.dataBuffer, Clazz_new_($I$(1,1).c$$I$I$I$I,[x0, y0, width, height]), Clazz_new_($I$(3,1).c$$I$I,[this.sampleModelTranslateX + deltaX, this.sampleModelTranslateY + deltaY]), this]);
});

Clazz_newMeth(C$, 'createChild$I$I$I$I$I$I$IA',  function (x, y, width, height, x0, y0, bandList) {
return this.createWritableChild$I$I$I$I$I$I$IA(x, y, width, height, x0, y0, bandList);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$I$I',  function (w, h) {
if (w <= 0 || h <= 0 ) {
throw Clazz_new_(Clazz_load('java.awt.image.RasterFormatException').c$$S,["negative " + ((w <= 0) ? "width" : "height")]);
}var sm=this.sampleModel.createCompatibleSampleModel$I$I(w, h);
return Clazz_new_(C$.c$$java_awt_image_SampleModel$java_awt_Point,[sm, Clazz_new_($I$(3,1).c$$I$I,[0, 0])]);
});

Clazz_newMeth(C$, 'createCompatibleWritableRaster$',  function () {
return this.createCompatibleWritableRaster$I$I(this.width, this.height);
});

Clazz_newMeth(C$, 'toString',  function () {
return ("IntegerInterleavedRaster: width = " + this.width + " height = " + this.height + " #Bands = " + this.numBands + " xOff = " + this.sampleModelTranslateX + " yOff = " + this.sampleModelTranslateY + " dataOffset[0] " + this.dataOffsets[0] );
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:30 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.awt.image"),I$=[[0,'InternalError','sun.java2d.StateTrackableDelegate',['sun.java2d.StateTrackable','.State']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SunWritableRaster", null, 'java.awt.image.WritableRaster');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['stealer','sun.awt.image.DataStealer']]]

Clazz_newMeth(C$, 'getStealer$',  function () {
return (C$.stealer == null  ? C$.stealer=((P$.SunWritableRaster$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "SunWritableRaster$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'sun.awt.image.DataStealer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'getData$java_awt_image_DataBufferByte$I',  function (dbb, bank) {
return dbb.bankdata[bank];
});

Clazz_newMeth(C$, 'getData$java_awt_image_DataBufferUShort$I',  function (dbus, bank) {
return dbus.bankdata[bank];
});

Clazz_newMeth(C$, 'getData$java_awt_image_DataBufferInt$I',  function (dbi, bank) {
return dbi.bankdata[bank];
});

Clazz_newMeth(C$, 'getTrackable$java_awt_image_DataBuffer',  function (db) {
return db.theTrackable;
});

Clazz_newMeth(C$, 'setTrackable$java_awt_image_DataBuffer$sun_java2d_StateTrackableDelegate',  function (db, trackable) {
db.theTrackable=trackable;
});
})()
), Clazz_new_(P$.SunWritableRaster$1.$init$,[this, null])) : C$.stealer);
}, 1);

Clazz_newMeth(C$, 'setDataStealer$sun_awt_image_DataStealer',  function (ds) {
if (C$.stealer != null ) {
throw Clazz_new_($I$(1,1).c$$S,["Attempt to set DataStealer twice"]);
}C$.stealer=ds;
}, 1);

Clazz_newMeth(C$, 'stealData$java_awt_image_DataBufferByte$I',  function (dbb, bank) {
return C$.getStealer$().getData$java_awt_image_DataBufferByte$I(dbb, bank);
}, 1);

Clazz_newMeth(C$, 'stealData$java_awt_image_DataBufferUShort$I',  function (dbus, bank) {
return C$.getStealer$().getData$java_awt_image_DataBufferUShort$I(dbus, bank);
}, 1);

Clazz_newMeth(C$, 'stealData$java_awt_image_DataBufferInt$I',  function (dbi, bank) {
return C$.getStealer$().getData$java_awt_image_DataBufferInt$I(dbi, bank);
}, 1);

Clazz_newMeth(C$, 'stealTrackable$java_awt_image_DataBuffer',  function (db) {
return C$.getStealer$().getTrackable$java_awt_image_DataBuffer(db);
}, 1);

Clazz_newMeth(C$, 'setTrackable$java_awt_image_DataBuffer$sun_java2d_StateTrackableDelegate',  function (db, trackable) {
C$.getStealer$().setTrackable$java_awt_image_DataBuffer$sun_java2d_StateTrackableDelegate(db, trackable);
}, 1);

Clazz_newMeth(C$, 'makeTrackable$java_awt_image_DataBuffer',  function (db) {
C$.getStealer$().setTrackable$java_awt_image_DataBuffer$sun_java2d_StateTrackableDelegate(db, $I$(2,"createInstance$sun_java2d_StateTrackable_State",[$I$(3).STABLE]));
}, 1);

Clazz_newMeth(C$, 'markDirty$java_awt_image_DataBuffer',  function (db) {
C$.getStealer$().getTrackable$java_awt_image_DataBuffer(db).markDirty$();
}, 1);

Clazz_newMeth(C$, 'markDirty$java_awt_image_WritableRaster',  function (wr) {
if (Clazz_instanceOf(wr, "sun.awt.image.SunWritableRaster")) {
(wr).markDirty$();
} else {
C$.markDirty$java_awt_image_DataBuffer(wr.getDataBuffer$());
}}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_Point',  function (sampleModel, origin) {
;C$.superclazz.c$$java_awt_image_SampleModel$java_awt_Point.apply(this,[sampleModel, origin]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point',  function (sampleModel, dataBuffer, origin) {
;C$.superclazz.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Point.apply(this,[sampleModel, dataBuffer, origin]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster',  function (sampleModel, dataBuffer, aRegion, sampleModelTranslate, parent) {
;C$.superclazz.c$$java_awt_image_SampleModel$java_awt_image_DataBuffer$java_awt_Rectangle$java_awt_Point$java_awt_image_WritableRaster.apply(this,[sampleModel, dataBuffer, aRegion, sampleModelTranslate, parent]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'markDirty$',  function () {
C$.stealTrackable$java_awt_image_DataBuffer(this.dataBuffer).markDirty$();
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.font"),p$1={},I$=[[0,'sun.font.FontDesignMetrics','java.util.Hashtable',['sun.font.FontDesignMetrics','.KeyReference'],'swingjs.JSToolkit','swingjs.JSFontMetrics',['java.awt.geom.Rectangle2D','.Float']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "FontDesignMetrics", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'java.awt.FontMetrics');
C$.$classes$=[['KeyReference',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.ascent=-1;
this.height=-1;
this.FIRST_PRINTABLE=32;
},1);

C$.$fields$=[['F',['ascent','descent','leading'],'I',['height','FIRST_PRINTABLE'],'O',['$font','java.awt.Font','fwidths','float[]','iwidths','int[]']]
,['F',['roundingUpValue'],'I',['recentIndex'],'O',['metricsCache','java.util.Hashtable','recentMetrics','sun.font.FontDesignMetrics[]']]]

Clazz_newMeth(C$, 'getMetrics$java_awt_Font',  function (font) {
var m=null;
var r;
r=C$.metricsCache.get$O(font.toString());
if (r != null ) {
m=r.get$();
}if (m == null ) {
m=Clazz_new_(C$.c$$java_awt_Font,[font]);
C$.metricsCache.put$O$O(font.toString(), Clazz_new_($I$(3,1).c$$O$O,[font, m]));
}for (var i=0; i < C$.recentMetrics.length; i++) {
if (C$.recentMetrics[i] === m ) {
return m;
}}
{
C$.recentMetrics[C$.recentIndex++]=m;
if (C$.recentIndex == 5) {
C$.recentIndex=0;
}}return m;
}, 1);

Clazz_newMeth(C$, 'c$$java_awt_Font',  function (font) {
;C$.superclazz.c$$java_awt_Font.apply(this,[font]);C$.$init$.apply(this);
this.$font=font;
p$1.initMatrixAndMetrics.apply(this, []);
}, 1);

Clazz_newMeth(C$, 'initMatrixAndMetrics',  function () {
{
//need to calculate ascent, descent, leading, and maxAdvance
}
}, p$1);

Clazz_newMeth(C$, 'stringWidth$S',  function (str) {
return ((0.5 + p$1.getWidth$S.apply(this, [str]))|0);
});

Clazz_newMeth(C$, 'getWidth$S',  function (str) {
return $I$(4).getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S(null, this.$font, str);
}, p$1);

Clazz_newMeth(C$, 'charsWidth$CA$I$I',  function (data, off, len) {
var width=0;
if (len < 0) {
throw Clazz_new_(Clazz_load('IndexOutOfBoundsException').c$$S,["len=" + len]);
}var limit=off + len;
for (var i=off; i < limit; i++) {
var ch=data[i];
width+=this.stringWidth$S("" + ch);
}
return ((0.5 + width)|0);
});

Clazz_newMeth(C$, 'getAscent$',  function () {
p$1._getMetrics.apply(this, []);
return ((C$.roundingUpValue + this.ascent)|0);
});

Clazz_newMeth(C$, 'getDescent$',  function () {
p$1._getMetrics.apply(this, []);
return ((C$.roundingUpValue + this.descent)|0);
});

Clazz_newMeth(C$, '_getMetrics',  function () {
if (this.ascent >= 0 ) return;
this.ascent=$I$(5).fontAscent$java_awt_Font(this.$font);
this.descent=$I$(5).fontDescent$java_awt_Font(this.$font);
this.leading=$I$(5).fontLeading$java_awt_Font(this.$font);
}, p$1);

Clazz_newMeth(C$, 'getLeading$',  function () {
p$1._getMetrics.apply(this, []);
return ((C$.roundingUpValue + this.descent + this.leading )|0) - ((C$.roundingUpValue + this.descent)|0);
});

Clazz_newMeth(C$, 'getHeight$',  function () {
if (this.height < 0) {
this.height=this.getAscent$() + ((C$.roundingUpValue + this.descent + this.leading )|0);
}return this.height;
});

Clazz_newMeth(C$, '秘fillMetrics$FA',  function (metrics) {
p$1._getMetrics.apply(this, []);
metrics[0]=this.ascent;
metrics[1]=this.descent;
metrics[2]=this.leading;
metrics[3]=0;
if (metrics.length >= 8) {
metrics[4]=this.$font.getSize2D$() / -4.0;
metrics[5]=metrics[6]=metrics[7]=1;
}});

Clazz_newMeth(C$, '秘getStringBounds$S',  function (s) {
p$1._getMetrics.apply(this, []);
return Clazz_new_([0, -this.ascent, this.stringWidth$S(s), this.ascent + this.descent + this.leading ],$I$(6,1).c$$F$F$F$F);
});

Clazz_newMeth(C$, 'charWidth$C',  function (pt) {
return (pt.$c() < 256  ? ((0.5 + this.getWidthsFloat$()[pt.$c()])|0) : this.stringWidth$S("" + pt));
});

Clazz_newMeth(C$, 'charWidth$I',  function (codePoint) {
if (!Character.isValidCodePoint$I(codePoint)) {
codePoint=65535;
}if (codePoint < 256) {
return this.getWidths$()[codePoint];
}var s=String.fromCharCode(codePoint) ||null;
return this.stringWidth$S(s);
});

Clazz_newMeth(C$, 'getWidths$',  function () {
if (this.iwidths != null ) return this.iwidths;
this.iwidths=Clazz_array(Integer.TYPE, [256]);
this.getWidthsFloat$();
for (var ch=this.FIRST_PRINTABLE; ch < 256; ch++) {
this.iwidths[ch]=(this.fwidths[ch]|0);
}
return this.iwidths;
});

Clazz_newMeth(C$, 'getWidthsFloat$',  function () {
if (this.fwidths != null ) return this.fwidths;
this.fwidths=Clazz_array(Float.TYPE, [256]);
for (var ch=this.FIRST_PRINTABLE; ch < 256; ch++) {
this.fwidths[ch]=$I$(4,"getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S",[null, this.$font, "" + String.fromCharCode(ch)]);
}
return this.fwidths;
});

Clazz_newMeth(C$, 'getFloatWidth$I',  function (ch) {
var s=(1 ? String.fromCharCode(ch) :"");
return $I$(4).getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S(null, this.$font, s);
});

C$.$static$=function(){C$.$static$=0;
C$.roundingUpValue=0.95;
C$.metricsCache=Clazz_new_($I$(2,1));
C$.recentMetrics=Clazz_array(C$, [5]);
C$.recentIndex=0;
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.FontDesignMetrics, "KeyReference", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['key','java.lang.Object','+val']]]

Clazz_newMeth(C$, 'c$$O$O',  function (key, value) {
;C$.$init$.apply(this);
this.key=key;
this.val=value;
}, 1);

Clazz_newMeth(C$, 'get$',  function () {
return this.val;
});

Clazz_newMeth(C$, 'dispose$',  function () {
if ($I$(1).metricsCache.get$O(this.key.toString()) === this ) {
$I$(1).metricsCache.remove$O(this.key);
}});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:31 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.java2d"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "StateTrackable", function(){
});
C$.$classes$=[['State',25]];
;
(function(){/*e*/var C$=Clazz_newClass(P$.StateTrackable, "State", function(){
Clazz_newInstance(this, arguments[0],false,C$);
}, 'Enum');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$static$=function(){C$.$static$=0;
$vals=Clazz_array(C$,[0]);
Clazz_newEnumConst($vals, C$.c$, "IMMUTABLE", 0, []);
Clazz_newEnumConst($vals, C$.c$, "STABLE", 1, []);
Clazz_newEnumConst($vals, C$.c$, "DYNAMIC", 2, []);
Clazz_newEnumConst($vals, C$.c$, "UNTRACKABLE", 3, []);
};

Clazz_newMeth(C$);
var $vals=[];
Clazz_newMeth(C$, 'values$', function() { return $vals }, 1);
Clazz_newMeth(C$, 'valueOf$S', function(name) { for (var val in $vals){ if ($vals[val].name == name) return $vals[val]} return null }, 1);
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.java2d"),I$=[[0,['sun.java2d.StateTrackable','.State'],'InternalError','sun.java2d.StateTracker']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "StateTrackableDelegate", null, null, 'sun.java2d.StateTrackable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isDirty'],'I',['numDynamicAgents'],'O',['theState','sun.java2d.StateTrackable.State','theTracker','sun.java2d.StateTracker']]
,['O',['UNTRACKABLE_DELEGATE','sun.java2d.StateTrackableDelegate','+IMMUTABLE_DELEGATE']]]

Clazz_newMeth(C$, 'createInstance$sun_java2d_StateTrackable_State',  function (state) {
switch (state) {
case $I$(1).UNTRACKABLE:
return C$.UNTRACKABLE_DELEGATE;
case $I$(1).STABLE:
return Clazz_new_(C$.c$$sun_java2d_StateTrackable_State,[$I$(1).STABLE]);
case $I$(1).DYNAMIC:
return Clazz_new_(C$.c$$sun_java2d_StateTrackable_State,[$I$(1).DYNAMIC]);
case $I$(1).IMMUTABLE:
return C$.IMMUTABLE_DELEGATE;
default:
throw Clazz_new_($I$(2,1).c$$S,["unknown state"]);
}
}, 1);

Clazz_newMeth(C$, 'c$$sun_java2d_StateTrackable_State',  function (state) {
;C$.$init$.apply(this);
this.theState=state;
}, 1);

Clazz_newMeth(C$, 'getState$',  function () {
return this.theState;
});

Clazz_newMeth(C$, 'getStateTracker$',  function () {
var st=this.theTracker;
if (st == null ) {
switch (this.theState) {
case $I$(1).IMMUTABLE:
st=$I$(3).ALWAYS_CURRENT;
break;
case $I$(1).STABLE:
st=((P$.StateTrackableDelegate$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "StateTrackableDelegate$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'sun.java2d.StateTracker', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'isCurrent$',  function () {
return (this.b$['sun.java2d.StateTrackableDelegate'].theTracker === this );
});
})()
), Clazz_new_(P$.StateTrackableDelegate$1.$init$,[this, null]));
break;
case $I$(1).DYNAMIC:
case $I$(1).UNTRACKABLE:
st=$I$(3).NEVER_CURRENT;
break;
}
this.theTracker=st;
}return st;
});

Clazz_newMeth(C$, 'setImmutable$',  function () {
if (this.theState === $I$(1).UNTRACKABLE  || this.theState === $I$(1).DYNAMIC  ) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["UNTRACKABLE or DYNAMIC objects cannot become IMMUTABLE"]);
}this.theState=$I$(1).IMMUTABLE;
this.theTracker=null;
});

Clazz_newMeth(C$, 'setUntrackable$',  function () {
if (this.theState === $I$(1).IMMUTABLE ) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["IMMUTABLE objects cannot become UNTRACKABLE"]);
}this.theState=$I$(1).UNTRACKABLE;
this.theTracker=null;
});

Clazz_newMeth(C$, 'addDynamicAgent$',  function () {
if (this.theState === $I$(1).IMMUTABLE ) {
throw Clazz_new_(Clazz_load('IllegalStateException').c$$S,["Cannot change state from IMMUTABLE"]);
}++this.numDynamicAgents;
if (this.theState === $I$(1).STABLE ) {
this.theState=$I$(1).DYNAMIC;
this.theTracker=null;
}});

Clazz_newMeth(C$, 'removeDynamicAgent$',  function () {
if (--this.numDynamicAgents == 0 && this.theState === $I$(1).DYNAMIC  ) {
this.theState=$I$(1).STABLE;
this.theTracker=null;
}});

Clazz_newMeth(C$, 'markDirty$',  function () {
this.theTracker=null;
this.isDirty=true;
});

Clazz_newMeth(C$, '秘isDirty$Z',  function (doReset) {
var isDirty=this.isDirty;
if (doReset) this.isDirty=false;
return isDirty;
});

C$.$static$=function(){C$.$static$=0;
C$.UNTRACKABLE_DELEGATE=Clazz_new_(C$.c$$sun_java2d_StateTrackable_State,[$I$(1).UNTRACKABLE]);
C$.IMMUTABLE_DELEGATE=Clazz_new_(C$.c$$sun_java2d_StateTrackable_State,[$I$(1).IMMUTABLE]);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:32 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.swing"),p$1={},I$=[[0,'java.awt.Color']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "SwingLazyValue", null, null, [['javax.swing.UIDefaults','javax.swing.UIDefaults.LazyValue']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['className','methodName'],'O',['args','Object[]']]]

Clazz_newMeth(C$, 'c$$S',  function (c) {
C$.c$$S$S$OA.apply(this, [c, null, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S',  function (c, m) {
C$.c$$S$S$OA.apply(this, [c, m, null]);
}, 1);

Clazz_newMeth(C$, 'c$$S$OA',  function (c, o) {
C$.c$$S$S$OA.apply(this, [c, null, o]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$OA',  function (c, m, o) {
;C$.$init$.apply(this);
this.className=c;
this.methodName=m;
if (o != null ) {
this.args=o.clone$();
}}, 1);

Clazz_newMeth(C$, 'createValue$javax_swing_UIDefaults',  function (table) {
try {
if (this.className.indexOf$S("$") > 0) {
var cname=this.className;

Clazz_load(cname.replace("$","$.").split("$"));
}var c=Clazz_forName(this.className, true, null);
if (this.methodName != null ) {
var types=p$1.getClassArray$OA.apply(this, [this.args]);
var m=c.getMethod$S$ClassA(this.methodName, types);
return m.invoke$O$OA(c, this.args);
} else {
var types=p$1.getClassArray$OA.apply(this, [this.args]);
var constructor=c.getConstructor$ClassA(types);
return constructor.newInstance$OA(this.args);
}} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
System.out.println$S("Error in sun.swing.SwingLazyValue.createValue for " + this.className);
} else {
throw e;
}
}
return null;
});

Clazz_newMeth(C$, 'getClassArray$OA',  function (args) {
var types=null;
if (args != null ) {
types=Clazz_array(Class, [args.length]);
for (var i=0; i < args.length; i++) {
if (Clazz_instanceOf(args[i], "java.lang.Integer")) {
types[i]=Integer.TYPE;
} else if (Clazz_instanceOf(args[i], "java.lang.Boolean")) {
types[i]=Boolean.TYPE;
} else if (Clazz_instanceOf(args[i], "javax.swing.plaf.ColorUIResource")) {
types[i]=Clazz_getClass($I$(1));
} else {
types[i]=args[i].getClass$();
}}
}return types;
}, p$1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:36 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.swing"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "UIAction", null, null, 'javax.swing.Action');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['name']]]

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.$init$.apply(this);
this.name=name;
}, 1);

Clazz_newMeth(C$, 'getName$',  function () {
return this.name;
});

Clazz_newMeth(C$, 'getValue$S',  function (key) {
if (key == "Name") {
return this.name;
}return null;
});

Clazz_newMeth(C$, 'putValue$S$O',  function (key, value) {
});

Clazz_newMeth(C$, 'setEnabled$Z',  function (b) {
});

Clazz_newMeth(C$, 'isEnabled$',  function () {
return this.isEnabled$O(null);
});

Clazz_newMeth(C$, 'isEnabled$O',  function (sender) {
return true;
});

Clazz_newMeth(C$, 'addPropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
});

Clazz_newMeth(C$, 'removePropertyChangeListener$java_beans_PropertyChangeListener',  function (listener) {
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:37 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.util.locale"),I$=[[0,'sun.util.locale.LocaleUtils','java.util.HashMap',['sun.util.locale.BaseLocale','.Key'],'sun.util.locale.BaseLocale',['sun.util.locale.BaseLocale','.Cache'],'StringBuilder']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "BaseLocale", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['Key',26],['Cache',10]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.hash=0;
},1);

C$.$fields$=[['I',['hash'],'S',['language','script','region','variant','strRep']]
,['O',['CACHE','sun.util.locale.BaseLocale.Cache']]]

Clazz_newMeth(C$, 'c$$S$S',  function (language, region) {
;C$.$init$.apply(this);
this.language=language;
this.script="";
this.region=region;
this.variant="";
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S$S',  function (language, script, region, variant) {
;C$.$init$.apply(this);
this.language=(language != null ) ? $I$(1).toLowerString$S(language) : "";
this.script=(script != null ) ? $I$(1).toTitleString$S(script) : "";
this.region=(region != null ) ? $I$(1).toUpperString$S(region) : "";
this.variant=(variant != null ) ? variant : "";
}, 1);

Clazz_newMeth(C$, 'createInstance$S$S',  function (language, region) {
var base=Clazz_new_(C$.c$$S$S,[language, region]);
C$.CACHE.put$sun_util_locale_BaseLocale_Key$sun_util_locale_BaseLocale(Clazz_new_($I$(3,1).c$$S$S,[language, region]), base);
return base;
}, 1);

Clazz_newMeth(C$, 'getInstance$S$S$S$S',  function (language, script, region, variant) {
if (language != null ) {
if ($I$(1).caseIgnoreMatch$S$S(language, "he")) {
language="iw";
} else if ($I$(1).caseIgnoreMatch$S$S(language, "yi")) {
language="ji";
} else if ($I$(1).caseIgnoreMatch$S$S(language, "id")) {
language="in";
}}var key=Clazz_new_($I$(3,1).c$$S$S$S$S,[language, script, region, variant]);
return C$.CACHE.get$sun_util_locale_BaseLocale_Key(key);
}, 1);

Clazz_newMeth(C$, 'getLanguage$',  function () {
return this.language;
});

Clazz_newMeth(C$, 'getScript$',  function () {
return this.script;
});

Clazz_newMeth(C$, 'getRegion$',  function () {
return this.region;
});

Clazz_newMeth(C$, 'getVariant$',  function () {
return this.variant;
});

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) {
return true;
}if (!(Clazz_instanceOf(obj, "sun.util.locale.BaseLocale"))) {
return false;
}var other=obj;
return this.language == other.language && this.script == other.script  && this.region == other.region  && this.variant == other.variant ;
});

Clazz_newMeth(C$, 'toString',  function () {
if (this.strRep != null ) return this.strRep;
var buf=Clazz_new_($I$(6,1));
if (this.language.length$() > 0) {
buf.append$S("language=");
buf.append$S(this.language);
}if (this.script.length$() > 0) {
if (buf.length$() > 0) {
buf.append$S(", ");
}buf.append$S("script=");
buf.append$S(this.script);
}if (this.region.length$() > 0) {
if (buf.length$() > 0) {
buf.append$S(", ");
}buf.append$S("region=");
buf.append$S(this.region);
}if (this.variant.length$() > 0) {
if (buf.length$() > 0) {
buf.append$S(", ");
}buf.append$S("variant=");
buf.append$S(this.variant);
}return this.strRep=buf.toString();
});

Clazz_newMeth(C$, 'hashCode$',  function () {
var h=this.hash;
if (h == 0) {
h=this.language.hashCode$();
h=31 * h + this.script.hashCode$();
h=31 * h + this.region.hashCode$();
h=31 * h + this.variant.hashCode$();
this.hash=h;
}return h;
});

C$.$static$=function(){C$.$static$=0;
C$.CACHE=Clazz_new_($I$(5,1));
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.BaseLocale, "Key", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['normalized'],'I',['hash'],'S',['lang','scrt','regn','vart','str']]]

Clazz_newMeth(C$, 'c$$S$S',  function (language, region) {
;C$.$init$.apply(this);
this.lang=(language);
this.scrt=("");
this.regn=(region);
this.vart=("");
this.normalized=true;
var h=language.hashCode$();
if (region !== "" ) {
var len=region.length$();
for (var i=0; i < len; i++) {
h=31 * h + ($I$(1,"toLower$C",[region.charAt$I(i)])).$c();
}
}this.hash=h;
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S$S',  function (language, script, region, variant) {
C$.c$$S$S$S$S$Z.apply(this, [language, script, region, variant, false]);
}, 1);

Clazz_newMeth(C$, 'c$$S$S$S$S$Z',  function (language, script, region, variant, normalized) {
;C$.$init$.apply(this);
var h=0;
if (language != null ) {
this.lang=(language);
var len=language.length$();
for (var i=0; i < len; i++) {
h=31 * h + ($I$(1,"toLower$C",[language.charAt$I(i)])).$c();
}
} else {
this.lang=("");
}if (script != null ) {
this.scrt=(script);
var len=script.length$();
for (var i=0; i < len; i++) {
h=31 * h + ($I$(1,"toLower$C",[script.charAt$I(i)])).$c();
}
} else {
this.scrt=("");
}if (region != null ) {
this.regn=(region);
var len=region.length$();
for (var i=0; i < len; i++) {
h=31 * h + ($I$(1,"toLower$C",[region.charAt$I(i)])).$c();
}
} else {
this.regn=("");
}if (variant != null ) {
this.vart=(variant);
var len=variant.length$();
for (var i=0; i < len; i++) {
h=31 * h + (variant.charCodeAt$I(i));
}
} else {
this.vart=("");
}this.hash=h;
this.normalized=normalized;
}, 1);

Clazz_newMeth(C$, 'equals$O',  function (obj) {
if (this === obj ) {
return true;
}if (Clazz_instanceOf(obj, "sun.util.locale.BaseLocale.Key") && this.hash == (obj).hash ) {
var tl=this.lang;
var ol=(obj).lang;
if (tl != null  && ol != null   && $I$(1).caseIgnoreMatch$S$S(ol, tl) ) {
var ts=this.scrt;
var os=(obj).scrt;
if (ts != null  && os != null   && $I$(1).caseIgnoreMatch$S$S(os, ts) ) {
var tr=this.regn;
var or=(obj).regn;
if (tr != null  && or != null   && $I$(1).caseIgnoreMatch$S$S(or, tr) ) {
var tv=this.vart;
var ov=(obj).vart;
return (ov != null  && ov.equals$O(tv) );
}}}}return false;
});

Clazz_newMeth(C$, 'hashCode$',  function () {
return this.hash;
});

Clazz_newMeth(C$, 'normalize$sun_util_locale_BaseLocale_Key',  function (key) {
if (key.normalized) {
return key;
}var lang=$I$(1).toLowerString$S(key.lang);
var scrt=$I$(1).toTitleString$S(key.scrt);
var regn=$I$(1).toUpperString$S(key.regn);
var vart=key.vart;
return Clazz_new_(C$.c$$S$S$S$S$Z,[lang, scrt, regn, vart, true]);
}, 1);

Clazz_newMeth(C$, 'toString',  function () {
return (this.str == null  ? (this.str="[BaseLocaleKey " + this.lang + this.regn + this.vart + this.scrt + ";" + this.normalized + "]" ) : this.str);
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.BaseLocale, "Cache", function(){
Clazz_newInstance(this, arguments[0],false,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.map=Clazz_new_($I$(2,1));
},1);

C$.$fields$=[['O',['map','java.util.HashMap']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'normalizeKey$sun_util_locale_BaseLocale_Key',  function (key) {
return $I$(3).normalize$sun_util_locale_BaseLocale_Key(key);
});

Clazz_newMeth(C$, 'put$sun_util_locale_BaseLocale_Key$sun_util_locale_BaseLocale',  function (key, locale) {
return this.map.put$O$O(key.toString(), locale);
});

Clazz_newMeth(C$, 'get$sun_util_locale_BaseLocale_Key',  function (key) {
key=this.normalizeKey$sun_util_locale_BaseLocale_Key(key);
var locale=this.map.get$O(key.toString());
if (locale == null ) this.put$sun_util_locale_BaseLocale_Key$sun_util_locale_BaseLocale(key, locale=this.createObject$sun_util_locale_BaseLocale_Key(key));
return locale;
});

Clazz_newMeth(C$, 'createObject$sun_util_locale_BaseLocale_Key',  function (key) {
return Clazz_new_($I$(4,1).c$$S$S$S$S,[key.lang, key.scrt, key.regn, key.vart]);
});
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:43 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("sun.util.locale"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "LocaleUtils");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'caseIgnoreMatch$S$S',  function (s1, s2) {
if (s1 == s2) {
return true;
}var len=s1.length$();
if (len != s2.length$()) {
return false;
}for (var i=0; i < len; i++) {
var c1=s1.charAt$I(i);
var c2=s2.charAt$I(i);
if (c1 != c2 && C$.toLower$C(c1) != C$.toLower$C(c2) ) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'caseIgnoreCompare$S$S',  function (s1, s2) {
if (s1 == s2) {
return 0;
}return C$.toLowerString$S(s1).compareTo$S(C$.toLowerString$S(s2));
}, 1);

Clazz_newMeth(C$, 'toUpper$C',  function (c) {
return C$.isLower$C(c) ? String.fromCharCode((c.$c() - 32)) : c;
}, 1);

Clazz_newMeth(C$, 'toLower$C',  function (c) {
return C$.isUpper$C(c) ? String.fromCharCode((c.$c() + 32)) : c;
}, 1);

Clazz_newMeth(C$, 'toLowerString$S',  function (s) {
var len=s.length$();
var idx=0;
for (; idx < len; idx++) {
if (C$.isUpper$C(s.charAt$I(idx))) {
break;
}}
if (idx == len) {
return s;
}var buf=Clazz_array(Character.TYPE, [len]);
for (var i=0; i < len; i++) {
var c=s.charAt$I(i);
buf[i]=(i < idx) ? c : C$.toLower$C(c);
}
return  String.instantialize(buf);
}, 1);

Clazz_newMeth(C$, 'toUpperString$S',  function (s) {
var len=s.length$();
var idx=0;
for (; idx < len; idx++) {
if (C$.isLower$C(s.charAt$I(idx))) {
break;
}}
if (idx == len) {
return s;
}var buf=Clazz_array(Character.TYPE, [len]);
for (var i=0; i < len; i++) {
var c=s.charAt$I(i);
buf[i]=(i < idx) ? c : C$.toUpper$C(c);
}
return  String.instantialize(buf);
}, 1);

Clazz_newMeth(C$, 'toTitleString$S',  function (s) {
var len;
if ((len=s.length$()) == 0) {
return s;
}var idx=0;
if (!C$.isLower$C(s.charAt$I(idx))) {
for (idx=1; idx < len; idx++) {
if (C$.isUpper$C(s.charAt$I(idx))) {
break;
}}
}if (idx == len) {
return s;
}var buf=Clazz_array(Character.TYPE, [len]);
for (var i=0; i < len; i++) {
var c=s.charAt$I(i);
if (i == 0 && idx == 0 ) {
buf[i]=C$.toUpper$C(c);
} else if (i < idx) {
buf[i]=c;
} else {
buf[i]=C$.toLower$C(c);
}}
return  String.instantialize(buf);
}, 1);

Clazz_newMeth(C$, 'isUpper$C',  function (c) {
return c >= "A" && c <= "Z" ;
}, 1);

Clazz_newMeth(C$, 'isLower$C',  function (c) {
return c >= "a" && c <= "z" ;
}, 1);

Clazz_newMeth(C$, 'isAlpha$C',  function (c) {
return (c >= "A" && c <= "Z" ) || (c >= "a" && c <= "z" ) ;
}, 1);

Clazz_newMeth(C$, 'isAlphaString$S',  function (s) {
var len=s.length$();
for (var i=0; i < len; i++) {
if (!C$.isAlpha$C(s.charAt$I(i))) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'isNumeric$C',  function (c) {
return (c >= "0" && c <= "9" );
}, 1);

Clazz_newMeth(C$, 'isNumericString$S',  function (s) {
var len=s.length$();
for (var i=0; i < len; i++) {
if (!C$.isNumeric$C(s.charAt$I(i))) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'isAlphaNumeric$C',  function (c) {
return C$.isAlpha$C(c) || C$.isNumeric$C(c) ;
}, 1);

Clazz_newMeth(C$, 'isAlphaNumericString$S',  function (s) {
var len=s.length$();
for (var i=0; i < len; i++) {
if (!C$.isAlphaNumeric$C(s.charAt$I(i))) {
return false;
}}
return true;
}, 1);

Clazz_newMeth(C$, 'isEmpty$S',  function (str) {
return str == null  || str.length$() == 0 ;
}, 1);

Clazz_newMeth(C$, 'isEmpty$java_util_Set',  function (set) {
return set == null  || set.isEmpty$() ;
}, 1);

Clazz_newMeth(C$, 'isEmpty$java_util_Map',  function (map) {
return map == null  || map.isEmpty$() ;
}, 1);

Clazz_newMeth(C$, 'isEmpty$java_util_List',  function (list) {
return list == null  || list.isEmpty$() ;
}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:43 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'java.util.Hashtable','swingjs.JSUtil','java.util.Locale']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSApp");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.fullName="Main";
},1);

C$.$fields$=[['Z',['testAsync','async','isApplet','isFrame'],'S',['appletCodeBase','appletIdiomaBase','appletDocumentBase','appletName','htmlName','main','syncId','strJavaVersion','fullName'],'O',['params','java.util.Hashtable','strJavaVendor','java.lang.Object','html5Applet','swingjs.api.js.HTML5Applet']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$$java_util_Hashtable',  function (params) {
;C$.$init$.apply(this);
this.setAppParams$java_util_Hashtable(params);
}, 1);

Clazz_newMeth(C$, 'getParameter$S',  function (name) {
var s=this.params.get$O(name.toLowerCase$());
return (s == null  ? null : "" + s);
});

Clazz_newMeth(C$, 'setAppParams$java_util_Hashtable',  function (params0) {
this.params=Clazz_new_($I$(1,1));
for (var e, $e = params0.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
var key=e.getKey$();
var lc=key.toLowerCase$();
var v=e.getValue$();
this.params.put$O$O(lc, v);
if (lc != key) this.params.put$O$O(key, v);
}
var language=this.getParameter$S("language");
if (language == null ) language=$I$(2).J2S.getDefaultLanguage(false);
$I$(3,"setDefault$java_util_Locale",[$I$(2).getDefaultLocale$S(language)]);
this.htmlName=p$1.extract$S$S.apply(this, ["" + this.getParameter$S("name"), "_object"]);
this.appletName=p$1.extract$S$S.apply(this, [this.htmlName + "_", "_"]);
this.syncId=this.getParameter$S("syncId");
this.fullName=this.htmlName + "__" + this.syncId + "__" ;
this.params.put$O$O("fullname", this.fullName);
var o=this.params.get$O("codepath");
if (o == null ) o="../java/";
this.appletCodeBase=o.toString();
this.appletIdiomaBase=this.appletCodeBase.substring$I$I(0, this.appletCodeBase.lastIndexOf$S$I("/", this.appletCodeBase.length$() - 2) + 1) + "idioma";
o=this.params.get$O("documentbase");
this.appletDocumentBase=(o == null  ? "" : o.toString());
if (this.params.containsKey$O("maximumsize")) Math.max((this.params.get$O("maximumsize")).intValue$(), 100);
this.async=(this.testAsync || this.params.containsKey$O("async") );
var applet=$I$(2).J2S.findApplet(this.htmlName);
var javaver=$I$(2).J2S.getJavaVersion();
this.html5Applet=applet;
this.strJavaVersion=javaver;
this.strJavaVendor="Java2Script/Java 1.6 (HTML5)";
o=this.params.get$O("resourceZip");
if (Clazz_instanceOf(o, "java.lang.String")) $I$(2,"loadJavaResourcesFromZip$ClassLoader$S$java_util_Map",[this.getClass$().getClassLoader$(), o, null]);
System.out.println$S("JSApp initialized");
});

Clazz_newMeth(C$, 'extract$S$S',  function (string, key) {
{
return string.split(key)[0];
}
return null;
}, p$1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:45 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'javax.swing.SwingUtilities']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSAppletThread", null, 'javajs.util.JSThread');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$swingjs_JSAppletViewer$ThreadGroup$S',  function (ap, group, name) {
;C$.superclazz.c$$ThreadGroup$S.apply(this,[group, name]);C$.$init$.apply(this);
this.getThreadGroup$().秘appletViewer=ap;
}, 1);

Clazz_newMeth(C$, 'run1$I',  function (mode) {
mode=this.getThreadGroup$().秘appletViewer.run1$I(mode);
if (mode != 2) this.dispatchAndReturn$Runnable$I(null, mode);
});

Clazz_newMeth(C$, 'dispatchAndReturn$Runnable$I',  function (r, mode) {
var m=mode;
$I$(1,"invokeLater$Runnable",[((P$.JSAppletThread$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSAppletThread$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
this.b$['swingjs.JSAppletThread'].run1$I.apply(this.b$['swingjs.JSAppletThread'], [this.$finals$.m]);
});
})()
), Clazz_new_(P$.JSAppletThread$1.$init$,[this, {m:m}]))]);
});

Clazz_newMeth(C$, 'myInit$',  function () {
return false;
});

Clazz_newMeth(C$, 'isLooping$',  function () {
return false;
});

Clazz_newMeth(C$, 'myLoop$',  function () {
return false;
});

Clazz_newMeth(C$, 'whenDone$',  function () {
});

Clazz_newMeth(C$, 'getDelayMillis$',  function () {
return 0;
});

Clazz_newMeth(C$, 'onException$Exception',  function (e) {
});

Clazz_newMeth(C$, 'doFinally$',  function () {
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:46 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'java.net.URL','swingjs.api.Interface','java.awt.Dimension','javajs.util.Lst','java.awt.Insets','swingjs.JSThreadGroup','swingjs.JSAppletThread','Thread','sun.awt.SunToolkit','java.awt.Toolkit','swingjs.JSGraphicsConfiguration','sun.applet.AppletEventMulticaster','sun.applet.AppletEvent','javax.swing.JFrame','javax.swing.SwingUtilities','javax.imageio.ImageIO','java.util.ArrayList','swingjs.JSUtil','java.awt.Font','javajs.util.PT','swingjs.JSFrameViewer','swingjs.JSToolkit']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSAppletViewer", null, 'swingjs.JSFrameViewer', ['java.applet.AppletStub', 'java.applet.AppletContext']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.maximumSize=2147483647;
this.haveFrames=false;
this.defaultAppletSize=Clazz_new_($I$(3,1).c$$I$I,[10, 10]);
this.currentAppletSize=Clazz_new_($I$(3,1).c$$I$I,[10, 10]);
this.status=0;
this.allWindows=Clazz_new_($I$(4,1));
},1);

C$.$fields$=[['Z',['haveFrames','isResizable','haveResizable','addFrame'],'I',['maximumSize','nextStatus','status'],'O',['graphicsConfig','java.awt.GraphicsConfiguration','threadGroup','swingjs.JSThreadGroup','myThread','javajs.util.JSThread','defaultAppletSize','java.awt.Dimension','+currentAppletSize','listeners','sun.applet.AppletListener','allWindows','javajs.util.Lst','sharedOwnerFrame','java.awt.JSFrame','appContext','sun.awt.AppContext','timerQueue','java.util.ArrayList','jAppletFrame','javax.swing.JFrame']]]

Clazz_newMeth(C$, 'addWindow$java_awt_Window',  function (window) {
this.allWindows.removeObj$O(window);
this.allWindows.addLast$O(window);
});

Clazz_newMeth(C$, 'c$$java_util_Hashtable',  function (params) {
;C$.superclazz.c$$java_util_Hashtable.apply(this,[params]);C$.$init$.apply(this);
System.out.println$S("JSAppletViewer initializing2");
this.isApplet=true;
this.appletViewer=this;
p$1.setDisplayParams$java_util_Hashtable.apply(this, [params]);
}, 1);

Clazz_newMeth(C$, 'setDisplayParams$java_util_Hashtable',  function (params) {
this.display=params.get$O("display");
var s="" + params.get$O("isResizable");
this.isResizable="true".equalsIgnoreCase$S(s);
this.haveResizable=(this.isResizable || "false".equalsIgnoreCase$S(s) );
this.addFrame="true".equalsIgnoreCase$S("" + params.get$O("addFrame"));
this.insets=Clazz_new_($I$(5,1).c$$I$I$I$I,[0, 0, 0, 0]);
this.threadGroup=Clazz_new_($I$(6,1).c$$S,[this.appletName]);
this.myThread=Clazz_new_($I$(7,1).c$$swingjs_JSAppletViewer$ThreadGroup$S,[this, this.threadGroup, this.appletName]);
$I$(8).秘thisThread=this.myThread;
this.appContext=$I$(9).createNewAppContext$();
$I$(10).getDefaultToolkit$();
Clazz_new_($I$(11,1)).getDevice$();
}, p$1);

Clazz_newMeth(C$, 'start$',  function () {
if (this.status == 0) this.myThread.start$();
 else this.showStatus$S("already started");
});

Clazz_newMeth(C$, 'addAppletListener$sun_applet_AppletListener',  function (l) {
this.listeners=$I$(12).add$sun_applet_AppletListener$sun_applet_AppletListener(this.listeners, l);
});

Clazz_newMeth(C$, 'removeAppletListener$sun_applet_AppletListener',  function (l) {
this.listeners=$I$(12).remove$sun_applet_AppletListener$sun_applet_AppletListener(this.listeners, l);
});

Clazz_newMeth(C$, 'dispatchAppletEvent$I$O',  function (id, argument) {
if (this.listeners != null ) {
var evt=Clazz_new_($I$(13,1).c$$O$I$O,[this, id, argument]);
this.listeners.appletStateChanged$sun_applet_AppletEvent(evt);
}});

Clazz_newMeth(C$, 'isActive$',  function () {
return true;
});

Clazz_newMeth(C$, 'appletResize$I$I',  function (width, height) {
var currentSize=Clazz_new_($I$(3,1).c$$I$I,[this.currentAppletSize.width, this.currentAppletSize.height]);
this.currentAppletSize.width=width;
this.currentAppletSize.height=height;
this.applet.getRootPane$().setBounds$I$I$I$I(0, 0, this.getWidth$(), this.getHeight$());
this.applet.getContentPane$().setBounds$I$I$I$I(0, 0, this.getWidth$(), this.getHeight$());
this.applet.setBounds$I$I$I$I(0, 0, width, height);
(this.applet.getContentPane$()).revalidate$();
if (this.addFrame) {
this.jAppletFrame=Clazz_new_($I$(14,1).c$$S,["SwingJS Applet Viewer"]);
var pane=this.applet.getContentPane$();
this.jAppletFrame.setContentPane$java_awt_Container(pane);
this.applet.setVisible$Z(false);
this.jAppletFrame.pack$();
this.jAppletFrame.setDefaultCloseOperation$I(2);
}$I$(15,"invokeLater$Runnable",[((P$.JSAppletViewer$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSAppletViewer$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
this.b$['swingjs.JSAppletViewer'].applet.repaint$I$I$I$I(0, 0, this.b$['swingjs.JSAppletViewer'].getWidth$.apply(this.b$['swingjs.JSAppletViewer'], []), this.b$['swingjs.JSAppletViewer'].getHeight$.apply(this.b$['swingjs.JSAppletViewer'], []));
this.b$['swingjs.JSAppletViewer'].dispatchAppletEvent$I$O.apply(this.b$['swingjs.JSAppletViewer'], [51234, this.$finals$.currentSize]);
});
})()
), Clazz_new_(P$.JSAppletViewer$1.$init$,[this, {currentSize:currentSize}]))]);
});

Clazz_newMeth(C$, 'getDocumentBase$',  function () {
try {
return Clazz_new_([this.params.get$O("documentbase")],$I$(1,1).c$$S);
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getCodeBase$',  function () {
try {
return Clazz_new_([this.params.get$O("codepath")],$I$(1,1).c$$S);
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getParameter$S',  function (name) {
var s=C$.superclazz.prototype.getParameter$S.apply(this, [name]);
System.out.println$S("JSApp get parameter: " + name + " = " + s );
return s;
});

Clazz_newMeth(C$, 'getAppletContext$',  function () {
return this;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.html5Applet._getHeight();
});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.html5Applet._getWidth();
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I',  function (x, y, width, height) {
this.applet.reshape$I$I$I$I(x, y, width, height);
this.currentAppletSize.width=width;
this.currentAppletSize.height=height;
});

Clazz_newMeth(C$, 'getImage$java_net_URL',  function (url) {
try {
return $I$(16).read$java_net_URL(url);
} catch (t) {
return null;
}
});

Clazz_newMeth(C$, 'getApplet$S',  function (name) {
var applet=null;
name=name.toLowerCase$();

var applets = J2S._applets;
for (var a in applets) { if (a.toLowerCase() == "." + name) { return applets[a]._applet;
} }
return null;
});

Clazz_newMeth(C$, 'getApplets$',  function () {
var appletList=Clazz_new_($I$(17,1));

var applets = J2S._applets;
for (var a in applets) { var app = applets[a]._applet;
if (app && !appletList.contains$O(app)) appletList.add$O(app);
}
return ((P$.JSAppletViewer$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSAppletViewer$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.Enumeration', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.i=0;
},1);

C$.$fields$=[['I',['i']]]

Clazz_newMeth(C$, 'hasMoreElements$',  function () {
return this.i < this.$finals$.appletList.size$();
});

Clazz_newMeth(C$, 'nextElement$',  function () {
if (this.i >= this.$finals$.appletList.size$()) throw Clazz_new_(Clazz_load('java.util.NoSuchElementException'));
return this.$finals$.appletList.get$I(this.i++);
});
})()
), Clazz_new_(P$.JSAppletViewer$2.$init$,[this, {appletList:appletList}]));
});

Clazz_newMeth(C$, 'showDocument$java_net_URL',  function (url) {
$I$(18).showWebPage$O$O(url, null);
});

Clazz_newMeth(C$, 'showDocument$java_net_URL$S',  function (url, target) {
$I$(18).showWebPage$O$O(url, target);
});

Clazz_newMeth(C$, 'showStatus$S',  function (status) {
$I$(18).log$S(status);

Clazz._LoaderProgressMonitor.showStatus(status, true);
});

Clazz_newMeth(C$, 'showAppletStatus$S',  function (status) {
this.getAppletContext$().showStatus$S(this.htmlName + " " + status );
}, p$1);

Clazz_newMeth(C$, 'showAppletException$Throwable',  function (t) {

p$1.showAppletStatus$S("error " + (t.getMessage ? t.getMessage$() : t));
if (t.printStackTrace$) t.printStackTrace$();
else System.out.println(t.stack);
}, p$1);

Clazz_newMeth(C$, 'run1$I',  function (mode) {
System.out.println$S("JSAppletViewer thread run1 mode=" + mode + " status=" + this.nextStatus );
var ok=false;
switch (mode) {
case 0:
this.currentAppletSize.width=this.defaultAppletSize.width=this.getWidth$();
this.currentAppletSize.height=this.defaultAppletSize.height=this.getHeight$();
this.nextStatus=1;
ok=true;
break;
case 1:
switch (this.nextStatus) {
case 1:
if (this.status != 0) {
p$1.showAppletStatus$S.apply(this, ["notdisposed"]);
this.status=7;
break;
}System.out.println$S("JSAppletViewer runloader");
p$1.runLoader.apply(this, []);
this.nextStatus=(this.main == null  ? 2 : 76);
ok=true;
break;
case 2:
if (this.status != 1 && this.status != 5 ) {
p$1.showAppletStatus$S.apply(this, ["notloaded"]);
break;
}System.out.println$S("JSAppletViewer init");
this.applet.setFont$java_awt_Font(Clazz_new_($I$(19,1).c$$S$I$I,["Dialog", 0, 12]));
this.applet.秘resizeOriginal$I$I(this.defaultAppletSize.width, this.defaultAppletSize.height);
this.applet.init$();
this.applet.validate$();
this.status=2;
p$1.showAppletStatus$S.apply(this, ["initialized"]);
this.nextStatus=3;
ok=true;
break;
case 3:
if (this.status != 2 && this.status != 4 ) {
p$1.showAppletStatus$S.apply(this, ["notstarted"]);
this.status=7;
break;
}this.applet.getRootPane$().addNotify$();
System.out.println$S("JSAppletViewer start" + this.currentAppletSize);
this.applet.秘resizeOriginal$I$I(this.currentAppletSize.width, this.currentAppletSize.height);
this.applet.start$();
this.status=3;
p$1.showAppletStatus$S.apply(this, ["started"]);
this.nextStatus=35;
ok=true;
break;
case 35:
this.applet.getContentPane$().setBounds$java_awt_Rectangle(this.applet.getBounds$());
this.applet.setVisible$Z(true);
this.applet.秘setProxy$java_awt_Container(this.applet);
this.applet.validate$();
p$1.showAppletStatus$S.apply(this, ["ready"]);
$I$(18).readyCallback$S$S$java_awt_JSComponent$swingjs_JSAppletViewer(this.appletName, this.fullName, this.applet, this);
if (this.isResizable && !this.addFrame && this.resizer == null   ) {
this.resizer=($I$(18).getInstance$S("swingjs.plaf.Resizer")).set$swingjs_JSFrameViewer$javax_swing_RootPaneContainer(this, this.top);
if (this.resizer != null ) this.resizer.show$();
}this.applet.秘repaint$();
break;
case 4:
if (this.status == 3) {
this.status=4;
this.applet.setVisible$Z(false);
this.applet.stop$();
p$1.showAppletStatus$S.apply(this, ["stopped"]);
} else {
p$1.showAppletStatus$S.apply(this, ["notstopped"]);
this.status=7;
}break;
case 5:
if (this.status == 4 || this.status == 2 ) {
this.status=5;
this.applet.destroy$();
p$1.showAppletStatus$S.apply(this, ["destroyed"]);
} else {
p$1.showAppletStatus$S.apply(this, ["notdestroyed"]);
this.status=7;
}break;
case 75:
if (this.status == 5 || this.status == 1 ) {
p$1.showAppletStatus$S.apply(this, ["notdisposed"]);
this.status=7;
} else {
this.status=0;
this.applet=null;
p$1.showAppletStatus$S.apply(this, ["disposed"]);
}break;
case 76:
p$1.showAppletStatus$S.apply(this, ["running " + this.main]);
var args=this.params.get$O("args");
if (Clazz_instanceOf(args, "java.lang.String")) args=$I$(20).split$S$S(args, " ");
(this.applet).runMain$swingjs_JSAppletViewer$SA(this, args);
break;
case 6:
break;
default:
System.out.println$S("unrecognized JSAppletViewer status: " + this.nextStatus);
break;
}
break;
default:
System.out.println$S("unrecognized JSAppletThread mode: " + mode);
break;
}
return (ok ? 1 : 2);
});

Clazz_newMeth(C$, 'runLoader',  function () {
this.dispatchAppletEvent$I$O(51235, null);
this.status=1;
this.main=this.getParameter$S("main");
var code=(this.main == null  ? this.getParameter$S("code") : null);
try {
if (code == null  && this.main == null  ) {
System.err.println$S("runloader.err-- \"code\" or \"main\" must be specified.");
throw Clazz_new_(Clazz_load('InstantiationException').c$$S,["\"code\" or \"main\" must be specified."]);
}if (code == null ) code="swingjs.JSDummyApplet";
 else if (code.indexOf$S(".") < 0) code="_." + code;
this.top=this.applet=$I$(18).getInstance$S(code);
if (this.applet == null ) {
System.out.println$S(code + " could not be launched");
this.status=7;
} else if (!(Clazz_instanceOf(this.applet, "javax.swing.JApplet"))) {
$I$(18).alert$O(code + " is not a JApplet!?");
this.status=7;
}var name=this.htmlName;

J2S._applets["." + name] = {_applet:this.applet};
} catch (e$$) {
if (Clazz_exceptionOf(e$$,"InstantiationException")){
var e = e$$;
{
this.status=7;
p$1.showAppletException$Throwable.apply(this, [e]);
return;
}
} else if (Clazz_exceptionOf(e$$,"Exception")){
var e = e$$;
{
this.status=7;
p$1.showAppletException$Throwable.apply(this, [e]);
return;
}
} else if (Clazz_exceptionOf(e$$,"ThreadDeath")){
var e = e$$;
{
this.status=7;
p$1.showAppletStatus$S.apply(this, ["death"]);
return;
}
} else if (Clazz_exceptionOf(e$$,"Error")){
var e = e$$;
{
this.status=7;
p$1.showAppletException$Throwable.apply(this, [e]);
return;
}
} else {
throw e$$;
}
} finally {
this.dispatchAppletEvent$I$O(51236, null);
}
if (this.applet != null ) {
this.applet.setStub$java_applet_AppletStub(this);
this.applet.setVisible$Z(false);
this.applet.setDispatcher$();
p$1.showAppletStatus$S.apply(this, ["loaded"]);
}}, p$1);

Clazz_newMeth(C$, 'newFrameViewer$Z',  function (forceNew) {
return (this.haveFrames || forceNew  ? Clazz_new_($I$(21,1)) : null);
});

Clazz_newMeth(C$, 'exit$',  function () {
for (var i=this.allWindows.size$(); --i >= 0; ) try {
this.allWindows.get$I(i).dispose$();
} catch (e) {
}

if (this.isApplet && this.applet != null  ) {
this.applet.setVisible$Z(false);
this.html5Applet._show(false);
}});

Clazz_newMeth(C$, 'getAudioClip$java_net_URL',  function (url) {
return $I$(22).getAudioClip$java_net_URL(url);
});

C$.$static$=function(){C$.$static$=0;
{
if ($I$(1).秘factory == null ) try {
$I$(1,"setURLStreamHandlerFactory$java_net_URLStreamHandlerFactory",[$I$(2).getInstance$S$Z("javajs.util.AjaxURLStreamHandlerFactory", false)]);
} catch (e) {
}
};
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:46 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'swingjs.JSUtil']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSDummyApplet", null, 'javax.swing.JApplet');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, ['runMain$swingjs_JSAppletViewer$SA','runMain'],  function (v, args) {
var className=v.main;
var theClass=null;
try {
theClass=Clazz_forName(className);
} catch (e) {
if (Clazz_exceptionOf(e,"ClassNotFoundException")){
System.out.println$S("Running main but cannot find class " + className);
$I$(1,"alert$O",["Cannot find class " + className + " for running main(args)" ]);
e.printStackTrace$();
return null;
} else {
throw e;
}
}
System.out.println$S("Running main(args) in class " + className);

setTimeout(function(){ v.applet.app = theClass.$clazz$.main$SA.call(null, args || []) || null;
$I$(1).readyCallback$S$S$java_awt_JSComponent$swingjs_JSAppletViewer(v.appletName, v.fullName, v.applet, v);

},1);
return theClass;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:46 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'swingjs.JSUtil','Thread','java.awt.event.FocusEvent','swingjs.JSToolkit','java.awt.JSComponent','java.awt.event.WindowEvent','java.awt.KeyboardFocusManager']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSFocusPeer", null, null, 'java.awt.peer.KeyboardFocusManagerPeer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['currentWindow','java.awt.Window','currentFocusOwner','java.awt.Component']]]

Clazz_newMeth(C$, 'setCurrentFocusedWindow$java_awt_Window',  function (win) {
this.currentWindow=win;
});

Clazz_newMeth(C$, 'clearGlobalFocusOwner$java_awt_Window',  function (activeWindow) {
this.currentFocusOwner=null;
});

Clazz_newMeth(C$, 'getCurrentFocusedWindow$',  function () {
var active=p$1.getAccessibleActiveElement.apply(this, []);
var o=$I$(1).jQuery.$(active).closest("swingjs-window");
return this.currentWindow=C$.getAccessibleComponentFor$swingjs_api_js_DOMNode(o[0]  ||null);
});

Clazz_newMeth(C$, 'getCurrentFocusOwner$O',  function (related) {
this.currentFocusOwner=C$.getAccessibleComponentFor$swingjs_api_js_DOMNode(related == null  ? p$1.getAccessibleActiveElement.apply(this, []) : related);
if (this.currentFocusOwner == null ) this.currentWindow=null;
return this.currentFocusOwner;
});

Clazz_newMeth(C$, 'setCurrentFocusOwner$java_awt_Component',  function (comp) {
this.currentFocusOwner=comp;
if (comp == null ) return;
((comp).ui).focus$();
});

Clazz_newMeth(C$, 'getAccessibleActiveElement',  function () {
var node=C$.getActiveElement$();
return (node == null  || C$.getAccessibleComponentFor$swingjs_api_js_DOMNode(node) == null   ? null : node);
}, p$1);

Clazz_newMeth(C$, 'getActiveElement$',  function () {
{
var node = document.activeElement;
return  (!node || node == document.body || !node.ui && !node["data-component"] ? null : node);
}
}, 1);

Clazz_newMeth(C$, 'getAccessibleComponentFor$swingjs_api_js_DOMNode',  function (node) {
var c=node && node.ui && node.ui.jc || node && node["data-component"]||null;
return (c != null  && c.getAppContext$().getThreadGroup$() === $I$(2).currentThread$().getThreadGroup$()   ? c : null);
}, 1);

Clazz_newMeth(C$, 'handleJSMouseEventFocus$java_awt_AWTEvent',  function (e) {
System.out.println$S("handling mouseeventfocus event " + e);
});

Clazz_newMeth(C$, 'getCurrentFocusOwner$',  function () {
return this.getCurrentFocusOwner$O(null);
});

Clazz_newMeth(C$, 'handleJSFocus$O$O$Z',  function (jco, related, focusGained) {
var c0=jco;
var e;
if (related == null ) {
e=Clazz_new_($I$(3,1).c$$java_awt_Component$I,[c0, focusGained ? 1004 : 1005]);
c0.dispatchEvent$java_awt_AWTEvent(e);
return;
}var other;
if (focusGained) {
other=C$.getAccessibleComponentFor$swingjs_api_js_DOMNode(related);
if (other != null  && other !== c0  ) {
other.dispatchEvent$java_awt_AWTEvent(Clazz_new_($I$(3,1).c$$java_awt_Component$I$Z$java_awt_Component,[other, 1005, false, c0]));
}c0.dispatchEvent$java_awt_AWTEvent(Clazz_new_($I$(3,1).c$$java_awt_Component$I$Z$java_awt_Component,[c0, 1004, false, other]));
} else {
other=$I$(4).getCurrentFocusOwner$O(related);
c0.dispatchEvent$java_awt_AWTEvent(Clazz_new_($I$(3,1).c$$java_awt_Component$I$Z$java_awt_Component,[c0, 1005, false, other]));
if (other != null  && other !== c0  ) other.dispatchEvent$java_awt_AWTEvent(Clazz_new_($I$(3,1).c$$java_awt_Component$I$Z$java_awt_Component,[other, 1004, false, c0]));
}}, 1);

Clazz_newMeth(C$, 'checkFrameFocusOnMouseDown$java_awt_AWTEvent',  function (e) {
var p=$I$(5,"秘getTopInvokableAncestor$java_awt_Component$Z",[e.getSource$(), true]);
if (p == null  || this.getCurrentFocusOwner$() != null  && p === this.currentWindow   ) return;
var w=this.currentWindow;
p.dispatchEvent$java_awt_AWTEvent(Clazz_new_($I$(6,1).c$$java_awt_Window$I,[p, 205]));
this.setCurrentFocusedWindow$java_awt_Window(p);
if (Clazz_instanceOf(p, "javax.swing.JInternalFrame")) {
try {
(p).setSelected$Z(true);
} catch (e1) {
if (Clazz_exceptionOf(e1,"java.beans.PropertyVetoException")){
e1.printStackTrace$();
} else {
throw e1;
}
}
} else if (Clazz_instanceOf(p, "java.awt.Window")) {
(p).toFront$();
}if (p.秘isFocusSetAndEnabled$()) {
((p).ui).focus$();
C$.handleJSFocus$O$O$Z(p, w, true);
}});

Clazz_newMeth(C$, 'focus$swingjs_api_js_DOMNode',  function (focusNode) {

focusNode.focus();
}, 1);

Clazz_newMeth(C$, 'setFocusLast$java_applet_JSApplet',  function (applet) {
var c=$I$(7).getMostRecentFocusOwner$java_awt_Window(applet);
if (c != null ) c.requestFocus$();
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:46 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "JSFontMetrics");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'fontLeading$java_awt_Font',  function (font) {
switch (font.getName$()) {
default:
case "SansSerif":
case "Dialog":
return font.getSize2D$() * 0.0327;
case "Serif":
return font.getSize2D$() * 0.0425;
case "Monospaced":
return 0;
}
}, 1);

Clazz_newMeth(C$, 'fontAscent$java_awt_Font',  function (font) {
return font.getSize2D$() * 1.005371;
}, 1);

Clazz_newMeth(C$, 'fontDescent$java_awt_Font',  function (font) {
switch (font.getName$()) {
default:
return font.getSize2D$() * 0.2197;
case "Monospaced":
return font.getSize2D$() * 0.3003;
}
}, 1);

Clazz_newMeth(C$, 'charsToGlyphs$I$CA$IA',  function (count, text, glyphs) {
for (var i=0; i < count; i++) glyphs[i]=text[i].$c();

}, 1);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:46 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'Thread','java.awt.Insets','swingjs.JSMouse','swingjs.JSGraphics2D','swingjs.api.js.DOMNode','swingjs.plaf.Resizer']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSFrameViewer", null, 'swingjs.JSApp', 'swingjs.api.js.JSInterface');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.resizable=true;
},1);

C$.$fields$=[['Z',['resizable'],'S',['frameID','canvasId'],'O',['jsgraphics','swingjs.JSGraphics2D','top','javax.swing.RootPaneContainer','appletViewer','swingjs.JSAppletViewer','resizer','swingjs.plaf.Resizer','insets','java.awt.Insets','display','java.lang.Object','applet','javax.swing.JApplet','mouse','swingjs.JSMouse','canvas','swingjs.api.js.HTML5Canvas']]
,['I',['canvasCount'],'O',['canvas00','swingjs.api.js.HTML5Canvas']]]

Clazz_newMeth(C$, 'getTopComponent$',  function () {
return this.top;
});

Clazz_newMeth(C$, 'getInsets$',  function () {
return this.insets;
});

Clazz_newMeth(C$, 'c$$java_util_Hashtable',  function (params) {
;C$.superclazz.c$$java_util_Hashtable.apply(this,[params]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'setForWindow$javax_swing_RootPaneContainer',  function (c) {
this.isFrame=true;
this.top=c;
if ((this.top).秘appletViewer == null ) {
(this.top).秘appletViewer=$I$(1).currentThread$().getThreadGroup$().秘getAppletViewer$();
}this.appletViewer=(this.top).秘appletViewer;
if (Clazz_instanceOf(c, "javax.swing.JApplet")) this.applet=c;
this.fullName=this.appletViewer.fullName;
this.canvas=null;
this.jsgraphics=null;
this.insets=Clazz_new_($I$(2,1).c$$I$I$I$I,[20, 0, 0, 0]);
this.getGraphics$I$I$javax_swing_RootPaneContainer(0, 0, c);
return this;
});

Clazz_newMeth(C$, 'cacheFileByName$S$Z',  function (fileName, isAdd) {
return 0;
});

Clazz_newMeth(C$, 'cachePut$S$O',  function (key, data) {
});

Clazz_newMeth(C$, 'destroy$',  function () {
});

Clazz_newMeth(C$, 'getFullName$',  function () {
return this.fullName;
});

Clazz_newMeth(C$, 'openFileAsyncSpecial$S$I',  function (fileName, flags) {
});

Clazz_newMeth(C$, 'processMouseEvent$I$I$I$I$J$O$I',  function (id, x, y, modifiers, time, jqevent, scroll) {
p$1.getMouse.apply(this, []).processEvent$I$I$I$I$J$O$I(id, x, y, modifiers, time, jqevent, scroll);
return false;
});

Clazz_newMeth(C$, 'getMouse',  function () {
return (this.mouse == null  ? this.mouse=Clazz_new_($I$(3,1).c$$swingjs_JSFrameViewer,[this]) : this.mouse);
}, p$1);

Clazz_newMeth(C$, 'processTwoPointGesture$FAAA',  function (touches) {
p$1.getMouse.apply(this, []).processTwoPointGesture$FAAA(touches);
});

Clazz_newMeth(C$, 'setDisplay$swingjs_api_js_HTML5Canvas',  function (canvas) {
this.canvas=canvas;
this.jsgraphics=null;
});

Clazz_newMeth(C$, 'setScreenDimension$I$I',  function (width, height) {
this.setGraphics$java_awt_Graphics$I$I$javax_swing_RootPaneContainer((this.jsgraphics=null), width, height, this.top);
if (this.top != null ) (this.top).秘resizeOriginal$I$I(width, height);
});

Clazz_newMeth(C$, 'setGraphics$java_awt_Graphics$I$I$javax_swing_RootPaneContainer',  function (g, width, height, window) {
return (g == null  ? this.getGraphics$I$I$javax_swing_RootPaneContainer(width, height, window) : g);
});

Clazz_newMeth(C$, 'setStatusDragDropped$I$I$I$S',  function (mode, x, y, fileName) {
return false;
});

Clazz_newMeth(C$, 'startHoverWatcher$Z',  function (enable) {
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
return this.getGraphics$I$I$javax_swing_RootPaneContainer(0, 0, this.top);
});

Clazz_newMeth(C$, 'getGraphics$I$I$javax_swing_RootPaneContainer',  function (wNew, hNew, window) {
if (window == null ) window=this.top;
if (window == null ) return null;
var c=window;
if (wNew == 0) {
wNew=Math.max(0, window.getContentPane$().getWidth$());
hNew=Math.max(0, window.getContentPane$().getHeight$());
}var wOld=0;
var hOld=0;
if (c.秘canvas != null ) {

wOld = c.秘canvas.width; hOld = c.秘canvas.height;
}if (wNew >= 0 && hNew >= 0  && (wOld != wNew || hOld != hNew  || c.秘canvas == null   || this.jsgraphics == null  ) ) {
this.jsgraphics=Clazz_new_([c.秘canvas=p$1.newCanvas$I$I$javax_swing_RootPaneContainer.apply(this, [wNew, hNew, window])],$I$(4,1).c$$O);
}return this.jsgraphics;
});

Clazz_newMeth(C$, 'newCanvas$I$I$javax_swing_RootPaneContainer',  function (width, height, window) {
if (this.isApplet) {
var c=this.html5Applet._getHtml5Canvas();
if (c != null ) {
return this.canvas=c;
}}if (width == 0 || height == 0 ) {
width=height=0;
if (C$.canvas00 != null ) return C$.canvas00;
}var userFramedApplet=null;
var root=window.getRootPane$();
var contentPane=window.getContentPane$();
if (contentPane.getComponentCount$() > 0) {
var app=contentPane.getComponent$I(0);
if (Clazz_instanceOf(app, "javax.swing.JApplet")) root=(userFramedApplet=app).getRootPane$();
}var rootNode=(root == null  ? null : (root.getUI$()).domNode);
if (rootNode != null ) $I$(5).dispose(this.canvas);
this.display=this.canvasId=this.appletViewer.appletName + "秘canvas" + ++C$.canvasCount ;
this.canvas=$I$(5).createElement("canvas", this.canvasId);
if (userFramedApplet != null ) {
var appViewer=userFramedApplet.getFrameViewer$();
appViewer.setDisplay$swingjs_api_js_HTML5Canvas(this.canvas);
}var iTop=(root == null  ? 0 : root.getContentPane$().getY$());
$I$(5).setTopLeftAbsolute(this.canvas, iTop, 0);
$I$(5).setStyles(this.canvas, ["width", width + "px", "height", height + "px"]);
if (width > 0) {
var ui=root.getParent$().秘getUI$();
if (ui != null ) ui.updateDOMNode$();
if (this.resizer != null ) this.resizer.setPosition$I$I(0, 0);
if (rootNode != null ) {
rootNode.appendChild(this.canvas);
}} else {
C$.canvas00=this.canvas;
}
this.canvas.width = width; this.canvas.height = height;
return this.canvas;
}, p$1);

Clazz_newMeth(C$, 'setResizable$Z',  function (tf) {
this.resizable=tf;
if (!this.isResizable$()) this.resizable=false;
if (this.resizer != null ) this.resizer.setEnabled$Z(this.resizable);
 else if (this.resizable && p$1.newResizer.apply(this, []) != null  ) this.resizer.setPosition$I$I(0, 0);
});

Clazz_newMeth(C$, 'isResizable$',  function () {
return this.resizable && (!this.appletViewer.haveResizable || this.appletViewer.isResizable ) ;
});

Clazz_newMeth(C$, 'getResizer$',  function () {
return (this.resizer != null  || !this.isResizable$()  ? this.resizer : p$1.newResizer.apply(this, []));
});

Clazz_newMeth(C$, 'newResizer',  function () {
this.resizer=Clazz_new_($I$(6,1)).set$swingjs_JSFrameViewer$javax_swing_RootPaneContainer(this, this.top);
if (this.resizer != null ) this.resizer.show$();
return this.resizer;
}, p$1);

Clazz_newMeth(C$, 'getDiv$S',  function (id) {
{
return J2S.$(this.html5Applet, id)[0];
}
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'swingjs.JSUtil','java.awt.RenderingHints','java.util.Hashtable','java.awt.geom.AffineTransform','java.awt.BasicStroke','java.awt.Color','swingjs.JSToolkit','swingjs.api.js.HTML5CanvasContext2D','swingjs.api.js.DOMNode','java.awt.Rectangle','swingjs.JSImagekit',['java.awt.geom.RoundRectangle2D','.Double'],'java.awt.Font','java.awt.Toolkit','java.awt.AlphaComposite','swingjs.JSGraphicsCompositor']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSGraphics2D", null, null, 'Cloneable');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.transform=Clazz_new_($I$(4,1));
this.unclipped=false;
},1);

C$.$fields$=[['Z',['isShifted','inPath','thinLine','clearing','unclipped'],'I',['constrainX','constrainY','width','height','initialState','lastx','lasty','nx','ny'],'O',['canvas','swingjs.api.js.HTML5Canvas','ctx','swingjs.api.js.HTML5CanvasContext2D','gc','java.awt.GraphicsConfiguration','currentStroke','java.awt.BasicStroke','currentClip','java.lang.Object','alphaComposite','java.awt.AlphaComposite','font','java.awt.Font','hints','java.awt.RenderingHints','transform','java.awt.geom.AffineTransform','backgroundColor','java.awt.Color','fontTransform','java.awt.geom.AffineTransform','image','java.awt.image.BufferedImage','foregroundColor','java.awt.Color','rrect','java.awt.geom.RoundRectangle2D.Double','imageData','swingjs.api.js.HTML5CanvasContext2D.ImageData','buf8','int[]','shader','java.awt.Paint','clearColorSaved','java.awt.Color']]
,['Z',['debugClip'],'F',['pixelRatio'],'O',['aa','java.awt.RenderingHints','pts','double[]','nodash','int[]','nohints','java.awt.RenderingHints']]]

Clazz_newMeth(C$, 'getContext2D$',  function () {
return this.ctx;
});

Clazz_newMeth(C$, 'c$$O',  function (canvas) {
;C$.$init$.apply(this);
this.canvas=canvas;
this.ctx=this.canvas.getContext("2d");
this.setStroke$java_awt_Stroke(Clazz_new_($I$(5,1)));
{
this.gc = SwingJS; this.width = canvas.width; this.height = canvas.height;
}
this.setAntialias$Z(true);
p$1.clipPriv$I$I$I$I.apply(this, [0, 0, this.width, this.height]);
}, 1);

Clazz_newMeth(C$, 'c$$swingjs_api_js_HTML5Canvas$java_awt_image_BufferedImage',  function (canvas, image) {
C$.c$$O.apply(this, [canvas]);
this.image=image;
}, 1);

Clazz_newMeth(C$, 'setAntialias$Z',  function (tf) {

this.ctx.mozImageSmoothingEnabled = false;
this.ctx.webkitImageSmoothingEnabled = false;
this.ctx.msImageSmoothingEnabled = false;
this.ctx.imageSmoothingEnabled = false;
this.isShifted=tf;
});

Clazz_newMeth(C$, 'getDeviceConfiguration$',  function () {
return this.gc;
});

Clazz_newMeth(C$, 'drawLine$I$I$I$I',  function (x0, y0, x1, y1) {
var inPath=this.inPath;
if (!inPath) {
if (x0 == x1 && y0 == y1 ) {
this.ctx.fillRect(x0, y0, 1, 1);
return;
}this.doStroke$Z(true);
}this.ctx.moveTo(x0, y0);
this.ctx.lineTo(x1, y1);
if (!inPath) this.doStroke$Z(false);
});

Clazz_newMeth(C$, 'drawOval$I$I$I$I',  function (left, top, width, height) {
this.doStroke$Z(true);
if (width == height) p$1.doCirc$I$I$I.apply(this, [left, top, width]);
 else p$1.doArc$D$D$D$D$D$D$I.apply(this, [left, top, width, height, 0, 360, 0]);
this.doStroke$Z(false);
});

Clazz_newMeth(C$, 'fillOval$I$I$I$I',  function (left, top, width, height) {
this.ctx.beginPath();
if (width == height) p$1.doCirc$I$I$I.apply(this, [left, top, width]);
 else p$1.doArc$D$D$D$D$D$D$I.apply(this, [left, top, width, height, 0, 360, 1]);
this.ctx.fill();
});

Clazz_newMeth(C$, 'doCirc$I$I$I',  function (left, top, diameter) {
if (diameter <= 0) return;
var r=diameter / 2.0;
this.ctx.arc(left + r, top + r, r, 0, 6.283185307179586, false);
}, p$1);

Clazz_newMeth(C$, 'drawArc$I$I$I$I$I$I',  function (x, y, width, height, startAngle, arcAngle) {
this.doStroke$Z(true);
p$1.doArc$D$D$D$D$D$D$I.apply(this, [x, y, width, height, startAngle, arcAngle, 0]);
this.doStroke$Z(false);
});

Clazz_newMeth(C$, 'fillArc$I$I$I$I$I$I',  function (centerX, centerY, width, height, startAngle, arcAngle) {
this.ctx.beginPath();
p$1.doArc$D$D$D$D$D$D$I.apply(this, [centerX, centerY, width, height, startAngle, arcAngle, 1]);
this.ctx.fill();
});

Clazz_newMeth(C$, 'doArc$D$D$D$D$D$D$I',  function (x, y, width, height, startAngle, arcAngle, mode) {
if (width <= 0  || height <= 0  ) return;
this.ctx.save();
{
if (arcAngle < 0 ) {
startAngle+=arcAngle;
arcAngle=-arcAngle;
}this.ctx.translate(x, y);
this.ctx.scale(width / 2, height / 2);
this.ctx.beginPath();
this.ctx.arc(1, 1, 1, p$1.toRad$D.apply(this, [360 - startAngle]), p$1.toRad$D.apply(this, [360 - arcAngle - startAngle ]), true);
if (mode == 1) this.ctx.lineTo(1, 1);
}this.ctx.restore();
}, p$1);

Clazz_newMeth(C$, 'toRad$D',  function (a) {
return a * (0.017453292519943295);
}, p$1);

Clazz_newMeth(C$, 'clearRect$I$I$I$I',  function (x, y, width, height) {
p$1.clearRectPriv$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'clearRectPriv$I$I$I$I',  function (x, y, w, h) {
this.ctx.clearRect(x, y, w, h);
if (!this.clearing) p$1.setGraphicsColor$java_awt_Color.apply(this, [this.backgroundColor == null  ? $I$(6).WHITE : this.backgroundColor]);
this.fillRect$I$I$I$I(x, y, w, h);
if (!this.clearing) p$1.setGraphicsColor$java_awt_Color.apply(this, [this.foregroundColor]);
}, p$1);

Clazz_newMeth(C$, 'drawPolygon$java_awt_Polygon',  function (p) {
p$1.doPoly$IA$IA$I$I.apply(this, [p.xpoints, p.ypoints, p.npoints, 1]);
});

Clazz_newMeth(C$, 'drawPolygon$IA$IA$I',  function (axPoints, ayPoints, nPoints) {
p$1.doPoly$IA$IA$I$I.apply(this, [axPoints, ayPoints, nPoints, 1]);
});

Clazz_newMeth(C$, 'drawPolyline$IA$IA$I',  function (xPoints, yPoints, nPoints) {
p$1.doPoly$IA$IA$I$I.apply(this, [xPoints, yPoints, nPoints, 0]);
});

Clazz_newMeth(C$, 'fillPolygon$java_awt_Polygon',  function (p) {
p$1.doPoly$IA$IA$I$I.apply(this, [p.xpoints, p.ypoints, p.npoints, 2]);
});

Clazz_newMeth(C$, 'fillPolygon$IA$IA$I',  function (axPoints, ayPoints, nPoints) {
p$1.doPoly$IA$IA$I$I.apply(this, [axPoints, ayPoints, nPoints, 2]);
});

Clazz_newMeth(C$, 'doPoly$IA$IA$I$I',  function (axPoints, ayPoints, nPoints, mode) {
this.ctx.beginPath();
if (mode != 2 && !this.thinLine ) this.ctx.translate(0.5, 0.5);
this.ctx.moveTo(axPoints[0], ayPoints[0]);
for (var i=1; i < nPoints; i++) {
this.ctx.lineTo(axPoints[i], ayPoints[i]);
}
if (mode != 0) this.ctx.lineTo(axPoints[0], ayPoints[0]);
if (mode != 2) {
this.ctx.stroke();
if (!this.thinLine) this.ctx.translate(-0.5, -0.5);
} else {
this.ctx.fill();
}}, p$1);

Clazz_newMeth(C$, 'drawRect$I$I$I$I',  function (x, y, width, height) {
if (width <= 0 || height <= 0 ) return;
if (!this.thinLine) this.ctx.translate(0.5, 0.5);
this.ctx.beginPath();
this.ctx.rect(x, y, width, height);
this.ctx.stroke();
if (!this.thinLine) this.ctx.translate(-0.5, -0.5);
});

Clazz_newMeth(C$, 'fillRect$I$I$I$I',  function (x, y, width, height) {
if (width <= 0 || height <= 0 ) return;
this.ctx.fillRect(x, y, width, height);
});

Clazz_newMeth(C$, 'draw3DRect$I$I$I$I$Z',  function (x, y, width, height, raised) {
p$1.do3DRect$I$I$I$I$Z$I.apply(this, [x, y, width, height, raised, 1]);
});

Clazz_newMeth(C$, 'fill3DRect$I$I$I$I$Z',  function (x, y, width, height, raised) {
p$1.do3DRect$I$I$I$I$Z$I.apply(this, [x, y, width, height, raised, 2]);
});

Clazz_newMeth(C$, 'do3DRect$I$I$I$I$Z$I',  function (x, y, width, height, raised, mode) {
if (width <= 0 || height <= 0 ) return;
var p=this.getPaint$();
var c=this.getColor$();
var brighter=c.brighter$();
var darker=c.darker$();
if (!raised) {
this.setColor$java_awt_Color(darker);
} else if (p !== c ) {
this.setColor$java_awt_Color(c);
}if (mode == 2) this.fillRect$I$I$I$I(x + 1, y + 1, width - 2, height - 2);
this.setColor$java_awt_Color(raised ? brighter : darker);
this.fillRect$I$I$I$I(x, y, 1, height);
this.fillRect$I$I$I$I(x + 1, y, width - 2, 1);
this.setColor$java_awt_Color(raised ? darker : brighter);
this.fillRect$I$I$I$I(x + 1, y + height - 1, width - 1, 1);
this.fillRect$I$I$I$I(x + width - 1, y, 1, height - 1);
this.setPaint$java_awt_Paint(p);
}, p$1);

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (font) {
if (font === this.font ) return;
this.font=font;
this.fontTransform=null;
if (font != null ) {
this.fontTransform=font.秘getRawTransformOrNull$();
this.ctx.font=$I$(7).getCanvasFont$java_awt_Font(font);
}});

Clazz_newMeth(C$, 'setStrokeBold$Z',  function (tf) {
p$1.setLineWidth$D.apply(this, [tf ? 2.0 : 1.0]);
});

Clazz_newMeth(C$, 'setLineWidth$D',  function (d) {
this.ctx.lineWidth=d;
}, p$1);

Clazz_newMeth(C$, 'canDoLineTo$',  function () {
return true;
});

Clazz_newMeth(C$, 'doStroke$Z',  function (isBegin) {
this.inPath=isBegin;
if (isBegin && !this.thinLine ) {
this.ctx.translate(0.5, 0.5);
this.ctx.beginPath();
} else {
this.ctx.stroke();
if (!this.thinLine) this.ctx.translate(-0.5, -0.5);
}});

Clazz_newMeth(C$, 'lineTo$I$I',  function (x2, y2) {
if (this.inPath) {
this.ctx.lineTo(x2, y2);
} else {
if (!this.thinLine) this.ctx.translate(0.5, 0.5);
this.ctx.lineTo(x2, y2);
if (!this.thinLine) this.ctx.translate(-0.5, -0.5);
}});

Clazz_newMeth(C$, 'clip$java_awt_Shape',  function (s) {
this.ctx.beginPath();
p$1.doShape$java_awt_Shape.apply(this, [s]);
this.currentClip=s;
this.ctx.clip();
});

Clazz_newMeth(C$, 'draw$java_awt_Shape',  function (s) {
this.ctx.save();
this.doStroke$Z(true);
p$1.doShape$java_awt_Shape.apply(this, [s]);
this.doStroke$Z(false);
this.ctx.restore();
});

Clazz_newMeth(C$, 'drawText$CA$java_awt_Font$F$F',  function (chars, font, x, y) {
this.ctx.save();
var f=this.getFont$();
this.setFont$java_awt_Font(font);
var tx=this.fontTransform;
if (tx != null  && !tx.isIdentity$() ) {
this.ctx.transform(tx.getScaleX$(), tx.getShearX$(), tx.getTranslateX$(), tx.getShearY$(), tx.getScaleX$(), tx.getTranslateY$());
}p$1.fillText$S$F$F.apply(this, [chars.join("") ||null, x, y]);
this.setFont$java_awt_Font(f);
this.ctx.restore();
});

Clazz_newMeth(C$, 'drawGlyphVector$java_awt_font_GlyphVector$F$F',  function (gv, x, y) {
$I$(1).notImplemented$S(null);
});

Clazz_newMeth(C$, 'doShape$java_awt_Shape',  function (s) {
var pi=s.getPathIterator$java_awt_geom_AffineTransform(null);
while (!pi.isDone$()){
switch (pi.currentSegment$DA(C$.pts)) {
case 0:
this.ctx.moveTo(C$.pts[0], C$.pts[1]);
break;
case 1:
this.ctx.lineTo(C$.pts[0], C$.pts[1]);
break;
case 2:
this.ctx.quadraticCurveTo(C$.pts[0], C$.pts[1], C$.pts[2], C$.pts[3]);
break;
case 3:
this.ctx.bezierCurveTo(C$.pts[0], C$.pts[1], C$.pts[2], C$.pts[3], C$.pts[4], C$.pts[5]);
break;
case 4:
this.ctx.closePath();
break;
}
pi.next$();
}
return pi.getWindingRule$();
}, p$1);

Clazz_newMeth(C$, 'fill$java_awt_Shape',  function (s) {
this.ctx.save();
if (this.shader != null ) {
this.ctx.beginPath();
p$1.doShape$java_awt_Shape.apply(this, [s]);
this.ctx.clip();
if (Clazz_instanceOf(this.shader, "java.awt.GradientPaint")) {
var p=this.shader;
var p1=p.getPoint1$();
var p2=p.getPoint2$();
$I$(8,"createLinearGradient",[this.ctx, p1, p2, $I$(7,"getCSSColor$java_awt_Color$Z",[p.getColor1$(), true]), $I$(7,"getCSSColor$java_awt_Color$Z",[p.getColor2$(), true])]);
this.ctx.beginPath();
p$1.doShape$java_awt_Shape.apply(this, [s]);
this.ctx.fill();
} else {
var yourRect=s.getBounds2D$();
var sx=this.transform.getScaleX$();
var sy=this.transform.getScaleY$();
var w=Math.ceil(sx * yourRect.getWidth$());
var h=Math.ceil(sy * yourRect.getHeight$());
var shaderCanvas=this.shader.秘canvas ||null;
if (shaderCanvas == null  || $I$(9).getWidth(shaderCanvas) < w   || $I$(9).getHeight(shaderCanvas) < h  ) {
var myRect=Clazz_new_([0, 0, (w|0), (h|0)],$I$(10,1).c$$I$I$I$I);
var g2=$I$(11,"createCanvasGraphics$I$I$S",[(w|0), (h|0), null]);
if (C$.aa == null ) C$.aa=Clazz_new_([$I$(2).KEY_ANTIALIASING, $I$(2).VALUE_ANTIALIAS_ON],$I$(2,1).c$$java_awt_RenderingHints_Key$O);
var raster=this.shader.createContext$java_awt_image_ColorModel$java_awt_Rectangle$java_awt_geom_Rectangle2D$java_awt_geom_AffineTransform$java_awt_RenderingHints(null, myRect, yourRect, this.transform, C$.aa).getRaster$I$I$I$I(0, 0, this.width, this.height);
p$1.getBuf8$I$I$I$I.apply(g2, [0, 0, (w|0), (h|0)]);
raster.getPixels$I$I$I$I$IA(0, 0, (w|0), (h|0), g2.buf8);
g2.ctx.putImageData(g2.imageData, 0, 0);
shaderCanvas=g2.canvas;
g2.dispose$();
}
this.shader.秘canvas = shaderCanvas; var a = this.ctx.globalCompositeOperation;
this.ctx.globalCompositionOperation = "source-atop";
this.ctx.drawImage(shaderCanvas, 0, 0, (w|0), (h|0), yourRect.getX$(), yourRect.getY$(), yourRect.getWidth$(), yourRect.getHeight$());

this.ctx.globalCompositeOperation = a;
}} else {
this.ctx.beginPath();
var winding=p$1.doShape$java_awt_Shape.apply(this, [s]);
if (winding == 0) {
this.ctx.fill("evenodd");
} else {
this.ctx.fill();
}}this.ctx.restore();
});

Clazz_newMeth(C$, 'drawRoundRect$I$I$I$I$I$I',  function (x, y, width, height, arcWidth, arcHeight) {
p$1.doRoundRect$I$I$I$I$I$I$I.apply(this, [x, y, width, height, arcWidth, arcHeight, 1]);
});

Clazz_newMeth(C$, 'fillRoundRect$I$I$I$I$I$I',  function (x, y, width, height, arcWidth, arcHeight) {
p$1.doRoundRect$I$I$I$I$I$I$I.apply(this, [x, y, width, height, arcWidth, arcHeight, 2]);
});

Clazz_newMeth(C$, 'doRoundRect$I$I$I$I$I$I$I',  function (x, y, w, h, aw, ah, mode) {
if (this.rrect == null  || this.rrect.getX$() != x   || this.rrect.getY$() != y   || this.rrect.getWidth$() != w   || this.rrect.getHeight$() != h   || this.rrect.getArcWidth$() != aw   || this.rrect.getArcHeight$() != ah  ) {
this.rrect=Clazz_new_($I$(12,1).c$$D$D$D$D$D$D,[x, y, w, h, aw, ah]);
}if (mode == 2) this.fill$java_awt_Shape(this.rrect);
 else this.draw$java_awt_Shape(this.rrect);
}, p$1);

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$java_awt_Color$java_awt_image_ImageObserver',  function (img, x, y, background, observer) {
$I$(1).notImplemented$S("transparent image pixel background fill is not supported in SwingJS");
return this.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(img, x, y, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (img, x, y, observer) {
return this.drawImage$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver(img, x, y, img.getWidth$java_awt_image_ImageObserver(null), img.getHeight$java_awt_image_ImageObserver(null), observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$java_awt_Color$java_awt_image_ImageObserver',  function (img, x, y, width, height, bgcolor, observer) {
$I$(1).notImplemented$S("transparent image pixel background fill is not supported in SwingJS");
return this.drawImage$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver(img, x, y, width, height, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver',  function (img, x, y, width, height, observer) {
if (width <= 0 || height <= 0 ) return true;
if (img != null ) {
var imgNode=(img).秘getImageNode$I(0);
if (imgNode == null ) {
if (width != img.getWidth$java_awt_image_ImageObserver(null) || height != img.getHeight$java_awt_image_ImageObserver(null) ) {
this.drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_image_ImageObserver(img, x, y, x + width, y + width, 0, 0, img.getWidth$java_awt_image_ImageObserver(null), img.getHeight$java_awt_image_ImageObserver(null), observer);
return true;
}p$1.drawImagePriv$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver.apply(this, [img, x, y, width, height, observer]);
} else {
this.ctx.drawImage(imgNode, x, y, width, height);
}if (observer != null ) p$1.observe$java_awt_Image$java_awt_image_ImageObserver$Z.apply(this, [img, observer, imgNode != null ]);
}return true;
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_Color$java_awt_image_ImageObserver',  function (img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, bgcolor, observer) {
$I$(1).notImplemented$S("transparent image pixel background fill is not supported in SwingJS");
return this.drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_image_ImageObserver(img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer);
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$I$I$I$I$I$I$I$I$java_awt_image_ImageObserver',  function (img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer) {
if (img != null ) {
var bytes=null;
var imgNode=(img).秘getImageNode$I(0);
if (imgNode == null ) {
if (sx2 - sx1 != dx2 - dx1 || sy2 - sy1 != dy2 - dy1  || sx1 != 0  || sx2 != img.getWidth$java_awt_image_ImageObserver(null)  || sy1 != 0  || sy2 != img.getHeight$java_awt_image_ImageObserver(null) ) {
imgNode=(img).秘getImageNode$I(2);
}}if (imgNode != null ) {
this.ctx.drawImage(imgNode, sx1, sy1, sx2 - sx1, sy2 - sy1, dx1, dy1, dx2 - dx1, dy2 - dy1);
}if (observer != null ) p$1.observe$java_awt_Image$java_awt_image_ImageObserver$Z.apply(this, [img, observer, imgNode != null ]);
}return true;
});

Clazz_newMeth(C$, 'drawImage$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver',  function (img, xform, obs) {
return p$1.drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver.apply(this, [img, xform, obs]);
});

Clazz_newMeth(C$, 'drawRenderedImage$java_awt_image_RenderedImage$java_awt_geom_AffineTransform',  function (img, xform) {
p$1.drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver.apply(this, [img, xform, null]);
});

Clazz_newMeth(C$, 'drawRenderableImage$java_awt_image_renderable_RenderableImage$java_awt_geom_AffineTransform',  function (img, xform) {
p$1.drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver.apply(this, [img, xform, null]);
});

Clazz_newMeth(C$, 'drawImageXT$java_awt_Image$java_awt_geom_AffineTransform$java_awt_image_ImageObserver',  function (img, xform, obs) {
if (xform == null  || xform.isIdentity$() ) {
return this.drawImage$java_awt_Image$I$I$java_awt_image_ImageObserver(img, 0, 0, obs);
}this.ctx.save();
p$1.transformCTX$java_awt_geom_AffineTransform.apply(this, [xform]);
var ret=this.drawImageFromPixelsOrRaster$java_awt_Image$I$I$java_awt_image_ImageObserver(img, 0, 0, obs);
this.ctx.restore();
return ret;
}, p$1);

Clazz_newMeth(C$, 'drawImageFromPixelsOrRaster$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (img, x, y, observer) {
return (img == null  ? true : p$1.drawImagePriv$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver.apply(this, [img, x, y, img.getWidth$java_awt_image_ImageObserver(observer), img.getHeight$java_awt_image_ImageObserver(observer), observer]));
});

Clazz_newMeth(C$, 'drawImagePriv$java_awt_Image$I$I$I$I$java_awt_image_ImageObserver',  function (img, x, y, width, height, observer) {
var m=$I$(8).setMatrix(this.ctx, this.transform);
var isToSelf=(this === (img).秘g );
var isOpaque=(img).秘isOpaque$();
var pixels=(C$.isTranslationOnly$DA(m) && !p$1.isClipped$I$I$I$I.apply(this, [x, y, width, height])  ? (img).get秘pixFromRaster$() : null);
var imgNode=null;
if (pixels == null ) {
imgNode=(img === observer  ? this.canvas : (img).秘getImageNode$I(1));
if (imgNode != null ) this.ctx.drawImage(imgNode, x, y, width, height);
} else {
var isPerPixel=(pixels.length == width * height);
if (!isOpaque) this.buf8=null;
x=(x+(m[4])|0);
y=(y+(m[5])|0);
p$1.getBuf8$I$I$I$I.apply(this, [x, y, width, height]);
if (isPerPixel) {
for (var pt=0, i=0, n=Math.min((this.buf8.length/4|0), pixels.length); i < n; i++) {
var argb=pixels[i];
if (!isToSelf && !isOpaque && (argb & -16777216) != -16777216  ) {
pt+=4;
} else {
this.buf8[pt++]=(argb >> 16) & 255;
this.buf8[pt++]=(argb >> 8) & 255;
this.buf8[pt++]=argb & 255;
this.buf8[pt++]=(isOpaque ? 255 : (argb >> 24) & 255);
}}
} else if (isOpaque) {
for (var i=0, n=Math.min(this.buf8.length, pixels.length); i < n; i++) {
this.buf8[i]=pixels[i++] & 255;
this.buf8[i]=pixels[i++] & 255;
this.buf8[i]=pixels[i++] & 255;
this.buf8[i]=255;
}
} else if (isToSelf) {
for (var i=0, n=Math.min(this.buf8.length, pixels.length); i < n; i++) {
this.buf8[i]=pixels[i] & 255;
}
} else {
for (var i=0, n=Math.min(this.buf8.length, pixels.length); i < n; i++) {
if ((i % 4) == 0 && (pixels[i + 3] & 255) != 255 ) {
i+=3;
} else {
this.buf8[i]=pixels[i] & 255;
}}
}this.ctx.putImageData(this.imageData, x, y);
}if (observer != null ) p$1.observe$java_awt_Image$java_awt_image_ImageObserver$Z.apply(this, [img, observer, imgNode != null  || pixels != null  ]);
return true;
}, p$1);

Clazz_newMeth(C$, 'isClipped$I$I$I$I',  function (x, y, w, h) {
var is=this.currentClip != null  && !p$1.contains$I$I$I$I.apply(this, [x, y, w, h]) ;
return is;
}, p$1);

Clazz_newMeth(C$, 'contains$I$I$I$I',  function (x, y, w, h) {
return (Clazz_instanceOf(this.currentClip, Clazz_array(Integer.TYPE, -1)) ? $I$(10,"contains$IA$I$I$I$I",[(this.currentClip), x, y, w, h]) : (this.currentClip).contains$D$D$D$D(x, y, w, h));
}, p$1);

Clazz_newMeth(C$, 'observe$java_awt_Image$java_awt_image_ImageObserver$Z',  function (img, observer, isOK) {
observer.imageUpdate$java_awt_Image$I$I$I$I$I(img, (isOK ? 0 : 192), -1, -1, -1, -1);
}, p$1);

Clazz_newMeth(C$, 'getBuf8$I$I$I$I',  function (x, y, w, h) {
if (this.buf8 == null  || x != this.lastx  || y != this.lasty  || this.nx != w  || this.ny != h ) {
this.imageData=this.ctx.getImageData(x, y, w, h);
this.buf8=this.imageData.data;
this.lastx=x;
this.lasty=y;
this.nx=w;
this.ny=h;
}}, p$1);

Clazz_newMeth(C$, 'isTranslationOnly$DA',  function (m) {
return (m[0] == 1  && m[1] == 0   && m[2] == 0   && m[3] == 1  );
}, 1);

Clazz_newMeth(C$, 'hit$java_awt_Rectangle$java_awt_Shape$Z',  function (rect, s, onStroke) {
$I$(1).notImplemented$S(null);
return false;
});

Clazz_newMeth(C$, 'getStroke$',  function () {
return this.currentStroke;
});

Clazz_newMeth(C$, 'setStroke$java_awt_Stroke',  function (s) {
if (!(Clazz_instanceOf(s, "java.awt.BasicStroke"))) return;
var b=this.currentStroke=s;
this.thinLine=(b.getLineWidth$() <= 0.5 );
var dash=b.getDashArray$();
var n=(dash == null  ? 0 : dash.length);
if (n == 0) {
this.ctx.setLineDash(C$.nodash);
} else {
var idash=Clazz_array(Integer.TYPE, [n]);
for (var i=n; --i >= 0; ) idash[i]=(dash[i]|0);

this.ctx.setLineDash(idash);
}p$1.setLineWidth$D.apply(this, [b.getLineWidth$()]);
var lineCap;
var lineJoin;
var miterLimit=-1;
switch (b.getEndCap$()) {
case 0:
lineCap="butt";
break;
case 2:
lineCap="square";
break;
case 1:
default:
lineCap="round";
}
switch (b.getLineJoin$()) {
case 2:
lineJoin="bevel";
break;
case 0:
lineJoin="miter";
miterLimit=b.getMiterLimit$();
break;
case 1:
lineJoin="round";
}
{
this.ctx.lineCap = lineCap; this.ctx.lineJoin = lineJoin; if (miterLimit >= 0) this.ctx.miterLimit = miterLimit;
}
});

Clazz_newMeth(C$, 'setRenderingHint$java_awt_RenderingHints_Key$O',  function (hintKey, hintValue) {
});

Clazz_newMeth(C$, 'getRenderingHint$java_awt_RenderingHints_Key',  function (hintKey) {
return null;
});

Clazz_newMeth(C$, 'setRenderingHints$java_util_Map',  function (hints) {
});

Clazz_newMeth(C$, 'addRenderingHints$java_util_Map',  function (hints) {
});

Clazz_newMeth(C$, 'getRenderingHints$',  function () {
return (this.hints == null  ? C$.nohints : this.hints);
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color',  function (c) {
this.backgroundColor=c;
});

Clazz_newMeth(C$, 'getBackground$',  function () {
return this.backgroundColor;
});

Clazz_newMeth(C$, 'getColor$',  function () {
return this.foregroundColor;
});

Clazz_newMeth(C$, 'setColor$java_awt_Color',  function (c) {
if (this.clearing) {
this.clearColorSaved=c;
} else {
this.foregroundColor=c;
p$1.setGraphicsColor$java_awt_Color.apply(this, [c]);
}});

Clazz_newMeth(C$, 'setPaint$java_awt_Paint',  function (paint) {
this.shader=null;
if (Clazz_instanceOf(paint, "java.awt.Color")) {
this.setColor$java_awt_Color(paint);
} else {
this.shader=paint;
}});

Clazz_newMeth(C$, 'getFont$',  function () {
if (this.font == null ) this.font=Clazz_new_($I$(13,1).c$$S$I$I,["Arial", 0, 12]);
return this.font;
});

Clazz_newMeth(C$, 'getFontMetrics$',  function () {
return this.getFontMetrics$java_awt_Font(this.getFont$());
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (f) {
return $I$(14).getDefaultToolkit$().getFontMetrics$java_awt_Font(f);
});

Clazz_newMeth(C$, 'clipRect$I$I$I$I',  function (x, y, width, height) {
p$1.clipPriv$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'setClip$I$I$I$I',  function (x, y, width, height) {
if (this.currentClip != null ) this.unclip$I(-2147483648);
p$1.clipPriv$I$I$I$I.apply(this, [x, y, width, height]);
});

Clazz_newMeth(C$, 'setClip$java_awt_Shape',  function (clip) {
if (clip == null ) {
p$1.clipPriv$I$I$I$I.apply(this, [0, 0, this.width, this.height]);
return;
}if (Clazz_instanceOf(clip, "java.awt.Rectangle")) {
var r=clip;
this.setClip$I$I$I$I((Math.floor(r.getMinX$())|0), (Math.floor(r.getMinY$())|0), (Math.ceil(r.getWidth$())|0), (Math.ceil(r.getHeight$())|0));
} else {
if (C$.debugClip) {
System.out.println$S("JSGraphics2D.setClip(Shape) to " + clip + " from " + this.currentClip );
}this.currentClip=clip;
this.ctx.beginPath();
p$1.doShape$java_awt_Shape.apply(this, [clip]);
this.ctx.clip();
}});

Clazz_newMeth(C$, 'setClipPriv$java_awt_Shape',  function (clip) {
var c=clip;
if (Clazz_instanceOf(c, Clazz_array(Integer.TYPE, -1))) {
p$1.clipPriv$I$I$I$I.apply(this, [(c)[0], (c)[1], (c)[2], (c)[3]]);
} else if (Clazz_instanceOf(clip, "java.awt.Rectangle")) {
var r=clip;
p$1.clipPriv$I$I$I$I.apply(this, [(Math.floor(r.getMinX$())|0), (Math.floor(r.getMinY$())|0), (Math.ceil(r.getWidth$())|0), (Math.ceil(r.getHeight$())|0)]);
} else {
if (C$.debugClip) {
System.out.println$S("JSGraphics2D.setClipPriv(Shape) to " + clip + " from " + this.currentClip );
}this.currentClip=clip;
this.ctx.beginPath();
p$1.doShape$java_awt_Shape.apply(this, [clip]);
this.ctx.clip();
}});

Clazz_newMeth(C$, 'clipPriv$I$I$I$I',  function (x, y, width, height) {
var r=(Clazz_instanceOf(this.currentClip, "java.awt.Rectangle") ? this.currentClip : null);
var o=this.currentClip;
if (r == null  || r.x != x  || r.y != y  || r.width != width  || r.height != height ) {
this.currentClip=Clazz_array(Integer.TYPE, -1, [x, y, width, height]);
}if (C$.debugClip) {
System.out.println$S("JSGraphics2D.clipPriv to " + this.currentClip + " from " + o );
}this.ctx.beginPath();
this.ctx.rect(x, y, width, height);
this.ctx.clip();
}, p$1);

Clazz_newMeth(C$, 'hitClip$I$I$I$I',  function (x, y, width, height) {
var clipRect=this.getClipBounds$();
if (clipRect == null ) {
return true;
}return clipRect.intersects$D$D$D$D(x, y, width, height);
});

Clazz_newMeth(C$, 'setGraphicsColor$java_awt_Color',  function (c) {
if (c == null ) return;
if (this.image != null ) c=this.image.秘getGraphicsColor$java_awt_Color(c);
var a=c.getAlpha$();
var fa=a / 255.0;
if (this.ctx.globalAlpha != fa ) this.ctx.globalAlpha=fa;
this.ctx.fillStyle=this.ctx.strokeStyle=$I$(7).getCSSColor$java_awt_Color$Z(c, true);
}, p$1);

Clazz_newMeth(C$, 'copyArea$I$I$I$I$I$I',  function (x, y, width, height, dx, dy) {
this.ctx.putImageData(this.ctx.getImageData(x, y, width, height), x + dx, y + dy);
});

Clazz_newMeth(C$, 'getClip$',  function () {
return (this.currentClip == null  || Clazz_instanceOf(this.currentClip, Clazz_array(Integer.TYPE, -1))  ? p$1.getClipBoundsImpl.apply(this, []) : this.currentClip);
});

Clazz_newMeth(C$, 'drawString$S$I$I',  function (s, x, y) {
p$1.fillText$S$F$F.apply(this, [s, x, y]);
});

Clazz_newMeth(C$, 'drawChars$CA$I$I',  function (chars, x, y) {
p$1.fillText$S$F$F.apply(this, [String.valueOf$CA(chars), x, y]);
});

Clazz_newMeth(C$, 'drawChars$CA$I$I$I$I',  function (data, offset, length, x, y) {
this.drawString$S$I$I( String.instantialize(data, offset, length), x, y);
});

Clazz_newMeth(C$, 'drawBytes$BA$I$I$I$I',  function (data, offset, length, x, y) {
this.drawString$S$I$I( String.instantialize(data, offset, length), x, y);
});

Clazz_newMeth(C$, 'drawString$S$F$F',  function (str, x, y) {
p$1.fillText$S$F$F.apply(this, [str, x, y]);
});

Clazz_newMeth(C$, 'fillText$S$F$F',  function (str, x, y) {
this.ctx.fillText(str, x, y);
}, p$1);

Clazz_newMeth(C$, 'drawString$java_text_AttributedCharacterIterator$I$I',  function (iterator, x, y) {
$I$(1).notImplemented$S(null);
});

Clazz_newMeth(C$, 'drawString$java_text_AttributedCharacterIterator$F$F',  function (iterator, x, y) {
$I$(1).notImplemented$S(null);
});

Clazz_newMeth(C$, 'translate$D$D',  function (tx, ty) {
this.ctx.translate(tx, ty);
this.transform.translate$D$D(tx, ty);
});

Clazz_newMeth(C$, 'shear$D$D',  function (shx, shy) {
this.ctx.transform(1.0, shx, 0.0, shy, 1.0, 0.0);
this.transform.shear$D$D(shx, shy);
});

Clazz_newMeth(C$, 'translate$I$I',  function (x, y) {
this.ctx.translate(x, y);
this.transform.translate$D$D(x, y);
});

Clazz_newMeth(C$, 'rotate$D',  function (radians) {
this.ctx.rotate(radians);
this.transform.rotate$D(radians);
});

Clazz_newMeth(C$, 'rotate$D$D$D',  function (theta, x, y) {
this.ctx.translate(x, y);
this.ctx.rotate(theta);
this.ctx.translate(-x, -y);
this.transform.rotate$D$D$D(theta, x, y);
});

Clazz_newMeth(C$, 'scale$D$D',  function (sx, sy) {
this.ctx.scale(sx, sy);
this.transform.scale$D$D(sx, sy);
});

Clazz_newMeth(C$, 'transform$java_awt_geom_AffineTransform',  function (t) {
p$1.transformCTX$java_awt_geom_AffineTransform.apply(this, [t]);
this.transform.concatenate$java_awt_geom_AffineTransform(t);
$I$(8).setMatrix(this.ctx, null);
});

Clazz_newMeth(C$, 'transformCTX$java_awt_geom_AffineTransform',  function (t) {
{
this.ctx.transform (t.m00, t.m10, t.m01, t.m11, t.m02, t.m12);
}
}, p$1);

Clazz_newMeth(C$, 'setTransform$java_awt_geom_AffineTransform',  function (t) {
{
this.ctx.setTransform (t.m00, t.m10, t.m01, t.m11, t.m02, t.m12);
}
this.transform.setTransform$java_awt_geom_AffineTransform(t);
});

Clazz_newMeth(C$, 'getTransform$',  function () {
return this.transform.clone$();
});

Clazz_newMeth(C$, 'getPaint$',  function () {
return this.getColor$();
});

Clazz_newMeth(C$, 'getFontRenderContext$',  function () {
return this.getFontMetrics$java_awt_Font(this.getFont$()).getFontRenderContext$();
});

Clazz_newMeth(C$, 'setPaintMode$',  function () {
this.setComposite$java_awt_Composite($I$(15).SrcOver);
});

Clazz_newMeth(C$, 'setXORMode$java_awt_Color',  function (c) {
if (c == null ) throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["null XORColor"]);
this.setComposite$java_awt_Composite($I$(15).Xor);
});

Clazz_newMeth(C$, 'getClipRect$',  function () {
return this.getClipBounds$();
});

Clazz_newMeth(C$, 'getClipBounds$',  function () {
return this.getClipBounds$java_awt_Rectangle(null);
});

Clazz_newMeth(C$, 'getClipBounds$java_awt_Rectangle',  function (r) {
var clipRect=p$1.getClipBoundsImpl.apply(this, []);
if (r == null ) {
r=clipRect;
} else {
r.x=clipRect.x;
r.y=clipRect.y;
r.width=clipRect.width;
r.height=clipRect.height;
}return r;
});

Clazz_newMeth(C$, 'getClipBoundsImpl',  function () {
if (this.currentClip == null ) {
this.currentClip=Clazz_new_($I$(10,1).c$$I$I$I$I,[0, 0, this.width, this.height]);
}return p$1.getBounds.apply(this, []);
}, p$1);

Clazz_newMeth(C$, 'getBounds',  function () {
if (Clazz_instanceOf(this.currentClip, Clazz_array(Integer.TYPE, -1))) {
var a=this.currentClip;
return Clazz_new_($I$(10,1).c$$I$I$I$I,[a[0], a[1], a[2], a[3]]);
}return (this.currentClip).getBounds$();
}, p$1);

Clazz_newMeth(C$, 'setComposite$java_awt_Composite',  function (comp) {
if (comp === this.alphaComposite ) return;
var isAlpha=Clazz_instanceOf(comp, "java.awt.AlphaComposite");
var newRule=(!isAlpha ? 0 : (comp).getRule$());
var isValid=(isAlpha && this.alphaComposite == null   || newRule != this.alphaComposite.getRule$() );
if (isValid && $I$(16).setGraphicsCompositeAlpha$swingjs_JSGraphics2D$I(this, newRule) ) {
this.alphaComposite=comp;
}if (newRule == 1) {
this.clearColorSaved=this.foregroundColor;
this.setColor$java_awt_Color($I$(6).black);
this.clearing=true;
} else if (this.clearing) {
this.clearing=false;
this.setColor$java_awt_Color(this.clearColorSaved);
this.clearColorSaved=null;
}this.setAlpha$F(comp == null  ? 1 : (comp).getAlpha$());
});

Clazz_newMeth(C$, 'getComposite$',  function () {
return this.alphaComposite;
});

Clazz_newMeth(C$, 'drawImage$java_awt_image_BufferedImage$java_awt_image_BufferedImageOp$I$I',  function (img, op, x, y) {
$I$(16).drawImageOp$swingjs_JSGraphics2D$java_awt_image_BufferedImage$java_awt_image_BufferedImageOp$I$I(this, img, op, x, y);
});

Clazz_newMeth(C$, 'setAlpha$F',  function (f) {
this.ctx.globalAlpha=f;
});

Clazz_newMeth(C$, 'getCanvas$',  function () {
return this.canvas;
});

Clazz_newMeth(C$, 'mark$',  function () {
return p$1.mark$Z.apply(this, [false]);
});

Clazz_newMeth(C$, 'mark$Z',  function (isClone) {
if (C$.debugClip) {
System.out.println$S("save " + this.transform);
}this.ctx.save();
var map=[] ||Clazz_array(java.lang.Object, [7]);
map[0]=Integer.valueOf$I((1 ? this.ctx.globalAlpha :0));
map[1]=this.alphaComposite;
map[2]=this.currentStroke;
map[3]=this.transform.秘toArray$();
map[4]=this.font;
map[5]=this.currentClip;
return $I$(8).push(this.ctx, map);
}, p$1);

Clazz_newMeth(C$, 'unclip$I',  function (n) {
if (C$.debugClip) {
System.out.println$S("JSGraphics2D.unclip " + n);
}var stack=$I$(8).getSavedStack(this.ctx);
this.unclipped=(n < 0);
if (this.unclipped) n=-n;
if (n > stack.length) n=stack.length;
for (var i=0; i < n; i++) {
this.ctx.restore();
}
this.currentClip=null;
for (var i=n; --i >= 0; ) {
p$1.setState$OA.apply(this, [stack[stack.length - 1 - i ]]);
if (!this.unclipped) this.setClipPriv$java_awt_Shape(stack[stack.length - 1 - i ][5]);
this.ctx.save();
}
});

Clazz_newMeth(C$, 'reset$I',  function (n0) {
if (n0 < 1) n0=1;
var n;
if (this.unclipped) {
this.unclip$I(2147483647);
}while ((n=$I$(8).getSavedLevel(this.ctx)) >= n0){
p$1.setState$OA.apply(this, [$I$(8).pop(this.ctx)]);
this.ctx.restore();
if (C$.debugClip) {
System.out.println$S("restore n=" + n + " " + this.transform );
}}
});

Clazz_newMeth(C$, 'setState$OA',  function (map) {
this.setComposite$java_awt_Composite(map[1]);
var a=0;
this.setAlpha$F(map[a] ||0);
this.shader=null;
this.setStroke$java_awt_Stroke(map[2]);
this.setTransform$java_awt_geom_AffineTransform(this.transform.秘fromArray$DA(map[3]));
this.setFont$java_awt_Font(map[4]);
this.currentClip=map[5];
}, p$1);

Clazz_newMeth(C$, 'create$I$I$I$I',  function (x, y, width, height) {
var g=this.create$();
if (g == null ) return null;
g.translate$I$I(x, y);
g.clipRect$I$I$I$I(0, 0, width, height);
return g;
});

Clazz_newMeth(C$, 'create$',  function () {
return this.clone$();
});

Clazz_newMeth(C$, 'clone$',  function () {
var n=p$1.mark$Z.apply(this, [false]);
if (C$.debugClip) {
System.out.println$S("clone to " + n);
}var g=this;
{
g = Clazz_clone(this);
}
g.transform.setTransform$java_awt_geom_AffineTransform(this.transform);
if (this.hints != null ) {
g.hints=this.hints.clone$();
}g.setStroke$java_awt_Stroke(this.currentStroke.clone$());
g.initialState=n;
return g;
});

Clazz_newMeth(C$, 'dispose$',  function () {
if (C$.debugClip) {
System.out.println$S("dispose to " + this.initialState);
}this.reset$I(this.initialState);
if (this.image != null ) {
this.image.秘graphicsDisposed$();
this.image=null;
}});

Clazz_newMeth(C$, 'getWidth$',  function () {
return this.width;
});

Clazz_newMeth(C$, 'getHeight$',  function () {
return this.height;
});

C$.$static$=function(){C$.$static$=0;
C$.debugClip=$I$(1).J2S.debugClip();
C$.pixelRatio=(function () { var ctx = document.createElement("canvas").getContext("2d"), dpr = window.devicePixelRatio || 1, bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1; return dpr / bsr; })() ||1;
{
System.out.println$S("JSGraphics2D pixelRatio is " + new Float(C$.pixelRatio).toString());
};
C$.pts=Clazz_array(Double.TYPE, [6]);
C$.nodash=Clazz_array(Integer.TYPE, [0]);
C$.nohints=Clazz_new_([Clazz_new_($I$(3,1))],$I$(2,1).c$$java_util_Map);
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'java.awt.GraphicsEnvironment','java.awt.image.ColorModel','swingjs.api.Interface','swingjs.JSUtil','java.awt.Rectangle']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSGraphicsConfiguration", null, 'java.awt.GraphicsConfiguration');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
System.out.println$S("JSGraphicsConfiguration initialized");
}, 1);

Clazz_newMeth(C$, 'getDevice$',  function () {
return $I$(1).getLocalGraphicsEnvironment$().getDefaultScreenDevice$();
});

Clazz_newMeth(C$, 'createCompatibleImage$I$I',  function (width, height) {
var cm=this.getColorModel$();
var wr=cm.createCompatibleWritableRaster$I$I(width, height);
return this.newBufferedImage$java_awt_image_ColorModel$java_awt_image_WritableRaster$Z$java_util_Hashtable(cm, wr, false, null);
});

Clazz_newMeth(C$, 'getColorModel$',  function () {
return $I$(2).getRGBdefault$();
});

Clazz_newMeth(C$, 'getColorModel$I',  function (transparency) {
return this.getColorModel$();
});

Clazz_newMeth(C$, 'getDefaultTransform$',  function () {
return $I$(3).getInstance$S$Z("java.awt.geom.AffineTransform", true);
});

Clazz_newMeth(C$, 'getNormalizingTransform$',  function () {
return this.getDefaultTransform$();
});

Clazz_newMeth(C$, 'getBounds$',  function () {
var doc=document ||null;
var d=$I$(4).jQuery.$(doc);
return Clazz_new_([d.width(), d.height()],$I$(5,1).c$$I$I);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'java.awt.Font','java.awt.Toolkit','swingjs.JSUtil','java.awt.Point','java.awt.GraphicsDevice']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSGraphicsEnvironment", null, 'java.awt.GraphicsEnvironment');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['device','java.awt.GraphicsDevice','availableFonts','java.awt.Font[]']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
System.out.println$S("JSGraphicsEnvironment initialized");
}, 1);

Clazz_newMeth(C$, 'createGraphics$java_awt_image_BufferedImage',  function (img) {
return img.秘getImageGraphic$().create$();
});

Clazz_newMeth(C$, 'getAllFonts$',  function () {
if (C$.availableFonts == null ) {
var names=this.getAvailableFontFamilyNames$();
C$.availableFonts=Clazz_array($I$(1), [names.length]);
for (var i=names.length; --i >= 0; ) C$.availableFonts[i]=Clazz_new_($I$(1,1).c$$S$I$I,[names[i], 0, 1]);

}return C$.availableFonts;
});

Clazz_newMeth(C$, 'getAvailableFontFamilyNames$',  function () {
return $I$(2).getDefaultToolkit$().getFontList$();
});

Clazz_newMeth(C$, 'getAvailableFontFamilyNames$java_util_Locale',  function (l) {
return $I$(2).getDefaultToolkit$().getFontList$();
});

Clazz_newMeth(C$, 'getDefaultScreenDevice$',  function () {
if (C$.device == null ) C$.device=$I$(3).getInstance$S("swingjs.JSScreenDevice");
return C$.device;
});

Clazz_newMeth(C$, 'getCenterPoint$',  function () {
var d=$I$(2).getDefaultToolkit$().getScreenSize$();
return Clazz_new_([(d.width/2|0), (d.height/2|0)],$I$(4,1).c$$I$I);
});

Clazz_newMeth(C$, 'getScreenDevices$',  function () {
return Clazz_array($I$(5), -1, [this.getDefaultScreenDevice$()]);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'javajs.util.Base64','swingjs.api.js.DOMNode','java.io.File','swingjs.JSUtil','swingjs.JSImagekit']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSImage", null, 'java.awt.image.BufferedImage');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['S',['src'],'O',['videoTrackInfo','java.util.Map','秘source','java.lang.Object']]]

Clazz_newMeth(C$, 'c$$IA$I$I$S$I',  function (argb, width, height, src, type) {
;C$.superclazz.c$$I$I$I.apply(this,[width, height, type]);C$.$init$.apply(this);
var m;
this.src=src;
if (argb != null ) this.秘setPixels$IA(argb);
}, 1);

Clazz_newMeth(C$, 'c$$BA$I$I$S$I',  function (pixelBytes, width, height, src, type) {
;C$.superclazz.c$$I$I$I.apply(this,[width, height, type]);C$.$init$.apply(this);
this.src=src;
if (pixelBytes != null ) this.秘setPixels$IA(pixelBytes);
}, 1);

Clazz_newMeth(C$, 'setImageNode$swingjs_JSFileSystem_JSPath$BA$S',  function (source, b, type) {
var img=null;
if (type === "video" ) {
img=this.injectVideo$swingjs_api_js_DOMNode$swingjs_JSFileSystem_JSPath$BA(null, source, b);
} else {
var dataurl="data:image/" + type + ";base64," + $I$(1).getBase64$BA(b).toString() ;

img = new Image(this.width, this.height); img.src = dataurl;
}this.秘setImageNode$O$Z(img, true);
});

Clazz_newMeth(C$, 'injectVideo$swingjs_api_js_DOMNode$swingjs_JSFileSystem_JSPath$BA',  function (img, source, b) {
try {
if (img == null ) img=$I$(2,"createElement",["video", $I$(3).createTempFile$S$S("video_", "").getName$()]);
var src=(source == null  ? null : $I$(4,"getWebPathFor$S",[source.toString()]));
if (b == null  && source != null  ) b=source.秘bytes;
System.out.println$S("JSImage video " + src + " " + (b == null  ? 0 : b.length) );
var node=img;
var r=((P$.JSImage$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSImage$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'run$',  function () {
var w=0;
var h=0;
var n=this.$finals$.node;

w = n.width = n.videoWidth; h = n.height = n.videoHeight;
var ui=$I$(2).getAttr(this.$finals$.node, "data-ui");
System.out.println$S("JSImage " + (ui == null  ? "video" : ui.getId$()) + " " + w + "x" + h );
this.b$['java.awt.image.BufferedImage'].秘init$I$I$I.apply(this.b$['java.awt.image.BufferedImage'], [w, h, -6]);
if (ui != null  && Clazz_instanceOf(ui.jc, "javax.swing.JLabel") ) {
var label=ui.jc;
w=label.getWidth$();
h=label.getHeight$();
n.setAttribute("width", w + "");
n.setAttribute("height", h + "");
ui.setTainted$();
var icon=label.getIcon$();
if (icon != null ) {
icon.秘setIconSize$I$I(w, h);
}}});
})()
), Clazz_new_(P$.JSImage$1.$init$,[this, {node:node}]));
if (b != null ) {
src=$I$(5).getDataBlob$BA$S(b, "video/mp4");
}
img.crossOrigin = "Anonymous";
img.onerror = function(e) { img.err = e};
img.src = src;
img.onloadedmetadata = function(){ r.run$()};
img.load();
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
} else {
throw e;
}
}
return img;
});

Clazz_newMeth(C$, 'setComponent$java_awt_Component',  function (c) {
this.秘component=c;
return this;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'swingjs.JSImage','swingjs.JSUtil','swingjs.api.Interface','swingjs.api.js.DOMNode','java.awt.image.BufferedImage','javax.swing.ImageIcon','swingjs.JSGraphics2D','swingjs.api.js.HTML5Canvas','swingjs.JSImagekit','swingjs.json.JSON']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSImagekit", null, null, 'java.awt.image.ImageConsumer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['I',['width','height','hints','x','y','off','scansize'],'O',['props','java.util.Hashtable','colorModel','java.awt.image.ColorModel','pixels','int[]','jsimage','swingjs.JSImage','pixelBytes','byte[]']]
,['Z',['mediaInfoLoaded'],'S',['mediaInfoURL'],'O',['mediaInfoObject','java.lang.Object']]]

Clazz_newMeth(C$, 'createImageFromBytes$BA$I$I$S',  function (data, imageoffset, imagelength, name) {
return C$.createImageFromBytesStatic$BA$I$I$S$I(data, imageoffset, imagelength, name, -1);
});

Clazz_newMeth(C$, 'imageComplete$I',  function (status) {
var m;
if (this.pixels != null ) this.jsimage=Clazz_new_($I$(1,1).c$$IA$I$I$S$I,[this.pixels, this.width, this.height, null, 2]);
 else this.jsimage=Clazz_new_($I$(1,1).c$$BA$I$I$S$I,[this.pixelBytes, this.width, this.height, null, 2]);
});

Clazz_newMeth(C$, 'getCreatedImage$',  function () {
return this.jsimage;
});

Clazz_newMeth(C$, 'setDimensions$I$I',  function (width, height) {
this.width=width;
this.height=height;
});

Clazz_newMeth(C$, 'setProperties$java_util_Hashtable',  function (props) {
this.props=props;
});

Clazz_newMeth(C$, 'setColorModel$java_awt_image_ColorModel',  function (model) {
this.colorModel=model;
});

Clazz_newMeth(C$, 'setHints$I',  function (hintflags) {
this.hints=hintflags;
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$java_awt_image_ColorModel$IA$I$I',  function (x, y, w, h, model, pixels, off, scansize) {
this.pixelBytes=null;
if (this.pixels == null ) {
this.colorModel=model;
this.pixels=Clazz_array(Integer.TYPE, [this.width * this.height]);
}for (var n=0, j=y; n < h; n++, j++) {
for (var m=0, i=x; m < w; m++, i++) {
var k=i + j * this.width;
this.pixels[k]=pixels[(j - y) * scansize + (i - x) + off];
}
}
});

Clazz_newMeth(C$, 'setPixels$I$I$I$I$java_awt_image_ColorModel$BA$I$I',  function (x, y, w, h, model, pixels, off, scansize) {
this.colorModel=model;
this.width=w;
this.height=h;
this.x=x;
this.y=y;
this.off=off;
this.scansize=scansize;
this.pixelBytes=pixels;
this.pixels=null;
$I$(2).notImplemented$S("byte-based image pixels");
});

Clazz_newMeth(C$, 'createImageFromBytesStatic$BA$I$I$S$I',  function (data, imageoffset, imagelength, name, imageType) {
var w=0;
var h=0;
var argb=null;
var b=null;
var type=null;
if (data == null ) {
w=imageoffset;
h=imagelength;
} else if (imageType == 4) {
b=data;
w=imageoffset;
h=imagelength;
type="video";
} else {
if (imagelength < 0) imagelength=data.length;
var n=imagelength - imageoffset;
System.arraycopy$O$I$O$I$I(data, imageoffset, b=Clazz_array(Byte.TYPE, [n]), 0, n);
if (b.length < 10) return null;
switch (imageType == -1 ? C$.getSourceType$BA(b) : imageType) {
case 3:
var ie=$I$(3).getInstance$S$Z("javajs.img.BMPDecoder", true);
var o=ie.decodeWindowsBMP$BA(b);
if (o == null  || o[0] == null  ) return null;
w=(o[1]).intValue$();
h=(o[2]).intValue$();
argb=o[0];
break;
case 1:
var pt=2;
while (true){
switch (C$.getInt$BA$I(b, pt)) {
case 49407:
case 49919:
h=C$.getIntRev$BA$I(b, pt + 5);
w=C$.getIntRev$BA$I(b, pt + 7);
pt=0;
break;
}
if (pt == 0) break;
pt+=2 + C$.getIntRev$BA$I(b, pt + 2);
}
type="jpeg";
break;
case 0:
w=C$.getLong$BA$I(b, 16);
h=C$.getLong$BA$I(b, 20);
type="png";
break;
case 2:
w=C$.getInt$BA$I(b, 6);
h=C$.getInt$BA$I(b, 8);
type="gif";
break;
case -1:
System.out.println$S("JSImagekit: Unknown image type: " + b[0] + " " + b[1] + " " + b[2] + " " + b[3] );
data=null;
break;
}
}if (w == 0 || h == 0 ) return null;
var jsimage=Clazz_new_([argb, w, h, name, imageType == 4 ? -2147483648 : 2],$I$(1,1).c$$IA$I$I$S$I);
if (data != null  && argb == null  ) jsimage.setImageNode$swingjs_JSFileSystem_JSPath$BA$S(null, b, type);
return jsimage;
}, 1);

Clazz_newMeth(C$, 'getLong$BA$I',  function (b, pt) {
return ((b[pt] & 255) << 24) + ((b[pt + 1] & 255) << 16) + ((b[pt + 2] & 255) << 8) + (b[pt + 3] & 255) ;
}, 1);

Clazz_newMeth(C$, 'getInt$BA$I',  function (b, pt) {
return (b[pt] & 255) + ((b[pt + 1] & 255) << 8);
}, 1);

Clazz_newMeth(C$, 'getIntRev$BA$I',  function (b, pt) {
return ((b[pt] & 255) << 8) + (b[pt + 1] & 255);
}, 1);

Clazz_newMeth(C$, 'getSourceType$BA',  function (b) {
return (b == null  ? -1 : (b[0] & 255) == 137 && b[1] == 80   && b[2] == 78   && b[3] == 71   ? 0 : (b[0] & 255) == 255 && (b[1] & 255) == 216  ? 1 : b[0] == 71  && b[1] == 73   && b[2] == 70   ? 2 : b[0] == 66  && b[1] == 77   ? 3 : -1);
}, 1);

Clazz_newMeth(C$, 'createImageIcon$java_awt_Component$javax_swing_Icon$S',  function (c, icon, id) {
var width=icon.getIconWidth$();
var height=icon.getIconHeight$();
var canvas=$I$(4).getElement(id);
var imgIcon;
var img;
var g;
if (canvas != null  && (imgIcon=(icon).秘tempIcon) != null   && $I$(4).getAttrInt(canvas, "width") == width  && $I$(4).getAttrInt(canvas, "height") == height ) {
img=imgIcon.getImage$();
g=img.秘g;
} else {
img=Clazz_new_($I$(5,1).c$$I$I$I,[width, height, -6]);
g=img.createGraphics$();
imgIcon=Clazz_new_($I$(6,1).c$$java_awt_Image$S,[img, "paintedIcon"]);
}icon.paintIcon$java_awt_Component$java_awt_Graphics$I$I(c, g, 0, 0);
g.dispose$();
(icon).秘tempIcon=imgIcon;
return imgIcon;
}, 1);

Clazz_newMeth(C$, 'createCanvasGraphics$I$I$S',  function (width, height, id) {
return Clazz_new_([$I$(8).createCanvas(width, height, id)],$I$(7,1).c$$O);
}, 1);

Clazz_newMeth(C$, 'createVideo$java_nio_file_Path',  function (path) {
var bytes=$I$(2).getBytes$O(path);
if (bytes == null ) bytes=$I$(2,"getCachedFileData$S$Z",[path.toString(), true]);
if (bytes != null ) $I$(2).setFileBytesStatic$O$O(path, bytes);
var jsimage=Clazz_new_([bytes, 1, 1, path.toString(), -2147483648],$I$(1,1).c$$BA$I$I$S$I);
jsimage.setImageNode$swingjs_JSFileSystem_JSPath$BA$S(path, bytes, "video");
return jsimage;
});

Clazz_newMeth(C$, 'createVideo$BA',  function (bytes) {
return C$.createImageFromBytesStatic$BA$I$I$S$I(bytes, 1, 1, null, 4);
});

Clazz_newMeth(C$, 'getDataBlob$BA$S',  function (b, type) {
if (type == null ) return (URL.createObjectURL(new Blob([b])) ||null);
return (URL.createObjectURL(new Blob([b], {type:type})) ||null);
}, 1);

Clazz_newMeth(C$, 'getMediaInfoAsync$BA$S$S$java_util_function_Consumer$java_util_function_Consumer',  function (data, trackType, path, success, onError) {
if (!C$.mediaInfoLoaded) {
$I$(2,"loadScriptAsync$S$Runnable",[path == null  ? C$.mediaInfoURL : path.startsWith$S("http") ? path : $I$(2).newJSUtil$().getJ2SPath$() + path, ((P$.JSImagekit$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "JSImagekit$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () {
$I$(9).mediaInfoLoaded=true;
$I$(9).getMediaInfoAsync$BA$S$S$java_util_function_Consumer$java_util_function_Consumer(this.$finals$.data, null, this.$finals$.trackType, this.$finals$.success, this.$finals$.onError);
});
})()
), Clazz_new_(P$.JSImagekit$lambda1.$init$,[this, {trackType:trackType,data:data,onError:onError,success:success}]))]);
return;
}var f;
if (C$.mediaInfoObject == null ) {
f=((P$.JSImagekit$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSImagekit$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Consumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'accept$O',  function (mediainfo) {
$I$(9).mediaInfoObject=mediainfo;
$I$(9).getMediaInfoAsync$BA$S$S$java_util_function_Consumer$java_util_function_Consumer(this.$finals$.data, null, this.$finals$.trackType, this.$finals$.success, this.$finals$.onError);
});
})()
), Clazz_new_(P$.JSImagekit$1.$init$,[this, {trackType:trackType,data:data,onError:onError,success:success}]));

MediaInfo.mediaInfoFactory( { format: 'JSON' }, function(mediainfo){ f.accept$O(mediainfo) } );
return;
}f=((P$.JSImagekit$2||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSImagekit$2", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Consumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'accept$O',  function (result) {
try {
var info=null;
info=$I$(10).parse$S(result);
if (this.$finals$.trackType != null ) {
info=info.get$O("media");
var tracks=info.get$O("track");
info=null;
for (var i=tracks.size$(); --i >= 0; ) {
info=tracks.get$I(i);
if (info.get$O("@type").equals$O(this.$finals$.trackType)) break;
}
}this.$finals$.success.accept$O(info);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
this.$finals$.onError.accept$O(e.getMessage$());
} else {
throw e;
}
}
});
})()
), Clazz_new_(P$.JSImagekit$2.$init$,[this, {trackType:trackType,onError:onError,success:success}]));

C$.mediaInfoObject.analyzeData(data.length, function(chunkSize, offset){ return new Uint8Array(data.slice(offset, offset + chunkSize));
} ).then( function(result){f.accept$O(result)}, function(error){onError ? onError.accept$O(error) : console.log(error)} );
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.mediaInfoLoaded=false;
C$.mediaInfoObject=null;
C$.mediaInfoURL="https://unpkg.com/mediainfo.js@0.3.1/dist/umd/index.min.js";
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'swingjs.JSToolkit','swingjs.JSUtil','java.awt.event.MouseWheelEvent','java.awt.event.MouseEvent','java.awt.Toolkit','java.awt.JSComponent']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSMouse");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isCtrlShiftMouseDown','wheeling'],'I',['xWhenPressed','yWhenPressed','modifiersWhenPressed10','lastx','lasty','clickCount'],'J',['lasttime'],'O',['viewer','swingjs.JSFrameViewer','jqevent','java.lang.Object','mouse2','swingjs.JSMouse2']]]

Clazz_newMeth(C$, 'c$$swingjs_JSFrameViewer',  function (v) {
;C$.$init$.apply(this);
this.viewer=v;
}, 1);

Clazz_newMeth(C$, 'processEvent$I$I$I$I$J$O$I',  function (id, x, y, modifiers, time, jqevent, scroll) {
$I$(1).setThreadForViewer$swingjs_JSFrameViewer(this.viewer);
this.jqevent=jqevent;
switch (id) {
case 401:
case 400:
case 402:
return p$1.keyAction$I$O$J.apply(this, [id, jqevent, time]);
}
if (id != 507 && id != 503 ) modifiers=C$.applyLeftMouse$I(modifiers);
switch (id) {
case 507:
this.wheeled$J$I$I$I$I(time, x, y, scroll, modifiers);
break;
case 501:
this.xWhenPressed=x;
this.yWhenPressed=y;
this.modifiersWhenPressed10=modifiers & ~16320;
p$1.pressed$J$I$I$I$Z.apply(this, [time, x, y, modifiers, false]);
break;
case 506:
p$1.dragged$J$I$I$I.apply(this, [time, x, y, modifiers]);
break;
case 504:
case 505:
p$1.entry$J$I$I$I.apply(this, [time, x, y, id]);
break;
case 503:
p$1.moved$J$I$I$I.apply(this, [time, x, y, modifiers]);
break;
case 502:
p$1.released$J$I$I$I.apply(this, [time, x, y, modifiers & ~16320]);
if (x == this.xWhenPressed && y == this.yWhenPressed  && (modifiers & ~16320) == this.modifiersWhenPressed10  && C$.getButton$I$O(id, jqevent) != 1 ) {

jqevent.type = jqevent.originalEvent.j2stype = "click";
this.clicked$J$I$I$I$I(time, x, y, modifiers & ~16320, 1);
}break;
case 500:
var n=jqevent.originalEvent.detail ||0;
this.clicked$J$I$I$I$I(time, x, y, modifiers & ~16320, n);
break;
default:
return false;
}
return true;
});

Clazz_newMeth(C$, 'processTwoPointGesture$FAAA',  function (touches) {
p$1.getMouse2.apply(this, []).processTwoPointGesture$FAAA(touches);
});

Clazz_newMeth(C$, 'getMouse2',  function () {
return (this.mouse2 == null  ? (this.mouse2=$I$(2).getInstance$S("swingjs.JSMouse2")).set$swingjs_JSMouse(this) : this.mouse2);
}, p$1);

Clazz_newMeth(C$, 'translateXYBy$I$I',  function (deltaX, deltaY) {
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
this.clicked$J$I$I$I$I(e.getWhen$(), e.getX$(), e.getY$(), e.getModifiers$(), e.getClickCount$());
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
p$1.entry$J$I$I$I.apply(this, [e.getWhen$(), e.getX$(), e.getY$(), 504]);
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
p$1.entry$J$I$I$I.apply(this, [e.getWhen$(), e.getX$(), e.getY$(), 505]);
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
p$1.pressed$J$I$I$I$Z.apply(this, [e.getWhen$(), e.getX$(), e.getY$(), e.getModifiers$(), e.isPopupTrigger$()]);
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
p$1.released$J$I$I$I.apply(this, [e.getWhen$(), e.getX$(), e.getY$(), e.getModifiers$()]);
});

Clazz_newMeth(C$, 'mouseDragged$java_awt_event_MouseEvent',  function (e) {
var modifiers=e.getModifiers$();
if ((modifiers & 28) == 0) modifiers|=16;
p$1.dragged$J$I$I$I.apply(this, [e.getWhen$(), e.getX$(), e.getY$(), modifiers]);
});

Clazz_newMeth(C$, 'mouseMoved$java_awt_event_MouseEvent',  function (e) {
p$1.moved$J$I$I$I.apply(this, [e.getWhen$(), e.getX$(), e.getY$(), e.getModifiers$()]);
});

Clazz_newMeth(C$, 'mouseWheelMoved$java_awt_event_MouseWheelEvent',  function (e) {
e.consume$();
this.wheeled$J$I$I$I$I(e.getWhen$(), 0, 0, e.getWheelRotation$(), e.getModifiers$());
});

Clazz_newMeth(C$, 'entry$J$I$I$I',  function (time, x, y, id) {
this.wheeling=false;
p$1.mouseEnterExit$J$I$I$I.apply(this, [time, x, y, id]);
}, p$1);

Clazz_newMeth(C$, 'clicked$J$I$I$I$I',  function (time, x, y, modifiers, clickCount) {
p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [500, time, x, y, clickCount, modifiers, 0]);
});

Clazz_newMeth(C$, 'moved$J$I$I$I',  function (time, x, y, modifiers) {
if (this.isCtrlShiftMouseDown) p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [506, time, x, y, 0, C$.applyLeftMouse$I(modifiers), 0]);
 else p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [503, time, x, y, 0, modifiers, 0]);
}, p$1);

Clazz_newMeth(C$, 'wheeled$J$I$I$I$I',  function (time, x, y, rotation, modifiers) {
this.wheeling=true;
p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [507, time, x, y, 0, modifiers & ~28 | 32, rotation]);
});

Clazz_newMeth(C$, 'pressed$J$I$I$I$Z',  function (time, x, y, modifiers, isPopupTrigger) {
this.isCtrlShiftMouseDown=((modifiers & (3)) == (3));
this.wheeling=false;
p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [501, time, x, y, 0, modifiers, 0]);
}, p$1);

Clazz_newMeth(C$, 'released$J$I$I$I',  function (time, x, y, modifiers) {
this.isCtrlShiftMouseDown=false;
this.wheeling=false;
p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [502, time, x, y, 0, modifiers & ~16320, 0]);
}, p$1);

Clazz_newMeth(C$, 'dragged$J$I$I$I',  function (time, x, y, modifiers) {
if (this.wheeling) return;
if ((modifiers & 20) == 20) modifiers=modifiers & ~4 | 2;
p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [506, time, x, y, 0, modifiers, 0]);
}, p$1);

Clazz_newMeth(C$, 'applyLeftMouse$I',  function (modifiers) {
return ((modifiers & 28) == 0) ? (modifiers | 16) : modifiers;
}, 1);

Clazz_newMeth(C$, 'getButton$I$O',  function (id, jqevent) {
if (id != 503) {
var e=jqevent;
switch (e.button || e.buttons && (8 << e.buttons) ||1) {
case 1:
case 16:
return 1;
case 3:
case 128:
return 2;
case 2:
case 32:
return 3;
}
}return 0;
}, 1);

Clazz_newMeth(C$, 'mouseEnterExit$J$I$I$I',  function (time, x, y, id) {
p$1.mouseAction$I$J$I$I$I$I$I.apply(this, [id, time, x, y, 0, 0, 0]);
}, p$1);

Clazz_newMeth(C$, 'updateClickCount$I$J$I$I',  function (id, time, x, y) {
var reset=(Long.$gt(Long.$sub(time,this.lasttime),500 ) || Math.abs(x - this.lastx) > 3  || Math.abs(y - this.lasty) > 3 );
this.lasttime=time;
this.lastx=x;
this.lasty=y;
var ret=this.clickCount;
switch (id) {
case 501:
ret=this.clickCount=(reset ? 1 : this.clickCount + 1);
break;
case 504:
case 505:
this.clickCount=0;
break;
case 503:
if (reset) this.clickCount=0;
break;
case 502:
case 506:
case -1:
break;
}
return ret;
}, p$1);

Clazz_newMeth(C$, 'mouseAction$I$J$I$I$I$I$I',  function (id, time, x, y, xcount, modifiers, dy) {
var source=this.viewer.getTopComponent$();
var count=(xcount > 1 && id == 500  ? xcount : p$1.updateClickCount$I$J$I$I.apply(this, [id, time, x, y]));
C$.processMouseEvent$O$java_awt_Component$I$J$I$I$I$I$I(this.jqevent, source, id, time, x, y, count, modifiers, dy);
}, p$1);

Clazz_newMeth(C$, 'processMouseEvent$O$java_awt_Component$I$J$I$I$I$I$I',  function (jqevent, source, id, time, x, y, count, modifiers, dy) {
var button=C$.getButton$I$O(id, jqevent);
var popupTrigger=C$.isPopupTrigger$I$I$Z(id, modifiers, $I$(1).isWin);
var e;
if (id == 507) {
e=Clazz_new_($I$(3,1).c$$java_awt_Component$I$J$I$I$I$I$Z$I$I$I,[source, id, time, modifiers, x, y, count, popupTrigger, 0, 1, dy]);
} else {
e=Clazz_new_($I$(4,1).c$$java_awt_Component$I$J$I$I$I$I$Z$I,[source, id, time, modifiers, x, y, count, popupTrigger, button]);
}var bdata=Clazz_array(Byte.TYPE, [0]);
e.setBData$BA(bdata);
var c=null;

bdata.jqevent = jqevent; bdata.source = c = jqevent.j2sretarget || jqevent.target["data-component"];
bdata.doPropagate = c && c.ui.j2sDoPropagate;
if (c == null ) {
$I$(5).getDefaultToolkit$().getSystemEventQueue$().postEvent$java_awt_AWTEvent(e);
} else {
(e.getSource$()).dispatchEvent$java_awt_AWTEvent(e);
}}, 1);

Clazz_newMeth(C$, 'setPropagation$java_awt_Component$java_awt_event_MouseEvent',  function (target, e) {
var je=C$.getJQEvent$java_awt_event_MouseEvent(e);

if (je && target.ui.j2sDoPropagate) je.doPropagate = true;
}, 1);

Clazz_newMeth(C$, 'getJQEvent$java_awt_event_MouseEvent',  function (e) {
{
return (e.bdata && e.bdata.jqevent || null)
}
}, 1);

Clazz_newMeth(C$, 'checkConsume$java_awt_event_InputEvent',  function (e) {
var ui=(e.getSource$()).秘getUI$();
if (e.bdata != null  && ui != null   && ui.buttonListener == null   && ((!e.bdata.doPropagate ||false)) ) {
$I$(1).consumeEvent$O(e);
}}, 1);

Clazz_newMeth(C$, 'getJ2SEventTarget$java_awt_event_MouseEvent',  function (e) {
return e.bdata && e.bdata.source ||null;
}, 1);

Clazz_newMeth(C$, 'isPopupTrigger$I$I$Z',  function (id, mods, isWin) {
var rt=((mods & 4) != 0);
if (isWin) {
if (id != 502) return false;
return rt;
} else {
if (id != 501) return false;
var lt=((mods & 16) != 0);
var ctrl=((mods & 2) != 0);
return rt || (ctrl && lt ) ;
}}, 1);

Clazz_newMeth(C$, 'keyAction$I$O$J',  function (id, jqevent, time) {
var c=jqevent.target["data-shadowkeycomponent"] || jqevent.target["data-keycomponent"] ||null;
if (c == null ) return false;
if (c.秘isContentPane) c=c.getTopLevelAncestor$();
return $I$(6).秘dispatchKeyEvent$javax_swing_JComponent$I$O$J(c, id, jqevent, time);
}, p$1);

Clazz_newMeth(C$, 'getScroll$O',  function (ev) {
{
var oe = ev.originalEvent; return (oe.detail ? oe.detail : (J2S.featureDetection.os == "mac" ? 1 : -1) * oe.wheelDelta);
}
}, 1);

Clazz_newMeth(C$, 'getModifiers$O',  function (ev) {
var shift=false;
var ctrl=false;
var meta=false;
var alt=false;
var altGraph=false;

shift = ev.shiftKey;
ctrl = ev.ctrlKey;
alt = ev.altKey;
meta = ev.metaKey;
altGraph = ev.altGraphKey;
var modifiers=0;
if (shift) modifiers|=65;
if (ctrl) modifiers|=130;
if (alt) modifiers|=520;
if (meta) modifiers|=260;
if (altGraph) modifiers|=8224;
return modifiers;
}, 1);

Clazz_newMeth(C$, 'fixEventType$O$I',  function (jqevent, def) {
switch (jqevent.type ||"") {
case "keydown":
return 401;
case "keyup":
return 402;
case "keypress":
return 400;
case "click":
return 500;
case "pointerdown":
case "mousedown":
case "touchstart":
return 501;
case "pointerup":
case "mouseup":
case "touchend":
return 502;
case "pointermove":
case "mousemove":
return 503;
case "mousedrag":
return 506;
case "mousewheel":
return 507;
case "pointerover":
case "pointerenter":
case "mouseover":
case "mouseenter":
return 504;
case "pointerout":
case "pointerleave":
case "mouseout":
case "mouseleave":
return 505;
}
return def;
}, 1);

Clazz_newMeth(C$, 'retargetMouseEvent$O$swingjs_api_js_DOMNode$javax_swing_JComponent$javax_swing_JComponent$I',  function (jqevent, base, from, to, id) {
if (id == 0) id=C$.fixEventType$O$I(jqevent, 0);
var isDirect=(base != null );
var c=null;
if (base == null ) {
c=$I$(6).秘getTopInvokableAncestor$java_awt_Component$Z(from, false);
if (c == null ) c=from;
base=c.秘getUI$().getDOMNode$();
} else {
c=from;
}var xym=null;

jqevent.j2sretarget = to; xym = J2S._getEventXY(jqevent, J2S.$(base).offset());
var modifiers=C$.getModifiers$O(jqevent);
var time=System.currentTimeMillis$();
if (isDirect) {
C$.processMouseEvent$O$java_awt_Component$I$J$I$I$I$I$I(jqevent, from, id, time, xym[0], xym[1], 0, modifiers, 0);
} else {
c.getFrameViewer$().processMouseEvent$I$I$I$I$J$O$I(id, xym[0], xym[1], modifiers, time, jqevent, C$.getScroll$O(jqevent));
}}, 1);

Clazz_newMeth(C$, 'getTarget$java_awt_event_MouseEvent',  function (e) {
var je=C$.getJQEvent$java_awt_event_MouseEvent(e);
return je ? je.target :null;
}, 1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'java.awt.GraphicsConfiguration','swingjs.JSToolkit']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSScreenDevice", null, 'java.awt.GraphicsDevice');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
System.out.println$S("JSScreenDevice initialized");
}, 1);

Clazz_newMeth(C$, 'getType$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getIDstring$',  function () {
return "swingjs.JSScreenDevice";
});

Clazz_newMeth(C$, 'getConfigurations$',  function () {
return Clazz_array($I$(1), -1, [this.getDefaultConfiguration$()]);
});

Clazz_newMeth(C$, 'getDefaultConfiguration$',  function () {
return $I$(2).getGraphicsConfiguration$();
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs");
/*c*/var C$=Clazz_newClass(P$, "JSThreadGroup", null, 'ThreadGroup');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$$S',  function (name) {
;C$.superclazz.c$$S.apply(this,[name]);C$.$init$.apply(this);
this.秘html5Applet=J2S._applets[name] ||null;
}, 1);

Clazz_newMeth(C$, 'c$$ThreadGroup$S',  function (parent, name) {
;C$.superclazz.c$$ThreadGroup$S.apply(this,[parent, name]);C$.$init$.apply(this);
this.秘html5Applet=J2S._applets[name] ||null;
}, 1);

Clazz_newMeth(C$, 'getHtmlApplet$',  function () {
return this.秘html5Applet;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:47 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),p$1={},I$=[[0,'sun.awt.AppContext','Thread','swingjs.JSUtil','java.awt.image.ColorModel','javax.swing.UIManager','swingjs.api.Interface','javajs.util.PT','swingjs.JSNullComponentPeer','sun.awt.image.ToolkitImage','sun.awt.image.FileImageSource','swingjs.JSImagekit','java.io.BufferedInputStream','java.io.ByteArrayInputStream','java.io.File','java.nio.file.Paths','java.awt.datatransfer.Clipboard','swingjs.JSFocusPeer','java.awt.Point']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSToolkit", null, 'sun.awt.SunToolkit');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['imageKit','swingjs.JSImagekit']]
,['Z',['isMac','isLinux','isUnix','isWin'],'I',['dispatchID'],'O',['SwingJS','swingjs.SwingJS','defaultContext','swingjs.api.js.HTML5CanvasContext2D','uid','javax.swing.UIDefaults','audioPlayer','swingjs.JSAudio','systemClipboard','java.awt.datatransfer.Clipboard','hardwiredFontList','String[]','focusManager','java.awt.peer.KeyboardFocusManagerPeer']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$.apply(this,[]);C$.$init$.apply(this);
System.out.println$S("JSToolkit initialized");
}, 1);

Clazz_newMeth(C$, 'getPostEventQueue$Z',  function (isPost) {
return (isPost ? $I$(1).getAppContext$().get$O("PostEventQueue") : $I$(1).getAppContext$().get$O("AppContext_EVENT_QUEUE_KEY"));
}, 1);

Clazz_newMeth(C$, 'getAppletViewer$',  function () {
return $I$(2).currentThread$().getThreadGroup$().秘appletViewer;
}, 1);

Clazz_newMeth(C$, 'getScreenSize$java_awt_Dimension',  function (d) {
var jq=$I$(3).jQuery;
d.width=window.innerWidth ||0;
d.height=window.innerHeight ||0;
}, 1);

Clazz_newMeth(C$, 'getScreenWidth$',  function () {
var jq=$I$(3).jQuery;
return jq.$(window).width() ||0;
});

Clazz_newMeth(C$, 'getScreenHeight$',  function () {
var jq=$I$(3).jQuery;
return jq.$(window).height() ||0;
});

Clazz_newMeth(C$, 'getScreenResolution$',  function () {
return 96;
});

Clazz_newMeth(C$, 'getColorModel$',  function () {
return $I$(4).getRGBdefault$();
});

Clazz_newMeth(C$, 'sync$',  function () {
});

Clazz_newMeth(C$, 'isModalExclusionTypeSupported$java_awt_Dialog_ModalExclusionType',  function (modalExclusionType) {
return true;
});

Clazz_newMeth(C$, 'isModalityTypeSupported$java_awt_Dialog_ModalityType',  function (modalityType) {
return true;
});

Clazz_newMeth(C$, 'isTraySupported$',  function () {
return false;
});

Clazz_newMeth(C$, 'grab$java_awt_Window',  function (w) {
});

Clazz_newMeth(C$, 'ungrab$java_awt_Window',  function (w) {
});

Clazz_newMeth(C$, 'getPropertyObject$O$S$O',  function (t, key, def) {
return def;
}, 1);

Clazz_newMeth(C$, 'getGraphicsConfiguration$',  function () {
var ap=C$.getAppletViewer$();
if (ap == null ) ap=$I$(2).currentThread$().getThreadGroup$().秘getAppletViewer$();
var gc=(ap == null  ? null : ap.graphicsConfig);
return (gc == null  ? (gc=ap.graphicsConfig=$I$(3).getInstance$S("swingjs.JSGraphicsConfiguration")) : gc);
}, 1);

Clazz_newMeth(C$, 'isFocused$java_awt_Window',  function (window) {
return false;
}, 1);

Clazz_newMeth(C$, 'getStringWidth$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S',  function (context, font, text) {
if (text == null  || text.length$() == 0 ) return 0;
var fontInfo=C$.getCanvasFont$java_awt_Font(font);
if (context == null ) context=C$.getDefaultCanvasContext2d$();
var w=0;
{
context.font = fontInfo;
w = Math.ceil(context.measureText(text).width);
}
return w;
}, 1);

Clazz_newMeth(C$, 'getTextMetrics$swingjs_api_js_HTML5CanvasContext2D$java_awt_Font$S',  function (context, font, text) {
if (text == null  || text.length$() == 0 ) return Integer.valueOf$I(0);
var fontInfo=C$.getCanvasFont$java_awt_Font(font);
if (context == null ) context=C$.getDefaultCanvasContext2d$();
var tm=null;
{
context.font = fontInfo;
tm = context.measureText(text);
}
return tm;
}, 1);

Clazz_newMeth(C$, 'getDefaultCanvasContext2d$',  function () {
{
if (this.defaultContext == null) this.defaultContext = document.createElement( 'canvas' ).getContext('2d');
}
return C$.defaultContext;
}, 1);

Clazz_newMeth(C$, 'getCSSColor$java_awt_Color$Z',  function (c, asHex) {
var i=c.getRGB$() & 16777215;
if (asHex) {
var s=(i == 0 ? "000" : "000000" + Integer.toHexString$I(i));
return "#" + s.substring$I(s.length$() - 6);
} else {
var opacity=c.getAlpha$();
var rgb=c.getRGB$();
var s=((rgb >> 16) & 255) + ", " + ((rgb >> 8) & 255) + ", " + (rgb & 255) ;
return (opacity == 255 ? "rgb(" + s + ")"  : "rgba(" + s + ", " + new Float(opacity / 255.0).toString()  + ")");
}}, 1);

Clazz_newMeth(C$, 'getLookAndFeelDefaults$',  function () {
if (C$.uid == null ) C$.uid=$I$(5).getLookAndFeel$().getDefaults$();
return C$.uid;
}, 1);

Clazz_newMeth(C$, 'getComponentUI$javax_swing_JComponent',  function (target) {
var id=(target).getUIClassID$();
var ui=$I$(6).getInstance$S$Z("swingjs.plaf.JS" + id, true);
if (ui != null ) ui.set$javax_swing_JComponent(target);
return ui;
}, 1);

Clazz_newMeth(C$, 'dispatchEvent$java_awt_AWTEvent$O$Z',  function (event, src, andWait) {
var id=++C$.dispatchID;
var f=function() { if (src == null) event.dispatch$(); else src.dispatchEvent$java_awt_AWTEvent(event); } ||null;
if (andWait) {
C$.invokeAndWait$swingjs_api_js_JSFunction$I(f, id);
} else {
var ms=(C$.isMouseEvent$I(event.getID$()) ? -1 : 0);
C$.dispatch$O$I$I(f, ms, id);
}}, 1);

Clazz_newMeth(C$, 'isMouseEvent$I',  function (id) {
return (id >= 500 && id <= 507 );
}, 1);

Clazz_newMeth(C$, 'killDispatched$I',  function (html5Id) {

clearTimeout(html5Id);
}, 1);

Clazz_newMeth(C$, 'getCurrentThread$javajs_util_JSThread',  function (t) {
var setCurrent=(t != null );
if (t == null ) t=$I$(2).秘thisThread;
t=(!self.java ||t.getThreadGroup$().秘systemExited ? null : t);
if (setCurrent && t != null  ) $I$(2).秘thisThread=t;
return t;
}, 1);

Clazz_newMeth(C$, 'startThread$Thread',  function (t) {
var thread=t;
var thread0=C$.getCurrentThread$javajs_util_JSThread(null);
if (thread0 == null ) return;
var id0=C$.SwingJS.eventID;

var ff = function() {
C$.SwingJS.eventID=0;
thread=C$.getCurrentThread$javajs_util_JSThread(thread);
if (thread == null ) return;
try {

thread.run$();
} catch (e) {
var s="JSToolkit.dispatch$I(thread): " + thread.getName$() + ": " + e + "\n" + 
(e.getStackTrace$ ? e.getStackTrace$() + "\n" : "") + (!!e.stack ? e.stack : "") +
"" ;
System.out.println$S(s);
}
if (C$.getCurrentThread$javajs_util_JSThread(null) === t ) C$.getCurrentThread$javajs_util_JSThread(thread0);
C$.SwingJS.eventID=id0;

}; setTimeout(ff, 0);
}, 1);

Clazz_newMeth(C$, 'dispatch$O$I$I',  function (f, msDelay, id) {
var thread0=C$.getCurrentThread$javajs_util_JSThread(null);
if (thread0 == null ) return 0;
var ret=0;
var id0=C$.SwingJS.eventID;

var ff = function() {
C$.SwingJS.eventID=id;
thread0=C$.getCurrentThread$javajs_util_JSThread(thread0);
if (thread0 == null ) return 0;
try {

if (f.run$) f.run$(); else f();
} catch (e) {
var s="JSToolkit.dispatch$I(" + id + "): " + e + "\n" + 
(e.getStackTrace$ ? e.getStackTrace$() + "\n" : "") + (!!e.stack ? e.stack : "") +
"" ;
System.out.println$S(s);
$I$(3).warn$S(s);
}
C$.getCurrentThread$javajs_util_JSThread(thread0);
C$.SwingJS.eventID=id0;

}; ret = (msDelay == -1 ? ff() : setTimeout(ff, msDelay));
return ret;
}, 1);

Clazz_newMeth(C$, 'invokeAndWait$swingjs_api_js_JSFunction$I',  function (f, id) {
var thread0=C$.getCurrentThread$javajs_util_JSThread(null);
if (thread0 == null ) return;

(function() {
var id0=C$.SwingJS.eventID;
C$.SwingJS.eventID=id;
thread0=C$.getCurrentThread$javajs_util_JSThread(thread0);
if (thread0 == null ) return;

if (f.run$) f.run$(); else f();
thread0=C$.getCurrentThread$javajs_util_JSThread(thread0);
if (thread0 == null ) return;
C$.SwingJS.eventID=id0;

})();
}, 1);

Clazz_newMeth(C$, 'isDispatchThread$',  function () {
return (C$.SwingJS.eventID != 0);
}, 1);

Clazz_newMeth(C$, 'setIsDispatchThread$Z',  function (b) {
C$.SwingJS.eventID=(b ? 1 : 0);
}, 1);

Clazz_newMeth(C$, 'getHTML5Applet$java_awt_Component',  function (c) {
return $I$(3).getHTML5Applet$java_awt_Component(c);
}, 1);

Clazz_newMeth(C$, 'taintUI$java_awt_Component',  function (c) {
{
c.getUI$ && c.getUI$() && c.getUI$().setTainted$();
}
}, 1);

Clazz_newMeth(C$, 'createComponent$java_awt_Component',  function (target) {
var peer=C$.getUI$java_awt_Component$Z(target, true);
return peer;
});

Clazz_newMeth(C$, 'createDialog$java_awt_Dialog',  function (target) {
var ui=target.getUI$();
if (ui == null ) return null;
return (ui).setFrame$java_awt_Window$Z(target, true);
});

Clazz_newMeth(C$, 'createFrame$java_awt_JSFrame',  function (target) {
var ui=target.getUI$();
if (ui == null ) return null;
return (ui).setFrame$java_awt_Window$Z(target, true);
});

Clazz_newMeth(C$, 'createFrame$java_awt_Frame',  function (target) {
var ui=target.getUI$();
if (ui == null ) return null;
return (ui).setFrame$java_awt_Window$Z(target, true);
});

Clazz_newMeth(C$, 'createWindow$java_awt_Window',  function (target) {
var ui=target.getUI$();
if (ui == null ) return null;
return (ui).setFrame$java_awt_Window$Z(target, false);
});

Clazz_newMeth(C$, 'getUI$java_awt_Component$Z',  function (c, isQuiet) {
var ui=(c).秘getUI$();
if (ui == null ) {
(c).updateUI$();
ui=(c).秘getUI$();
}if (ui == null ) {
var s=c.getClass$().getName$();
if (!$I$(7).isOneOf$S$S(s, ";javax.swing.Box$Filler;")) System.out.println$S("[JSToolkit] Component " + s + " has no corresponding JSComponentUI, class " + c.getClass$().getName$() );
ui=Clazz_new_($I$(8,1).c$$java_awt_Component,[c]);
}return ui;
}, 1);

Clazz_newMeth(C$, 'getImagekit',  function () {
return (this.imageKit == null  ? this.imageKit=$I$(6).getInstance$S$Z("swingjs.JSImagekit", false) : this.imageKit);
}, p$1);

Clazz_newMeth(C$, 'getImage$S',  function (filename) {
if (filename.indexOf$S("/") != 0) filename="../" + filename;
var img=null;
try {
img=this.createImage$java_net_URL(Clazz_getClass(C$).getResource$S(filename));
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
if (img == null ) img=Clazz_new_([Clazz_new_($I$(10,1).c$$S,[filename])],$I$(9,1).c$$java_awt_image_ImageProducer);
return img;
});

Clazz_newMeth(C$, 'getImage$java_net_URL',  function (url) {
return this.createImage$java_net_URL(url);
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer',  function (producer) {
var kit=Clazz_new_($I$(11,1));
try {
producer.startProduction$java_awt_image_ImageConsumer(kit);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
return kit.getCreatedImage$();
});

Clazz_newMeth(C$, 'createImage$java_awt_Component$java_awt_image_ImageProducer',  function (c, producer) {
return (this.createImage$java_awt_image_ImageProducer(producer)).setComponent$java_awt_Component(c);
});

Clazz_newMeth(C$, 'createImageIcon$java_awt_Component$javax_swing_Icon$S',  function (c, icon, id) {
return $I$(11).createImageIcon$java_awt_Component$javax_swing_Icon$S(c, icon, id);
}, 1);

Clazz_newMeth(C$, 'createImage$S',  function (filename) {
return p$1.getImagekit.apply(this, []).createImageFromBytes$BA$I$I$S($I$(3,"getSignedStreamBytes$java_io_BufferedInputStream",[Clazz_new_([Clazz_new_([$I$(3).getFileAsBytes$O(filename)],$I$(13,1).c$$BA)],$I$(12,1).c$$java_io_InputStream)]), 0, -1, filename);
});

Clazz_newMeth(C$, 'createImage$java_net_URL',  function (url) {
var b=$I$(3).getURLInputStream$java_net_URL$Z(url, true);
return (b == null  ? null : p$1.getImagekit.apply(this, []).createImageFromBytes$BA$I$I$S($I$(3).getSignedStreamBytes$java_io_BufferedInputStream(b), 0, -1, url.toString()));
});

Clazz_newMeth(C$, 'createImage$BA$I$I',  function (data, imageoffset, imagelength) {
return p$1.getImagekit.apply(this, []).createImageFromBytes$BA$I$I$S(data, imageoffset, imagelength, null);
});

Clazz_newMeth(C$, 'createImage$java_awt_Component$I$I',  function (c, width, height) {
return (this.createImage$BA$I$I(null, width, height)).setComponent$java_awt_Component(c);
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (image, width, height, observer) {
return 63;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (image, width, height, observer) {
return true;
});

Clazz_newMeth(C$, 'getVideo$S',  function (filename) {
return this.createVideo$java_nio_file_Path(Clazz_new_($I$(14,1).c$$S,[filename]).toPath$());
});

Clazz_newMeth(C$, 'getVideo$java_net_URL',  function (url) {
try {
if (url.getProtocol$() === "jar" ) {
return this.createVideo$BA($I$(3).getFileAsBytes$O(url));
}if (url.getProtocol$().equals$O("file")) return this.getVideo$S(url.getFile$());
return this.createVideo$java_nio_file_Path($I$(15,"get$java_net_URI",[url.toURI$()]));
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.URISyntaxException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'createVideo$java_nio_file_Path',  function (path) {
return p$1.getImagekit.apply(this, []).createVideo$java_nio_file_Path(path);
});

Clazz_newMeth(C$, 'createVideo$BA',  function (bytes) {
return p$1.getImagekit.apply(this, []).createVideo$BA(bytes);
});

Clazz_newMeth(C$, 'getAudioPlayer$',  function () {
return (C$.audioPlayer == null  ? C$.audioPlayer=$I$(3).getInstance$S("swingjs.JSAudio") : C$.audioPlayer);
}, 1);

Clazz_newMeth(C$, 'playAudio$BA$javax_sound_sampled_AudioFormat',  function (data, audioFormat) {
C$.getAudioPlayer$().getAudio$BA$javax_sound_sampled_AudioFormat(data, audioFormat).play$();
}, 1);

Clazz_newMeth(C$, 'getAudioClip$java_net_URL',  function (url) {
return C$.getAudioPlayer$().getAudioClip$java_net_URL(url);
}, 1);

Clazz_newMeth(C$, 'playAudioFile$java_net_URL',  function (url) {
C$.getAudioPlayer$().getAudioFileFromURL$java_net_URL(url).play$();
}, 1);

Clazz_newMeth(C$, 'getAudioLine$javax_sound_sampled_Line_Info',  function (info) {
return C$.getAudioPlayer$().getAudioLine$javax_sound_sampled_Line_Info(info);
}, 1);

Clazz_newMeth(C$, 'getTimerQueue$',  function () {
return $I$(2).currentThread$().getThreadGroup$().秘getTimerQueue$();
}, 1);

Clazz_newMeth(C$, 'getFileFromDialog$swingjs_api_JSFileHandler$S',  function (jsFileHandler, type) {
var f=null;
{
f = function(data, fileName) { jsFileHandler.handleFileLoaded$BA$S(data, fileName) };
}
$I$(3).J2S.getFileFromDialog(f, type);
}, 1);

Clazz_newMeth(C$, 'getSystemClipboard$',  function () {
if (C$.systemClipboard == null ) C$.systemClipboard=Clazz_new_($I$(16,1).c$$S,["System"]);
return C$.systemClipboard;
});

Clazz_newMeth(C$, 'createDragSourceContextPeer$java_awt_dnd_DragGestureEvent',  function (dge) {
return null;
});

Clazz_newMeth(C$, 'getCursorName$java_awt_Cursor',  function (c) {
switch (c == null  ? 0 : c.getType$()) {
case 1:
return "crosshair";
case 3:
return "wait";
case 2:
return "text";
case 12:
return "pointer";
case 13:
return "move";
case 8:
case 9:
return "ns-resize";
case 7:
case 4:
return "nesw-resize";
case 5:
case 6:
return "nwse-resize";
case 11:
case 10:
return "ew-resize";
case -1:
return c.getName$();
case 0:
default:
return "default";
}
}, 1);

Clazz_newMeth(C$, 'getFontList$',  function () {
if (C$.hardwiredFontList == null ) C$.hardwiredFontList=Clazz_array(String, -1, ["Dialog", "SansSerif", "Serif", "Monospaced", "DialogInput"]);
return C$.hardwiredFontList;
});

Clazz_newMeth(C$, 'getFontFamily$java_awt_Font',  function (font) {
return font.getName$();
}, 1);

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (font) {
return font.getFontMetrics$();
});

Clazz_newMeth(C$, 'getCanvasFont$java_awt_Font',  function (font) {
var strStyle="";
if (font.isItalic$()) strStyle+="italic ";
if (font.isBold$()) strStyle+="bold ";
var family=C$.getCSSFontFamilyName$S(font.getFamily$());
font.getSize$();
return strStyle + new Float(font.getSize2D$()).toString() + "px " + family ;
}, 1);

Clazz_newMeth(C$, 'getCSSFontFamilyName$S',  function (family) {
family=family.toLowerCase$();
if (family.equals$O("sansserif") || family.equals$O("helvetica") || family.equals$O("dialog") || family.equals$O("dialoginput")  ) family="Arial";
 else if (family.equals$O("monospaced")) family="monospace";
return family;
}, 1);

Clazz_newMeth(C$, 'getDateFormat$S',  function (isoType) {
var prefix="";
var suffix="";
{
if (isoType == null) { return ("" + (new Date())).split(" (")[0];
} if (isoType.indexOf("8824") >= 0) { var d = new Date();
var x = d.toString().split(" ");
var MM = "0" + (1 + d.getMonth()); MM = MM.substring(MM.length - 2);
var dd = "0" + d.getDate(); dd = dd.substring(dd.length - 2);
return x[3] + MM + dd + x[4].replace(/\:/g,"") + x[5].substring(3,6) + "'" + x[5].substring(6,8) + "'" } if (isoType.indexOf("8601") >= 0){ var d = new Date();
var x = d.toString().split(" ");
// Firefox now doing this?
if (x.length == 1) return x;
var MM = "0" + (1 + d.getMonth()); MM = MM.substring(MM.length - 2);
var dd = "0" + d.getDate(); dd = dd.substring(dd.length - 2);
return x[3] + '-' + MM + '-' + dd + 'T' + x[4] }
}
}, 1);

Clazz_newMeth(C$, 'beep$',  function () {
System.out.println$S("JSToolkit.beep");
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_JSFrame$S$java_util_Properties',  function (frame, jobtitle, props) {
var job=$I$(3).getInstance$S("swingjs.JSPrintJob");
job.setProperties$S$java_util_Properties(jobtitle, props);
return job;
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_Frame$S$java_util_Properties',  function (frame, jobtitle, props) {
var job=$I$(3).getInstance$S("swingjs.JSPrintJob");
job.setProperties$S$java_util_Properties(jobtitle, props);
return job;
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_JSFrame$S$java_awt_JobAttributes$java_awt_PageAttributes',  function (frame, jobtitle, jobAttributes, pageAttributes) {
var job=$I$(3).getInstance$S("swingjs.JSPrintJob");
job.setAttributes$S$java_awt_JobAttributes$java_awt_PageAttributes(jobtitle, jobAttributes, pageAttributes);
return job;
});

Clazz_newMeth(C$, 'getPrintJob$java_awt_Frame$S$java_awt_JobAttributes$java_awt_PageAttributes',  function (frame, jobtitle, jobAttributes, pageAttributes) {
var job=$I$(3).getInstance$S("swingjs.JSPrintJob");
job.setAttributes$S$java_awt_JobAttributes$java_awt_PageAttributes(jobtitle, jobAttributes, pageAttributes);
return job;
});

Clazz_newMeth(C$, 'mapInputMethodHighlight$java_awt_im_InputMethodHighlight',  function (hl) {
$I$(3).notImplemented$S(null);
return null;
});

Clazz_newMeth(C$, 'getFocusPeer$',  function () {
return (C$.focusManager == null  ? C$.focusManager=Clazz_new_($I$(17,1)) : C$.focusManager);
}, 1);

Clazz_newMeth(C$, 'hasFocus$java_awt_Component',  function (c) {
var ui=C$.getUI$java_awt_Component$Z(c, false);
return (ui != null  && !ui.isNull  && ui.hasFocus$() );
}, 1);

Clazz_newMeth(C$, 'getKeyboardFocusManagerPeer$',  function () {
return C$.getFocusPeer$();
});

Clazz_newMeth(C$, 'getCurrentFocusOwner$O',  function (related) {
return (C$.getFocusPeer$()).getCurrentFocusOwner$O(related);
}, 1);

Clazz_newMeth(C$, 'consumeEvent$O',  function (e) {
var jqevent=null;
if (Clazz_instanceOf(e, "java.awt.event.InputEvent")) {
jqevent=e.bdata && e.bdata.jqevent ||null;
} else {
jqevent=e;
}if (jqevent == null ) return;

jqevent.stopPropagation();
jqevent.preventDefault();
}, 1);

Clazz_newMeth(C$, 'getMouseLocation$',  function () {
return $I$(3).J2S.getMousePosition(Clazz_new_($I$(18,1)));
}, 1);

Clazz_newMeth(C$, 'isOverWritten$javax_swing_JComponent$S',  function (jc, method) {
var s=jc[method].exClazz.__CLASS_NAME__ ||"";
return s.indexOf$S("java") != 0 && s.indexOf$S("swingjs") != 0 ;
}, 1);

Clazz_newMeth(C$, 'checkJ2SFlag$S',  function (flag) {
return (J2S[flag] ||false);
}, 1);

Clazz_newMeth(C$, 'getMenuShortcutKeyMask$',  function () {
return (C$.isMac ? 4 : 2);
});

Clazz_newMeth(C$, 'setThreadForViewer$swingjs_JSFrameViewer',  function (viewer) {
if (viewer != null  && viewer.appletViewer != null   && viewer.appletViewer !== $I$(2).currentThread$().getThreadGroup$().秘appletViewer  ) {
C$.getCurrentThread$javajs_util_JSThread(viewer.appletViewer.myThread);
}}, 1);

C$.$static$=function(){C$.$static$=0;
{
{
C$.isMac = (J2S.featureDetection.os == "mac");
C$.isLinux = (J2S.featureDetection.os == "linux");
C$.isUnix = (J2S.featureDetection.os == "unix");
C$.isWin = (J2S.featureDetection.os == "win");
}
};
C$.SwingJS=SwingJS ||null;
C$.dispatchID=0;
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:48 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs"),I$=[[0,'java.io.File','java.net.URL','javajs.util.Rdr','javajs.util.AU','java.io.BufferedInputStream','java.io.ByteArrayInputStream','javajs.util.ZipTools','swingjs.api.Interface','java.util.Hashtable','java.awt.Toolkit','java.util.Locale','javajs.util.AjaxURLConnection','swingjs.json.JSON','java.awt.Color','Thread','sun.awt.AppContext','java.util.HashMap','swingjs.api.js.DOMNode','swingjs.JSToolkit',['swingjs.JSDnD','.JSTransferable'],'swingjs.JSImagekit']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSUtil", null, null, 'swingjs.api.JSUtilI');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['Z',['debugging','useCache'],'O',['J2S','swingjs.api.js.J2SInterface','fileCache','java.util.Hashtable','zipTools','javajs.util.ZipTools','jQuery','swingjs.api.js.JQuery','mapNotImpl','java.util.Map','ctxTemp','java.lang.Object']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, ['newJSUtil$','newJSUtil'],  function () {
return Clazz_new_(C$);
}, 1);

Clazz_newMeth(C$, 'getFileCache$',  function () {
return (C$.fileCache == null  ? C$.fileCache=C$.J2S.getSetJavaFileCache(null) : C$.fileCache);
}, 1);

Clazz_newMeth(C$, 'getCachedFileData$S',  function (path) {
return C$.getCachedFileData$S$Z(path, false);
}, 1);

Clazz_newMeth(C$, 'getCachedFileData$S$Z',  function (path, asBytes) {
var o=(C$.getFileCache$() != null  ? C$.fileCache.get$O(C$.fixCachePath$S(path)) : null);
return (Clazz_instanceOf(o, Clazz_array(Byte.TYPE, -1)) ? o : null);
}, 1);

Clazz_newMeth(C$, 'getCachedFileList$java_io_File',  function (dir) {
var path=C$.fixCachePath$S(dir.getAbsolutePath$());
if (!path.endsWith$S("/")) path+="/";
var len=path.length$();
var map=C$.getFileCache$();
var a=Clazz_array(String, [0]);
var dirs="/";
for (var e, $e = map.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
if (e.getValue$() === Boolean.FALSE ) continue;
var fs=e.getKey$();
if (fs.startsWith$S(path)) {
var name=fs.substring$I(len);
var pt=name.indexOf$S("/");
if (pt >= 0) {
var fdir="/" + name.substring$I$I(0, pt + 1);
if (dirs.indexOf$S(fdir) >= 0) continue;
dirs+=fdir;
name=name.substring$I$I(0, pt);
}
name && a.push(name);
}}
return a;
}, 1);

Clazz_newMeth(C$, 'removeCachedFileData$S',  function (path) {
if (C$.getFileCache$() == null ) return null;
path=C$.fixCachePath$S(path);
return (("/" + path).startsWith$S($I$(1).temporaryDirectory) ? C$.fileCache.remove$O(path) : C$.fileCache.put$O$O(path, Boolean.FALSE));
}, 1);

Clazz_newMeth(C$, 'getFileContents$O$Z$swingjs_api_js_JSFunction',  function (uriOrJSFile, asBytes, fWhenDone) {
var isFile=(Clazz_instanceOf(uriOrJSFile, "java.io.File"));
var uri=uriOrJSFile.toString();
if (isFile) {
var bytes=uriOrJSFile.秘bytes ||null;
if (bytes != null ) {
C$.setFileBytesStatic$O$O(uriOrJSFile, bytes);
return bytes;
}if ((uriOrJSFile).秘isTempFile) return C$.getCachedFileData$S$Z(uri, true);
uri=C$.J2S.getResourcePath(uri, true);
}var data=null;
if (asBytes && uri.indexOf$S(":/") < 0 ) {
data=C$.getCachedFileData$S(uri);
if (data != null ) return data;
if (!uri.startsWith$S("/")) uri="/" + uri;
uri="http://." + uri;
}if (data == null ) {
data=C$.getCachedFileData$S(uri);
}if (data == null  && !uri.startsWith$S("./") ) {
if (!isFile) {
try {
var url=Clazz_new_($I$(2,1).c$$S,[uri]);
var stream=url.getContent$();
return (asBytes ? $I$(3).streamToBytes$java_io_InputStream(stream) : $I$(3).streamToString$java_io_InputStream(stream));
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
} else {
throw e;
}
}
}data=C$.J2S.getFileData(uri, fWhenDone, false, asBytes);
if (data == null ) {
C$.removeCachedFileData$S(uri);
} else if (Clazz_instanceOf(data, Clazz_array(Byte.TYPE, -1))) {
C$.setFileBytesStatic$O$O(uriOrJSFile, data);
}}return data;
}, 1);

Clazz_newMeth(C$, 'fixCachePath$S',  function (uri) {
return C$.J2S.fixCachePath(uri);
}, 1);

Clazz_newMeth(C$, 'getFileAsString$S',  function (filename) {
var data=C$.getFileContents$O$Z$swingjs_api_js_JSFunction(filename, false, null);
return C$.ensureString$O(data);
}, 1);

Clazz_newMeth(C$, 'ensureString$O',  function (data) {
if (data == null ) return null;
if (Clazz_instanceOf(data, Clazz_array(Byte.TYPE, -1))) return  String.instantialize(data);
if (Clazz_instanceOf(data, "java.lang.String") || Clazz_instanceOf(data, "javajs.util.SB") ) return data.toString();
if (Clazz_instanceOf(data, "java.io.InputStream")) try {
return $I$(3).streamToString$java_io_InputStream(data);
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
} else {
throw e;
}
}
return null;
}, 1);

Clazz_newMeth(C$, 'getFileAsBytes$O$Z',  function (file, checkNotFound) {
var data=C$.getFileAsBytes$O(file);
if (data == null ) return null;
if (checkNotFound) {
if (data.length == 0) return null;
if (data.length == 2) {
if (data[0] == 13 && data[1] == 10 ) return null;
}if (data.length == 39) {
if ( String.instantialize(data).equals$O("NetworkError: A network error occurred.")) return null;
}}return data;
}, 1);

Clazz_newMeth(C$, 'getFileAsBytes$O',  function (file) {
var data=C$.getFileContents$O$Z$swingjs_api_js_JSFunction(file, true, null);
if (data == null  || data === Boolean.FALSE  ) return null;
var b=null;
if (Clazz_instanceOf(data, Clazz_array(Byte.TYPE, -1))) {
b=data;
} else if (Clazz_instanceOf(data, "java.lang.String")) {
b=(data).getBytes$();
} else if (Clazz_instanceOf(data, "javajs.util.SB")) {
b=$I$(3).getBytesFromSB$javajs_util_SB(data);
} else if (Clazz_instanceOf(data, "java.io.InputStream")) {
try {
b=$I$(3).getLimitedStreamBytes$java_io_InputStream$J(data, -1);
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
} else {
throw e;
}
}
}return $I$(4).ensureSignedBytes$BA(b);
}, 1);

Clazz_newMeth(C$, 'haveCachedResource$S$Z',  function (resourceName, isJavaPath) {
var path=C$.J2S.getResourcePath(resourceName, isJavaPath);
return (path != null  && C$.getCachedFileData$S(path) != null  );
}, 1);

Clazz_newMeth(C$, 'getJavaResource$S$Z$Z$Z',  function (resourceName, isJavaPath, doCache, doProcess) {
System.out.println$S("JSUtil getting Java resource " + resourceName);
var path=C$.J2S.getResourcePath(resourceName, isJavaPath);
if (path == null ) return null;
var data=C$.getCachedFileData$S(path);
if (data === Boolean.FALSE ) return null;
if (data == null ) {
data=C$.J2S.getFileData(path, null, false, false);
if (data == null ) {
if (C$.useCache && doCache ) {
C$.removeCachedFileData$S(path);
}} else if (C$.useCache && doCache ) {
C$.cacheFileData$S$O(path, data);
}}var sdata=C$.ensureString$O(data);
var ok=(sdata != null  && sdata.indexOf$S("[Exception") != 0 );
System.out.println$S("Processing " + path + " [" + (ok ? "" + sdata.length$() : sdata) + "]" );
return (!ok ? null : !doProcess ? sdata : path.endsWith$S(".css") ? C$.processCSS$S$S(sdata, path) : path.endsWith$S(".js") ? C$.processJS$S$S(sdata, resourceName) : sdata);
}, 1);

Clazz_newMeth(C$, 'getCachedResourceAsStream$S',  function (name) {
System.out.println$S("JSUtil getting Java resource " + name);
var path=C$.J2S.getResourcePath(name, false);
if (path == null ) return null;
var stream;
var data=C$.getCachedFileData$S(path);
if (Clazz_instanceOf(data, Clazz_array(Byte.TYPE, -1))) {
return Clazz_new_([Clazz_new_($I$(6,1).c$$BA,[data])],$I$(5,1).c$$java_io_InputStream);
}if (Clazz_instanceOf(data, "java.lang.Boolean")) {
return null;
}stream=C$.getResourceAsStream$S(name);
data=stream && stream.$in.buf ||null;
if (stream != null  && C$.useCache ) C$.cacheFileData$S$O(path, data);
return stream;
}, 1);

Clazz_newMeth(C$, 'cacheFileData$S$O',  function (path, data) {
path=C$.fixCachePath$S(path);
if (data == null ) {
System.out.println$S("JSUtil releasing cached bytes for " + path);
C$.getFileCache$().remove$O(path);
} else {
var count="?";
if (Clazz_instanceOf(data, Clazz_array(Byte.TYPE, -1))) count="" + (data).length;
 else if (Clazz_instanceOf(data, "java.lang.String")) count="" + (data).length$();
if (!C$.getFileCache$().containsKey$O(path)) System.out.println$S("JSUtil caching " + count + " bytes for " + path );
C$.getFileCache$().put$O$O(path, data);
}}, 1);

Clazz_newMeth(C$, 'loadJavaResourcesFromZip$ClassLoader$S$java_util_Map',  function (cl, zipFileName, mapByteData) {
if (mapByteData == null ) mapByteData=C$.getFileCache$();
var fileList="";
try {
var bis=Clazz_new_([cl.getResourceAsStream$S(zipFileName)],$I$(5,1).c$$java_io_InputStream);
var prefix=C$.J2S.getResourcePath(null, true);
fileList=$I$(7).cacheZipContents$java_io_BufferedInputStream$S$java_util_Map$Z(bis, prefix, mapByteData, false);
} catch (e) {
System.out.println$S("JSUtil could not cache files from " + zipFileName);
return;
}
if (C$.debugging) System.out.println$S("JSUtil loaded resources from " + zipFileName + ":\n" + fileList );
}, 1);

Clazz_newMeth(C$, 'getZipTools$',  function () {
return (C$.zipTools == null  ? (C$.zipTools=$I$(8).getInstance$S$Z("javajs.util.ZipTools", true)) : C$.zipTools);
}, 1);

Clazz_newMeth(C$, 'loadStaticResource$S',  function (file) {
var s="alert('" + file + "' was not found)" ;
if (!C$.J2S.isResourceLoaded(file, false)) {
s=C$.getJavaResource$S$Z$Z$Z(file, true, false, true);
C$.J2S.isResourceLoaded(file, true);
}return s;
}, 1);

Clazz_newMeth(C$, 'isClassLoaded$S',  function (className) {
return (Clazz._isClassDefined(className) ||false);
}, 1);

Clazz_newMeth(C$, 'processCSS$S$S',  function (css, path) {
if (path != null  && css.indexOf$S("images/") >= 0 ) {
path=path.substring$I$I(0, path.lastIndexOf$S("/") + 1) + "images/";
css=css.replaceAll$S$S("images/", path);
}C$.jQuery.$("head").append(C$.jQuery.$("<style type='text/css'>" + css + "</style>" ));
return css;
}, 1);

Clazz_newMeth(C$, 'processJS$S$S',  function (js, resourceName) {
try {
{
if (js.indexOf(";//# sourceURL=") < 0) js += ";//# sourceURL=" + J2S.thisApplet._j2sPath + "/" + resourceName;
eval(js);
}
} catch (e) {
C$.alert$O("error processing " + js);
return null;
}
return js;
}, 1);

Clazz_newMeth(C$, 'getJQuery$',  function () {
if (C$.jQuery != null ) return C$.jQuery;
{
if (!window.jQuery) alert( "jQuery is required for SwingJS, but window.jQuery is not defined." ); jQuery.$ || (jQuery.$ = jQuery); return(jQuery);
}
}, 1);

Clazz_newMeth(C$, 'parseJSONRaw$S',  function (json) {
return C$.getJQuery$().parseJSON(json);
}, 1);

Clazz_newMeth(C$, 'getStackTrace$I',  function (n) {
return Clazz._getStackTrace(n) ||null;
}, 1);

Clazz_newMeth(C$, 'getStackTrace$',  function () {
{
return Clazz._getStackTrace();
}
}, 1);

Clazz_newMeth(C$, 'notImplemented$S',  function (msg) {
if (C$.mapNotImpl == null ) C$.mapNotImpl=Clazz_new_($I$(9,1));
var s=C$.J2S.getCaller();

var cl = s.claxxOwner || s.exClazz;
s = (cl ? cl.__CLASS_NAME__ + "." : "") + s.exName;
if (C$.mapNotImpl.containsKey$O(s + msg)) return;
C$.mapNotImpl.put$O$O(s + msg, Boolean.TRUE);
System.out.println$S(s + " has not been implemented in SwingJS. " + (msg === ""  ? "" : (msg == null  ? "" : msg) + C$.getStackTrace$I(-5)) );
}, 1);

Clazz_newMeth(C$, 'log$S',  function (msg) {
{
System.out.println(msg);
console.log(msg);
}
}, 1);

Clazz_newMeth(C$, 'getInstance$S',  function (className) {
return $I$(8).getInstance$S$Z(className, false);
}, 1);

Clazz_newMeth(C$, 'readyCallback$S$S$java_awt_JSComponent$swingjs_JSAppletViewer',  function (aname, fname, applet, appletPanel) {
try {
C$.J2S.readyCallback(aname, fname, true, applet, appletPanel);
} catch (e) {
System.out.println$S("JSUtil Error running readyCallback method for " + fname + " -- check your page JavaScript" );
}
}, 1);

Clazz_newMeth(C$, 'getSignedStreamBytes$java_io_BufferedInputStream',  function (bis) {
try {
return $I$(4,"ensureSignedBytes$BA",[$I$(3).getStreamAsBytes$java_io_BufferedInputStream$javajs_util_OC(bis, null)]);
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
return null;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'saveFile$S$O$S$S',  function (fileName, data, mimeType, encoding) {
C$.J2S.saveFile(fileName, data, mimeType, encoding);
}, 1);

Clazz_newMeth(C$, 'getResourceAsStream$S',  function (name) {
return $I$(10).getDefaultToolkit$().getClass$().getClassLoader$().getResourceAsStream$S(name);
}, 1);

Clazz_newMeth(C$, 'getResource$S',  function (name) {
return $I$(10).getDefaultToolkit$().getClass$().getClassLoader$().getResource$S(name);
}, 1);

Clazz_newMeth(C$, 'getDefaultLocale$S',  function (language) {
var region;
var country;
var variant;
if (language == null ) language=C$.J2S.getDefaultLanguage(true);
language=language.replaceAll$S$S("-", "_");
if (language == null  || language.length$() == 0  || language.equalsIgnoreCase$S("en") ) language="en_US";
var i=language.indexOf$I("_");
if (i > 0) {
region=language.substring$I(i + 1);
language=language.substring$I$I(0, i);
} else {
region="";
}region=region.toUpperCase$();
i=region.indexOf$I("_");
if (i > 0) {
country=region.substring$I$I(0, i);
variant=region.substring$I(i + 1);
} else {
country=region;
variant="";
}return Clazz_new_($I$(11,1).c$$S$S$S,[language, country, variant]);
}, 1);

Clazz_newMeth(C$, 'getURLInputStream$java_net_URL$Z',  function (url, andDelete) {
try {
var bis=$I$(12).getAttachedStreamData$java_net_URL$Z(url, andDelete);
return (bis == null  ? url.openStream$() : bis);
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
} else {
throw e;
}
}
return null;
}, 1);

Clazz_newMeth(C$, 'displayURL$S$S',  function (url, target) {
C$.showWebPage$O$O(url, target);
});

Clazz_newMeth(C$, 'showWebPage$O$O',  function (url, target) {
var surl=(Clazz_instanceOf(url, "java.lang.String") ? url : url.toString());
{
if (target) window.open(surl, target); else window.open(url.toString());
}
}, 1);

Clazz_newMeth(C$, 'warn$S',  function (msg) {
C$.alert$O(msg);
}, 1);

Clazz_newMeth(C$, 'alert$O',  function (object) {
{
console.log("[JSUtil] " + object);
alert(object);
}
}, 1);

Clazz_newMeth(C$, 'confirm$S',  function (msg) {
{
return confirm(msg);
}
}, 1);

Clazz_newMeth(C$, 'prompt$S$S',  function (msg, defaultRet) {
{
return prompt(msg, defaultRet);
}
}, 1);

Clazz_newMeth(C$, 'setAjax$java_net_URL',  function (url) {
$I$(13).setAjax$java_net_URL(url);
}, 1);

Clazz_newMeth(C$, 'setAjax$OA',  function (params) {
return params.length == 1 ? $I$(13).setAjax$java_net_URL(params[0]) : $I$(13).setAjax$OA(params);
}, 1);

Clazz_newMeth(C$, 'parseJSON$O',  function (o) {
return $I$(13).parse$O(o);
}, 1);

Clazz_newMeth(C$, 'getJSONReader$O',  function (is) {
return $I$(13).getJSONReader$java_io_InputStream(is);
}, 1);

Clazz_newMeth(C$, 'getJ2SAlias$O$S',  function (c, name) {
return (c && c[name] ||null);
}, 1);

Clazz_newMeth(C$, 'isForClass$O$Class',  function (f, cl) {
return cl != null  && (!f || f.exClazz == (cl.$clazz$ || cl) ||false) ;
}, 1);

Clazz_newMeth(C$, 'isOverridden$O$S$Class',  function (c, name, cl) {
return cl == null  || c != null  && !C$.isForClass$O$Class(C$.getJ2SAlias$O$S(c, name), cl)  ;
}, 1);

Clazz_newMeth(C$, 'getColorFromName$S',  function (c) {
var rgb=null;

if (C$.ctxTemp == null) { var d = document.createElement("canvas");
d.height = d.width = 1;
C$.ctxTemp = d.getContext("2d");
} C$.ctxTemp.fillStyle = c;
C$.ctxTemp.fillRect(0, 0, 1, 1);
rgb = C$.ctxTemp.getImageData(0, 0, 1, 1).data;
return Clazz_new_($I$(14,1).c$$I$I$I,[rgb[0], rgb[1], rgb[2]]);
}, 1);

Clazz_newMeth(C$, 'getBytes$O',  function (f) {
return (Clazz_instanceOf(f, "java.net.URL") ? (f)._streamData : (f).秘bytes);
}, 1);

Clazz_newMeth(C$, 'getURLBytes$java_net_URL',  function (url) {
return url._streamData;
});

Clazz_newMeth(C$, 'getBytes$java_io_File',  function (f) {
return f.秘bytes;
});

Clazz_newMeth(C$, 'getAppletForComponent$java_awt_Component',  function (c) {
return C$.getHTML5Applet$java_awt_Component(c);
});

Clazz_newMeth(C$, 'getApplet$',  function () {
return C$.getHTML5Applet$java_awt_Component(null);
}, 1);

Clazz_newMeth(C$, 'getJSClassName$O',  function (o) {
return o && o.__CLASS_NAME__ ||"";
}, 1);

Clazz_newMeth(C$, 'getJSID$O',  function (o) {
{
var t = typeof o;
return (t == "string" ? o : (o.__CLASS_NAME__ == "java.lang.Class" ? o.getName$() : o.__CLASS_NAME__ || t)+ "_" + (o.__JSID__ || (o.hashCode$ ? o.hashCode$() : o.toString())));
}
}, 1);

Clazz_newMeth(C$, 'getHTML5Applet$java_awt_Component',  function (c) {
var g=(c == null  ? $I$(15).currentThread$().getThreadGroup$() : c.getAppContext$().getThreadGroup$());
return (g).getHtmlApplet$();
}, 1);

Clazz_newMeth(C$, 'getJSContext$O',  function (key) {
var map=$I$(16).getAppContext$().get$O(key);
if (map == null ) $I$(16).getAppContext$().put$O$O(key, map=Clazz_new_($I$(17,1)));
return map;
});

Clazz_newMeth(C$, 'addBinaryFileType$S',  function (ext) {
C$.J2S.addBinaryFileType(ext);
});

Clazz_newMeth(C$, 'readInfoProperties$S$java_util_Properties',  function (prefix, p) {
var info=$I$(18,"getAttr",[C$.getApplet$(), "__Info"]);
if (info == null ) return;
var key="";
var value="";

for (key in info) { if (prefix == null || key.indexOf(prefix) == 0) { value = "" + info[key];
System.out.println$S("Platform reading Info." + key + " = " + value );
p.put$O$O(key, value);

} }
});

Clazz_newMeth(C$, 'loadResourceIfClassUnknown$S$S',  function (resource, className) {
if (!C$.isClassLoaded$S(className)) C$.loadStaticResource$S(resource);
});

Clazz_newMeth(C$, 'setAppletAttribute$S$O',  function (key, val) {
var applet=C$.getApplet$();

applet[key] = val;
});

Clazz_newMeth(C$, 'getAppletAttribute$S',  function (key) {
var applet=C$.getApplet$();
{
return applet[key];
}
});

Clazz_newMeth(C$, 'getEmbeddedAttribute$java_awt_Component$S',  function (frame, type) {
var ui=(frame).getUI$();
return (Clazz_instanceOf(ui, "swingjs.plaf.JSFrameUI") ? (ui).getEmbedded$S(type) : null);
});

Clazz_newMeth(C$, 'streamToFile$java_io_InputStream$java_io_File',  function (is, outFile) {
try {
return C$.setFileBytesStatic$java_io_File$O(outFile, is.readAllBytes$());
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
return false;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'setAppClass$O',  function (app) {
C$.getApplet$()._setAppClass(app);
});

Clazz_newMeth(C$, 'setURLBytes$java_net_URL$O',  function (url, isOrBytes) {
return C$.setFileBytesStatic$java_io_File$O(url, isOrBytes);
});

Clazz_newMeth(C$, 'setFileBytes$java_io_File$O',  function (f, isOrBytes) {
return C$.setFileBytesStatic$java_io_File$O(f, isOrBytes);
});

Clazz_newMeth(C$, 'setFileBytesStatic$java_io_File$O',  function (f, isOrBytes) {
return C$.setFileBytesStatic$O$O(f, isOrBytes);
}, 1);

Clazz_newMeth(C$, 'setFileBytesStatic$O$O',  function (f, isOrBytes) {
var bytes;
if (Clazz_instanceOf(isOrBytes, "java.io.InputStream")) {
try {
bytes=(isOrBytes).readAllBytes$();
} catch (e) {
if (Clazz_exceptionOf(e,"java.io.IOException")){
bytes=null;
} else {
throw e;
}
}
} else if (Clazz_instanceOf(isOrBytes, Clazz_array(Byte.TYPE, -1))) {
bytes=isOrBytes;
} else {
bytes=null;
}if (Clazz_instanceOf(f, "java.net.URL")) {
(f)._streamData=bytes;
} else {
var outFile=f;
outFile.秘bytes=bytes;
if (outFile.秘isTempFile) {
C$.cacheFileData$S$O(Clazz_instanceOf(outFile, "java.io.File") ? outFile.getAbsolutePath$() : outFile.toString(), bytes);
}}return (bytes != null );
}, 1);

Clazz_newMeth(C$, 'addDirectDatabaseCall$S',  function (domain) {
System.out.println$S("JSUtil adding known access-control-allow-origin * for domain " + domain);
C$.J2S.addDirectDatabaseCall(domain);
});

Clazz_newMeth(C$, 'cachePathData$S$O',  function (path, data) {
C$.cacheFileData$S$O(path, data);
});

Clazz_newMeth(C$, 'getFile$S$Z',  function (path, asString) {
return (asString ? C$.getFileAsString$S(path) : C$.getFileAsBytes$O(path));
});

Clazz_newMeth(C$, 'getAppletInfo$S',  function (infoKey) {
var applet=C$.getApplet$();
var info=this.getAppletAttribute$S("__Info");
if (infoKey != null ) {

info = info[infoKey];
if (info == null) info = null;
}return info;
});

Clazz_newMeth(C$, 'getAppletInfoAsMap$',  function () {
var applet=C$.getApplet$();
var app=this.getAppletAttribute$S("_appletPanel");
return app.params;
});

Clazz_newMeth(C$, 'setAppletInfo$S$O',  function (infoKey, val) {
var applet=C$.getApplet$();

applet.__Info[infoKey] = val;
});

Clazz_newMeth(C$, 'getDocumentBase$',  function () {
var ap=this.getAppletAttribute$S("_appletPanel");
try {
return (ap == null  ? Clazz_new_($I$(2,1).c$$S,["file://./"]) : Clazz_new_($I$(2,1).c$$S,[ap.appletDocumentBase]));
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'getAppletCodePath$',  function () {
try {
var ap=$I$(18,"getAttr",[C$.getApplet$(), "_appletPanel"]);
return Clazz_new_($I$(2,1).c$$S,[ap.appletCodeBase]).toString();
} catch (t) {
return null;
}
}, 1);

Clazz_newMeth(C$, 'getAppletDocumentPath$',  function () {
try {
var ap=$I$(18,"getAttr",[C$.getApplet$(), "_appletPanel"]);
if (ap == null ) return null;
var path=ap.appletDocumentBase;
return Clazz_new_([Clazz_new_($I$(1,1).c$$S,[path]).getParent$().substring$I(2)],$I$(2,1).c$$S).toString();
} catch (t) {
return null;
}
}, 1);

Clazz_newMeth(C$, 'getCodeBase$',  function () {
var ap=this.getAppletAttribute$S("_appletPanel");
if (ap == null ) return null;
try {
return Clazz_new_($I$(2,1).c$$S,[ap.appletCodeBase]);
} catch (e) {
if (Clazz_exceptionOf(e,"java.net.MalformedURLException")){
return null;
} else {
throw e;
}
}
});

Clazz_newMeth(C$, 'setJavaScriptMapObjectEnabled$Z',  function (enabled) {

Clazz_loadClass("java.util.HashMap").USE_SIMPLE = enabled;
});

Clazz_newMeth(C$, 'setClipboardContents$S',  function (data) {
try {

navigator.clipboard.writeText(data);
} catch (t) {
C$.alert$O(data);
}
}, 1);

Clazz_newMeth(C$, 'getClipboardText$java_util_function_Consumer',  function (whenDone) {
C$.getClipboardContentsStatic$java_util_function_Consumer(whenDone);
});

Clazz_newMeth(C$, 'getClipboardContentsStatic$java_util_function_Consumer',  function (whenDone) {
var s=null;
try {
{
navigator.clipboard.readText().then(function(text) {whenDone.accept$O(text)});
return null;
}
} catch (t) {
}
if (whenDone != null ) whenDone.accept$O(s);
return s;
}, 1);

Clazz_newMeth(C$, 'getCachedBytes$S',  function (path) {
return C$.getCachedFileData$S$Z(path, true);
});

Clazz_newMeth(C$, 'addJSCachedBytes$O',  function (URLorURIorFile) {
var bytes=this.getCachedBytes$S(URLorURIorFile.toString());
if (Clazz_instanceOf(URLorURIorFile, "java.net.URL")) {
(URLorURIorFile)._streamData=bytes;
} else {
(URLorURIorFile).秘bytes=bytes;
}return bytes;
});

Clazz_newMeth(C$, 'getWebPathFor$S',  function (path) {
return path.startsWith$S("http") ? path : C$.J2S.getResourcePath(path, true);
}, 1);

Clazz_newMeth(C$, 'seekZipEntry$java_util_zip_ZipInputStream$java_util_zip_ZipEntry',  function (zis, ze) {
return zis.setEntry$java_util_zip_ZipEntry(ze);
});

Clazz_newMeth(C$, 'getZipBytes$java_util_zip_ZipEntry',  function (ze) {
return ze.getBytes$();
});

Clazz_newMeth(C$, 'readAllBytes$java_io_InputStream',  function (is) {
return is.readAllBytes$();
});

Clazz_newMeth(C$, 'getURLBytesAsync$java_net_URL$java_util_function_Function',  function (url, whenDone) {
url.getBytesAsync$java_util_function_Function(whenDone);
});

Clazz_newMeth(C$, 'transferTo$java_io_InputStream$java_io_OutputStream',  function (is, out) {
return is.transferTo$java_io_OutputStream(out);
});

Clazz_newMeth(C$, 'showStatus$S$Z',  function (msg, doFadeOut) {
C$.J2S.showStatus(msg, doFadeOut);
});

Clazz_newMeth(C$, 'setUIEnabled$javax_swing_JComponent$Z',  function (jc, enabled) {
(jc.getUI$()).setUIDisabled$Z(!enabled);
});

Clazz_newMeth(C$, 'playAudio$BA$O',  function (buffer, format) {
$I$(19).playAudio$BA$javax_sound_sampled_AudioFormat(buffer, format);
});

Clazz_newMeth(C$, 'importModule$S$java_util_function_Function$java_util_function_Function',  function (resource, resolve, reject) {
C$.loadStaticResource$S("/_ES6/jsutil.js");
if (resource.startsWith$S("$J2S$/")) resource=this.getJ2SPath$() + resource.substring$I(5);
System.out.println$S("JSUtil.importModule " + resource);
return J2S._ES6.jsutil.importModule(resource, resolve, reject) ||null;
});

Clazz_newMeth(C$, 'importModuleData$S$java_util_function_Function$java_util_function_Function',  function (resource, resolve, reject) {
C$.loadStaticResource$S("/_ES6/jsutil.js");
if (resource.startsWith$S("$J2S$/")) resource=this.getJ2SPath$() + resource.substring$I(5);
System.out.println$S("JSUtil.importModule " + resource);
return J2S._ES6.jsutil.importModule(resource, resolve, reject,1) ||null;
});

Clazz_newMeth(C$, 'setPasteListener$java_awt_Component$javax_swing_TransferHandler',  function (c, handler) {
var ui=(c).秘getUI$();
if (handler == null ) {
ui.setPasteHandler$swingjs_api_js_JSFunction(null);
return;
}var co=((P$.JSUtil$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSUtil$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.util.function.Consumer', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'accept$O',  function (o) {
try {
this.$finals$.handler.importData$javax_swing_JComponent$java_awt_datatransfer_Transferable(this.$finals$.c, Clazz_new_($I$(20,1)).set$O(o));
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
return;
} else {
throw e;
}
}
});
})()
), Clazz_new_(P$.JSUtil$1.$init$,[this, {handler:handler,c:c}]));
var f=null;
ui.setPasteHandler$swingjs_api_js_JSFunction(f);
});

Clazz_newMeth(C$, 'getJ2SPath$',  function () {
return this.getAppletAttribute$S("_j2sFullPath");
});

Clazz_newMeth(C$, 'loadScriptAsync$S$Runnable',  function (url, success) {
var u;
try {
u=Clazz_new_($I$(2,1).c$$S,[url]);
var f=function(){success.run$()} ||null;
C$.setAjax$OA(Clazz_array(java.lang.Object, -1, ["url", u, "url", url, "dataType", "script", "success", f]));
u.getContent$();
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
e.printStackTrace$();
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'getMediaInfoAsync$BA$S$S$java_util_function_Consumer$java_util_function_Consumer',  function (data, trackType, path, success, onError) {
$I$(21).getMediaInfoAsync$BA$S$S$java_util_function_Consumer$java_util_function_Consumer(data, trackType, path, success, onError);
});

C$.$static$=function(){C$.$static$=0;
{
var j2sdebug=false;
var j2sself=null;
{
j2sself = self.J2S;
j2sdebug = J2S._checkLoad || J2S._debugCode
}
C$.debugging=j2sdebug;
C$.J2S=j2sself;
System.out.println$S("swingjs.JSUtil initialized;debug=" + j2sdebug);
};
C$.useCache=true;
C$.jQuery=C$.getJQuery$();
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:48 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.api"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "Interface");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['S',['instances']]]

Clazz_newMeth(C$, 'getInstanceWithParams$S$ClassA$OA',  function (name, classes, params) {
try {
var cl=Clazz_forName(name);
return cl.getConstructor$ClassA(classes).newInstance$OA(params);
} catch (e) {
if (Clazz_exceptionOf(e,"Exception")){
return null;
} else {
throw e;
}
}
}, 1);

Clazz_newMeth(C$, 'getInstance$S$Z',  function (name, isQuiet) {
var x=null;
{
Clazz._isQuietLoad = isQuiet;
}
try {
if (!isQuiet && C$.instances.indexOf$S(name + ";") <= 0 ) {
System.out.println$S("swingjs.api.Interface creating instance of " + name);
C$.instances+=name + ";";
}var y=Clazz_forName(name);
if (y != null ) x=y.newInstance$();
} catch (e) {
System.out.println$S("Swingjs.api.Interface Error creating instance for " + name + ": \n" + e );
{
if (e.stack)System.out.println(e.stack);
}
} finally {
{
Clazz._isQuietLoad = false;
}
}
return x;
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.instances="";
};

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:25 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.api"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "JSUtilI");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:26 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[[0,'java.awt.Dimension']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "DOMNode", function(){

eval("Promise.prototype.$then = function(resolve,reject){return this.then(function(value) {return resolve ? resolve.apply$O(value) : value},function(reason){return reject ? reject.apply$O(reason) : reason})};");
eval("Promise.prototype.$finally = function(r){this.finally(function(){r.run$()})};");
eval("Promise.prototype.$catch = function(err){this.catch(function(){err.accept$S('' + err)})};");
});
C$.$classes$=[['Promise',9]];

C$.$fields$=[[]
,['O',['jQuery','swingjs.api.js.JQuery']]]

Clazz_newMeth(C$, 'createElement',  function (key, id) {
var node=null;

node = document.createElement(key);
id && (node.id = id);
return node;
}, 1);

Clazz_newMeth(C$, 'getElement',  function (id) {
return (document.getElementById(id) ||null);
}, 1);

Clazz_newMeth(C$, 'createTextNode',  function (text) {
return (document.createTextNode(text) ||null);
}, 1);

Clazz_newMeth(C$, 'getParent',  function (node) {
return (node.parentNode ||null);
}, 1);

Clazz_newMeth(C$, 'getPreviousSibling',  function (node) {
return (node.previousSibling ||null);
}, 1);

Clazz_newMeth(C$, 'firstChild',  function (node) {
return (node.firstChild ||null);
}, 1);

Clazz_newMeth(C$, 'lastChild',  function (node) {
return (node.lastChild ||null);
}, 1);

Clazz_newMeth(C$, 'setZ',  function (node, z) {
return C$.setStyle(node, "z-index", "" + z);
}, 1);

Clazz_newMeth(C$, 'getAttr',  function (node, attr) {
{
if (!node) return null;
var a = node[attr];
return (typeof a == "undefined" ? null : a);
}
}, 1);

Clazz_newMeth(C$, 'getAttrInt',  function (node, attr) {
return (node && node[attr] ||0);
}, 1);

Clazz_newMeth(C$, 'getStyle',  function (node, style) {
return (node && node.style[style] ||null);
}, 1);

Clazz_newMeth(C$, 'getCSSRectangle',  function (node, r) {

r.x = parseInt(node.style.left.split("p")[0]);
r.y = parseInt(node.style.top.split("p")[0]);
r.width = parseInt(node.style.width.split("p")[0]);
r.height = parseInt(node.style.height.split("p")[0]);
}, 1);

Clazz_newMeth(C$, 'setAttr',  function (node, attr, val) {

attr && (node[attr] = (val == "秘TRUE" ? true : val == "秘FALSE" ? false : val));
return node;
}, 1);

Clazz_newMeth(C$, 'setAttrInt',  function (node, attr, val) {

node[attr] = val;
}, 1);

Clazz_newMeth(C$, 'setAttrs',  function (node, attr) {

for (var i = 0; i < attr.length;) { C$.setAttr(node, attr[i++],attr[i++]);
}
return node;
}, 1);

Clazz_newMeth(C$, 'setStyle',  function (node, attr, val) {

node && (node.style[attr] = val);
return node;
}, 1);

Clazz_newMeth(C$, 'setStyles',  function (node, av) {

if (node)for (var i = 0, n = av.length; i < n;) { var k = av[i++], v = av[i++];
node.style[k] != v && (node.style[k] = v);
}
return node;
}, 1);

Clazz_newMeth(C$, 'setSize',  function (node, width, height) {
return C$.setStyles(node, ["width", width + "px", "height", height + "px"]);
}, 1);

Clazz_newMeth(C$, 'setPositionAbsolute',  function (node) {
return C$.setStyle(node, "position", "absolute");
}, 1);

Clazz_newMeth(C$, 'setVisible',  function (node, visible) {
C$.setStyle(node, "display", visible ? "block" : "none");
}, 1);

Clazz_newMeth(C$, 'setTopLeftAbsolute',  function (node, top, left) {
return C$.setStyles(node, ["top", top + "px", "left", left + "px", "position", "absolute"]);
}, 1);

Clazz_newMeth(C$, 'addHorizontalGap',  function (domNode, gap) {
var label=C$.setStyles(C$.createElement("label", null), ["letter-spacing", gap + "px", "font-size", "0pt"]);
label.appendChild(C$.createTextNode("."));
domNode.appendChild(label);
}, 1);

Clazz_newMeth(C$, 'appendChildSafely',  function (parent, node) {

if (!parent || node.parentElement == parent) return;
parent.appendChild(node);
}, 1);

Clazz_newMeth(C$, 'getHeight',  function (node) {
return C$.jQuery.$(node).height();
}, 1);

Clazz_newMeth(C$, 'getWidth',  function (node) {
return C$.jQuery.$(node).width();
}, 1);

Clazz_newMeth(C$, 'dispose',  function (node) {
if (node != null ) C$.jQuery.$(node).remove();
}, 1);

Clazz_newMeth(C$, 'remove',  function (node) {
var p=C$.getParent(node);
if (p != null ) p.removeChild(node);
}, 1);

Clazz_newMeth(C$, 'detachAll',  function (node) {

if(node) while(node.lastChild) node.removeChild(node.lastChild);
}, 1);

Clazz_newMeth(C$, 'transferTo',  function (node, container) {
if (node == null ) return null;
var p=C$.getParent(node);
try {
if (p != null ) C$.jQuery.$(node).detach();
} catch (e) {
}
if (container == null ) return p;
C$.jQuery.$(container).append(node);
return container;
}, 1);

Clazz_newMeth(C$, 'getEmbedded',  function (name, type) {
var node=C$.getElement(name + "-div");
if (node == null ) return null;
switch (type) {
case "node":
return node;
case "dim":
return Clazz_new_([C$.getWidth(node), C$.getHeight(node)],$I$(1,1).c$$I$I);
default:
return C$.getAttr(node, type);
}
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.jQuery=jQuery.$ || (jQuery.$ = jQuery) ||null;
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.DOMNode, "Promise", function(){
});
})()
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:26 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[[0,'swingjs.api.js.DOMNode']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*i*/var C$=Clazz_newInterface(P$, "HTML5Canvas", null, null, 'swingjs.api.js.DOMNode');

C$.$clinit$=2;

Clazz_newMeth(C$, 'getDataBufferBytes',  function (canvas, sourceNode, w, h) {
if (sourceNode != null ) {
$I$(1).setAttrInt(canvas, "width", w);
$I$(1).setAttrInt(canvas, "height", h);
}var ctx=canvas.getContext("2d");
if (sourceNode != null ) {
ctx.drawImage(sourceNode, 0, 0, w, h);
}return ctx.getImageData(0, 0, w, h).data;
}, 1);

Clazz_newMeth(C$, 'setImageNode',  function (sourceNode, image) {
{
image._setImageNode$O$Z(sourceNode, false);
}
}, 1);

Clazz_newMeth(C$, 'createCanvas',  function (width, height, id) {
var canvas=$I$(1,"createElement",["canvas", (id == null  ? "img" + new Double(Math.random()).toString() : id + "")]);
$I$(1).setStyles(canvas, ["width", width + "px", "height", height + "px"]);

canvas.width = width;
canvas.height = height;
return canvas;
}, 1);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:26 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "HTML5CanvasContext2D", function(){
Clazz_newInstance(this, arguments,0,C$);
});
C$.$classes$=[['ImageData',1]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['D',['lineWidth'],'F',['globalAlpha'],'S',['font','fillStyle','strokeStyle'],'O',['imageData','swingjs.api.js.HTML5CanvasContext2D.ImageData','_aSaved','Object[][]']]]

Clazz_newMeth(C$, 'push',  function (ctx, map) {
{
(ctx._aSaved || (ctx._aSaved = [])).push(map);
return ctx._aSaved.length;
}
}, 1);

Clazz_newMeth(C$, 'pop',  function (ctx) {
{
return (ctx._aSaved && ctx._aSaved.length > 0 ? ctx._aSaved.pop() : null);
}
}, 1);

Clazz_newMeth(C$, 'getSavedLevel',  function (ctx) {
{
return (ctx._aSaved ? ctx._aSaved.length : 0);
}
}, 1);

Clazz_newMeth(C$, 'getSavedStack',  function (ctx) {
{
return (ctx._aSaved || []);
}
}, 1);

Clazz_newMeth(C$, 'setMatrix',  function (ctx, transform) {
var m=ctx._m ||null;
if (transform == null ) {

ctx._m = null;
return null;
}if (m == null ) {

ctx._m = m = new Array(6);
transform.getMatrix$DA(m);
}return m;
}, 1);

Clazz_newMeth(C$, 'createLinearGradient',  function (ctx, p1, p2, css1, css2) {

var grd = ctx.createLinearGradient(p1.x, p1.y, p2.x, p2.y);
grd.addColorStop(0,css1);
grd.addColorStop(1,css2);
ctx.fillStyle = grd;
}, 1);
;
(function(){/*c*/var C$=Clazz_newClass(P$.HTML5CanvasContext2D, "ImageData", function(){
Clazz_newInstance(this, arguments[0],true,C$);
});

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['data','int[]']]]

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:26 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "JSFunction");
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:26 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.api.js"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "JSInterface");

Clazz_newMeth(C$, 'setCursor',  function (c) {

try { document.body.style.cursor = c;
} catch (e) {}
}, 1);
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-02 04:52:26 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.plaf"),p$1={},I$=[[0,'javax.swing.plaf.FontUIResource','javax.swing.UIDefaults','java.awt.Color','javax.swing.plaf.ColorUIResource','sun.swing.SwingLazyValue',['javax.swing.UIDefaults','.LazyInputMap'],'javax.swing.plaf.InsetsUIResource',['javax.swing.plaf.BorderUIResource','.EtchedBorderUIResource'],['javax.swing.DefaultListCellRenderer','.UIResource'],'javax.swing.plaf.DimensionUIResource',['javax.swing.plaf.BorderUIResource','.EmptyBorderUIResource'],'java.awt.Dimension']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "HTML5LookAndFeel", null, 'javax.swing.LookAndFeel');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]
,['O',['dialogPlain12','java.lang.Object','+dialogBold12']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
}, 1);

Clazz_newMeth(C$, 'getDefaults$',  function () {
var table=Clazz_new_($I$(2,1).c$$I$F,[610, 0.75]);
this.initClassDefaults$javax_swing_UIDefaults(table);
this.initSystemColorDefaults$javax_swing_UIDefaults(table);
this.initComponentDefaults$javax_swing_UIDefaults(table);
return table;
});

Clazz_newMeth(C$, 'initialize$',  function () {
});

Clazz_newMeth(C$, 'installAWTEventListener$',  function () {
});

Clazz_newMeth(C$, 'uninitialize$',  function () {
});

Clazz_newMeth(C$, 'initClassDefaults$javax_swing_UIDefaults',  function (table) {
var packageName="swingjs.plaf.";
var uiDefaults=Clazz_array(java.lang.Object, -1, ["ButtonUI", "swingjs.plaf.JSButtonUI", "CheckBoxUI", "swingjs.plaf.JSCheckBoxUI", "ColorChooserUI", "swingjs.plaf.JSColorChooserUI", "FormattedTextFieldUI", "swingjs.plaf.JSFormattedTextFieldUI", "MenuBarUI", "swingjs.plaf.JSMenuBarUI", "MenuUI", "swingjs.plaf.JSMenuUI", "MenuItemUI", "swingjs.plaf.JSMenuItemUI", "CheckBoxMenuItemUI", "swingjs.plaf.JSCheckBoxMenuItemUI", "RadioButtonMenuItemUI", "swingjs.plaf.JSRadioButtonMenuItemUI", "RadioButtonUI", "swingjs.plaf.JSRadioButtonUI", "ToggleButtonUI", "swingjs.plaf.JSToggleButtonUI", "PopupMenuUI", "swingjs.plaf.JSPopupMenuUI", "ProgressBarUI", "swingjs.plaf.JSProgressBarUI", "ScrollBarUI", "swingjs.plaf.JSScrollBarUI", "ScrollPaneUI", "swingjs.plaf.JSScrollPaneUI", "SplitPaneUI", "swingjs.plaf.JSSplitPaneUI", "SliderUI", "swingjs.plaf.JSSliderUI", "SeparatorUI", "swingjs.plaf.JSSeparatorUI", "SpinnerUI", "swingjs.plaf.JSSpinnerUI", "ToolBarSeparatorUI", "swingjs.plaf.JSToolBarSeparatorUI", "PopupMenuSeparatorUI", "swingjs.plaf.JSPopupMenuSeparatorUI", "TabbedPaneUI", "swingjs.plaf.JSTabbedPaneUI", "TextAreaUI", "swingjs.plaf.JSTextAreaUI", "TextFieldUI", "swingjs.plaf.JSTextFieldUI", "PasswordFieldUI", "swingjs.plaf.JSPasswordFieldUI", "TextPaneUI", "swingjs.plaf.JSTextPaneUI", "EditorPaneUI", "swingjs.plaf.JSEditorPaneUI", "TreeUI", "swingjs.plaf.JSTreeUI", "LabelUI", "swingjs.plaf.JSLabelUI", "ListUI", "swingjs.plaf.JSListUI", "ToolBarUI", "swingjs.plaf.JSToolBarUI", "ToolTipUI", "swingjs.plaf.JSToolTipUI", "ComboBoxUI", "swingjs.plaf.JSComboBoxUI", "TableUI", "swingjs.plaf.JSTableUI", "TableHeaderUI", "swingjs.plaf.JSTableHeaderUI", "InternalFrameUI", "swingjs.plaf.JSInternalFrameUI", "DesktopPaneUI", "swingjs.plaf.JSDesktopPaneUI", "DesktopIconUI", "swingjs.plaf.JSDesktopIconUI", "OptionPaneUI", "swingjs.plaf.JSOptionPaneUI", "PanelUI", "swingjs.plaf.JSPanelUI", "ViewportUI", "swingjs.plaf.JSViewportUI", "RootPaneUI", "swingjs.plaf.JSRootPaneUI"]);
table.putDefaults$OA(uiDefaults);
});

Clazz_newMeth(C$, 'initSystemColorDefaults$javax_swing_UIDefaults',  function (table) {
var defaultSystemColors=Clazz_array(String, -1, ["window", "#FFFFFF", "windowBorder", "#000000", "windowText", "#333333", "menu", "#EEEEEE", "menuText", "#333333", "text", "#C0C0C0", "textText", "#333333", "textHighlight", "#B8CFE5", "textHighlightText", "#000000", "textInactiveText", "#808080", "control2", "#E0E0E0", "control", "#EEEEEE", "controlText", "#333333", "controlHighlight", "#C0C0C0", "controlLtHighlight", "#B8CFE5", "controlShadow", "#808080", "controlDkShadow", "#000000", "scrollbar", "#E0E0E0", "info", "#FFFFE1", "infoText", "#000000"]);
this.loadSystemColors$javax_swing_UIDefaults$SA$Z(table, defaultSystemColors, this.isNativeLookAndFeel$());
});

Clazz_newMeth(C$, 'loadSystemColors$javax_swing_UIDefaults$SA$Z',  function (table, systemColors, useNative) {
for (var i=0; i < systemColors.length; i+=2) {
var color=$I$(3).black;
try {
color=$I$(3).decode$S(systemColors[i + 1]);
} catch (e) {
if (Clazz_exceptionOf(e,"NumberFormatException")){
e.printStackTrace$();
} else {
throw e;
}
}
table.put$O$O(systemColors[i], Clazz_new_($I$(4,1).c$$java_awt_Color,[color]));
}
});

Clazz_newMeth(C$, 'initResourceBundle$javax_swing_UIDefaults',  function (table) {
}, p$1);

Clazz_newMeth(C$, 'initComponentDefaults$javax_swing_UIDefaults',  function (table) {
p$1.initResourceBundle$javax_swing_UIDefaults.apply(this, [table]);
var oneThousand= new Long(1000);
var twelve= new Integer(12);
var fontPlain= new Integer(0);
var serifPlain12=Clazz_new_($I$(1,1).c$$S$I$I,["Serif", 0, 12]);
var sansSerifPlain12=Clazz_new_($I$(1,1).c$$S$I$I,["SansSerif", 0, 12]);
var monospacedPlain12=Clazz_new_($I$(1,1).c$$S$I$I,["Monospaced", 0, 12]);
var sansSerifPlain18=Clazz_new_(["javax.swing.plaf.FontUIResource", null, Clazz_array(java.lang.Object, -1, ["SansSerif", Integer.valueOf$I(0), Integer.valueOf$I(18)])],$I$(5,1).c$$S$S$OA);
var red=Clazz_new_([$I$(3).red],$I$(4,1).c$$java_awt_Color);
var black=Clazz_new_([$I$(3).black],$I$(4,1).c$$java_awt_Color);
var white=Clazz_new_([$I$(3).white],$I$(4,1).c$$java_awt_Color);
var gray=Clazz_new_([$I$(3).gray],$I$(4,1).c$$java_awt_Color);
var darkGray=Clazz_new_([$I$(3).darkGray],$I$(4,1).c$$java_awt_Color);
var scrollBarTrack=Clazz_new_($I$(4,1).c$$I$I$I,[224, 224, 224]);
var control=table.getColor$O("control");
var control2=table.getColor$O("control");
var controlDkShadow=table.getColor$O("controlDkShadow");
var controlHighlight=table.getColor$O("controlHighlight");
var controlLtHighlight=table.getColor$O("controlLtHighlight");
var controlShadow=table.getColor$O("controlShadow");
var controlText=table.getColor$O("controlText");
var menu=table.getColor$O("menu");
var menuText=table.getColor$O("menuText");
var textHighlight=table.getColor$O("textHighlight");
var textHighlightText=table.getColor$O("textHighlightText");
var disabledTextColor=table.getColor$O("textInactiveText");
var textText=table.getColor$O("textText");
var window=table.getColor$O("window");
var fieldInputMap=Clazz_new_([Clazz_array(java.lang.Object, -1, ["ctrl C", "pass-through", "ctrl V", "pass-through", "ctrl X", "pass-through", "ctrl A", "pass-through"])],$I$(6,1).c$$OA);
var zeroInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[0, 0, 0, 0]);
var twoInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[2, 2, 2, 2]);
var threeInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[3, 3, 3, 3]);
var minus2Insets=Clazz_new_($I$(7,1).c$$I$I$I$I,[0, 2, -2, 2]);
var marginBorder=Clazz_new_($I$(5,1).c$$S,["javax.swing.plaf.basic.BasicBorders$MarginBorder"]);
var etchedBorder=Clazz_new_($I$(8,1));
var loweredBevelBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.BorderUIResource", "getLoweredBevelBorderUIResource"]);
var blackLineBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.BorderUIResource", "getBlackLineBorderUIResource"]);
var buttonBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.basic.BasicBorders", "getButtonBorder"]);
var buttonToggleBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.basic.BasicBorders", "getToggleButtonBorder"]);
var radioButtonBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.basic.BasicBorders", "getRadioButtonBorder"]);
var listCellRendererActiveValue=((P$.HTML5LookAndFeel$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "HTML5LookAndFeel$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, [['javax.swing.UIDefaults','javax.swing.UIDefaults.ActiveValue']], 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'createValue$javax_swing_UIDefaults',  function (table) {
return Clazz_new_($I$(9,1));
});
})()
), Clazz_new_(P$.HTML5LookAndFeel$1.$init$,[this, null]));
var multilineInputMap=Clazz_new_([Clazz_array(java.lang.Object, -1, ["control V", "paste-from-clipboard", "control X", "cut-to-clipboard", "PASTE", "paste-from-clipboard", "CUT", "cut-to-clipboard", "shift INSERT", "paste-from-clipboard", "shift DELETE", "cut-to-clipboard", "shift LEFT", "selection-backward", "shift RIGHT", "selection-forward", "control LEFT", "caret-previous-word", "control RIGHT", "caret-next-word", "control shift LEFT", "selection-previous-word", "control shift RIGHT", "selection-next-word", "control A", "select-all", "HOME", "caret-begin-line", "END", "caret-end-line", "shift HOME", "selection-begin-line", "shift END", "selection-end-line", "control HOME", "caret-begin", "control END", "caret-end", "control shift HOME", "selection-begin", "control shift END", "selection-end", "UP", "caret-up", "DOWN", "caret-down", "BACK_SPACE", "delete-previous", "shift BACK_SPACE", "delete-previous", "ctrl H", "delete-previous", "DELETE", "delete-next", "ctrl DELETE", "delete-next-word", "ctrl BACK_SPACE", "delete-previous-word", "RIGHT", "caret-forward", "LEFT", "caret-backward", "KP_RIGHT", "caret-forward", "KP_LEFT", "caret-backward", "PAGE_UP", "page-up", "PAGE_DOWN", "page-down", "shift UP", "selection-up", "shift DOWN", "selection-down", "ENTER", "insert-break", "TAB", "insert-tab"])],$I$(6,1).c$$OA);
var optionPaneMinimumSize=Clazz_new_($I$(10,1).c$$I$I,[262, 90]);
var zero= new Integer(0);
var zeroBorder=Clazz_new_(["javax.swing.plaf.BorderUIResource$EmptyBorderUIResource", Clazz_array(java.lang.Object, -1, [zero, zero, zero, zero])],$I$(5,1).c$$S$OA);
var optionPaneBorder=Clazz_new_($I$(11,1).c$$I$I$I$I,[10, 10, 12, 10]);
var optionPaneButtonAreaBorder=Clazz_new_(["javax.swing.plaf.BorderUIResource$EmptyBorderUIResource", Clazz_array(java.lang.Object, -1, [ new Integer(6), zero, zero, zero])],$I$(5,1).c$$S$OA);
var progressBarBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.basic.BasicBorders", "getProgressBarBorder"]);
var toolBarSeparatorSize=Clazz_new_($I$(10,1).c$$I$I,[10, 10]);
var tabbedPaneTabInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[2, 4, 1, 4]);
var tabbedPaneTabPadInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[2, 2, 2, 1]);
var tabbedPaneTabAreaInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[0, 2, 0, 2]);
var tabbedPaneContentBorderInsets=Clazz_new_($I$(7,1).c$$I$I$I$I,[1, 2, 5, 3]);
var textFieldBorder=Clazz_new_($I$(5,1).c$$S$S,["javax.swing.plaf.basic.BasicBorders", "getTextFieldBorder"]);
var editorMargin=threeInsets;
var four= new Integer(4);
var defaults=Clazz_array(java.lang.Object, -1, ["*.font", C$.dialogPlain12, "*.background", control, "*.foreground", controlText, "Button.background", control2, "Button.foreground", controlText, "Button.inactiveForeground", disabledTextColor, "Button.border", buttonBorder, "Button.margin", Clazz_new_($I$(7,1).c$$I$I$I$I,[2, 14, 2, 14]), "Button.textIconGap", four, "Button.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["SPACE", "pressed", "released SPACE", "released", "ENTER", "pressed", "released ENTER", "released"])],$I$(6,1).c$$OA), "ToggleButton.background", control, "ToggleButton.foreground", controlText, "ToggleButton.highlight", controlLtHighlight, "ToggleButton.border", buttonBorder, "ToggleButton.margin", Clazz_new_($I$(7,1).c$$I$I$I$I,[2, 14, 2, 14]), "ToggleButton.textIconGap", four, "ToggleButton.textShiftOffset", zero, "ToggleButton.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["SPACE", "pressed", "released SPACE", "released"])],$I$(6,1).c$$OA), "RadioButton.background", control, "RadioButton.foreground", controlText, "RadioButton.border", buttonBorder, "RadioButton.margin", twoInsets, "RadioButton.textIconGap", four, "RadioButton.textShiftOffset", zero, "RadioButton.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["SPACE", "pressed", "released SPACE", "released", "ENTER", "pressed"])],$I$(6,1).c$$OA), "CheckBox.background", control, "CheckBox.foreground", controlText, "CheckBox.border", buttonBorder, "CheckBox.margin", twoInsets, "CheckBox.textIconGap", four, "CheckBox.textShiftOffset", zero, "CheckBox.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["SPACE", "pressed", "released SPACE", "released"])],$I$(6,1).c$$OA), "ColorChooser.background", control, "ColorChooser.foreground", controlText, "ColorChooser.swatchesSwatchSize", Clazz_new_($I$(12,1).c$$I$I,[10, 10]), "ColorChooser.swatchesRecentSwatchSize", Clazz_new_($I$(12,1).c$$I$I,[10, 10]), "ColorChooser.swatchesDefaultRecentColor", control, "ComboBox.font", sansSerifPlain12, "ComboBox.background", window, "ComboBox.foreground", textText, "ComboBox.selectionBackground", textHighlight, "ComboBox.selectionForeground", textHighlightText, "ComboBox.disabledBackground", control, "ComboBox.disabledForeground", disabledTextColor, "ComboBox.timeFactor", oneThousand, "ComboBox.isEnterSelectablePopup", Boolean.FALSE, "ComboBox.ancestorInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["ESCAPE", "hidePopup", "PAGE_UP", "pageUpPassThrough", "PAGE_DOWN", "pageDownPassThrough", "HOME", "homePassThrough", "END", "endPassThrough", "ENTER", "enterPressed"])],$I$(6,1).c$$OA), "FileChooser.readOnly", Boolean.FALSE, "InternalFrameTitlePane.iconifyButtonOpacity", Boolean.TRUE, "InternalFrameTitlePane.maximizeButtonOpacity", Boolean.TRUE, "InternalFrameTitlePane.closeButtonOpacity", Boolean.TRUE, "Desktop.minOnScreenInsets", threeInsets, "Desktop.background", table.get$O("desktop"), "Label.font", C$.dialogBold12, "Label.background", control, "Label.foreground", controlText, "Label.inactiveForeground", disabledTextColor, "Label.border", null, "List.background", window, "List.foreground", textText, "List.selectionBackground", textHighlight, "List.selectionForeground", textHighlightText, "List.cellRenderer", listCellRendererActiveValue, "List.timeFactor", oneThousand, "List.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["ctrl C", "copy", "ctrl V", "paste", "ctrl X", "cut", "COPY", "copy", "PASTE", "paste", "CUT", "cut", "control INSERT", "copy", "shift INSERT", "paste", "shift DELETE", "cut", "UP", "selectPreviousRow", "KP_UP", "selectPreviousRow", "shift UP", "selectPreviousRowExtendSelection", "shift KP_UP", "selectPreviousRowExtendSelection", "ctrl shift UP", "selectPreviousRowExtendSelection", "ctrl shift KP_UP", "selectPreviousRowExtendSelection", "ctrl UP", "selectPreviousRowChangeLead", "ctrl KP_UP", "selectPreviousRowChangeLead", "DOWN", "selectNextRow", "KP_DOWN", "selectNextRow", "shift DOWN", "selectNextRowExtendSelection", "shift KP_DOWN", "selectNextRowExtendSelection", "ctrl shift DOWN", "selectNextRowExtendSelection", "ctrl shift KP_DOWN", "selectNextRowExtendSelection", "ctrl DOWN", "selectNextRowChangeLead", "ctrl KP_DOWN", "selectNextRowChangeLead", "LEFT", "selectPreviousColumn", "KP_LEFT", "selectPreviousColumn", "shift LEFT", "selectPreviousColumnExtendSelection", "shift KP_LEFT", "selectPreviousColumnExtendSelection", "ctrl shift LEFT", "selectPreviousColumnExtendSelection", "ctrl shift KP_LEFT", "selectPreviousColumnExtendSelection", "ctrl LEFT", "selectPreviousColumnChangeLead", "ctrl KP_LEFT", "selectPreviousColumnChangeLead", "RIGHT", "selectNextColumn", "KP_RIGHT", "selectNextColumn", "shift RIGHT", "selectNextColumnExtendSelection", "shift KP_RIGHT", "selectNextColumnExtendSelection", "ctrl shift RIGHT", "selectNextColumnExtendSelection", "ctrl shift KP_RIGHT", "selectNextColumnExtendSelection", "ctrl RIGHT", "selectNextColumnChangeLead", "ctrl KP_RIGHT", "selectNextColumnChangeLead", "HOME", "selectFirstRow", "shift HOME", "selectFirstRowExtendSelection", "ctrl shift HOME", "selectFirstRowExtendSelection", "ctrl HOME", "selectFirstRowChangeLead", "END", "selectLastRow", "shift END", "selectLastRowExtendSelection", "ctrl shift END", "selectLastRowExtendSelection", "ctrl END", "selectLastRowChangeLead", "PAGE_UP", "scrollUp", "shift PAGE_UP", "scrollUpExtendSelection", "ctrl shift PAGE_UP", "scrollUpExtendSelection", "ctrl PAGE_UP", "scrollUpChangeLead", "PAGE_DOWN", "scrollDown", "shift PAGE_DOWN", "scrollDownExtendSelection", "ctrl shift PAGE_DOWN", "scrollDownExtendSelection", "ctrl PAGE_DOWN", "scrollDownChangeLead", "ctrl A", "selectAll", "ctrl SLASH", "selectAll", "ctrl BACK_SLASH", "clearSelection", "SPACE", "addToSelection", "ctrl SPACE", "toggleAndAnchor", "shift SPACE", "extendTo", "ctrl shift SPACE", "moveSelectionTo"])],$I$(6,1).c$$OA), "List.focusInputMap.RightToLeft", Clazz_new_([Clazz_array(java.lang.Object, -1, ["LEFT", "selectNextColumn", "KP_LEFT", "selectNextColumn", "shift LEFT", "selectNextColumnExtendSelection", "shift KP_LEFT", "selectNextColumnExtendSelection", "ctrl shift LEFT", "selectNextColumnExtendSelection", "ctrl shift KP_LEFT", "selectNextColumnExtendSelection", "ctrl LEFT", "selectNextColumnChangeLead", "ctrl KP_LEFT", "selectNextColumnChangeLead", "RIGHT", "selectPreviousColumn", "KP_RIGHT", "selectPreviousColumn", "shift RIGHT", "selectPreviousColumnExtendSelection", "shift KP_RIGHT", "selectPreviousColumnExtendSelection", "ctrl shift RIGHT", "selectPreviousColumnExtendSelection", "ctrl shift KP_RIGHT", "selectPreviousColumnExtendSelection", "ctrl RIGHT", "selectPreviousColumnChangeLead", "ctrl KP_RIGHT", "selectPreviousColumnChangeLead"])],$I$(6,1).c$$OA), "MenuBar.font", C$.dialogPlain12, "MenuBar.background", menu, "MenuBar.foreground", menuText, "MenuItem.font", C$.dialogPlain12, "MenuItem.background", menu, "MenuItem.foreground", menuText, "MenuItem.border", marginBorder, "MenuItem.borderPainted", Boolean.FALSE, "MenuItem.margin", twoInsets, "RadioButtonMenuItem.font", C$.dialogPlain12, "RadioButtonMenuItem.background", menu, "RadioButtonMenuItem.foreground", menuText, "RadioButtonMenuItem.border", marginBorder, "RadioButtonMenuItem.margin", twoInsets, "CheckBoxMenuItem.font", C$.dialogPlain12, "CheckBoxMenuItem.background", menu, "CheckBoxMenuItem.foreground", menuText, "CheckBoxMenuItem.border", marginBorder, "CheckBoxMenuItem.borderPainted", Boolean.FALSE, "CheckBoxMenuItem.margin", twoInsets, "Menu.background", menu, "Menu.foreground", menuText, "Menu.inactiveForeground", disabledTextColor, "Menu.border", marginBorder, "Menu.borderPainted", Boolean.FALSE, "Menu.margin", minus2Insets, "Menu.menuPopupOffsetY",  new Integer(-3), "Menu.crossMenuMnemonic", Boolean.FALSE, "PopupMenu.background", menu, "PopupMenu.foreground", menuText, "PopupMenu.selectedWindowInputMapBindings", Clazz_array(java.lang.Object, -1, ["ESCAPE", "cancel", "DOWN", "selectNext", "KP_DOWN", "selectNext", "UP", "selectPrevious", "KP_UP", "selectPrevious", "LEFT", "selectParent", "KP_LEFT", "selectParent", "RIGHT", "selectChild", "KP_RIGHT", "selectChild", "ENTER", "return", "ctrl ENTER", "return", "SPACE", "return"]), "PopupMenu.consumeEventOnClose", Boolean.FALSE, "OptionPane.yesButtonText", "Yes", "OptionPane.noButtonText", "No", "OptionPane.cancelButtonText", "Cancel", "OptionPane.okButtonText", "OK", "OptionPane.font", C$.dialogPlain12, "OptionPane.background", control, "OptionPane.foreground", controlText, "OptionPane.messageForeground", controlText, "OptionPane.border", optionPaneBorder, "OptionPane.messageAreaBorder", zeroBorder, "OptionPane.buttonAreaBorder", optionPaneButtonAreaBorder, "OptionPane.minimumSize", optionPaneMinimumSize, "Panel.font", C$.dialogPlain12, "Panel.background", control, "Panel.foreground", textText, "ProgressBar.font", C$.dialogPlain12, "ProgressBar.foreground", $I$(3).GRAY, "ProgressBar.background", control, "ProgressBar.selectionForeground", control, "ProgressBar.selectionBackground", $I$(3).GRAY, "ProgressBar.border", progressBarBorder, "ProgressBar.cellLength",  new Integer(1), "ProgressBar.cellSpacing", zero, "ProgressBar.repaintInterval",  new Integer(50), "ProgressBar.cycleTime",  new Integer(3000), "ProgressBar.horizontalSize", Clazz_new_($I$(10,1).c$$I$I,[146, 12]), "ProgressBar.verticalSize", Clazz_new_($I$(10,1).c$$I$I,[12, 146]), "ScrollBar.background", scrollBarTrack, "ScrollBar.foreground", control, "ScrollBar.width",  new Integer(16), "ScrollPane.background", control, "ScrollPane.foreground", controlText, "ScrollPane.border", textFieldBorder, "Viewport.background", control, "Viewport.foreground", textText, "Slider.font", C$.dialogPlain12, "Slider.foreground", control, "Slider.background", control, "Slider.horizontalSize", Clazz_new_($I$(12,1).c$$I$I,[200, 21]), "Slider.verticalSize", Clazz_new_($I$(12,1).c$$I$I,[21, 200]), "Slider.minimumHorizontalSize", Clazz_new_($I$(12,1).c$$I$I,[36, 21]), "Slider.minimumVerticalSize", Clazz_new_($I$(12,1).c$$I$I,[21, 36]), "Slider.focusInsets", twoInsets, "Slider.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["RIGHT", "positiveUnitIncrement", "KP_RIGHT", "positiveUnitIncrement", "DOWN", "negativeUnitIncrement", "KP_DOWN", "negativeUnitIncrement", "PAGE_DOWN", "negativeBlockIncrement", "LEFT", "negativeUnitIncrement", "KP_LEFT", "negativeUnitIncrement", "UP", "positiveUnitIncrement", "KP_UP", "positiveUnitIncrement", "PAGE_UP", "positiveBlockIncrement", "HOME", "minScroll", "END", "maxScroll"])],$I$(6,1).c$$OA), "Slider.focusInputMap.RightToLeft", Clazz_new_([Clazz_array(java.lang.Object, -1, ["RIGHT", "negativeUnitIncrement", "KP_RIGHT", "negativeUnitIncrement", "LEFT", "positiveUnitIncrement", "KP_LEFT", "positiveUnitIncrement"])],$I$(6,1).c$$OA), "Spinner.font", sansSerifPlain12, "Spinner.background", control, "Spinner.foreground", control, "Spinner.arrowButtonSize", Clazz_new_($I$(12,1).c$$I$I,[16, 5]), "SplitPane.background", control, "SplitPane.dividerSize",  new Integer(7), "SplitPaneDivider.draggingColor", darkGray, "TabbedPane.font", C$.dialogPlain12, "TabbedPane.background", control, "TabbedPane.foreground", controlText, "TabbedPane.highlight", controlLtHighlight, "TabbedPane.light", controlHighlight, "TabbedPane.shadow", controlShadow, "TabbedPane.darkShadow", controlDkShadow, "TabbedPane.selected", null, "TabbedPane.textIconGap", four, "TabbedPane.tabsOverlapBorder", Boolean.FALSE, "TabbedPane.selectionFollowsFocus", Boolean.FALSE, "TabbedPane.labelShift", Integer.valueOf$I(1), "TabbedPane.selectedLabelShift", Integer.valueOf$I(-1), "TabbedPane.tabInsets", tabbedPaneTabInsets, "TabbedPane.selectedTabPadInsets", tabbedPaneTabPadInsets, "TabbedPane.tabAreaInsets", tabbedPaneTabAreaInsets, "TabbedPane.contentBorderInsets", tabbedPaneContentBorderInsets, "TabbedPane.tabRunOverlay",  new Integer(2), "TabbedPane.focusInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["RIGHT", "navigateRight", "KP_RIGHT", "navigateRight", "LEFT", "navigateLeft", "KP_LEFT", "navigateLeft", "UP", "navigateUp", "KP_UP", "navigateUp", "DOWN", "navigateDown", "KP_DOWN", "navigateDown", "ctrl DOWN", "requestFocusForVisibleComponent", "ctrl KP_DOWN", "requestFocusForVisibleComponent"])],$I$(6,1).c$$OA), "Table.font", C$.dialogPlain12, "Table.foreground", controlText, "Table.background", white, "Table.selectionForeground", textHighlightText, "Table.selectionBackground", textHighlight, "Table.dropLineColor", controlShadow, "Table.dropLineShortColor", black, "Table.gridColor", controlShadow, "Table.focusCellBackground", window, "Table.focusCellForeground", controlText, "Table.scrollPaneBorder", loweredBevelBorder, "Table.ancestorInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["RIGHT", "selectNextColumn", "KP_RIGHT", "selectNextColumn", "shift RIGHT", "selectNextColumnExtendSelection", "shift KP_RIGHT", "selectNextColumnExtendSelection", "LEFT", "selectPreviousColumn", "KP_LEFT", "selectPreviousColumn", "shift LEFT", "selectPreviousColumnExtendSelection", "shift KP_LEFT", "selectPreviousColumnExtendSelection", "DOWN", "selectNextRow", "KP_DOWN", "selectNextRow", "shift DOWN", "selectNextRowExtendSelection", "shift KP_DOWN", "selectNextRowExtendSelection", "UP", "selectPreviousRow", "KP_UP", "selectPreviousRow", "shift UP", "selectPreviousRowExtendSelection", "shift KP_UP", "selectPreviousRowExtendSelection", "HOME", "selectFirstColumn", "shift HOME", "selectFirstColumnExtendSelection", "END", "selectLastColumn", "shift END", "selectLastColumnExtendSelection", "PAGE_UP", "scrollUpChangeSelection", "shift PAGE_UP", "scrollUpExtendSelection", "PAGE_DOWN", "scrollDownChangeSelection", "shift PAGE_DOWN", "scrollDownExtendSelection", "ENTER", "selectNextRowCell", "shift ENTER", "selectPreviousRowCell", "ctrl A", "selectAll", "ESCAPE", "cancel", "F2", "startEditing"])],$I$(6,1).c$$OA), "Table.sortIconColor", controlShadow, "TableHeader.font", C$.dialogPlain12, "TableHeader.foreground", controlText, "TableHeader.background", control, "TextField.font", sansSerifPlain12, "TextField.background", window, "TextField.foreground", textText, "TextField.shadow", controlShadow, "TextField.darkShadow", controlDkShadow, "TextField.light", controlHighlight, "TextField.highlight", controlLtHighlight, "TextField.inactiveForeground", disabledTextColor, "TextField.inactiveBackground", control, "TextField.caretForeground", textText, "TextField.margin", zeroInsets, "TextField.focusInputMap", fieldInputMap, "FormattedTextField.font", sansSerifPlain12, "FormattedTextField.background", window, "FormattedTextField.foreground", textText, "FormattedTextField.inactiveForeground", disabledTextColor, "FormattedTextField.inactiveBackground", control, "FormattedTextField.caretForeground", textText, "FormattedTextField.margin", zeroInsets, "FormattedTextField.focusInputMap", fieldInputMap, "PasswordField.font", monospacedPlain12, "PasswordField.background", window, "PasswordField.foreground", textText, "PasswordField.inactiveForeground", disabledTextColor, "PasswordField.inactiveBackground", control, "PasswordField.caretForeground", textText, "PasswordField.margin", zeroInsets, "PasswordField.echoChar", Character.valueOf$C('*'), "TextArea.font", sansSerifPlain12, "TextArea.background", window, "TextArea.foreground", textText, "TextArea.inactiveForeground", disabledTextColor, "TextArea.caretForeground", textText, "TextArea.margin", zeroInsets, "TextPane.font", serifPlain12, "TextPane.background", white, "TextPane.foreground", textText, "TextPane.caretForeground", textText, "TextPane.inactiveForeground", disabledTextColor, "TextPane.border", marginBorder, "TextPane.margin", editorMargin, "TextPane.focusInputMap", multilineInputMap, "EditorPane.font", serifPlain12, "EditorPane.background", white, "EditorPane.foreground", textText, "EditorPane.caretForeground", textText, "EditorPane.inactiveForeground", disabledTextColor, "EditorPane.border", marginBorder, "EditorPane.margin", editorMargin, "EditorPane.focusInputMap", multilineInputMap, "TitledBorder.titleColor", controlText, "TitledBorder.border", etchedBorder, "ToolBar.font", C$.dialogPlain12, "ToolBar.background", control, "ToolBar.foreground", controlText, "ToolBar.shadow", controlShadow, "ToolBar.darkShadow", controlDkShadow, "ToolBar.light", controlHighlight, "ToolBar.highlight", controlLtHighlight, "ToolBar.dockingBackground", control, "ToolBar.dockingForeground", red, "ToolBar.floatingBackground", control, "ToolBar.floatingForeground", darkGray, "ToolBar.border", etchedBorder, "ToolBar.separatorSize", toolBarSeparatorSize, "ToolTip.font", sansSerifPlain12, "ToolTip.background", table.get$O("info"), "ToolTip.foreground", table.get$O("infoText"), "ToolTip.border", blackLineBorder, "Tree.paintLines", Boolean.TRUE, "Tree.lineTypeDashed", Boolean.FALSE, "Tree.font", C$.dialogPlain12, "Tree.background", window, "Tree.foreground", textText, "Tree.hash", gray, "Tree.textForeground", textText, "Tree.textBackground", table.get$O("text"), "Tree.selectionForeground", textHighlightText, "Tree.selectionBackground", textHighlight, "Tree.selectionBorderColor", black, "Tree.dropLineColor", controlShadow, "Tree.editorBorder", blackLineBorder, "Tree.leftChildIndent",  new Integer(7), "Tree.rightChildIndent",  new Integer(13), "Tree.rowHeight",  new Integer(16), "Tree.scrollsOnExpand", Boolean.TRUE, "Tree.expandedIcon", null, "Tree.collapsedIcon", null, "Tree.changeSelectionWithFocus", Boolean.TRUE, "Tree.drawsFocusBorderAroundIcon", Boolean.FALSE, "Tree.timeFactor", oneThousand, "Tree.focusInputMap.RightToLeft", Clazz_new_([Clazz_array(java.lang.Object, -1, ["RIGHT", "selectParent", "KP_RIGHT", "selectParent", "LEFT", "selectChild", "KP_LEFT", "selectChild"])],$I$(6,1).c$$OA), "Tree.ancestorInputMap", Clazz_new_([Clazz_array(java.lang.Object, -1, ["ESCAPE", "cancel"])],$I$(6,1).c$$OA)]);
table.putDefaults$OA(defaults);
});

Clazz_newMeth(C$, 'getName$',  function () {
return "SwingJS";
});

Clazz_newMeth(C$, 'getID$',  function () {
return "SwingJS";
});

Clazz_newMeth(C$, 'getDescription$',  function () {
return "SwingJS L&F";
});

Clazz_newMeth(C$, 'isNativeLookAndFeel$',  function () {
return true;
});

Clazz_newMeth(C$, 'isSupportedLookAndFeel$',  function () {
return true;
});

Clazz_newMeth(C$, 'provideErrorFeedback$java_awt_Component',  function (c) {
System.out.println$S("HTML5LookAndFeel says BEEP from " + c.getClass$().getName$());
});

C$.$static$=function(){C$.$static$=0;
C$.dialogPlain12=Clazz_new_($I$(1,1).c$$S$I$I,["Dialog", 0, 12]);
C$.dialogBold12=Clazz_new_($I$(1,1).c$$S$I$I,["Dialog", 1, 12]);
};
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:53 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.plaf.JSComponentUI','javax.swing.LookAndFeel','swingjs.api.js.DOMNode']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSAppletUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.domNode == null ) {
this.containerNode=this.domNode=$I$(1,"newDOMObject$S$S$SA",["div", this.id, Clazz_array(String, -1, [])]);
this.addClass$swingjs_api_js_DOMNode$S(this.domNode, "swingjs-window");
}this.adjustCanvasForMenuBar$();
return this.updateDOMNodeCUI$();
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
$I$(2).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, null, null, "Panel.font");
});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (e) {
});

Clazz_newMeth(C$, 'adjustCanvasForMenuBar$',  function () {
var mb=(this.c).getJMenuBar$();
var h=(mb == null  || !mb.isVisible$()  ? 0 : (mb.getUI$()).height);
$I$(3,"setStyles",[this.getCanvas$(), ["top", h + "px", "position", "absolute"]]);
});

Clazz_newMeth(C$, 'getCanvas$',  function () {
var canvas=this.c.getAppContext$().getThreadGroup$().秘html5Applet._getHtml5Canvas();
this.focusNode=canvas;
return canvas;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:53 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),p$1={},I$=[[0,'swingjs.JSUtil','java.awt.Dimension','java.awt.Insets','java.awt.Color','swingjs.api.js.DOMNode','swingjs.JSToolkit','swingjs.plaf.JSPopupMenuUI','javax.swing.ToolTipManager','swingjs.JSFocusPeer','java.awt.JSComponent','java.awt.Cursor',['java.awt.Component','.BaselineResizeBehavior'],'javax.swing.UIManager','java.awt.Rectangle','swingjs.plaf.HTML5LookAndFeel','java.awt.event.KeyEvent','java.awt.Point','java.awt.Toolkit']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSComponentUI", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'javax.swing.plaf.ComponentUI', ['swingjs.plaf.JSEventHandler', 'java.beans.PropertyChangeListener', 'javax.swing.event.ChangeListener', 'java.awt.dnd.peer.DropTargetPeer']);
C$.$classes$=[['Embeddable',9]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.J2S=$I$(1).J2S;
this.isTainted=true;
this.dropTarget=this;
this.mnemonicIndex=-1;
this.currentGap=2147483647;
this.colorUNKNOWN=Clazz_new_($I$(4,1));
this.inactiveForeground=this.colorUNKNOWN;
this.inactiveBackground=this.colorUNKNOWN;
this.enabled=true;
this.allowTextAlignment=true;
this.focusRunnable=((P$.JSComponentUI$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSComponentUI$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[[]]

Clazz_newMeth(C$, 'run$',  function () {
this.b$['swingjs.plaf.JSComponentUI'].focus$.apply(this.b$['swingjs.plaf.JSComponentUI'], []);
});
})()
), Clazz_new_(P$.JSComponentUI$1.$init$,[this, null]));
this.allowPaintedBackground=true;
},1);

C$.$fields$=[['Z',['isNull','isAWT','isDummyFrame','isTainted','isPaintedOnly','inPaintPath','boundsSet','isMenuItem','isMenuSep','isMenu','isSimpleButton','isLabel','isMenuBarLabel','isContainer','isWindow','isRootPane','isPopupMenu','isContentPane','isLayeredPane','isPanel','isDesktop','isTable','needPreferred','enabled','isHTML','allowTextAlignment','j2sDoPropagate','notImplemented','keysEnabled','layingOut','isDisposed','isUIDisabled','allowPaintedBackground','imagePersists','allowDivOverflow','ignoreFocus','isSticky','isVideoIcon','isFullyCentered','alignmentDisabled','isLaidOut','modalBlocked','isTextView'],'I',['num','x','y','jsActualWidth','jsActualHeight','actionItemOffset','mnemonicIndex','currentGap','width','height','menuTimer','mnemonic','cellWidth','cellHeight','actualHeight','actualWidth'],'S',['id0','id','textAlign','currentText','classID'],'O',['J2S','swingjs.api.js.J2SInterface','c','java.awt.JSComponent','jc','javax.swing.JComponent','label','javax.swing.JLabel','targetParent','javax.swing.JComponent','menu','javax.swing.JPopupMenu','outerNode','swingjs.api.js.DOMNode','+innerNode','+domNode','+centeringNode','+imageNode','+actionNode','+buttonNode','+enableNode','enableNodes','swingjs.api.js.DOMNode[]','iconNode','swingjs.api.js.DOMNode','+textNode','+accelNode','+valueNode','+focusNode','+itemNode','+containerNode','buttonListener','swingjs.plaf.ButtonListener','menuAnchorNode','swingjs.api.js.DOMNode','preferredSize','java.awt.Dimension','dropTarget','java.lang.Object','parent','swingjs.plaf.JSComponentUI','currentIcon','javax.swing.ImageIcon','scrollPaneUI','swingjs.plaf.JSScrollPaneUI','body','swingjs.api.js.DOMNode','applet','swingjs.api.js.HTML5Applet','waitImage','swingjs.api.js.DOMNode','colorUNKNOWN','java.awt.Color','+inactiveForeground','+inactiveBackground','focusRunnable','Runnable','awttop','java.awt.Container','awtPeerBG','java.awt.Color','+awtPeerFG','cellComponent','javax.swing.JComponent','embeddingNode','swingjs.api.js.DOMNode','insets','java.awt.Insets','icon','javax.swing.Icon','viewR','java.awt.Rectangle','+iconR','+textR','preferredDim','java.awt.Dimension','myCursor','java.awt.Cursor','backgroundColor','java.awt.Color','pasteHandler','swingjs.api.js.JSFunction']]
,['Z',['debugging','isMenuOpen'],'I',['incr','frameZ'],'S',['NULL'],'O',['jquery','swingjs.api.js.JQuery','tempDiv','swingjs.api.js.DOMNode','ZERO_SIZE','java.awt.Dimension','+ANY_SIZE','re0','java.lang.Object','+reSpace','+reLT','zeroInsets','java.awt.Insets']]]

Clazz_newMeth(C$, 'setTargetParent$javax_swing_JComponent',  function (table) {
this.targetParent=table;
});

Clazz_newMeth(C$, 'getTargetParent$',  function () {
return this.targetParent;
});

Clazz_newMeth(C$, 'saveCellNodes$swingjs_api_js_DOMNode$Z',  function (td, isHeader) {
this.outerNode=null;
this.reInit$Z(true);
var nodes=Clazz_array($I$(5), -1, [this.domNode, this.innerNode, this.centeringNode, this.iconNode, this.textNode, this.accelNode, this.buttonNode, this.enableNode, (this.enableNodes == null  ? null : this.enableNodes[0]), (this.enableNodes == null  ? null : this.enableNodes[1]), (this.enableNodes == null  ? null : this.enableNodes[2]), this.focusNode, this.actionNode, this.valueNode]);
$I$(5).setAttr(td, "data-nodes", nodes);
p$1.updateTableCell$swingjs_api_js_DOMNode$Z.apply(this, [td, isHeader]);
});

Clazz_newMeth(C$, 'updateTableCell$swingjs_api_js_DOMNode$Z',  function (td, andAdd) {
var node=$I$(5).firstChild(td);
if (node !== this.domNode ) {
if (this.isLabel || this.buttonNode != null  ) {
this.$$O(td).empty();
} else {
$I$(5).detachAll(td);
this.setHTMLElement$();
}node=null;
td.appendChild(this.domNode);
node=this.domNode;
$I$(5).setAttr(td, "domNode", node);
}this.domNode=this.outerNode=null;
}, p$1);

Clazz_newMeth(C$, 'restoreCellNodes$swingjs_api_js_DOMNode',  function (td) {
var nodes=$I$(5).getAttr(td, "data-nodes");
if (nodes == null ) return;
this.domNode=nodes[0];
this.innerNode=nodes[1];
this.centeringNode=nodes[2];
this.iconNode=nodes[3];
this.textNode=nodes[4];
this.accelNode=nodes[5];
this.buttonNode=nodes[6];
this.enableNode=nodes[7];
if (nodes[8] != null ) {
this.enableNodes[0]=nodes[8];
this.enableNodes[1]=nodes[9];
this.enableNodes[2]=nodes[10];
}this.focusNode=nodes[11];
this.actionNode=nodes[12];
this.valueNode=nodes[13];
});

Clazz_newMeth(C$, 'setDoPropagate$',  function () {
this.j2sDoPropagate=true;
});

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.setDoc$();
}, 1);

Clazz_newMeth(C$, 'setDoc$',  function () {
this.body=document.body ||null;
C$.debugging=$I$(1).debugging;
});

Clazz_newMeth(C$, 'installJS$',  function () {
{
this.c.addChangeListener$javax_swing_event_ChangeListener && this.c.addChangeListener$javax_swing_event_ChangeListener(this);
}
if (this.buttonListener == null ) this.c.addPropertyChangeListener$java_beans_PropertyChangeListener(this);
});

Clazz_newMeth(C$, 'uninstallJS',  function () {

this.c && this.c.removeChangeListener$javax_swing_event_ChangeListener && this.c.removeChangeListener$javax_swing_event_ChangeListener(this);
if (this.c != null ) this.c.removePropertyChangeListener$java_beans_PropertyChangeListener(this);
if (this.outerNode != null ) {
$I$(5).dispose(this.outerNode);
this.outerNode=null;
}}, p$1);

Clazz_newMeth(C$, '$$O',  function (node) {
return C$.jquery.$(node);
});

Clazz_newMeth(C$, 'setComponent$javax_swing_JComponent',  function (comp) {
this.c=this.jc=comp;
this.setUIDisabled$Z(comp == null );
}, p$1);

Clazz_newMeth(C$, 'set$javax_swing_JComponent',  function (target) {
p$1.setComponent$javax_swing_JComponent.apply(this, [target]);
this.isAWT=this.jc.秘isAWT$();
this.applet=$I$(6).getHTML5Applet$java_awt_Component(this.c);
this.newID$Z(false);
this.installUI$javax_swing_JComponent(target);
this.installJS$();
if (this.needPreferred) this.getHTMLSizePreferred$swingjs_api_js_DOMNode$Z(this.updateDOMNode$(), false);
return this;
});

Clazz_newMeth(C$, 'newID$Z',  function (forceNew) {
this.classID=this.c.getUIClassID$();
this.notImplemented=(this.classID === "ComponentUI" );
var firstTime=(this.id0 == null );
if (firstTime || forceNew ) {
this.num=++C$.incr;
this.id=this.c.getHTMLName$S(this.classID);
if (firstTime) this.id0=this.id;
this.id+="_" + this.num;
}});

Clazz_newMeth(C$, 'getListNode$',  function () {
var node=this.reInit$Z(true);
this.reInit$Z(false);
this.imagePersists=true;
return node;
});

Clazz_newMeth(C$, 'reInit$Z',  function (getNew) {
this.setTainted$();
if (this.domNode != null ) {
$I$(5).dispose(this.domNode);
}this.domNode=null;
this.keysEnabled=false;
this.newID$Z(true);
return (getNew ? this.getDOMNode$() : null);
});

Clazz_newMeth(C$, 'setDataComponent$swingjs_api_js_DOMNode',  function (button) {
$I$(5).setAttr(button, "data-component", this.c);
});

Clazz_newMeth(C$, 'setDataKeyComponent$swingjs_api_js_DOMNode',  function (node) {
$I$(5).setAttr(node, "data-keycomponent", this.c);
});

Clazz_newMeth(C$, 'setDataShadowKeyComponent$swingjs_api_js_DOMNode$java_awt_Component',  function (node, c) {
$I$(5).setAttr(node, "data-shadowkeycomponent", c);
});

Clazz_newMeth(C$, 'setDataFocusComponent$swingjs_api_js_DOMNode',  function (node) {
$I$(5).setAttr(node, "data-focuscomponent", this.c);
});

Clazz_newMeth(C$, 'ignoreAllMouseEvents$swingjs_api_js_DOMNode',  function (node) {
this.addClass$swingjs_api_js_DOMNode$S(node, "swingjs-ui");
});

Clazz_newMeth(C$, 'hideMenusAndToolTip$',  function () {
if (C$.isMenuOpen) $I$(7).closeAllMenus$();
C$.hideTooltip$();
}, 1);

Clazz_newMeth(C$, 'hideTooltip$',  function () {
if (javax.swing.ToolTipManager ||false) $I$(8).j2sHideToolTip$();
}, 1);

Clazz_newMeth(C$, 'addClass$swingjs_api_js_DOMNode$S',  function (node, cl) {
this.$$O(node).addClass(cl);
});

Clazz_newMeth(C$, 'removeClass$swingjs_api_js_DOMNode$S',  function (node, cl) {
this.$$O(node).removeClass(cl);
});

Clazz_newMeth(C$, 'setDataUI$swingjs_api_js_DOMNode',  function (node) {
$I$(5).setAttr(node, "data-ui", this);
this.addClass$swingjs_api_js_DOMNode$S(node, "data-ui");
});

Clazz_newMeth(C$, 'setMenuItem$swingjs_api_js_DOMNode',  function (node) {
if (node == null ) return;
this.addClass$swingjs_api_js_DOMNode$S(node, "ui-j2smenu-node");
this.setDataComponent$swingjs_api_js_DOMNode(node);
});

Clazz_newMeth(C$, 'setJ2sMouseHandler$',  function () {
this.J2S.unsetMouse(this.domNode);
if (this.domNode == null ) this.updateDOMNode$();
$I$(5,"setAttrs",[this.domNode, ["applet", this.applet, "_frameViewer", this.jc.getFrameViewer$()]]);
this.J2S.setMouse(this.domNode, true);
});

Clazz_newMeth(C$, 'enableJSKeys$Z',  function (on) {
if (this.isUIDisabled) return;
if (!on) {
p$1.setTabIndex$I.apply(this, [-2147483648]);
} else if (this.keysEnabled) {
p$1.setTabIndex$I.apply(this, [-1]);
} else {
this.addFocusHandler$();
}});

Clazz_newMeth(C$, 'addFocusHandler$',  function () {
if (this.focusNode == null  && (this.focusNode=this.domNode) == null  ) return;
this.keysEnabled=true;
$I$(5,"setAttrs",[this.focusNode, ["applet", this.applet, "_frameViewer", this.jc.getFrameViewer$()]]);
this.setDataKeyComponent$swingjs_api_js_DOMNode(this.focusNode);
this.J2S.setKeyListener(this.focusNode);
p$1.setTabIndex$I.apply(this, [-1]);
});

Clazz_newMeth(C$, 'setTabIndex$I',  function (i) {
if (this.focusNode == null ) return;
if (i == -2147483648) {
this.focusNode.removeAttribute("tabindex");
$I$(5).setAttr(this.focusNode, "ui", null);
} else {
this.focusNode.setAttribute("tabindex", "" + i);
$I$(5).setAttr(this.focusNode, "ui", this);
}}, p$1);

Clazz_newMeth(C$, 'isFocusable$',  function () {
return false;
});

Clazz_newMeth(C$, 'setFocusable$',  function () {
if (this.focusNode == null ) this.addFocusHandler$();
if (this.focusNode != null ) this.addJQueryFocusCallbacks$();
return (this.focusNode != null );
});

Clazz_newMeth(C$, 'hasFocus$',  function () {
return document.activeElement == this.focusNode||false;
});

Clazz_newMeth(C$, 'focus$',  function () {
if (this.focusNode == null  || this.isUIDisabled ) return false;
$I$(9).focus$swingjs_api_js_DOMNode(this.focusNode);
return true;
});

Clazz_newMeth(C$, 'setComponentFocus$',  function () {
this.jc.requestFocus$();
var c=this.jc.getFocusTraversalPolicy$().getDefaultComponent$java_awt_Container(this.jc);
if (c != null ) c.requestFocus$();
});

Clazz_newMeth(C$, 'requestFocus$java_awt_Component$Z$Z$J$sun_awt_CausedFocusEvent_Cause',  function (me, temporary, focusedWindowChangeAllowed, time, cause) {
if (me == null ) return this.focus$();
if (!me.isFocusable$()) return false;
var ui=(me).秘getUI$();
ui.setFocusable$();
$I$(6).dispatch$O$I$I(ui.focusRunnable, 50, 0);
return true;
});

Clazz_newMeth(C$, 'addJQueryFocusCallbacks$',  function () {
if (this.focusNode == null ) this.focusNode=this.domNode;
p$1.setTabIndex$I.apply(this, [-1]);
var node=this.$$O(this.focusNode);
node.unbind("focus blur");
var me=this;
{
node.focus(function(e) { //System.out.println("JSSCUI node.focus() callback " + me.id + "  " + document.activeElement.id + " " + me.ignoreFocus);
if (!me.ignoreFocus) me.handleJSFocus$O$O$Z(me.jc, e.relatedTarget, true);
me.ignoreFocus = false;
//System.out.println("JSSCUI focus " + me.id);
});
node.blur(function(e) { try{ //System.out.println("JSSCUI node.blur() callback " + me.id + "  " + document.activeElement.id);
me.handleJSFocus$O$O$Z(me.jc, e.relatedTarget, false);
//System.out.println("JSSCUI focus blur " + me.id + "  " + document.activeElement.id);
}catch(e){ //System.out.println("JSSCUI focus error blur " + me.id);
} });
}
});

Clazz_newMeth(C$, 'handleJSFocus$O$O$Z',  function (jco, related, focusGained) {
this.setThread$();
$I$(9).handleJSFocus$O$O$Z(jco, related, focusGained);
});

Clazz_newMeth(C$, 'setThread$',  function () {
$I$(6,"setThreadForViewer$swingjs_JSFrameViewer",[this.jc.getFrameViewer$()]);
});

Clazz_newMeth(C$, 'abstractButtonFocusHack$',  function () {
if (this.jc == null ) return;
var focused=$I$(6).getCurrentFocusOwner$O(null);
var focusedUI=focused && focused.ui ||null;
if (focusedUI != null  && focusedUI !== this  ) {
focusedUI.handleJSFocus$O$O$Z(this.jc, null, false);
this.handleJSFocus$O$O$Z(this.jc, null, true);
}});

Clazz_newMeth(C$, 'bindJSKeyEvents$swingjs_api_js_DOMNode$Z',  function (node, addFocus) {
this.setDataUI$swingjs_api_js_DOMNode(node);
this.keysEnabled=true;
this.bindJQueryEvents$swingjs_api_js_DOMNode$S$I(node, "keydown keypress keyup" + (addFocus ? " focusout" : ""), -2);
if (addFocus) {
this.addJQueryFocusCallbacks$();
}});

Clazz_newMeth(C$, 'setIgnoreEvent$O',  function (jqevent) {

jqevent.originalEvent.xhandled = true;
}, 1);

Clazz_newMeth(C$, 'isIgnoreEvent$O',  function (jqevent) {
{
return jqevent.originalEvent.xhandled;
}
}, 1);

Clazz_newMeth(C$, 'bindJQueryEvents$swingjs_api_js_DOMNode$S$I',  function (node, eventList, eventID) {
var me=this;
var f=null;
this.setDataUI$swingjs_api_js_DOMNode(node);
this.addClass$swingjs_api_js_DOMNode$S(node, "ui-events");
{
f = function(jqevent) { me.setThread$();
return me.handleJSEvent$O$I$O(node, eventID, jqevent);
}
}
this.$$O(node).bind(eventList, f);
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O',  function (target, eventType, jQueryEvent) {
return true;
});

Clazz_newMeth(C$, 'revalidate$',  function () {
this.jc.revalidate$();
});

Clazz_newMeth(C$, 'setTainted$',  function () {
this.setTainted$Z(true);
});

Clazz_newMeth(C$, 'setTainted$Z',  function (tf) {
this.isTainted=tf;
});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent',  function (e) {
});

Clazz_newMeth(C$, 'updatePropertyAncestor$Z',  function (andSetHTML) {
this.setTainted$();
if (andSetHTML) {
this.setHTMLElement$();
}var p=this.jc.getParent$();
while (p != null ){
var parentui=(p == null  ? null : p.秘getUI$());
if (parentui != null ) {
parentui.setTainted$();
if (andSetHTML) {
parentui.setHTMLElement$();
if (parentui.menu != null ) {
(parentui).updateMenu$Z(false);
} else if (parentui.isPopupMenu && p.getParent$() == null  ) {
p=(p).getInvoker$();
continue;
}}}p=p.getParent$();
}
}, p$1);

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (e) {
if (this.isUIDisabled) return;
var prop=e.getPropertyName$();
var value=e.getNewValue$();
if (prop === "jscanvas" ) {
this.addLocalCanvas$Z(false);
}if (this.domNode == null ) return;
if (prop === "ancestor" ) {
if (this.isAWT) p$1.setAWTFontAndColor$java_awt_Container.apply(this, [value]);
if (this.cellComponent != null ) return;
p$1.updatePropertyAncestor$Z.apply(this, [false]);
if (value == null ) return;
if ((this.isDisposed || this.isTainted ) && this.c.isVisible$() ) {
this.setVisible$Z(true);
}}this.propertyChangedCUI$java_beans_PropertyChangeEvent$S(e, prop);
});

Clazz_newMeth(C$, 'addLocalCanvas$Z',  function (forceNew) {
if (this.jc.秘g != null  && !forceNew ) return;
this.jc.秘g=Boolean.TRUE;
this.setTainted$();
});

Clazz_newMeth(C$, 'setAWTFontAndColor$java_awt_Container',  function (value) {
var top=$I$(10).秘getTopInvokableAncestor$java_awt_Component$Z(value, false);
if (top === this.awttop  || (this.awttop=top) == null  ) {
if (top == null ) {
this.awtPeerBG=this.awtPeerFG=null;
}return;
}this.setBackgroundImpl$java_awt_Color(this.awtPeerBG=this.getBackground$());
this.setForegroundFor$swingjs_api_js_DOMNode$java_awt_Color(this.domNode, this.awtPeerFG=this.getForeground$());
this.setFont$java_awt_Font(this.c.getFont$());
}, p$1);

Clazz_newMeth(C$, 'propertyChangedFromListener$java_beans_PropertyChangeEvent$S',  function (e, prop) {
if (this.isUIDisabled) return;
switch (prop) {
case "ancestor":
if (this.cellComponent != null  || e.getNewValue$() == null  ) return;
var anc=$I$(10).秘getTopInvokableAncestor$java_awt_Component$Z(this.c, false);
var isVis=(anc != null  && anc.isVisible$() );
p$1.updatePropertyAncestor$Z.apply(this, [isVis]);
if (isVis && this.isTainted ) this.setHTMLElement$();
break;
}
this.propertyChangedCUI$java_beans_PropertyChangeEvent$S(e, prop);
});

Clazz_newMeth(C$, 'propertyChangedCUI$java_beans_PropertyChangeEvent$S',  function (e, prop) {
if (this.allowPropertyUpdate$() && this.cellComponent == null  ) this.getDOMNode$();
switch (prop) {
case "layeredContainerLayer":
this.setZ$I(this.getInheritedZ$() + (e.getNewValue$()).intValue$());
this.setTainted$();
return;
case "border":
this.jc.秘setPaintsSelf$I(0);
this.setTainted$();
return;
case "preferredSize":
this.preferredSize=e.getNewValue$();
return;
case "background":
this.setBackground$java_awt_Color(this.c.getBackground$());
return;
case "foreground":
this.setForeground$java_awt_Color(this.c.getForeground$());
return;
case "focusable":
this.setFocusable$();
return;
case "opaque":
this.setBackground$java_awt_Color(this.c.getBackground$());
return;
case "inverted":
this.updateDOMNode$();
return;
case "text":
var val=(this.c).getText$();
if (val == null  ? this.currentText != null  : !val.equals$O(this.currentText)) {
this.setIconAndText$S$javax_swing_Icon$I$S(prop, this.currentIcon, this.currentGap, val);
if (this.isMenuItem && this.textNode != null  ) this.setAlignments$javax_swing_AbstractButton$Z(this.c, true);
}return;
case "iconTextGap":
if (this.iconNode != null ) {
var gap=(this.c).getIconTextGap$();
if (this.currentGap != gap) this.setIconAndText$S$javax_swing_Icon$I$S(prop, this.currentIcon, gap, this.currentText);
}return;
case "icon":
this.updateIcon$();
return;
case "mnemonic":
var newValue=(e.getNewValue$()).intValue$();
this.setMnemonic$I(newValue);
this.setIconAndText$S$javax_swing_Icon$I$S(prop, this.currentIcon, this.currentGap, this.currentText);
return;
case "displayedMnemonicIndex":
this.mnemonicIndex=(e.getNewValue$()).intValue$();
this.setIconAndText$S$javax_swing_Icon$I$S(prop, this.currentIcon, this.currentGap, this.currentText);
return;
default:
if (C$.debugging) System.out.println$S("JSComponentUI: unrecognized prop: " + this.id + " " + prop );
}
});

Clazz_newMeth(C$, 'updateIcon$',  function () {
if (this.centeringNode != null ) {
var icon=this.getOrCreateIcon$java_awt_JSComponent$javax_swing_Icon(this.c, null);
if (icon === this.currentIcon  && icon != null  ) {
var bi=this.currentIcon.getImage$();
if (bi.秘getImageNode$I(0) === this.imageNode ) {
return;
}}if (this.menuAnchorNode != null ) {
$I$(5).setStyle(this.menuAnchorNode, "min-width", "20px");
}this.setIconAndText$S$javax_swing_Icon$I$S("icon", icon, this.currentGap, this.currentText);
}});

Clazz_newMeth(C$, 'allowPropertyUpdate$',  function () {
return true;
});

Clazz_newMeth(C$, 'setMnemonic$I',  function (newValue) {
if (newValue == this.mnemonic || this.domNode == null  ) return;
if (newValue < 0) {
newValue=(this.isLabel ? (this.label == null  ? -1 : this.label.getDisplayedMnemonic$()) : this.jc.getMnemonic$ && this.jc.getMnemonic$() ||-1);
}var node=(this.menuAnchorNode == null  ? this.domNode : this.menuAnchorNode);
if (this.mnemonic > 0 && newValue != this.mnemonic ) this.removeClass$swingjs_api_js_DOMNode$S(node, "ui-mnem-" + Character.toLowerCase$I(this.mnemonic));
if (newValue > 0) this.addClass$swingjs_api_js_DOMNode$S(node, "ui-mnem-" + Character.toLowerCase$I(newValue));
this.mnemonic=newValue;
});

Clazz_newMeth(C$, 'setUIDisabled$Z',  function (b) {
return this.isUIDisabled=b;
});

Clazz_newMeth(C$, 'checkAllowDivOverflow$',  function () {
var root=this.jc.getRootPane$();
this.allowDivOverflow=(root != null  && "false".equals$O(root.getClientProperty$O("swingjs.overflow.hidden")) );
});

Clazz_newMeth(C$, 'getDOMNode$',  function () {
return (this.isUIDisabled ? null : this.updateDOMNode$());
});

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.domNode == null ) {
if (this.notImplemented) {
this.notImplemented=false;
var s=this.jc.getClass$().getName$();
if (!s.equals$O("javax.swing.Box$Filler")) System.out.println$S("Swingjs WARNING: default JSComponentUI.updateDOMNode() is being used for " + s);
}this.domNode=$I$(5).createElement("div", this.id);
}return this.domNode;
});

Clazz_newMeth(C$, 'updateDOMNodeCUI$',  function () {
if (this.myCursor !== this.getCursor$() ) this.setCursor$();
if (this.outerNode != null ) this.setVisible$swingjs_api_js_DOMNode$Z(this.outerNode, this.jc.isVisible$());
if (this.pasteHandler != null ) this.setPasteHandler$swingjs_api_js_JSFunction(this.pasteHandler);
return this.domNode;
});

Clazz_newMeth(C$, 'updateCursorImmediately$',  function () {
if (this.isUIDisabled) return;
this.setHTMLElement$();
this.setCursor$();
});

Clazz_newMeth(C$, 'setCursor$',  function () {
this.myCursor=this.getCursor$();
var curs=$I$(6).getCursorName$java_awt_Cursor(this.myCursor);
$I$(5).setStyle(this.outerNode, "cursor", curs);
$I$(5).setStyle(this.domNode, "cursor", curs);
this.setWaitImage$Z(curs === "wait" );
});

Clazz_newMeth(C$, 'getCursor$',  function () {
var cur=this.c.getCursor$();
return (cur === $I$(11).getDefaultCursor$()  ? null : cur);
});

Clazz_newMeth(C$, 'setWaitImage$Z',  function (doShow) {
if (this.waitImage == null ) {
if (!doShow) return;
var path=(this.applet._j2sPath ||null) + "/img/cursor_wait.gif";
this.waitImage=C$.newDOMObject$S$S$SA("image", this.id + "_waitImage", Clazz_array(String, -1, ["src", path]));
}if (doShow) this.$$O(this.waitImage).show();
 else this.$$O(this.waitImage).hide();
});

Clazz_newMeth(C$, 'setCssFont$swingjs_api_js_DOMNode$java_awt_Font',  function (obj, font) {
if (font != null ) {
var istyle=font.getStyle$();
$I$(5,"setStyles",[obj, ["font-family", $I$(6,"getCSSFontFamilyName$S",[font.getFamily$()]), "font-size", font.getSize$() + "px", "font-style", ((istyle & 2) == 0 ? "normal" : "italic"), "font-weight", ((istyle & 1) == 0 ? "normal" : "bold")]]);
}this.enabled=!this.c.isEnabled$();
this.setEnabled$Z(this.c.isEnabled$());
return obj;
});

Clazz_newMeth(C$, 'newDOMObject$S$S$SA',  function (key, id, attr) {
var obj=$I$(5).createElement(key, id);
for (var i=0; i < attr.length; ) $I$(5).setAttr(obj, attr[i++], attr[i++]);

return obj;
}, 1);

Clazz_newMeth(C$, 'wrap$S$S$swingjs_api_js_DOMNodeA',  function (type, id, elements) {
var obj=C$.newDOMObject$S$S$SA(type, id + type, Clazz_array(String, -1, []));
for (var i=0; i < elements.length; i++) {
obj.appendChild(elements[i]);
}
return obj;
}, 1);

Clazz_newMeth(C$, 'debugDump$swingjs_api_js_DOMNode',  function (d) {
System.out.println$O($I$(5).getAttr(d, "outerHTML"));
});

Clazz_newMeth(C$, 'getHTMLSizePreferred$swingjs_api_js_DOMNode$Z',  function (obj, addCSS) {
return this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(this.centeringNode == null  || obj !== this.domNode   ? obj : this.centeringNode, addCSS, true);
});

Clazz_newMeth(C$, 'getHTMLSize$swingjs_api_js_DOMNode',  function (obj) {
return this.setHTMLSize1$swingjs_api_js_DOMNode$Z$Z(obj, false, false);
});

Clazz_newMeth(C$, 'getIconSize$javax_swing_AbstractButton',  function (b) {
return (this.iconNode == null  || this.imageNode == null   || b.getIcon$() == null   ? null : Clazz_new_([b.getIcon$().getIconWidth$(), b.getIcon$().getIconHeight$()],$I$(2,1).c$$I$I));
}, p$1);

Clazz_newMeth(C$, 'getTextSize$javax_swing_AbstractButton',  function (b) {
if (this.textNode == null ) return null;
$I$(5).setStyle(this.textNode, "padding", "0px");
var t=b.getText$();
if (this.isAWT && t === ""  ) t="\u00a0";
return (t == null  || t === ""   ? null : this.getHTMLSize$swingjs_api_js_DOMNode(this.textNode));
});

Clazz_newMeth(C$, 'setHTMLSize1$swingjs_api_js_DOMNode$Z$Z',  function (node, addCSS, usePreferred) {
if (node == null ) return null;
addCSS=!!(addCSS&(!this.isMenuItem));
var h;
var w;
var w0=null;
var h0=null;
var w0i=null;
var h0i=null;
var position=null;
var parentNode=null;
var hasFocus=false;
if (!usePreferred && this.scrollPaneUI != null   && this.scrollPaneUI.c.getWidth$() != 0 ) {
w=this.scrollPaneUI.c.getWidth$();
h=this.scrollPaneUI.c.getHeight$();
} else if (usePreferred && this.preferredSize != null  ) {
w=this.preferredSize.width;
h=this.preferredSize.height;
position=node.style.position ||null;
} else if (usePreferred && this.preferredDim != null  ) {
w=this.preferredDim.width;
h=this.preferredDim.height;
position=node.style.position ||null;
} else {
hasFocus=this.hasFocus$();
if (!this.isMenuItem) {
var simpleButton=this.isSimpleButton;
var centerNode=this.centeringNode;
var dnode=this.domNode;
{
w0 = node.style.width; h0 = node.style.height; position = node.style.position;
if (node == centerNode && simpleButton) { w0i = dNode.style.width;
h0i = dNode.style.height; }
}
}$I$(5,"setStyles",[node, ["position", null, "width", this.getSizingWidth$(), "height", null]]);
if (this.innerNode != null ) $I$(5).setStyles(this.innerNode, ["width", null, "height", null]);
if (node === this.centeringNode ) {
if (!this.isHTML) {
$I$(5).setStyle(node, "position", null);
$I$(5).setStyle(this.textNode, "position", null);
$I$(5).setStyle(this.iconNode, "position", null);
}}parentNode=$I$(5).transferTo(node, null);
var r=this.getBoundingRect$swingjs_api_js_DOMNode(node);
w=(Math.max(0, Math.ceil(r.width))|0);
h=(Math.max(0, Math.ceil(r.height))|0);
if (!usePreferred) {
this.actualWidth=w;
this.actualHeight=h;
}}var dim=this.getCSSAdjustment$Z$Z(addCSS, true);
dim.width+=w;
dim.height+=h;
$I$(5).setStyle(node, "position", null);
if (w0 != null ) {
$I$(5,"setStyles",[node, ["width", (this.isHTML && this.isLabel  ? "inherit" : w0), "height", h0]]);
}if (position != null ) {
$I$(5).setStyle(node, "position", position);
}if (w0i != null ) {
$I$(5).setStyles(this.domNode, ["width", w0i, "height", h0i]);
}if (parentNode != null ) {
parentNode.appendChild(node);
if (hasFocus) {
this.ignoreFocus=true;
node.focus();
}}return dim;
});

Clazz_newMeth(C$, 'getSizingWidth$',  function () {
return null;
});

Clazz_newMeth(C$, 'getBoundingRect$swingjs_api_js_DOMNode',  function (node) {
if (C$.tempDiv == null ) {
C$.tempDiv=$I$(5).createElement("div", "_temp");
$I$(5).setStyle(C$.tempDiv, "display", "inline-block");
$I$(5).setTopLeftAbsolute(C$.tempDiv, 0, -100000);
this.$$O(this.body).after(C$.tempDiv);
}C$.tempDiv.appendChild(node);
var r=C$.tempDiv.getBoundingClientRect();
C$.tempDiv.removeChild(node);
return r;
});

Clazz_newMeth(C$, 'getCSSAdjustment$Z$Z',  function (addingCSS, mutable) {
return mutable ? Clazz_new_($I$(2,1).c$$I$I,[0, 0]) : C$.ZERO_SIZE;
});

Clazz_newMeth(C$, 'setHTMLElement$',  function () {
return this.setHTMLElementCUI$();
});

Clazz_newMeth(C$, 'setHTMLElementCUI$',  function () {
if (this.isUIDisabled || !this.isTainted ) return this.outerNode;
if (this.isDummyFrame) {
this.setTainted$Z(false);
return (this.outerNode=$I$(5).createElement("div", "dummyFrame"));
}this.updateDOMNode$();
p$1.checkTransparent.apply(this, []);
var children=this.getChildren$();
var n=this.getChildCount$();
if (this.isMenuItem) {
this.outerNode=this.domNode;
if (n == 0) return this.outerNode;
}if (this.outerNode == null ) p$1.createOuterNode.apply(this, []);
 else if (this.domNode !== this.outerNode  && $I$(5).getParent(this.domNode) !== this.outerNode  ) this.outerNode.appendChild(this.domNode);
var order=this.jc.getClientProperty$O("layeredContainerLayer");
if (order != null  && order.intValue$() != -30000 ) this.setZ$I(this.getInheritedZ$() + order.intValue$());
p$1.setOuterLocationFromComponent.apply(this, []);
if (n > 0 && this.containerNode == null  ) this.containerNode=this.outerNode;
if (this.isContainer || n > 0 ) {
if (this.isContainer && !this.isMenuItem && !this.isTable  ) {
var w=this.getContainerWidth$();
var h=this.getContainerHeight$();
$I$(5).setSize(this.outerNode, w, h);
if (this.isPanel || this.isContentPane || this.isRootPane  ) {
$I$(5).setStyle(this.outerNode, "overflow", this.allowDivOverflow ? "visible" : "hidden");
if (this.isRootPane) {
if (this.jc.getFrameViewer$().isApplet) {
var cdiv=$I$(6).getHTML5Applet$java_awt_Component(this.jc)._getContentLayer();
$I$(5).appendChildSafely(cdiv, this.outerNode);
}}}}if (n > 0) this.addChildrenToDOM$java_awt_ComponentA$I(children, n);
if (this.isWindow && this.jc.getWidth$() > 0  && this.isFrameIndependent$()  && !this.isSticky ) {
$I$(5).transferTo(this.outerNode, this.body);
$I$(5).setStyle(this.outerNode, "position", "absolute");
}} else {
$I$(5).setStyle(this.outerNode, "overflow", "hidden");
}this.setTainted$Z(false);
if (this.embeddingNode != null ) {
$I$(5).detachAll(this.embeddingNode);
$I$(5).appendChildSafely(this.embeddingNode, this.outerNode);
}return this.outerNode;
});

Clazz_newMeth(C$, 'createOuterNode',  function () {
this.outerNode=C$.wrap$S$S$swingjs_api_js_DOMNodeA("div", this.id, Clazz_array($I$(5), -1, [this.domNode]));
var c=this.jc;
var name=this.jc.getName$();
var s=(name || c.__CLASS_NAME__||"");
this.outerNode.setAttribute("name", s);
}, p$1);

Clazz_newMeth(C$, 'isFrameIndependent$',  function () {
return true;
});

Clazz_newMeth(C$, 'getChildren$',  function () {
return $I$(10).秘getChildArray$java_awt_Container(this.jc);
});

Clazz_newMeth(C$, 'getChildCount$',  function () {
return this.jc.getComponentCount$();
});

Clazz_newMeth(C$, 'getContainerNode$I',  function (i) {
return this.containerNode;
});

Clazz_newMeth(C$, 'addChildrenToDOM$java_awt_ComponentA$I',  function (children, n) {
for (var i=0; i < n; i++) {
if (!this.isTable && children[i] == null  ) break;
var ui=$I$(6).getUI$java_awt_Component$Z(children[i], false);
if (ui == null  || ui.jc == null   || ui.isNull  || ui.isPaintedOnly ) {
continue;
}ui.parent=this;
if (ui.getOuterNode$() == null ) {
if (ui.domNode != null ) System.out.println$S("JSCUI addChildren no outer node for " + ui.id);
} else {
if (ui.domNode !== ui.outerNode  && $I$(5).getParent(ui.domNode) == null  ) ui.outerNode.appendChild(ui.domNode);
if (ui.embeddingNode == null  && (!ui.isRootPane || !ui.jc.getFrameViewer$().isApplet )  && (!ui.isWindow || !ui.isFrameIndependent$() ) ) $I$(5,"appendChildSafely",[this.getContainerNode$I(i), ui.outerNode]);
}}
});

Clazz_newMeth(C$, 'getContainerWidth$',  function () {
return this.width=this.c.getWidth$();
});

Clazz_newMeth(C$, 'getContainerHeight$',  function () {
return this.height=this.c.getHeight$();
});

Clazz_newMeth(C$, 'update$java_awt_Graphics$javax_swing_JComponent',  function (g, c) {
if (this.isUIDisabled) return;
if (this.cellComponent == null ) {
if ($I$(5).getParent(this.domNode) !== this.outerNode ) this.setTainted$();
this.setHTMLElement$();
if (this.allowTextAlignment && this.centeringNode != null  ) this.setAlignments$javax_swing_AbstractButton$Z(this.jc, false);
}this.paint$java_awt_Graphics$javax_swing_JComponent(g, c);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
this.update$java_awt_Graphics$javax_swing_JComponent(g, this.jc);
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics$javax_swing_JComponent',  function (g, c) {
this.setOverflow$();
if (this.imageNode != null  && !this.imagePersists ) {
$I$(5).setStyle(this.imageNode, "visibility", "hidden");
}});

Clazz_newMeth(C$, 'setOverflow$',  function () {
if (this.textNode != null ) $I$(5).setStyle(this.textNode, "overflow", "hidden");
});

Clazz_newMeth(C$, 'repaint$J$I$I$I$I',  function (tm, x, y, width, height) {
});

Clazz_newMeth(C$, 'print$java_awt_Graphics',  function (g) {
$I$(1).notImplemented$S("");
});

Clazz_newMeth(C$, 'getMinimumSize$',  function () {
return this.getMinimumSize$javax_swing_JComponent(this.jc);
});

Clazz_newMeth(C$, 'getPreferredSize$',  function () {
return this.getPreferredSize$javax_swing_JComponent(this.jc);
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent',  function (jc) {
return this.getHTMLSizePreferred$swingjs_api_js_DOMNode$Z(this.updateDOMNode$(), false);
});

Clazz_newMeth(C$, 'contains$javax_swing_JComponent$I$I',  function (c, x, y) {
return c.inside$I$I(x, y);
});

Clazz_newMeth(C$, 'createUI$javax_swing_JComponent',  function (c) {
return null;
}, 1);

Clazz_newMeth(C$, 'getBaseline$javax_swing_JComponent$I$I',  function (c, width, height) {
if (c == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Component must be non-null"]);
}if (width < 0 || height < 0 ) {
throw Clazz_new_(Clazz_load('IllegalArgumentException').c$$S,["Width and height must be >= 0"]);
}return -1;
});

Clazz_newMeth(C$, 'getBaselineResizeBehavior$javax_swing_JComponent',  function (c) {
if (c == null ) {
throw Clazz_new_(Clazz_load('NullPointerException').c$$S,["Component must be non-null"]);
}return $I$(12).OTHER;
});

Clazz_newMeth(C$, 'getJSTextValue$',  function () {
return $I$(5,"getAttr",[this.domNode, this.valueNode == null  ? "innerText" : "value"]);
});

Clazz_newMeth(C$, 'getOuterNode$',  function () {
return ((this.outerNode == null  || this.isTainted && !this.isTable  ) && !this.isUIDisabled  ? this.setHTMLElement$() : this.outerNode);
});

Clazz_newMeth(C$, 'setJSText$swingjs_api_js_DOMNode$S$S',  function (obj, prop, val) {

obj[prop] = val;
return obj;
});

Clazz_newMeth(C$, 'isObscured$',  function () {
$I$(1).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'canDetermineObscurity$',  function () {
$I$(1).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
this.setVisible$swingjs_api_js_DOMNode$Z(this.getOuterNode$(), b);
});

Clazz_newMeth(C$, 'setVisible$swingjs_api_js_DOMNode$Z',  function (node, b) {
if (this.isPaintedOnly) b=false;
if (!b && this.cellComponent != null  ) return;
if (node == null ) node=this.domNode;
$I$(5).setVisible(node, b);
if (b) {
if (this.isDisposed) this.undisposeUI$swingjs_api_js_DOMNode(node);
}});

Clazz_newMeth(C$, 'setEnabled$Z',  function (b) {
if (b == this.enabled ) return;
this.enabled=b;
if (this.enableNode != null ) this.enableNode$swingjs_api_js_DOMNode$Z(this.enableNode, b);
 else if (this.enableNodes != null ) for (var i=0; i < this.enableNodes.length; i++) this.enableNode$swingjs_api_js_DOMNode$Z(this.enableNodes[i], b);

});

Clazz_newMeth(C$, 'enableNode$swingjs_api_js_DOMNode$Z',  function (node, b) {
if (node == null  || this.isUIDisabled ) return;
$I$(5).setAttr(node, "disabled", b ? C$.NULL : "\u79d8TRUE");
$I$(5).setStyle(node, "pointer-events", b ? "auto" : "none");
if (!b && this.inactiveForeground === this.colorUNKNOWN  ) this.getDisabledColors$S(this.buttonNode == null  ? this.getPropertyPrefix$() : "Button");
if (this.jc.isOpaque$()) {
var bg=this.getBackground$();
this.setBackgroundImpl$java_awt_Color(b || !(Clazz_instanceOf(bg, "javax.swing.plaf.UIResource")) || this.inactiveBackground == null    ? bg : this.inactiveBackground);
}var fg=this.getForeground$();
this.setForegroundFor$swingjs_api_js_DOMNode$java_awt_Color(this.domNode, b ? fg : this.getInactiveTextColor$java_awt_Color(fg));
});

Clazz_newMeth(C$, 'getBackground$',  function () {
return (this.awtPeerBG == null  ? this.c.getBackground$() : this.awtPeerBG);
});

Clazz_newMeth(C$, 'getForeground$',  function () {
return (this.awtPeerFG == null  ? this.c.getForeground$() : this.awtPeerFG);
});

Clazz_newMeth(C$, 'getInactiveTextColor$java_awt_Color',  function (fg) {
return (this.inactiveForeground == null  ? fg : this.inactiveForeground);
});

Clazz_newMeth(C$, 'getDisabledColors$S',  function (pp) {
this.inactiveBackground=$I$(13).getColor$O(pp + ".inactiveBackground");
this.inactiveForeground=$I$(13).getColor$O(pp + ".inactiveForeground");
});

Clazz_newMeth(C$, 'setBounds$I$I$I$I$I',  function (x, y, width, height, op) {
if (this.isUIDisabled) return;
var isBounded=(width > 0 && height > 0 );
if (isBounded && !this.boundsSet ) {
if (this.c.isVisible$() && this.cellComponent == null  ) this.setVisible$Z(true);
this.boundsSet=true;
}switch (op) {
case 3:
case 1:
x=this.c.getX$();
y=this.c.getY$();
if (this.embeddingNode == null  && (this.x != x || this.y != y ) ) {
this.x=x;
this.y=y;
}p$1.setOuterLocationFromComponent.apply(this, []);
if (op == 1) break;
case 4:
case 2:
if (this.scrollPaneUI != null ) {
width=Math.min(width, this.scrollPaneUI.c.getWidth$());
height=Math.min(height, this.scrollPaneUI.c.getHeight$());
}if (width > 0 && height > 0 ) p$1.setSizeFromComponent$I$I$I.apply(this, [width, height, op]);
break;
}
});

Clazz_newMeth(C$, 'setOuterLocationFromComponent',  function () {
if (this.outerNode != null  && !this.isMenuItem ) {
if (this.parent == null  && this.jc.getParent$() != null   && (this.parent=this.jc.getParent$().秘getUI$()) != null   && this.parent.outerNode != null  ) $I$(5).appendChildSafely(this.parent.outerNode, this.outerNode);
$I$(5).setPositionAbsolute(this.outerNode);
$I$(5,"setStyles",[this.outerNode, ["left", (this.x=this.c.getX$()) + "px", "top", (this.y=this.c.getY$()) + "px"]]);
}}, p$1);

Clazz_newMeth(C$, 'setSizeFromComponent$I$I$I',  function (width, height, op) {
var size=this.getCSSAdjustment$Z$Z(true, false);
this.width=width;
this.height=height;
if (this.domNode == null ) {
this.alignmentDisabled=true;
this.updateDOMNode$();
this.alignmentDisabled=false;
}this.setJSDimensions$I$I(width + size.width, height + size.height);
this.setInnerComponentBounds$I$I(width, height);
}, p$1);

Clazz_newMeth(C$, 'setJSDimensions$I$I',  function (width, height) {
if (this.jsActualWidth > 0) width=this.jsActualWidth;
if (this.jsActualHeight > 0) height=this.jsActualHeight;
$I$(5).setSize(this.domNode, width, height);
if (this.outerNode != null ) {
$I$(5).setSize(this.outerNode, width, height);
}});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I',  function (width, height) {
});

Clazz_newMeth(C$, 'getOrCreateIcon$java_awt_JSComponent$javax_swing_Icon',  function (c, icon) {
return (c == null  || icon == null  && (icon=this.getIcon$()) == null    ? null : icon.getIconWidth$() <= 0 || icon.getIconHeight$() <= 0  ? null : (Clazz_instanceOf(icon, "javax.swing.ImageIcon")) ? icon : $I$(6).createImageIcon$java_awt_Component$javax_swing_Icon$S(this.jc, icon, this.id + "tmpIcon"));
});

Clazz_newMeth(C$, 'getIcon$',  function () {
return (this.c).getIcon$();
});

Clazz_newMeth(C$, 'fixText$S',  function (t) {
if (t != null ) {
if (this.isHTML) {
var rp=this.J2S.getResourcePath("", true);
t=t.replaceAll$S$S("file:/", t.indexOf$S(rp) >= 0 ? "" : rp);
} else if (this.valueNode == null ) {

t = t.replace(C$.re0, "").replace(C$.reSpace, "\u00A0");
}}return t;
});

Clazz_newMeth(C$, 'setIconAndText$S$javax_swing_Icon$I$S',  function (prop, icon, gap, text) {
if (this.iconNode == null  && this.textNode == null  ) return;
this.setMnemonic$I(-1);
this.actualWidth=this.actualHeight=0;
this.currentText=text;
this.isHTML=(text != null  && (text.indexOf$S("<html>") == 0 || this.jc.getClientProperty$O("html") != null   || this.mnemonicIndex >= 0 ) );
text=this.fixText$S(text);
this.currentGap=gap;
this.currentIcon=null;
this.imageNode=null;
var h=0;
if (this.iconNode != null ) {
icon=this.currentIcon=this.getOrCreateIcon$java_awt_JSComponent$javax_swing_Icon(this.jc, icon);
this.$$O(this.iconNode).empty();
if (this.currentIcon != null ) {
this.imageNode=(this.currentIcon.getImage$()).秘getImageNode$I(2);
this.iconNode.appendChild(this.imageNode);
if ($I$(5).getAttr(this.imageNode, "tagName") === "VIDEO" ) this.isVideoIcon=this.imagePersists=true;
var w;
if (this.isVideoIcon) {
if (this.jc.isPreferredSizeSet$()) {
w=this.jc.getPreferredSize$().width;
h=this.jc.getPreferredSize$().height;
} else {
w=$I$(5).getAttrInt(this.imageNode, "videoWidth");
h=$I$(5).getAttrInt(this.imageNode, "videoHeight");
}if (w > 0 && h > 0 ) {
(icon).秘setIconSize$I$I(w, h);
$I$(5).setStyles(this.imageNode, ["height", h + "px", "width", w + "px"]);
$I$(5).setStyles(this.iconNode, ["height", h + "px", "width", w + "px"]);
}} else {
w=icon.getIconWidth$();
h=icon.getIconHeight$();
var hasItemIconAndAction=(!this.isSimpleButton && this.isMenuItem && this.iconNode != null    && this.actionNode != null   && this.iconNode !== this.actionNode  );
if (hasItemIconAndAction && h > 20 ) {
w=((w * 20.0 / h)|0);
h=20;
}$I$(5).setStyles(this.iconNode, ["height", h + "px", "width", w + "px"]);
$I$(5).setStyles(this.imageNode, ["height", h + "px", "width", w + "px"]);
if (!this.imagePersists) $I$(5).setStyle(this.imageNode, "visibility", "hidden");
}}}if (text == null ) {
text="";
} else if (text === "" ) {
if (this.isAWT) text="\u00a0";
}if (text !== "" ) {
if (text === "\u0000" ) {
this.isPaintedOnly=true;
}if (!this.isHTML || !this.isLabel ) $I$(5).setStyle(this.textNode, "white-space", "nowrap");
if (icon == null ) {
if (this.iconNode != null  && this.allowTextAlignment  && this.isMenuItem  && this.actionNode == null   && text != null  ) {
$I$(5).addHorizontalGap(this.iconNode, gap + 11);
}} else {
if (gap == 2147483647) gap=this.getDefaultIconTextGap$();
if (gap != 0 && text != null   && p$1.doAddTextGap.apply(this, []) ) $I$(5).addHorizontalGap(this.iconNode, gap);
}if (text.indexOf$S("<html>") == 0) {
text=text.substring$I(6).replaceAll$S$S("</br>", "");
text=text.replaceAll$S$S("</html>", "");
text=text.replaceAll$S$S("href=", "target=_blank href=");
} else if (this.jc.getClientProperty$O("html") != null ) {
} else if (this.mnemonicIndex >= 0) {
var i=this.mnemonicIndex;
if (i < text.length$()) text=text.substring$I$I(0, i) + "<u>" + text.substring$I$I(i, i + 1) + "</u>" + text.substring$I(i + 1) ;
}}var obj=null;
if (this.textNode != null ) {
prop="innerHTML";
obj=this.textNode;
var f=this.getFont$();
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.domNode, f);
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.textNode, f);
if (this.menuAnchorNode != null ) {
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.menuAnchorNode, f);
}if (!this.isHTML) {

text = text.replace(C$.reLT, "&lt;").replace(C$.reSpace, "\u00A0");
}} else if (this.valueNode != null ) {
prop="value";
obj=this.valueNode;
if (this.iconNode != null ) $I$(5,"setVisible",[obj, text != null ]);
}if (obj != null ) {
this.setJSText$swingjs_api_js_DOMNode$S$S(obj, prop, text);
}if (this.valueNode != null ) {
this.setBackgroundImpl$java_awt_Color(this.c.getBackground$());
}});

Clazz_newMeth(C$, 'doAddTextGap',  function () {
var b=this.jc;
return (b.getHorizontalTextPosition$() != 0);
}, p$1);

Clazz_newMeth(C$, 'getDefaultIconTextGap$',  function () {
return 0;
});

Clazz_newMeth(C$, 'getJSInsets$',  function () {
if (this.insets == null ) this.insets=Clazz_new_($I$(3,1).c$$I$I$I$I,[0, 0, 0, 0]);
this.insets=this.jc.getInsets$java_awt_Insets(this.insets);
});

Clazz_newMeth(C$, 'setButtonRectangles$Z',  function (isPreferred) {
if (this.iconR == null ) {
this.iconR=Clazz_new_($I$(14,1));
this.textR=Clazz_new_($I$(14,1));
this.viewR=Clazz_new_($I$(14,1));
}this.getJSInsets$();
if (isPreferred) {
this.viewR.width=32767;
this.viewR.height=32767;
} else {
this.viewR.x=0;
this.viewR.y=0;
this.viewR.width=this.width - this.insets.right - this.insets.left ;
this.viewR.height=this.height - this.insets.bottom - this.insets.top ;
}this.iconR.width=-1;
if (this.isMenuItem && this.actionNode != null   && this.actionNode === this.iconNode  ) {
this.iconR.width=this.iconR.height=15;
} else if (this.icon == null  && this.iconNode != null  ) {
var d=this.getHTMLSize$swingjs_api_js_DOMNode(this.iconNode);
this.iconR.width=d.width;
this.iconR.height=d.height;
}this.iconR.x=this.iconR.y=this.textR.x=this.textR.y=0;
});

Clazz_newMeth(C$, 'addCentering$swingjs_api_js_DOMNode',  function (node) {
if (this.iconNode == null ) this.iconNode=C$.newDOMObject$S$S$SA("span", this.id + "_icon", Clazz_array(String, -1, []));
this.textNode=C$.newDOMObject$S$S$SA("span", this.id + "_txt", Clazz_array(String, -1, []));
this.centeringNode=C$.newDOMObject$S$S$SA("span", this.id + "_ctr", Clazz_array(String, -1, []));
this.centeringNode.appendChild(this.iconNode);
if (this.actionNode != null  && this.actionNode !== this.iconNode  ) this.centeringNode.appendChild(this.actionNode);
this.centeringNode.appendChild(this.textNode);
node.appendChild(this.centeringNode);
});

Clazz_newMeth(C$, 'updateCenteringNode$',  function () {
if (this.jc.秘paintsSelfEntirely$()) {
$I$(5).setStyle(this.centeringNode, "visibility", "hidden");
$I$(5).setStyle(this.domNode, "border", "none");
$I$(5).setStyle(this.domNode, "background", "none");
}});

Clazz_newMeth(C$, 'setAlignments$javax_swing_AbstractButton$Z',  function (b, justGetPreferred) {
if (this.alignmentDisabled) return;
this.getJSInsets$();
var dimIcon=p$1.getIconSize$javax_swing_AbstractButton.apply(this, [b]);
var dimText=this.getTextSize$javax_swing_AbstractButton(b);
var hasItemIconAndAction=(!this.isSimpleButton && this.isMenuItem && this.iconNode != null    && this.actionNode != null   && this.iconNode !== this.actionNode  );
var wAction=(hasItemIconAndAction ? 15 : 0);
var wIcon=(this.actionNode != null  ? (this.isMenuItem && dimIcon == null   ? 5 : 20) : dimIcon == null  ? 0 : Math.max(0, dimIcon.width));
var wText=(dimText == null  ? 0 : dimText.width);
var gap=(wText == 0 || wIcon == 0  ? 0 : b.getIconTextGap$());
var w0=this.cellComponent != null  ? this.cellWidth : this.$$O(this.domNode).width();
var w=w0;
if (w < wIcon + wText + wAction ) {
w=wIcon + wText + wAction ;
}var margins=(this.isLabel ? (this.isAWT ? b.getInsets$() : this.insets) : p$1.getButtonMargins$javax_swing_AbstractButton$Z.apply(this, [b, justGetPreferred]));
if (margins == null ) margins=C$.zeroInsets;
var myInsets=(this.isLabel || !this.isSimpleButton || justGetPreferred   ? C$.zeroInsets : this.getButtonOuterInsets$javax_swing_AbstractButton(b));
var hText=(dimText == null  ? 0 : dimText.height);
var hIcon=(dimIcon == null  ? 0 : dimIcon.height);
var ih=(wAction == 0 && this.actionNode != null   ? 15 : dimIcon == null  ? 0 : dimIcon.height);
var hCtr=Math.max(hText, ih);
var wCtr=wIcon + gap + wAction + wText ;
var hAlign=b.getHorizontalAlignment$();
var vAlign=b.getVerticalAlignment$();
var hTextPos=b.getHorizontalTextPosition$();
var vTextPos=b.getVerticalTextPosition$();
var ltr=this.jc.getComponentOrientation$().isLeftToRight$();
var alignVCenter=(vAlign == 0);
var alignLeft;
var alignRight;
var alignHCenter;
var textRight;
var textCenter;
if (this.menuAnchorNode == null ) {
alignLeft=(w == 0 || hAlign == 2  || hAlign == (ltr ? 10 : 11) );
alignRight=w != 0 && (hAlign == 4 || hAlign == (ltr ? 11 : 10) ) ;
alignHCenter=(!alignLeft && !alignRight );
textCenter=(hTextPos == 0);
textRight=(hTextPos == 4 || hTextPos == (ltr ? 11 : 10) );
} else {
alignLeft=ltr;
alignRight=!ltr;
alignHCenter=false;
textRight=ltr;
textCenter=false;
}if (this.menuAnchorNode != null ) {
p$1.setMenuAnchorAndAccelerator$javax_swing_AbstractButton$I$Z$java_awt_Insets.apply(this, [b, wCtr, ltr, margins]);
} else if (textCenter) {
switch (vTextPos) {
case 1:
hCtr=hIcon + gap + hText ;
break;
case 3:
hCtr=hIcon + gap + hText ;
break;
case 0:
break;
}
wCtr=Math.max(wIcon, wText);
if (w0 > 0 && w0 < w ) w=w0;
}if (justGetPreferred) {
if (this.preferredDim == null ) this.preferredDim=Clazz_new_($I$(2,1));
this.preferredDim.width=wCtr + margins.left + margins.right ;
this.preferredDim.height=hCtr + margins.top + margins.bottom ;
return;
}this.preferredDim=null;
var cssCtr=C$.getJSObject$();
var cssTxt=C$.getJSObject$();
var cssIcon=C$.getJSObject$();
var cssAction=(hasItemIconAndAction ? C$.getJSObject$() : null);
C$.addJSKeyVal$O$SA(cssCtr, Clazz_array(String, -1, ["position", "absolute", "top", null, "left", null, "transform", null, "width", (this.isHTML && this.isLabel  ? "inherit" : wCtr + "px"), "height", hCtr + "px", "display", (this.isLabel ? "inline-block" : null)]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["position", "absolute", "top", null, "left", null, "transform", null]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["position", "absolute", "display", (this.isLabel ? "inline-block" : null), "top", null, "left", null, "transform", null]));
if (hasItemIconAndAction) C$.addJSKeyVal$O$SA(cssAction, Clazz_array(String, -1, ["position", "absolute", "top", null, "left", null, "transform", null]));
this.isFullyCentered=(alignHCenter && alignVCenter && wIcon == 0   || wText == 0 && (this.actionNode == null  || this.cellComponent != null   || this.isSimpleButton )  && margins.left == margins.right  && margins.top == margins.bottom  && myInsets.left == myInsets.right  && myInsets.top == myInsets.bottom  );
if (this.isFullyCentered && !this.isMenuItem ) {
p$1.fullyCenter$O$Z.apply(this, [cssCtr, this.isSimpleButton || this.isLabel ]);
p$1.fullyCenter$O$Z.apply(this, [cssIcon, this.isSimpleButton]);
p$1.fullyCenter$O$Z.apply(this, [cssTxt, this.isSimpleButton]);
} else {
var left=-1;
if (this.menuAnchorNode == null ) {
if (alignHCenter) {
left=((w - wCtr + margins.left - margins.right + myInsets.left - myInsets.right)/2|0);
if (textCenter) {
} else if (textRight) {
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", "0px"]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", (gap + wIcon) + "px"]));
} else {
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", "0px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", (gap + wText) + "px"]));
}} else if (alignRight) {
left=w - wCtr - margins.right - myInsets.right - (this.cellComponent == null  ? 0 : 2) ;
if (textCenter) {
} else if (textRight) {
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", (wCtr - wText) + "px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", "0px"]));
} else {
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", "0px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", (wCtr - wIcon) + "px"]));
}} else {
left=margins.left + myInsets.left - (this.cellComponent == null  ? 0 : 1);
if (textCenter) {
} else if (textRight) {
var off=(!this.isMenuItem || ltr || this.actionNode != null    ? 0 : this.actionItemOffset);
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", off + "px"]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", (wIcon + gap) + "px"]));
} else {
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", (!this.isMenuItem ? 0 : ltr ? this.actionItemOffset : -3) + "px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", (wText + gap) + "px"]));
}}if (textCenter) {
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", (((wCtr - wText)/2|0)) + "px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", (((wCtr - wIcon)/2|0)) + "px"]));
}C$.addJSKeyVal$O$SA(cssCtr, Clazz_array(String, -1, ["left", left + "px"]));
} else if (alignRight) {
$I$(5).setStyle(this.itemNode, "text-align", "right");
C$.addJSKeyVal$O$SA(cssCtr, Clazz_array(String, -1, ["right", "0px"]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["right", "23px"]));
if (hasItemIconAndAction) {
C$.addJSKeyVal$O$SA(cssAction, Clazz_array(String, -1, ["right", "0px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["right", (wText + gap + wAction ) + "px"]));
} else {
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["right", "0px"]));
}} else {
$I$(5).setStyle(this.itemNode, "text-align", "left");
C$.addJSKeyVal$O$SA(cssCtr, Clazz_array(String, -1, ["left", "0px"]));
if (hasItemIconAndAction) {
C$.addJSKeyVal$O$SA(cssAction, Clazz_array(String, -1, ["left", "0px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", (wAction + gap) + "px"]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", (wAction + wIcon + gap ) + "px"]));
} else {
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["left", "0px"]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["left", "23px"]));
}}var h=this.c.getHeight$();
if (h == 0) {
h=hCtr;
}if (this.menuAnchorNode == null ) {
var top;
switch (vAlign) {
case 1:
top=margins.top + myInsets.top;
break;
case 3:
top=h - hCtr - margins.bottom - myInsets.bottom ;
break;
default:
case 0:
top=0;
top=((h - hCtr + margins.top - margins.bottom + myInsets.top - myInsets.bottom)/2|0);
if (!this.isLabel) top-=myInsets.top;
break;
}
C$.addJSKeyVal$O$SA(cssCtr, Clazz_array(String, -1, ["top", top + "px"]));
var itop;
var yoff=null;
var iscale="";
var voff="";
switch (vTextPos) {
case 1:
top=itop=0;
if (hIcon > 0 && hTextPos == 0 ) {
itop=-1;
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["top", "0px"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["top", hText + gap + "px" ]));
} else {
voff=" translateY(" + margins.top + "px)" ;
}break;
case 3:
top=itop=100;
if (hIcon > 0 && hTextPos == 0 ) {
itop=-1;
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["top", "0px"]));
C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["top", hIcon + gap + "px" ]));
} else {
voff=" translateY(-" + margins.bottom + "px)" ;
}break;
default:
case 0:
top=itop=50;
if (this.iconNode === this.actionNode ) {
itop=70;
iscale="scale(0.8,0.8)";
}break;
}
if (itop >= 0) {
if (!this.isLabel || !this.isMenuBarLabel ) C$.addJSKeyVal$O$SA(cssTxt, Clazz_array(String, -1, ["top", top + "%", "transform", "translateY(" + (yoff == null  ? "-" + top + "%"  : yoff) + ")" + voff ]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["top", top + "%", "transform", "translateY(-" + itop + "%)" + voff + iscale ]));
}} else {
$I$(5).setStyle(this.menuAnchorNode, "height", "1em");
if (hasItemIconAndAction) {
C$.addJSKeyVal$O$SA(cssAction, Clazz_array(String, -1, ["top", "65%", "transform", "translateY(-100%) scale(0.6)"]));
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["top", "50%", "transform", "translateY(-80%)"]));
} else {
C$.addJSKeyVal$O$SA(cssIcon, Clazz_array(String, -1, ["top", "50%", "transform", "translateY(-80%)"]));
}}}p$1.setCSS$O$swingjs_api_js_DOMNode.apply(this, [cssCtr, this.centeringNode]);
p$1.setCSS$O$swingjs_api_js_DOMNode.apply(this, [cssIcon, this.iconNode]);
if (hasItemIconAndAction) p$1.setCSS$O$swingjs_api_js_DOMNode.apply(this, [cssAction, this.actionNode]);
p$1.setCSS$O$swingjs_api_js_DOMNode.apply(this, [cssTxt, this.textNode]);
if (this.cellComponent != null ) this.updateCellNode$();
});

Clazz_newMeth(C$, 'setMenuAnchorAndAccelerator$javax_swing_AbstractButton$I$Z$java_awt_Insets',  function (b, wCtr, ltr, margins) {
if (this.isLabel) {
return;
}var wAccel=0;
if (this.isMenu) {
$I$(5).setPositionAbsolute(this.textNode);
} else {
var accel=p$1.getAccelStr$javax_swing_JMenuItem.apply(this, [b]);
var accelNode=this.menuAnchorNode;
accelNode=accelNode.children[1] ||null;
if ((accelNode == null ) != (accel == null ) ) {
if (accel == null ) {
$I$(5).remove(accelNode);
} else {
this.menuAnchorNode.appendChild(accelNode=$I$(5).createElement("span", this.id + "_acc"));
this.addClass$swingjs_api_js_DOMNode$S(accelNode, "ui-j2smenu-accel");
$I$(5).setAttr(accelNode, "role", "menuitem");
$I$(5).setStyle(accelNode, "font-size", "0.8em");
this.setMenuItem$swingjs_api_js_DOMNode(accelNode);
}}if (accel != null ) {
$I$(5).setStyle(accelNode, "float", null);
$I$(5).setAttr(accelNode, "innerHTML", accel);
wAccel=this.getHTMLSize$swingjs_api_js_DOMNode(accelNode).width;
$I$(5,"setStyles",[accelNode, ["float", ltr ? "right" : "left", "text-align", ltr ? "right" : "left", "margin", "0px 5px", "transform", "translateY(15%)"]]);
}}if (!this.isMenu || this.isMenuItem && this.currentText != null   && this.currentText.length$() > 0  ) $I$(5,"setStyle",[this.menuAnchorNode, "min-width", Math.max(75, (23 + 15 + wCtr + wAccel + margins.left + margins.right )) + "px"]);
}, p$1);

Clazz_newMeth(C$, 'fullyCenter$O$Z',  function (css, noOffsets) {
if (noOffsets) C$.addJSKeyVal$O$SA(css, Clazz_array(String, -1, ["width", null, "position", null, "padding", "0", "margin", "0 auto"]));
 else C$.addJSKeyVal$O$SA(css, Clazz_array(String, -1, ["width", null, "top", "50%", "left", "50%", "transform", "translateX(-50%)translateY(-50%)translateY(0.5px)translateX(0.5px)", "position", "absolute"]));
}, p$1);

Clazz_newMeth(C$, 'getJSObject$',  function () {
return {} ||null;
}, 1);

Clazz_newMeth(C$, 'addJSKeyVal$O$SA',  function (o, kv) {
for (var i=0, n=kv.length; i < n; i++) {

o[kv[i++]] = kv[i];
}
}, 1);

Clazz_newMeth(C$, 'setCSS$O$swingjs_api_js_DOMNode',  function (css, node) {
if (node == null ) return;

for (var a in css)node.style[a] = css[a];
}, p$1);

Clazz_newMeth(C$, 'updateCellNode$',  function () {
if (this.cellWidth == 0 || this.cellHeight == 0 ) {
return;
}if (this.allowPaintedBackground || this.isMenu && !this.isMenuItem  ) $I$(5).setStyles(this.domNode, ["background", "transparent"]);
if (Clazz_instanceOf(this.cellComponent, "javax.swing.JTable.BooleanRenderer") || this.cellComponent.getClientProperty$O("_jsBooleanEditor") != null  ) {
$I$(5).setStyles(this.centeringNode, ["width", "100%", "height", "100%"]);
$I$(5).setStyles(this.buttonNode, ["width", "100%", "height", "100%"]);
$I$(5,"setStyles",[this.actionNode, ["position", "absolute", "width", "14px", "height", "14px", "top", ((this.cellHeight/2|0)) + "px"]]);
var textAlign=(this.cellComponent).getHorizontalAlignment$();
var width=this.cellWidth;
switch (textAlign) {
case 4:
case 11:
$I$(5,"setStyles",[this.actionNode, ["left", width + "px", "transform", "scale(0.75,0.75) translate(-25px,-20px)"]]);
break;
case 2:
case 10:
$I$(5,"setStyles",[this.actionNode, ["left", "0px", "top", "50%", "transform", "scale(0.75,0.75) translateX(-50%) translateY(-50%) translate(-10px,-10px)"]]);
break;
case 0:
$I$(5,"setStyles",[this.actionNode, ["left", "50%", "top", "50%", "transform", "scale(0.75,0.75) translateX(-50%) translateY(-50%) translate(-10px,-10px)"]]);
break;
}
}});

Clazz_newMeth(C$, 'getButtonMargins$javax_swing_AbstractButton$Z',  function (b, includeOuter) {
return (includeOuter ? b.getInsets$() : Clazz_instanceOf(b.getBorder$(), "javax.swing.border.CompoundBorder") ? (b.getBorder$()).getInsideBorder$().getBorderInsets$java_awt_Component(b) : null);
}, p$1);

Clazz_newMeth(C$, 'getButtonOuterInsets$javax_swing_AbstractButton',  function (b) {
if (Clazz_instanceOf(b.getBorder$(), "javax.swing.border.CompoundBorder")) {
return (b.getBorder$()).getOutsideBorder$().getBorderInsets$java_awt_Component(b);
}return b.getInsets$();
});

Clazz_newMeth(C$, 'getFont$',  function () {
var f=this.c.getFont$();
return (f == null  ? $I$(15).dialogPlain12 : f);
});

Clazz_newMeth(C$, 'getAccelStr$javax_swing_JMenuItem',  function (b) {
var ks=b.getAccelerator$();
if (ks != null ) {
var k=$I$(16,"getKeyText$I",[ks.getKeyCode$()]);
if (k === "Escape" ) k="Esc";
var s=$I$(16,"getKeyModifiersText$I",[ks.getModifiers$()]);
return s + (s === ""  ? "" : "-") + k ;
}return null;
}, p$1);

Clazz_newMeth(C$, 'handleEvent$java_awt_AWTEvent',  function (e) {
});

Clazz_newMeth(C$, 'coalescePaintEvent$java_awt_event_PaintEvent',  function (e) {
});

Clazz_newMeth(C$, 'getLocationOnScreen$',  function () {
var offset=this.$$O(this.outerNode == null  ? this.jc.getParent$().秘getUI$().outerNode : this.outerNode).offset();
return Clazz_new_($I$(17,1).c$$I$I,[offset.left, offset.top]);
});

Clazz_newMeth(C$, 'getColorModel$',  function () {
return $I$(18).getDefaultToolkit$().getColorModel$();
});

Clazz_newMeth(C$, 'getToolkit$',  function () {
return $I$(18).getDefaultToolkit$();
});

Clazz_newMeth(C$, 'getGraphics$',  function () {
return null;
});

Clazz_newMeth(C$, 'getFontMetrics$java_awt_Font',  function (font) {
return null;
});

Clazz_newMeth(C$, 'dispose$',  function () {
if (this.isUIDisabled) return;
if (this.cellComponent != null ) {
$I$(5).setVisible(this.domNode, false);
return;
}this.isDisposed=true;
$I$(5).dispose(this.domNode);
if (this.domNode !== this.outerNode ) $I$(5).dispose(this.outerNode);
});

Clazz_newMeth(C$, 'undisposeUI$swingjs_api_js_DOMNode',  function (node) {
if (!this.isDisposed) return;
var parent=this.c.getParent$();
if (node != null  && parent != null  ) {
var ui=this.c.getParent$().秘getUI$();
if (ui.containerNode != null ) ui.containerNode.appendChild(node);
}if (this.outerNode != null  && this.domNode != null   && this.domNode !== this.outerNode  ) {
this.outerNode.appendChild(this.domNode);
}this.isDisposed=false;
});

Clazz_newMeth(C$, 'setForegroundCUI$java_awt_Color',  function (c) {
this.setForegroundFor$swingjs_api_js_DOMNode$java_awt_Color(this.domNode, c);
});

Clazz_newMeth(C$, 'setForegroundFor$swingjs_api_js_DOMNode$java_awt_Color',  function (node, color) {
if (node != null ) $I$(5,"setStyle",[node, "color", (color == null  ? "rgba(0,0,0,0)" : C$.toCSSString$java_awt_Color(color == null  ? $I$(4).black : color))]);
});

Clazz_newMeth(C$, 'setFont$java_awt_Font',  function (f) {
});

Clazz_newMeth(C$, 'createImage$java_awt_image_ImageProducer',  function (producer) {
$I$(1).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'createImage$I$I',  function (width, height) {
$I$(1).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'createVolatileImage$I$I',  function (width, height) {
$I$(1).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'prepareImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (img, w, h, o) {
$I$(1).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'checkImage$java_awt_Image$I$I$java_awt_image_ImageObserver',  function (img, w, h, o) {
$I$(1).notImplemented$S("");
return 0;
});

Clazz_newMeth(C$, 'getGraphicsConfiguration$',  function () {
$I$(1).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'handlesWheelScrolling$',  function () {
$I$(1).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'getBackBuffer$',  function () {
$I$(1).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'destroyBuffers$',  function () {
$I$(1).notImplemented$S("");
});

Clazz_newMeth(C$, 'reparent$java_awt_peer_ContainerPeer',  function (newContainer) {
$I$(1).notImplemented$S("");
});

Clazz_newMeth(C$, 'isReparentSupported$',  function () {
$I$(1).notImplemented$S("");
return false;
});

Clazz_newMeth(C$, 'layout$',  function () {
});

Clazz_newMeth(C$, 'getBounds$',  function () {
$I$(1).notImplemented$S("");
return null;
});

Clazz_newMeth(C$, 'getInheritedZ$javax_swing_JComponent',  function (c) {
return c.秘getUI$().getInheritedZ$();
}, 1);

Clazz_newMeth(C$, 'getInheritedZ$',  function () {
var node=this.domNode;
var base=9000;
var z=0;

while (node && !node.style["z-index"]) node = node.parentElement;
!(z = +(node && node.style["z-index"])) && (z = base);
return z;
});

Clazz_newMeth(C$, 'setZ$I',  function (z) {
if (z == -30000) return;
$I$(5).setPositionAbsolute(this.domNode);
$I$(5).setZ(this.domNode, z);
$I$(5).setZ(this.outerNode, z);
});

Clazz_newMeth(C$, 'containerToFront$javax_swing_JComponent',  function (c) {
var root=c.getRootPane$();
var w=(root == null  ? null : root.getParent$());
if (Clazz_instanceOf(w, "java.awt.Window")) (w).toFront$();
}, 1);

Clazz_newMeth(C$, 'getInsets$',  function () {
return null;
});

Clazz_newMeth(C$, 'beginValidate$',  function () {
});

Clazz_newMeth(C$, 'endValidate$',  function () {
});

Clazz_newMeth(C$, 'beginLayout$',  function () {
if (!this.boundsSet && !this.isContainer ) this.setVisible$Z(false);
this.isLaidOut=false;
this.layingOut=true;
});

Clazz_newMeth(C$, 'endLayout$',  function () {
this.layingOut=false;
this.isLaidOut=true;
});

Clazz_newMeth(C$, 'getId$',  function () {
return this.id;
});

Clazz_newMeth(C$, 'dumpEvent$java_util_EventObject',  function (e) {
return e.toString();
});

Clazz_newMeth(C$, 'toCSSString$java_awt_Color',  function (c) {
return $I$(6).getCSSColor$java_awt_Color$Z(c, false);
}, 1);

Clazz_newMeth(C$, 'updateSceneGraph$javax_swing_JComponent$javax_swing_JComponent$swingjs_JSGraphics2D',  function (comp, owner, g) {
var node=(comp.ui).outerNode;
var x=0;
var y=0;
{
x = g.$transform.m02; y = g.$transform.m12;
if (x == node.lastSceneX && y == node.lastSceneY) return;
node.lastSceneX = x; node.lastSceneY = y;
}
$I$(5).setStyles(node, ["left", x + "px", "top", y + "px"]);
{
if (node.parentElement == null) owner.ui.outerNode.appendChild(node);
}
}, 1);

Clazz_newMeth(C$, 'getPropertyPrefix$',  function () {
var s=this.jc.getUIClassID$();
return (s == null  ? null : s.substring$I$I(0, s.length$() - 2));
});

Clazz_newMeth(C$, 'setPadding$java_awt_Insets',  function (padding) {
$I$(5,"setStyles",[this.domNode, ["padding", padding == null  ? "0px" : padding.top + "px " + padding.left + "px " + padding.bottom + "px " + padding.right + "px" ]]);
});

Clazz_newMeth(C$, 'addDropTarget$java_awt_dnd_DropTarget',  function (t) {
if (this.dropTarget === t ) return;
this.dropTarget=t;
p$1.setDropTarget$Z.apply(this, [true]);
});

Clazz_newMeth(C$, 'removeDropTarget$java_awt_dnd_DropTarget',  function (t) {
if (this.dropTarget !== t ) return;
p$1.setDropTarget$Z.apply(this, [false]);
this.dropTarget=null;
});

Clazz_newMeth(C$, 'setDropTarget$Z',  function (adding) {
if (this.dropTarget === this ) return;
this.J2S.setDragDropTarget(this.c, this.getDOMNode$(), this.dropTarget != null );
}, p$1);

Clazz_newMeth(C$, 'invalidate$',  function () {
this.setTainted$();
});

Clazz_newMeth(C$, 'checkStopPopupMenuTimer$O$I$O',  function (target, eventType, jQueryEvent) {
if (target === this.domNode  && eventType == -1 ) {
var type=(jQueryEvent.type ||"");
if (type.equals$O("mouseenter") || type.equals$O("pointerenter") ) {
this.stopPopupMenuTimer$();
}}});

Clazz_newMeth(C$, 'startPopupMenuTimer$',  function () {
var ui=(this.jc).getPopupMenu$().getUI$();
ui.menuTimer=setTimeout(function() { ui.hideMenu$()},1000) ||0;
});

Clazz_newMeth(C$, 'stopPopupMenuTimer$',  function () {
var ui=(this.isPopupMenu ? this : this.jc.getParent$().getUI$());
var timer=ui.menuTimer;
if (timer != 0) {

clearTimeout(timer);
ui.menuTimer=0;
}});

Clazz_newMeth(C$, 'setRenderer$java_awt_JSComponent$I$I$swingjs_api_js_DOMNode',  function (rendererComponent, width, height, td) {
p$1.setComponent$javax_swing_JComponent.apply(this, [rendererComponent]);
if (this.isUIDisabled) {
p$1.updateTableCell$swingjs_api_js_DOMNode$Z.apply(this, [td, true]);
return;
}this.cellComponent=rendererComponent;
if (width == 0) return;
this.cellWidth=width;
this.cellHeight=height;
});

Clazz_newMeth(C$, 'reinstallUI$javax_swing_JComponent$javax_swing_JComponent',  function (oldC, newC) {
this.uninstallUI$javax_swing_JComponent(oldC);
p$1.uninstallJS.apply(this, []);
if (newC == null ) {
} else {
this.installJS$();
this.installUI$javax_swing_JComponent(newC);
}});

Clazz_newMeth(C$, 'setForeground$java_awt_Color',  function (c) {
this.awtPeerFG=null;
this.setForegroundFor$swingjs_api_js_DOMNode$java_awt_Color(this.domNode, c);
});

Clazz_newMeth(C$, 'setBackground$java_awt_Color',  function (c) {
this.awtPeerBG=null;
this.setBackgroundImpl$java_awt_Color(c);
});

Clazz_newMeth(C$, 'setBackgroundImpl$java_awt_Color',  function (color) {
if (this.domNode == null  || this.isMenuItem  || this.isUIDisabled ) return;
this.backgroundColor=color;
if ((this.jc.秘paintsSelf$() || (this.isContentPane || this.isLayeredPane ) && this.jc.秘setPaintsSelf$I(1) == 1  ) && this.jc.isOpaque$() ) {
this.clearPaintPath$();
}this.paintBackground$swingjs_JSGraphics2D(this.jc.秘gtemp);
});

Clazz_newMeth(C$, 'checkTransparent',  function () {
if (this.inPaintPath || this.domNode != null  && (this.cellComponent != null  || !this.c.isOpaque$() )  ) p$1.setTransparent.apply(this, []);
}, p$1);

Clazz_newMeth(C$, 'setTransparent',  function () {
if (this.allowPaintedBackground) $I$(5).setStyle(this.domNode, "background", "transparent");
}, p$1);

Clazz_newMeth(C$, 'paintBackground$swingjs_JSGraphics2D',  function (g) {
var color=(this.backgroundColor == null  ? this.getBackground$() : this.backgroundColor);
if (color == null ) return;
var isOpaque=this.c.isOpaque$();
var paintsSelf=this.jc.秘paintsSelf$();
if (g == null ) {
if (!paintsSelf) this.setBackgroundDOM$swingjs_api_js_DOMNode$java_awt_Color(this.domNode, color);
} else if (this.allowPaintedBackground && (isOpaque && (this.isPanel || this.isLabel && paintsSelf   || this.cellComponent != null   || this.jc.getComponentCount$() > 0 )  || this.jc.秘g != null  ) ) {
if (isOpaque == (color.getAlpha$() == 255) ) {
g.setBackground$java_awt_Color(color);
} else {
g.setBackground$java_awt_Color(Clazz_new_([color.getRed$(), color.getGreen$(), color.getBlue$(), isOpaque ? 255 : 0],$I$(4,1).c$$I$I$I$I));
}g.clearRect$I$I$I$I(0, 0, this.c.getWidth$(), this.c.getHeight$());
if (isOpaque) {
isOpaque=this.cellComponent == null  && !this.jc.秘paintsSelf$() ;
if (!isOpaque && this.isWindow ) {
var c=this.jc.getRootPane$().getContentPane$();
c.秘setPaintsSelf$I(1);
p$1.setTransparent.apply((c.ui), []);
}}}if (this.allowPaintedBackground && !isOpaque ) p$1.setTransparent.apply(this, []);
 else p$1.checkTransparent.apply(this, []);
});

Clazz_newMeth(C$, 'setBackgroundDOM$swingjs_api_js_DOMNode$java_awt_Color',  function (node, color) {
$I$(5,"setStyle",[node, "background-color", color == null  ? null : C$.toCSSString$java_awt_Color(color)]);
});

Clazz_newMeth(C$, 'clearPaintPath$',  function () {
var c=this.jc;
while (c != null ){
var ui=c.秘getUI$();
if (ui == null  || ui.isWindow ) return;
ui.inPaintPath=true;
c.秘setPaintsSelf$I(2);
p$1.setTransparent.apply(ui, []);
c=c.getParent$();
}
});

Clazz_newMeth(C$, 'isModalBlocked$',  function () {
return $I$(10).秘getTopInvokableAncestor$java_awt_Component$Z(this.jc, false).秘getUI$().modalBlocked;
});

Clazz_newMeth(C$, 'isDisplayable$',  function () {
return !this.isDisposed && this.domNode != null  ;
});

Clazz_newMeth(C$, 'setPasteHandler$swingjs_api_js_JSFunction',  function (handler) {
this.pasteHandler=handler;
if (this.domNode != null ) {
var oldHandler=$I$(5).getAttr(this.domNode, "paste-handler");
if (oldHandler === handler ) return;

oldHandler && this.domNode.removeEventListener("paste", oldHandler);
handler && this.domNode.addEventListener("paste", handler);
$I$(5,"setAttrs",[this.domNode, ["contentEditable", (handler == null  ? "\u79d8FALSE" : "\u79d8TRUE")]]);
this.j2sDoPropagate=(handler != null );
this.setFocusable$();
}});

Clazz_newMeth(C$, 'createItemNode$S$javax_swing_Icon$I$S$swingjs_api_js_DOMNode',  function (type, icon, gap, text, buttonNode) {
this.itemNode=C$.newDOMObject$S$S$SA("li", this.id, Clazz_array(String, -1, []));
if (text == null  && icon == null  ) return false;
$I$(5).setStyle(this.itemNode, "outline", "none");
this.menuAnchorNode=C$.newDOMObject$S$S$SA("div", this.id + "_a", Clazz_array(String, -1, []));
if (type !== "_bar" ) {
this.addClass$swingjs_api_js_DOMNode$S(this.menuAnchorNode, "a");
}this.itemNode.appendChild(this.menuAnchorNode);
this.setDoPropagate$();
if (buttonNode == null ) {
this.addCentering$swingjs_api_js_DOMNode(this.menuAnchorNode);
this.enableNode=this.itemNode;
this.setIconAndText$S$javax_swing_Icon$I$S("btn", icon, gap, text);
} else {
this.menuAnchorNode.appendChild(buttonNode);
this.setMenuItem$swingjs_api_js_DOMNode(buttonNode);
}this.setMenuItem$swingjs_api_js_DOMNode(this.menuAnchorNode);
this.setMenuItem$();
return true;
});

Clazz_newMeth(C$, 'setMenuItem$',  function () {
this.setMenuItem$swingjs_api_js_DOMNode(this.itemNode);
this.setMenuItem$swingjs_api_js_DOMNode(this.iconNode);
if (this.actionNode != null  && this.actionNode !== this.iconNode  ) this.setMenuItem$swingjs_api_js_DOMNode(this.actionNode);
this.setMenuItem$swingjs_api_js_DOMNode(this.textNode);
this.setMenuItem$swingjs_api_js_DOMNode(this.centeringNode);
});

C$.$static$=function(){C$.$static$=0;
C$.frameZ=19000;
C$.jquery=$I$(1).getJQuery$();
C$.NULL=null;
C$.ZERO_SIZE=Clazz_new_($I$(2,1).c$$I$I,[0, 0]);
C$.ANY_SIZE=Clazz_new_($I$(2,1).c$$I$I,[2147483647, 2147483647]);
C$.re0=new RegExp("\u0000","gm") ||null;
C$.reSpace=new RegExp(" ","gm") ||null;
C$.reLT=new RegExp("<","gm") ||null;
C$.zeroInsets=Clazz_new_($I$(3,1).c$$I$I$I$I,[0, 0, 0, 0]);
};
;
(function(){/*i*/var C$=Clazz_newInterface(P$.JSComponentUI, "Embeddable", function(){
});
})()
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:54 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
/*i*/var C$=Clazz_newInterface(P$, "JSEventHandler");
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:55 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'java.awt.Insets','swingjs.plaf.JSComponentUI','swingjs.api.js.DOMNode','javax.swing.SwingUtilities','swingjs.JSUtil','swingjs.plaf.JSPopupMenuUI','java.awt.Toolkit','java.awt.event.ComponentEvent','javax.swing.Timer','java.awt.event.WindowEvent','javax.swing.LookAndFeel','java.awt.Rectangle']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSFrameUI", null, 'swingjs.plaf.JSWindowUI', ['java.awt.peer.FramePeer', ['swingjs.plaf.JSComponentUI','swingjs.plaf.JSComponentUI.Embeddable']]);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['isInternalFrame','doEmbed','isHidden'],'I',['state','zModal'],'S',['appletPrefix'],'O',['frame','javax.swing.JFrame','closerWrap','swingjs.api.js.DOMNode','bounds','java.awt.Rectangle']]
,['O',['ZERO_INSETS','java.awt.Insets']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
$I$(2).frameZ+=1000;
this.z=$I$(2).frameZ;
this.isContainer=true;
this.defaultHeight=500;
this.defaultWidth=500;
this.setDoc$();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.domNode == null ) {
this.containerNode=this.frameNode=this.domNode=$I$(2,"newDOMObject$S$S$SA",["div", this.id + "_frame", Clazz_array(String, -1, [])]);
if (this.isDummyFrame) {
$I$(3).setVisible(this.domNode, false);
return this.domNode;
}var w=this.c.getWidth$();
var h=this.c.getHeight$();
if (w == 0) w=this.defaultWidth;
if (h == 0) h=this.defaultHeight;
$I$(3).setSize(this.frameNode, w, h);
$I$(3).setTopLeftAbsolute(this.frameNode, 0, 0);
var node=this.getEmbedded$S("init");
if (node != null ) {
this.embeddingNode=node;
this.doEmbed=($I$(3).getWidth(node) > 0);
this.isHidden=!this.doEmbed;
}this.setWindowClass$();
if (!this.frame.isUndecorated$()) {
$I$(3).setStyles(this.frameNode, ["box-shadow", "0px 0px 10px gray", "box-sizing", "content-box"]);
this.titleBarNode=$I$(2,"newDOMObject$S$S$SA",["div", this.id + "_titlebar", Clazz_array(String, -1, [])]);
$I$(3).setTopLeftAbsolute(this.titleBarNode, 0, 0);
$I$(3).setStyles(this.titleBarNode, ["background-color", "#E0E0E0", "height", "20px", "font-size", "14px", "font-family", "sans-serif", "font-weight", "bold"]);
this.titleNode=$I$(2,"newDOMObject$S$S$SA",["label", this.id + "_title", Clazz_array(String, -1, [])]);
$I$(3).setTopLeftAbsolute(this.titleNode, 0, 0);
$I$(3).setStyles(this.titleNode, ["background-color", "#E0E0E0", "height", "20px", "overflow", "hidden"]);
this.closerWrap=$I$(2,"newDOMObject$S$S$SA",["div", this.id + "_closerwrap", Clazz_array(String, -1, [])]);
$I$(3).setTopLeftAbsolute(this.closerWrap, 0, 0);
$I$(3).setStyle(this.closerWrap, "text-align", "right");
this.closerNode=$I$(2,"newDOMObject$S$S$SA",["label", this.id + "_closer", Clazz_array(String, -1, ["innerHTML", "X"])]);
$I$(3).setStyles(this.closerNode, ["width", "20px", "height", "20px", "position", "absolute", "text-align", "center", "right", "0px"]);
this.frameNode.appendChild(this.titleBarNode);
this.titleBarNode.appendChild(this.titleNode);
this.titleBarNode.appendChild(this.closerWrap);
this.closerWrap.appendChild(this.closerNode);
$I$(3).setStyle(this.closerNode, "background-color", "#DDD");
}this.bindWindowEvents$();
var s=this.getInsets$();
$I$(3).setTopLeftAbsolute(this.frameNode, 0, 0);
$I$(3,"setAttrs",[this.frameNode, ["width", "" + this.frame.getWidth$() + s.left + s.right , "height", "" + this.frame.getHeight$() + s.top + s.bottom ]]);
this.addFocusHandler$();
}var strColor=$I$(2,"toCSSString$java_awt_Color",[this.c.getBackground$()]);
$I$(3).setStyle(this.domNode, "background-color", strColor);
$I$(3).setStyle(this.frameNode, "background", strColor);
$I$(3,"setStyle",[this.frameNode, "color", $I$(2,"toCSSString$java_awt_Color",[this.c.getForeground$()])]);
this.setInnerComponentBounds$I$I(this.width, this.height);
this.setTitle$S(this.frame.getTitle$());
if (!this.isDummyFrame) {
$I$(3,"setVisible",[this.domNode, this.jc.isVisible$()]);
}return this.domNode;
});

Clazz_newMeth(C$, 'getEmbedded$S',  function (type) {
var name=this.frame.getName$();
switch (type) {
case "name":
return name;
case "init":
var node=this.getEmbedded$S("node");
if (node == null ) return null;
var dim=this.getEmbedded$S("dim");
if (dim.width > 0) {
this.frame.setUndecorated$Z(true);
this.frame.setLocation$I$I(0, 0);
$I$(3).setStyles(this.containerNode, ["width", dim.width + "px", "height", dim.height + "px"]);
var resize=$I$(3).getStyle(node, "resize");
if (resize === "none" ) {
$I$(4,"invokeLater$Runnable",[((P$.JSFrameUI$lambda1||
(function(){/*m*/var C$=Clazz_newClass(P$, "JSFrameUI$lambda1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'Runnable', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);
/*lambda_E*/
Clazz_newMeth(C$, 'run$',  function () /*block*/{
this.b$['swingjs.plaf.JSFrameUI'].frame.秘freezeBounds$I$I.apply(this.b$['swingjs.plaf.JSFrameUI'].frame, [this.$finals$.dim.width, this.$finals$.dim.height]);
});
})()
), Clazz_new_(P$.JSFrameUI$lambda1.$init$,[this, {dim:dim}]))]);
}} else {
$I$(3).setStyles(node, ["position", "relative", "overflow", "hidden"]);
}return node;
default:
if (this.appletPrefix == null ) {
this.appletPrefix=$I$(3,"getAttr",[$I$(5).getHTML5Applet$java_awt_Component(this.jc), "_id"]) + "-";
if ($I$(3).getEmbedded(this.appletPrefix + name, "node") == null ) this.appletPrefix="";
}return $I$(3).getEmbedded(this.appletPrefix + name, type);
}
});

Clazz_newMeth(C$, 'isFrameIndependent$',  function () {
return !this.doEmbed;
});

Clazz_newMeth(C$, 'setZ$I',  function (z) {
if (this.doEmbed) z=999;
C$.superclazz.prototype.setZ$I.apply(this, [z]);
});

Clazz_newMeth(C$, 'setDraggableEvents$',  function () {
if (this.doEmbed || this.frame.isUndecorated$() ) return;
var fnode=this.frameNode;
var fGetFrameParent=null;
{
var me = this; fGetFrameParent = function(mode, x, y) { switch(arguments.length) { case 1: if (mode == 501) me.selected$(); me.hideMenu$(); return $(fnode).parent(); case 3: if (mode == 506) { me.moveFrame$I$I(x, y); return null; } } return null; }
}
this.J2S.setDraggable(this.titleBarNode, fGetFrameParent);
});

Clazz_newMeth(C$, 'selected$',  function () {
(this.jc).toFront$();
});

Clazz_newMeth(C$, 'hideMenu$',  function () {
$I$(2).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'moveFrame$I$I',  function (x, y) {
if (!this.isInternalFrame) {
x=Math.max(30 - this.frame.getWidth$(), x);
y=Math.max(0, y);
}$I$(6).closeAllMenus$();
this.frame.setLocation$I$I(x, y);
});

Clazz_newMeth(C$, 'getMoveCoords$I$I',  function (x, y) {
return Clazz_array(Integer.TYPE, -1, [x, y]);
});

Clazz_newMeth(C$, 'notifyFrameMoved$',  function () {
this.toFront$();
$I$(7).getEventQueue$().postEvent$java_awt_AWTEvent(Clazz_new_($I$(8,1).c$$java_awt_Component$I,[this.frame, 100]));
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O',  function (target, eventType, jQueryEvent) {
if (target === this.closerNode  && eventType == -1 ) {
switch (jQueryEvent.type ||"") {
case "click":
case "pointerup":
case "mouseup":
this.frameCloserAction$();
return true;
case "pointerout":
case "mouseout":
$I$(3).setStyle(this.closerNode, "background-color", "#DDD");
return true;
case "pointerenter":
case "mouseenter":
$I$(3).setStyle(this.closerNode, "background-color", "red");
return true;
}
}return false;
});

Clazz_newMeth(C$, 'frameCloserAction$',  function () {
var t=Clazz_new_([100, ((P$.JSFrameUI$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSFrameUI$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, null, 'java.awt.event.ActionListener', 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['swingjs.plaf.JSFrameUI'].frame.dispatchEvent$java_awt_AWTEvent(Clazz_new_($I$(10,1).c$$java_awt_Window$I,[this.b$['swingjs.plaf.JSFrameUI'].frame, 201]));
});
})()
), Clazz_new_(P$.JSFrameUI$1.$init$,[this, null]))],$I$(9,1).c$$I$java_awt_event_ActionListener);
t.setRepeats$Z(false);
t.start$();
});

Clazz_newMeth(C$, 'closeFrame$',  function () {
if (!this.frame.isUndecorated$()) {
var tbar=this.titleBarNode;
{
J2S.setDraggable(tbar, false);
}
}this.J2S.unsetMouse(this.frameNode);
this.$$O(this.frameNode).remove();
this.$$O(this.outerNode).remove();
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I',  function (width, height) {
$I$(3).setStyles(this.closerWrap, ["text-align", "right", "width", width + "px"]);
$I$(3,"setStyles",[this.titleNode, ["width", (width - 4) + "px", "height", "20px"]]);
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
this.frame=this.c;
this.isDummyFrame=jc.__CLASS_NAME__ == "javax.swing.SwingUtilities.SharedOwnerFrame" ||false;
this.frame.addWindowListener$java_awt_event_WindowListener(this);
this.frame.addComponentListener$java_awt_event_ComponentListener(this);
$I$(11).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "Frame.background", "Frame.foreground", "Frame.font");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent',  function (jc) {
this.closeFrame$();
this.frame.removeWindowListener$java_awt_event_WindowListener(this);
});

Clazz_newMeth(C$, 'setTitle$S',  function (title) {
if (this.titleNode != null ) $I$(3).setAttr(this.titleNode, "innerHTML", title);
});

Clazz_newMeth(C$, 'setMenuBar$O',  function (mb) {
});

Clazz_newMeth(C$, 'setResizable$Z',  function (resizeable) {
});

Clazz_newMeth(C$, 'setState$I',  function (state) {
this.state=state;
});

Clazz_newMeth(C$, 'getState$',  function () {
return this.state;
});

Clazz_newMeth(C$, 'setMaximizedBounds$java_awt_Rectangle',  function (bounds) {
});

Clazz_newMeth(C$, 'setBoundsPrivate$I$I$I$I',  function (x, y, width, height) {
this.bounds=Clazz_new_($I$(12,1).c$$I$I$I$I,[x, y, width, height]);
});

Clazz_newMeth(C$, 'getBoundsPrivate$',  function () {
return this.bounds;
});

Clazz_newMeth(C$, 'getInsets$',  function () {
var i=(this.isDummyFrame ? null : this.frame.isUndecorated$() ? C$.ZERO_INSETS : this.jc.getFrameViewer$().getInsets$());
return i;
});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (e) {
if (e.getPropertyName$().equals$O("resizable")) {
var resizable=(e.getNewValue$()).booleanValue$();
if (this.jc.getFrameViewer$().isResizable$() == resizable ) return;
this.jc.getFrameViewer$().setResizable$Z(resizable);
}C$.superclazz.prototype.propertyChange$java_beans_PropertyChangeEvent.apply(this, [e]);
});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
if (this.isDummyFrame) b=false;
C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
if (this.isModal$()) {
this.modalBlocked=b;
if (b) {
this.$$O(this.body).after(this.modalNode);
this.addClass$swingjs_api_js_DOMNode$S(this.modalNode, "swingjs-window");
var sz=$I$(3).getStyle(this.domNode, "z-index");
var z=(+sz ||this.getInheritedZ$()) - 1;
$I$(3).setZ(this.modalNode, z);
}$I$(3).setVisible(this.modalNode, b);
}$I$(3).setVisible(this.domNode, b);
});

Clazz_newMeth(C$, 'isModal$',  function () {
return false;
});

C$.$static$=function(){C$.$static$=0;
C$.ZERO_INSETS=Clazz_new_($I$(1,1).c$$I$I$I$I,[0, 0, 0, 0]);
};
})();
;Clazz_setTVer('5.0.1-v7');//Created 2025-04-13 12:36:32 Java2ScriptVisitor version 5.0.1-v7 net.sf.j2s.core.jar version 5.0.1-v7

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.plaf.JSComponentUI']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSLayeredPaneUI", null, 'swingjs.plaf.JSPanelUI');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.isContainer=this.isLayeredPane=true;
}, 1);

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.domNode == null ) {
this.containerNode=this.domNode=$I$(1,"newDOMObject$S$S$SA",["div", this.id, Clazz_array(String, -1, [])]);
}return this.domNode;
});

Clazz_newMeth(C$, 'getHTMLSizePreferred$swingjs_api_js_DOMNode$Z',  function (obj, addCSS) {
return C$.superclazz.prototype.getHTMLSizePreferred$swingjs_api_js_DOMNode$Z.apply(this, [obj, addCSS]);
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent',  function (jc) {
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:56 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[];
/*c*/var C$=Clazz_newClass(P$, "JSLightweightUI", null, 'swingjs.plaf.JSComponentUI', 'java.awt.peer.LightweightPeer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:56 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.plaf.JSComponentUI','swingjs.api.js.DOMNode','java.awt.Dimension','javax.swing.LookAndFeel']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSPanelUI", null, 'swingjs.plaf.JSLightweightUI', 'java.awt.peer.ContainerPeer');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.$frameZ=10000;
},1);

C$.$fields$=[['I',['$frameZ']]]

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.isContainer=this.isPanel=true;
this.setDoc$();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
var root=this.jc.getRootPane$();
var isGlassPane=(root != null  && root.getGlassPane$() === this.c  );
var isNew=(this.domNode == null );
if (isNew) {
this.containerNode=this.domNode=$I$(1,"newDOMObject$S$S$SA",["div", this.id, Clazz_array(String, -1, [])]);
$I$(2).setStyle(this.domNode, "outline", "none");
if (isGlassPane) {
$I$(2).setVisible(this.domNode, false);
}}if (isGlassPane) {
this.addLocalCanvas$Z(false);
$I$(2).setZ(this.domNode, 1);
}this.isContentPane=(root != null  && this.jc === root.getContentPane$()  );
if (this.isContentPane) this.checkAllowDivOverflow$();
return this.updateDOMNodeCUI$();
});

Clazz_newMeth(C$, 'getHTMLSizePreferred$swingjs_api_js_DOMNode$Z',  function (obj, addCSS) {
return Clazz_new_([this.c.getWidth$(), this.c.getHeight$()],$I$(3,1).c$$I$I);
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
$I$(4).installColorsAndFont$javax_swing_JComponent$S$S$S(jc, "Panel.background", "Panel.foreground", "Panel.font");
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent',  function (jc) {
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent',  function (jc) {
return null;
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:57 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.plaf.JSComponentUI']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSRootPaneUI", null, 'swingjs.plaf.JSLightweightUI');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['resizer','swingjs.plaf.Resizer']]]

Clazz_newMeth(C$, 'setResizer$swingjs_plaf_Resizer',  function (resizer) {
this.resizer=resizer;
});

Clazz_newMeth(C$, 'c$',  function () {
Clazz_super_(C$, this);
this.isRootPane=this.isContainer=true;
this.setDoc$();
}, 1);

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.domNode == null ) {
this.domNode=$I$(1,"newDOMObject$S$S$SA",["div", this.id, Clazz_array(String, -1, [])]);
this.addFocusHandler$();
}this.checkAllowDivOverflow$();
return this.domNode;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent',  function (jc) {
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent',  function (jc) {
return null;
});

Clazz_newMeth(C$, 'setInnerComponentBounds$I$I',  function (width, height) {
var resizer=this.jc.getFrameViewer$().getResizer$();
if (resizer != null ) resizer.setPosition$I$I(0, 0);
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:57 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.api.js.DOMNode','swingjs.plaf.JSComponentUI','java.awt.Dimension','swingjs.JSToolkit','java.awt.event.ActionEvent','javax.swing.InputMap','javax.swing.KeyStroke','swingjs.plaf.JSLabelUI']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSTextFieldUI", null, 'swingjs.plaf.JSTextUI');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.inputType="text";
},1);

C$.$fields$=[['S',['inputType'],'O',['textField','javax.swing.JTextField','jsmap','javax.swing.InputMap']]]

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
this.textField=this.editor;
if (this.domNode == null ) {
this.allowPaintedBackground=false;
this.focusNode=this.enableNode=this.valueNode=this.domNode=$I$(1,"setStyles",[$I$(2,"newDOMObject$S$S$SA",["input", this.id, Clazz_array(String, -1, ["size", "1", "type", this.inputType, "spellcheck", "\u79d8FALSE"])]), ["lineHeight", "0.8", "box-sizing", "border-box"]]);
this.bindJSKeyEvents$swingjs_api_js_DOMNode$Z(this.focusNode, true);
}this.textListener.checkDocument$();
this.setCssFont$swingjs_api_js_DOMNode$java_awt_Font(this.setJSText$swingjs_api_js_DOMNode$S$S(this.focusNode, "value", this.setCurrentText$()), this.getFont$());
return C$.superclazz.prototype.updateDOMNode$.apply(this, []);
});

Clazz_newMeth(C$, 'getCSSAdjustment$Z$Z',  function (addingCSS, mutable) {
return mutable || !addingCSS  ? Clazz_new_($I$(3,1).c$$I$I,[0, addingCSS ? 0 : -2]) : $I$(2).ZERO_SIZE;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
this.textField=jc;
C$.superclazz.prototype.installUI$javax_swing_JComponent.apply(this, [jc]);
});

Clazz_newMeth(C$, 'handleEnter$',  function () {
var a=this.getActionMap$().get$O("notify-field-accept");
if (a != null ) {
$I$(4).setIsDispatchThread$Z(true);
a.actionPerformed$java_awt_event_ActionEvent(Clazz_new_([this.c, 1001, "notify-field-accept", System.currentTimeMillis$(), 0],$I$(5,1).c$$O$I$S$J$I));
$I$(4).setIsDispatchThread$Z(false);
}return true;
});

Clazz_newMeth(C$, 'getInputMap$',  function () {
var map=C$.superclazz.prototype.getInputMap$.apply(this, []);
if (!this.isAWT) {
if (this.jsmap == null ) {
this.jsmap=Clazz_new_($I$(6,1));
this.jsmap.put$javax_swing_KeyStroke$O($I$(7).getKeyStroke$I$I$Z(10, 0, false), "notify-field-accept");
}map.getParent$().setParent$javax_swing_InputMap(this.jsmap);
}return map;
});

Clazz_newMeth(C$, 'getPropertyPrefix$',  function () {
return "TextField";
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent',  function (c) {
return (this.isAWT ? this.getMinimumSize$javax_swing_JComponent(c) : C$.superclazz.prototype.getPreferredSize$javax_swing_JComponent.apply(this, [c]));
});

Clazz_newMeth(C$, 'getSizingWidth$',  function () {
var text=this.editor.getText$();
return (text == null  ? null : text.length$() + "ch");
});

Clazz_newMeth(C$, 'getMinimumSize$javax_swing_JComponent',  function (jc) {
return $I$(8).getMinimumSizePeer$javax_swing_JComponent$O$Z(jc, this.editor, false);
});

Clazz_newMeth(C$, 'getMaximumSize$javax_swing_JComponent',  function (jc) {
var d=C$.superclazz.prototype.getMaximumSize$javax_swing_JComponent.apply(this, [jc]);
if (!this.isAWT) d.width=2147483647;
return d;
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:14:59 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),p$1={},I$=[[0,'Error','javax.swing.text.DefaultEditorKit','java.awt.Point','java.awt.Cursor',['javax.swing.text.Position','.Bias'],['swingjs.plaf.JSTextUI','.RootView'],'swingjs.api.js.DOMNode','swingjs.plaf.JSComponentUI','swingjs.JSToolkit','swingjs.JSKeyEvent','javax.swing.UIManager','javax.swing.text.DefaultCaret','javax.swing.SwingUtilities','javax.swing.plaf.InputMapUIResource','javax.swing.plaf.ActionMapUIResource','javax.swing.TransferHandler','swingjs.plaf.TextListener','java.util.ArrayList',['java.awt.geom.Point2D','.Double']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSTextUI", function(){
Clazz_newInstance(this, arguments,0,C$);
}, 'swingjs.plaf.JSLightweightUI');
C$.$classes$=[['RootView',0],['TextActionWrapper',0],['FocusAction',0]];

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.editable=true;
this.rootView=Clazz_new_($I$(6,1),[this, null]);
this.useRootView=false;
},1);

C$.$fields$=[['Z',['editable','isEditorPane','useRootView'],'O',['editor','javax.swing.text.JTextComponent','rootView','swingjs.plaf.JSTextUI.RootView','textListener','swingjs.plaf.TextListener','charMap','java.util.ArrayList']]
,['O',['defaultKit','javax.swing.text.EditorKit','overflows','String[]','markDot','java.awt.Point','textCursor','java.awt.Cursor','discardBias','javax.swing.text.Position.Bias[]']]]

Clazz_newMeth(C$, 'getToolTipText$javax_swing_text_JTextComponent$java_awt_Point',  function (t, pt) {
return null;
});

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.editor.isOpaque$() && this.editor.isEnabled$() ) this.setBackgroundImpl$java_awt_Color(this.getBackground$());
this.setEditable$Z(this.editable);
if (this.editor.getCursor$() == null ) $I$(7).setStyle(this.domNode, "cursor", "text");
var cc=this.editor.getCaretColor$();
if (cc != null ) $I$(7,"setStyle",[this.domNode, "caret-color", $I$(8).toCSSString$java_awt_Color(cc)]);
this.setPadding$java_awt_Insets(this.editor.getMargin$());
return this.updateDOMNodeCUI$();
});

Clazz_newMeth(C$, 'getCursor$',  function () {
if ((!this.editor.isCursorSet$()) || Clazz_instanceOf(this.editor.getCursor$(), "javax.swing.plaf.UIResource") ) {
return (this.editor.isEditable$()) ? C$.textCursor : null;
}return C$.superclazz.prototype.getCursor$.apply(this, []);
});

Clazz_newMeth(C$, 'handleJSEvent$O$I$O',  function (target, eventType, jQueryEvent) {
if ($I$(9).isMouseEvent$I(eventType)) {
return false;
}var b=this.checkAllowEvent$O(jQueryEvent);
if (b != null ) return b.booleanValue$();
var keyCode=jQueryEvent.keyCode ||0;
var keyEvent=null;
var ret=false;
switch (eventType) {
case -2:
keyEvent=$I$(10).newJSKeyEvent$javax_swing_JComponent$O$I$Z(this.editor, jQueryEvent, 0, false);
if (keyEvent == null ) return true;
switch (keyCode) {
case 18:
$I$(9).consumeEvent$O(jQueryEvent);
case 17:
ret=true;
break;
}
eventType=keyEvent.getID$();
break;
}
if (keyEvent != null ) {
if (eventType == 402) {
this.handleJSTextEvent$I$O$I$Z(eventType, jQueryEvent, keyCode, false);
ret=true;
}this.editor.dispatchEvent$java_awt_AWTEvent(keyEvent);
var ignore=keyEvent.bdata.doPropagate ||false;
if (!ignore && keyEvent.isConsumed$() ) {
$I$(9).consumeEvent$O(jQueryEvent);
return true;
}if (!ignore && eventType == 401  && (keyEvent.getModifiersEx$() & (640)) != 0 ) {
var code=keyEvent.getKeyCode$();
if (code >= 65 && code <= 90 ) {
var c=String.fromCharCode((code & 31));

keyEvent.id = 400; keyEvent.keyCode = 0; keyEvent.keyChar = c; jQueryEvent.stopPropagation();
keyEvent.consumed = false;
this.editor.dispatchEvent$java_awt_AWTEvent(keyEvent);
$I$(9).consumeEvent$O(jQueryEvent);
if (keyEvent.isConsumed$()) {
return true;
}}}}if (ret != true ) {
this.handleJSTextEvent$I$O$I$Z(eventType, jQueryEvent, keyCode, false);
}return true;
});

Clazz_newMeth(C$, 'handleJSTextEvent$I$O$I$Z',  function (eventType, jQueryEvent, keyCode, trigger) {
this.textListener.handleJSTextEvent$swingjs_plaf_JSTextUI$I$O(this, eventType, jQueryEvent);
});

Clazz_newMeth(C$, 'checkStopPropagation$O$Z',  function (ev, handled) {
return false;
});

Clazz_newMeth(C$, 'undisposeUI$swingjs_api_js_DOMNode',  function (node) {
C$.superclazz.prototype.undisposeUI$swingjs_api_js_DOMNode.apply(this, [node]);
this.bindJSKeyEvents$swingjs_api_js_DOMNode$Z(this.focusNode, true);
});

Clazz_newMeth(C$, 'installDefaults$',  function () {
var prefix=this.getPropertyPrefix$();
var f=this.editor.getFont$();
if ((f == null  && !this.isAWT ) || (Clazz_instanceOf(f, "javax.swing.plaf.UIResource")) ) {
this.editor.setFont$java_awt_Font($I$(11).getFont$O(prefix + ".font"));
}this.setColors$S(prefix);
var margin=this.editor.getMargin$();
if (margin == null  || Clazz_instanceOf(margin, "javax.swing.plaf.UIResource") ) {
this.editor.setMargin$java_awt_Insets($I$(11).getInsets$O(prefix + ".margin"));
}});

Clazz_newMeth(C$, 'setBorder$S',  function (prefix) {
});

Clazz_newMeth(C$, 'setColors$S',  function (prefix) {
var bg=this.editor.getBackground$();
if ((bg == null ) || (Clazz_instanceOf(bg, "javax.swing.plaf.UIResource")) ) {
this.editor.setBackground$java_awt_Color($I$(11).getColor$O(prefix + ".background"));
}if (!this.isAWT) {
var fg=this.editor.getForeground$();
if ((fg == null ) || (Clazz_instanceOf(fg, "javax.swing.plaf.UIResource")) ) {
this.editor.setForeground$java_awt_Color($I$(11).getColor$O(prefix + ".foreground"));
}}var dfg=this.editor.getDisabledTextColor$();
if ((dfg == null ) || (Clazz_instanceOf(dfg, "javax.swing.plaf.UIResource")) ) {
this.editor.setDisabledTextColor$java_awt_Color($I$(11).getColor$O(prefix + ".inactiveForeground"));
}dfg=$I$(11).getColor$O(this.isAWT ? "control" : prefix + ".inactiveBackground");
if (dfg != null ) this.inactiveBackground=dfg;
});

Clazz_newMeth(C$, 'installDefaults2$',  function () {
var caret=this.editor.getCaret$();
if (caret == null  || Clazz_instanceOf(caret, "javax.swing.plaf.UIResource") ) {
this.editor.setCaret$javax_swing_text_Caret(((P$.JSTextUI$1||
(function(){/*a*/var C$=Clazz_newClass(P$, "JSTextUI$1", function(){Clazz_newInstance(this, arguments[0],1,C$);}, Clazz_load('javax.swing.text.DefaultCaret'), null, 1);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'paint$java_awt_Graphics',  function (g) {
});

Clazz_newMeth(C$, 'isVisible$',  function () {
return true;
});

Clazz_newMeth(C$, 'setVisible$Z',  function (v) {
});

Clazz_newMeth(C$, 'isSelectionVisible$',  function () {
return true;
});

Clazz_newMeth(C$, 'setSelectionVisible$Z',  function (v) {
});

Clazz_newMeth(C$, 'setBlinkRate$I',  function (rate) {
});

Clazz_newMeth(C$, 'getBlinkRate$',  function () {
return 0;
});

Clazz_newMeth(C$, 'toString',  function () {
return "caret[" + this.dot + "," + this.mark + "]" ;
});
})()
), Clazz_new_($I$(12,1),[this, null],P$.JSTextUI$1)));
}});

Clazz_newMeth(C$, 'uninstallDefaults$',  function () {
if (Clazz_instanceOf(this.editor.getCaretColor$(), "javax.swing.plaf.UIResource")) {
this.editor.setCaretColor$java_awt_Color(null);
}if (Clazz_instanceOf(this.editor.getSelectionColor$(), "javax.swing.plaf.UIResource")) {
this.editor.setSelectionColor$java_awt_Color(null);
}if (Clazz_instanceOf(this.editor.getDisabledTextColor$(), "javax.swing.plaf.UIResource")) {
this.editor.setDisabledTextColor$java_awt_Color(null);
}if (Clazz_instanceOf(this.editor.getSelectedTextColor$(), "javax.swing.plaf.UIResource")) {
this.editor.setSelectedTextColor$java_awt_Color(null);
}if (Clazz_instanceOf(this.editor.getBorder$(), "javax.swing.plaf.UIResource")) {
this.editor.setBorder$javax_swing_border_Border(null);
}if (Clazz_instanceOf(this.editor.getMargin$(), "javax.swing.plaf.UIResource")) {
this.editor.setMargin$java_awt_Insets(null);
}});

Clazz_newMeth(C$, 'installKeyboardActions$',  function () {
var km=this.getInputMap$();
if (km != null ) {
$I$(13).replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap(this.editor, 0, km);
}var map=this.getActionMap$();
if (map != null ) {
$I$(13).replaceUIActionMap$javax_swing_JComponent$javax_swing_ActionMap(this.editor, map);
}});

Clazz_newMeth(C$, 'getInputMap$',  function () {
var map=Clazz_new_($I$(14,1));
var shared=$I$(11,"get$O$java_util_Locale",[this.getPropertyPrefix$() + ".focusInputMap", null]);
if (shared != null ) {
map.setParent$javax_swing_InputMap(shared);
}return map;
});

Clazz_newMeth(C$, 'getActionMap$',  function () {
var mapName=this.classID + ".actionMap";
var map=$I$(11).get$O(mapName);
if (map == null ) {
map=this.createActionMap$();
if (map != null ) {
$I$(11).getLookAndFeelDefaults$().put$O$O(mapName, map);
}}return map;
});

Clazz_newMeth(C$, 'createActionMap$',  function () {
var map=Clazz_new_($I$(15,1));
var actions=this.editor.getActions$();
if (actions == null ) actions=this.getEditorKit$javax_swing_text_JTextComponent(this.editor).getActions$();
var n=(actions == null  ? 0 : actions.length);
for (var i=0; i < n; i++) {
var a=actions[i];
map.put$O$javax_swing_Action(a.getValue$S("Name"), a);
}
map.put$O$javax_swing_Action($I$(16).getCutAction$().getValue$S("Name"), $I$(16).getCutAction$());
map.put$O$javax_swing_Action($I$(16).getCopyAction$().getValue$S("Name"), $I$(16).getCopyAction$());
map.put$O$javax_swing_Action($I$(16).getPasteAction$().getValue$S("Name"), $I$(16).getPasteAction$());
return map;
});

Clazz_newMeth(C$, 'uninstallKeyboardActions$',  function () {
this.editor.setKeymap$javax_swing_text_Keymap(null);
$I$(13).replaceUIInputMap$javax_swing_JComponent$I$javax_swing_InputMap(this.editor, 2, null);
$I$(13).replaceUIActionMap$javax_swing_JComponent$javax_swing_ActionMap(this.editor, null);
});

Clazz_newMeth(C$, 'getComponent$',  function () {
return this.editor;
});

Clazz_newMeth(C$, 'installUI$javax_swing_JComponent',  function (jc) {
this.editor=jc;
this.textListener=Clazz_new_($I$(17,1).c$$swingjs_plaf_JSTextUI$javax_swing_text_JTextComponent,[this, this.editor]);
this.installDefaults$();
this.installDefaults2$();
this.installListeners$javax_swing_text_JTextComponent(this.editor);
this.installKeyboardActions$();
});

Clazz_newMeth(C$, 'uninstallUI$javax_swing_JComponent',  function (jc) {
this.uninstallDefaults$();
jc.removeAll$();
var lm=jc.getLayout$();
if (Clazz_instanceOf(lm, "javax.swing.plaf.UIResource")) {
jc.setLayout$java_awt_LayoutManager(null);
}this.uninstallKeyboardActions$();
this.uninstallListeners$javax_swing_text_JTextComponent(this.editor);
this.editor=null;
this.textListener=null;
});

Clazz_newMeth(C$, 'installListeners$javax_swing_text_JTextComponent',  function (b) {
var listener=this.textListener;
b.addMouseListener$java_awt_event_MouseListener(listener);
b.addKeyListener$java_awt_event_KeyListener(this.textListener);
b.addFocusListener$java_awt_event_FocusListener(listener);
b.addPropertyChangeListener$java_beans_PropertyChangeListener(listener);
b.addCaretListener$javax_swing_event_CaretListener(listener);
});

Clazz_newMeth(C$, 'uninstallListeners$javax_swing_text_JTextComponent',  function (b) {
var listener=this.textListener;
b.removeKeyListener$java_awt_event_KeyListener(this.textListener);
b.removeMouseListener$java_awt_event_MouseListener(listener);
b.removeFocusListener$java_awt_event_FocusListener(listener);
b.removePropertyChangeListener$java_beans_PropertyChangeListener(listener);
b.getDocument$().removeDocumentListener$javax_swing_event_DocumentListener(listener);
});

Clazz_newMeth(C$, 'updateRootView$',  function () {
});

Clazz_newMeth(C$, 'getMinimumSize$javax_swing_JComponent',  function (jc) {
var d=this.getPreferredSize$javax_swing_JComponent(jc);
return d;
});

Clazz_newMeth(C$, 'getRootView$javax_swing_text_JTextComponent',  function (tc) {
return this.rootView;
});

Clazz_newMeth(C$, 'create$javax_swing_text_Element',  function (elem) {
return null;
});

Clazz_newMeth(C$, 'getPreferredSize$javax_swing_JComponent',  function (c) {
if (!this.useRootView) return C$.superclazz.prototype.getPreferredSize$javax_swing_JComponent.apply(this, [c]);
var i=c.getInsets$();
var d=c.getSize$();
if ((d.width > (i.left + i.right)) && (d.height > (i.top + i.bottom)) ) {
this.rootView.setSize$F$F(d.width - i.left - i.right , d.height - i.top - i.bottom );
} else if (d.width == 0 && d.height == 0 ) {
this.rootView.setSize$F$F(2147483647, 2147483647);
}d.width=Long.$ival(Math.min$J$J(Long.$add(Clazz_toLong(this.rootView.getPreferredSpan$I(0)),i.left , i.right ), 2147483647));
d.height=Long.$ival(Math.min$J$J(Long.$add(Clazz_toLong(this.rootView.getPreferredSpan$I(1)),i.top , i.bottom ), 2147483647));
return d;
});

Clazz_newMeth(C$, 'getEditorKit$javax_swing_text_JTextComponent',  function (tc) {
return C$.defaultKit;
});

Clazz_newMeth(C$, 'handleEnter$',  function () {
return false;
});

Clazz_newMeth(C$, 'setEditable$Z',  function (editable) {
this.editable=editable;
if (this.focusNode == null ) return;
this.setEditableCSS$();
if (this.jc.isOpaque$()) {
var bg=this.getBackground$();
this.setBackgroundImpl$java_awt_Color(editable || !(Clazz_instanceOf(bg, "javax.swing.plaf.UIResource")) || this.inactiveBackground === this.colorUNKNOWN    ? bg : this.inactiveBackground);
}this.setCursor$();
});

Clazz_newMeth(C$, 'setEditableCSS$',  function () {
$I$(7).setAttr(this.focusNode, "readOnly", this.editable ? null : "\u79d8TRUE");
});

Clazz_newMeth(C$, 'getInactiveTextColor$java_awt_Color',  function (fg) {
return (!this.editor.isEnabled$() ? this.editor.getDisabledTextColor$() : !this.editor.isEditable$() ? this.inactiveForeground : fg);
});

Clazz_newMeth(C$, 'setCurrentText$',  function () {
return (this.editor.getDocument$() == null  ? null : (this.currentText=this.editor.getText$()));
});

Clazz_newMeth(C$, 'checkNewEditorTextValue$',  function () {
var val=this.getJSTextValue$();
if (val.equals$O(this.fixText$S(this.currentText))) return false;
this.editor.setTextFromUI$S(val);
this.setCurrentText$();
return true;
});

Clazz_newMeth(C$, 'setJSText$',  function () {
this.charMap=null;
this.updateDOMNode$();
});

Clazz_newMeth(C$, 'focus$',  function () {
if (!this.editor.isEditable$() || !C$.superclazz.prototype.focus$.apply(this, []) ) return false;
if (this.haveFocus$()) {
} else {
this.updateJSCursor$S("focus");
}return true;
});

Clazz_newMeth(C$, 'haveFocus$',  function () {
return $I$(8).jquery.contains(this.focusNode, document.activeElement ||null);
});

Clazz_newMeth(C$, 'updateJSCursor$S',  function (why) {
if (this.domNode == null  || this.editor.getDocument$() == null   || this.editor.getText$().length$() == 0 ) return;
if (this.isAWT && why !== "focus"   && why !== "default"  ) return;
var start=this.editor.getCaret$().getMark$();
var end=this.editor.getCaret$().getDot$();
this.setJSSelection$I$I$Z(start, end, start == end && why === "default"  );
});

Clazz_newMeth(C$, 'setJSSelection$I$I$Z',  function (mark, dot, andScroll) {
var r1=this.getJSNodePt$swingjs_api_js_DOMNode$I$OA$I(this.focusNode, mark, null, 0);
var r2=(r1 == null  || dot == mark  ? r1 : this.getJSNodePt$swingjs_api_js_DOMNode$I$OA$I(this.focusNode, dot, null, 0));
if (r1 != null  && r2 != null  ) this.jsSelect$OA$OA$Z(r1, r2, andScroll);
});

Clazz_newMeth(C$, 'getJSNodePt$swingjs_api_js_DOMNode$I$OA$I',  function (node, pt, lastRange, level) {
{
return [null, pt];
}
});

Clazz_newMeth(C$, 'jsSelect$OA$OA$Z',  function (r1, r2, andScroll) {
this.setJSMarkAndDot$I$I$Z(r1[1] ||0, r2[1] ||0, andScroll);
});

Clazz_newMeth(C$, 'setJSMarkAndDot$I$I$Z',  function (mark, dot, andScroll) {
try {
this.focusNode.setSelectionRange(Math.min(mark, dot), Math.max(mark, dot), (mark == dot ? "none" : mark < dot ? "forward" : "backward"));
} catch (e) {
}
});

Clazz_newMeth(C$, 'getJSMarkAndDot$java_awt_Point$I',  function (pt, keyCode) {
var node=this.focusNode;
var start=node.selectionStart ||0;
var end=node.selectionEnd ||1;
pt.x=start;
pt.y=end;
return true;
});

Clazz_newMeth(C$, 'checkAllowEvent$O',  function (jQueryEvent) {
var b=true;
var checkEditable=false;
var type=jQueryEvent.type ||"";
switch (type) {
case "drop":
checkEditable=true;
break;
case "focusout":
case "dragover":
break;
case "keydown":
case "keypress":
case "keyup":
var isCTRL=jQueryEvent.ctrlKey ||false;
switch (jQueryEvent.keyCode ||0) {
case 86:
if (!isCTRL) return null;
p$1.allowKeyEvent$O.apply(this, [jQueryEvent]);
if (type === "keydown" ) this.handleCtrlV$I(401);
 else if (type === "keyup" ) this.handleCtrlV$I(402);
return Boolean.valueOf$Z(true);
case 65:
return null;
case 67:
if (!isCTRL) return null;
p$1.allowKeyEvent$O.apply(this, [jQueryEvent]);
return Boolean.valueOf$Z(true);
case 9:
return this.handleTab$O$S(jQueryEvent, type);
case 38:
case 40:
return null;
case 33:
case 34:
case 36:
case 35:
case 37:
case 39:
case 224:
case 225:
case 226:
case 227:
return (jQueryEvent.altKey ||isCTRL ? Boolean.valueOf$Z(false) : null);
default:
checkEditable=true;
break;
}
break;
default:
return null;
}
if (checkEditable) {
if (this.editor.isEditable$() && !(Clazz_instanceOf(this.editor.getDocument$(), "javax.swing.text.html.HTMLDocument")) ) return null;
b=false;
}return Boolean.valueOf$Z(b);
});

Clazz_newMeth(C$, 'allowKeyEvent$O',  function (jQueryEvent) {

jQueryEvent.originalEvent.xallowKeyEvent = true;
}, p$1);

Clazz_newMeth(C$, 'handleCtrlV$I',  function (mode) {
switch (mode) {
case 401:
break;
case 402:
var val=this.getJSTextValue$();
var pt=Clazz_new_($I$(3,1));
this.getJSMarkAndDot$java_awt_Point$I(pt, 0);
this.editor.setTextFromUI$S(val);
this.setJSMarkAndDot$I$I$Z(pt.x, pt.x, false);
this.setJavaMarkAndDot$java_awt_Point(pt);
break;
}
return true;
});

Clazz_newMeth(C$, 'handleTab$O$S',  function (jQueryEvent, type) {
return (type === "keydown"  ? null : Boolean.valueOf$Z(false));
});

Clazz_newMeth(C$, 'viewToModel$javax_swing_text_JTextComponent$java_awt_Point$javax_swing_text_Position_BiasA',  function (t, pt, biasReturn) {
if (pt.x == 2147483647) {
this.getJSMarkAndDot$java_awt_Point$I(pt, 0);
return pt.y;
}if (this.charMap == null ) p$1.createCharMap.apply(this, []);
for (var n=this.charMap.size$(), i=n; --i >= 0; ) {
var p=this.charMap.get$I(i);
if (p.y < pt.y  && p.x < pt.x  ) return (i == n - 1 ? i - 1 : i);
}
return 0;
});

Clazz_newMeth(C$, 'createCharMap',  function () {
this.charMap=Clazz_new_($I$(18,1));
var s=this.editor.getText$();
var x=0;
var y=0;
var fm=this.editor.getFont$().getFontMetrics$();
var tabWidth=fm.stringWidth$S("    ");
var h=fm.getHeight$();
var line0=0;
var ntab=0;
for (var i=0; i < s.length$(); i++) {
this.charMap.add$O(Clazz_new_($I$(19,1).c$$D$D,[x, y]));
var c=s.charAt$I(i);
switch (c.$c()) {
case 10:
y+=h;
x=0;
ntab=0;
line0=i + 1;
break;
case 9:
x+=tabWidth;
++ntab;
break;
default:
var r=fm.getStringBounds$S$I$I$java_awt_Graphics(s, line0, i + 1, null);
x=r.getWidth$() + ntab * tabWidth;
break;
}
}
this.charMap.add$O(Clazz_new_($I$(19,1).c$$D$D,[x, y]));
this.charMap.add$O(Clazz_new_($I$(19,1).c$$D$D,[0, y + h]));
}, p$1);

Clazz_newMeth(C$, 'setJavaMarkAndDot$java_awt_Point',  function (markDot) {
var mark=markDot.x;
var dot=markDot.y;
var c=this.editor.getCaret$();
if (c.getMark$() == mark && c.getDot$() == dot ) return;
if (c.getMark$() != mark) c.setDot$I(mark);
if (c.getDot$() != dot) c.moveDot$I(dot);
});

Clazz_newMeth(C$, 'getNewCaretPosition$I$I',  function (eventType, keyCode) {
var pt=C$.markDot;
pt.x=0;
this.getJSMarkAndDot$java_awt_Point$I(pt, keyCode);
var mark=pt.x;
var dot=pt.y;
var oldMark=this.editor.getCaret$().getMark$();
var oldDot=this.editor.getCaret$().getDot$();
if (dot != mark && oldMark == dot ) {
dot=mark;
mark=oldMark;
}pt.x=(dot == oldDot && mark == oldMark  ? -2147483648 : mark);
pt.y=dot;
return pt;
});

Clazz_newMeth(C$, 'caretUpdatedByProgram$javax_swing_event_CaretEvent',  function (e) {
});

Clazz_newMeth(C$, 'getVisibleEditorRect$',  function () {
var alloc=this.editor.getBounds$();
if ((alloc.width > 0) && (alloc.height > 0) ) {
alloc.x=alloc.y=0;
var insets=this.editor.getInsets$();
alloc.x+=insets.left;
alloc.y+=insets.top;
alloc.width-=insets.left + insets.right;
alloc.height-=insets.top + insets.bottom;
return alloc;
}return null;
});

Clazz_newMeth(C$, 'modelToView$javax_swing_text_JTextComponent$I',  function (tc, pos) {
return this.modelToView$javax_swing_text_JTextComponent$I$javax_swing_text_Position_Bias(tc, pos, $I$(5).Forward);
});

Clazz_newMeth(C$, 'modelToView$javax_swing_text_JTextComponent$I$javax_swing_text_Position_Bias',  function (tc, pos, bias) {
var alloc=this.getVisibleEditorRect$();
return alloc;
});

Clazz_newMeth(C$, 'viewToModel$javax_swing_text_JTextComponent$java_awt_Point',  function (tc, pt) {
return this.viewToModel$javax_swing_text_JTextComponent$java_awt_Point$javax_swing_text_Position_BiasA(tc, pt, C$.discardBias);
});

Clazz_newMeth(C$, 'getNextVisualPositionFrom$javax_swing_text_JTextComponent$I$javax_swing_text_Position_Bias$I$javax_swing_text_Position_BiasA',  function (t, pos, b, direction, biasRet) {
var dot=this.editor.getCaretPosition$();
switch (direction) {
case 5:
dot=this.editor.getText$().indexOf$I$I("\n", dot + 1);
if (dot >= 0) return dot;
dot=2147483647;
case 3:
var len=this.editor.getDocument$().getLength$() - (this.isEditorPane ? 0 : 1);
dot=(dot >= len ? len : ++dot);
return dot;
case 1:
dot=this.editor.getText$().lastIndexOf$I$I("\n", dot - 1);
if (dot >= 0) return dot;
dot=-1;
case 7:
return (dot <= 0 ? 0 : --dot);
}
return -1;
});

Clazz_newMeth(C$, 'getKeymapName$',  function () {
var nm=this.getClass$().getName$();
var index=nm.lastIndexOf$I(".");
if (index >= 0) {
nm=nm.substring$I$I(index + 1, nm.length$());
}return nm;
});

Clazz_newMeth(C$, 'isFocusable$',  function () {
return true;
});

Clazz_newMeth(C$, 'action$S$I',  function (what, data) {
});

Clazz_newMeth(C$, 'setCaretFromJS$',  function () {
var pt=Clazz_new_($I$(3,1));
this.getJSMarkAndDot$java_awt_Point$I(pt, 0);
this.setJavaMarkAndDot$java_awt_Point(pt);
});

Clazz_newMeth(C$, 'setOverflow$',  function () {
if (this.textNode == null ) return;
var scroller=this.jc.getParent$();
if (this.isAWT) {
scroller=this.jc;
} else if (!(Clazz_instanceOf(scroller, "javax.swing.JViewport")) || !(Clazz_instanceOf((scroller=scroller.getParent$()), "javax.swing.JScrollPane")) ) {
$I$(7).setStyles(this.domNode, ["overflow", "hidden", "overflow-x", null, "overflow-y", null]);
return;
}var sp=scroller;
$I$(7).setStyle(this.domNode, "overflow", null);
$I$(7,"setStyle",[this.domNode, "overflow-x", C$.overflows[sp.getHorizontalScrollBarPolicy$() % 10]]);
$I$(7,"setStyle",[this.domNode, "overflow-y", C$.overflows[sp.getVerticalScrollBarPolicy$() % 10]]);
});

C$.$static$=function(){C$.$static$=0;
C$.defaultKit=Clazz_new_($I$(2,1));
C$.overflows=Clazz_array(String, -1, ["auto", "hidden", "scroll"]);
C$.markDot=Clazz_new_($I$(3,1));
C$.textCursor=Clazz_new_($I$(4,1).c$$I,[2]);
C$.discardBias=Clazz_array($I$(5), [1]);
};
;
(function(){/*c*/var C$=Clazz_newClass(P$.JSTextUI, "RootView", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'javax.swing.text.View');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['view','javax.swing.text.View']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.superclazz.c$$javax_swing_text_Element.apply(this,[null]);C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'getDocument$',  function () {
return this.b$['swingjs.plaf.JSTextUI'].editor.getDocument$();
});

Clazz_newMeth(C$, 'getStartOffset$',  function () {
if (this.view != null ) {
return this.view.getStartOffset$();
}return this.getElement$().getStartOffset$();
});

Clazz_newMeth(C$, 'getEndOffset$',  function () {
if (this.view != null ) {
return this.view.getEndOffset$();
}return this.getElement$().getEndOffset$();
});

Clazz_newMeth(C$, 'getElement$',  function () {
if (this.view != null ) {
return this.view.getElement$();
}return this.b$['swingjs.plaf.JSTextUI'].editor.getDocument$().getDefaultRootElement$();
});

Clazz_newMeth(C$, 'setSize$F$F',  function (width, height) {
if (this.view != null ) {
this.view.setSize$F$F(width, height);
}});

Clazz_newMeth(C$, 'getContainer$',  function () {
return this.b$['swingjs.plaf.JSTextUI'].editor;
});

Clazz_newMeth(C$, 'setView$javax_swing_text_View',  function (v) {
var oldView=this.view;
this.view=null;
if (oldView != null ) {
oldView.setParent$javax_swing_text_View(null);
}if (v != null ) {
v.setParent$javax_swing_text_View(this);
}this.view=v;
});

Clazz_newMeth(C$, 'getAttributes$',  function () {
return null;
});

Clazz_newMeth(C$, 'getPreferredSpan$I',  function (axis) {
switch (axis) {
case 0:
return (this.view == null  ? 10 : this.view.getPreferredSpan$I(axis));
default:
case 1:
var area=this.b$['swingjs.plaf.JSTextUI'].editor;
var h=this.b$['swingjs.plaf.JSComponentUI'].getFont$.apply(this.b$['swingjs.plaf.JSComponentUI'], []).getFontMetrics$().getHeight$();
var r=area.getRows$();
return h * (r > 0 ? r : this.b$['swingjs.plaf.JSTextUI'].isAWT ? 10 : 6);
}
});

Clazz_newMeth(C$, 'getMinimumSpan$I',  function (axis) {
if (this.view != null ) {
return this.view.getMinimumSpan$I(axis);
}return 10;
});

Clazz_newMeth(C$, 'getMaximumSpan$I',  function (axis) {
return 2147483647;
});

Clazz_newMeth(C$, 'preferenceChanged$javax_swing_text_View$Z$Z',  function (child, width, height) {
this.b$['swingjs.plaf.JSTextUI'].editor.revalidate$();
});

Clazz_newMeth(C$, 'getAlignment$I',  function (axis) {
if (this.view != null ) {
return this.view.getAlignment$I(axis);
}return 0;
});

Clazz_newMeth(C$, 'paint$java_awt_Graphics$java_awt_Shape',  function (g, allocation) {
if (this.view != null ) {
var alloc=(Clazz_instanceOf(allocation, "java.awt.Rectangle")) ? allocation : allocation.getBounds$();
this.setSize$F$F(alloc.width, alloc.height);
this.view.paint$java_awt_Graphics$java_awt_Shape(g, allocation);
}});

Clazz_newMeth(C$, 'setParent$javax_swing_text_View',  function (parent) {
throw Clazz_new_($I$(1,1).c$$S,["Can\'t set parent on root view"]);
});

Clazz_newMeth(C$, 'getViewCount$',  function () {
return 1;
});

Clazz_newMeth(C$, 'getView$I',  function (n) {
return this.view;
});

Clazz_newMeth(C$, 'getViewIndex$I$javax_swing_text_Position_Bias',  function (pos, b) {
return 0;
});

Clazz_newMeth(C$, 'getChildAllocation$I$java_awt_Shape',  function (index, a) {
return a;
});

Clazz_newMeth(C$, 'modelToView$I$java_awt_Shape$javax_swing_text_Position_Bias',  function (pos, a, b) {
return null;
});

Clazz_newMeth(C$, 'viewToModel$F$F$java_awt_Shape$javax_swing_text_Position_BiasA',  function (x, y, a, biasReturn) {
return 0;
});
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JSTextUI, "TextActionWrapper", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'javax.swing.text.TextAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.action=null;
},1);

C$.$fields$=[['O',['action','javax.swing.text.TextAction']]]

Clazz_newMeth(C$, 'c$$javax_swing_text_TextAction',  function (action) {
;C$.superclazz.c$$S.apply(this,[action.getValue$S("Name")]);C$.$init$.apply(this);
this.action=action;
}, 1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.action.actionPerformed$java_awt_event_ActionEvent(e);
});

Clazz_newMeth(C$, 'isEnabled$',  function () {
return (this.b$['swingjs.plaf.JSTextUI'].editor == null  || this.b$['swingjs.plaf.JSTextUI'].editor.isEditable$() ) ? this.action.isEnabled$() : false;
});

Clazz_newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz_newClass(P$.JSTextUI, "FocusAction", function(){
Clazz_newInstance(this, arguments[0],true,C$);
}, 'javax.swing.AbstractAction');

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

Clazz_newMeth(C$, 'actionPerformed$java_awt_event_ActionEvent',  function (e) {
this.b$['swingjs.plaf.JSTextUI'].editor.requestFocus$();
});

Clazz_newMeth(C$, 'isEnabled$',  function () {
return this.b$['swingjs.plaf.JSTextUI'].editor.isEditable$();
});

Clazz_newMeth(C$);
})()

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:15:00 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.plaf.JSComponentUI','swingjs.api.js.DOMNode']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "JSWindowUI", null, 'swingjs.plaf.JSComponentUI', ['java.awt.peer.WindowPeer', 'java.awt.event.WindowListener', 'java.awt.event.ComponentListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.defaultWidth=400;
this.defaultHeight=400;
},1);

C$.$fields$=[['Z',['isFrame','isDialog','isPopup'],'I',['z','defaultWidth','defaultHeight'],'O',['frameNode','swingjs.api.js.DOMNode','+titleBarNode','+titleNode','+closerNode','+layerNode','w','javax.swing.JWindow','window','java.awt.Window','font','java.awt.Font','modalNode','swingjs.api.js.DOMNode']]]

Clazz_newMeth(C$, 'setFrame$java_awt_Window$Z',  function (target, isFrame) {
this.window=target;
this.w=this.window;
this.isFrame=isFrame;
this.isContainer=this.isWindow=true;
var viewer=this.jc.秘appletViewer;
this.applet=viewer.html5Applet;
return this;
});

Clazz_newMeth(C$, 'updateDOMNode$',  function () {
if (this.domNode == null ) {
this.containerNode=this.domNode=$I$(1,"newDOMObject$S$S$SA",["div", this.id, Clazz_array(String, -1, [])]);
this.setWindowClass$();
this.bindWindowEvents$();
}return this.domNode;
});

Clazz_newMeth(C$, 'setWindowClass$',  function () {
this.addClass$swingjs_api_js_DOMNode$S(this.domNode, "swingjs-window");
this.setZ$I(this.z);
});

Clazz_newMeth(C$, 'toFront$',  function () {
if (this.jc.秘isDesktop$()) {
this.jc.requestFocus$();
return;
}this.z=this.J2S.setWindowZIndex(this.domNode, 2147483647);
this.setZ$I(this.z);
if (this.modalNode != null ) $I$(2).setZ(this.modalNode, this.z - 1);
});

Clazz_newMeth(C$, 'toBack$',  function () {
this.z=this.J2S.setWindowZIndex(this.domNode, -2147483648);
this.setZ$I(this.z);
if (this.modalNode != null ) $I$(2).setZ(this.modalNode, this.z - 1);
});

Clazz_newMeth(C$, 'updateAlwaysOnTopState$',  function () {
});

Clazz_newMeth(C$, 'updateFocusableWindowState$',  function () {
System.out.println$S("JSWindow updateFocusable");
});

Clazz_newMeth(C$, 'requestWindowFocus$',  function () {
return false;
});

Clazz_newMeth(C$, 'setModalBlocked$java_awt_Dialog$Z',  function (blocker, blocked) {
this.modalBlocked=blocked;
});

Clazz_newMeth(C$, 'setModalBlocked$java_awt_JSDialog$Z',  function (blocker, blocked) {
this.modalBlocked=blocked;
});

Clazz_newMeth(C$, 'updateMinimumSize$',  function () {
});

Clazz_newMeth(C$, 'updateIconImages$',  function () {
});

Clazz_newMeth(C$, 'setOpacity$F',  function (opacity) {
});

Clazz_newMeth(C$, 'setOpaque$Z',  function (isOpaque) {
});

Clazz_newMeth(C$, 'updateWindow$java_awt_image_BufferedImage',  function (backBuffer) {
});

Clazz_newMeth(C$, 'repositionSecurityWarning$',  function () {
});

Clazz_newMeth(C$, 'dispose$',  function () {
this.J2S.unsetMouse(this.domNode);
if (this.modalNode != null ) $I$(2).dispose(this.modalNode);
C$.superclazz.prototype.dispose$.apply(this, []);
});

Clazz_newMeth(C$, 'beginValidate$',  function () {
if (this.isDisposed) {
C$.setChildVisibilities$javax_swing_JComponent(this.window);
}});

Clazz_newMeth(C$, 'endValidate$',  function () {
if (this.isDisposed) {
this.undisposeUI$swingjs_api_js_DOMNode(null);
this.bindWindowEvents$();
this.isDisposed=false;
}});

Clazz_newMeth(C$, 'bindWindowEvents$',  function () {
this.setJ2sMouseHandler$();
this.setDraggableEvents$();
this.addJQueryFocusCallbacks$();
if (this.closerNode != null ) this.bindJQueryEvents$swingjs_api_js_DOMNode$S$I(this.closerNode, "click pointerup pointerenter pointerout mouseup mouseenter mouseout", -1);
});

Clazz_newMeth(C$, 'setDraggableEvents$',  function () {
});

Clazz_newMeth(C$, 'setChildVisibilities$javax_swing_JComponent',  function (jc) {
for (var i=jc.getComponentCount$(); --i >= 0; ) {
var c=jc.getComponent$I(i);
C$.setChildVisibilities$javax_swing_JComponent(c);
}
var ui=jc.ui;
if (jc.isVisible$()) ui.setVisible$Z(true);
}, 1);

Clazz_newMeth(C$, 'getInsets$',  function () {
return $I$(1).zeroInsets;
});

Clazz_newMeth(C$, 'setVisible$Z',  function (b) {
if (!this.isPopup) {
$I$(1).hideMenusAndToolTip$();
}C$.superclazz.prototype.setVisible$Z.apply(this, [b]);
this.toFront$();
});

Clazz_newMeth(C$, 'windowOpened$java_awt_event_WindowEvent',  function (e) {
this.setComponentFocus$();
});

Clazz_newMeth(C$, 'windowClosing$java_awt_event_WindowEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'windowClosed$java_awt_event_WindowEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'windowIconified$java_awt_event_WindowEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'windowDeiconified$java_awt_event_WindowEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'windowActivated$java_awt_event_WindowEvent',  function (e) {
});

Clazz_newMeth(C$, 'windowDeactivated$java_awt_event_WindowEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'componentResized$java_awt_event_ComponentEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'componentMoved$java_awt_event_ComponentEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'componentShown$java_awt_event_ComponentEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$, 'componentHidden$java_awt_event_ComponentEvent',  function (e) {
$I$(1).hideMenusAndToolTip$();
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:15:01 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),p$1={},I$=[[0,'swingjs.JSUtil','swingjs.api.js.DOMNode','swingjs.api.js.JSFunction','swingjs.api.js.JSInterface','java.awt.Rectangle','java.awt.Color','java.awt.Dimension']],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "Resizer");

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
this.offsetx=-4;
this.offsety=-4;
this.minSize=10;
this.enabled=true;
this.allowResize=true;
},1);

C$.$fields$=[['Z',['enabled','allowResize'],'I',['offsetx','offsety','minSize','titleHeight'],'O',['rootPane','javax.swing.JRootPane','resizer','swingjs.api.js.DOMNode','+rootNode','+rubberBand','jframe','javax.swing.JFrame','rpc','javax.swing.RootPaneContainer']]]

Clazz_newMeth(C$, 'c$',  function () {
;C$.$init$.apply(this);
}, 1);

Clazz_newMeth(C$, 'set$swingjs_JSFrameViewer$javax_swing_RootPaneContainer',  function (viewer, top) {
this.rpc=top;
this.rootPane=this.rpc.getRootPane$();
this.titleHeight=viewer.getInsets$().top;
if (viewer.isApplet) {
this.rootNode=viewer.getDiv$S("appletdiv");
} else {
this.jframe=this.rpc;
this.rootNode=(this.jframe.getUI$()).getDOMNode$();
}return (this.rootNode == null  ? null : this);
});

Clazz_newMeth(C$, 'show$',  function () {
if (!this.allowResize || !this.enabled ) return;
if (this.resizer == null ) p$1.createAndShowResizer.apply(this, []);
 else $I$(1).jQuery.$(this.resizer).show();
this.setPosition$I$I(0, 0);
});

Clazz_newMeth(C$, 'hide$',  function () {
$I$(1).jQuery.$(this.resizer).hide();
});

Clazz_newMeth(C$, 'setMin$I',  function (min) {
this.minSize=min;
});

Clazz_newMeth(C$, 'createAndShowResizer',  function () {
var id=this.rootPane.秘htmlName + "_resizer";
this.resizer=$I$(2).createElement("div", id);
$I$(2).setSize(this.resizer, 10, 10);
$I$(2).setStyles(this.resizer, ["background-color", "red", "opacity", "0", "cursor", "nwse-resize"]);
$I$(1).jQuery.$(this.resizer).addClass("swingjs-resizer");
this.rubberBand=$I$(2).createElement("div", id + "_rb");
$I$(2).setStyles(this.rubberBand, ["border", "1px dashed #FF00FF", "z-index", "100000", "position", "absolute", "left", "0px", "top", "0px", "display", "none"]);
this.rootNode.appendChild(this.resizer);
this.rootNode.appendChild(this.rubberBand);
var fHandleResizer=null;
var fHandleDOMResize=null;
var me=this;
{
fHandleResizer = function(xyev,type){me.fHandleResizer$I$I$I( xyev.dx, xyev.dy,type)};
}
$I$(1).J2S.setDraggable(this.resizer, Clazz_array($I$(3), -1, [fHandleResizer]));
$I$(1).jQuery.$(this.rootNode).resize(fHandleDOMResize);
}, p$1);

Clazz_newMeth(C$, 'setPosition$I$I',  function (dw, dh) {
var r=p$1.getFrameOffset$I$I.apply(this, [dw, dh]);
$I$(2).setTopLeftAbsolute(this.resizer, r.height + this.offsety, r.width + this.offsetx);
$I$(2).setSize(this.rubberBand, r.width, r.height);
});

Clazz_newMeth(C$, 'getDOMNode$',  function () {
return this.resizer;
});

Clazz_newMeth(C$, 'fHandleResizer$I$I$I',  function (dx, dy, type) {
if (!this.enabled || !this.allowResize ) return;
switch (type) {
case 503:
break;
case 501:
$I$(2).setStyle(this.resizer, "background-color", "green");
$I$(2).setVisible(this.rubberBand, true);
$I$(4).setCursor("nwse-resize");
break;
case 506:
this.setPosition$I$I(dx, dy);
break;
case 502:
$I$(2).setStyle(this.resizer, "background-color", "red");
$I$(2).setVisible(this.rubberBand, false);
$I$(4).setCursor("auto");
this.fHandleDOMResize$O$I$I(null, dx, dy);
}
});

Clazz_newMeth(C$, 'fHandleDOMResize$O$I$I',  function (event, dw, dh) {
var r;
if (!this.enabled) return;
if (event == null ) {
r=p$1.getFrameOffset$I$I.apply(this, [dw, dh]);
} else {
$I$(2,"getCSSRectangle",[this.rootNode, r=Clazz_new_($I$(5,1))]);
}if (this.jframe == null ) {
this.rootPane.getGraphics$().setColor$java_awt_Color($I$(6).WHITE);
this.rootPane.getGraphics$().fillRect$I$I$I$I(0, 0, r.width, r.height);
(this.rootPane.getParent$()).resizeHTML$I$I(r.width, r.height);
} else {
this.jframe.setPreferredSize$java_awt_Dimension(Clazz_new_($I$(7,1).c$$I$I,[r.width, r.height]));
this.jframe.invalidateTree$();
this.jframe.repackContainer$();
if (Clazz_instanceOf(this.jframe, "javax.swing.JInternalFrame")) {
try {
(this.jframe).setSelected$Z(true);
} catch (e) {
if (Clazz_exceptionOf(e,"java.beans.PropertyVetoException")){
} else {
throw e;
}
}
} else {
this.jframe.toFront$();
}}this.setPosition$I$I(0, 0);
});

Clazz_newMeth(C$, 'getFrameOffset$I$I',  function (dw, dh) {
var r=(this.rpc).getBounds$();
if (r.width + dw > this.minSize) r.width+=dw;
if (r.height + dh > this.minSize) r.height+=dh;
return r;
}, p$1);

Clazz_newMeth(C$, 'setAllowResize$Z',  function (b) {
this.allowResize=b;
});

Clazz_newMeth(C$, 'setEnabled$Z',  function (b) {
this.enabled=b;
if (b) this.show$();
 else this.hide$();
});
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:15:01 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

(function(){var P$=Clazz_newPackage("swingjs.plaf"),I$=[[0,'swingjs.JSMouse','swingjs.plaf.JSComponentUI','javax.swing.FocusManager','java.awt.Point']],I$0=I$[0],$I$=function(i,n){return((i=(I$[i]||(I$[i]=Clazz_load(I$0[i])))),!n&&i.$load$&&Clazz_load(i,2),i)};
/*c*/var C$=Clazz_newClass(P$, "TextListener", null, null, ['java.awt.event.KeyListener', 'java.awt.event.FocusListener', 'javax.swing.event.ChangeListener', 'java.beans.PropertyChangeListener', 'javax.swing.event.DocumentListener', 'javax.swing.event.CaretListener', 'java.awt.event.MouseListener']);

C$.$clinit$=2;

Clazz_newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['Z',['haveDocument','working'],'I',['lastKeyEvent'],'O',['txtComp','javax.swing.text.JTextComponent','ui','swingjs.plaf.JSTextUI']]]

Clazz_newMeth(C$, 'c$$swingjs_plaf_JSTextUI$javax_swing_text_JTextComponent',  function (ui, txtComp) {
;C$.$init$.apply(this);
this.txtComp=txtComp;
this.ui=ui;
}, 1);

Clazz_newMeth(C$, 'checkDocument$',  function () {
if (!this.haveDocument && this.txtComp.getDocument$() != null  ) {
this.haveDocument=true;
this.txtComp.getDocument$().addDocumentListener$javax_swing_event_DocumentListener(this);
}});

Clazz_newMeth(C$, 'propertyChange$java_beans_PropertyChangeEvent',  function (e) {
var prop=e.getPropertyName$();
switch (prop) {
case "font":
case "foreground":
case "preferredSize":
var txtComp=e.getSource$();
(txtComp.getUI$()).propertyChangedFromListener$java_beans_PropertyChangeEvent$S(e, prop);
break;
case "editable":
this.ui.setEditable$Z((e.getNewValue$()).booleanValue$());
break;
case "document":
case "lineWrap":
if (e.getNewValue$() != null ) this.ui.updateRootView$();
break;
}
});

Clazz_newMeth(C$, 'stateChanged$javax_swing_event_ChangeEvent',  function (e) {
var txtComp=e.getSource$();
txtComp.秘repaint$();
});

Clazz_newMeth(C$, 'focusGained$java_awt_event_FocusEvent',  function (e) {
});

Clazz_newMeth(C$, 'focusLost$java_awt_event_FocusEvent',  function (e) {
});

Clazz_newMeth(C$, 'handleJSTextEvent$swingjs_plaf_JSTextUI$I$O',  function (ui, eventType, jqevent) {
var activeElement=(document.activeElement ||null);
if (activeElement !== ui.domNode ) return;
eventType=$I$(1).fixEventType$O$I(jqevent, eventType);
var keyCode=jqevent.keyCode ||0;
var markDot=ui.getNewCaretPosition$I$I(eventType, keyCode);
var mark=markDot.x;
var dot=markDot.y;
var setCaret=(mark != -2147483648);
switch (eventType) {
case 400:
break;
case 401:
if (keyCode == 13 || keyCode == 10 ) {
ui.handleEnter$();
} else if (keyCode != 8) {
setCaret=false;
}if (this.lastKeyEvent != 400) break;
case 402:
this.working=true;
if (ui.checkNewEditorTextValue$()) {
if (dot >= 0) {
ui.setJSMarkAndDot$I$I$Z(dot, dot, false);
setCaret=false;
}}this.working=false;
break;
}
this.lastKeyEvent=eventType;
if (setCaret) ui.setJavaMarkAndDot$java_awt_Point(markDot);
$I$(2).setIgnoreEvent$O(jqevent);
});

Clazz_newMeth(C$, 'insertUpdate$javax_swing_event_DocumentEvent',  function (e) {
if (!this.working) this.ui.setJSText$();
});

Clazz_newMeth(C$, 'removeUpdate$javax_swing_event_DocumentEvent',  function (e) {
if (!this.working) this.ui.setJSText$();
});

Clazz_newMeth(C$, 'changedUpdate$javax_swing_event_DocumentEvent',  function (e) {
if (!this.working) {
var c=$I$(3).getCurrentManager$().getFocusOwner$();
this.ui.setJSText$();
var p=e.getOffset$() + e.getLength$();
this.ui.setJavaMarkAndDot$java_awt_Point(Clazz_new_($I$(4,1).c$$I$I,[p, p]));
}});

Clazz_newMeth(C$, 'caretUpdate$javax_swing_event_CaretEvent',  function (e) {
this.ui.caretUpdatedByProgram$javax_swing_event_CaretEvent(e);
});

Clazz_newMeth(C$, 'keyTyped$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'keyPressed$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'keyReleased$java_awt_event_KeyEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseClicked$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mousePressed$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseReleased$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$, 'mouseEntered$java_awt_event_MouseEvent',  function (e) {
this.ui.setCursor$();
});

Clazz_newMeth(C$, 'mouseExited$java_awt_event_MouseEvent',  function (e) {
});

Clazz_newMeth(C$);
})();
;Clazz_setTVer('5.0.1-v4');//Created 2024-12-20 12:15:01 Java2ScriptVisitor version 5.0.1-v4 net.sf.j2s.core.jar version 5.0.1-v4

})(Clazz,Clazz.setTVer,Clazz.toLong,Clazz.incrAN,Clazz.array,Clazz.assert,Clazz.clone,Clazz.exceptionOf,Clazz.forName,Clazz.getClass,Clazz.instanceOf,Clazz.load,Clazz.new_,Clazz.newClass,Clazz.newEnumConst,Clazz.newInstance,Clazz.newInterface,Clazz.newMeth,Clazz.newPackage,Clazz.super_);
